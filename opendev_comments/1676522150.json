{"openstack%2Fmurano~master~Ia800fd87df5cb95f95c6758df2dd20060bef62d6": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:51:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-muranoclient~master~I235304023ed14354cc0bcdebc674231b60766889": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:54:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmasakari-monitors~master~Ie7ac02e79712533f629794d4de50ca3ee27eed62": {"owner_id": 23317, "owner_name": "ShangXiao", "owner_email": "shangxiaobj@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2018-03-08 17:27:17.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26991, "name": "Louie Kwan", "email": "louie.kwan@windriver.com", "username": "lkwan"}], "comments": {}}, "openstack%2Fpython-solumclient~stable%2Fussuri~I4e921bbbcc7f73a85a19622e0305918c9b068016": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:52:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 1, "date": "2020-04-11 20:07:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-aodhclient~stable%2Fussuri~I57ea299e35c1e719ac698d44b46c4dfc2c04bd87": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-11 19:52:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-aodhclient~master~I5cc32223f76eef2c2e69271eb618044c5bf92f5c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:55:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-solumclient~stable%2Fussuri~Ic8f0166012fa0bc5c1bec4fb4f4808243607b774": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:51:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 1, "date": "2020-04-11 20:07:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-solumclient~master~I354f7ab53fc2b2d300c7b8ed97483b121efdebc9": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:51:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-pankoclient~master~I3e50be6bfeb63eeb3c68442de7b06ecc42783b93": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:55:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-pankoclient~stable%2Fussuri~Id432388e74452ebb5a8a32fda7e900d18b2a541a": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-11 19:51:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-pankoclient~master~Ic1cd7bd1427d09d53ac6ccd7fc5cfd77c3d2803e": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:55:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-pankoclient~stable%2Fussuri~Ib3abf108bac993884e911ebd269c87745c07dd09": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-11 19:51:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fceilometermiddleware~master~I601c11532c23cdccc8666218757f777045981158": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:55:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fceilometermiddleware~stable%2Fussuri~I889fc0e9ce5c995a88aa5eac3cb673567dedc8d0": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-11 19:52:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-muranoclient~master~Ie84c7a6364c09642e86c2e7996482920e0255820": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 00:54:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fnova~master~I51039c4c5817add873a289234ab79569d2520cb3": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:32:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:30:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Id41481d31761160b315df59c74ebecd0f992f7c3": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 10:11:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-09 20:53:12.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fcinder~master~I2550b00127ee2533b0ab12c4efb4927dbcaaa190": {"owner_id": 5997, "owner_name": "Walt", "owner_email": "waboring@hemna.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 19:23:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26250, "name": "Johannes Kulik", "email": "johannes.kulik@sap.com", "username": "jkulik"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21767, "name": "Srinivas", "email": "srinivasd@biarca.com", "username": "Srinivas"}, {"value": 2, "date": "2020-03-25 18:05:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 22495, "name": "Kaminario K2FC CI", "email": "cinder.fc.devops.CTR@kaminario.com", "username": "k2-fc"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/api/contrib/admin_actions.py": [{"author": {"_account_id": 26250, "name": "Johannes Kulik", "email": "johannes.kulik@sap.com", "username": "jkulik"}, "change_message_id": "2bbce68807422a55ce77f18ddfa1949a4bf53068", "unresolved": false, "patch_set": 4, "id": "1fa4df85_00431cb1", "line": 104, "updated": "2020-03-16 12:58:47.000000000", "message": "double \"here\"", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "eac086441cd964500bf25509042dab653fab2ee0", "unresolved": false, "patch_set": 4, "id": "1fa4df85_50ebf4da", "line": 104, "in_reply_to": "1fa4df85_00431cb1", "updated": "2020-03-18 18:19:04.000000000", "message": "Done", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}], "releasenotes/notes/reset-status-notification-update-4a80a8b5feb821ef.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "a35cd309b862fbd3d9363aaa032042384d52d261", "unresolved": false, "patch_set": 4, "id": "1fa4df85_81404837", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 6}, "updated": "2020-03-18 13:47:24.000000000", "message": "I think this should be removed. We don't need to call out an issue in the release notes if that issue has been fixed.", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "eac086441cd964500bf25509042dab653fab2ee0", "unresolved": false, "patch_set": 4, "id": "1fa4df85_301bd81b", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 6}, "in_reply_to": "1fa4df85_81404837", "updated": "2020-03-18 18:19:04.000000000", "message": "Done", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "a35cd309b862fbd3d9363aaa032042384d52d261", "unresolved": false, "patch_set": 4, "id": "1fa4df85_61450c43", "line": 11, "range": {"start_line": 11, "start_character": 35, "end_line": 11, "end_character": 50}, "updated": "2020-03-18 13:47:24.000000000", "message": "Since update is needed, would be good to format these with `` so it's more visible in the generated output that these are config option names.", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "eac086441cd964500bf25509042dab653fab2ee0", "unresolved": false, "patch_set": 4, "id": "1fa4df85_501694f3", "line": 11, "range": {"start_line": 11, "start_character": 35, "end_line": 11, "end_character": 50}, "in_reply_to": "1fa4df85_61450c43", "updated": "2020-03-18 18:19:04.000000000", "message": "Done", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "a2c5e1817a9ac256cb72cf392648bead402c3567", "unresolved": false, "patch_set": 4, "id": "1fa4df85_e13d7cdd", "line": 12, "range": {"start_line": 12, "start_character": 4, "end_line": 12, "end_character": 42}, "updated": "2020-03-18 14:31:17.000000000", "message": "volumeStatusUpdate and backupStatusUpdate", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "eac086441cd964500bf25509042dab653fab2ee0", "unresolved": false, "patch_set": 4, "id": "1fa4df85_f0d22034", "line": 12, "range": {"start_line": 12, "start_character": 4, "end_line": 12, "end_character": 42}, "in_reply_to": "1fa4df85_e13d7cdd", "updated": "2020-03-18 18:19:04.000000000", "message": "Done", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "a2c5e1817a9ac256cb72cf392648bead402c3567", "unresolved": false, "patch_set": 4, "id": "1fa4df85_44357ed9", "line": 19, "range": {"start_line": 19, "start_character": 68, "end_line": 19, "end_character": 74}, "updated": "2020-03-18 14:31:17.000000000", "message": "like all", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "eac086441cd964500bf25509042dab653fab2ee0", "unresolved": false, "patch_set": 4, "id": "1fa4df85_10d6dc28", "line": 19, "range": {"start_line": 19, "start_character": 68, "end_line": 19, "end_character": 74}, "in_reply_to": "1fa4df85_44357ed9", "updated": "2020-03-18 18:19:04.000000000", "message": "Done", "commit_id": "7209f8afe06356d43b18d81d24bc6b3e5fa48e81"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "19cca2e3eeb980a0ddd85b8284ccd5a7738bbe7f", "unresolved": false, "patch_set": 5, "id": "1fa4df85_c215cc4a", "line": 8, "range": {"start_line": 4, "start_character": 0, "end_line": 8, "end_character": 35}, "updated": "2020-03-19 14:08:01.000000000", "message": "I'd like to make this a bit more detailed, something like:\n\n  In this release, sending ``os-reset_status`` notifications to the following *nonstandard* publisher_ids is DEPRECATED:\n\n  * 'volumeStatusUpdate' for volume status resets\n  * 'volumeStatusUpdate' for snapshot status resets\n  * 'backupStatusUpdate' for backup status resets\n\n  The notifications continue to be published to the above during the deprecation period.  Beginning with this release, the ``os-reset_status`` notifications are also sent to the following *standard* publisher_ids:\n\n  * 'volume' for volume status resets   \n  * 'snapshot' for snapshot status resets \n  * 'backup' for backup status resets\n\n  This will allow consumers of these notifications to make a smooth transition.  In the Victoria release, ``os-reset_status`` notifications will *only* be sent to the standard publisher_ids.\n\n(This interface isn't cooperating.  Even though you can't see them, don't forget to make sure there's a blank line before the bulleted lists, otherwise they won't render correctly.)", "commit_id": "e7490637bc7216ef876cc4d62a60646570ffbe81"}, {"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "bbd9a09169d6b81a922e782b100f9142967e0dba", "unresolved": false, "patch_set": 5, "id": "df33271e_e8c6a349", "line": 8, "range": {"start_line": 4, "start_character": 0, "end_line": 8, "end_character": 35}, "in_reply_to": "1fa4df85_c215cc4a", "updated": "2020-03-25 15:35:47.000000000", "message": "I think I got this in correctly.   It's hard to get the formatting right.   Anyway, I have a new rev up.", "commit_id": "e7490637bc7216ef876cc4d62a60646570ffbe81"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "ec0161d746f036a4d3e1dbabd9add9e5ba9d3d89", "unresolved": false, "patch_set": 5, "id": "df33271e_421debbb", "line": 8, "range": {"start_line": 4, "start_character": 0, "end_line": 8, "end_character": 35}, "in_reply_to": "df33271e_e8c6a349", "updated": "2020-03-25 18:05:32.000000000", "message": "Generated HTML looks good!", "commit_id": "e7490637bc7216ef876cc4d62a60646570ffbe81"}]}}, "openstack%2Fnova~master~I669fc0d64fd261d5e91fbea5556255f03a0801ee": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-04-06 11:37:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-04 00:57:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~I3242fec1547693078cf36c3637116f8c41f1d0bc": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-10 08:39:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/api/openstack/compute/rest_api_version_history.rst": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e5969eb7d22359a11a0f7752a009e1dce315705d", "unresolved": false, "patch_set": 20, "id": "df33271e_279710ee", "line": 1142, "range": {"start_line": 1142, "start_character": 12, "end_line": 1142, "end_character": 30}, "updated": "2020-04-07 16:27:53.000000000", "message": "``literal``", "commit_id": "16692861fb5b2b6a4d6a801d2202811e28ca32f6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "81c2b66f9d1094eb417a56d0822fcfcee366a879", "unresolved": false, "patch_set": 20, "id": "df33271e_0a5491c9", "line": 1142, "range": {"start_line": 1142, "start_character": 12, "end_line": 1142, "end_character": 30}, "in_reply_to": "df33271e_279710ee", "updated": "2020-04-07 16:35:05.000000000", "message": "Done", "commit_id": "16692861fb5b2b6a4d6a801d2202811e28ca32f6"}], "nova/tests/functional/api_sample_tests/test_rescue.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "09a8610df832cae15156df0772880712474b8e07", "unresolved": false, "patch_set": 22, "id": "df33271e_6f70b9a6", "line": 100, "range": {"start_line": 97, "start_character": 0, "end_line": 100, "end_character": 58}, "updated": "2020-04-08 08:50:39.000000000", "message": "As a result of this we end up duplicating API samples.\n\nThis might not be required given the request and response are unchanged by this microversion, happy to remove if that's the case.", "commit_id": "dbab559892fe9b062e5fde8ea8cd123cca4ad0b1"}], "nova/tests/functional/test_server_rescue.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "093826e7c9c4ac3e1fb4db6fc18bd8f36b223641", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_b905bc11", "line": 69, "range": {"start_line": 55, "start_character": 0, "end_line": 69, "end_character": 39}, "updated": "2020-02-19 11:40:28.000000000", "message": "nit: Rather than using separate tests like this, you could use the 'temporary_mutation' function instead. Might be a bit faster than setting everything up and tearing it down. This is also fine though", "commit_id": "642370660c0b7a0fb677b34c75657119edf4a6a4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "cb31565d8d5405a4960cad584838b9cefd680b6e", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_00a330b2", "line": 69, "range": {"start_line": 55, "start_character": 0, "end_line": 69, "end_character": 39}, "in_reply_to": "3fa7e38b_b905bc11", "updated": "2020-02-19 15:31:49.000000000", "message": "ACK, I can look into that in a respin.", "commit_id": "642370660c0b7a0fb677b34c75657119edf4a6a4"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_be452773", "line": 39, "range": {"start_line": 39, "start_character": 24, "end_line": 39, "end_character": 27}, "updated": "2020-03-23 11:22:46.000000000", "message": "282", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_7f79affa", "line": 39, "range": {"start_line": 39, "start_character": 24, "end_line": 39, "end_character": 27}, "in_reply_to": "df33271e_be452773", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_9e4ae37d", "line": 43, "range": {"start_line": 43, "start_character": 20, "end_line": 43, "end_character": 24}, "updated": "2020-03-23 11:22:46.000000000", "message": "2.82", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_5f7cabea", "line": 43, "range": {"start_line": 43, "start_character": 20, "end_line": 43, "end_character": 24}, "in_reply_to": "df33271e_9e4ae37d", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_de5bcb51", "line": 55, "range": {"start_line": 55, "start_character": 24, "end_line": 55, "end_character": 27}, "updated": "2020-03-23 11:22:46.000000000", "message": "282", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_bf8337cc", "line": 55, "range": {"start_line": 55, "start_character": 24, "end_line": 55, "end_character": 27}, "in_reply_to": "df33271e_de5bcb51", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_3e59175a", "line": 60, "range": {"start_line": 60, "start_character": 20, "end_line": 60, "end_character": 24}, "updated": "2020-03-23 11:22:46.000000000", "message": "2.82", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_9f8633db", "line": 60, "range": {"start_line": 60, "start_character": 20, "end_line": 60, "end_character": 24}, "in_reply_to": "df33271e_3e59175a", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_7e30bf08", "line": 72, "range": {"start_line": 72, "start_character": 24, "end_line": 72, "end_character": 27}, "updated": "2020-03-23 11:22:46.000000000", "message": "283", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_ff6c9f37", "line": 72, "range": {"start_line": 72, "start_character": 24, "end_line": 72, "end_character": 27}, "in_reply_to": "df33271e_7e30bf08", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_5e35fbf6", "line": 89, "range": {"start_line": 89, "start_character": 21, "end_line": 89, "end_character": 24}, "updated": "2020-03-23 11:22:46.000000000", "message": "283", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_df671b51", "line": 89, "range": {"start_line": 89, "start_character": 21, "end_line": 89, "end_character": 24}, "in_reply_to": "df33271e_5e35fbf6", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}], "nova/tests/unit/api/openstack/compute/test_rescue.py": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_9e3f83d5", "line": 302, "range": {"start_line": 302, "start_character": 9, "end_line": 302, "end_character": 12}, "updated": "2020-03-23 11:22:46.000000000", "message": "283", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_5f65cb44", "line": 302, "range": {"start_line": 302, "start_character": 9, "end_line": 302, "end_character": 12}, "in_reply_to": "df33271e_9e3f83d5", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "e22f8463a12e188a9655620b22d49430ab5fd20b", "unresolved": false, "patch_set": 15, "id": "df33271e_fe232fbd", "line": 303, "range": {"start_line": 303, "start_character": 45, "end_line": 303, "end_character": 48}, "updated": "2020-03-23 11:22:46.000000000", "message": "283", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f8538be6a348e05be1511302ad0362650a4a6aa9", "unresolved": false, "patch_set": 15, "id": "df33271e_bf5cd77e", "line": 303, "range": {"start_line": 303, "start_character": 45, "end_line": 303, "end_character": 48}, "in_reply_to": "df33271e_fe232fbd", "updated": "2020-03-25 14:30:00.000000000", "message": "Done", "commit_id": "c61858b9bdb6e7b8fbf20fbdec4967089ce80bb3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e5969eb7d22359a11a0f7752a009e1dce315705d", "unresolved": false, "patch_set": 20, "id": "df33271e_ca3aa9cb", "line": 295, "range": {"start_line": 224, "start_character": 0, "end_line": 295, "end_character": 33}, "updated": "2020-04-07 16:27:53.000000000", "message": "Whoops. Looks like this was brought in when rebasing onto I04087be1e0023c026c06b690f20126472b0b63f0", "commit_id": "16692861fb5b2b6a4d6a801d2202811e28ca32f6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "81c2b66f9d1094eb417a56d0822fcfcee366a879", "unresolved": false, "patch_set": 20, "id": "df33271e_aa44851a", "line": 295, "range": {"start_line": 224, "start_character": 0, "end_line": 295, "end_character": 33}, "in_reply_to": "df33271e_ca3aa9cb", "updated": "2020-04-07 16:35:05.000000000", "message": "*facepalm* thanks.", "commit_id": "16692861fb5b2b6a4d6a801d2202811e28ca32f6"}]}}, "starlingx%2Fnfv~f%2Fcentos8~Ib7c407a24bd952cec141c6694b701391f1b008c8": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 13:30:06.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 1, "date": "2020-04-07 13:58:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-04-12 20:08:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}], "comments": {}}, "starlingx%2Fconfig~master~Ibc5ba1d65c16971926dfd3aae05564fbb314aa1b": {"owner_id": 31646, "owner_name": "Carmen Rata", "owner_email": "carmen.rata@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:44:04.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, {"value": 2, "date": "2020-04-12 20:04:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 1, "date": "2020-04-10 23:28:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28434, "name": "David Sullivan", "email": "david.sullivan@windriver.com", "username": "dsullivanwr"}, {"value": 0, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "e2dbc911554a60d062b2f41bf516e6b4f48ee341", "unresolved": false, "patch_set": 2, "id": "df33271e_17b5c3cd", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 50}, "updated": "2020-04-08 12:39:24.000000000", "message": "nit: The following description sentence is more accurate for a title.", "commit_id": "919513074fb61a7f42df700b0134ebd90cd207b5"}], "sysinv/sysinv/sysinv/sysinv/conductor/manager.py": [{"author": {"_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, "change_message_id": "6f789ee50c1e537e1f9f784b07593edf85fc1c37", "unresolved": false, "patch_set": 1, "id": "df33271e_b672307b", "line": 968, "range": {"start_line": 968, "start_character": 28, "end_line": 968, "end_character": 44}, "updated": "2020-04-07 19:32:25.000000000", "message": "The security profile is no longer supported, should be able to delete this", "commit_id": "5fbbaf757b1f55fb4a9176800720789b9ef0ec33"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "2a23ebc02281f284cc165713ab71dd93866a80fe", "unresolved": false, "patch_set": 1, "id": "df33271e_f2014d06", "line": 968, "range": {"start_line": 968, "start_character": 28, "end_line": 968, "end_character": 44}, "in_reply_to": "df33271e_01c5943c", "updated": "2020-04-08 12:49:18.000000000", "message": "Brent - the security_profile is referenced in several other places. I'd prefer that we clean up all that code at the same time vs. just deleting this one case. Should we be doing that in this commit or should we create a story/task for this and do it in a new commit?", "commit_id": "5fbbaf757b1f55fb4a9176800720789b9ef0ec33"}, {"author": {"_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, "change_message_id": "23fad680d440ade987ca53edfa04b9e28ac4c0a5", "unresolved": false, "patch_set": 1, "id": "df33271e_01c5943c", "line": 968, "range": {"start_line": 968, "start_character": 28, "end_line": 968, "end_character": 44}, "in_reply_to": "df33271e_b672307b", "updated": "2020-04-07 20:28:50.000000000", "message": "Done", "commit_id": "5fbbaf757b1f55fb4a9176800720789b9ef0ec33"}]}}, "openstack%2Fvitrage~master~I45fc7e79bc7abf266721d819f4f857d06a701724": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 19:07:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fcinder~master~I0ba2bbf1b707f93081cad8fabcc8dafb7b7d67d2": {"owner_id": 9535, "owner_name": "Gorka Eguileor", "owner_email": "geguileo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 14:35:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-31 18:15:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/volume/drivers/hpe/hpe_3par_common.py": [{"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "4cf0a083d97b79ba36333948d92b9f01c890b8fa", "unresolved": false, "patch_set": 1, "id": "1fa4df85_3cd405e9", "line": 370, "updated": "2020-03-19 12:41:56.000000000", "message": "why not just call the static method from driver.py instead?", "commit_id": "03dd392ef7b88ed4f3b4e696d987f728f6901f2e"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "4d744c045753a6b19a066a33a3b1b97d2bbfb157", "unresolved": false, "patch_set": 1, "id": "df33271e_5f02eb0a", "line": 370, "in_reply_to": "1fa4df85_3cd405e9", "updated": "2020-03-25 12:56:19.000000000", "message": "I thought adding that import was more intrusive to the driver, and since I'm not a driver maintainer I wanted to minimize possible impact.\n\nI don't mind changing it.  :-)", "commit_id": "03dd392ef7b88ed4f3b4e696d987f728f6901f2e"}]}}, "openstack%2Fcinder~master~I141c2c141aeea84272d2b04610e53822bc3b3371": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 1, "date": "2020-03-25 20:21:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6476, "name": "Thomas Goirand", "email": "thomas@goirand.fr", "username": "thomas-goirand"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 2, "date": "2020-03-25 13:11:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 12:06:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Frequirements~master~Ib513d7262f35234f26096f88a92dbb8c1fa8f0ef": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 16:30:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-04-12 16:35:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fneutron-lib~master~Ia887ce040dacc90d4870c4af5d895f8d98d5b9a3": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 19:08:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fneutron-lib~stable%2Fussuri~I36c82d529f649f5943d25cb528886642f9d051fd": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-06 09:14:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-12 19:07:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-04-11 19:56:05.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fneutron-lib~stable%2Fussuri~I7b1d9673df5d4496b68ef61aa5b724bac1f1f98c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-06 09:15:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-12 19:06:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-04-11 19:56:01.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-common~master~I908b2af6acce25dfb115463f9d04b0e14c7cba33": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 2, "date": "2020-04-10 14:36:52.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-04-09 16:36:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcinder~master~I4db0dc978d55d4704dd60e2eb8738b38ddefbbbd": {"owner_id": 29071, "owner_name": "norman shen", "owner_email": "yshxxsjt715@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 03:25:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31751, "name": "Yifeng Sun", "email": "634709523@qq.com", "username": "YifengSun"}, {"value": 2, "date": "2020-03-26 22:35:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23553, "name": "Shingo Takeda", "email": "s-takeda-nes@nec.com", "username": "s-takeda"}, {"value": 2, "date": "2020-03-26 22:56:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-26 22:17:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9236, "name": "Jon Bernard", "email": "jobernar@redhat.com", "username": "jbernard"}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/volume/drivers/rbd.py": [{"author": {"_account_id": 9236, "name": "Jon Bernard", "email": "jobernar@redhat.com", "username": "jbernard"}, "change_message_id": "37c8711602de896f91333cc26feb2fb0eff08615", "unresolved": false, "patch_set": 3, "id": "1fa4df85_69ad0a9a", "line": 1797, "range": {"start_line": 1797, "start_character": 0, "end_line": 1797, "end_character": 0}, "updated": "2020-03-17 12:04:45.000000000", "message": "I know this is exactly what LVM does, but I think we can do this a little better.  Consider this pattern:\n\n```\nif (special_case):\n    do special case thing\n    return\n\nnow, do the normal thing that we did before\n```\n\nThis reads easier and reduces the indentation for the more complex case.  What do you think?", "commit_id": "cc33003fb9a850f36900be973219d06290f34881"}, {"author": {"_account_id": 9236, "name": "Jon Bernard", "email": "jobernar@redhat.com", "username": "jbernard"}, "change_message_id": "298dab607bb204065c7ab8fc63f58d7f295180c8", "unresolved": false, "patch_set": 4, "id": "df33271e_ebafd491", "line": 1771, "range": {"start_line": 1771, "start_character": 0, "end_line": 1771, "end_character": 8}, "updated": "2020-03-24 16:08:02.000000000", "message": "Which values are affirmative?  Is it just \u2018in-use\u2019?  If it\u2019s just one or two it might be clearer to use an affirmative statement here (if you end up making another change for CI)", "commit_id": "70de39f53b4033463695fe126192b31de6f681ac"}, {"author": {"_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, "change_message_id": "5cb5f7f79cfe9667dd0e296dcce3ad3e4f788d56", "unresolved": false, "patch_set": 4, "id": "df33271e_94274313", "line": 1771, "range": {"start_line": 1771, "start_character": 0, "end_line": 1771, "end_character": 8}, "in_reply_to": "df33271e_ebafd491", "updated": "2020-03-25 00:32:05.000000000", "message": "Baseed on this line https://github.com/openstack/cinder/blob/a0c0a9e2342f5e45fd47640689b8ebd94a4ef77f/cinder/volume/api.py#L1699, I believe only available or in-use is allowed for retyping. I will update this condition and make it more explicit.", "commit_id": "70de39f53b4033463695fe126192b31de6f681ac"}]}}, "opendev%2Fsystem-config~master~I988d6391672053e87722b2f0a10e98c0fa783c40": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:46:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 18:46:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-12 16:01:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fneutron~master~I1d6125513cd8cb088b84c92497866f78955019a9": {"owner_id": 14232, "owner_name": "Igor Malinovskiy", "owner_email": "u.glide@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 23:51:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 2, "date": "2020-04-09 21:44:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-04-09 16:49:29.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"doc/source/admin/config-rbac.rst": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "b7ae5f51292d8d108272e0815c36b9602fc3157b", "unresolved": false, "patch_set": 9, "id": "df33271e_5e39f6ef", "line": 362, "range": {"start_line": 362, "start_character": 44, "end_line": 362, "end_character": 47}, "updated": "2020-03-30 20:47:31.000000000", "message": "nitty nit: please remove those chars, it should be aligned to line above", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "45cbb7f8a75240f115cdf4fec644da2f113d055c", "unresolved": false, "patch_set": 9, "id": "df33271e_4404207f", "line": 362, "range": {"start_line": 362, "start_character": 44, "end_line": 362, "end_character": 47}, "in_reply_to": "df33271e_5e39f6ef", "updated": "2020-04-03 13:43:34.000000000", "message": "Done", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "8c8828dce0aaf307aa9b2b9314be9303414e53da", "unresolved": false, "patch_set": 9, "id": "df33271e_e5eae5d5", "line": 364, "range": {"start_line": 364, "start_character": 7, "end_line": 364, "end_character": 9}, "updated": "2020-03-31 14:36:05.000000000", "message": "nit: an -> a", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "45cbb7f8a75240f115cdf4fec644da2f113d055c", "unresolved": false, "patch_set": 9, "id": "df33271e_24091c95", "line": 364, "range": {"start_line": 364, "start_character": 7, "end_line": 364, "end_character": 9}, "in_reply_to": "df33271e_e5eae5d5", "updated": "2020-04-03 13:43:34.000000000", "message": "Done", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}], "neutron/db/db_base_plugin_common.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "6a2837fce4fbb1f5fea95419263fab1f846b0ae0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_8f98626a", "line": 210, "range": {"start_line": 210, "start_character": 28, "end_line": 210, "end_character": 32}, "updated": "2020-03-19 10:06:20.000000000", "message": "is this change needed?", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "b9b0c774aaffeb86b23e75e634deac4f52adaed5", "unresolved": false, "patch_set": 7, "id": "1fa4df85_8d0b8528", "line": 210, "range": {"start_line": 210, "start_character": 28, "end_line": 210, "end_character": 32}, "in_reply_to": "1fa4df85_8f98626a", "updated": "2020-03-19 14:40:46.000000000", "message": "Yes, it is needed because subnetpool is NeutronObject now, not DB model as it was before.", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "b7ae5f51292d8d108272e0815c36b9602fc3157b", "unresolved": false, "patch_set": 9, "id": "df33271e_0106ef1d", "line": 216, "updated": "2020-03-30 20:47:31.000000000", "message": "I don't understand exactly why this change is needed", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "3f97a85c910593c58cc3a6fae3b5768f6441e608", "unresolved": false, "patch_set": 9, "id": "df33271e_02542420", "line": 216, "in_reply_to": "df33271e_0106ef1d", "updated": "2020-03-31 10:38:37.000000000", "message": "SubnetPool object class has mixin RbacNeutronDbObjectMixin which provides functionality to load state of the calculated `shared` attribute (Actual code is here https://review.opendev.org/#/c/709122/13/neutron/objects/rbac_db.py)\n\nTo be able to use this common code we need to call _make_subnetpool_dict() method with subnetpool object as an argument instead of db_object as it was before. (Introduced here https://review.opendev.org/#/c/710755/9/neutron/db/db_base_plugin_v2.py)\n\nThis particular change is required to stringify prefix objects to maintain proper output from this function.\n\nAlso, we need to pass here subnetpool.db_obj to all hook functions because they expect db_object.", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "5d43f6c6d925d997b13f7562104ce3d61472b80a", "unresolved": false, "patch_set": 9, "id": "df33271e_295b8c54", "line": 216, "in_reply_to": "df33271e_02542420", "updated": "2020-04-06 09:56:43.000000000", "message": "ok, sounds good for me. Thx for explanation.", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}], "neutron/db/db_base_plugin_v2.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "b7ae5f51292d8d108272e0815c36b9602fc3157b", "unresolved": false, "patch_set": 9, "id": "df33271e_410c773a", "line": 1252, "updated": "2020-03-30 20:47:31.000000000", "message": "and also why all changes like this one in this file are needed", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e206137a0581e12de70232811e5358b922ebaa15", "unresolved": false, "patch_set": 10, "id": "df33271e_d44fd967", "side": "PARENT", "line": 1252, "range": {"start_line": 1252, "start_character": 53, "end_line": 1252, "end_character": 59}, "updated": "2020-04-08 13:41:31.000000000", "message": "Why do you need this change? \"_make_subnetpool_dict\" does not change and in the call \"resource_extend.apply_funcs\" you are passing the db object.", "commit_id": "eb6104c0ac61216234ea958f2fd322e70b8e4bec"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "79732b30850ff04b187b4e481f4361cd0a422cc1", "unresolved": false, "patch_set": 10, "id": "df33271e_e38e9c25", "side": "PARENT", "line": 1252, "range": {"start_line": 1252, "start_character": 53, "end_line": 1252, "end_character": 59}, "in_reply_to": "df33271e_d44fd967", "updated": "2020-04-08 14:55:36.000000000", "message": "See explanation here https://review.opendev.org/#/c/710755/9/neutron/db/db_base_plugin_common.py", "commit_id": "eb6104c0ac61216234ea958f2fd322e70b8e4bec"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "d6c5b00f5828de7937ffba71439841c4ff918d0d", "unresolved": false, "patch_set": 10, "id": "df33271e_348098bf", "side": "PARENT", "line": 1252, "range": {"start_line": 1252, "start_character": 53, "end_line": 1252, "end_character": 59}, "in_reply_to": "df33271e_e38e9c25", "updated": "2020-04-09 16:49:29.000000000", "message": "+1", "commit_id": "eb6104c0ac61216234ea958f2fd322e70b8e4bec"}], "neutron/db/migration/alembic_migrations/versions/ussuri/expand/e88badaa9591_add_rbac_support_for_subnetpool.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e206137a0581e12de70232811e5358b922ebaa15", "unresolved": false, "patch_set": 10, "id": "df33271e_72fedd38", "line": 60, "range": {"start_line": 59, "start_character": 4, "end_line": 60, "end_character": 68}, "updated": "2020-04-08 13:41:31.000000000", "message": "Why don't you create this index in the table creation?\n\nop.create_table(\n  ...\n  sa.Index(op.f('ix_subnetpoolrbacs_project_id'),\n           'subnetpoolrbacs', ['project_id'], unique=False)\n)", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "d6c5b00f5828de7937ffba71439841c4ff918d0d", "unresolved": false, "patch_set": 10, "id": "df33271e_b4730816", "line": 60, "range": {"start_line": 59, "start_character": 4, "end_line": 60, "end_character": 68}, "in_reply_to": "df33271e_43cb0849", "updated": "2020-04-09 16:49:29.000000000", "message": "Makes sense to calculate just once the table indexes.", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "79732b30850ff04b187b4e481f4361cd0a422cc1", "unresolved": false, "patch_set": 10, "id": "df33271e_43cb0849", "line": 60, "range": {"start_line": 59, "start_character": 4, "end_line": 60, "end_character": 68}, "in_reply_to": "df33271e_72fedd38", "updated": "2020-04-08 14:55:36.000000000", "message": "This is needed to speed up bulk_insert above.", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}], "neutron/extensions/rbac.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "6a2837fce4fbb1f5fea95419263fab1f846b0ae0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_efba36be", "line": 44, "range": {"start_line": 44, "start_character": 17, "end_line": 44, "end_character": 18}, "updated": "2020-03-19 10:06:20.000000000", "message": "nitty nit: our general convention is to put such space in at the end of the above line", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "b9b0c774aaffeb86b23e75e634deac4f52adaed5", "unresolved": false, "patch_set": 7, "id": "1fa4df85_6813975d", "line": 44, "range": {"start_line": 44, "start_character": 17, "end_line": 44, "end_character": 18}, "in_reply_to": "1fa4df85_efba36be", "updated": "2020-03-19 14:40:46.000000000", "message": "Done", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}], "neutron/extensions/rbac_subnetpool.py": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "8c8828dce0aaf307aa9b2b9314be9303414e53da", "unresolved": false, "patch_set": 9, "id": "df33271e_003377f7", "line": 20, "range": {"start_line": 20, "start_character": 34, "end_line": 20, "end_character": 42}, "updated": "2020-03-31 14:36:05.000000000", "message": "subnetpool :-)", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "45cbb7f8a75240f115cdf4fec644da2f113d055c", "unresolved": false, "patch_set": 9, "id": "df33271e_0447b8be", "line": 20, "range": {"start_line": 20, "start_character": 34, "end_line": 20, "end_character": 42}, "in_reply_to": "df33271e_003377f7", "updated": "2020-04-03 13:43:34.000000000", "message": "Done", "commit_id": "9826551721ac107cfd6b769d462a063c7d87f20e"}], "neutron/objects/rbac_db.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e206137a0581e12de70232811e5358b922ebaa15", "unresolved": false, "patch_set": 10, "id": "df33271e_ad1644f0", "line": 164, "range": {"start_line": 164, "start_character": 8, "end_line": 164, "end_character": 68}, "updated": "2020-04-08 13:41:31.000000000", "message": "We don't raise this exception here.", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "77b96ef084a0725427a8c93a37f9c7546c399cbb", "unresolved": false, "patch_set": 10, "id": "df33271e_f960e9a7", "line": 164, "range": {"start_line": 164, "start_character": 8, "end_line": 164, "end_character": 68}, "in_reply_to": "df33271e_ad1644f0", "updated": "2020-04-09 16:36:02.000000000", "message": "Done", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}], "neutron/objects/subnetpool.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "6a2837fce4fbb1f5fea95419263fab1f846b0ae0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_0fc5523c", "line": 59, "range": {"start_line": 59, "start_character": 6, "end_line": 59, "end_character": 12}, "updated": "2020-03-19 10:06:20.000000000", "message": "nit: s/Version", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "b9b0c774aaffeb86b23e75e634deac4f52adaed5", "unresolved": false, "patch_set": 7, "id": "1fa4df85_683cf7c7", "line": 59, "range": {"start_line": 59, "start_character": 6, "end_line": 59, "end_character": 12}, "in_reply_to": "1fa4df85_0fc5523c", "updated": "2020-03-19 14:40:46.000000000", "message": "Done", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "6a2837fce4fbb1f5fea95419263fab1f846b0ae0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_af02fe6d", "line": 159, "range": {"start_line": 159, "start_character": 46, "end_line": 159, "end_character": 47}, "updated": "2020-03-19 10:06:20.000000000", "message": "nitty nit: if You would put whole string in double quotes than this wouldn't be needed :)", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "b9b0c774aaffeb86b23e75e634deac4f52adaed5", "unresolved": false, "patch_set": 7, "id": "1fa4df85_2847df4e", "line": 159, "range": {"start_line": 159, "start_character": 46, "end_line": 159, "end_character": 47}, "in_reply_to": "1fa4df85_af02fe6d", "updated": "2020-03-19 14:40:46.000000000", "message": "Done", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e206137a0581e12de70232811e5358b922ebaa15", "unresolved": false, "patch_set": 10, "id": "df33271e_97d553e8", "line": 41, "updated": "2020-04-08 13:41:31.000000000", "message": "This method is implemented in the abc class RBACBaseObject, but using a specific model (NetworkRBAC). Instead of this, the abc class should implement a generic \"get_projects\" function using the cls db_model from the child class.", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, "change_message_id": "77b96ef084a0725427a8c93a37f9c7546c399cbb", "unresolved": false, "patch_set": 10, "id": "df33271e_14ad949a", "line": 41, "in_reply_to": "df33271e_97d553e8", "updated": "2020-04-09 16:36:02.000000000", "message": "Done", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e206137a0581e12de70232811e5358b922ebaa15", "unresolved": false, "patch_set": 10, "id": "df33271e_4d8338cd", "line": 154, "range": {"start_line": 140, "start_character": 0, "end_line": 154, "end_character": 60}, "updated": "2020-04-08 13:41:31.000000000", "message": "This should be a method in the AddressScopeRBAC object class (neutron.objects.address_scope.AddressScopeRBAC)", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "d6c5b00f5828de7937ffba71439841c4ff918d0d", "unresolved": false, "patch_set": 10, "id": "df33271e_f4f0f069", "line": 154, "range": {"start_line": 140, "start_character": 0, "end_line": 154, "end_character": 60}, "in_reply_to": "df33271e_4d8338cd", "updated": "2020-04-09 16:49:29.000000000", "message": "We should not mix DB operations from different objects. But I think we can move this later.", "commit_id": "0cdfc8be1a7351d6d9ea150086a552d1c5bb4544"}], "neutron/tests/contrib/hooks/api_all_extensions": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "6a2837fce4fbb1f5fea95419263fab1f846b0ae0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_cf617a3b", "line": 50, "updated": "2020-03-19 10:06:20.000000000", "message": "this can be added here, but this file isn't used in zuul v3 jobs in fact. It has to be added in neutron-tempest-plugin repo in .zuul.yaml file directly", "commit_id": "a00e49bea0a081f696dd43e8bb001895944f5bc7"}]}}, "openstack%2Fnova~master~I6502a9193a65c76d07bc840895fe77a325be26b3": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": {}, "comments": {}}, "openstack%2Fnova~stable%2Fstein~I6502a9193a65c76d07bc840895fe77a325be26b3": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": {}, "comments": {}}, "openstack%2Fproject-config~master~I2f7730626a8785b63f88fdf5d507fbd97717b8f3": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-10 12:44:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-12 16:49:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-10 12:57:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~Ic301b039d080dfc0bcbefeecce099c8fd00ad8c5": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 16:48:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-11 19:58:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~I5fde605634108dd628df546a2318731e1832b6b3": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-12 16:36:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-12 16:47:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-12 16:25:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fpython-manilaclient~master~I1276998fa0577fce0b1fe793e08a76aab14358ce": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 15:49:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 2, "date": "2020-04-10 18:15:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fpython-manilaclient~master~I1df78551c90cd3578a558409c0cc308b9b4e8f84": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 15:48:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 2, "date": "2020-04-10 18:14:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Fstein~Ifbc73806b768f76f803ab01c115a9e5c2e2492ac": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-02 10:33:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-12 15:25:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}], "comments": {}}, "openstack%2Fcinder~master~I2681963bb15d2952e887171aa2584dfc63607115": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7d5ae84adbcda25660bd7b8c34d94919f3b71291", "unresolved": false, "patch_set": 1, "id": "7f423b7e_e1c5605d", "line": 95, "range": {"start_line": 1, "start_character": 2, "end_line": 95, "end_character": 0}, "updated": "2020-04-10 18:26:29.000000000", "message": "The project template \"openstack-lower-constraints-jobs - openstack-\npython3-victoria-jobs - publish-openstack-docs-pti - periodic-stable-\njobs - check-requirements - integrated-gate-storage - release-notes-\njobs-python3\" was not found.", "commit_id": "3500edf25fe003640c4c3d7ae0cf0a0532b760e0"}]}}, "opendev%2Fsystem-config~master~Ib5fd249533d5d8de0179bf16d61cf88f4c11f301": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 20:36:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-12 15:16:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "x%2Fvmware-nsx~master~I46fbc70cb747924a696687f071731ae8891eda07": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fvmware-nsx~master~I061464d528eba42df597c9ac4419eeb2fd689ea3": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 12:59:08.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla-ansible~master~If121f8c361973cf288282ceccf1908d8bf817b1b": {"owner_id": 24061, "owner_name": "pangliye", "owner_email": "pangliye@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24061, "name": "pangliye", "email": "pangliye@inspur.com", "username": "pangliye"}, {"value": -1, "date": "2018-01-17 15:45:39.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19930, "name": "Dai Dang Van", "email": "daidv3@viettel.com.vn", "username": "daidv"}, {"value": -1, "date": "2020-04-11 13:25:24.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28356, "name": "Rafael Weingartner", "email": "rafael@apache.org", "username": "rafaelweingartner"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22582, "name": "Duong Ha-Quang", "email": "quangduongha@gmail.com", "username": "duonghq"}, {"value": -1, "date": "2018-01-17 03:17:53.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7488, "name": "Jeffrey Zhang", "email": "zhang.lei.fly@gmail.com", "username": "Jeffrey4l"}], "comments": {}}, "starlingx%2Finteg~master~I2e77adbf89ad5505f2d7127a3f06ccfb805c0f24": {"owner_id": 28402, "owner_name": "Mingyuan Qi", "owner_email": "mingyuan.qi@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 22:56:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 28402, "name": "Mingyuan Qi", "email": "mingyuan.qi@intel.com", "username": "myqi"}, {"value": 2, "date": "2020-04-12 13:27:06.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Fapi-sig~master~I2aec09250c96bc411d19cb6c1a1ee852394d39e5": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 12:50:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fnova~master~I5c346e690148678a2f0dc63f4f516a944c3db8cd": {"owner_id": 23598, "owner_name": "Zhong Luyao", "owner_email": "luyao.zhong@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 15:44:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2020-04-07 16:02:25.000000000", "permitted_voting_range": {"min": 0, "max": 1}, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 02:25:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 27957, "name": "Timothy Gresham", "email": "timothy.gresham@intel.com", "username": "tjgresha"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11347, "name": "Rui Zang", "email": "rui.zang@yandex.com", "username": "rzang"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_8970a6de", "line": 23, "range": {"start_line": 23, "start_character": 30, "end_line": 23, "end_character": 36}, "updated": "2020-03-26 16:08:49.000000000", "message": "about", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_c9710ee1", "line": 26, "range": {"start_line": 19, "start_character": 0, "end_line": 26, "end_character": 61}, "updated": "2020-03-26 16:08:49.000000000", "message": "Can you rephrase this? It's not clear to me what you're trying to say. Are you saying that you've moved the call to 'driver.cleanup' from the destination host to the source host?\n\nLater: okay, after seeing [1] I realise you're saying that you moved the call to 'driver.cleanup' to occur before the RPC call 'post_live_migration_at_destination'. This is still confusing though and should be reworded and maybe split into a separate patch\n\n[1] https://review.opendev.org/#/c/687856/20/nova/compute/manager.py@8362", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "85e7778e2b15f6e2f6d1458f6cce0418eb13fce6", "unresolved": false, "patch_set": 20, "id": "df33271e_e1085dda", "line": 26, "range": {"start_line": 19, "start_character": 0, "end_line": 26, "end_character": 61}, "in_reply_to": "df33271e_7e606c02", "updated": "2020-03-27 09:18:29.000000000", "message": "About the change on _post_live_migration, I just tried to explain it has no negative effect. I think it shouldn't be in commit message since it involves too much implementation details, so I just state that why I need to modify it now.", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_7e606c02", "line": 26, "range": {"start_line": 19, "start_character": 0, "end_line": 26, "end_character": 61}, "in_reply_to": "df33271e_c9710ee1", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_28688b85", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 1}, "updated": "2020-04-07 10:47:29.000000000", "message": "S", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_93610c3d", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 1}, "in_reply_to": "df33271e_28688b85", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}], "nova/compute/manager.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "56ccf989084348fc60b0c07691d7164ec19ddef4", "unresolved": false, "patch_set": 10, "id": "1fa4df85_ef3f6822", "line": 8624, "range": {"start_line": 8623, "start_character": 8, "end_line": 8624, "end_character": 29}, "updated": "2020-03-05 07:15:50.000000000", "message": "I understand that you add the new rpc method 'cleanup_specific_resource' due to the 'do_cleanup' flag. If the `do_cleanup` is false, then 'rollback_live_migration_at_destination' won't be call. Then the normal cleanup code path for vpmem won't be trigger.\n\nBut I check the code, we only set the do_cleanup as false when the instance path is shared between hosts.\n\nAs my understand, if the instance path is shared, that means we shouldn't cleanup the target/source instance path. But that code path is already controlled by 'destroy_disks' flag:\nhttps://github.com/openstack/nova/blob/master/nova/virt/libvirt/driver.py#L1346-L1352\n\nOther then destory_disks controlled code path, the driver.cleanup is about undefine the domain, disconnect volume, destory vif. So I'm thinking even if the instance path is shared, we still need to cleanup those things. So I'm thinking 'do_cleanup' flag maybe wrong at here, whatever we should call 'rollback_live_migration_at_destination'. And then we can cleanup the vpmem. Then we needn't that extra rpc call.", "commit_id": "a68fce989912412097c06bfbb2fa7808cc3db31b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "1bbf89dde79f1f8630a682702f218b546afcb026", "unresolved": false, "patch_set": 10, "id": "1fa4df85_998b74c1", "line": 8624, "range": {"start_line": 8623, "start_character": 8, "end_line": 8624, "end_character": 29}, "in_reply_to": "1fa4df85_728033c0", "updated": "2020-03-09 03:07:57.000000000", "message": "Thanks for your comments, Alex Xu and Lee Yarwood.\nI look into the code path and agree with your suggestion. I'll remove the do_cleanup check in next patch version, and test the functionality.", "commit_id": "a68fce989912412097c06bfbb2fa7808cc3db31b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "601c9e54e39a22883aa041b3e308d757001243b5", "unresolved": false, "patch_set": 10, "id": "1fa4df85_728033c0", "line": 8624, "range": {"start_line": 8623, "start_character": 8, "end_line": 8624, "end_character": 29}, "in_reply_to": "1fa4df85_ef3f6822", "updated": "2020-03-05 17:51:49.000000000", "message": "L8602-8613 will handle cleaning up volumes on the dest.\n\nIt does look like we are missing logic to cleanup VIFs outside of rollback_live_migration_at_destination.\n\nFor the Libvirt driver at least I believe libvirtd on the dest should handle the removal of the domain if the migration was not successful [1][2]. There might be corner cases to that so maybe calling rollback_live_migration_at_destination regardless of the value of do_cleanup is the correct thing to do here?\n\n[1]https://github.com/openstack/nova/blob/19cbbbebddadb125b8123ce0350b7146b29a59c6/nova/virt/libvirt/driver.py#L913-L915\n[2]https://github.com/openstack/nova/blob/19cbbbebddadb125b8123ce0350b7146b29a59c6/nova/virt/libvirt/guest.py#L609-L611", "commit_id": "a68fce989912412097c06bfbb2fa7808cc3db31b"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "69990d7a9e9391d1e7c5bd2cca095df2f42f2360", "unresolved": false, "patch_set": 11, "id": "1fa4df85_db074018", "line": 8362, "range": {"start_line": 8361, "start_character": 7, "end_line": 8362, "end_character": 29}, "updated": "2020-03-14 09:29:25.000000000", "message": "we can return do_cleanup as true for libvirt vritdriver. Then we needn't 'cleanup_specific_resources' method.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "d2d6ca4fb9f93320d36fb98f57ba39495b978ec4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_ba911549", "line": 8362, "range": {"start_line": 8361, "start_character": 7, "end_line": 8362, "end_character": 29}, "in_reply_to": "1fa4df85_516c8c07", "updated": "2020-03-16 11:07:58.000000000", "message": "patch set v12 gives a possible solution to address the 'do_cleanup' flag issue.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "746062a5aa61f9f50ef6541fec7a1eeff2ed7e0e", "unresolved": false, "patch_set": 11, "id": "1fa4df85_516c8c07", "line": 8362, "range": {"start_line": 8361, "start_character": 7, "end_line": 8362, "end_character": 29}, "in_reply_to": "1fa4df85_db074018", "updated": "2020-03-16 07:53:39.000000000", "message": "I tried your suggestion, this may have chain reaction:\n1. it seems like all existing testcases do not cover the case that do_cleanup is True.\n2. if I set the do_cleanup True, it causes unittests and functional testcases failed. Espectialy for functional test, such as notification test, since we refresh the instance obj if do_cleanup is True, the instance host and node is updated to dest host/node, also the migration status is changed, so the notification we get can't match sample, should we change the sample to match the code or change the code to match the sample?\n\nI'm thinking about we may do these in another seperate patch. As I state above, we still need the 'cleanup_specific_resources', so we can use it here for now.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "7b9901b42bbe937fade2b244329e86d2a401d2bd", "unresolved": false, "patch_set": 11, "id": "1fa4df85_ce20dbfa", "line": 8362, "range": {"start_line": 8361, "start_character": 7, "end_line": 8362, "end_character": 29}, "in_reply_to": "1fa4df85_db074018", "updated": "2020-03-16 03:12:02.000000000", "message": "Yes for here, but we need this method in https://review.opendev.org/#/c/678451/8/nova/compute/manager.py@10280.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "11954cc501cd31522b3a7e1b653a6a19ee9890fb", "unresolved": false, "patch_set": 11, "id": "1fa4df85_98230ebf", "line": 8672, "range": {"start_line": 8671, "start_character": 7, "end_line": 8672, "end_character": 29}, "updated": "2020-03-14 09:05:41.000000000", "message": "I'm not sure we should ignore do_cleanup for all the virt driver. My previous comment is about libvirt. At least I think we should return True for do_cleanup always for the libvirt virt driver. Sorry, I didn't clear about that.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "e56193205dbc1c146a154afadce4c953e063a31b", "unresolved": false, "patch_set": 11, "id": "1fa4df85_d41b8a70", "line": 8672, "range": {"start_line": 8671, "start_character": 7, "end_line": 8672, "end_character": 29}, "in_reply_to": "1fa4df85_0ecb5353", "updated": "2020-03-16 08:15:03.000000000", "message": "Since the 'do_cleanup' flag I stated, I check it again. I don't know why we don't need to invoke the rollback_live_migration_at_destination(do_cleanup is False as default), I think at least invoking this method does not trigger any error?.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d4cde58cd496442f4c36cf52ccf9bc728593250", "unresolved": false, "patch_set": 11, "id": "1fa4df85_0ecb5353", "line": 8672, "range": {"start_line": 8671, "start_character": 7, "end_line": 8672, "end_character": 29}, "in_reply_to": "1fa4df85_98230ebf", "updated": "2020-03-16 02:54:44.000000000", "message": "yes, you're right, thanks.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "40b00a38b1cd88c4a0c4a853e7b169f7eaab55df", "unresolved": false, "patch_set": 14, "id": "1fa4df85_d83ab8e5", "line": 8496, "range": {"start_line": 8495, "start_character": 0, "end_line": 8496, "end_character": 51}, "updated": "2020-03-18 06:00:47.000000000", "message": "Since we set task_state on source host, we must bump the rpcapi version, and set the message target version. Otherwise it will trigger error under mixed version compute services env, e.g. live migration will stuck at MIGRATING since old compute service running on the source host while new compute service running on the dest, the task_state will not be updated to None forever.", "commit_id": "cdb69fda7d8a201fb6c4818eee11d561018431ac"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "4e21e8ccd239c63981333f176c60d5e1586fccd5", "unresolved": false, "patch_set": 14, "id": "1fa4df85_a7d0f9f8", "line": 8496, "range": {"start_line": 8495, "start_character": 0, "end_line": 8496, "end_character": 51}, "in_reply_to": "1fa4df85_d83ab8e5", "updated": "2020-03-18 11:25:40.000000000", "message": "I misunderstood this, set message target can't address the bug I stated above.\n\nAn alternative way to solve this problem is to cleanup source host first then invoke post_live_migration_at_destination. Then we will not lose the migration_context, and live migration can run well under mixed-version compute services.", "commit_id": "cdb69fda7d8a201fb6c4818eee11d561018431ac"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "2da7f9535af47d6fa6070fd323da7356d561a6c2", "unresolved": false, "patch_set": 15, "id": "1fa4df85_9d6c2a37", "line": 7605, "updated": "2020-03-18 13:44:26.000000000", "message": "Nit: remove this sentence.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "2da7f9535af47d6fa6070fd323da7356d561a6c2", "unresolved": false, "patch_set": 15, "id": "1fa4df85_3dcad619", "line": 8183, "updated": "2020-03-18 13:44:26.000000000", "message": "Maybe the answer is later in this patch, but how does supporting vpmem create the need to cleanup zombie VMs?", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "ee6e21468d0243b9147210f006a855df1ba81a00", "unresolved": false, "patch_set": 15, "id": "1fa4df85_63b1878f", "line": 8183, "in_reply_to": "1fa4df85_3dcad619", "updated": "2020-03-19 04:02:02.000000000", "message": "Actually this is not exactly what vpmem needs, it's more like a bug fixing or confusing code improving. In patch set 10, I got some comments from Alex and Lee Yarwood. I\u2018d like summarize for you:\n\n1. for libvirt, do_cleanup is just a flag to mark if the instance_path is shared. If the instance path is shared, that means we shouldn't cleanup the target/source instance path. But that code path is already controlled by 'destroy_disks' flag\n2. we have two operations based on this do_cleanup flag,\n   a) rpc call 'rollback_live_migration_at_destination' on source host when rollback live migration\n   b) driver.cleanup on source host when post live migration\nboth a) and b) have other logic like undefine the domain, disconnect volume or destory vif except for cleanup instance path. These operations shouldn't be controlled by only do_cleanup flag.\n\nSo that's why we set this flag always True. And then we can utilize this change to hide vpmem cleanup inside rpc call rollback_live_migration_at_destination or driver.cleanup.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "30a0930d1a6af811e1db9cf94f33850e3ed21ba1", "unresolved": false, "patch_set": 15, "id": "df33271e_008e7b77", "line": 8183, "in_reply_to": "1fa4df85_63b1878f", "updated": "2020-03-21 07:45:28.000000000", "message": "I think we should separate this change to another patch as bug fix. That is more clear for the reviewer", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "2da7f9535af47d6fa6070fd323da7356d561a6c2", "unresolved": false, "patch_set": 15, "id": "1fa4df85_7df84e48", "line": 8339, "updated": "2020-03-18 13:44:26.000000000", "message": "I *think* this change in order is fine, though I'd like to run my (as-yet unmerged, *sigh*) NUMA live migration functional tests [1] on top of this to make sure.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d0d4733bb10a0cbababf493ed4ebe5dc19c0121", "unresolved": false, "patch_set": 15, "id": "1fa4df85_798374aa", "line": 8339, "in_reply_to": "1fa4df85_7df84e48", "updated": "2020-03-19 07:24:14.000000000", "message": "You mean this patch[1] right? There is a typo in the patch, I left a comment there.\nI run your functional tests on top of my patch, all tests passed.\n\n[1]https://review.opendev.org/#/c/672595", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "7a08de7aac87c5981518e1ebdf00a1ff4f71a556", "unresolved": false, "patch_set": 15, "id": "1fa4df85_e424aab1", "line": 8343, "range": {"start_line": 8343, "start_character": 22, "end_line": 8343, "end_character": 28}, "updated": "2020-03-18 14:34:26.000000000", "message": "dropped?", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "ee6e21468d0243b9147210f006a855df1ba81a00", "unresolved": false, "patch_set": 15, "id": "1fa4df85_a313ff65", "line": 8343, "range": {"start_line": 8343, "start_character": 22, "end_line": 8343, "end_character": 28}, "in_reply_to": "1fa4df85_e424aab1", "updated": "2020-03-19 04:02:02.000000000", "message": "yes, I'll fix this typo", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "7a08de7aac87c5981518e1ebdf00a1ff4f71a556", "unresolved": false, "patch_set": 15, "id": "1fa4df85_645e7a13", "line": 8346, "updated": "2020-03-18 14:34:26.000000000", "message": "IMHO, this is not improving understandability of this code. We're now rolling the instance forwards and backwards at various times. I'm not sure it's reasonable to move this before the RPC call without surveying the rest of the drivers, and I'm not sure whether that means the cleanup method(s) expect the migration context to be reverted at that point, nor am I sure if this is \"good enough\".\n\nIn general, I don't think that moving major points of synchronization like this is a good practice. If we need another \"hook\" for the virt driver to be able to do something before the post RPC call below, then we should add that. More ideally, we'd do something to enable the driver to do what it needs in the cleanup routine (i.e. stash some data somewhere, etc).", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "ee6e21468d0243b9147210f006a855df1ba81a00", "unresolved": false, "patch_set": 15, "id": "1fa4df85_be7232ac", "line": 8346, "in_reply_to": "1fa4df85_0063e9b2", "updated": "2020-03-19 04:02:02.000000000", "message": "Thanks for Alex help clarifying.\n\n@Dan Simth, I have something to add.\n\nIn line 8358, we can see that even if the RPC call fails, it will not break the procedure of cleanup on source host. Only 2 drivers implemented cleanup interface currently,\n1. hiperv.cleanup: unplug vifs\n2. libvirt.cleanup:  unplug vifs, disconnect volume, destroy disk, delete instance file, undefine domain, and *cleanup_specific_resources* like vpmem.\nSo it's probably OK to move this cleanup before RPC call since it's no difference for other drivers. And mutated_migration_context will only have effects on libvirt driver.\n\n\nIf we move this before RPC call, the instance will still hold old info at this time, maybe we don't need mutated_migration_context here, but still need it in rollback_live_migration_at_destination(line 8782).", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "8674d74d276ab108ac5aa63bce09e474b4dd26d0", "unresolved": false, "patch_set": 15, "id": "1fa4df85_0063e9b2", "line": 8346, "in_reply_to": "1fa4df85_645e7a13", "updated": "2020-03-18 23:21:43.000000000", "message": "The usage of \"mutated_migration_context\" is what I suggested. Luyao's initial method is passing down the prefix to the virt driver. I thought the virt driver shouldn't worry about it.\n\nFor the moving this cleanup before cleanup, the reason is that we need to do the cleanup before we drop the 'migration_context', otherwise we loss the info for the allocated source vpmem.\n\n\nAlso luyao add new virt driver method for cleanup resources(only vpmem now). Then it is me again...I suggested reuse the virt driver cleanup method. I don't want to add any special method for code path just for vpmem. So I suggested do any cleanup inside the original cleanup/destroy virt driver method.\n\nAnother way is moving the drop_migration_context and instance's task_state/host update to source node. (currently, we update them in the destination host in 'self.compute_rpcapi.post_live_migration_at_destination', line 8356)\n\nBut that needs us to handle the upgrade issue, like we need to src/dest is old or new. Then we need to decide to update the instance state in the original position or in the new position. Then keep the live mgiraton works correctly in upgrade.\n\nI don't know which one is best...thanks for give us suggestion.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "30a0930d1a6af811e1db9cf94f33850e3ed21ba1", "unresolved": false, "patch_set": 15, "id": "df33271e_80d0cb52", "line": 8346, "in_reply_to": "1fa4df85_be7232ac", "updated": "2020-03-21 07:45:28.000000000", "message": "I checked the code. I found even if 'post_live_migration_at_destination' failed, we are still going to cleanup on the source node (line 8359).\n\nI think the reason is when we enter the post live migration stage, the VM is already in destination host. We won't bring it back for any wrong on the destination side cleanup.\n\nFor the concern of synchronization point, I'm not sure I understand correctly. But I think the 'driver.cleanup' method shouldn't care about where it is being called. The implement for that method should just do the cleanup whenever we call it.\n\nSo, I prefer the move the cleanup, that sounds like easy.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "2da7f9535af47d6fa6070fd323da7356d561a6c2", "unresolved": false, "patch_set": 15, "id": "1fa4df85_3d66562b", "line": 8689, "updated": "2020-03-18 13:44:26.000000000", "message": "I think you need to call this for your vpmem stuff too, no? You create a claim on L7622...", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "ee6e21468d0243b9147210f006a855df1ba81a00", "unresolved": false, "patch_set": 15, "id": "1fa4df85_3eeba2dc", "line": 8689, "in_reply_to": "1fa4df85_3d66562b", "updated": "2020-03-19 04:02:02.000000000", "message": "Yes, I need this, vpmem must have numa config, so this will be called.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "81df62a5bf98693f9e2322f1b4ea5445dc8e1396", "unresolved": false, "patch_set": 16, "id": "df33271e_974598b6", "line": 8720, "range": {"start_line": 8718, "start_character": 8, "end_line": 8720, "end_character": 59}, "updated": "2020-03-24 06:27:08.000000000", "message": "I guess you move this to next patch?", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "7c3f412217f20c3929538d860f6c7959206fd109", "unresolved": false, "patch_set": 16, "id": "df33271e_263bbb38", "line": 8720, "range": {"start_line": 8718, "start_character": 8, "end_line": 8720, "end_character": 59}, "in_reply_to": "df33271e_974598b6", "updated": "2020-03-24 09:50:42.000000000", "message": "yes", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_494fbe91", "line": 8172, "range": {"start_line": 8172, "start_character": 34, "end_line": 8172, "end_character": 37}, "updated": "2020-03-26 16:08:49.000000000", "message": ",", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_3e6ee400", "line": 8172, "range": {"start_line": 8172, "start_character": 34, "end_line": 8172, "end_character": 37}, "in_reply_to": "df33271e_494fbe91", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_e4123958", "line": 8692, "range": {"start_line": 8692, "start_character": 23, "end_line": 8692, "end_character": 27}, "updated": "2020-03-26 16:08:49.000000000", "message": "we drop", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_5eada82f", "line": 8692, "range": {"start_line": 8692, "start_character": 23, "end_line": 8692, "end_character": 27}, "in_reply_to": "df33271e_e4123958", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_6428e985", "line": 8693, "range": {"start_line": 8693, "start_character": 10, "end_line": 8693, "end_character": 20}, "updated": "2020-03-26 16:08:49.000000000", "message": "is complete, to ensure", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_beacb434", "line": 8693, "range": {"start_line": 8693, "start_character": 10, "end_line": 8693, "end_character": 20}, "in_reply_to": "df33271e_6428e985", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_840c0d3c", "line": 8694, "range": {"start_line": 8694, "start_character": 19, "end_line": 8694, "end_character": 25}, "updated": "2020-03-26 16:08:49.000000000", "message": "safely", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_9ea73050", "line": 8694, "range": {"start_line": 8694, "start_character": 19, "end_line": 8694, "end_character": 25}, "in_reply_to": "df33271e_840c0d3c", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_2436e1e7", "line": 8713, "range": {"start_line": 8713, "start_character": 10, "end_line": 8713, "end_character": 69}, "updated": "2020-03-26 16:08:49.000000000", "message": "NOTE(luyao): We only update instance info after rollback operations are complete", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_fe63dc18", "line": 8713, "range": {"start_line": 8713, "start_character": 10, "end_line": 8713, "end_character": 69}, "in_reply_to": "df33271e_2436e1e7", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_244b8159", "line": 8730, "range": {"start_line": 8729, "start_character": 63, "end_line": 8730, "end_character": 27}, "updated": "2020-03-26 16:08:49.000000000", "message": "successfully cleaned up and returned the instance", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_de66d829", "line": 8730, "range": {"start_line": 8729, "start_character": 63, "end_line": 8730, "end_character": 27}, "in_reply_to": "df33271e_244b8159", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_6830d39f", "line": 8264, "range": {"start_line": 8264, "start_character": 14, "end_line": 8264, "end_character": 19}, "updated": "2020-04-07 10:47:29.000000000", "message": "may be", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_b38530d2", "line": 8264, "range": {"start_line": 8264, "start_character": 14, "end_line": 8264, "end_character": 19}, "in_reply_to": "df33271e_6830d39f", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_0821474e", "line": 8265, "range": {"start_line": 8264, "start_character": 54, "end_line": 8265, "end_character": 59}, "updated": "2020-04-07 10:47:29.000000000", "message": "; currently this is limited to vPMEM devices with the libvirt driver.", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_136cdc34", "line": 8265, "range": {"start_line": 8264, "start_character": 54, "end_line": 8265, "end_character": 59}, "in_reply_to": "df33271e_0821474e", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_882d5748", "line": 8290, "range": {"start_line": 8290, "start_character": 28, "end_line": 8290, "end_character": 36}, "updated": "2020-04-07 10:47:29.000000000", "message": "cleaned", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_1355fc50", "line": 8290, "range": {"start_line": 8290, "start_character": 28, "end_line": 8290, "end_character": 36}, "in_reply_to": "df33271e_882d5748", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "ab6615924ccf908937d0b878ce7d205cc78c2929", "unresolved": false, "patch_set": 24, "id": "df33271e_07080d2b", "line": 7672, "updated": "2020-04-07 16:01:04.000000000", "message": "You're still only calling this if the instance has a NUMA topology - IIRC, an instance NUMA topology has no bearing on VPMEM, so this is incorrect.", "commit_id": "4bd5af66b55b1ac5e5fa654eb31bf90616d62256"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "71910220f9ad4b627968efe9f703c8c7660eff04", "unresolved": false, "patch_set": 24, "id": "df33271e_07912c9a", "line": 7672, "in_reply_to": "df33271e_07080d2b", "updated": "2020-04-07 16:02:25.000000000", "message": "<stephenfin> artom: You need to have a guest NUMA topology to use vPMEM\n\nMea culpa.", "commit_id": "4bd5af66b55b1ac5e5fa654eb31bf90616d62256"}], "nova/compute/rpcapi.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "0518f88cb2f47b12c29bb13425474359e40cef9d", "unresolved": false, "patch_set": 11, "id": "1fa4df85_1bfe3805", "line": 379, "range": {"start_line": 379, "start_character": 10, "end_line": 379, "end_character": 58}, "updated": "2020-03-14 09:26:35.000000000", "message": "you can just bump the object version without bump the rpcapi version", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d4cde58cd496442f4c36cf52ccf9bc728593250", "unresolved": false, "patch_set": 11, "id": "1fa4df85_4eb14be1", "line": 379, "range": {"start_line": 379, "start_character": 10, "end_line": 379, "end_character": 58}, "in_reply_to": "1fa4df85_1bfe3805", "updated": "2020-03-16 02:54:44.000000000", "message": "Sorry, I don't get what you mean. What object version? Do you mean the global service version?", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "a6c230c95b9daec3193fcaeb4e8a5e064773203c", "unresolved": false, "patch_set": 11, "id": "1fa4df85_4e0dcb8e", "line": 379, "range": {"start_line": 379, "start_character": 10, "end_line": 379, "end_character": 58}, "in_reply_to": "1fa4df85_4eb14be1", "updated": "2020-03-16 03:10:49.000000000", "message": "yea, only bump the service version.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}], "nova/conductor/tasks/live_migrate.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "452a837102ca0306058343f4c7c8c54b89a9a9a8", "unresolved": false, "patch_set": 11, "id": "1fa4df85_d23423fe", "line": 49, "range": {"start_line": 49, "start_character": 50, "end_line": 49, "end_character": 57}, "updated": "2020-03-12 14:20:32.000000000", "message": "s/enought/enough", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d4cde58cd496442f4c36cf52ccf9bc728593250", "unresolved": false, "patch_set": 11, "id": "1fa4df85_2e8f2f2f", "line": 49, "range": {"start_line": 49, "start_character": 50, "end_line": 49, "end_character": 57}, "in_reply_to": "1fa4df85_d23423fe", "updated": "2020-03-16 02:54:44.000000000", "message": "Got it.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "452a837102ca0306058343f4c7c8c54b89a9a9a8", "unresolved": false, "patch_set": 11, "id": "1fa4df85_726beff0", "line": 109, "range": {"start_line": 109, "start_character": 37, "end_line": 109, "end_character": 38}, "updated": "2020-03-12 14:20:32.000000000", "message": "We should avoid use \\ as a line break, you can use () instead, such as: \n\n        source_node, dest_node = (\n            self._check_compatible_with_source_hypervisor(self.destination))", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d4cde58cd496442f4c36cf52ccf9bc728593250", "unresolved": false, "patch_set": 11, "id": "1fa4df85_ae8c7f35", "line": 109, "range": {"start_line": 109, "start_character": 37, "end_line": 109, "end_character": 38}, "in_reply_to": "1fa4df85_726beff0", "updated": "2020-03-16 02:54:44.000000000", "message": "Got it, thanks", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "0518f88cb2f47b12c29bb13425474359e40cef9d", "unresolved": false, "patch_set": 11, "id": "1fa4df85_5806f622", "line": 265, "range": {"start_line": 265, "start_character": 12, "end_line": 265, "end_character": 43}, "updated": "2020-03-14 09:26:35.000000000", "message": "emm...why you didn't check this in the https://review.opendev.org/#/c/708110/4?", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6d4cde58cd496442f4c36cf52ccf9bc728593250", "unresolved": false, "patch_set": 11, "id": "1fa4df85_8e8e6325", "line": 265, "range": {"start_line": 265, "start_character": 12, "end_line": 265, "end_character": 43}, "in_reply_to": "1fa4df85_5806f622", "updated": "2020-03-16 02:54:44.000000000", "message": "It's a mistake, I'll correct it.", "commit_id": "384473e5d827e397ee994fa6f8cc2c99efdbeb14"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "2da7f9535af47d6fa6070fd323da7356d561a6c2", "unresolved": false, "patch_set": 15, "id": "1fa4df85_dd3aa2e5", "line": 57, "updated": "2020-03-18 13:44:26.000000000", "message": "IIRC Dan Smith wasn't too keen on this - something about this not always been useful information. Which is why I went with flags in the live migrate data object.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6a3a5fe36477b53cf95063cccaf0f3855fcb4f8d", "unresolved": false, "patch_set": 15, "id": "1fa4df85_395e5c12", "line": 57, "in_reply_to": "1fa4df85_419ed063", "updated": "2020-03-19 05:51:30.000000000", "message": "OK, I agree with that checking minimum version is safer, I'll move to use objects.Service.get_minimum_version.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "7a08de7aac87c5981518e1ebdf00a1ff4f71a556", "unresolved": false, "patch_set": 15, "id": "1fa4df85_419ed063", "line": 57, "in_reply_to": "1fa4df85_dd3aa2e5", "updated": "2020-03-18 14:34:26.000000000", "message": "Probably related to where the check gets done and whether or not the new-enough node would be doing the check.\n\nIn cases where we go from no support to supporting a thing, I think it's safer to check the minimum cluster version instead of a particular host.", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "90a37f1d80a6aa7dcb242ccaa0d6a241f81a903a", "unresolved": false, "patch_set": 16, "id": "df33271e_777d741b", "line": 124, "range": {"start_line": 120, "start_character": 12, "end_line": 124, "end_character": 41}, "updated": "2020-03-24 06:24:17.000000000", "message": "you should clean up this claim when the destination check failed.", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "90a37f1d80a6aa7dcb242ccaa0d6a241f81a903a", "unresolved": false, "patch_set": 16, "id": "df33271e_f78ea425", "line": 288, "range": {"start_line": 286, "start_character": 8, "end_line": 288, "end_character": 51}, "updated": "2020-03-24 06:24:17.000000000", "message": "all those three can be move before the resource claim", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_a47031a7", "line": 123, "range": {"start_line": 123, "start_character": 14, "end_line": 123, "end_character": 24}, "updated": "2020-03-26 16:08:49.000000000", "message": "destination", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_7e77ccd5", "line": 123, "range": {"start_line": 123, "start_character": 14, "end_line": 123, "end_character": 24}, "in_reply_to": "df33271e_a47031a7", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_c492959f", "line": 133, "range": {"start_line": 129, "start_character": 0, "end_line": 133, "end_character": 65}, "updated": "2020-03-26 16:08:49.000000000", "message": "This seems like something we should have been doing before. Would it make sense to drag this out into a separate patch?", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_9e7c50b6", "line": 133, "range": {"start_line": 129, "start_character": 0, "end_line": 133, "end_character": 65}, "in_reply_to": "df33271e_c492959f", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_045f5d0e", "line": 140, "range": {"start_line": 135, "start_character": 0, "end_line": 140, "end_character": 33}, "updated": "2020-03-26 16:08:49.000000000", "message": "This TODO still belongs above the call to 'claim_resources_on_destination', right?", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_fe4c7c9f", "line": 140, "range": {"start_line": 135, "start_character": 0, "end_line": 140, "end_character": 33}, "in_reply_to": "df33271e_045f5d0e", "updated": "2020-03-27 09:04:41.000000000", "message": "yeah", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e858f0644e81a70e2b287b847c0b7a18ea0d9900", "unresolved": false, "patch_set": 20, "id": "df33271e_04b47d34", "line": 284, "range": {"start_line": 284, "start_character": 36, "end_line": 284, "end_character": 45}, "updated": "2020-03-26 16:08:49.000000000", "message": "not related, but since you're indenting this:\n\n  Cannot live migrate", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "59443995d378b81cd2b290025d2b82403e1d1fc6", "unresolved": false, "patch_set": 20, "id": "df33271e_1e4a007f", "line": 284, "range": {"start_line": 284, "start_character": 36, "end_line": 284, "end_character": 45}, "in_reply_to": "df33271e_04b47d34", "updated": "2020-03-27 09:04:41.000000000", "message": "Done", "commit_id": "ce94b2e75aec59e5d2a451c5454485a88dd3f422"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "32540047e5c6a223bd515650f2fb978d2d59c678", "unresolved": false, "patch_set": 23, "id": "df33271e_f9caff4c", "side": "PARENT", "line": 255, "updated": "2020-04-07 07:18:51.000000000", "message": "q", "commit_id": "565dfac7a659ac756b1fb8bd9fcdd30eae24b46f"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "32540047e5c6a223bd515650f2fb978d2d59c678", "unresolved": false, "patch_set": 23, "id": "df33271e_99b493d3", "line": 57, "updated": "2020-04-07 07:18:51.000000000", "message": "Why don't you use 'get_minimum_version_all_cells'? Seems \n'get_minimum_version' only checks one db belonging to one cell.", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "345b7ae9aba686e63acfceb2b810cd1cee8b1ab5", "unresolved": false, "patch_set": 23, "id": "df33271e_f954bf56", "line": 57, "in_reply_to": "df33271e_99b493d3", "updated": "2020-04-07 07:30:33.000000000", "message": "In a multi-cell cloud, instances can be live migrated to a different host in the same cell, but not across cells.\n\nSo 'get_minimum_version' is enough I think.", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}], "nova/objects/instance.py": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "7a08de7aac87c5981518e1ebdf00a1ff4f71a556", "unresolved": false, "patch_set": 15, "id": "1fa4df85_e1d33cd4", "line": 1066, "updated": "2020-03-18 14:34:26.000000000", "message": "I don't really like this. Not only the asymmetric use of just the old prefix, but also the change in behavior here. This used to only ever roll forward temporarily and now this can roll back. What's the point exactly? To be able to look at the instance the way it was before?", "commit_id": "c62000be9598e44e7b14a050e711ec778cdbc4d5"}], "nova/objects/migrate_data.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1c5f30d5d3c18266837e6bd0bde758d77ff54712", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_844dd472", "line": 256, "updated": "2019-11-13 03:34:44.000000000", "message": "why we didn't use migraiton context?", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "022c1d1f437768476c497512fcf3f9ef852ceabd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_25364853", "line": 256, "in_reply_to": "3fa7e38b_133844ec", "updated": "2019-11-14 06:27:05.000000000", "message": "where? if we do that in _claim_resources in RT, we need parse the order from flavor extra spec for each specific resources. I think it is not we expect.", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "657bf5dc98ef5f1258525394716ddedf47e8b154", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_778ab364", "line": 256, "in_reply_to": "3fa7e38b_25364853", "updated": "2019-11-14 07:30:15.000000000", "message": "move it to LiveMigrateData may be better", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "790a37b5eabd915c389d62b6699211c9f5893b6f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_1d1a6e6e", "line": 256, "in_reply_to": "3fa7e38b_577e97af", "updated": "2019-11-15 09:22:54.000000000", "message": "Yes, you're right.", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "0a1f081c33cba020632a6ce490ac3a17d91e3455", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_577e97af", "line": 256, "in_reply_to": "3fa7e38b_778ab364", "updated": "2019-11-14 08:40:35.000000000", "message": "The caim resource is on the destination node. But we needn't care about the order when we claim the resource.\n\nBefore we update the xml for target VM on the source node, we can calculate the order for the target vpmem based on flavor(correct me if understand wrong, I understand that you use flavor for the order).", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "23fec4298ceda7147c85d1a6b8fb1b418601f290", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b265aeb1", "line": 256, "in_reply_to": "3fa7e38b_844dd472", "updated": "2019-11-13 08:33:41.000000000", "message": "we need the order, migr_ctxt doesn'y have order.", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "9f7db031bb1fe801629fc27f6fb6fa1b49e5c7dc", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_133844ec", "line": 256, "in_reply_to": "3fa7e38b_b265aeb1", "updated": "2019-11-13 12:32:08.000000000", "message": "why you can't calculate that in source node?", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}], "nova/tests/unit/compute/test_compute_mgr.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_e8c98379", "line": 10146, "range": {"start_line": 10146, "start_character": 12, "end_line": 10146, "end_character": 16}, "updated": "2020-04-07 10:47:29.000000000", "message": "nit (here and below)", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_d3e9d480", "line": 10146, "range": {"start_line": 10146, "start_character": 12, "end_line": 10146, "end_character": 16}, "in_reply_to": "df33271e_e8c98379", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}], "nova/tests/unit/virt/libvirt/test_migration.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_28724b4a", "line": 120, "range": {"start_line": 120, "start_character": 8, "end_line": 120, "end_character": 11}, "updated": "2020-04-07 10:47:29.000000000", "message": "old_xml ?", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_5392e4f7", "line": 120, "range": {"start_line": 120, "start_character": 8, "end_line": 120, "end_character": 11}, "in_reply_to": "df33271e_28724b4a", "updated": "2020-04-07 13:15:10.000000000", "message": "yup", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_4877cf3b", "line": 174, "range": {"start_line": 173, "start_character": 0, "end_line": 174, "end_character": 63}, "updated": "2020-04-07 10:47:29.000000000", "message": "Could you move this to after xml so we can see the comparison easier? A comment would be helpful too", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_ae802348", "line": 174, "range": {"start_line": 173, "start_character": 0, "end_line": 174, "end_character": 63}, "in_reply_to": "df33271e_4877cf3b", "updated": "2020-04-07 13:15:10.000000000", "message": "I prefer keeping this new_xml here since the updated vpmem info is from new_resources above. I'll add comment to make it clear.", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "23df57e5f5a353a5e10bed081ece9c36be0f5a67", "unresolved": false, "patch_set": 23, "id": "df33271e_78c0a0e1", "line": 174, "range": {"start_line": 173, "start_character": 0, "end_line": 174, "end_character": 63}, "in_reply_to": "df33271e_ae802348", "updated": "2020-04-07 15:44:16.000000000", "message": "Yup, comment makes it clearer", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "23df57e5f5a353a5e10bed081ece9c36be0f5a67", "unresolved": false, "patch_set": 24, "id": "df33271e_38a61855", "line": 179, "updated": "2020-04-07 15:44:16.000000000", "message": "nit: Adding \n\n  new_xml = old_xml\n\nbefore these lines would make this clearer, IMO", "commit_id": "4bd5af66b55b1ac5e5fa654eb31bf90616d62256"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "23df57e5f5a353a5e10bed081ece9c36be0f5a67", "unresolved": false, "patch_set": 24, "id": "df33271e_18b19490", "line": 181, "range": {"start_line": 181, "start_character": 28, "end_line": 181, "end_character": 40}, "updated": "2020-04-07 15:44:16.000000000", "message": "These are backwards, I think. It should be:\n\n  self.assertXmlEqual(expected, actual)\n\nso:\n\n  self.assertXmlEqual(new_xml, res)", "commit_id": "4bd5af66b55b1ac5e5fa654eb31bf90616d62256"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "1416d91e2757264e276769f47182521dc8de22e3", "unresolved": false, "patch_set": 24, "id": "df33271e_fbebf30e", "line": 181, "range": {"start_line": 181, "start_character": 28, "end_line": 181, "end_character": 40}, "in_reply_to": "df33271e_18b19490", "updated": "2020-04-08 04:08:32.000000000", "message": "yeah you're right, and it seems that most of other tests here have the same issue", "commit_id": "4bd5af66b55b1ac5e5fa654eb31bf90616d62256"}], "nova/virt/driver.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "b1e9ba8a58177c11c8f65594d220ad5a779b2037", "unresolved": false, "patch_set": 16, "id": "df33271e_171348b7", "line": 1836, "range": {"start_line": 1834, "start_character": 4, "end_line": 1836, "end_character": 12}, "updated": "2020-03-24 06:27:34.000000000", "message": "this feel like the part of next patch also.", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5eab18354e147da85ec064e5f93b7fa6e8d0f3cf", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f73b03e7", "line": 8027, "range": {"start_line": 8026, "start_character": 37, "end_line": 8027, "end_character": 42}, "updated": "2019-11-14 08:47:32.000000000", "message": "so here, you already use migration_context to get the order pmem.", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "90a37f1d80a6aa7dcb242ccaa0d6a241f81a903a", "unresolved": false, "patch_set": 16, "id": "df33271e_3735ac47", "line": 7971, "range": {"start_line": 7971, "start_character": 13, "end_line": 7971, "end_character": 39}, "updated": "2020-03-24 06:24:17.000000000", "message": "I don't know why we want to sort the resources at here. Can we sort the resources before 'libvirt_migrate.get_updated_guest_xml'?\n\nJust like we sort resource just before build domain xml when booting new instance.", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "90a37f1d80a6aa7dcb242ccaa0d6a241f81a903a", "unresolved": false, "patch_set": 16, "id": "df33271e_57c83054", "line": 8503, "range": {"start_line": 8503, "start_character": 16, "end_line": 8503, "end_character": 58}, "updated": "2020-03-24 06:24:17.000000000", "message": "When we have instance is not the object?", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "7c3f412217f20c3929538d860f6c7959206fd109", "unresolved": false, "patch_set": 16, "id": "df33271e_e639d341", "line": 8503, "range": {"start_line": 8503, "start_character": 16, "end_line": 8503, "end_character": 58}, "in_reply_to": "df33271e_57c83054", "updated": "2020-03-24 09:50:42.000000000", "message": "in many tests it's not object, not sure in real env.", "commit_id": "76af67a09b2e3b46de6a12b9a74bcd1c67a54425"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1722003495e66473c8b81ff1be7841c475decfa8", "unresolved": false, "patch_set": 18, "id": "df33271e_f49fafb1", "line": 1296, "range": {"start_line": 1296, "start_character": 8, "end_line": 1296, "end_character": 50}, "updated": "2020-03-24 23:20:39.000000000", "message": "you forget to remove this, since you move this to next patch", "commit_id": "dd198a176ba173b16b0e527a522050bb29f24c0c"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "0dbe4d4ca352292cd2c323212e2de84399a5918a", "unresolved": false, "patch_set": 18, "id": "df33271e_8adc3875", "line": 1296, "range": {"start_line": 1296, "start_character": 8, "end_line": 1296, "end_character": 50}, "in_reply_to": "df33271e_f49fafb1", "updated": "2020-03-25 03:01:41.000000000", "message": "Done", "commit_id": "dd198a176ba173b16b0e527a522050bb29f24c0c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9eb8787ad70aea61d6d9752a71217e0466738fa8", "unresolved": false, "patch_set": 23, "id": "df33271e_e838633c", "line": 8845, "range": {"start_line": 8845, "start_character": 20, "end_line": 8845, "end_character": 65}, "updated": "2020-04-07 10:47:29.000000000", "message": "bool(self._get_vpmems(instance))", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "6182b523f35d9ed2fa2066c81d896014a2860346", "unresolved": false, "patch_set": 23, "id": "df33271e_0e94af43", "line": 8845, "range": {"start_line": 8845, "start_character": 20, "end_line": 8845, "end_character": 65}, "in_reply_to": "df33271e_e838633c", "updated": "2020-04-07 13:15:10.000000000", "message": "Done", "commit_id": "c04e5faab1d4bf84bc063778538302d91b6b31f1"}], "nova/virt/libvirt/migration.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5eab18354e147da85ec064e5f93b7fa6e8d0f3cf", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b706eb20", "line": 84, "range": {"start_line": 83, "start_character": 26, "end_line": 84, "end_character": 45}, "updated": "2019-11-14 08:47:32.000000000", "message": "can we pass the ordered pmem into this method? the order vpmems are gotten by calling virtdriver._get_ordered_resources", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "790a37b5eabd915c389d62b6699211c9f5893b6f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_627421d1", "line": 84, "range": {"start_line": 83, "start_character": 26, "end_line": 84, "end_character": 45}, "in_reply_to": "3fa7e38b_b706eb20", "updated": "2019-11-15 09:22:54.000000000", "message": "Yeah, It should work.", "commit_id": "f983b7e87e2d81c95fd166e5cf10e1e7ec39b97b"}]}}, "openstack%2Fdevstack~master~Id90f21418f6a80ad3b761cc724f63cba881fe2d6": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:42:49.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fnova~master~I8627de0fdb31f2090a4eef7dba8f0f5eb4ebb946": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:06:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 2, "date": "2020-04-10 09:18:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"api-ref/source/parameters.yaml": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_d0216e4f", "line": 585, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_b3e31405", "line": 585, "in_reply_to": "df33271e_d0216e4f", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_1018f61b", "line": 604, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_f3e91ce3", "line": 604, "in_reply_to": "df33271e_1018f61b", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_30d89a51", "line": 896, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_33c1c455", "line": 896, "in_reply_to": "df33271e_30d89a51", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_d0e68e16", "line": 951, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_73b7ccf6", "line": 951, "in_reply_to": "df33271e_d0e68e16", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_10ed96ef", "line": 1131, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_d3cfb87c", "line": 1131, "in_reply_to": "df33271e_10ed96ef", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_f0e912e3", "line": 1139, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_f3c2bc52", "line": 1139, "in_reply_to": "df33271e_f0e912e3", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_50bc3edb", "line": 1383, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_93a7f0bc", "line": 1383, "in_reply_to": "df33271e_50bc3edb", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_30c1ba55", "line": 1405, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_139be072", "line": 1405, "in_reply_to": "df33271e_30c1ba55", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_90b24605", "line": 1453, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_f3975c44", "line": 1453, "in_reply_to": "df33271e_90b24605", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "25d3494f60edbb19d32347beac0c1209a905f97a", "unresolved": false, "patch_set": 1, "id": "df33271e_70b7c2f6", "line": 1484, "updated": "2020-04-10 04:32:33.000000000", "message": "Need to update here too.", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "3f46c79845b139135ed2e9bba6622023e3acbb3f", "unresolved": false, "patch_set": 1, "id": "df33271e_538a881a", "line": 1484, "in_reply_to": "df33271e_70b7c2f6", "updated": "2020-04-10 06:53:02.000000000", "message": "Done", "commit_id": "b100bd668db7a6bfd62690b17b58e3b223ec75db"}]}}, "openstack%2Fnova~master~I2cbe37b65ceac2efb3b252460dc01d17474e6343": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 08:24:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 09:55:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "c4d22768c2080e3d95be307916d4d6c1f3fa9e54", "unresolved": false, "patch_set": 9, "id": "df33271e_9c57fdca", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 19}, "updated": "2020-03-31 08:32:38.000000000", "message": "addressed.", "commit_id": "4203e13edf38bca3952eb091ebc8885fe5cac68b"}], "nova/api/openstack/compute/volumes.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "34b8f47d7c10d95395fbcb3dcf677e0604e037b2", "unresolved": false, "patch_set": 8, "id": "df33271e_2cb351ec", "line": 445, "range": {"start_line": 445, "start_character": 24, "end_line": 445, "end_character": 66}, "updated": "2020-03-27 17:37:16.000000000", "message": "for default of this policy which is admin, we do not need to pass the project_id but if we want to support the override rule with the admin-or-owner then there is no harm of passing.", "commit_id": "dec28a4aec1bc159c3940dfcd1cf5b43bbfbf5b7"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2de14064d36b7d07630c8e035bec6a4db359c941", "unresolved": false, "patch_set": 8, "id": "df33271e_1723faa9", "line": 445, "range": {"start_line": 445, "start_character": 24, "end_line": 445, "end_character": 66}, "in_reply_to": "df33271e_2cb351ec", "updated": "2020-03-27 17:57:55.000000000", "message": "no, it would help override rule also as this polciy is scoped as 'system' only. we can remove this.", "commit_id": "dec28a4aec1bc159c3940dfcd1cf5b43bbfbf5b7"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "966b5e37673e431d7af8f4f6a580199f65987c1d", "unresolved": false, "patch_set": 11, "id": "df33271e_1a3e23b7", "line": 480, "range": {"start_line": 480, "start_character": 0, "end_line": 480, "end_character": 0}, "updated": "2020-04-01 17:26:32.000000000", "message": "I showed the policy enforcement in exmaple patch - https://review.opendev.org/#/c/716679/\n\nthat does:\n- enforce swap policy first for swap-only (with either microverison) or swap+update case\n- enforce update policy if it is actual update request. so that we do not fail on update policy for swap only operation.\n\nas gibi mentioned, we need to add tests for all those cases so that we do not miss any.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1fd7061858d94835753342af924f833d3e4e289e", "unresolved": false, "patch_set": 11, "id": "df33271e_f615534a", "line": 480, "range": {"start_line": 480, "start_character": 0, "end_line": 480, "end_character": 0}, "in_reply_to": "df33271e_1a3e23b7", "updated": "2020-04-02 03:47:33.000000000", "message": "Thanks, I will merge that.\n- If the user want to swap, need to check the v2.85 and swap policy. \n- If the user want to update, they should check update policy for d-o-t, because of other parameters we doesnot allow to update.\n- 'swap' policy *contains* 'update' policy. admin role can do anything in this update api.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2f35d21b099385d8d02c6d0896a0a32931349d2f", "unresolved": false, "patch_set": 11, "id": "df33271e_c5ca0e9f", "line": 480, "range": {"start_line": 480, "start_character": 0, "end_line": 480, "end_character": 0}, "in_reply_to": "df33271e_c5d4cf4a", "updated": "2020-04-02 08:43:26.000000000", "message": "Yes, I think it would be sufficient if we could override the default policy settings.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e156ead03ebd77f5ba96b2f2f50a593a3f812cba", "unresolved": false, "patch_set": 11, "id": "df33271e_c5d4cf4a", "line": 480, "range": {"start_line": 480, "start_character": 0, "end_line": 480, "end_character": 0}, "in_reply_to": "df33271e_f615534a", "updated": "2020-04-02 08:15:48.000000000", "message": "> - 'swap' policy *contains* 'update' policy. admin role can do\n > anything in this update api.\n\nYes, if the policy is kept on default settings then swap policy contains update policy. BUT policy is configurable by the deployer so we cannot assume this containment holds for any deployment in general.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1f5be464ab47d8628c3f11ce1ed9c9515d438e81", "unresolved": false, "patch_set": 11, "id": "df33271e_4f7bd926", "line": 488, "updated": "2020-04-01 09:04:38.000000000", "message": "When fatal=True (the default) then it does not make sense to use the return value of can() as this call raises Forbidden exception if the check fails", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1f5be464ab47d8628c3f11ce1ed9c9515d438e81", "unresolved": false, "patch_set": 11, "id": "df33271e_6fa5fda1", "line": 492, "updated": "2020-04-01 09:04:38.000000000", "message": "I suggest to simply add the \n\n  context.can(va_policies.POLICY_ROOT % 'swap')\n\ncheck here", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "dc8ea4bb8634599f2c3311c5c652f0fa502d9f00", "unresolved": false, "patch_set": 11, "id": "df33271e_f781dac4", "line": 497, "range": {"start_line": 493, "start_character": 0, "end_line": 497, "end_character": 67}, "updated": "2020-04-01 17:15:45.000000000", "message": "this else block does not means request is for update. this can be swap-only so failing on update policy before we actually check that request is for update or not in _update_volume_regular is not good. \n\nScenario: I am PUTing request by replicating GET response with VolumeId changed (swap only but keeping all other field same as existing value.) in that case update policy can fail the swap operation.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1f5be464ab47d8628c3f11ce1ed9c9515d438e81", "unresolved": false, "patch_set": 11, "id": "df33271e_cf0b698b", "line": 500, "range": {"start_line": 496, "start_character": 0, "end_line": 500, "end_character": 66}, "updated": "2020-04-01 09:04:38.000000000", "message": "This might be a bit more complex. A PUT request that triggers just an update should be guarded with the 'update' policy but update + swap should be guarded with both the 'update' and the 'swap' policy.  Also as update + swap that fails the 'swap' policy should not do a partial update.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1fd7061858d94835753342af924f833d3e4e289e", "unresolved": false, "patch_set": 11, "id": "df33271e_56623f0b", "line": 500, "range": {"start_line": 496, "start_character": 0, "end_line": 500, "end_character": 66}, "in_reply_to": "df33271e_b7bab2bd", "updated": "2020-04-02 03:47:33.000000000", "message": "Ok, agree.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "dc8ea4bb8634599f2c3311c5c652f0fa502d9f00", "unresolved": false, "patch_set": 11, "id": "df33271e_b7bab2bd", "line": 500, "range": {"start_line": 496, "start_character": 0, "end_line": 500, "end_character": 66}, "in_reply_to": "df33271e_cf0b698b", "updated": "2020-04-01 17:15:45.000000000", "message": "+1. I mentioned the same in yesterday's IRC discussions. we really need update+swap as 'complete success' or 'failure' even for policy case. Otherwise it end up with HTTP 207 multi status things which is bad.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "24d66269aa0d3f4264b49900df93df1520a4b4c2", "unresolved": false, "patch_set": 11, "id": "df33271e_4faf5929", "line": 500, "range": {"start_line": 496, "start_character": 0, "end_line": 500, "end_character": 66}, "in_reply_to": "df33271e_cf0b698b", "updated": "2020-04-01 09:13:27.000000000", "message": "Yes, I said in https://review.opendev.org/#/c/693828/24/nova/api/openstack/compute/volumes.py@496, I also think this is strage, hope @Dan have some good idea.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5da8dd4902cdd52234458363f413023db4e64251", "unresolved": false, "patch_set": 13, "id": "df33271e_eed72fbe", "line": 469, "range": {"start_line": 464, "start_character": 0, "end_line": 469, "end_character": 71}, "updated": "2020-04-02 11:10:09.000000000", "message": "Do we actually need to do this? Even if they're not changing anything, the fact that they're even trying means we should reject the request, no?", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cddb6f52cc7d3ee095c29336186bae884401f70f", "unresolved": false, "patch_set": 13, "id": "df33271e_87263867", "line": 469, "range": {"start_line": 464, "start_character": 0, "end_line": 469, "end_character": 71}, "in_reply_to": "df33271e_e269fb24", "updated": "2020-04-02 23:29:39.000000000", "message": "I am still not very clear on how we can enforce the both policy as per their request. \n\nI agree on that if the request is made then irrespective of whether value is changed or not we can consider the PUT as valid PUT request and enforce the policy at starting. \n\nHere things are little different because of two policies and two operation. For example. If I am doing only swap request (>2.85) by\n- copy paste the GET response and _only_ change the volumeId\n\nThat should be consider as swap-only request right and in that case if we check PUT policy also then it is not valid. We can consider the 'swap' policy is superset of 'update' policy as per defaults but with override value we cannot consider that. Operator can override them in any way.\n\nBeing said that, let's rebase this on latest base patch and see the pic more clear.", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c8c12ddb756cf3015db5f64bb70eda20dd7e7ae1", "unresolved": false, "patch_set": 13, "id": "df33271e_e269fb24", "line": 469, "range": {"start_line": 464, "start_character": 0, "end_line": 469, "end_character": 71}, "in_reply_to": "df33271e_eed72fbe", "updated": "2020-04-02 16:23:48.000000000", "message": "Yeah agree, doing this here makes no sense. We should authorize the PUT or swap early in the call regardless.", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5da8dd4902cdd52234458363f413023db4e64251", "unresolved": false, "patch_set": 13, "id": "df33271e_ae5d277a", "line": 503, "updated": "2020-04-02 11:10:09.000000000", "message": "I'm not a fan of this. The name suggests this is checking whether you're allowed to swap, but in reality if that check failed we'd have raised an exception already, so this is simply checking id != volume_id.\n\nCould we keep this check as-is and simply add a 'context.can' call before the two calls to '_update_volume_swap'? Alternatively, do it inside that function, though I'm assuming you don't want to do that because it makes mocking harder..", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e251ea915cab1890457b530880158f27589ada9f", "unresolved": false, "patch_set": 13, "id": "df33271e_ed2e038a", "line": 503, "in_reply_to": "df33271e_4791d046", "updated": "2020-04-03 01:17:46.000000000", "message": "After checking your chat record [1], and that comments in this, I have not get more clear thing what I need to do in next patch, so I will wait @Dan update.\n\n> the 'swap' policy is superset of 'update' policy as per defaults\n\nAgreed, we can check PUT policy when start request update request.\n\n> but but with override value we cannot consider that.\n\nIMO, this is beyond our default settings and can be ignored. But once the user changes one of the PUT or swap policies, we must at least ensure that the other is available.\n\n> or we are saying swap (with or without other value changed) is always PUT+swap so checking 'updte' policy always and then check swap policy if swap requested ?\n\nI'm not sure about that either.This means that regardless of the form of the request, it has only two results, either failure or success.\n\n[1]http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-04-02.log.html#t2020-04-02T16:08:14", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cddb6f52cc7d3ee095c29336186bae884401f70f", "unresolved": false, "patch_set": 13, "id": "df33271e_e7974444", "line": 503, "in_reply_to": "df33271e_82f2af6e", "updated": "2020-04-02 23:29:39.000000000", "message": "I might be overthinking on this but 1 question (i think \n mentioned in early comment also). Should not we consider the below request as swap only (not PUT with swap) request >2.85\n- requesting with volumeId change but passing all other value unchanged or not passing them.", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c8c12ddb756cf3015db5f64bb70eda20dd7e7ae1", "unresolved": false, "patch_set": 13, "id": "df33271e_82f2af6e", "line": 503, "in_reply_to": "df33271e_ae5d277a", "updated": "2020-04-02 16:23:48.000000000", "message": "I also don't want to do that because it means we would have completed the regular PUT part of the call and then fail on the auth check for swap, having completed half of the update and not the other.\n\nPersonally, I think we should determine, early in the call, whether this is a regular PUT or a PUT with swap, and authorize based on the appropriate policy. PUT means you can change anything mutable other than volumeId (which is currently just d-o-t). PUT with swap means you have the aforementioned power, as well as power to change volumeId.", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "67bf9ad80b838ba6d4e5afafe9c7cc367400f90d", "unresolved": false, "patch_set": 13, "id": "df33271e_4791d046", "line": 503, "in_reply_to": "df33271e_e7974444", "updated": "2020-04-02 23:34:55.000000000", "message": "or we are saying swap (with or without other value changed) is always PUT+swap so checking 'updte' policy always and then check swap policy if swap requested ?", "commit_id": "c6c6ca436dadf74840875e5db93fa7da8afe427d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "98ad58a4ba62375dbd993642954a2818f301d0c3", "unresolved": false, "patch_set": 14, "id": "df33271e_0a2131fc", "side": "PARENT", "line": 472, "range": {"start_line": 472, "start_character": 20, "end_line": 472, "end_character": 62}, "updated": "2020-04-07 16:58:35.000000000", "message": "I'm confused. Should we have been passing this through previously since it was a SYSTEM_ADMIN policy?", "commit_id": "cd16ae25c865f25dbb313976b3d8ef9372db80af"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "41af64413839011ee1f19d77e66f127ab9d79a90", "unresolved": false, "patch_set": 14, "id": "df33271e_ca02a93e", "side": "PARENT", "line": 472, "range": {"start_line": 472, "start_character": 20, "end_line": 472, "end_character": 62}, "in_reply_to": "df33271e_0a2131fc", "updated": "2020-04-07 17:02:08.000000000", "message": "Looks like a mistake in [1]\n\n[1] https://review.opendev.org/#/c/709955/3/nova/api/openstack/compute/volumes.py@401", "commit_id": "cd16ae25c865f25dbb313976b3d8ef9372db80af"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "06e6c11194665c57f5220d4bcc6e8fa47538f73d", "unresolved": false, "patch_set": 14, "id": "df33271e_ed5d0716", "side": "PARENT", "line": 472, "range": {"start_line": 472, "start_character": 20, "end_line": 472, "end_character": 62}, "in_reply_to": "df33271e_ca02a93e", "updated": "2020-04-07 17:36:58.000000000", "message": "yeah with system scope only access, project id is no use.", "commit_id": "cd16ae25c865f25dbb313976b3d8ef9372db80af"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "06e6c11194665c57f5220d4bcc6e8fa47538f73d", "unresolved": false, "patch_set": 14, "id": "df33271e_cd20034d", "line": 478, "range": {"start_line": 478, "start_character": 0, "end_line": 478, "end_character": 13}, "updated": "2020-04-07 17:36:58.000000000", "message": "this leave one case to solve which might be my overthinking and not something user do but I want to bring here.\n\nIf request if for swap + update then we only check swap policy. If with override rules, swap policy is not superset of update policy then we end up allowing update for all users have swap access. \n\nWith defaults, it is no issue as swap is a superset of update policy.\n\nI was thinking to make 'update' as default check here and swap as extra check:\n\n- enforce 'update' policy always (for >2.85) as PUT request means you are updating something.\n- enforce swap if it is swap request. This is nothing but an extra requested operation for *update* request,", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "0a64a8efcbfbd8a974ee870242df19dee9420e2e", "unresolved": false, "patch_set": 14, "id": "df33271e_906f34c4", "line": 478, "range": {"start_line": 478, "start_character": 0, "end_line": 478, "end_character": 13}, "in_reply_to": "df33271e_cd20034d", "updated": "2020-04-07 18:09:42.000000000", "message": "we discussed it on IRC and we cannot handle the all possible cases here (existing deployement, override cases in all possible permission etc).\n\nDoing the current way is best as it does not impact the existing users and we can update the policy doc of new 'update' policy about 'for swap + update' request (which is possible only >2.85) only <swap policy> is checked. We expect <swap policy> to be always superset of this policy permission.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "98ad58a4ba62375dbd993642954a2818f301d0c3", "unresolved": false, "patch_set": 14, "id": "df33271e_0a4811ca", "line": 480, "updated": "2020-04-07 16:58:35.000000000", "message": "Okay, so in effect we're renaming update to swap and then adding update which only applies if using the newer microversion and are definitely not swapping.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8161d15d9894c44830cea676da331a7731ea2a75", "unresolved": false, "patch_set": 14, "id": "df33271e_58f3050b", "line": 480, "in_reply_to": "df33271e_0a4811ca", "updated": "2020-04-08 02:39:14.000000000", "message": "Yes, the swap policy is the superset of update policy. So if the swap policy not allow, that will be not allow to swap volume.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "337044b696be792b82b9aa3aff267c786a952fbb", "unresolved": false, "patch_set": 17, "id": "df33271e_695c397e", "line": 477, "updated": "2020-04-08 08:00:02.000000000", "message": "OK, so changing the volume_id and d-o-t in the same request can be done with swap policy. In this case the d-o-t value is used for the new volume_id. I think in this case requiring swap and update policy would be a more correct behavior in theory. But I accept that in reality if I can swap volumes then I should be able to define the params of the swapped in volume.", "commit_id": "983a57d4060be59cf883a74979020f608a437ea4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aa87776a62ad67362630ac72bdbb7fdc3d295f3e", "unresolved": false, "patch_set": 17, "id": "df33271e_a4dca874", "line": 477, "in_reply_to": "df33271e_695c397e", "updated": "2020-04-08 08:16:45.000000000", "message": "+1", "commit_id": "983a57d4060be59cf883a74979020f608a437ea4"}], "nova/policies/volumes_attachments.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "df5b103477d6f4371d24c4341a73776755b24dab", "unresolved": false, "patch_set": 7, "id": "df33271e_7f5fd471", "line": 93, "range": {"start_line": 82, "start_character": 0, "end_line": 93, "end_character": 43}, "updated": "2020-03-26 17:15:51.000000000", "message": "because we are adding this in PUT API, we discussed the polciy things also on IRC[1].\n\nLet's do:\n1. add this new policy with name=POLICY_ROOT % 'update', with default to same what you have already (PROJECT_MEMBER_OR_SYSTEM_ADMIN)\n\n2.  change the existing policy @l59 to name=POLICY_ROOT % 'swap' keeping everything else like default same there\n\n3. add releasenotes about this change. something like: existing policy 'os-volumes-attachments:update' is used for updating the resources with the change in its default value from SYSTEM_ADMIN to PROJECT_MEMBER_OR_SYSTEM_ADMIN. New policy 'os-volumes-attachments:swap' is introduced for swapping the attachment of servers with default to SYSTEM_ADMIN.\n\n[1] http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-03-26.log.html#t2020-03-26T16:53:07", "commit_id": "4f3ca70187901aba60dfeae01c8f4706205e0f62"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1f5be464ab47d8628c3f11ce1ed9c9515d438e81", "unresolved": false, "patch_set": 11, "id": "df33271e_6f417da9", "line": 61, "updated": "2020-04-01 09:04:38.000000000", "message": "Update parameters of the current volume attachment, except changing the volumeId.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "98ad58a4ba62375dbd993642954a2818f301d0c3", "unresolved": false, "patch_set": 14, "id": "df33271e_2a08758f", "line": 60, "updated": "2020-04-07 16:58:35.000000000", "message": "Naturally the main issue with changing this is that anyone using full policy.yaml file is not going to pick up this change. No easy way around that though.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "06e6c11194665c57f5220d4bcc6e8fa47538f73d", "unresolved": false, "patch_set": 14, "id": "df33271e_4d5fd3e4", "line": 60, "in_reply_to": "df33271e_2a08758f", "updated": "2020-04-07 17:36:58.000000000", "message": "true, we discussed it sometime on IRC and decided not to go with deprecation way. swap operation is really not many user use direcrtly and more of call from cinder side.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "337044b696be792b82b9aa3aff267c786a952fbb", "unresolved": false, "patch_set": 17, "id": "df33271e_c9f8e54a", "line": 64, "range": {"start_line": 63, "start_character": 43, "end_line": 64, "end_character": 42}, "updated": "2020-04-08 08:00:02.000000000", "message": "thanks for documenting the assumption.", "commit_id": "983a57d4060be59cf883a74979020f608a437ea4"}], "nova/tests/unit/policies/test_volumes.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1f5be464ab47d8628c3f11ce1ed9c9515d438e81", "unresolved": false, "patch_set": 11, "id": "df33271e_2fd015c9", "line": 176, "updated": "2020-04-01 09:04:38.000000000", "message": "You need test cases for \n* policy check fails for update\n* policy check fails for swap\n* policy check passes for swap + update\n* policy check fails for swap + update due to swap policy failure\n* policy check fails for swap + update due to update policy failure", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1fd7061858d94835753342af924f833d3e4e289e", "unresolved": false, "patch_set": 11, "id": "df33271e_b9c3bcec", "line": 176, "in_reply_to": "df33271e_2fd015c9", "updated": "2020-04-02 03:47:33.000000000", "message": "These test scenarios all addressed.\n\n> You need test cases for\n > * policy check fails for update\n\ntest_update_volume_attach_policy_failed()\n\n > * policy check fails for swap\n\ntest_swap_volume_attach_policy_failed()\n\n > * policy check passes for swap + update\n\ntest_pass_swap_and_update_volume_attach_policy()\n\n > * policy check fails for swap + update due to swap policy failure\n\ntest_check_swap_and_update_failed_due_swap_policy()\n\n > * policy check fails for swap + update due to update policy failure\n\nI add test_check_swap_and_update_failed_due_update_policy(), but that cannot pass the swap policy check(cannot get something what I want to get), see http://paste.openstack.org/show/791501/.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e156ead03ebd77f5ba96b2f2f50a593a3f812cba", "unresolved": false, "patch_set": 11, "id": "df33271e_e538f2d3", "line": 176, "in_reply_to": "df33271e_b9c3bcec", "updated": "2020-04-02 08:15:48.000000000", "message": "For some reason the last test passes in VolumeAttachPolicyTest but fails in VolumeAttachNoLegacyPolicyTest and in VolumeAttachScopeTypePolicyTest . I'm lost in the policy code so I hope gmann can look at it.", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "188a3380f67e81788a3ad98dcae0e8c2337fde62", "unresolved": false, "patch_set": 11, "id": "df33271e_cb121d62", "line": 176, "in_reply_to": "df33271e_e538f2d3", "updated": "2020-04-02 10:40:32.000000000", "message": "Done", "commit_id": "45d8b0f18880d48bd1d8b338dbdb5900560159f0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ea3500ea946ca170d598e314ab1fefe081803f6c", "unresolved": false, "patch_set": 12, "id": "df33271e_0b62450a", "line": 245, "updated": "2020-04-02 10:38:59.000000000", "message": "You configure this...", "commit_id": "efa3c33f575b7912b88525042da795ffcc94159b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "188a3380f67e81788a3ad98dcae0e8c2337fde62", "unresolved": false, "patch_set": 12, "id": "df33271e_ee38cfd3", "line": 245, "in_reply_to": "df33271e_0b62450a", "updated": "2020-04-02 10:40:32.000000000", "message": "yes, it is invalid in this case.", "commit_id": "efa3c33f575b7912b88525042da795ffcc94159b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ea3500ea946ca170d598e314ab1fefe081803f6c", "unresolved": false, "patch_set": 12, "id": "df33271e_ab3cf9e0", "line": 247, "updated": "2020-04-02 10:38:59.000000000", "message": "...but you don't use it. This is using the default context for the fake HTTPRequest [1]. You need to either set 'version' on 'self.req' or configure 'environ' on 'req'\n\n[1] https://github.com/openstack/nova/blob/241cffbebafde5ae30c0c330c3f01a327adcb656/nova/tests/unit/api/openstack/fakes.py#L264-L267", "commit_id": "efa3c33f575b7912b88525042da795ffcc94159b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "188a3380f67e81788a3ad98dcae0e8c2337fde62", "unresolved": false, "patch_set": 12, "id": "df33271e_4e345bde", "line": 247, "in_reply_to": "df33271e_ab3cf9e0", "updated": "2020-04-02 10:40:32.000000000", "message": "Done", "commit_id": "efa3c33f575b7912b88525042da795ffcc94159b"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "06e6c11194665c57f5220d4bcc6e8fa47538f73d", "unresolved": false, "patch_set": 14, "id": "df33271e_ed718746", "line": 181, "range": {"start_line": 177, "start_character": 0, "end_line": 181, "end_character": 61}, "updated": "2020-04-07 17:36:58.000000000", "message": "this is not needed as it is covered in previous test case where self.system_foo_context is there in  self.admin_or_owner_unauthorized_contexts", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2e9071608652531880ae4b1051615bc797b406f4", "unresolved": false, "patch_set": 14, "id": "df33271e_35128c0a", "line": 181, "range": {"start_line": 177, "start_character": 0, "end_line": 181, "end_character": 61}, "in_reply_to": "df33271e_ed718746", "updated": "2020-04-08 02:02:15.000000000", "message": "Done", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "06e6c11194665c57f5220d4bcc6e8fa47538f73d", "unresolved": false, "patch_set": 14, "id": "df33271e_adc5bf3f", "line": 230, "range": {"start_line": 222, "start_character": 0, "end_line": 230, "end_character": 43}, "updated": "2020-04-07 17:36:58.000000000", "message": "this scenaio i was talking in API file. this only enforce swap policy.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2e9071608652531880ae4b1051615bc797b406f4", "unresolved": false, "patch_set": 14, "id": "df33271e_152b08eb", "line": 230, "range": {"start_line": 222, "start_character": 0, "end_line": 230, "end_character": 43}, "in_reply_to": "df33271e_adc5bf3f", "updated": "2020-04-08 02:02:15.000000000", "message": "Done", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "0a64a8efcbfbd8a974ee870242df19dee9420e2e", "unresolved": false, "patch_set": 14, "id": "df33271e_30862867", "line": 245, "range": {"start_line": 245, "start_character": 38, "end_line": 245, "end_character": 61}, "updated": "2020-04-07 18:09:42.000000000", "message": "this context is always fail in any case. so we cannot guarantee which rule is failing.\n\nwe can cover this scenario in L210 test cases - test_swap_volume_attach_policy_failed\n\nby updating the request body to update the delete_on_termination flag.", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2e9071608652531880ae4b1051615bc797b406f4", "unresolved": false, "patch_set": 14, "id": "df33271e_b5ee9cb1", "line": 245, "range": {"start_line": 245, "start_character": 38, "end_line": 245, "end_character": 61}, "in_reply_to": "df33271e_30862867", "updated": "2020-04-08 02:02:15.000000000", "message": "Done", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "337044b696be792b82b9aa3aff267c786a952fbb", "unresolved": false, "patch_set": 17, "id": "df33271e_49bb3571", "line": 200, "range": {"start_line": 199, "start_character": 1, "end_line": 200, "end_character": 11}, "updated": "2020-04-08 08:00:02.000000000", "message": "Does this test really exercise swap + update? Below I see a request body that only change the volume_id, nothing else.\n\nalso with the current implementation there is no way that the swap+update fail due to update policy as in case of swap+update only swap policy is checked.", "commit_id": "983a57d4060be59cf883a74979020f608a437ea4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aa87776a62ad67362630ac72bdbb7fdc3d295f3e", "unresolved": false, "patch_set": 17, "id": "df33271e_445afc29", "line": 200, "range": {"start_line": 199, "start_character": 1, "end_line": 200, "end_character": 11}, "in_reply_to": "df33271e_49bb3571", "updated": "2020-04-08 08:16:45.000000000", "message": "Yes, that I missed the d-o-t and api_version in this case.", "commit_id": "983a57d4060be59cf883a74979020f608a437ea4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1b63fc4cc78765a9f306eed7ee0e56b28d38706c", "unresolved": false, "patch_set": 18, "id": "df33271e_846ec493", "line": 199, "range": {"start_line": 199, "start_character": 69, "end_line": 199, "end_character": 77}, "updated": "2020-04-08 08:19:42.000000000", "message": "failure", "commit_id": "ed5dcb9d87045464a5e7d9be4a02a106026f72ff"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "360d3a18ea2d6e6b81bc904ef8fee8124c865955", "unresolved": false, "patch_set": 18, "id": "df33271e_84452418", "line": 199, "range": {"start_line": 199, "start_character": 55, "end_line": 199, "end_character": 61}, "updated": "2020-04-08 08:18:46.000000000", "message": "swap", "commit_id": "ed5dcb9d87045464a5e7d9be4a02a106026f72ff"}], "releasenotes/notes/separate-update-and-swap-volume-policy-for-attachment-e4c20d4907a52fa7.yaml": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "98ad58a4ba62375dbd993642954a2818f301d0c3", "unresolved": false, "patch_set": 14, "id": "df33271e_ca6bc91c", "line": 4, "range": {"start_line": 4, "start_character": 44, "end_line": 4, "end_character": 75}, "updated": "2020-04-07 16:58:35.000000000", "message": "``literal``", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2e9071608652531880ae4b1051615bc797b406f4", "unresolved": false, "patch_set": 14, "id": "df33271e_5583d0cc", "line": 4, "range": {"start_line": 4, "start_character": 44, "end_line": 4, "end_character": 75}, "in_reply_to": "df33271e_ca6bc91c", "updated": "2020-04-08 02:02:15.000000000", "message": "Done", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "98ad58a4ba62375dbd993642954a2818f301d0c3", "unresolved": false, "patch_set": 14, "id": "df33271e_aa664554", "line": 6, "range": {"start_line": 6, "start_character": 8, "end_line": 6, "end_character": 11}, "updated": "2020-04-07 16:58:35.000000000", "message": "space before ``", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2e9071608652531880ae4b1051615bc797b406f4", "unresolved": false, "patch_set": 14, "id": "df33271e_f57b04f1", "line": 6, "range": {"start_line": 6, "start_character": 8, "end_line": 6, "end_character": 11}, "in_reply_to": "df33271e_aa664554", "updated": "2020-04-08 02:02:15.000000000", "message": "Done", "commit_id": "bef88246180b44b20d130446729436444b1add3c"}]}}, "openstack%2Fnova~master~If30990ec1c43177b7d13bd8ee1c5dc481265e47b": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:19:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:19:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-08 13:19:47.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 1, "date": "2020-04-08 13:19:47.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "149dd49ab8f2441b658729b725fb8d90c503a782", "unresolved": false, "patch_set": 1, "id": "df33271e_bfe06598", "line": 14, "range": {"start_line": 11, "start_character": 46, "end_line": 14, "end_character": 15}, "updated": "2020-04-06 17:54:48.000000000", "message": "im still not conviced this is the right thing to do but im willing to conced the point.\n\nwe have been bitten badly by make this snap change right at the end of the cycle in the past, im thinking specificly sriov numa affintiy polices where a decision in gerrit shortly before code free to remove the flavor extra spec and image property broke the primarly use case of ironic when we decied to move the polic to the pci aliase which is not use for neutron interface of vnict _type direct,dricect-pysical or macvtap.\n\n\nthis late change feels similar to me but i guess untill we intoduce a new microverion that affecs flavor create or update it will not break anything as user can always use the old microverions.\n\nthis change in policy however to only support strict for new micro versions should really be enforced with a hacking check.\n\ne.g. i think we should have a hacking check that  checks if we ever use flavor.extra_specs['some_value'] and asserts that is one of the know values so that intoducing a new extra specs without a validtor will casue a ci failuer.\n\nit could also be a unit test but i dont really know how to force that. we could maybe poison the the __get__/__set__  function on the flavor extra specs ovo class to raise an exception if its does not have avalidtor but im not sure how hard that would be to do.\n\nbasicaly i dont think we shoudl rely on a functional test where we actully would triger the validation to assert the presene of the validator as we often dont add functional test when we add an extra_spec.", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}], "nova/api/validation/extra_specs/validators.py": [{"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e2acdf3dfd8940d7e79fe8d18106bca81e9849a3", "unresolved": false, "patch_set": 1, "id": "df33271e_549dc057", "line": 29, "updated": "2020-04-06 16:53:33.000000000", "message": "Do we have a test to check if the list of NAMESPACES matches all registered extra spec validators?\n\nIt would be nice to have a test with the list of NAMESPACES, as it shouldn't change. Maybe with a NOTE saying changing this requires a microversion bump?", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "147436022279c7a9d8d41c0198877bb2dc09275e", "unresolved": false, "patch_set": 1, "id": "df33271e_fff81f7d", "line": 29, "in_reply_to": "df33271e_3cda9516", "updated": "2020-04-07 09:02:18.000000000", "message": "Done", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f71fb7875e6cd66cf3fd90781f213c8e8611b951", "unresolved": false, "patch_set": 1, "id": "df33271e_9f93e15c", "line": 29, "in_reply_to": "df33271e_549dc057", "updated": "2020-04-06 17:30:29.000000000", "message": "if you have a custom validtor could that not break\n\ne.g. if we were gettign the validator by checking the stevador entry point\n\n\ni would not like the test to change depending on what i have installed.", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "f5e0d2061b5465b651fb48f2784614b112b8dde6", "unresolved": false, "patch_set": 1, "id": "df33271e_3cda9516", "line": 29, "in_reply_to": "df33271e_9f93e15c", "updated": "2020-04-07 08:25:58.000000000", "message": "I don't think we should support custom validators, not without more API visibility into it.", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8cbc27d4a81ce197db7eeef59f69b7f77984f33a", "unresolved": false, "patch_set": 2, "id": "df33271e_9e43b0af", "line": 50, "range": {"start_line": 50, "start_character": 38, "end_line": 50, "end_character": 51}, "updated": "2020-04-08 10:26:45.000000000", "message": "does this mean we have namespaces with dynaminc names? Also I think there is no test coverage for this part.", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56c56c2cf2b06a2c7ccf4ba752795ed0e7255900", "unresolved": false, "patch_set": 2, "id": "df33271e_9e4a90a9", "line": 50, "range": {"start_line": 50, "start_character": 38, "end_line": 50, "end_character": 51}, "in_reply_to": "df33271e_1e5fa072", "updated": "2020-04-08 10:32:15.000000000", "message": "[1] https://review.opendev.org/#/c/704643/22/nova/api/validation/extra_specs/traits.py@27", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "d1101d836d142ad7832cc5bbadfedc2a9415430f", "unresolved": false, "patch_set": 2, "id": "df33271e_1e5fa072", "line": 50, "range": {"start_line": 50, "start_character": 38, "end_line": 50, "end_character": 51}, "in_reply_to": "df33271e_9e43b0af", "updated": "2020-04-08 10:31:33.000000000", "message": "Yes. See [1] for example. Let me add a follow-up to address the test coverage gap.", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8640ca26c60d05506f49d2e3316f3c9586e01864", "unresolved": false, "patch_set": 2, "id": "df33271e_be92f4f4", "line": 50, "range": {"start_line": 50, "start_character": 38, "end_line": 50, "end_character": 51}, "in_reply_to": "df33271e_9e4a90a9", "updated": "2020-04-08 10:37:46.000000000", "message": "Done at [1]\n\n[1] https://review.opendev.org/#/c/718357/2/nova/tests/unit/api/openstack/compute/test_flavors_extra_specs.py@306", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "2c223a3ebe48337b491b9312788baabe83adaf42", "unresolved": false, "patch_set": 2, "id": "df33271e_2937d1b2", "line": 51, "updated": "2020-04-08 07:31:54.000000000", "message": "++ we make it permissive", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "2c223a3ebe48337b491b9312788baabe83adaf42", "unresolved": false, "patch_set": 2, "id": "df33271e_a94ac123", "line": 76, "updated": "2020-04-08 07:31:54.000000000", "message": "and here we dynamically register the existing namespaces.\n\nThat said, just a concern : if we have a new change in Victoria adding a new extraspec using a new namespace, then it will be returning an exception if the key is wrong (while for Ussuri it will just accept it).\n\nI'm fine with this above, but like we said, that's why people wanting to add a new filter for a new extraspec should also provide an API microversion", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}], "nova/tests/unit/api/openstack/compute/test_flavors_extra_specs.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "149dd49ab8f2441b658729b725fb8d90c503a782", "unresolved": false, "patch_set": 1, "id": "df33271e_ff4f8d8f", "line": 277, "range": {"start_line": 277, "start_character": 10, "end_line": 277, "end_character": 28}, "updated": "2020-04-06 17:54:48.000000000", "message": "this partly does not fully test what i was asserting we should test in the commit message", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "227a454710ae93e03d22d8967aff25bdc65a8ed7", "unresolved": false, "patch_set": 1, "id": "df33271e_71d0d6ca", "line": 291, "range": {"start_line": 291, "start_character": 8, "end_line": 291, "end_character": 21}, "updated": "2020-04-06 16:19:28.000000000", "message": "unknown_specs might have been a better name. Can address if a follow-up", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e2acdf3dfd8940d7e79fe8d18106bca81e9849a3", "unresolved": false, "patch_set": 1, "id": "df33271e_d49a706c", "line": 291, "range": {"start_line": 291, "start_character": 8, "end_line": 291, "end_character": 21}, "in_reply_to": "df33271e_71d0d6ca", "updated": "2020-04-06 16:53:33.000000000", "message": "meh, yeah, if we need to respin, its a good fix up.", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f71fb7875e6cd66cf3fd90781f213c8e8611b951", "unresolved": false, "patch_set": 1, "id": "df33271e_ff8dcd31", "line": 291, "range": {"start_line": 291, "start_character": 8, "end_line": 291, "end_character": 21}, "in_reply_to": "df33271e_d49a706c", "updated": "2020-04-06 17:30:29.000000000", "message": "i think that makes sense to update too but i would do it in a follow up as you said or if you respin this.", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "147436022279c7a9d8d41c0198877bb2dc09275e", "unresolved": false, "patch_set": 1, "id": "df33271e_5feb0b11", "line": 291, "range": {"start_line": 291, "start_character": 8, "end_line": 291, "end_character": 21}, "in_reply_to": "df33271e_ff8dcd31", "updated": "2020-04-07 09:02:18.000000000", "message": "Done", "commit_id": "717b765cfdb701dff0e9f31b219314f5a4ac21c3"}], "nova/tests/unit/api/validation/extra_specs/test_validators.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "c2a8c4718ab2888b956f4bceae4c2c83779c0cdf", "unresolved": false, "patch_set": 2, "id": "df33271e_b30b7022", "line": 32, "range": {"start_line": 30, "start_character": 10, "end_line": 32, "end_character": 43}, "updated": "2020-04-07 11:04:06.000000000", "message": "nit you could probaly make this dynamic by doing a dir() of\n nova.api.validation.extra_specs \nbut this is fine too", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "2c223a3ebe48337b491b9312788baabe83adaf42", "unresolved": false, "patch_set": 2, "id": "df33271e_e954c9cc", "line": 32, "range": {"start_line": 30, "start_character": 10, "end_line": 32, "end_character": 43}, "in_reply_to": "df33271e_b30b7022", "updated": "2020-04-08 07:31:54.000000000", "message": "Agreed. Can be done in a FUP.", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7269cdc5e46aa5180130bb53c18ef50f7b561b0e", "unresolved": false, "patch_set": 2, "id": "df33271e_4fd4d5bd", "line": 32, "range": {"start_line": 30, "start_character": 10, "end_line": 32, "end_character": 43}, "in_reply_to": "df33271e_e954c9cc", "updated": "2020-04-08 09:21:04.000000000", "message": "I don't want to do that since it implies a somewhat artificial link between the names of the files containing the validators and the namespaces we use. I'd also have to rename the 'traits.py' file to 'trait.py'", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "c2a8c4718ab2888b956f4bceae4c2c83779c0cdf", "unresolved": false, "patch_set": 2, "id": "df33271e_3345a044", "line": 35, "range": {"start_line": 35, "start_character": 23, "end_line": 35, "end_character": 31}, "updated": "2020-04-07 11:04:06.000000000", "message": "issubset is correct as we want to assert that all the intree validator are present and ignore out of tree vailidators which issubset will do", "commit_id": "bf66ac78bb32a6c8d13dac01f1badd15a9c1d2e7"}]}}, "openstack%2Fnova~master~Ied75efd46336917150f80be2db10f674575826ba": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 2, "date": "2020-04-08 12:31:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 14:11:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "97faff56d64668ef270ed2f5855a7ce661d41c6b", "unresolved": false, "patch_set": 1, "id": "df33271e_e1c05de3", "line": 15, "range": {"start_line": 13, "start_character": 18, "end_line": 15, "end_character": 42}, "updated": "2020-04-08 11:34:05.000000000", "message": "That's going to be lost eventually, can you add it as a comment in the bug?", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8a0d40d027fe68b02c27c5fa461102e7f9ed0b4e", "unresolved": false, "patch_set": 1, "id": "df33271e_54458914", "line": 15, "range": {"start_line": 13, "start_character": 18, "end_line": 15, "end_character": 42}, "in_reply_to": "df33271e_e1c05de3", "updated": "2020-04-08 12:14:51.000000000", "message": "OK, will comment in the bug.", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "37d1b77ab125efabe62c6f3149f783bd9d639ebf", "unresolved": false, "patch_set": 2, "id": "df33271e_f7365fb4", "line": 12, "range": {"start_line": 12, "start_character": 7, "end_line": 12, "end_character": 12}, "updated": "2020-04-08 12:31:45.000000000", "message": "nit: do not", "commit_id": "98fbff8b4c7eb2c62c74f28bb344a09094729212"}], "nova/api/openstack/compute/volumes.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "97faff56d64668ef270ed2f5855a7ce661d41c6b", "unresolved": false, "patch_set": 1, "id": "df33271e_c12ef9a3", "line": 455, "range": {"start_line": 455, "start_character": 44, "end_line": 455, "end_character": 69}, "updated": "2020-04-08 11:34:05.000000000", "message": "Should we use strict=True and catch ValueError's?\n\nhttps://github.com/openstack/oslo.utils/blob/2180db82b605cf84902ee379fffc0b34e17e92c7/oslo_utils/strutils.py#L123-L158\n\nOtherwise this is going to default to False. Otherwise if a user is attempting to update this to True but provides `foo` the request is successful but it remains False.", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8a0d40d027fe68b02c27c5fa461102e7f9ed0b4e", "unresolved": false, "patch_set": 1, "id": "df33271e_975ef30f", "line": 455, "range": {"start_line": 455, "start_character": 44, "end_line": 455, "end_character": 69}, "in_reply_to": "df33271e_54d74950", "updated": "2020-04-08 12:14:51.000000000", "message": "Right, I will update it.", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6bc7b14f576287c230acec64dd319a071ee5a5fc", "unresolved": false, "patch_set": 1, "id": "df33271e_54d74950", "line": 455, "range": {"start_line": 455, "start_character": 44, "end_line": 455, "end_character": 69}, "in_reply_to": "df33271e_c12ef9a3", "updated": "2020-04-08 11:37:40.000000000", "message": "We could even call strutils.is_valid_boolstr(att['delete_on_termination']) to determine if it's valid before calling strutils.bool_from_string and catching ValueError's.", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}], "nova/tests/unit/api/openstack/compute/test_volumes.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "97faff56d64668ef270ed2f5855a7ce661d41c6b", "unresolved": false, "patch_set": 1, "id": "df33271e_a17bf5bb", "line": 1259, "range": {"start_line": 1259, "start_character": 0, "end_line": 1259, "end_character": 45}, "updated": "2020-04-08 11:34:05.000000000", "message": "nit - would be good to test this with other acceptable values, 'true', 'True', 'false' etc?", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8a0d40d027fe68b02c27c5fa461102e7f9ed0b4e", "unresolved": false, "patch_set": 1, "id": "df33271e_b76337dc", "line": 1259, "range": {"start_line": 1259, "start_character": 0, "end_line": 1259, "end_character": 45}, "in_reply_to": "df33271e_a17bf5bb", "updated": "2020-04-08 12:14:51.000000000", "message": "Done", "commit_id": "3298e0447f228f2ebe9ecb3866f6d91da2618d90"}]}}, "x%2Fvmware-nsx~stable%2Fstein~Id576ea0bc2e9c3dff1f1ba683ba26f1e30dded44": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 06:26:51.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla-ansible~master~I92f0edba92c9e3707d89b3ff4033ac886b29cf6d": {"owner_id": 28356, "owner_name": "Rafael Weingartner", "owner_email": "rafael@apache.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 14:09:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-12 04:18:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 0, "_account_id": 28356, "name": "Rafael Weingartner", "email": "rafael@apache.org", "username": "rafaelweingartner"}, {"value": 1, "date": "2020-04-11 16:16:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30695, "name": "Pedro Henrique Pereira Martins", "email": "phpm13@gmail.com", "username": "pedrohpmartins"}], "comments": {}}, "openstack%2Fkolla~master~Ice42d936476635b627b21dc8676fb7bc560cd3a9": {"owner_id": 28356, "owner_name": "Rafael Weingartner", "owner_email": "rafael@apache.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 09:54:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-12 04:17:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 1, "date": "2020-04-11 16:13:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30695, "name": "Pedro Henrique Pereira Martins", "email": "phpm13@gmail.com", "username": "pedrohpmartins"}], "comments": {}}, "openstack%2Fzun~master~I7b347ff54c46d317c7721303bf0c76c915551216": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-searchlightclient~stable%2Fussuri~Ia2d300f1b14ade320ffd7c1f87fd4b9a1d3ba2c5": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 2, "date": "2020-04-11 23:18:24.000000000", "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-11 19:54:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-searchlightclient~stable%2Fussuri~I57f9da040b19bca9b51f2bbfde5483f762016b9c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 2, "date": "2020-04-11 23:20:00.000000000", "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-11 20:07:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-searchlightclient~master~I472b6a946f85702f83fecba0a25151a781f4dd7d": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 2, "date": "2020-04-11 23:19:32.000000000", "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~Ida67463533ae9ddf5508c290e9fe898605bd4659": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-11 20:43:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I197061a76d99dbfc15e45fff0ab7bdd9321a8b13": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-11 20:43:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I51dc25889c1d1fb361f0be6f8c0aa47ca64c9aaa": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:05:06.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}], "comments": {}}, "openstack%2Fkolla~master~Id5e143636f9a81e7294b775f3d8b9134bee58054": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 0, "_account_id": 30408, "name": "Qitao", "email": "qihongtao@inspur.com", "username": "qihongtao"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-04-11 09:12:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 0, "_account_id": 30562, "name": "Ziyu Bai", "email": "baiziyu@inspur.com", "username": "baiziyu-inspur"}], "comments": {}}, "openstack%2Freleases~master~Id5009782aec88819e0dc376d98e4bfdc6ad0a8be": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-20 10:11:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-01-17 14:45:43.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {}}, "openstack%2Fpython-octaviaclient~stable%2Fussuri~Iabd0e42347cc54c8ffd019d8be0ef2a4f805c942": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 08:12:07.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-11 19:57:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-octaviaclient~stable%2Fussuri~Iecd05261ea5c8e3d90b8f82499f100b2022a0e26": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 08:12:25.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-11 19:57:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-brick-cinderclient-ext~stable%2Fussuri~I8dcad8d604d7af3424b47a3e3e0438c66987b6e6": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 19:56:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-brick-cinderclient-ext~stable%2Fussuri~Ic054b8bf6ddf8abedb3eaf06ac456e514f4997ca": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 19:56:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-freezerclient~stable%2Fussuri~I51a2bd723d0bd3af7e6c6eb836217390bfba820a": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 20:05:23.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstack-helm~master~I785318b3090d7117d74d165ba3236dc239cf9ea1": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 2, "date": "2020-04-11 17:12:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:48:23.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~Iffd00261e6a15e2dd7c98e96bbcc9db3e86c0c65": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 2, "date": "2020-04-11 17:12:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:48:14.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "openstack%2Fglance~master~I0f61f85a0aaa4f68e345fa08fbb6b039d3d32587": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 14:16:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 14:16:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"releasenotes/notes/deprecate-admin_role-2f9d33ed0785d082.yaml": [{"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "ac8728d23d6f174b36946e2f243d9614d9568a1d", "unresolved": false, "patch_set": 1, "id": "df33271e_30689a1b", "line": 25, "range": {"start_line": 25, "start_character": 0, "end_line": 25, "end_character": 4}, "updated": "2020-03-31 04:44:58.000000000", "message": "Need to remove these white spaces", "commit_id": "8cf5038a5e82154738bdcfc0f4865f1bd7c87ece"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "6dd6f0c0de824181144112989e423d71d3cf9ca0", "unresolved": false, "patch_set": 1, "id": "df33271e_0c057611", "line": 25, "range": {"start_line": 25, "start_character": 0, "end_line": 25, "end_character": 4}, "in_reply_to": "df33271e_30689a1b", "updated": "2020-03-31 12:07:59.000000000", "message": "Will remove them right away.  I hate it when that happens!\n\nGuess we need to look over our pep8/doc8 coverage.  I *think* that at least one of the projects I've contributed text to during the cycle will raise an error for a blank line that contains whitespace (though I may only be imagining that).", "commit_id": "8cf5038a5e82154738bdcfc0f4865f1bd7c87ece"}]}}, "opendev%2Fsystem-config~master~Ica1e6cf1ccbcc66e58fcb1f47748022dc03aa8b8": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 17:10:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-10 18:42:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "opendev%2Fsystem-config~master~Iaec41b1183373bd832dae70af4ae04dfb5bde263": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:46:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 18:46:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpython-vitrageclient~master~I0151b5d637b91c22916ad9cc6afa0d2235550308": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:49:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fpython-vitrageclient~master~Ife0ff8804f857c01387833fdb6c8f66c32e5a426": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:50:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fpython-vitrageclient~stable%2Fussuri~I9a50d4b091625017134ded3a39c3c44774966c99": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:50:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fpython-vitrageclient~stable%2Fussuri~I2f3d2d5113b97f8480226338e46b9d851e201bd5": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:50:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fopenstack-helm-images~master~Id1ecc85694dddd177dde628a031b7cb637932fbc": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 17:12:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 2, "date": "2020-04-11 18:48:03.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "openstack%2Fmanila~master~If82aaa184db84660389f82654279f3c5b238fd51": {"owner_id": 30002, "owner_name": "Douglas Viroel", "owner_email": "viroel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, {"value": 1, "date": "2019-11-14 03:08:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17130, "name": "melissaml", "email": "ma.lei@99cloud.net", "username": "malei"}, {"value": 2, "date": "2019-11-14 09:44:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2019-11-14 01:58:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fopenstack-helm~master~Ic50311451cc6ecfae13b3e6ff07d3d7cb44150ff": {"owner_id": 20466, "owner_name": "Tin Lam", "owner_email": "tin@lam.wtf", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~I43ab387df0e7e06b693b092e164dcfcff95d8b60": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I417c3aeface20f79fabd3f707395a8eaa9cc1082": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ic6e075cd40168cefeefc63374b12190a523e7522": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Iefbc164f4bc9956fdaec773f3252101e0de3f39a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I2e9392cbe9818ba65612145d5b11698ffe738c76": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I7a65fe718179d57ee4e25cfaf434b1665712e87f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ic00c8f159c07f100c1d41c130acbbbea1bf646e0": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:27:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I2061111c4226fe3336e1096c9592a30f8f2e5def": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I5b7b7cf2d7f8ed3261a1494a00cb270925d44030": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I696d227e3062cfc61f51136c17c4293f15af96bc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I0f9eb42df0d9798a5c06add7cb3cc46a46a69404": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I20a12c1481f16425725041680cbe9704889d4e2d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I0346688fc065144a33bc1accb18726a756d2789b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ic2eb85a83850da13e3195d610601236285f1404d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:26:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ifccb5946c0c948b556c63126418ed3f2ccafce1a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I4a1c1fc1d939fc5740ae446cdf1374e7b580e056": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ica86d86a9d98dc4bbabb798ab35d75a77875377d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~If07fde84bb04380821b1406e3efd3c2274550799": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ia411be34fa8ca64e0506bf7f78ab07143799bd8a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ic607e628ba90179098b6d97827fdf9b166f07447": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Iaf565885aae6b01ea671c60855c5acbfcdd8c5e1": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I44a5e07a131afa1934515cbd5f3e9866f12f597c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:25:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I030327ae9546d50d975a786ed34c8f07983669e4": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21054, "name": "gengchc", "email": "578043796@qq.com", "username": "gengchc"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 2, "date": "2020-04-11 18:22:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I7adda48a2fbd2fea9bf80d9a4264cf79180c2734": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:20:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I100b7ae5381953e8e5454061d7e2b106696fc518": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 2, "date": "2020-04-11 18:18:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I74125e4d800dd33daeb7cbe434eb3d994aa7cd9c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:15:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Freleases~master~If155fcc28decfa3dede4f024c7a46387ffd39409": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 18:13:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "opendev%2Fsystem-config~master~I1e174273faefacea98ebece7a90a1baf93d52245": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:48:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 18:48:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"inventory/groups.yaml": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "7d40cd01e984a6067db0280c06319c7bec6886c2", "unresolved": false, "patch_set": 1, "id": "7f423b7e_a16fd890", "line": 25, "range": {"start_line": 25, "start_character": 19, "end_line": 25, "end_character": 30}, "updated": "2020-04-10 18:21:50.000000000", "message": "Note the server is still review01.openstack.org. Also its already configured in the backup server. We just need to ensure we are still managing the bup cron and config.", "commit_id": "f2ac1ade7ab64ab86dd261c842c2aaf39be666ad"}]}}, "openstack%2Fpython-novaclient~master~I99e3fc9c5a2d8c627e6e083bee157733065546bc": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 15:08:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, {"value": 2, "date": "2020-04-11 12:17:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {}}, "openstack%2Fnova~master~I63e65789e8cc48b75c9e6e4e333624172fd298d8": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:20:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:20:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "opendev%2Fsystem-config~master~I95f7c0dff4f1de8709a1e5e32eb818ef2852a654": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 13:49:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-11 14:15:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fnova~master~Ibfc88fb15bb96a54c966116ce2507ef84cc3087f": {"owner_id": 6062, "owner_name": "jichenjc", "owner_email": "jichenjc@cn.ibm.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-04 09:57:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-07 07:18:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3a8ec2b18e44737b331af93772a8a00eecdf69da", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b3e554dd", "line": 12, "range": {"start_line": 12, "start_character": 54, "end_line": 12, "end_character": 61}, "updated": "2019-12-09 17:48:43.000000000", "message": "annoying", "commit_id": "58d50df7c4da04511218536dae61b370a63a87c8"}]}}, "openstack%2Fneutron~stable%2Ftrain~I87efe6cf8734bae6523106944e99fbd7db9ef4d5": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-09 19:42:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-04-09 23:53:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "5b0ffa6d80a038398e650c0b892aa544726656ea", "unresolved": false, "patch_set": 1, "id": "df33271e_45064c1e", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 71}, "updated": "2020-04-09 13:15:33.000000000", "message": "This was only true for the original patch on master", "commit_id": "b77176d842b0d7a99cdfa3805ccc19e2fa8e29b3"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "7f02f5f67066aeea8768c219e7a83e2d56247d7f", "unresolved": false, "patch_set": 1, "id": "df33271e_25e988b6", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 71}, "in_reply_to": "df33271e_45064c1e", "updated": "2020-04-09 13:42:22.000000000", "message": "Ups, right!!", "commit_id": "b77176d842b0d7a99cdfa3805ccc19e2fa8e29b3"}]}}, "opendev%2Fsystem-config~master~I813c2a102ff8a0821f9353ba0c0f4a1ff98d7c11": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 01:03:54.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": -2, "date": "2020-04-11 13:55:55.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "opendev%2Fjeepyb~master~Ie967ceac77ecb898cab24827644b981eed22e141": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 14:59:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-11 14:59:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "openstack%2Fpython-novaclient~master~I0ef054d7c3d47d4a86dc2a67f2ef0f584cb96ddf": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 16:05:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, {"value": 2, "date": "2020-04-11 11:10:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {}}, "opendev%2Fsystem-config~master~I85a7dcc31f8991da2765a60b0d8f236aecc3024a": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 14:45:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-11 14:46:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "openstack%2Fnova~master~I4cab282ee95a39e0201a439f8cc18caa06547cd7": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:19:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:19:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~I83523a29d212460b6e4536e7eb0992726c07bd81": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-04-06 10:46:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 14:00:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-04 05:31:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/api/openstack/compute/limits.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0227ca29d78aa27ce07a5945b055f2e1f60a4723", "unresolved": false, "patch_set": 7, "id": "df33271e_0d1a9d6d", "line": 83, "range": {"start_line": 81, "start_character": 12, "end_line": 83, "end_character": 17}, "updated": "2020-03-31 02:13:00.000000000", "message": "nit: we can move this to the context.can(limits_policies.OTHER_PROJECT_LIMIT_POLICY_NAME,\n            target={'project_id': project_id})", "commit_id": "8c9ae6be59cfc0a9e8f0cb278504c1f91a34dc03"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "44228052b1eef13a75853a0fe3f4e05b9d6ec456", "unresolved": false, "patch_set": 7, "id": "df33271e_9359b08f", "line": 83, "range": {"start_line": 81, "start_character": 12, "end_line": 83, "end_character": 17}, "in_reply_to": "df33271e_0d1a9d6d", "updated": "2020-03-31 06:10:36.000000000", "message": "Done", "commit_id": "8c9ae6be59cfc0a9e8f0cb278504c1f91a34dc03"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca96391a2aad0f264119689f03ecacac96ea7ce5", "unresolved": false, "patch_set": 8, "id": "df33271e_87f5e6ef", "line": 77, "updated": "2020-03-31 09:22:00.000000000", "message": "you missed target={} in here", "commit_id": "9065d96fe5d363dcef39a70875a1c18fa2d0f605"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "b998809010c78d9866e4b821f8af57f43be215bf", "unresolved": false, "patch_set": 8, "id": "df33271e_640c0da5", "line": 77, "in_reply_to": "df33271e_87f5e6ef", "updated": "2020-03-31 20:55:14.000000000", "message": "Done", "commit_id": "9065d96fe5d363dcef39a70875a1c18fa2d0f605"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "966b4b81ac9f6cccc4fa887aca086c5dc2091b50", "unresolved": false, "patch_set": 9, "id": "df33271e_277b27be", "line": 77, "updated": "2020-03-31 21:59:52.000000000", "message": "E999 SyntaxError: invalid syntax", "commit_id": "fc2ce4f7c594cab88696c7dda6c832a04ed85c9d"}], "nova/tests/unit/api/openstack/compute/test_limits.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0227ca29d78aa27ce07a5945b055f2e1f60a4723", "unresolved": false, "patch_set": 7, "id": "df33271e_ed165949", "line": 207, "range": {"start_line": 205, "start_character": 7, "end_line": 207, "end_character": 9}, "updated": "2020-03-31 02:13:00.000000000", "message": "ditto.", "commit_id": "8c9ae6be59cfc0a9e8f0cb278504c1f91a34dc03"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "44228052b1eef13a75853a0fe3f4e05b9d6ec456", "unresolved": false, "patch_set": 7, "id": "df33271e_735eac76", "line": 207, "range": {"start_line": 205, "start_character": 7, "end_line": 207, "end_character": 9}, "in_reply_to": "df33271e_ed165949", "updated": "2020-03-31 06:10:36.000000000", "message": "Done", "commit_id": "8c9ae6be59cfc0a9e8f0cb278504c1f91a34dc03"}]}}, "openstack%2Fnova~master~Ib5dbcee295d8a78b9a55806054de6265c3663343": {"owner_id": 7166, "owner_name": "Sylvain Bauza", "owner_email": "sbauza@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:55:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:55:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/functional/libvirt/test_vgpu.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ed9c80db49fcec6f84f1f89ed90a3cc7dc7b5492", "unresolved": false, "patch_set": 8, "id": "df33271e_ea767706", "line": 107, "range": {"start_line": 70, "start_character": 1, "end_line": 107, "end_character": 42}, "updated": "2020-04-08 10:03:41.000000000", "message": "Appears generic enough to be useful outside of these tests.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "feea0e2dc29bab1de549389ddc0a42acfd6a3147", "unresolved": false, "patch_set": 8, "id": "df33271e_e307bdc8", "line": 107, "range": {"start_line": 70, "start_character": 1, "end_line": 107, "end_character": 42}, "in_reply_to": "df33271e_c15439cd", "updated": "2020-04-08 14:22:35.000000000", "message": "Awesome thanks.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "1b43cdf122c7095e2fdb3e7c986b7f862233c6f3", "unresolved": false, "patch_set": 8, "id": "df33271e_c15439cd", "line": 107, "range": {"start_line": 70, "start_character": 1, "end_line": 107, "end_character": 42}, "in_reply_to": "df33271e_ea767706", "updated": "2020-04-08 11:07:03.000000000", "message": "Yeah totally, hence the WIP. \nFWIW, we already have them in a base class ProviderUsageBaseTestCase [1] but we don't inherit from it.\nWe could move the below methods to a parent base class, but I wanted to rush on this one to prove it works.\n\n[1] https://github.com/openstack/nova/blob/cd16ae2/nova/tests/functional/integrated_helpers.py#L563-L600", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ed9c80db49fcec6f84f1f89ed90a3cc7dc7b5492", "unresolved": false, "patch_set": 8, "id": "df33271e_caba9308", "line": 179, "range": {"start_line": 177, "start_character": 0, "end_line": 179, "end_character": 53}, "updated": "2020-04-08 10:03:41.000000000", "message": "Odd, even when the compute isn't started until L191?", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "feea0e2dc29bab1de549389ddc0a42acfd6a3147", "unresolved": false, "patch_set": 8, "id": "df33271e_a3fdb5b2", "line": 179, "range": {"start_line": 177, "start_character": 0, "end_line": 179, "end_character": 53}, "in_reply_to": "df33271e_01d3c139", "updated": "2020-04-08 14:22:35.000000000", "message": "Ah TIL thanks!", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "1b43cdf122c7095e2fdb3e7c986b7f862233c6f3", "unresolved": false, "patch_set": 8, "id": "df33271e_01d3c139", "line": 179, "range": {"start_line": 177, "start_character": 0, "end_line": 179, "end_character": 53}, "in_reply_to": "df33271e_caba9308", "updated": "2020-04-08 11:07:03.000000000", "message": "Yeah, it's not a problem with the nova-compute service or with the .flags() method, just oslo.config that needs to create the according objects in memory.\n\nSee the implementation of https://review.opendev.org/#/c/564440/ that needs this too.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ed9c80db49fcec6f84f1f89ed90a3cc7dc7b5492", "unresolved": false, "patch_set": 8, "id": "df33271e_ca43b3ae", "line": 203, "range": {"start_line": 201, "start_character": 0, "end_line": 203, "end_character": 53}, "updated": "2020-04-08 10:03:41.000000000", "message": "So if we created another instance it wouldn't use nvidia-12?", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "feea0e2dc29bab1de549389ddc0a42acfd6a3147", "unresolved": false, "patch_set": 8, "id": "df33271e_23e085fa", "line": 203, "range": {"start_line": 201, "start_character": 0, "end_line": 203, "end_character": 53}, "in_reply_to": "df33271e_a1c49560", "updated": "2020-04-08 14:22:35.000000000", "message": "ACK thanks.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "1b43cdf122c7095e2fdb3e7c986b7f862233c6f3", "unresolved": false, "patch_set": 8, "id": "df33271e_a1c49560", "line": 203, "range": {"start_line": 201, "start_character": 0, "end_line": 203, "end_character": 53}, "in_reply_to": "df33271e_ca43b3ae", "updated": "2020-04-08 11:07:03.000000000", "message": "*None* of the created instances can have a nvidia-12 type since *none* of the existing GPUs (even 0000:81:01.0) have available mdev capacity for using this type.\n\nSee the below second test, I'm actually modifying 0000:81:01.0 to have some mdev capacity for nvidia-12.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ed9c80db49fcec6f84f1f89ed90a3cc7dc7b5492", "unresolved": false, "patch_set": 8, "id": "df33271e_6a354746", "line": 251, "range": {"start_line": 235, "start_character": 1, "end_line": 251, "end_character": 65}, "updated": "2020-04-08 10:03:41.000000000", "message": "I'd repeat this for CUSTOM_NVIDIA_12 to be safe.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "1b43cdf122c7095e2fdb3e7c986b7f862233c6f3", "unresolved": false, "patch_set": 8, "id": "df33271e_21aec597", "line": 251, "range": {"start_line": 235, "start_character": 1, "end_line": 251, "end_character": 65}, "in_reply_to": "df33271e_6a354746", "updated": "2020-04-08 11:07:03.000000000", "message": "Cool, I'll do.", "commit_id": "cfed5fb1b2c383ca4d907764db23cef0e7ae95f5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7ff5633ddbe09fbb535fdeb441b4f5c9d67d8aed", "unresolved": false, "patch_set": 11, "id": "df33271e_64e71714", "line": 72, "updated": "2020-04-09 10:23:45.000000000", "message": "grah, forgot to remove this line", "commit_id": "4082bd83e3fac74d646b86cd6eb887e0e8b4323c"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "3d253b9f9f93b2594b3354fdfc285918cef2b4d7", "unresolved": false, "patch_set": 11, "id": "df33271e_a9a8d81f", "line": 173, "range": {"start_line": 173, "start_character": 25, "end_line": 173, "end_character": 33}, "updated": "2020-04-09 10:15:25.000000000", "message": "This seems to be a list of UUIDs so the name you try to find will never be in it.\n\nhost1_pci_0000_81_01_0 in ['1c8c98d4-4eaa-4e4a-a910-23007aa6cf1d', 'ac35ba2a-aa82-467e-a02a-fa4e4537cfc6']", "commit_id": "4082bd83e3fac74d646b86cd6eb887e0e8b4323c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b5a5db3e41b47ef840ca7118558e70715578862d", "unresolved": false, "patch_set": 12, "id": "df33271e_62f7068d", "line": 70, "range": {"start_line": 70, "start_character": 0, "end_line": 70, "end_character": 46}, "updated": "2020-04-09 13:23:48.000000000", "message": "It would be nice to override the 'start_computes' function from 'base.ServersTestBase' instead of adding another way to start this. However, I see this is how we've done this in test_pci_sriov_servers.py so that could be a follow-up", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "111658b7df3feb665dda8da57d8ea2e1fa2dedc2", "unresolved": false, "patch_set": 12, "id": "df33271e_f3764aa4", "line": 70, "range": {"start_line": 70, "start_character": 0, "end_line": 70, "end_character": 46}, "in_reply_to": "df33271e_62f7068d", "updated": "2020-04-09 14:29:52.000000000", "message": "Ack, will provide a FUP", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}], "nova/tests/unit/virt/libvirt/fakelibvirt.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b5a5db3e41b47ef840ca7118558e70715578862d", "unresolved": false, "patch_set": 12, "id": "df33271e_a5163848", "line": 249, "range": {"start_line": 248, "start_character": 8, "end_line": 249, "end_character": 62}, "updated": "2020-04-09 13:23:48.000000000", "message": "nit: missing indentation", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "111658b7df3feb665dda8da57d8ea2e1fa2dedc2", "unresolved": false, "patch_set": 12, "id": "df33271e_13592e34", "line": 249, "range": {"start_line": 248, "start_character": 8, "end_line": 249, "end_character": 62}, "in_reply_to": "df33271e_a5163848", "updated": "2020-04-09 14:29:52.000000000", "message": "ack, will provide a FUP", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b5a5db3e41b47ef840ca7118558e70715578862d", "unresolved": false, "patch_set": 12, "id": "df33271e_853cd4c8", "line": 380, "range": {"start_line": 380, "start_character": 8, "end_line": 380, "end_character": 56}, "updated": "2020-04-09 13:23:48.000000000", "message": "Or\n\n  if not (num_vfs or num_pfs or num_mdevcap):", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "111658b7df3feb665dda8da57d8ea2e1fa2dedc2", "unresolved": false, "patch_set": 12, "id": "df33271e_d3522613", "line": 380, "range": {"start_line": 380, "start_character": 8, "end_line": 380, "end_character": 56}, "in_reply_to": "df33271e_853cd4c8", "updated": "2020-04-09 14:29:52.000000000", "message": "I tried to make it more explicit for understanding that both num_vfs and num_pfs are related, while num_mdevcap is just a different argument.", "commit_id": "9f3a256149eb97bdb2b9bc5efdd7cc86abf47c44"}]}}, "opendev%2Fjeepyb~master~I9d511caa6db6f958a215f131692e185c717b66d5": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:39:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"jeepyb/cmd/notify_impact.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "f4489599e5029fe5ceb87d493180b7a5257c5dca", "unresolved": false, "patch_set": 2, "id": "7f423b7e_be26d915", "line": 52, "updated": "2020-04-10 17:28:48.000000000", "message": "pep8: F821 undefined name 'GERRIT_GIT_DIR'", "commit_id": "0bbbbca9bfe45162cf0a7d496a155dc0920f704b"}], "jeepyb/cmd/update_blueprint.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "f4489599e5029fe5ceb87d493180b7a5257c5dca", "unresolved": false, "patch_set": 2, "id": "7f423b7e_fe2061fa", "line": 35, "updated": "2020-04-10 17:28:48.000000000", "message": "pep8: F821 undefined name 'GERRIT_GIT_DIR'", "commit_id": "0bbbbca9bfe45162cf0a7d496a155dc0920f704b"}], "jeepyb/cmd/update_bug.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "f4489599e5029fe5ceb87d493180b7a5257c5dca", "unresolved": false, "patch_set": 2, "id": "7f423b7e_9e231d06", "line": 34, "updated": "2020-04-10 17:28:48.000000000", "message": "pep8: F821 undefined name 'GERRIT_GIT_DIR'", "commit_id": "0bbbbca9bfe45162cf0a7d496a155dc0920f704b"}]}}, "openstack%2Fneutron-dynamic-routing~master~I187c5ce3de923bf5b182c872eaf34a5df1c411c9": {"owner_id": 24061, "owner_name": "pangliye", "owner_email": "pangliye@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-11-20 11:12:48.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Fceilometer-powervm~master~Idd0f99aecbb80e7ed0af538a48ad22ebec855438": {"owner_id": 28614, "owner_name": "jacky06", "owner_email": "zhang.min@99cloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-09-16 08:42:39.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27822, "name": "pengyuesheng", "email": "pengyuesheng@gohighsec.com", "username": "pengyuesheng"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28063, "name": "VEDA", "email": "va00121481@techmahindra.com", "username": "VedaAnnayappa"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16069, "name": "Gautam Prasad", "email": "gautpras@in.ibm.com", "username": "gautamd"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13637, "name": "Divya K Konoor", "email": "dikonoor@in.ibm.com", "username": "dikonoor"}, {"value": 1, "date": "2019-10-17 02:50:39.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 1, "date": "2019-10-14 13:42:50.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27781, "name": "zhulingjie", "email": "easyzlj@gmail.com", "username": "zhulingjie"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28614, "name": "jacky06", "email": "zhang.min@99cloud.net", "username": "jacky06"}, {"value": 2, "date": "2019-09-13 16:46:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2019-09-14 15:16:32.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28743, "name": "huang liujie", "email": "huang.liujie@99cloud.net", "username": "ljhuang"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10608, "name": "Matthew Edmonds", "email": "edmondsw@us.ibm.com", "username": "edmondsw"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}], "comments": {"doc/requirements.txt": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0a02d2ed4ae9ab29fb6b72d92d8283acffe22935", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_a2d4afbe", "line": 6, "range": {"start_line": 5, "start_character": 0, "end_line": 6, "end_character": 58}, "updated": "2019-06-18 21:07:30.000000000", "message": "\u2714", "commit_id": "feaa9d9ccb1659dbcea64f6988c4f372d3778033"}]}}, "openstack%2Fnova~master~I99194539bd77790896a79fee47978905cba99bee": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/virt/libvirt/test_driver.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0594ad440755d0b87a94ce7d9fdda2463d80381d", "unresolved": false, "patch_set": 13, "id": "df33271e_cb600fd2", "line": 22418, "updated": "2020-03-24 16:41:21.000000000", "message": "Something is missing from this test. I reverted the change from the libvirt/driver.py L3458 and the test still passes.", "commit_id": "a1a46729d125260ab706c4e060daf6c87b9d1713"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "85860571a3b6fd46e5210bab013bd9f7d9ca5c69", "unresolved": false, "patch_set": 13, "id": "df33271e_c1dc4c76", "line": 22418, "in_reply_to": "df33271e_08f947c7", "updated": "2020-03-26 11:36:21.000000000", "message": "OK, but then what test covers the change in the current patch?", "commit_id": "a1a46729d125260ab706c4e060daf6c87b9d1713"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "353617af944d69e6b62e76495c5e7d9857019f7f", "unresolved": false, "patch_set": 13, "id": "df33271e_214ff892", "line": 22418, "in_reply_to": "df33271e_c1dc4c76", "updated": "2020-03-26 12:18:53.000000000", "message": "Gah, apologies. I'll add a simple test to assert the capability but might follow up with a functional test that tries to assert the actual traits in a functional env.", "commit_id": "a1a46729d125260ab706c4e060daf6c87b9d1713"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "a9a6d2acfb77ba689b463367675ec55e3ee3cb22", "unresolved": false, "patch_set": 13, "id": "df33271e_08f947c7", "line": 22418, "in_reply_to": "df33271e_cb600fd2", "updated": "2020-03-25 15:24:37.000000000", "message": "Yeah so this is slightly awkward.\n\nI0e1241ae691afd2af12ef15706c454c05d9f932c introduced support for this within the libvirt driver but it wasn't reachable at the time due to the following conditional in the compute layer:\n\nhttps://github.com/openstack/nova/blob/35240b0d8c450c42d6f44be5f1df58d850a020d3/nova/compute/api.py#L4238-L4241\n\nThis change is more concerned with reporting the COMPUTE_RESCUE_BFV trait introduced in 622c9635cb225ad2570c671c7b3b14df00532bc6.\n\nI'll add a more explict note and test for that now.", "commit_id": "a1a46729d125260ab706c4e060daf6c87b9d1713"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "8b8852d52151698a51e95ee2ec84c49f733927e0", "unresolved": false, "patch_set": 20, "id": "df33271e_a37bf5bb", "line": 3473, "updated": "2020-04-08 14:37:03.000000000", "message": "looks like you merged two different things into one patch (enable the BFV trait as the main change and try to lookup back to the bdms for the image metadata) but that's a nit.", "commit_id": "d356bca756d53d18ec9f6091ee4258180ddb98c6"}]}}, "openstack%2Fnova~master~I1510007bdd67fc273104e92421785086cf29644d": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~I4fd75a70f096fe29489b12f60a2a913b783d1d1c": {"owner_id": 27302, "owner_name": "Shilpa Devharakar", "owner_email": "shilpa.devharakar@nttdata.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11816, "name": "mike_mp@zzzcomputing.com", "email": "mike_mp@zzzcomputing.com", "username": "zzzeek"}, {"value": -2, "date": "2020-01-14 18:43:17.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "date": "2020-03-05 14:45:53.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "date": "2020-01-31 01:29:27.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/db/sqlalchemy/api.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1d4907b7", "line": 1948, "range": {"start_line": 1947, "start_character": 57, "end_line": 1948, "end_character": 72}, "updated": "2019-12-05 14:24:21.000000000", "message": "Well this is clearly out of date but it was before your change as well.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4d1306b9", "line": 1948, "range": {"start_line": 1947, "start_character": 57, "end_line": 1948, "end_character": 72}, "in_reply_to": "3fa7e38b_1d4907b7", "updated": "2019-12-11 07:22:13.000000000", "message": "listed all tables to join.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5dd8dfee", "line": 1985, "updated": "2019-12-05 14:24:21.000000000", "message": "At first I was going to say this isn't necessary since if it's False then \"inst['uuid'] in bfv_instances_uuids\" would just be False, but I guess the idea is that if you're not asking for the is_volume_backed flag, setting False might be misleading if the instance is actually volume-backed but we didn't do the work to check.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9de3b7a0", "line": 1998, "range": {"start_line": 1998, "start_character": 42, "end_line": 1998, "end_character": 56}, "updated": "2019-12-05 14:24:21.000000000", "message": "_instance_system_metadata_get_multi short circuits if this is empty, we should probably do the same here (to avoid a query which won't have any results).", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0d098e82", "line": 1998, "range": {"start_line": 1998, "start_character": 42, "end_line": 1998, "end_character": 56}, "in_reply_to": "3fa7e38b_9de3b7a0", "updated": "2019-12-11 07:22:13.000000000", "message": "Done", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9d98971a", "line": 2002, "range": {"start_line": 2002, "start_character": 24, "end_line": 2002, "end_character": 42}, "updated": "2019-12-05 14:24:21.000000000", "message": "I wasn't sure about this but _instance_system_metadata_get_multi does it too so looks like it's OK, and makes sense if we're querying for deleted instances.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9db17794", "line": 2008, "range": {"start_line": 2005, "start_character": 57, "end_line": 2008, "end_character": 65}, "updated": "2019-12-05 14:24:21.000000000", "message": "The indenting here makes this is a bit weird to read - can't we align all 3 parts of the AND clause?", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cd261617", "line": 2008, "range": {"start_line": 2005, "start_character": 57, "end_line": 2008, "end_character": 65}, "in_reply_to": "3fa7e38b_9db17794", "updated": "2019-12-11 07:22:13.000000000", "message": "Done", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1d8ca7d6", "line": 2010, "range": {"start_line": 2010, "start_character": 8, "end_line": 2010, "end_character": 16}, "updated": "2019-12-05 14:24:21.000000000", "message": "nit: name this instance_uuid since that's what it is", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ed2192fd", "line": 2010, "range": {"start_line": 2010, "start_character": 8, "end_line": 2010, "end_character": 16}, "in_reply_to": "3fa7e38b_1d8ca7d6", "updated": "2019-12-11 07:22:13.000000000", "message": "Done", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_644b4a86", "line": 1951, "range": {"start_line": 1951, "start_character": 50, "end_line": 1951, "end_character": 57}, "updated": "2019-12-13 21:06:02.000000000", "message": "This no longer makes sense. I'd probably just avoid this kind of cleanup distraction in your series and fix it up separately later (or in a preceding patch which you'd then build on) if you want to correct these docstrings.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c308c22f", "line": 1951, "range": {"start_line": 1951, "start_character": 50, "end_line": 1951, "end_character": 57}, "in_reply_to": "3fa7e38b_644b4a86", "updated": "2019-12-18 07:06:32.000000000", "message": "keeping as is in this patch", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c4079e1e", "line": 2005, "updated": "2019-12-13 21:06:02.000000000", "message": "Since Jay Pipes is no longer around we might want to have Mike Bayer take a look at this query just to make sure it's sufficiently efficient (as possible anyway). Mike is zzzeek in IRC.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 11816, "name": "mike_mp@zzzcomputing.com", "email": "mike_mp@zzzcomputing.com", "username": "zzzeek"}, "change_message_id": "a1692441a58c2410cbbc5379bedde61479b7411e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c7f240e5", "line": 2005, "in_reply_to": "3fa7e38b_c4079e1e", "updated": "2019-12-13 21:20:37.000000000", "message": "I can see there is a manual merge step implied by the above.   IIUC we are joining from \"instance\" to \"blockdevicemapping\" on \"instance_uuid\", essentially giving it the list of instance_uuids we already have and then essentially removing those for which the \"block device mapping\" criteria doesn't match.\n\nif BlockDeviceMapping.instance_uuid is a foreign key to Instance, that would mean you don't actually have to include the Instance table in this query, right?   however, this is not including whatever criteria \"model_query\" is adding so that might make this infeasible, if \"model_query\" needs to look at other columns on Instance and not BlockDeviceMapping.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cb71f7d64a395068b4199bef466dababd9543c80", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_67d26c36", "line": 2008, "range": {"start_line": 2008, "start_character": 26, "end_line": 2008, "end_character": 30}, "updated": "2019-12-13 21:23:33.000000000", "message": "We likely don't need this. We should just be able to do this:\n\nselect instance_uuid from bdms where instance_uuid in (instance_uuids) and boot_index=0 and destination_type='volume';\n\nright?\n\nAnd having said that, I don't think we need the model_query either - we're not scoping this to project or filtering out deleted bdms, so we should be able to just do this with straight sqlalchemy ORM queries and not use model_query or the join which would make this a lot better.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8302ca0b", "line": 2008, "range": {"start_line": 2008, "start_character": 26, "end_line": 2008, "end_character": 30}, "in_reply_to": "3fa7e38b_67d26c36", "updated": "2019-12-18 07:06:32.000000000", "message": "Removed, done as suggested here.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 11816, "name": "mike_mp@zzzcomputing.com", "email": "mike_mp@zzzcomputing.com", "username": "zzzeek"}, "change_message_id": "2fb46047a5748c79e79010b8ae213a4959c6c9c3", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3ee6b9e9", "line": 2008, "range": {"start_line": 2008, "start_character": 26, "end_line": 2008, "end_character": 30}, "in_reply_to": "3fa7e38b_67d26c36", "updated": "2019-12-14 16:14:24.000000000", "message": "i don't know the model query part but what you have here doesn't need the instance table, so if you're going for a more efficient query you have all the wins.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7b5ac382", "line": 2005, "range": {"start_line": 2005, "start_character": 56, "end_line": 2005, "end_character": 57}, "updated": "2019-12-18 22:49:55.000000000", "message": "Is this...", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "b8676831d671aeb60132c36d3bb3ee01053e6bda", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_84771408", "line": 2005, "range": {"start_line": 2005, "start_character": 56, "end_line": 2005, "end_character": 57}, "in_reply_to": "3fa7e38b_7b5ac382", "updated": "2019-12-19 16:35:38.000000000", "message": "Done", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_1b514f64", "line": 2006, "range": {"start_line": 2006, "start_character": 71, "end_line": 2006, "end_character": 72}, "updated": "2019-12-18 22:49:55.000000000", "message": "...and this really necessary?", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3b4c4bc8", "line": 2006, "range": {"start_line": 2006, "start_character": 74, "end_line": 2006, "end_character": 75}, "updated": "2019-12-18 22:49:55.000000000", "message": "same...", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "b8676831d671aeb60132c36d3bb3ee01053e6bda", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_247e60e3", "line": 2006, "range": {"start_line": 2006, "start_character": 71, "end_line": 2006, "end_character": 72}, "in_reply_to": "3fa7e38b_1b514f64", "updated": "2019-12-19 16:35:38.000000000", "message": "Done", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "b8676831d671aeb60132c36d3bb3ee01053e6bda", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e467e851", "line": 2006, "range": {"start_line": 2006, "start_character": 74, "end_line": 2006, "end_character": 75}, "in_reply_to": "3fa7e38b_3b4c4bc8", "updated": "2019-12-19 16:35:38.000000000", "message": "Done", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_db4ad7ab", "line": 2007, "range": {"start_line": 2007, "start_character": 67, "end_line": 2007, "end_character": 68}, "updated": "2019-12-18 22:49:55.000000000", "message": "...to here", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "b8676831d671aeb60132c36d3bb3ee01053e6bda", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c46c2c35", "line": 2007, "range": {"start_line": 2007, "start_character": 67, "end_line": 2007, "end_character": 68}, "in_reply_to": "3fa7e38b_db4ad7ab", "updated": "2019-12-19 16:35:38.000000000", "message": "Done", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_bbc59b0b", "line": 2010, "updated": "2019-12-18 22:49:55.000000000", "message": "There should be a way to just get the instance_uuid column value out of the query so we don't have to pull the entire object, so like what you were doing before but without model_query.\n\nWe do something similar here:\n\nhttps://github.com/openstack/nova/blob/a5b8217f5f8013008aec52ad9c9803918631d3c6/nova/objects/cell_mapping.py#L280\n\nSo maybe you can just do:\n\nquery = context.session.query(models.BlockDeviceMapping.instance_uuid)\n...\n\nAnother example is here:\n\nhttps://github.com/openstack/nova/blob/a5b8217f5f8013008aec52ad9c9803918631d3c6/nova/objects/instance.py#L1325", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b7fbb6d1129ccda6d8d187338a32ce8f8e3a0dc3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_de715be1", "line": 2010, "in_reply_to": "3fa7e38b_bbc59b0b", "updated": "2019-12-19 15:05:37.000000000", "message": "This works for me:\n\nhttp://paste.openstack.org/show/787794/", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fa1c671f1bfd30a6ca00bea2d238393ebd66105c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0f6014d0", "line": 2003, "updated": "2019-12-20 10:43:01.000000000", "message": "I like this code style.", "commit_id": "249818b8d8f3a6d0b2e6fa768ae5929b314312ec"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "8d46a0379ffceb680236478239054e70ac19ba8b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b9f58786", "line": 2008, "range": {"start_line": 2008, "start_character": 23, "end_line": 2008, "end_character": 24}, "updated": "2019-12-20 16:53:17.000000000", "message": "Why is this here? Looks really odd - is it because result is a list of tuples? If so, this would be clearer:\n\n# result is a list of tuples and we want the first entry\nreturn [res[0] for res in result]", "commit_id": "18085684035c8ac8e1a6fe4e79cb093e02a45245"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "a766948d8113ba2048a7b40c622c5cc368e44fe2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_57642149", "line": 2008, "range": {"start_line": 2008, "start_character": 23, "end_line": 2008, "end_character": 24}, "in_reply_to": "3fa7e38b_b9f58786", "updated": "2020-01-03 10:02:18.000000000", "message": "Done", "commit_id": "18085684035c8ac8e1a6fe4e79cb093e02a45245"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "1df1b6bc50cfdd9fe0da66fc38d0fbbfdb9006d1", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_22d2fe34", "line": 2008, "updated": "2020-01-14 18:43:17.000000000", "message": "This is a pretty wasteful way to determine the state of a boolean. Especially if we're going to be frequently asking for this column for API filtering. What you have here effectively makes us load the instance list, then go back and query again for a list of booleans.\n\nThere are two things that I think would be a lot better:\n\n1. We could add an actual field to the instance record. Whenever we go to save and instance's BDMs, we could update that field. When we load existing instances from the database where that field is not currently set, we can calculate it as you've done here, but eventually we heal our data set to store that field we want.\n\n2. We could at least alter the the instance query itself to calculate this once per instance at the SQL level. Basically, join BDMs to instances but in a way that gets us one more column with the desired boolean.\n\nEither of these seem a lot better to me than just tacking on another query to this list. I'd like to hear from others how they feel about this.", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "a0ae0fed04c6c04c5ddf32721330aca2f2a9d6bb", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_92b8c478", "line": 2008, "in_reply_to": "3fa7e38b_22d2fe34", "updated": "2020-01-16 01:40:27.000000000", "message": "> This is a pretty wasteful way to determine the state of a boolean.\n > Especially if we're going to be frequently asking for this column\n > for API filtering. What you have here effectively makes us load the\n > instance list, then go back and query again for a list of booleans.\n > \n > There are two things that I think would be a lot better:\n > \n > 1. We could add an actual field to the instance record. Whenever we\n > go to save and instance's BDMs, we could update that field. When we\n > load existing instances from the database where that field is not\n > currently set, we can calculate it as you've done here, but\n > eventually we heal our data set to store that field we want.\n > \n\nWe can't change a BFV instance to normal instance. So we just need to set that field when create the instance, needn't always sync it. It needs the handle upgrade, as you said heal the existing instance.\n\nThere are multiple calling for this method https://github.com/openstack/nova/blob/24bf2aaa7441430a84b475efca9f4777dc243452/nova/compute/utils.py#L265, those calling can be saved.\n\n > 2. We could at least alter the the instance query itself to\n > calculate this once per instance at the SQL level. Basically, join\n > BDMs to instances but in a way that gets us one more column with\n > the desired boolean.\n > \n\nyea, this should be better than the correct way. This fix is easy than #1, but this can't save the case https://github.com/openstack/nova/blob/24bf2aaa7441430a84b475efca9f4777dc243452/nova/compute/utils.py#L265. \n\n > Either of these seem a lot better to me than just tacking on\n > another query to this list. I'd like to hear from others how they\n > feel about this.", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "dd7607c2fb5aa9416acb9e2ad0dc66399b896514", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_ca4795a4", "line": 2008, "in_reply_to": "3fa7e38b_39f8227c", "updated": "2020-01-31 01:29:27.000000000", "message": "yea, I little prefer the #2, since it is easy than the #1. \n\nBut from the API change, this sounds like need a spec.", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "539bd3b2388338abb9bf07e711d57a64ae196ffc", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_bb4a7b57", "line": 2008, "in_reply_to": "3fa7e38b_92b8c478", "updated": "2020-01-16 07:06:45.000000000", "message": "Let's say we add a new column 'volume_backed' in the `instances` db table in upgrade db script.\n\nWe can also write logic to set appropriate value to the 'volume_backed' column depending on the bdms db records for that instance in the same script so that we don't have to write separate query to set that fields as it's done here.\n\nDo you see any issues in setting 'volume_backed' field on the existing instances in the upgrade db script?\n\nFirst seem better solution, I'd like to hear from others on this.", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c180a6ce581d440482b2aa45fa30917fd724e66b", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_39f8227c", "line": 2008, "in_reply_to": "3fa7e38b_bb4a7b57", "updated": "2020-01-29 14:59:10.000000000", "message": "No, it is not okay to make the db schema upgrade script iterate all instances currently in the database. You'd need to add that field and the migrate it with an online data migration and at load time in the object.\n\nBut I think Alex is saying he'd prefer to _not_ do that and instead calculate the volume-backed nature in SQL via joins (i.e. my #2).\n\nAlex is that correct?", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "00c59f94190226967ff6f6277e79ddf214ec95e8", "unresolved": false, "patch_set": 8, "id": "1fa4df85_dd681d1e", "line": 2008, "in_reply_to": "3fa7e38b_ca4795a4", "updated": "2020-03-05 14:45:53.000000000", "message": "Agree, #2 looks better for me.", "commit_id": "b289cdb0b3f0f0c6afede0dc1100cb1ab088e84e"}], "nova/tests/unit/db/test_db_api.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1d53473c", "line": 961, "updated": "2019-12-05 14:24:21.000000000", "message": "This is really the bare minimum amount of testing for the query code you have. I could think of a few more things to include in the test:\n\n* having a bdm where the boot_index != 0 (not volume backed)\n* having a bdm where the destination_type = image (not volume backed)\n* having an instance with no bdms\n* playing with deleted instances (so do what you have here but delete the instance which will automatically also delete the bdm) and then query for deleted instances and get that one back to make sure that read_deleted='yes' clause is being used in the model query\n* have a query where columns_to_join does not contain 'is_volume_backed' and assert the resulting instance model does not have an 'is_volume_backed' attribute set.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8d1c9ec2", "line": 961, "in_reply_to": "3fa7e38b_1d53473c", "updated": "2019-12-11 07:22:13.000000000", "message": "Done", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c2fc29402c8aa50640f166dcf07a8a20c8a354fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7dacbb34", "line": 969, "range": {"start_line": 969, "start_character": 32, "end_line": 969, "end_character": 68}, "updated": "2019-12-05 14:24:21.000000000", "message": "This seems like kind of a weird method to use for testing this. I mean, it works, and I realize you're using this because of the os-simple-tenant-usage API at the end of this series, but I probably would have just use instance_get_all.", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "16cf41cd5e165600d27b45c37ccf588715122ef8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ad171a9d", "line": 969, "range": {"start_line": 969, "start_character": 32, "end_line": 969, "end_character": 68}, "in_reply_to": "3fa7e38b_7dacbb34", "updated": "2019-12-11 07:22:13.000000000", "message": "Done", "commit_id": "4634ce544db077901a564f929abe37b29ca67d93"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0751380e", "line": 968, "updated": "2019-12-13 21:06:02.000000000", "message": "OK so this instance doesn't have any BDMs at all.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_276f94c5", "line": 977, "updated": "2019-12-13 21:06:02.000000000", "message": "Could we also mock _get_volume_backed_instances in this test and assert it isn't called? My point being, let's make sure we don't do the unnecessary query if we're not joining on is_volume_backed. We want to avoid a regression at some point where let's say the code is refactored and we're always doing the query but just throwing the results away later because is_volume_backed is not in columns_to_join.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0e2281a4", "line": 977, "in_reply_to": "3fa7e38b_276f94c5", "updated": "2019-12-18 07:06:32.000000000", "message": "Done", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c73a40c4", "line": 987, "range": {"start_line": 987, "start_character": 32, "end_line": 987, "end_character": 68}, "updated": "2019-12-13 21:06:02.000000000", "message": "Again, just use instance_get_all and then we don't need to mess with the datetime stuff.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2e23bdac", "line": 987, "range": {"start_line": 987, "start_character": 32, "end_line": 987, "end_character": 68}, "in_reply_to": "3fa7e38b_c73a40c4", "updated": "2019-12-18 07:06:32.000000000", "message": "Done", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a7414439", "line": 989, "updated": "2019-12-13 21:06:02.000000000", "message": "This is kind of gross. There should be a single result so can't we just do this:\n\nself.assertNotIn('is_volume_backed', result[0])\n\n?", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4e287984", "line": 989, "in_reply_to": "3fa7e38b_a7414439", "updated": "2019-12-18 07:06:32.000000000", "message": "Done", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c76320de", "line": 1009, "range": {"start_line": 1009, "start_character": 32, "end_line": 1009, "end_character": 68}, "updated": "2019-12-13 21:06:02.000000000", "message": "same - use instance_get_all, here and below / throughout for the new tests; make sure you rename the test methods as well.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8e143143", "line": 1009, "range": {"start_line": 1009, "start_character": 32, "end_line": 1009, "end_character": 68}, "in_reply_to": "3fa7e38b_c76320de", "updated": "2019-12-18 07:06:32.000000000", "message": "done, changed to instance_get_all", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_679a6cc5", "line": 1040, "range": {"start_line": 1040, "start_character": 64, "end_line": 1040, "end_character": 68}, "updated": "2019-12-13 21:06:02.000000000", "message": "bdms", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6e177548", "line": 1040, "range": {"start_line": 1040, "start_character": 64, "end_line": 1040, "end_character": 68}, "in_reply_to": "3fa7e38b_679a6cc5", "updated": "2019-12-18 07:06:32.000000000", "message": "corrected", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "a8bda0a7771601eafb6957130ee76710948eea9e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_87b2084a", "line": 1061, "range": {"start_line": 1061, "start_character": 8, "end_line": 1061, "end_character": 42}, "updated": "2019-12-13 21:06:02.000000000", "message": "This is redundant with the non_bfv instance created in test_instance_get_all_with_instances_bfv above. So either remove this duplicate test or remove the no-bdms instance from that other test.", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "ad58850d2f29953af68c865b7bcf629268863b86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ce0a291d", "line": 1061, "range": {"start_line": 1061, "start_character": 8, "end_line": 1061, "end_character": 42}, "in_reply_to": "3fa7e38b_87b2084a", "updated": "2019-12-18 07:06:32.000000000", "message": "removed", "commit_id": "6f9c13763a108cea8822e54ef9a7bb4fb8d30bea"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4905a1a04cabc54545575e87eb3d5a80b79a5484", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_dbdf37d5", "line": 993, "updated": "2019-12-18 22:49:55.000000000", "message": "You removed test_instance_get_active_by_window_joined_bdms_for_deleted_inst since PS2 so you lost coverage of the deleted case, why? I had commented to just change that to use instance_get_all rather than instance_get_active_by_window_joined but you removed the entire test.", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "b8676831d671aeb60132c36d3bb3ee01053e6bda", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2457405d", "line": 993, "in_reply_to": "3fa7e38b_dbdf37d5", "updated": "2019-12-19 16:35:38.000000000", "message": "added as suggested.", "commit_id": "ddf7ba3d361eb78a7026287ae7e2b45a1e0cf01e"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fa1c671f1bfd30a6ca00bea2d238393ebd66105c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ef8fb82c", "line": 982, "updated": "2019-12-20 10:43:01.000000000", "message": "nit: I think here if assert number of the result will be better.\n\nsuch as: self.assertEqual(3, len(results))", "commit_id": "249818b8d8f3a6d0b2e6fa768ae5929b314312ec"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "003629306e49546db29f69b6b83bdacb026259bb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ea1c8615", "line": 982, "in_reply_to": "3fa7e38b_ef8fb82c", "updated": "2019-12-20 11:48:16.000000000", "message": "Done", "commit_id": "249818b8d8f3a6d0b2e6fa768ae5929b314312ec"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fa1c671f1bfd30a6ca00bea2d238393ebd66105c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_cf6d1c68", "line": 1024, "updated": "2019-12-20 10:43:01.000000000", "message": "nit: Beacause of you will assert the number of the instance after destroy, if first to assert the number, it will be more persuasive. e.g. self.assertEqual(1, len(result))", "commit_id": "249818b8d8f3a6d0b2e6fa768ae5929b314312ec"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "003629306e49546db29f69b6b83bdacb026259bb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0a18021d", "line": 1024, "in_reply_to": "3fa7e38b_cf6d1c68", "updated": "2019-12-20 11:48:16.000000000", "message": "Done", "commit_id": "249818b8d8f3a6d0b2e6fa768ae5929b314312ec"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "8d46a0379ffceb680236478239054e70ac19ba8b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_7944efb8", "line": 1030, "range": {"start_line": 1030, "start_character": 8, "end_line": 1030, "end_character": 40}, "updated": "2019-12-20 16:53:17.000000000", "message": "Umm, isn't this *not* what you'd expect? The test description is asserting that you *should* get the deleted instance, right? See how this worked in PS2:\n\nhttps://review.opendev.org/#/c/694462/2/nova/tests/unit/db/test_db_api.py@1013\n\nI'm assuming the issue has something to do with how we're not using model_query with read_deleted=\"yes\" to get the BDMs anymore. But model_query with read_deleted=\"yes\" just omits the filter on the deleted column:\n\nhttps://github.com/openstack/nova/blob/02019d2660dfce3facdd64ecdb2bd60ba4a91c6d/nova/db/sqlalchemy/api.py#L285\n\nSo the query to get BDMs should return both deleted and non-deleted records, so I'm not sure what's going on here. You'll have to debug.", "commit_id": "18085684035c8ac8e1a6fe4e79cb093e02a45245"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "a766948d8113ba2048a7b40c622c5cc368e44fe2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f7e2ed9b", "line": 1030, "range": {"start_line": 1030, "start_character": 8, "end_line": 1030, "end_character": 40}, "in_reply_to": "3fa7e38b_7944efb8", "updated": "2020-01-03 10:02:18.000000000", "message": "get BDMs method retrieves data based on instance_uuids supplied by instance_get_all()\ninstance_get_all() not considering [1] read_deleted flag, so its None here and read it from context [2] which is 'no' by default [3]\n\n[1]: https://github.com/openstack/nova/blob/master/nova/db/sqlalchemy/api.py#L2024\n[2]: https://github.com/openstack/nova/blob/master/nova/db/sqlalchemy/api.py#L277\n[3]: https://github.com/openstack/nova/blob/master/nova/context.py#L89", "commit_id": "18085684035c8ac8e1a6fe4e79cb093e02a45245"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "95c7cffaf40f26247a505e512e116375b3b0f1ae", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_bed20dfd", "line": 1010, "range": {"start_line": 1010, "start_character": 19, "end_line": 1010, "end_character": 75}, "updated": "2020-01-03 16:45:15.000000000", "message": "Not by default no. But you can modify the context passed to that method to use read_deleted='yes' and then we should get back deleted instances with is_volume_backed set, correct? Isn't that something the simple tenant usage API is going to need since it reads usage based on a time window including deleted instances?", "commit_id": "304208a22af1c4bb3a6037eed908fda67542e65b"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "515de141b58dc7364b986e0b34a33f4e93f405d8", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_4e6d60c9", "line": 1010, "range": {"start_line": 1010, "start_character": 19, "end_line": 1010, "end_character": 75}, "in_reply_to": "3fa7e38b_bed20dfd", "updated": "2020-01-06 11:59:03.000000000", "message": "done", "commit_id": "304208a22af1c4bb3a6037eed908fda67542e65b"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "77c30bb03b91277049daea75a2cc0288fda5c67b", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_990b997a", "line": 1031, "updated": "2020-01-06 20:59:29.000000000", "message": "This would be good as well:\n\nself.assertTrue(result[0]['is_volume_backed'])", "commit_id": "be4f5b1b0ed82097cabe487b1e4c5037a8605996"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "48bcc5ddf8a3c6d361c3acac441197c88ae5d8f4", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_255cb34a", "line": 1031, "in_reply_to": "3fa7e38b_990b997a", "updated": "2020-01-07 10:47:28.000000000", "message": "Done", "commit_id": "be4f5b1b0ed82097cabe487b1e4c5037a8605996"}]}}, "openstack%2Fnova~master~I61fcdf0226a88edd466f47e4dd20625143a53c5a": {"owner_id": 27621, "owner_name": "Vishakha Agarwal", "owner_email": "agarwalvishakha18@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27076, "name": "Xiao Mei Zheng", "email": "xmzheng@cn.ibm.com", "username": "XiaoMeiZheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25562, "name": "Chen", "email": "dstbtgagt@foxmail.com", "username": "chenn2"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": -1, "date": "2020-03-05 15:30:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "date": "2020-03-05 15:42:43.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f94f31daae3ff3d55c9b0f2f3ea151a3a62446a7", "unresolved": false, "patch_set": 5, "id": "5f7c97a3_cb48358b", "line": 18, "updated": "2018-08-01 15:00:55.000000000", "message": "This is arguably not a bug but a wishlist item. We've had similar discussions in the past about updating the instance_actions record's updated_at field when events are created per action record, but that never got resolved I guess:\n\nhttps://openstack.nimeyo.com/88929/openstack-questions-about-instance-actions-update-finish?start=10", "commit_id": "3043ce784dd2af4e8782f4dc9b1bd2c736bfe142"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "852fba3ef6b5738ccc7c773f4d2141b4e30b826d", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_8b7d1f72", "line": 17, "range": {"start_line": 16, "start_character": 0, "end_line": 17, "end_character": 48}, "updated": "2020-01-14 06:27:03.000000000", "message": "I test in my env, based on this fixed patch or in the latest version, while I set the aggregate's metedata, it's 'update_at' will be populated automatically. So I think this patch will be closed this bug.\n\nroot@ubuntu-OpenStack:/opt/stack/nova# nova --debug aggregate-set-metadata test_agg0 host1='aaaa'\n\nVersion X-OpenStack-Nova-API-Version: 2.81 x-compute-request-id: req-c25e19d5-3862-4bb5-bb96-41fb1d30f389 x-openstack-request-id: req-c25e19d5-3862-4bb5-bb96-41fb1d30f389\nDEBUG (session:580) RESP BODY: {\"aggregate\": {\"id\": 4, \"uuid\": \"688b4bf1-6927-45bd-9c6c-6ad1108788ea\", \"name\": \"test_agg0\", \"hosts\": [], \"metadata\": {\"host1\": \"aaaa\"}, \"created_at\": \"2020-01-14T06:20:18.000000\", \"updated_at\": \"2020-01-14T06:21:34.729395\", \"deleted_at\": null, \"deleted\": false, \"availability_zone\": null}}\nDEBUG (session:943) POST call to compute for http://192.168.190.23/compute/v2.1/os-aggregates/4/action used request id req-c25e19d5-3862-4bb5-bb96-41fb1d30f389\nMetadata has been successfully updated for aggregate 4.\n+----+-----------+-------------------+-------+--------------+--------------------------------------+\n| Id | Name      | Availability Zone | Hosts | Metadata     | UUID                                 |\n+----+-----------+-------------------+-------+--------------+--------------------------------------+\n| 4  | test_agg0 | -                 |       | 'host1=aaaa' | 688b4bf1-6927-45bd-9c6c-6ad1108788ea |\n+----+-----------+-------------------+-------+--------------+--------------------------------------+", "commit_id": "f3d7e1e957271b61fe93b769b95c54b8ef3a6f47"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c0ae66a287890dea719717d0463af6b70d74a225", "unresolved": false, "patch_set": 20, "id": "1fa4df85_985e3374", "line": 9, "range": {"start_line": 9, "start_character": 11, "end_line": 9, "end_character": 16}, "updated": "2020-03-05 15:30:04.000000000", "message": "existing", "commit_id": "49da39c4931f0ef7b798b8f8ec73a231f7907cba"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c0ae66a287890dea719717d0463af6b70d74a225", "unresolved": false, "patch_set": 20, "id": "1fa4df85_f84c07c9", "line": 14, "updated": "2020-03-05 15:30:04.000000000", "message": "Why not metadata update? Right now, the updated_at only reflects the actual aggregate record. You're making it *less* consistent by having it be updated when you change hosts, but not metadata items, which seem more related to the actual aggregate to me than the membership.", "commit_id": "49da39c4931f0ef7b798b8f8ec73a231f7907cba"}], "doc/api_samples/os-aggregates/v2.81/aggregate-post-resp.json": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "9e4c773d239d479683af7489346fa1de73fd1217", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_e506e61b", "line": 9, "range": {"start_line": 9, "start_character": 22, "end_line": 9, "end_character": 26}, "updated": "2020-01-20 10:27:04.000000000", "message": "Hmm, so why isn't this being set automatically by the TimestampMixin per [1]?\n\nLater: Ah, that's only set \"on update\", not when creating. I guess if we want to change the behavior of that it should be done in oslo.db\n\n[1] https://review.opendev.org/#/c/580271/16/nova/objects/aggregate.py@75", "commit_id": "62fc6d7fb322ed8cfd2fedd2b9976f9c6fab7266"}], "nova/compute/api.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8a63d2d65bb1cc7bf6c26075c5e681e86f21f60b", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_aec56d40", "line": 5258, "updated": "2020-01-15 11:05:08.000000000", "message": "Would it be possible do this within the 'add_host' method, so that we don't have to remember to do this anywhere else we call this in the future?", "commit_id": "fa486c6b11d2430f3da62d0c6877f1bfbcc86f64"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e8eb1db957fbbaec61df64624417a45efa2e7dba", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_69a52f48", "line": 5258, "in_reply_to": "3fa7e38b_aec56d40", "updated": "2020-01-15 12:23:37.000000000", "message": "Done", "commit_id": "fa486c6b11d2430f3da62d0c6877f1bfbcc86f64"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8a63d2d65bb1cc7bf6c26075c5e681e86f21f60b", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_cec22936", "line": 5324, "updated": "2020-01-15 11:05:08.000000000", "message": "Ditto, but for 'delete_host'", "commit_id": "fa486c6b11d2430f3da62d0c6877f1bfbcc86f64"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e8eb1db957fbbaec61df64624417a45efa2e7dba", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_89a2eb3e", "line": 5324, "in_reply_to": "3fa7e38b_cec22936", "updated": "2020-01-15 12:23:37.000000000", "message": "Done", "commit_id": "fa486c6b11d2430f3da62d0c6877f1bfbcc86f64"}], "nova/objects/aggregate.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5f679c528f142b7d47c3ad030d4ec2a2597b7669", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_045376e0", "line": 138, "range": {"start_line": 137, "start_character": 0, "end_line": 138, "end_character": 63}, "updated": "2020-01-11 09:35:34.000000000", "message": "Adding 'update'=True/False is not suitable for the aggregate metadata's updated_at time, I will split a new patch to update the aggregate metadata's 'updated_at' field.\n\nThere are have the different db, ``aggregates`` and ``aggregate_metadata``, so I think updating the aggregate_metadata's updated_at field is better than add a new key/value(update=True/False) to the aggregates's metadata body.", "commit_id": "2ee85baafd5d1db464a755795b679f7c7be6a4a4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8a63d2d65bb1cc7bf6c26075c5e681e86f21f60b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4e7879f6", "line": 82, "range": {"start_line": 82, "start_character": 40, "end_line": 82, "end_character": 58}, "updated": "2020-01-15 11:05:08.000000000", "message": "is there a chance this could race and what's in the DB might not match what's in the object, i.e. we set the DB at 23:59:59.999999 and the object at 00:00:00.000000? I guess if we get a timestamp first we could use that same value for both the DB and object itself, or we could avoid updating the object and instead refresh it from the DB once we've done this update?", "commit_id": "57a9743a385fe6be62d3a989383089f7d3d4f159"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e8eb1db957fbbaec61df64624417a45efa2e7dba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a9ab271d", "line": 82, "range": {"start_line": 82, "start_character": 40, "end_line": 82, "end_character": 58}, "in_reply_to": "3fa7e38b_4e7879f6", "updated": "2020-01-15 12:23:37.000000000", "message": "I think it's ok, \"created_at\", \"deleted_at\" are all set for *that* resource, it's same. Other words, I dont know what are you worry.", "commit_id": "57a9743a385fe6be62d3a989383089f7d3d4f159"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "fc81f46444d898c6d98938026b5f24e8293597ed", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_143a8ee5", "line": 82, "range": {"start_line": 82, "start_character": 40, "end_line": 82, "end_character": 58}, "in_reply_to": "3fa7e38b_a9ab271d", "updated": "2020-01-15 13:27:25.000000000", "message": "I was referring to the fact that you set this on both the object and in the DB, but that the values could be different since you call 'timeutils.utcnow()' twice. This shouldn't be an issue now that you've removed the duplicate calls", "commit_id": "57a9743a385fe6be62d3a989383089f7d3d4f159"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7d98e49cbbe9c61dfe6550d2c2a77626183308c1", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_ecfcb8b7", "line": 82, "range": {"start_line": 78, "start_character": 0, "end_line": 82, "end_character": 60}, "updated": "2020-01-16 14:35:43.000000000", "message": "Actually, do we need to do this? Looks like oslo.db's 'TimestampMixin' will take care of handling this for us when we call 'host_ref.save(...)' above, right?", "commit_id": "fc326e0f66d8701b3ae429c5e30fc6ecffd5a210"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "532aec1c563f1030c3f641479ba1f442eb3b9742", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_4dcdbf90", "line": 82, "range": {"start_line": 78, "start_character": 0, "end_line": 82, "end_character": 60}, "in_reply_to": "3fa7e38b_ecfcb8b7", "updated": "2020-01-17 00:56:40.000000000", "message": "Yeah, it's my mistake, this can be done when before host_ref.save().", "commit_id": "fc326e0f66d8701b3ae429c5e30fc6ecffd5a210"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7d98e49cbbe9c61dfe6550d2c2a77626183308c1", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_4c170cf1", "line": 193, "range": {"start_line": 191, "start_character": 0, "end_line": 193, "end_character": 47}, "updated": "2020-01-16 14:35:43.000000000", "message": "Ditto - why isn't this set when we create the aggregate above (or earlier, if it already existed)", "commit_id": "fc326e0f66d8701b3ae429c5e30fc6ecffd5a210"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "532aec1c563f1030c3f641479ba1f442eb3b9742", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_6dd0bb2b", "line": 193, "range": {"start_line": 191, "start_character": 0, "end_line": 193, "end_character": 47}, "in_reply_to": "3fa7e38b_4c170cf1", "updated": "2020-01-17 00:56:40.000000000", "message": "Done", "commit_id": "fc326e0f66d8701b3ae429c5e30fc6ecffd5a210"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1935bf1977e225d18d0c5ab5805891ac8ab501d6", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9b020ab9", "line": 75, "range": {"start_line": 75, "start_character": 29, "end_line": 75, "end_character": 61}, "updated": "2020-01-17 10:18:43.000000000", "message": "This still isn't right, I don't think. Surely this happens due to the use of 'TimestampMixin' [1] which is part of 'NovaBase' [2], which is the base class of 'AggregateHost' [3]. Are you sure this is necessary?\n\n[1] https://github.com/openstack/oslo.db/blob/3bdd1d1315e201cc990cf3fbc56525fa364d5b87/oslo_db/sqlalchemy/models.py#L139\n[2] https://github.com/openstack/nova/blob/b44b540fc70504f3869ef23022642095de0ea99e/nova/db/sqlalchemy/models.py#L42-L43\n[3] https://github.com/openstack/nova/blob/b44b540fc70504f3869ef23022642095de0ea99e/nova/db/sqlalchemy/api_models.py#L47", "commit_id": "e7c17984d3b0f234f20da70bca15e18092dec65f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "efd0741270331f8902056a08da03aa783e424dec", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1acda6b9", "line": 75, "range": {"start_line": 75, "start_character": 29, "end_line": 75, "end_character": 61}, "in_reply_to": "3fa7e38b_9b020ab9", "updated": "2020-01-19 01:25:17.000000000", "message": "Ok. Emm..personally, it is reasonable to keep 'create_at' and 'updated_at' always when the resource is being create.", "commit_id": "e7c17984d3b0f234f20da70bca15e18092dec65f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1935bf1977e225d18d0c5ab5805891ac8ab501d6", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_bbfca6b6", "line": 176, "range": {"start_line": 176, "start_character": 0, "end_line": 176, "end_character": 49}, "updated": "2020-01-17 10:18:43.000000000", "message": "Ditto", "commit_id": "e7c17984d3b0f234f20da70bca15e18092dec65f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "efd0741270331f8902056a08da03aa783e424dec", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1a3286c1", "line": 176, "range": {"start_line": 176, "start_character": 0, "end_line": 176, "end_character": 49}, "in_reply_to": "3fa7e38b_bbfca6b6", "updated": "2020-01-19 01:25:17.000000000", "message": "Done", "commit_id": "e7c17984d3b0f234f20da70bca15e18092dec65f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1935bf1977e225d18d0c5ab5805891ac8ab501d6", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1b17faf1", "line": 237, "updated": "2020-01-17 10:18:43.000000000", "message": "This probably makes sense since 'Aggregate' won't be affected by saving an 'AggregateHost' instance, but we probably want to indicate that something has changed.", "commit_id": "e7c17984d3b0f234f20da70bca15e18092dec65f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c0ae66a287890dea719717d0463af6b70d74a225", "unresolved": false, "patch_set": 20, "id": "1fa4df85_780b377c", "line": 76, "updated": "2020-03-05 15:30:04.000000000", "message": "These comments are not helpful. The method name should make it clear what is going on.", "commit_id": "49da39c4931f0ef7b798b8f8ec73a231f7907cba"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "c0ae66a287890dea719717d0463af6b70d74a225", "unresolved": false, "patch_set": 20, "id": "1fa4df85_184323b1", "line": 93, "updated": "2020-03-05 15:30:04.000000000", "message": "This is unrelated to the current patch, but git history will make it look like this was changed.", "commit_id": "49da39c4931f0ef7b798b8f8ec73a231f7907cba"}]}}, "openstack%2Fnova~master~I2ea3e99ad04702787fc707debe11367437755be0": {"owner_id": 24645, "owner_name": "Pooja Jadhav", "owner_email": "pooja.jadhav@nttdata.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27076, "name": "Xiao Mei Zheng", "email": "xmzheng@cn.ibm.com", "username": "XiaoMeiZheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20182, "name": "Bhagyashri Shewale", "email": "bshewale@redhat.com", "username": "bhagyashris"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": -1, "date": "2020-01-14 18:49:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-13 06:51:30.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"nova/api/openstack/compute/simple_tenant_usage.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9c41362106fb473ae5a15124a04b7495c4456997", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_f53c192e", "line": 168, "range": {"start_line": 167, "start_character": 16, "end_line": 168, "end_character": 38}, "updated": "2018-10-25 18:57:42.000000000", "message": "As noted in the bug report:\n\nhttps://bugs.launchpad.net/nova/+bug/1715570/comments/4\n\nThis is going to be fairly expensive if you're iterating over a lot of instances. I'm not sure if my joined load column idea works, but it would be nice to know if it was investigated and proven to either not work, or not be any different performance-wise.\n\nMaybe for index, where the admin is listing over all tenants, we don't care as much about performance compare to show where a single tenant is logging into horizon and seeing just their usage, which means iterating far fewer instances most likely. But differences in behavior between list and show would also be weird...", "commit_id": "becf4b73d2bbd9992b30ea09df0d85eb91901e40"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "51d75420eb989a521e1c2cc2b55968814192b48c", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_0439ca3f", "line": 168, "range": {"start_line": 167, "start_character": 16, "end_line": 168, "end_character": 38}, "in_reply_to": "3f79a3b5_f53c192e", "updated": "2019-11-15 07:21:21.000000000", "message": "Hi Matt, \n\nVerified suggested joined load column idea. Updated [1] by joining 'block_device_mapping' and verified performance improvement. \nIt\u2019s improving performance drastically provided the usage period requested by an user has instances which are not deleted. \nIf there are too many deleted instances, there is no performance gain. \n\nPlease give your feedback on the latest patch and then accordingly I will add required unit/functional tests.\n\n[1] https://github.com/openstack/nova/blob/master/nova/objects/instance.py#L50", "commit_id": "becf4b73d2bbd9992b30ea09df0d85eb91901e40"}, {"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "7d90d4719d67c399d6c294d141331f319103081e", "unresolved": false, "patch_set": 2, "id": "bfdaf3ff_2d8b911f", "line": 170, "range": {"start_line": 169, "start_character": 16, "end_line": 170, "end_character": 74}, "updated": "2019-01-16 09:40:16.000000000", "message": "we have those kind of logic to retrieve bdms, why add this into objects?\n\n6032         bdms = objects.BlockDeviceMappingList.get_by_instance_uuid(\n6033             ctxt, instance.uuid)\n6034         is_volume_backed = compute_utils.is_volume_backed_instance(\n6035             ctxt, instance, bdms)", "commit_id": "95080d00e686e77e36db09ffc30b69a1ac18ba96"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "fbc2c90852977839ea7f2f88ac03b201c33eab88", "unresolved": false, "patch_set": 3, "id": "5fc1f717_79c69219", "line": 169, "range": {"start_line": 168, "start_character": 0, "end_line": 169, "end_character": 36}, "updated": "2019-03-27 07:44:56.000000000", "message": "nit:\nif instance.is_volume_backed:", "commit_id": "81823b0a468221d47c8b1b7e3b717a711bc4d4bc"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_e377d23a", "line": 172, "range": {"start_line": 168, "start_character": 0, "end_line": 172, "end_character": 69}, "updated": "2019-04-04 11:19:22.000000000", "message": "nit:\n                info['local_gb'] = instance.flavor.ephemeral_gb\n\n                if not instance.is_volume_backed:\n                    info['local_gb'] += instance.flavor.root_gb", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "12bda8d48103a36e01fde00159316c281a70fb66", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_7e9991cd", "line": 170, "range": {"start_line": 170, "start_character": 16, "end_line": 170, "end_character": 54}, "updated": "2020-01-13 06:51:30.000000000", "message": "nit, 'if not instance.is_volume_backed:'", "commit_id": "866e195d724755a6158308145b28399209cff233"}], "nova/db/sqlalchemy/api.py": [{"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_c3497632", "line": 1941, "range": {"start_line": 1934, "start_character": 0, "end_line": 1941, "end_character": 61}, "updated": "2019-04-04 11:19:22.000000000", "message": "-1:\n\n if 'is_volume_backend' in manual_joins:\n    bfv_instances_uuids = {\n       inst['uuid'] for inst in _get_volume_backend_instances(context)}\n else:\n    bfv_instances_uuids = set()", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_23f5daed", "line": 1950, "range": {"start_line": 1946, "start_character": 0, "end_line": 1950, "end_character": 48}, "updated": "2019-04-04 11:19:22.000000000", "message": "-1:\n\n inst['is_volume_backend'] = inst['uuid'] in bfv_instances_uuids", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_23df1a3b", "line": 1968, "updated": "2019-04-04 11:19:22.000000000", "message": "Why do we want to read deleted entries? Wouldn't we ant to ignore them?\n\nI think we should limit the query to just return the uuid, since it is the only field we care about.", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "dfee9d453bb4ea68650091174232631b1fb5fc34", "unresolved": false, "patch_set": 4, "id": "5fc1f717_d2338161", "line": 1968, "in_reply_to": "5fc1f717_23df1a3b", "updated": "2019-04-04 12:46:55.000000000", "message": "We need to read deleted entries, unfortunately, because the simple-tenant-usage API looks at a period of time and sums up \"usage\" information. Instances could very well have been deleted during that time period, of course.\n\n++ on the suggestion to only return the uuid column, though.", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "dfee9d453bb4ea68650091174232631b1fb5fc34", "unresolved": false, "patch_set": 4, "id": "5fc1f717_321685a9", "line": 1974, "updated": "2019-04-04 12:46:55.000000000", "message": "You didn't update the docstring.", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b9d8cf28b0f8f5ff857f8b0755250f11779e8746", "unresolved": false, "patch_set": 10, "id": "7faddb67_652c524a", "line": 1935, "range": {"start_line": 1935, "start_character": 30, "end_line": 1935, "end_character": 58}, "updated": "2019-08-12 15:14:36.000000000", "message": "Why wouldn't you pass instances to this to filter the instances? Otherwise you're getting *all* instances in the DB just to determine if the subset here, which could be 1 or 2, are volume-backed?", "commit_id": "25a1b63400171ef42a70571690f3f08b2ef17e86"}], "nova/objects/instance.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "58e17b342fc15ddc7ee917b8c0f48e8faee6127b", "unresolved": false, "patch_set": 2, "id": "bfdaf3ff_0b1b1281", "line": 54, "range": {"start_line": 54, "start_character": 46, "end_line": 54, "end_character": 66}, "updated": "2019-01-16 15:05:10.000000000", "message": "What I'd try to do is add a Boolean is_volume_backed field, which is optional, and then if requested, the DB API code would check for that and do a fast query to the block_device_mapping table to determine if there are:\n\n1. bdms for the given instance uuid\n2. those bdms are not deleted\n3. the boot_index=0\n4. the destination_type=volume\n\nThat could be a simple scalar query which sets the boolean field on the DB model object which then sets the Instance.is_volume_backed field, and as it's optional, we can control which callers need that additional join/query when pulling instances out of the DB (we'd just start with the simple tenant usage API).", "commit_id": "95080d00e686e77e36db09ffc30b69a1ac18ba96"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e3e9d9b726c2ceade1d548f2b88179a96cdb9cef", "unresolved": false, "patch_set": 2, "id": "bfdaf3ff_8bfaa272", "line": 219, "updated": "2019-01-16 14:51:53.000000000", "message": "As jichenjc pointed out, we already have tools to do this same thing, and this wasn't really what I was thinking. I was thinking more along the lines of setting a boolean field based on a DB query when pulling the instance using joins to determine if the instance is volume-backed by having a related block_device_mappings record with boot_index=0 and destination_type=volume, which could set a boolean on the instance record, not a full list of BDMs.", "commit_id": "95080d00e686e77e36db09ffc30b69a1ac18ba96"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "fbc2c90852977839ea7f2f88ac03b201c33eab88", "unresolved": false, "patch_set": 3, "id": "5fc1f717_611939d5", "line": 119, "range": {"start_line": 119, "start_character": 4, "end_line": 119, "end_character": 10}, "updated": "2019-03-27 07:44:56.000000000", "message": "Just a question.\nWhy didn't you add 'is_volume_backed' in fields of Instance object?", "commit_id": "81823b0a468221d47c8b1b7e3b717a711bc4d4bc"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_632d22fc", "line": 252, "range": {"start_line": 251, "start_character": 0, "end_line": 252, "end_character": 46}, "updated": "2019-04-04 11:19:22.000000000", "message": "-1: This will raise an `AttributeError` exception if 'is_volume_backend' has been set.\n\nWe should replace it with:\n\n        if attrname == 'is_volume_backend':\n            return attrname in self.obj_fields", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "182a38d1deb38359c0916c41ae6f1bfd205ef3d0", "unresolved": false, "patch_set": 4, "id": "5fc1f717_233ddadc", "line": 252, "range": {"start_line": 251, "start_character": 0, "end_line": 252, "end_character": 46}, "in_reply_to": "5fc1f717_632d22fc", "updated": "2019-04-04 11:23:09.000000000", "message": "Now that I think about it, my code is so wrong...\n\n  if attrname == 'is_volume_backend':\n     return hasattr(self, attrname)", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "dfee9d453bb4ea68650091174232631b1fb5fc34", "unresolved": false, "patch_set": 4, "id": "5fc1f717_72d40dea", "line": 258, "updated": "2019-04-04 12:46:55.000000000", "message": "this doesn't make sense to me. obj_attr_is_set() returns False whenever attrname isn't in self.obj_fields anyway, so  \"if attrname == 'is_volume_backed'\" is redundant with the \"if attrname not in self.obj_fields\" conditional.", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "aaef4a8600e98af2d0d15e58993e9297b3a3e62e", "unresolved": false, "patch_set": 4, "id": "5fc1f717_a3bf8aa8", "line": 400, "range": {"start_line": 396, "start_character": 0, "end_line": 400, "end_character": 53}, "updated": "2019-04-04 11:19:22.000000000", "message": "Why not just do?:\n\n  instance.is_volume_backed = db_inst.get('is_volume_backed', False)\n\nOr if you think that it could have the value `None` we can do\n\n  instance.is_volume_backed = db_inst.get('is_volume_backed') or False", "commit_id": "54abef984a22b6982f78a0342b5ebc9a97f12717"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "a4cf794c594bdddd11b17235adf8316fe17ab0f6", "unresolved": false, "patch_set": 8, "id": "7faddb67_71ff7167", "line": 226, "range": {"start_line": 226, "start_character": 28, "end_line": 226, "end_character": 34}, "updated": "2019-07-05 04:36:35.000000000", "message": "(2, 6)", "commit_id": "d966d1d417e43f4a7bcb0a9a70fa884a7a28d76a"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "5202f5342888f8c7ba2b9c057e6e36fdcac33b0c", "unresolved": false, "patch_set": 12, "id": "7faddb67_06d93a55", "line": 101, "updated": "2019-08-22 09:29:33.000000000", "message": "?: what about the other elements from `_INSTANCE_OPTIONAL_NON_COLUMN_FIELDS`?", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 20182, "name": "Bhagyashri Shewale", "email": "bshewale@redhat.com", "username": "bhagyashris"}, "change_message_id": "ebfcce31385d3ca2d779b9d43a29d1b1937afa66", "unresolved": false, "patch_set": 12, "id": "7faddb67_1d009935", "line": 101, "in_reply_to": "7faddb67_06d93a55", "updated": "2019-08-23 02:01:29.000000000", "message": "As mentioned in the notes that this is the special case (\u201csimple tenant usage api\u201d) where we want to get instance list, by checking \u2018is_volume_backed\u2019 attribute is requested in expected_attrs and present in _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS, if it\u2019s there then add that in the \u2018expected_cols\u2019 and passed it to \u2018_get_active_by_window_joined\u2019 method to execute the query.", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "5202f5342888f8c7ba2b9c057e6e36fdcac33b0c", "unresolved": false, "patch_set": 12, "id": "7faddb67_e6df3e36", "line": 102, "updated": "2019-08-22 09:29:33.000000000", "message": "What's the purpose of this?  We know beforehand that it's not an empty list and will always evaluate to True.", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "8e79e13c185577a0fcd2acbd9e7d0c085cefcb44", "unresolved": false, "patch_set": 12, "id": "7faddb67_5bf376a0", "line": 102, "in_reply_to": "7faddb67_ddf9a14e", "updated": "2019-08-23 09:14:31.000000000", "message": "you are not checking that 'is_volume_backend' is present in _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS, you are only checking that `bool(_INSTANCE_OPTIONAL_NON_COLUMN_FIELDS) is True`.", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 20182, "name": "Bhagyashri Shewale", "email": "bshewale@redhat.com", "username": "bhagyashris"}, "change_message_id": "ebfcce31385d3ca2d779b9d43a29d1b1937afa66", "unresolved": false, "patch_set": 12, "id": "7faddb67_ddf9a14e", "line": 102, "in_reply_to": "7faddb67_e6df3e36", "updated": "2019-08-23 02:01:29.000000000", "message": "Here I am checking \u2018is_voliume_backed\u2019 is present in both expected_attrs and _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS and not the _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS list is None or not", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "5202f5342888f8c7ba2b9c057e6e36fdcac33b0c", "unresolved": false, "patch_set": 12, "id": "7faddb67_5cbe2865", "line": 106, "range": {"start_line": 105, "start_character": 0, "end_line": 106, "end_character": 35}, "updated": "2019-08-22 09:29:33.000000000", "message": "nit: we should not split this from L90-L92", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 20182, "name": "Bhagyashri Shewale", "email": "bshewale@redhat.com", "username": "bhagyashris"}, "change_message_id": "ebfcce31385d3ca2d779b9d43a29d1b1937afa66", "unresolved": false, "patch_set": 12, "id": "7faddb67_9d91e9fa", "line": 106, "range": {"start_line": 105, "start_character": 0, "end_line": 106, "end_character": 35}, "in_reply_to": "7faddb67_5cbe2865", "updated": "2019-08-23 02:01:29.000000000", "message": "Done", "commit_id": "76d1da0e371e27eda0f8ed58539840b9490cc87c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "8e79e13c185577a0fcd2acbd9e7d0c085cefcb44", "unresolved": false, "patch_set": 13, "id": "7faddb67_1bedfeb6", "line": 104, "updated": "2019-08-23 09:14:31.000000000", "message": "Why the nested `if`s?  And according to your comment on patch 12 you wanted to checked it's also part of _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS\n\nWe can do:\n\n    if (include_non_cols_fields and\n            'is_volume_backed' in expected_attrs and\n            'is_volume_backed' in _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS):\n\nThough in my opinion we already know it's in _INSTANCE_OPTIONAL_NON_COLUMN_FIELDS, so we should just do:\n\n    if (include_non_cols_fields and 'is_volume_backed' in expected_attrs):", "commit_id": "0c0be1659a8ff8944523b516030b890aeff5db88"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "24c080e141caab30015aa547128ab3bc154c925e", "unresolved": false, "patch_set": 13, "id": "7faddb67_5bab761d", "line": 105, "updated": "2019-08-23 09:30:04.000000000", "message": "nit: Probably more efficient to append to the existing list instead of creating a new one:\n\n   non_cols_fields.append('is_volume_backed')", "commit_id": "0c0be1659a8ff8944523b516030b890aeff5db88"}], "nova/tests/functional/test_simple_tenant_usage.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "12bda8d48103a36e01fde00159316c281a70fb66", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_beae29e2", "line": 59, "range": {"start_line": 59, "start_character": 47, "end_line": 59, "end_character": 48}, "updated": "2020-01-13 06:51:30.000000000", "message": "there should '1'?", "commit_id": "866e195d724755a6158308145b28399209cff233"}], "nova/tests/unit/api/openstack/compute/test_simple_tenant_usage.py": [{"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "db19a0f0383040ef3478c5613dd3354b913d6aaf", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_9c4bd4b0", "line": 250, "range": {"start_line": 248, "start_character": 7, "end_line": 250, "end_character": 39}, "updated": "2018-10-23 11:13:55.000000000", "message": "hmm, this seems wrong, I mean, that we got doubled result for tenant_usages[0]['total_local_gb_usage'] is wrong if it is true, because it does not make sense.", "commit_id": "becf4b73d2bbd9992b30ea09df0d85eb91901e40"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "bcef09c8de11409c41c11da528f5c7662f24b98c", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_6f0ddc34", "line": 250, "range": {"start_line": 248, "start_character": 7, "end_line": 250, "end_character": 39}, "in_reply_to": "3f79a3b5_9c4bd4b0", "updated": "2018-10-23 11:30:56.000000000", "message": "...Later, talked on IRC and I got what this means, but maybe we should move this closer to the actuall assert?", "commit_id": "becf4b73d2bbd9992b30ea09df0d85eb91901e40"}]}}, "openstack%2Fnova~master~Ic71cdae7d10a0af7fffa596702b621695331252e": {"owner_id": 27302, "owner_name": "Shilpa Devharakar", "owner_email": "shilpa.devharakar@nttdata.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-01-14 18:37:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": -1, "date": "2020-01-13 07:07:19.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/objects/instance.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "ac4b6a6e40ee328dbb7a24eeadc0533d4dfa3e60", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_5e5935fe", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "updated": "2020-01-13 07:07:19.000000000", "message": "why we need this flag?", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "9f43db39170c9944b7387cd0685cb5dbeb344e8c", "unresolved": false, "patch_set": 8, "id": "1fa4df85_ffebffd8", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "in_reply_to": "3fa7e38b_428b7a68", "updated": "2020-02-27 06:08:50.000000000", "message": "Hi Dan,\n\nAs suggested here if added 'is_volume_backed' field to '_INSTANCE_OPTIONAL_JOINED_FIELDS' then getting below 'ArgumentError' error, so moving said field to '_INSTANCE_OPTIONAL_NON_COLUMN_FIELDS'\n\nPlease confirm.\n\nsqlalchemy.exc.ArgumentError: Can't find property named \"is_volume_backed\" on mapped class Instance->instances in this Query, during \nFile \"/opt/stack/nova/nova/db/sqlalchemy/api.py\", line 1900, in _build_instance_get\n        query = query.options(joinedload(column))\n\n\nHere expecting 'is_volume_backed' column to be present at databae.", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "99f6c4e4b01ea4e6cc93be8e234ab29ab06556d6", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_e1588159", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "in_reply_to": "3fa7e38b_5e5935fe", "updated": "2020-01-13 13:15:26.000000000", "message": "Thanks Alex for review\nThis flag is necessary otherwise for each _expected_cols() expects \"is_volume_backed\" property on mapped class Instance->instances", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, "change_message_id": "01e6b606a6bbf980ef1ee8f557cca844cf2b3d50", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_f1fb5dbc", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "in_reply_to": "3fa7e38b_916ea9c6", "updated": "2020-01-14 12:00:14.000000000", "message": "Hi Alex,\nPlease refer [1], i have run [2] testcase by removing this flag, to help you to understand its need.\n\n[1]: http://paste.openstack.org/show/788371/\n[2]: tox -e py37 nova.tests.unit.compute.test_compute.ComputeTestCase.test_rebuild_instance_notification", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5132601f6479be8e889cdd2cdd1d5f60be006361", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_916ea9c6", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "in_reply_to": "3fa7e38b_e1588159", "updated": "2020-01-14 11:52:56.000000000", "message": "sorry, I may missed something, do you have specifc example?", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "70ff2ac6a28f2b4cef0fa51777ffdf645046ce8d", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_428b7a68", "line": 102, "range": {"start_line": 102, "start_character": 8, "end_line": 102, "end_character": 31}, "in_reply_to": "3fa7e38b_f1fb5dbc", "updated": "2020-01-14 18:37:51.000000000", "message": "I agree with alex, we don't need this flag. I think the problem stems from you putting this in the OPTIONAL_NON_COLUMN_FIELDS list. However, the list above specifically says \"fields that can be joined at the db layer\" which is what you have done in the patch before. Having to add something specific for your use-case when there are a ton of other attributes here not requiring that special treatment should be a clue that it's wrong.\n\nPlease put your field in OPTIONAL_JOINED_FIELDS and remove this special case.", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "70ff2ac6a28f2b4cef0fa51777ffdf645046ce8d", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a2bcae07", "line": 235, "range": {"start_line": 235, "start_character": 48, "end_line": 235, "end_character": 61}, "updated": "2020-01-14 18:37:51.000000000", "message": "This is not legit. The default here is only for the case where we call obj_set_defaults() on an instance object. If you were to do that, you'd take this default which isn't going to be sane. Meaning, you can't guess if an instance is not volume backed.", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "70ff2ac6a28f2b4cef0fa51777ffdf645046ce8d", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_025a62f4", "line": 906, "updated": "2020-01-14 18:37:51.000000000", "message": "I would argue that we should not provide a lazy-loader for this field. It would be pretty wasteful to pull a full instance object over RPC, and then go all the way back to the DB over RPC to pull a single boolean, but by way of yanking all the BDMS.\n\nIs there some specific reason why this needs to be lazy-loadable, or can we just make sure that anywhere we care about this we've pre-queried for it? If you're just using this in the API for filtering, then just including it explicitly all the time would be better.", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5132601f6479be8e889cdd2cdd1d5f60be006361", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_11887969", "line": 911, "range": {"start_line": 911, "start_character": 16, "end_line": 911, "end_character": 76}, "updated": "2020-01-14 11:52:56.000000000", "message": "nit, also can be \"if bdm.is_root and bdm.is_volume\"\n\nonly need to update if there a update for the patch.", "commit_id": "43a11d326be2a470b7e32ef4e82ea296e481f99d"}]}}, "openstack%2Fnova~master~I6af2fe2a1d915ffc86ad3d73aa5f04a09a93d867": {"owner_id": 2271, "owner_name": "Michael Still", "owner_email": "mikal@stillhq.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2271, "name": "Michael Still", "email": "mikal@stillhq.com", "username": "mikalstill"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-08-22 21:02:28.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-08-22 21:17:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d3e2b4a2102d2c9b11b87dc77a6e85a4671ebe7b", "unresolved": false, "patch_set": 2, "id": "7faddb67_b429628a", "line": 10, "range": {"start_line": 9, "start_character": 0, "end_line": 10, "end_character": 55}, "updated": "2019-08-22 21:02:28.000000000", "message": "If so then we should have the same rules for hyperv, powervm and xenapi.", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "a761800adc28ed9f0b873bffd8c0093dbec57287", "unresolved": false, "patch_set": 2, "id": "7faddb67_543d8e8c", "line": 10, "range": {"start_line": 9, "start_character": 0, "end_line": 10, "end_character": 55}, "in_reply_to": "7faddb67_b429628a", "updated": "2019-08-22 21:17:04.000000000", "message": "Yah, but they can be fixed in separate patches.\n\nWhich I think is a good idea so we can break their CIs one at a time.", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}], "nova/virt/zvm/utils.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7b22ddd13eb605a908299dd0c03bc7ebe2f28d15", "unresolved": false, "patch_set": 1, "id": "7faddb67_61e80db3", "line": 48, "range": {"start_line": 48, "start_character": 57, "end_line": 48, "end_character": 67}, "updated": "2019-08-22 18:16:48.000000000", "message": "dependency", "commit_id": "97e3f767621f1607abea80fb6b8dadf80a0fc17a"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7b22ddd13eb605a908299dd0c03bc7ebe2f28d15", "unresolved": false, "patch_set": 1, "id": "7faddb67_21ca1546", "line": 50, "range": {"start_line": 50, "start_character": 8, "end_line": 50, "end_character": 71}, "updated": "2019-08-22 18:16:48.000000000", "message": "I don't think this is different from just\n\n from zvmconnector import connector\n\nis it?", "commit_id": "97e3f767621f1607abea80fb6b8dadf80a0fc17a"}, {"author": {"_account_id": 2271, "name": "Michael Still", "email": "mikal@stillhq.com", "username": "mikalstill"}, "change_message_id": "62b0ccdb9cd790e3f0fc52e6b4106dfbcbeb1aec", "unresolved": false, "patch_set": 1, "id": "7faddb67_72b8dde7", "line": 50, "range": {"start_line": 50, "start_character": 8, "end_line": 50, "end_character": 71}, "in_reply_to": "7faddb67_21ca1546", "updated": "2019-08-22 20:34:08.000000000", "message": "It isn't. This is just how the other drivers do this, for reasons I no longer remember.", "commit_id": "97e3f767621f1607abea80fb6b8dadf80a0fc17a"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "a761800adc28ed9f0b873bffd8c0093dbec57287", "unresolved": false, "patch_set": 2, "id": "7faddb67_943306c5", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 34}, "updated": "2019-08-22 21:17:04.000000000", "message": "no longer used", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}], "requirements.txt": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d3e2b4a2102d2c9b11b87dc77a6e85a4671ebe7b", "unresolved": false, "patch_set": 2, "id": "7faddb67_b4008202", "line": 61, "updated": "2019-08-22 21:02:28.000000000", "message": "hyperv only", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d3e2b4a2102d2c9b11b87dc77a6e85a4671ebe7b", "unresolved": false, "patch_set": 2, "id": "7faddb67_54058e0f", "line": 64, "updated": "2019-08-22 21:02:28.000000000", "message": "oh hi xenapi", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d3e2b4a2102d2c9b11b87dc77a6e85a4671ebe7b", "unresolved": false, "patch_set": 2, "id": "7faddb67_140f1630", "line": 67, "updated": "2019-08-22 21:02:28.000000000", "message": "powervm here", "commit_id": "91442b94bff50fc0fa1d4b21518c2a49f6d6ca98"}]}}, "openstack%2Fnova~master~Ie9fe8bd25f4625161d529ecdcc2822fc9d614083": {"owner_id": 7543, "owner_name": "Yongli He", "owner_email": "yongli.he@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": -1, "date": "2019-11-14 00:44:35.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": -1, "date": "2019-11-20 16:43:21.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-11-19 05:02:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "7b83c5cd1a0e9fc6bd42d274c378b3f9d423715b", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_226adab2", "line": 9, "range": {"start_line": 9, "start_character": 13, "end_line": 9, "end_character": 14}, "updated": "2019-01-15 04:33:16.000000000", "message": "Typo: periodic.\nThis sentence has poor grammar.\n\nI think you wanted to say something like:\n\nThis creates a periodic task to clean up orphan instances. This will destroy lingering instances on the hypervisor without any record in the nova database.", "commit_id": "408155ff573c09aea32a5480533be0f10735cded"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "9cca6824b6f534db3c4321df8d58e2e3cb050f91", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_dc8a80bd", "line": 11, "range": {"start_line": 10, "start_character": 24, "end_line": 11, "end_character": 31}, "updated": "2019-01-18 15:40:44.000000000", "message": "When I read this the first time, I interpreted it as \"not listed in the nova database\" == \"deleted from the nova database\". It would be helpful [for people like me] if you could re-word this a bit to be clear that instances are not deleted, they are still running and should be destroyed. Also, please add words explaining why they should be destroyed if they are not \"deleted\" in the nova database.", "commit_id": "408155ff573c09aea32a5480533be0f10735cded"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "1edee150363a23927a14e80eaba998e79632795e", "unresolved": false, "patch_set": 6, "id": "5fc1f717_1bd65ec5", "line": 23, "updated": "2019-03-19 14:58:41.000000000", "message": "Append to this paragraph:\n\nThis is configurable via option running_orphan_instance_action.", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "e698a128c0a46e92e0a7ff5a8977e4a2ca603ef5", "unresolved": false, "patch_set": 6, "id": "5fc1f717_9311c9af", "line": 23, "in_reply_to": "5fc1f717_1bd65ec5", "updated": "2019-03-20 02:23:33.000000000", "message": "Done", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a6116e5f", "line": 19, "range": {"start_line": 16, "start_character": 52, "end_line": 19, "end_character": 16}, "updated": "2019-03-27 14:24:53.000000000", "message": "Yeah so in this case we have 1 instance in the database but it's pointing at the destination host/node for the live migration, but we failed to cleanup the guest on the source hypervisor so it's still running there consuming resources, correct?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_fc7db9b1", "line": 19, "range": {"start_line": 16, "start_character": 52, "end_line": 19, "end_character": 16}, "in_reply_to": "5fc1f717_a6116e5f", "updated": "2019-03-28 08:15:43.000000000", "message": "yeah. This quite complex to reproduce. @Jim Gauld know the whole story, if we need more clarify.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_ab83dfcb", "line": 16, "range": {"start_line": 15, "start_character": 4, "end_line": 16, "end_character": 20}, "updated": "2019-04-26 13:52:35.000000000", "message": "Could we fix the original unhandled exception case? Is there  a bug report for it?", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "802e0374245bd226dd641d2959a8b0f02802cd10", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_88611ad6", "line": 16, "range": {"start_line": 15, "start_character": 4, "end_line": 16, "end_character": 20}, "in_reply_to": "ffb9cba7_3c3e3b8c", "updated": "2019-04-29 15:23:15.000000000", "message": "These robustness scenarios go way-back, and are hard to recreate without forcing system problems, and there have been a number of robustness improvements along the way which many have addressed a number of the error scenarios.  We don't have historical bug reports from pre-StarlingX. When we originally tried to address this problem, I would either try to recreate a fault, or simulate by injecting various exceptions in various parts of code.\n\nThere were types of robustness cases based on notes I have which resulted in orphans:\ncase 1: server duplicated with live-migration with fault\n- start live-migration\n- during LM there is a fault of some kind and does not entirely clean up, but libvirt continues to completion\n\neg. during LM :\n- controller is rebooted or AMQP/rabbitmq killed\n- get a rollback but the rollback fails with some exception\n- get networking API port error\n- get cinder API error\n- get ISCSI error at some point\n- If using 2M or 1G hugepages and system has very little remaining 4K pages, the orphan VMs contribute to unpredictable/unquantifiable behaviour due to OOM-killer killing off various Linux system tasks that don't always come back, or we notice subsequent libvirt exceptions or cannot 'fork' processes due to insufficient memory.\n\ncase 2: This description from someone else\n- nova-compute goes down\n- user deletes the server (local delete in the API)\n- archive/purge deleted records from the DB\n- nova-compute comes back up\n- guest is still running on the hypervisor and consuming resources\n\nTo simulate faults:\n- inject failures -- place in various parts of code (eg, pre-live migration, post-live migration, rollback handling, pinning overlap problem in resource tracker, neutron networking API, cinder volume API, etc).\n\nThe 'case 1' scenario would happen due to uncontrolled events during live-migration (like power outage requiring 'dead-office-recovery', reboot of compute host, or AMQP failure.)", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "ba8bea6d926b0949a585e03a1abd863e67c91a85", "unresolved": false, "patch_set": 18, "id": "dfbec78f_afa022a7", "line": 16, "range": {"start_line": 15, "start_character": 4, "end_line": 16, "end_character": 20}, "in_reply_to": "ffb9cba7_88611ad6", "updated": "2019-05-04 14:59:10.000000000", "message": "@Jim: thanks. It feels that at least in some of these cases the orphaning can be prevented by fixing the root cause in nova.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ccd41efbe6902d0e044dcbfa47042714c7d7a9fb", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_3c3e3b8c", "line": 16, "range": {"start_line": 15, "start_character": 4, "end_line": 16, "end_character": 20}, "in_reply_to": "ffb9cba7_ab83dfcb", "updated": "2019-04-29 05:55:37.000000000", "message": "@Jim Gauld may help on this question.\nDescription here may not be exactly what happened there. commit message need to be revised.\n\nThat problem happens while the networking has broken(if I remember correctly, this reported by starlingX.)", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_0b66ab52", "line": 22, "range": {"start_line": 21, "start_character": 0, "end_line": 22, "end_character": 68}, "updated": "2019-04-26 13:52:35.000000000", "message": "I think we mark those instance deleted in the database but does not remove them from the db so when the compute comes up it will clean up the instance from the hypervisor", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ccd41efbe6902d0e044dcbfa47042714c7d7a9fb", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_fc5c23ee", "line": 22, "range": {"start_line": 21, "start_character": 0, "end_line": 22, "end_character": 68}, "in_reply_to": "ffb9cba7_0b66ab52", "updated": "2019-04-29 05:55:37.000000000", "message": "@Jim Gauld. The instance this patch talk about is the instance which not in DB totally. also reported by starlingX, JIm Gault may help us on this.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_11325ca8", "line": 28, "updated": "2019-04-26 13:52:35.000000000", "message": "I feel that if the above cases can happen then we also have to try to fix the root cause of the problems as well.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "80a04995b8bdbdc83c469375b53a1012ea27b23d", "unresolved": false, "patch_set": 37, "id": "5faad753_594cf375", "line": 16, "range": {"start_line": 14, "start_character": 8, "end_line": 16, "end_character": 20}, "updated": "2019-09-06 02:15:29.000000000", "message": "To be clear, I don't think this scenario should be in the scope of this patch. If there are bugs in the rollback routines for migrations, those should be fixed as separate bugs, which Balazs Gibizer commented on PS18.\n\nThis patch should only be about cleaning up \"unknown\" instances which are not in the database at all.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_15695324", "line": 16, "range": {"start_line": 14, "start_character": 8, "end_line": 16, "end_character": 20}, "in_reply_to": "5faad753_594cf375", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "7d49877f45c6335c4093f90e4be44cc74e080544", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_3fdde2dc", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 25}, "updated": "2019-11-15 07:25:28.000000000", "message": "We should name this patch as cleanup 'non tracked' instance.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}], "nova/compute/manager.py": [{"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "570bfde68a3d39dc79aed7869341e2d190bd04c6", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_f7549223", "line": 8370, "range": {"start_line": 8370, "start_character": 41, "end_line": 8370, "end_character": 44}, "updated": "2019-01-15 04:22:17.000000000", "message": "This should have a configuration parameter for orphan instance cleanup interval.", "commit_id": "408155ff573c09aea32a5480533be0f10735cded"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "2eee3b82b9c8be6c6fde679ab558bdf61b3cc6f7", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_e4b84677", "line": 8370, "range": {"start_line": 8370, "start_character": 41, "end_line": 8370, "end_character": 44}, "in_reply_to": "bfdaf3ff_f7549223", "updated": "2019-01-16 06:40:32.000000000", "message": "thanks Jim. I'm will come back here address these. the 'numa' 'server_group' API code update is the priority now.", "commit_id": "408155ff573c09aea32a5480533be0f10735cded"}, {"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "f1221cbeb3335ac20214f97ea43ae7d1494d38b1", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_3c992fc3", "line": 1208, "range": {"start_line": 1208, "start_character": 11, "end_line": 1208, "end_character": 51}, "updated": "2019-01-30 06:36:48.000000000", "message": "will this has conflict/duplicate logic to line 1210?", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_554c1241", "line": 1208, "range": {"start_line": 1208, "start_character": 11, "end_line": 1208, "end_character": 51}, "in_reply_to": "9fdfeff1_3c992fc3", "updated": "2019-03-14 08:35:10.000000000", "message": "The unit test reveals some conflict. I'm digging that.", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "f1221cbeb3335ac20214f97ea43ae7d1494d38b1", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_bc851f5c", "line": 8287, "range": {"start_line": 8287, "start_character": 29, "end_line": 8287, "end_character": 40}, "updated": "2019-01-30 06:36:48.000000000", "message": "this name is confusing..\n\nmaybe destory_instance_by_name? or somethingt else...", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_f5665ec1", "line": 8287, "range": {"start_line": 8287, "start_character": 29, "end_line": 8287, "end_character": 40}, "in_reply_to": "9fdfeff1_bc851f5c", "updated": "2019-03-14 08:35:10.000000000", "message": "Done", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "f1221cbeb3335ac20214f97ea43ae7d1494d38b1", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_7ca257fe", "line": 8370, "range": {"start_line": 8370, "start_character": 44, "end_line": 8370, "end_character": 45}, "updated": "2019-01-30 06:36:48.000000000", "message": "looks like we can make it configurable?", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_d561e2aa", "line": 8370, "range": {"start_line": 8370, "start_character": 44, "end_line": 8370, "end_character": 45}, "in_reply_to": "9fdfeff1_7ca257fe", "updated": "2019-03-14 08:35:10.000000000", "message": "Gonna add it, thanks. While getting it done, ping you.", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "e51c5ecc867d4bbdb29aba49288b905be4c6fb1c", "unresolved": false, "patch_set": 4, "id": "5fc1f717_8c925156", "line": 8628, "range": {"start_line": 8628, "start_character": 2, "end_line": 8628, "end_character": 45}, "updated": "2019-03-15 14:43:59.000000000", "message": "This was one of my early comments: please add configurable parameter for orphan cleanup interval, with default 300 seconds. Then this could be treated as a switch that can be disabled, though I hope no one would do that.", "commit_id": "50d9659651e06f4770ffecb173c045f9d4aa708f"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "12c1cb399bdb8fd25a102f4343a1eba96bf19081", "unresolved": false, "patch_set": 4, "id": "5fc1f717_05286194", "line": 8628, "range": {"start_line": 8628, "start_character": 2, "end_line": 8628, "end_character": 45}, "in_reply_to": "5fc1f717_8c925156", "updated": "2019-03-18 07:51:44.000000000", "message": "Base on similarity with running_delete, propose to use the same interval config. refer to the code.", "commit_id": "50d9659651e06f4770ffecb173c045f9d4aa708f"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "1edee150363a23927a14e80eaba998e79632795e", "unresolved": false, "patch_set": 6, "id": "5fc1f717_605faf72", "line": 8591, "range": {"start_line": 8591, "start_character": 0, "end_line": 8591, "end_character": 57}, "updated": "2019-03-19 14:58:41.000000000", "message": "the 'log' action doesn't actually delete the domain; perhaps delete these 3 words", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "e698a128c0a46e92e0a7ff5a8977e4a2ca603ef5", "unresolved": false, "patch_set": 6, "id": "5fc1f717_d8920e4c", "line": 8591, "range": {"start_line": 8591, "start_character": 0, "end_line": 8591, "end_character": 57}, "in_reply_to": "5fc1f717_605faf72", "updated": "2019-03-20 02:23:33.000000000", "message": "Done", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "1edee150363a23927a14e80eaba998e79632795e", "unresolved": false, "patch_set": 6, "id": "5fc1f717_60ed6f8a", "line": 8641, "range": {"start_line": 8641, "start_character": 29, "end_line": 8641, "end_character": 39}, "updated": "2019-03-19 14:58:41.000000000", "message": "'founding' is not a word;  change to 'Detected orphan instance'", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "e698a128c0a46e92e0a7ff5a8977e4a2ca603ef5", "unresolved": false, "patch_set": 6, "id": "5fc1f717_38a1d296", "line": 8641, "range": {"start_line": 8641, "start_character": 29, "end_line": 8641, "end_character": 39}, "in_reply_to": "5fc1f717_60ed6f8a", "updated": "2019-03-20 02:23:33.000000000", "message": "Done", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_4600ca02", "line": 535, "range": {"start_line": 535, "start_character": 13, "end_line": 535, "end_character": 28}, "updated": "2019-03-27 14:24:53.000000000", "message": "This is the first thing I see in the code patch and I have no idea what the context on this will be, so we should either rename it to be more specific (suspected_orphan_uuids?) and/or at least have a code comment about what this variable will be used for.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_5f663fef", "line": 535, "range": {"start_line": 535, "start_character": 13, "end_line": 535, "end_character": 28}, "in_reply_to": "5fc1f717_4600ca02", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09041314", "line": 8513, "range": {"start_line": 8513, "start_character": 29, "end_line": 8513, "end_character": 30}, "updated": "2019-03-27 14:24:53.000000000", "message": "This method only works on a single instance correct? So drop the plural here.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3c610106", "line": 8513, "range": {"start_line": 8513, "start_character": 29, "end_line": 8513, "end_character": 30}, "in_reply_to": "5fc1f717_09041314", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a9061f1b", "line": 8516, "range": {"start_line": 8516, "start_character": 18, "end_line": 8516, "end_character": 23}, "updated": "2019-03-27 14:24:53.000000000", "message": "it is", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_5c5c0d4a", "line": 8516, "range": {"start_line": 8516, "start_character": 18, "end_line": 8516, "end_character": 23}, "in_reply_to": "5fc1f717_a9061f1b", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_6914b744", "line": 8517, "range": {"start_line": 8517, "start_character": 19, "end_line": 8517, "end_character": 20}, "updated": "2019-03-27 14:24:53.000000000", "message": "space", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_fc56192a", "line": 8517, "range": {"start_line": 8517, "start_character": 19, "end_line": 8517, "end_character": 20}, "in_reply_to": "5fc1f717_6914b744", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_2948ef59", "line": 8520, "updated": "2019-03-27 14:24:53.000000000", "message": "This try/except block is copied from _destroy_evacuated_instances, I wonder if we could move it to a common helper method somehow, but that's just a nit at this point - maybe leave a comment at least in case we make a change in either location.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7c38e9ec", "line": 8520, "in_reply_to": "5fc1f717_2948ef59", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_893803d3", "line": 8530, "range": {"start_line": 8530, "start_character": 20, "end_line": 8530, "end_character": 25}, "updated": "2019-03-27 14:24:53.000000000", "message": "Fix the alignment here.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9c3b55e8", "line": 8530, "range": {"start_line": 8530, "start_character": 20, "end_line": 8530, "end_character": 25}, "in_reply_to": "5fc1f717_893803d3", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_495c5b18", "line": 8546, "updated": "2019-03-27 14:24:53.000000000", "message": "Couldn't you avoid this by using a mutated context with read_deleted=True?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7f0c5beb", "line": 8546, "in_reply_to": "5fc1f717_495c5b18", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_49977b46", "line": 8557, "updated": "2019-03-27 14:24:53.000000000", "message": "This method is huge. Could we split it into at least two parts: one that does the orphan destroy/power off and one that deals with 'suspect_instances'?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_ffedabef", "line": 8557, "in_reply_to": "5fc1f717_49977b46", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_c95a8bf0", "line": 8578, "updated": "2019-03-27 14:24:53.000000000", "message": "OK I guess you don't filter on host because the instance could be running on another host but it's old guest is running here. Might be good to have a comment about that.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3f42533f", "line": 8578, "in_reply_to": "5fc1f717_c95a8bf0", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_c9412b0c", "line": 8582, "range": {"start_line": 8582, "start_character": 52, "end_line": 8582, "end_character": 62}, "updated": "2019-03-27 14:24:53.000000000", "message": "Why not just use LOG.exception if you want a traceback?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7f1f7b5a", "line": 8582, "range": {"start_line": 8582, "start_character": 52, "end_line": 8582, "end_character": 62}, "in_reply_to": "5fc1f717_c9412b0c", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09d89350", "line": 8595, "range": {"start_line": 8595, "start_character": 29, "end_line": 8595, "end_character": 36}, "updated": "2019-03-27 14:24:53.000000000", "message": "Tense is weird here, you're saying you deleted it before you call driver.destroy_instance_by_name, which might fail. Maybe say \"Attempting to delete orphan...\".", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_5f0f1f2d", "line": 8595, "range": {"start_line": 8595, "start_character": 29, "end_line": 8595, "end_character": 36}, "in_reply_to": "5fc1f717_09d89350", "updated": "2019-03-28 08:15:43.000000000", "message": "Gonna use 'Deleting'", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_c935ab46", "line": 8600, "updated": "2019-03-27 14:24:53.000000000", "message": "Here and below for power_off_by_name, for any virt driver that doesn't implement these methods you need to handle NotImplementedError and not log a warning and spam the logs, especially because you're using a shared config option for other periodics that those virt drivers might support.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9f7027a6", "line": 8600, "in_reply_to": "5fc1f717_c935ab46", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a9da9f47", "line": 8602, "updated": "2019-03-27 14:24:53.000000000", "message": "nit: alignment", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_df030f0c", "line": 8602, "in_reply_to": "5fc1f717_a9da9f47", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09c17354", "line": 8606, "range": {"start_line": 8606, "start_character": 33, "end_line": 8606, "end_character": 38}, "updated": "2019-03-27 14:24:53.000000000", "message": "\"Powering off\" or \"Attempting to power off\".", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_fc04d919", "line": 8606, "range": {"start_line": 8606, "start_character": 33, "end_line": 8606, "end_character": 38}, "in_reply_to": "5fc1f717_09c17354", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29eeafec", "line": 8607, "updated": "2019-03-27 14:24:53.000000000", "message": "alignment", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_1c00c501", "line": 8607, "in_reply_to": "5fc1f717_29eeafec", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29c78f66", "line": 8618, "range": {"start_line": 8615, "start_character": 12, "end_line": 8618, "end_character": 62}, "updated": "2019-03-27 14:24:53.000000000", "message": "We shouldn't need this if we use choices kwarg on the config option, the user would get a ValueError for using a value that is not correct.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3c0fc137", "line": 8618, "range": {"start_line": 8615, "start_character": 12, "end_line": 8618, "end_character": 62}, "in_reply_to": "5fc1f717_29c78f66", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29754f32", "line": 8668, "range": {"start_line": 8668, "start_character": 67, "end_line": 8668, "end_character": 68}, "updated": "2019-03-27 14:24:53.000000000", "message": "space", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_fc2b7991", "line": 8668, "range": {"start_line": 8668, "start_character": 67, "end_line": 8668, "end_character": 68}, "in_reply_to": "5fc1f717_29754f32", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09941336", "line": 8674, "range": {"start_line": 8671, "start_character": 12, "end_line": 8674, "end_character": 50}, "updated": "2019-03-27 14:24:53.000000000", "message": "Shouldn't need this.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9c14b54e", "line": 8674, "range": {"start_line": 8671, "start_character": 12, "end_line": 8674, "end_character": 50}, "in_reply_to": "5fc1f717_09941336", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "9bd32014662ad19398bedcba16221562ae909056", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_b6027fb3", "line": 530, "range": {"start_line": 530, "start_character": 48, "end_line": 530, "end_character": 54}, "updated": "2019-04-25 08:13:38.000000000", "message": "does not?", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_aa316b5c", "line": 530, "range": {"start_line": 530, "start_character": 48, "end_line": 530, "end_character": 54}, "in_reply_to": "ffb9cba7_b6027fb3", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_113b3c9c", "line": 8543, "range": {"start_line": 8539, "start_character": 0, "end_line": 8543, "end_character": 20}, "updated": "2019-04-26 13:52:35.000000000", "message": "I think in the _reap_suspect_instance() case we do have an instance record in the database. So I don't think this comment is in the correct place.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_5f02f370", "line": 8543, "range": {"start_line": 8539, "start_character": 0, "end_line": 8543, "end_character": 20}, "in_reply_to": "ffb9cba7_113b3c9c", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_d15da4e9", "line": 8564, "range": {"start_line": 8546, "start_character": 0, "end_line": 8564, "end_character": 51}, "updated": "2019-04-26 13:52:35.000000000", "message": "I think this is the same as in _destroy_evacuated_instances(). If so then please pull out a common function.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_4a254f5b", "line": 8564, "range": {"start_line": 8546, "start_character": 0, "end_line": 8564, "end_character": 51}, "in_reply_to": "ffb9cba7_d15da4e9", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_51bbf40c", "line": 8585, "updated": "2019-04-26 13:52:35.000000000", "message": "let's try not to log the same thing to the compute log at every periodic cycle.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_ca74df38", "line": 8585, "in_reply_to": "ffb9cba7_51bbf40c", "updated": "2019-04-30 05:58:08.000000000", "message": "in the next revision.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_d125a4ac", "line": 8622, "updated": "2019-04-26 13:52:35.000000000", "message": "This will periodically log the same thing to the compute log. I think we should log an information only once.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_2a933b5d", "line": 8622, "in_reply_to": "ffb9cba7_d125a4ac", "updated": "2019-04-30 05:58:08.000000000", "message": "gonna fix this on next revision, thanks.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "9bd32014662ad19398bedcba16221562ae909056", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_b6c59f3e", "line": 8628, "range": {"start_line": 8626, "start_character": 16, "end_line": 8628, "end_character": 38}, "updated": "2019-04-25 08:13:38.000000000", "message": "Hmm, seems should be debug to me", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "539b43d994e550dd46c033426685adc25e9b69a9", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_a203120f", "line": 8628, "range": {"start_line": 8626, "start_character": 16, "end_line": 8628, "end_character": 38}, "in_reply_to": "ffb9cba7_b6c59f3e", "updated": "2019-04-25 15:20:28.000000000", "message": "you will never known that you had a problem if you don't log it; this does not flood so I think it OK as warning", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "9bd32014662ad19398bedcba16221562ae909056", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_d6c0532d", "line": 8640, "range": {"start_line": 8638, "start_character": 20, "end_line": 8640, "end_character": 42}, "updated": "2019-04-25 08:13:38.000000000", "message": "ditto", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_f14d4872", "line": 8641, "range": {"start_line": 8641, "start_character": 20, "end_line": 8641, "end_character": 38}, "updated": "2019-04-26 13:52:35.000000000", "message": "Seems like the first part of the comment is missing", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_8bd61bc3", "line": 8666, "range": {"start_line": 8666, "start_character": 29, "end_line": 8666, "end_character": 33}, "updated": "2019-04-26 13:52:35.000000000", "message": "s/even//", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_caa93f7c", "line": 8666, "range": {"start_line": 8666, "start_character": 29, "end_line": 8666, "end_character": 33}, "in_reply_to": "ffb9cba7_8bd61bc3", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_31e76043", "line": 8699, "range": {"start_line": 8699, "start_character": 7, "end_line": 8699, "end_character": 54}, "updated": "2019-04-26 13:52:35.000000000", "message": "define the suspected_instances as a set at L8690 then you don't have to copy the data here", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_2aca5b4d", "line": 8699, "range": {"start_line": 8699, "start_character": 7, "end_line": 8699, "end_character": 54}, "in_reply_to": "ffb9cba7_31e76043", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_117a5c87", "line": 8702, "range": {"start_line": 8701, "start_character": 0, "end_line": 8702, "end_character": 54}, "updated": "2019-04-26 13:52:35.000000000", "message": "Why we wait two periodic cycles?", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_cad7ffed", "line": 8702, "range": {"start_line": 8701, "start_character": 0, "end_line": 8702, "end_character": 54}, "in_reply_to": "ffb9cba7_117a5c87", "updated": "2019-04-30 05:58:08.000000000", "message": "leave it open for now. \nthis might have some history here. let check if Jim knows the reason.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_11d6dc50", "line": 8707, "range": {"start_line": 8707, "start_character": 36, "end_line": 8707, "end_character": 43}, "updated": "2019-04-26 13:52:35.000000000", "message": "the indent feels wrong here.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_8adee70e", "line": 8707, "range": {"start_line": 8707, "start_character": 36, "end_line": 8707, "end_character": 43}, "in_reply_to": "ffb9cba7_11d6dc50", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "70a436ec76503136cca6d94a4a68556986a04ae4", "unresolved": false, "patch_set": 25, "id": "9fb8cfa7_0603580f", "line": 8830, "range": {"start_line": 8829, "start_character": 11, "end_line": 8830, "end_character": 67}, "updated": "2019-06-19 11:01:42.000000000", "message": "ok so this is filtering base on a new function added to each driver which you added to libvirt here https://review.opendev.org/#/c/648912/11/nova/virt/libvirt/driver.py@9679\n\nhowever the default implementation  means that all out of tree drivers and most in tree drivers will raise an exception so  i think you need to update the previous patch in the series.\n\nhttps://review.opendev.org/#/c/648912/11/nova/virt/driver.py@1864", "commit_id": "b77eda2125b1431ffe7aefa2e197ebfda2a6373c"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "804e4861438bd71df1063ee3b48075c8c13c6c41", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_661407a1", "line": 8200, "updated": "2019-06-26 19:51:45.000000000", "message": "Based on the discussion from the PTG, we agreed on an approach to add a new 'reap-unknown' enumerated choice to the CONF.running_deleted_instance_action config option and enhance this method to handle cleaning up orphaned instances not found in the database.", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_91454d1a", "line": 8200, "in_reply_to": "9fb8cfa7_661407a1", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "804e4861438bd71df1063ee3b48075c8c13c6c41", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_e6da37e7", "line": 8229, "range": {"start_line": 8229, "start_character": 33, "end_line": 8229, "end_character": 59}, "updated": "2019-06-26 19:51:45.000000000", "message": "This method will return running deleted instances that are found in the database. There is another method, self.driver.list_instance_uuids, which will return the UUIDs for all [libvirt] guests running on the host. If you did something like make a set() out of each list and take the set difference, you could get a list of UUIDs that are running and not found in the database.\n\nThen, if action == 'reap-unknown', you can destroy the running and not found domains. Else, you log a message about the running and not found domains.", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_314a5927", "line": 8229, "range": {"start_line": 8229, "start_character": 33, "end_line": 8229, "end_character": 59}, "in_reply_to": "9fb8cfa7_e6da37e7", "updated": "2019-07-05 08:57:17.000000000", "message": "Done\n\nWe can not simply add reap_unkonw, which overwrite the original reap, poweroff option, so I decide just use reap and poweroff instead.", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "804e4861438bd71df1063ee3b48075c8c13c6c41", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_e6b1d790", "line": 8275, "updated": "2019-06-26 19:51:45.000000000", "message": "Maybe we could add a new loop here which loops over the \"unknown\" instances (running but not found in database) and if action == 'reap-unknown', destroy them, similar to what's shown on L8254 - L8266. Actually, if the instance has been archived/purged from the database, we wouldn't be able to retrieve BDM records anyway, so we need not do that part.\n\nWe would call self.driver.destroy directly, I think. And I'm thinking instead of adding new methods to the libvirt driver, just construct a shell Instance(uuid=<uuid>, name=<make up a name>, ...) for anything that is needed internally by destroy(). That way we get all of the usual cleanup activities (such as retry, etc) that are implemented in the existing destroy() method.", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_cbc29c53", "line": 8795, "range": {"start_line": 8778, "start_character": 2, "end_line": 8795, "end_character": 44}, "updated": "2019-06-26 19:12:08.000000000", "message": "proably not need", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_0bcd1484", "line": 8831, "range": {"start_line": 8797, "start_character": 3, "end_line": 8831, "end_character": 75}, "updated": "2019-06-26 19:12:08.000000000", "message": "i dont think this is needed see comment below", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_06ac2beb", "line": 8850, "range": {"start_line": 8850, "start_character": 32, "end_line": 8850, "end_character": 56}, "updated": "2019-06-26 19:12:08.000000000", "message": "this should use a uuid instead", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_31aed9e7", "line": 8850, "range": {"start_line": 8850, "start_character": 32, "end_line": 8850, "end_character": 56}, "in_reply_to": "9fb8cfa7_06ac2beb", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "321556475cf757d352b5f48c003f9e05398a3f87", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_06e42b0c", "line": 8850, "range": {"start_line": 8850, "start_character": 32, "end_line": 8850, "end_character": 56}, "in_reply_to": "9fb8cfa7_06ac2beb", "updated": "2019-06-26 19:21:56.000000000", "message": "im kind of concerend that this will end up leak alot of resouces like local disks, volume attachments and  port on the vswitch .", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_a6b43f37", "line": 8861, "range": {"start_line": 8861, "start_character": 32, "end_line": 8861, "end_character": 49}, "updated": "2019-06-26 19:12:08.000000000", "message": "this shoudl use a uuid", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_51ab55d5", "line": 8861, "range": {"start_line": 8861, "start_character": 32, "end_line": 8861, "end_character": 49}, "in_reply_to": "9fb8cfa7_a6b43f37", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_2bc818a6", "line": 8887, "range": {"start_line": 8887, "start_character": 50, "end_line": 8887, "end_character": 64}, "updated": "2019-06-26 19:12:08.000000000", "message": "we should be using  list_instance_uuids here\n\nthen we dont need all the get by name fucntion you are in the previous pacth right?", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_5194b58b", "line": 8887, "range": {"start_line": 8887, "start_character": 50, "end_line": 8887, "end_character": 64}, "in_reply_to": "9fb8cfa7_2bc818a6", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_8b0a64cf", "line": 8888, "range": {"start_line": 8888, "start_character": 11, "end_line": 8888, "end_character": 60}, "updated": "2019-06-26 19:12:08.000000000", "message": "then we dont need to do this which will iterate over all the domains on the host again.", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_118e3d78", "line": 8888, "range": {"start_line": 8888, "start_character": 11, "end_line": 8888, "end_character": 60}, "in_reply_to": "9fb8cfa7_8b0a64cf", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_2b56d8cf", "line": 8927, "range": {"start_line": 8905, "start_character": 0, "end_line": 8927, "end_character": 66}, "updated": "2019-06-26 19:12:08.000000000", "message": "i think should already be covered by \n\n_cleanup_running_deleted_instances\n\nhttps://github.com/openstack/nova/blob/50e491c1058913b70e257bec30cc483b7d07d6e1/nova/compute/manager.py#L8188-L8275", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "162691e8f35060837888680ca61a5429d31c359b", "unresolved": false, "patch_set": 28, "id": "7faddb67_7140d108", "line": 8927, "range": {"start_line": 8905, "start_character": 0, "end_line": 8927, "end_character": 66}, "in_reply_to": "9fb8cfa7_2b56d8cf", "updated": "2019-07-05 08:57:17.000000000", "message": "Done", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bfc25e9f78dd86f0c2e8783be933e85196ef4c7c", "unresolved": false, "patch_set": 28, "id": "9fb8cfa7_cb97fc44", "line": 8930, "range": {"start_line": 8930, "start_character": 8, "end_line": 8930, "end_character": 41}, "updated": "2019-06-26 19:12:08.000000000", "message": "i think we should be combining this with _cleanup_running_deleted_instances", "commit_id": "51629a56f39ce2f3d2f348d2b610405914dca799"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_ee590c5a", "line": 8206, "range": {"start_line": 8206, "start_character": 59, "end_line": 8206, "end_character": 74}, "updated": "2019-07-09 13:37:18.000000000", "message": "orphan instnaces are instance that are not listed in teh db because they have been deleted and purged form the db while the compute node was offline ...", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_06c6c19b", "line": 8206, "range": {"start_line": 8206, "start_character": 59, "end_line": 8206, "end_character": 74}, "in_reply_to": "7faddb67_ee590c5a", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_0e2a688f", "line": 8207, "range": {"start_line": 8207, "start_character": 31, "end_line": 8207, "end_character": 62}, "updated": "2019-07-09 13:37:18.000000000", "message": "... so im not sure how they can be running on the wrong host machine.\n\nif they have a db recored they are not an orphan instance.", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_e6ba8508", "line": 8207, "range": {"start_line": 8207, "start_character": 31, "end_line": 8207, "end_character": 62}, "in_reply_to": "7faddb67_0e2a688f", "updated": "2019-07-11 07:20:26.000000000", "message": "Done\nWhich migrated to other machines but left the original one not been deleted.", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_49c61a9d", "line": 8220, "range": {"start_line": 8220, "start_character": 24, "end_line": 8220, "end_character": 33}, "updated": "2019-07-09 13:37:18.000000000", "message": "an this is the moved set\nchange this to moved_instnaces", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_693c36bf", "line": 8220, "range": {"start_line": 8220, "start_character": 12, "end_line": 8220, "end_character": 22}, "updated": "2019-07-09 13:37:18.000000000", "message": "you reversed the names\nthis is the set of orphaned instances.\n\nchange this to orphaned_insts", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_269e5d54", "line": 8220, "range": {"start_line": 8220, "start_character": 24, "end_line": 8220, "end_character": 33}, "in_reply_to": "7faddb67_49c61a9d", "updated": "2019-07-11 07:20:26.000000000", "message": "I change them to notracked and moved, both of them should be named orphan. such name might better.", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_e64fe531", "line": 8220, "range": {"start_line": 8220, "start_character": 12, "end_line": 8220, "end_character": 22}, "in_reply_to": "7faddb67_693c36bf", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_e90826da", "line": 8223, "range": {"start_line": 8223, "start_character": 49, "end_line": 8223, "end_character": 58}, "updated": "2019-07-09 13:37:18.000000000", "message": "moved_instnaces\n\ni would also prefer you apped moved_instnaces\nto deleted_insts above before the for loop", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_e6a7e5a6", "line": 8223, "range": {"start_line": 8223, "start_character": 49, "end_line": 8223, "end_character": 58}, "in_reply_to": "7faddb67_e90826da", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_a9ea2ea9", "line": 8230, "range": {"start_line": 8230, "start_character": 21, "end_line": 8230, "end_character": 27}, "updated": "2019-07-09 13:37:18.000000000", "message": "this will have to be updated to allso work for shutdown_unknown\n\ne.g. if action in ('shutdown', 'shutdown_unknown'):", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_86b871c8", "line": 8230, "range": {"start_line": 8230, "start_character": 21, "end_line": 8230, "end_character": 27}, "in_reply_to": "7faddb67_a9ea2ea9", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_69cc3661", "line": 8248, "range": {"start_line": 8248, "start_character": 15, "end_line": 8248, "end_character": 38}, "updated": "2019-07-09 13:37:18.000000000", "message": "same as above but for reap_unknown", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_a6bb2dc2", "line": 8248, "range": {"start_line": 8248, "start_character": 15, "end_line": 8248, "end_character": 38}, "in_reply_to": "7faddb67_69cc3661", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_69e2f603", "line": 8270, "range": {"start_line": 8270, "start_character": 28, "end_line": 8270, "end_character": 38}, "updated": "2019-07-09 13:37:18.000000000", "message": "orphaned_insts", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_06cc8168", "line": 8270, "range": {"start_line": 8270, "start_character": 28, "end_line": 8270, "end_character": 38}, "in_reply_to": "7faddb67_69e2f603", "updated": "2019-07-11 07:20:26.000000000", "message": "Done\n\nchanged to 'notracked'", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_29c15e2f", "line": 8300, "range": {"start_line": 8270, "start_character": 9, "end_line": 8300, "end_character": 57}, "updated": "2019-07-09 13:37:18.000000000", "message": "we are ment to have reap_unknown and shutdown_unknown\n\nconfig options for orpahn instanceses\nthey should not be reaped with with the standard reap config value.\n\nshutdown is proably ok but we should be safe by defualt and not change the behavior.\n\nlog is safe enough that i dont think it needs a log unknown.", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_e6c0452d", "line": 8300, "range": {"start_line": 8270, "start_character": 9, "end_line": 8300, "end_character": 57}, "in_reply_to": "7faddb67_29c15e2f", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_e9eca62a", "line": 8315, "range": {"start_line": 8315, "start_character": 10, "end_line": 8315, "end_character": 74}, "updated": "2019-07-09 13:37:18.000000000", "message": "construct instance objects for instance without a db entry", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_26cc1d60", "line": 8315, "range": {"start_line": 8315, "start_character": 10, "end_line": 8315, "end_character": 74}, "in_reply_to": "7faddb67_e9eca62a", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6619df052e57fa5e1a7b22f6b710287aa200e8f8", "unresolved": false, "patch_set": 31, "id": "7faddb67_099fc25f", "line": 8339, "range": {"start_line": 8328, "start_character": 4, "end_line": 8339, "end_character": 47}, "updated": "2019-07-09 13:37:18.000000000", "message": "you could also include the delete instnaces in this by \nchekcing if the task state is deleted\nand the instance is old enough and return that as a third argument to avoid needeing to loop over all the instance again by calling _running_deleted_instances", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 31, "id": "7faddb67_b99272f5", "line": 8339, "range": {"start_line": 8328, "start_character": 4, "end_line": 8339, "end_character": 47}, "in_reply_to": "7faddb67_099fc25f", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "688dcae563669bad6f8f3b6def33a8031abff3d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "90a60e00494c384cff40bbad2d8d7cd6d083d7ab", "unresolved": false, "patch_set": 32, "id": "7faddb67_88795a94", "line": 8229, "range": {"start_line": 8226, "start_character": 10, "end_line": 8229, "end_character": 54}, "updated": "2019-07-10 11:30:23.000000000", "message": "im not sure this is correct.\n\nthe reap_unknown and shoutdown_unknown should only affect notracked_insts\n\nmoved_insts are known and have db recored that show they have been moved. \n\ngiven the early return if the action is noop\ni think you always want to append moved_inst to deleted\nand the second if should be\n\nif action in ('log', 'reap_unknown', 'shutdown_unknown'):\n deleted_insts += list(notracked_insts)\n\ni also dont think you need to convert notracked_insts to a list\n\ndeleted_insts is a set and notracked_insts is a set so you can just union the sets.\n\ne.g.\n>>> {3,4} | {1,2,5}\nset([1, 2, 3, 4, 5])\n\nso that becomes\n\ndeleted_insts |= moved_insts\nif action in ('log', 'reap_unknown', 'shutdown_unknown'):\n deleted_insts |= notracked_insts\n\nthat will be more efficient in terms of both memory and performance", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 32, "id": "7faddb67_86d05821", "line": 8229, "range": {"start_line": 8226, "start_character": 10, "end_line": 8229, "end_character": 54}, "in_reply_to": "7faddb67_88795a94", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "90a60e00494c384cff40bbad2d8d7cd6d083d7ab", "unresolved": false, "patch_set": 32, "id": "7faddb67_c88c3281", "line": 8286, "range": {"start_line": 8278, "start_character": 11, "end_line": 8286, "end_character": 57}, "updated": "2019-07-10 11:30:23.000000000", "message": "rather then having a separate if for this you can handel this case with the reap action above and tehn in the except\nclause on line 8270 check if the instance is in the notracked_inst set to determine if you use the standard or orphan instance message.", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 32, "id": "7faddb67_a6cb1470", "line": 8286, "range": {"start_line": 8278, "start_character": 11, "end_line": 8286, "end_character": 57}, "in_reply_to": "7faddb67_c88c3281", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "90a60e00494c384cff40bbad2d8d7cd6d083d7ab", "unresolved": false, "patch_set": 32, "id": "7faddb67_a83536dc", "line": 8323, "range": {"start_line": 8321, "start_character": 16, "end_line": 8323, "end_character": 78}, "updated": "2019-07-10 11:30:23.000000000", "message": "do we also need to excplude shelved but not yet shelve offloaded instances here.\n\ni think we should be.", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 32, "id": "7faddb67_66c51c5b", "line": 8323, "range": {"start_line": 8321, "start_character": 16, "end_line": 8323, "end_character": 78}, "in_reply_to": "7faddb67_a83536dc", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "90a60e00494c384cff40bbad2d8d7cd6d083d7ab", "unresolved": false, "patch_set": 32, "id": "7faddb67_ed5fc03e", "line": 8333, "range": {"start_line": 8333, "start_character": 23, "end_line": 8333, "end_character": 74}, "updated": "2019-07-10 11:30:23.000000000", "message": "you need to check that the instanace is deleted here.\n\nlocal_instances is the set of all instance on a host that is in the db so you need to filter this else to only append deleted instances.", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "4ea4c5ef818700c3c6bd2d4c5434019e8059c2a1", "unresolved": false, "patch_set": 32, "id": "7faddb67_46ca606d", "line": 8333, "range": {"start_line": 8333, "start_character": 23, "end_line": 8333, "end_character": 74}, "in_reply_to": "7faddb67_ed5fc03e", "updated": "2019-07-11 07:20:26.000000000", "message": "Done", "commit_id": "41897e5031100662d6c477e20d0f5735960bfd90"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bb56d4bdd085dc2298d35a75a62c2b1f01f190e3", "unresolved": false, "patch_set": 36, "id": "7faddb67_a4dd3071", "line": 8426, "range": {"start_line": 8426, "start_character": 39, "end_line": 8426, "end_character": 58}, "updated": "2019-07-30 23:05:42.000000000", "message": "Looking at this in more detail, I realize this method is libvirt-only, so we would need something similar to _get_instances_on_driver's use of self.driver.list_instances() to be able to get a list of guests for other drivers.\n\nBut, list_instances() returns guest names, so drivers other than libvirt rely on a guest name to destroy an instance. And the 'name' on an objects.Instance is a property that cannot be set.\n\nBased on this, it will *not* be easy to add the ability to clean up orphan instances for any driver other than the libvirt driver. As far as I can tell, it would involve having to expose a new destroy method for drivers that takes only a guest name instead of a objects.Instance. That's not something we want to do and I don't have any alternate ideas right now.\n\nSo far, it seems like we would just have to ignore other drivers and leave the current behavior as-is for them (which, I think you are already doing indirectly with the verify_nova_namespace check).", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bb56d4bdd085dc2298d35a75a62c2b1f01f190e3", "unresolved": false, "patch_set": 36, "id": "7faddb67_4219cf77", "line": 8432, "range": {"start_line": 8431, "start_character": 8, "end_line": 8432, "end_character": 35}, "updated": "2019-07-30 23:05:42.000000000", "message": "This is inaccurate as this change *is* using self.driver.destroy()", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "d67cd75facc2588785e82c6c73030f907af9eb7f", "unresolved": false, "patch_set": 36, "id": "7faddb67_2d5718cd", "line": 8455, "range": {"start_line": 8455, "start_character": 36, "end_line": 8455, "end_character": 64}, "updated": "2019-08-28 08:06:52.000000000", "message": "Why only RESIZE_MIGRATING for resize? Could task_states.resizing_states help you? There are many intermediate migrating states, we should ensure they are all covered here.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bb56d4bdd085dc2298d35a75a62c2b1f01f190e3", "unresolved": false, "patch_set": 36, "id": "7faddb67_a76a1517", "line": 8459, "range": {"start_line": 8435, "start_character": 7, "end_line": 8459, "end_character": 45}, "updated": "2019-07-30 23:05:42.000000000", "message": "Can you give me an overview why we need to care about whether the guest is moving? I thought this would be much simpler, that we would only have two cases: (1) instances with deleted != 0 in the database but still running on the hypervisor and (2) instances that do not exist in the database but still running on the hypervisor. Regardless of their task_state. I don't understand why the task_state is important -- it only matters whether the guests found on the host have database records.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "d67cd75facc2588785e82c6c73030f907af9eb7f", "unresolved": false, "patch_set": 36, "id": "7faddb67_cd13e400", "line": 8459, "range": {"start_line": 8452, "start_character": 8, "end_line": 8459, "end_character": 45}, "updated": "2019-08-28 08:06:52.000000000", "message": "If an instance is in migrating and it is not deleted, it's OK to skip it. But if it is in migrating and it is deleted in db, I think it should be taken into consider, maybe we need a new moving_insts?", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "b902d7a7e5ae923ce4b1971fbf14ad09f64dd5eb", "unresolved": false, "patch_set": 36, "id": "7faddb67_fb07acc8", "line": 8459, "range": {"start_line": 8435, "start_character": 7, "end_line": 8459, "end_character": 45}, "in_reply_to": "7faddb67_a76a1517", "updated": "2019-08-09 06:33:45.000000000", "message": "Hi, Witt\n\nI might know what you are confused here. \n\nFirst of all, this snippet of code is trying to find the instance which running on this host but DB said it running on another host.  Here is nothing related with the state \"DELETED\", it's not intended to find a \"Deleted\" instance.\n\nAnd then, if A host is in 'moving' operation,  there is a time window in when it's  \"db.host\" != \"this host\", and these instance is nothing wrong. So, to exclude these 'moving' instance, we need checking that state.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "6a53ea294b0cc4adcf4b96d773880d4329e6705a", "unresolved": false, "patch_set": 36, "id": "7faddb67_b0518e10", "line": 8459, "range": {"start_line": 8435, "start_character": 7, "end_line": 8459, "end_character": 45}, "in_reply_to": "7faddb67_a76a1517", "updated": "2019-08-06 13:32:32.000000000", "message": "this 'moving' action is ongoing, means such instances gonna deleted after move finished.\n\nAt this moment, there may have a window for the racing condition: moved instance marked deleted but not deleted yet right now, and we query that from db right that moment. \n\nfix me. @Jim Gauld may have more detail on this.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "bcbf52c936208b1d38b6734ab0ac5a9d7554c55c", "unresolved": false, "patch_set": 36, "id": "7faddb67_d57114aa", "line": 8459, "range": {"start_line": 8435, "start_character": 7, "end_line": 8459, "end_character": 45}, "in_reply_to": "7faddb67_fb07acc8", "updated": "2019-08-14 07:17:56.000000000", "message": "We want to make sure we don't destroy instances that are in progress of migrating, since that is still valid. We only want the audit to catch lingering instances that nova doesn't know about anymore.\n\nAs an example, a live-migration will end up with a libvirt domain running on both source and destination until the migration finishes -- we do not want to interfere with this in progress migration.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_cbd9e9f4", "line": 8382, "range": {"start_line": 8380, "start_character": 69, "end_line": 8382, "end_character": 26}, "updated": "2019-09-06 00:08:17.000000000", "message": "I think this is out-of-scope of what I thought was the goal of this patch. That should be proposed as a separate patch, IMHO.\n\nThis is a complicated change and at least for me, mixing the two behaviors made it much more difficult to review. I think it would help to separate it to its own bug and patch.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_75b767da", "line": 8382, "range": {"start_line": 8380, "start_character": 69, "end_line": 8382, "end_character": 26}, "in_reply_to": "5faad753_cbd9e9f4", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_e8adcb31", "line": 8459, "range": {"start_line": 8459, "start_character": 8, "end_line": 8459, "end_character": 24}, "updated": "2019-09-06 00:08:17.000000000", "message": "I think this should be named driver_inst_uuids because it's a list, to be easier to understand.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_28bc4368", "line": 8459, "range": {"start_line": 8459, "start_character": 39, "end_line": 8459, "end_character": 58}, "updated": "2019-09-06 00:08:17.000000000", "message": "Sorry if I wasn't clear in my comment on PS36, but this will raise NotImplementedError for any driver other than the libvirt driver. So we would need to handle that.\n\nI would suggest try-except and set driver_inst_uuids = [] if NotImplementedError is caught.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "9d98dbb304d5b2988829dac365c5afc1e4668da6", "unresolved": false, "patch_set": 37, "id": "5faad753_4bef3987", "line": 8459, "range": {"start_line": 8459, "start_character": 39, "end_line": 8459, "end_character": 58}, "in_reply_to": "5faad753_28bc4368", "updated": "2019-09-06 00:09:22.000000000", "message": "-1 for not handling NotImplementedError here", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_35ffaf68", "line": 8459, "range": {"start_line": 8459, "start_character": 39, "end_line": 8459, "end_character": 58}, "in_reply_to": "5faad753_28bc4368", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_f5f8377d", "line": 8459, "range": {"start_line": 8459, "start_character": 39, "end_line": 8459, "end_character": 58}, "in_reply_to": "5faad753_4bef3987", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_55eb4baf", "line": 8459, "range": {"start_line": 8459, "start_character": 8, "end_line": 8459, "end_character": 24}, "in_reply_to": "5faad753_e8adcb31", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_8b49b161", "line": 8460, "range": {"start_line": 8460, "start_character": 8, "end_line": 8460, "end_character": 23}, "updated": "2019-09-06 00:08:17.000000000", "message": "I think this would be better named db_instances to make it more obvious these are instances that are found in the db.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_35348f4a", "line": 8460, "range": {"start_line": 8460, "start_character": 8, "end_line": 8460, "end_character": 23}, "in_reply_to": "5faad753_8b49b161", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_2b5bdd2e", "line": 8461, "range": {"start_line": 8461, "start_character": 8, "end_line": 8461, "end_character": 24}, "updated": "2019-09-06 00:08:17.000000000", "message": "db_inst_uuids because this is a list", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_f53d972c", "line": 8461, "range": {"start_line": 8461, "start_character": 8, "end_line": 8461, "end_character": 24}, "in_reply_to": "5faad753_2b5bdd2e", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "80a04995b8bdbdc83c469375b53a1012ea27b23d", "unresolved": false, "patch_set": 37, "id": "5faad753_f9aa7fd0", "line": 8466, "updated": "2019-09-06 02:15:29.000000000", "message": "Note: I am worried about the fact that \"local instances\" are only for self.host from _get_instances_on_driver. A bad case would be if it's possible for a libvirt guest to be on the host but not yet have its instance.host set to self.host yet. That case would result in the libvirt guest being destroyed when it should not be.\n\nI checked the resize and revert_resize paths and they look safe because instance.host is set to the new host *before* the libvirt guest is spawned. However, on the live migration path I see that the instance.host is set to the new host *after* the libvirt guest has migrated to the destination. That means there's a window during which there will be a libvirt guest on the destination and no instance record from the database will be returned from _get_instances_on_driver. This will make it look like a non-tracked instance.\n\nI don't know whether the post_live_migration_at_destination routine can be changed to move the instance.host update before self.driver.post_live_migration_at_destination. Would need to check with mriedem or gibi or another live migration expert.\n\nAnd I don't know how else to be completely safe about this without querying *all* instances, not only ones for self.host. But I don't think that's a good idea as nova-compute should not be looking at instances that do not belong to its self.host.\n\nI'm sorry this review is going on for so long but this is a complicated and dangerous change (when config is set to reap_unknown). If a libvirt guest gets erroneously reaped, I think in the resize case it could be recovered via a hard reboot. What about a live migration?", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_5587cbd8", "line": 8466, "in_reply_to": "5faad753_f9aa7fd0", "updated": "2019-09-17 08:07:16.000000000", "message": "Not sure how to handle this. -:) Leave it for the next revision.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_8b1bf171", "line": 8473, "range": {"start_line": 8473, "start_character": 32, "end_line": 8473, "end_character": 49}, "updated": "2019-09-06 00:08:17.000000000", "message": "I'd rather name this 'unknown-project-id'. But do we need it? I didn't see where 'project_id' is used in the self.driver.destroy path.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_35aa4f85", "line": 8473, "range": {"start_line": 8473, "start_character": 32, "end_line": 8473, "end_character": 49}, "in_reply_to": "5faad753_8b1bf171", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_2b267db9", "line": 8475, "updated": "2019-09-06 00:08:17.000000000", "message": "This indent is off by one", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_d59adb6c", "line": 8475, "in_reply_to": "5faad753_2b267db9", "updated": "2019-09-17 08:07:16.000000000", "message": "Done", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cdee5b94fbc20b7c471b63ec446a3bb3d1860d59", "unresolved": false, "patch_set": 37, "id": "5faad753_0b0dc18f", "line": 8501, "range": {"start_line": 8481, "start_character": 8, "end_line": 8501, "end_character": 58}, "updated": "2019-09-06 00:08:17.000000000", "message": "Sorry if I'm being dense but I still don't understand why we need this code. We already identified the set of notracked_insts earlier and we have the list of local_instances (all instances on self.host in the database). Why isn't the code here simply:\n\n for instance in local_instances:\n     if instance.deleted:\n         deleted_insts.add(instance)\n\n return deleted_insts, notracked_insts\n\nI read your replies on PS36 (thank you) about the migrations but to me it sounds like avoiding reap/shutdown of migrating instances is out of the scope of this bug/patch. The current code today for reaping deleted running instances does not take migrating state into account. If the instance is found running and is also deleted=<id> in the database, it is reaped.\n\nWe could consider changing that behavior, but it would be a larger discussion with the community and is a separate issue from reaping \"unknown\" instances. That is, the aim in this patch should be to add the notracked_insts behavior, not change the existing behavior of reaping the deleted instances.\n\nIf I am wrong and have missed something, please let me know.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "1b3b319f6a99419e1a530bac3b7702f8a6e33028", "unresolved": false, "patch_set": 37, "id": "3fa7e38b_b5ab9f73", "line": 8501, "range": {"start_line": 8481, "start_character": 8, "end_line": 8501, "end_character": 58}, "in_reply_to": "5faad753_0b0dc18f", "updated": "2019-09-17 08:07:16.000000000", "message": "Done. \nThen I better leave the moved instances alone in this fix.", "commit_id": "21fc1bf97ece04e3607bec49ec9e199ea983ba1b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cc5b5b8c5c1f43ba88a4e64490ccbdfe1f254d68", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_e28706d7", "line": 8578, "range": {"start_line": 8577, "start_character": 16, "end_line": 8578, "end_character": 58}, "updated": "2019-09-18 10:22:23.000000000", "message": "Why not use \"deleted_insts, notracked_insts = self._running_deleted_instances(context)\" ? 'insts_set' is not used in the code below.", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "123552c29bc62b7bc4cffe4e1373930279eba186", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_c86fe428", "line": 8578, "range": {"start_line": 8577, "start_character": 16, "end_line": 8578, "end_character": 58}, "in_reply_to": "3fa7e38b_e28706d7", "updated": "2019-09-27 08:22:52.000000000", "message": "Line too long.", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cc5b5b8c5c1f43ba88a4e64490ccbdfe1f254d68", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_a2858eaf", "line": 8635, "range": {"start_line": 8635, "start_character": 36, "end_line": 8635, "end_character": 40}, "updated": "2019-09-18 10:22:23.000000000", "message": "Indentation is not standardized.", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "123552c29bc62b7bc4cffe4e1373930279eba186", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_08b17ce1", "line": 8635, "range": {"start_line": 8635, "start_character": 36, "end_line": 8635, "end_character": 40}, "in_reply_to": "3fa7e38b_a2858eaf", "updated": "2019-09-27 08:22:52.000000000", "message": "Done", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cc5b5b8c5c1f43ba88a4e64490ccbdfe1f254d68", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_628f96cc", "line": 8636, "range": {"start_line": 8636, "start_character": 36, "end_line": 8636, "end_character": 40}, "updated": "2019-09-18 10:22:23.000000000", "message": "same", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "123552c29bc62b7bc4cffe4e1373930279eba186", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_28b478d0", "line": 8636, "range": {"start_line": 8636, "start_character": 36, "end_line": 8636, "end_character": 40}, "in_reply_to": "3fa7e38b_628f96cc", "updated": "2019-09-27 08:22:52.000000000", "message": "Done", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cc5b5b8c5c1f43ba88a4e64490ccbdfe1f254d68", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_624c76c7", "line": 8639, "range": {"start_line": 8639, "start_character": 65, "end_line": 8639, "end_character": 66}, "updated": "2019-09-18 10:22:23.000000000", "message": "space", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "123552c29bc62b7bc4cffe4e1373930279eba186", "unresolved": false, "patch_set": 39, "id": "3fa7e38b_88f24c99", "line": 8639, "range": {"start_line": 8639, "start_character": 65, "end_line": 8639, "end_character": 66}, "in_reply_to": "3fa7e38b_624c76c7", "updated": "2019-09-27 08:22:52.000000000", "message": "No space, they are one word I suppose.", "commit_id": "cfb561a0e1ad41a7ed7a41bc408ef2de52ca3c61"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "06c0d799b6e3512ecb910bd16a1489b3595a6a1a", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_7fcb1d1c", "side": "PARENT", "line": 8815, "updated": "2019-11-20 16:43:21.000000000", "message": "Random whitespace damage.", "commit_id": "845bf47546348b9b88d1831b5bba2ab924beae93"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "06c0d799b6e3512ecb910bd16a1489b3595a6a1a", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_3fd925f3", "side": "PARENT", "line": 8821, "updated": "2019-11-20 16:43:21.000000000", "message": "here too.", "commit_id": "845bf47546348b9b88d1831b5bba2ab924beae93"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "b269f5945f7c48d0ad0cb004e283c2927229d582", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_3f2e428c", "line": 644, "updated": "2019-11-15 05:31:41.000000000", "message": "Looks like, all the drivers implement self.driver.list_instance_uuids(), so we nerver reach at here. And the strange thing is the line 632 doens't filter by host.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2b7ffd6fd61026d8830a1a6928ac3154f6f0d237", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_a942ceaa", "line": 644, "in_reply_to": "3fa7e38b_170ea98b", "updated": "2019-11-20 02:43:11.000000000", "message": "oops, sorry, my stupid, I only check the response of my ide tell me, hyperv, xen, libvirt, vmware, then I think they are all.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5ad5d9d550d2b0bbb82e0c49daa6fe65914ba828", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_a14c373f", "line": 644, "in_reply_to": "3fa7e38b_3f2e428c", "updated": "2019-11-19 00:22:53.000000000", "message": "Most of the drivers do, but I just checked again and I'm seeing that powervm and zvm drivers do not implement list_instance_uuids:\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/powervm/driver.py\nhttps://github.com/openstack/nova/blob/master/nova/virt/zvm/driver.py", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "80dc363b633c64ef7de1a3ff9c7753aecd1bead9", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_170ea98b", "line": 644, "in_reply_to": "3fa7e38b_97fa99b7", "updated": "2019-11-19 06:09:09.000000000", "message": "They are not out of tree drivers -- the links I pasted are from our tree.\n\nI think we should filter by host because a compute host should not be accessing instances that are not associated with it. I think that is why it is like that today.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "8f99222c5c0823cb3433ebff148cc8d5539c06b3", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_97fa99b7", "line": 644, "in_reply_to": "3fa7e38b_a14c373f", "updated": "2019-11-19 05:02:18.000000000", "message": "Thanks, I didn't check the out of tree driver. I guess we should make them to have consistent behaviour. I guess we shouldn't filter by host, see my below comment reply.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "06c0d799b6e3512ecb910bd16a1489b3595a6a1a", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_ff494db7", "line": 8809, "updated": "2019-11-20 16:43:21.000000000", "message": "This is not proper english and makes it hard to determine what the goal is. I think you mean:\n\n \"This task also cleans up instances which are no longer in the database\"", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "06c0d799b6e3512ecb910bd16a1489b3595a6a1a", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_dff33172", "line": 8903, "updated": "2019-11-20 16:43:21.000000000", "message": "This is actually not a list of *instances* that are running but not tracked, but instead it's a list of *vms* that are running but which we don't know about, right?", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "051658ed72e5fc6da3269bd8a5b7c9ff9e47efff", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_c4717a79", "line": 8904, "updated": "2019-11-14 00:44:35.000000000", "message": "Based on my comments on a previous PS, I think we need one more step in here, to remove migrating instances from notracked_insts_uuids. We want to avoid destroying a guest on the hypervisor that is not an orphan and is in the middle of migrating to/from this host.\n\nThere is already a method for retrieving a list of migrations that involve a specified host and node, as mentioned in the recent ML thread [1]:\n\nhttps://github.com/openstack/nova/blob/1c7a3d59080e5de50615bd2408b10d372ec30861/nova/compute/resource_tracker.py#L935\n\nSo I think what we could do here is get the list of migrations for the host/node and then remove those instance_uuid from notracked_insts_uuids. That way we will not touch any guest that is in the middle of a migration.\n\n[1] http://lists.openstack.org/pipermail/openstack-discuss/2019-November/010800.html", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5ad5d9d550d2b0bbb82e0c49daa6fe65914ba828", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_a1b75721", "line": 8904, "in_reply_to": "3fa7e38b_4c27dec8", "updated": "2019-11-19 00:22:53.000000000", "message": "Note that self._get_instances_on_driver filters the query on host=self.host to get only records for this compute host for the powervm and zvm drivers (which is appropriate, a compute host should not be querying instances that are not related to it).\n\nBecause the query filters on only host=self.host, it is possible for instances in the middle of migration to be excluded from the query when they are not actually orphans. See my comments on PS37 for more details.\n\nBecause the set of \"virt guests on this host\" - \"db instance records with host=self.host\" might include instances that a mid-migration, I think we need to exclude them and I think excluding all \"in-progress\" for the host is simpler. Once the migrations are completed, the cleanup will take care of it at the next interval.\n\nIn general, and unrelated to the the powervm and zvm driver behavior (gets instances with host=self.host), I think it probably would not be the best idea to destroy virt guests for non-deleted instances that are in the middle of migration anyway because nova-compute migration methods will expect to handle create/destroy of virt guests during migration. If this cleanup routine destroys guests out from underneath the migration methods, errors or other failure may result.\n\nIn this patch, I think we should really stick to only destroying virt guests that are either (1) deleted or (2) tracked anywhere in the database. If a non-deleted instance still has migration records, it is still being tracked in the database as far as I understand.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2b7ffd6fd61026d8830a1a6928ac3154f6f0d237", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_691296b6", "line": 8904, "in_reply_to": "3fa7e38b_577d01e5", "updated": "2019-11-20 02:43:11.000000000", "message": "I think we have same goal, but different on the implement.\n\nIf we didn't filter by host, then we needn't another db call to check the migration which dest is our host.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "8800041ff326026a7ad524847855ee5df369ebe6", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_b429b7f2", "line": 8904, "in_reply_to": "3fa7e38b_691296b6", "updated": "2019-11-20 18:27:54.000000000", "message": "I understand. I just think that removing filters by host for a compute node querying instances is opening the door for additional problems down the road. I think it's an issue of being more error-prone and would provide a path for introducing bugs where a compute node mutates or reads data from instances that do not belong to it.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "89d8e486f486a161c639251eab99ff31ac7b806b", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_618e3f2f", "line": 8904, "in_reply_to": "3fa7e38b_a1b75721", "updated": "2019-11-19 00:25:55.000000000", "message": "> In this patch, I think we should really stick to only destroying\n > virt guests that are either (1) deleted or (2) tracked anywhere in\n > the database. If a non-deleted instance still has migration\n > records, it is still being tracked in the database as far as I\n > understand.\n\nThis ^ should say \"(2) NOT tracked\". Apologies.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "8f99222c5c0823cb3433ebff148cc8d5539c06b3", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_b772357b", "line": 8904, "in_reply_to": "3fa7e38b_a1b75721", "updated": "2019-11-19 05:02:18.000000000", "message": "> Note that self._get_instances_on_driver filters the query on\n > host=self.host to get only records for this compute host for the\n > powervm and zvm drivers (which is appropriate, a compute host\n > should not be querying instances that are not related to it).\n > \n > Because the query filters on only host=self.host, it is possible\n > for instances in the middle of migration to be excluded from the\n > query when they are not actually orphans. See my comments on PS37\n > for more details.\n > \n > Because the set of \"virt guests on this host\" - \"db instance\n > records with host=self.host\" might include instances that a\n > mid-migration, I think we need to exclude them and I think\n > excluding all \"in-progress\" for the host is simpler. Once the\n > migrations are completed, the cleanup will take care of it at the\n > next interval.\n > \n > In general, and unrelated to the the powervm and zvm driver\n > behavior (gets instances with host=self.host), I think it probably\n > would not be the best idea to destroy virt guests for non-deleted\n > instances that are in the middle of migration anyway because\n > nova-compute migration methods will expect to handle create/destroy\n > of virt guests during migration. If this cleanup routine destroys\n > guests out from underneath the migration methods, errors or other\n > failure may result.\n\nSo (1) we shouldn't filter by the host at line 644. Ensure the virt guests is real non-tracked instance. (2) Then filter the host == self.host at line 9824 to ensure the deleted_instances only include the instances are on this host.\n\n\n > \n > In this patch, I think we should really stick to only destroying\n > virt guests that are either (1) deleted or (2) tracked anywhere in\n > the database. If a non-deleted instance still has migration\n > records, it is still being tracked in the database as far as I\n > understand.\n++, or more clear to say for (1) deleted and host == self.host, whatever it is deleted in the mid of migration. The target side is cleanup by _incompelete_migration_cleanup.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "80dc363b633c64ef7de1a3ff9c7753aecd1bead9", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_577d01e5", "line": 8904, "in_reply_to": "3fa7e38b_b772357b", "updated": "2019-11-19 06:09:09.000000000", "message": "I disagree, I think the filter by host at L644 is appropriate for the compute host to inspect only instances that are associated with it. It does not seem like a good idea to have a compute host access instance records owned by other compute hosts in a cell.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "d8abe8676545431a71ff823b3334a0fb6177c7c1", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_4c27dec8", "line": 8904, "in_reply_to": "3fa7e38b_c4717a79", "updated": "2019-11-15 05:05:30.000000000", "message": "As my understand, the notracked_insts_uuids is a list of instance without any DB record. If the instance is in the middle of the migration, it must have an instance record in the db, right? So it sounds right at here.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "06c0d799b6e3512ecb910bd16a1489b3595a6a1a", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_df98111c", "line": 8905, "updated": "2019-11-20 16:43:21.000000000", "message": "This seems like a really terrible idea to me. This is going to treat any vm running in the hypervisor as if it was an instance at some point right?\n\nIf I create a vm in my hypervisor right now, underneath nova, nova will ignore it because it doesn't know anything about it. That may be a bad idea, but it's possible. Even though the reaping of these things is opt-in, you're adding logic to nova to consider those things *are* or *were* nova instances, which seems like a very dangerous direction to go in.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "3229a85a986fdef1a9dfa0a096ff279f1012e021", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_c766072a", "line": 8905, "in_reply_to": "3fa7e38b_9434bb4a", "updated": "2019-11-20 19:38:25.000000000", "message": "I can appreciate the unifying nature of faking some instance records to smooth things out for the higher layers. I just think it's a dangerous thing to do, especially in the future when someone messes with the periodic task without grasping the fact that this inner method is fibbing things. This instance can't load anything from the database, doesn't have BDMs, etc, so special handling is required anyway, as this patch already does. Since testing of periodics is pretty sketchy anyway, hate to add more obscurity.\n\nAnyway, it's all moot if the general idea of this patch is not going to pan  out altogether :)", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "7e7c9d53b954c0de6c9b6102efa52c04972892cf", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_ea5d0a16", "line": 8905, "in_reply_to": "3fa7e38b_c766072a", "updated": "2019-11-20 20:00:03.000000000", "message": "Yep, understood. I didn't really like my idea either, it was like choosing between two bad things.\n\nThat is why I struggled to support this patch, because at nearly every turn it needs to do something risky or convoluted to make it work. And I don't think it is overall worth the effort given the ability to avoid the situation with 'nova-manage db archive_deleted_rows --before <date>'.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "8800041ff326026a7ad524847855ee5df369ebe6", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_9434bb4a", "line": 8905, "in_reply_to": "3fa7e38b_df98111c", "updated": "2019-11-20 18:27:54.000000000", "message": "Full disclosure, this was my idea, not the author's.\n\nOriginally, the patch underneath this one was adding a new destroy method to the libvirt driver to be able to destroy a virt domain by name instead of by instance object. The new driver destroy method was complicated, so I suggested creating shell instance objects to be able to re-use the existing driver destroy method instead. And maybe that was my mistake to think that was better.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "051658ed72e5fc6da3269bd8a5b7c9ff9e47efff", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_04b472f1", "line": 8921, "range": {"start_line": 8919, "start_character": 46, "end_line": 8921, "end_character": 67}, "updated": "2019-11-14 00:44:35.000000000", "message": "This part of the comment is outdated and should be removed.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "b269f5945f7c48d0ad0cb004e283c2927229d582", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_3f43a241", "line": 8928, "range": {"start_line": 8928, "start_character": 15, "end_line": 8928, "end_character": 28}, "updated": "2019-11-15 05:31:41.000000000", "message": "This includes the mid-migration instance but the instance db already deleted, right?\n\nThe '_cleanup_incomplete_migrations' only include the error migration, but the instance db record isn't deleted yet.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5ad5d9d550d2b0bbb82e0c49daa6fe65914ba828", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_e16f8f8f", "line": 8928, "range": {"start_line": 8928, "start_character": 15, "end_line": 8928, "end_character": 28}, "in_reply_to": "3fa7e38b_3f43a241", "updated": "2019-11-19 00:22:53.000000000", "message": "Yes, this will be any instance marked as 'deleted' in the database. And the _cleanup_incomplete_migrations cleans up only for deleted instances. See my comment on L9413.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5ad5d9d550d2b0bbb82e0c49daa6fe65914ba828", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_412d4344", "line": 9394, "updated": "2019-11-19 00:22:53.000000000", "message": "_cleanup_incomplete_migrations", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5ad5d9d550d2b0bbb82e0c49daa6fe65914ba828", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_210fe7e0", "line": 9413, "range": {"start_line": 9413, "start_character": 24, "end_line": 9413, "end_character": 39}, "updated": "2019-11-19 00:22:53.000000000", "message": "Here we will only get instances that are deleted in _cleanup_incomplete_migrations.", "commit_id": "2b1cec8af4685dffdc7b6b2d80a4b04783dd88a2"}], "nova/conf/compute.py": [{"author": {"_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, "change_message_id": "1edee150363a23927a14e80eaba998e79632795e", "unresolved": false, "patch_set": 6, "id": "5fc1f717_9b09ee96", "line": 1220, "range": {"start_line": 1220, "start_character": 6, "end_line": 1220, "end_character": 22}, "updated": "2019-03-19 14:58:41.000000000", "message": "My preference would be default=\"reap\".\n\nAnyone who would be managing VMs on the same host, outside\nof nova's knowledge is not really expected, and resources not properly tracked, etc.   Running out of memory is much easier to do when one uses hugepages, so we rely on exact accounting. The reason I discovered orphans in the first place was because I was hitting OOM Killer due to untracked memory.  This option gives someone the ability to change from the default.", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "e698a128c0a46e92e0a7ff5a8977e4a2ca603ef5", "unresolved": false, "patch_set": 6, "id": "5fc1f717_38cf9258", "line": 1220, "range": {"start_line": 1220, "start_character": 6, "end_line": 1220, "end_character": 22}, "in_reply_to": "5fc1f717_9b09ee96", "updated": "2019-03-20 02:23:33.000000000", "message": "Done", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "40a3e944135e09428f521170fed5ddc81d55bd62", "unresolved": false, "patch_set": 6, "id": "5fc1f717_8750ba0c", "line": 1235, "range": {"start_line": 1219, "start_character": 0, "end_line": 1235, "end_character": 5}, "updated": "2019-03-19 08:52:26.000000000", "message": "looks good :)", "commit_id": "ecbe928dd36ca125ef7832848e9f8669ea394926"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_e985075b", "line": 1219, "range": {"start_line": 1219, "start_character": 16, "end_line": 1219, "end_character": 46}, "updated": "2019-03-27 14:24:53.000000000", "message": "You should also mention this as a related option from the help for instance_delete_interval.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3fcd7365", "line": 1219, "range": {"start_line": 1219, "start_character": 16, "end_line": 1219, "end_character": 46}, "in_reply_to": "5fc1f717_e985075b", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "09aa2129c38ce3aa0814916226bb75c28521bcc5", "unresolved": false, "patch_set": 10, "id": "5fc1f717_dd1b257e", "line": 1220, "updated": "2019-03-27 17:05:03.000000000", "message": "Note that defaulting this to \"reap\" is a big shift from the existing behavior of nova not touching guests that might have been created out-of-band for testing or operator monitoring systems, etc. In the worst case, an operator could upgrade nova and then have their guests (doing work outside nova) destroyed suddenly.\n\nAt the very least, we should have a big fat release note on this change, in the upgrade section.\n\nIf we wanted to be extra careful, we would default to \"log\" but maybe that's too conservative, considering I think most operators probably do not run virtual machines outside of nova on compute hosts.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_ffc28b33", "line": 1220, "in_reply_to": "5fc1f717_dd1b257e", "updated": "2019-03-28 08:15:43.000000000", "message": "'log' might be less impact.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a97b7f78", "line": 1222, "range": {"start_line": 1222, "start_character": 42, "end_line": 1222, "end_character": 48}, "updated": "2019-03-27 14:24:53.000000000", "message": "This doesn't need to be capitalized - here and elsewhere.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_1fbe77ad", "line": 1222, "range": {"start_line": 1222, "start_character": 42, "end_line": 1222, "end_character": 48}, "in_reply_to": "5fc1f717_a97b7f78", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09ee5321", "line": 1229, "range": {"start_line": 1229, "start_character": 0, "end_line": 1229, "end_character": 8}, "updated": "2019-03-27 14:24:53.000000000", "message": "enrolled is a bit confusing, I'd say \"tracked\".\n\nNote that this could affect any guests created outside of nova, but maybe that's obvious.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_bfde430e", "line": 1229, "range": {"start_line": 1229, "start_character": 0, "end_line": 1229, "end_character": 8}, "in_reply_to": "5fc1f717_09ee5321", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_c9f36b08", "line": 1231, "updated": "2019-03-27 14:24:53.000000000", "message": "Shouldn't this also mention which virt drivers support it?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_bf072382", "line": 1231, "in_reply_to": "5fc1f717_c9f36b08", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b1932ba95945cf0e63e1343c3b8d68ea9825b51", "unresolved": false, "patch_set": 16, "id": "5fc1f717_f50a271e", "line": 1250, "range": {"start_line": 1249, "start_character": 64, "end_line": 1250, "end_character": 12}, "updated": "2019-04-04 13:12:22.000000000", "message": "This option", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ac5ab040f70f78a077d3ec27b5885684266d45ed", "unresolved": false, "patch_set": 16, "id": "5fc1f717_542bcfe9", "line": 1250, "range": {"start_line": 1249, "start_character": 64, "end_line": 1250, "end_character": 12}, "in_reply_to": "5fc1f717_f50a271e", "updated": "2019-04-08 07:33:10.000000000", "message": "Done", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b1932ba95945cf0e63e1343c3b8d68ea9825b51", "unresolved": false, "patch_set": 16, "id": "5fc1f717_b50c9f39", "line": 1253, "updated": "2019-04-04 13:12:22.000000000", "message": "Need a blank line before the bullet list for formatting.", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ac5ab040f70f78a077d3ec27b5885684266d45ed", "unresolved": false, "patch_set": 16, "id": "5fc1f717_1431c759", "line": 1253, "in_reply_to": "5fc1f717_b50c9f39", "updated": "2019-04-08 07:33:10.000000000", "message": "Done", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_0bcb0b1e", "line": 1239, "updated": "2019-04-26 13:52:35.000000000", "message": "I think this default will result in periodic logging with the same message. So I think it will spam the logs.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_aa0c0ba5", "line": 1239, "in_reply_to": "ffb9cba7_0bcb0b1e", "updated": "2019-04-30 05:58:08.000000000", "message": "Done", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "9bd32014662ad19398bedcba16221562ae909056", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_b61b5f19", "line": 1244, "range": {"start_line": 1241, "start_character": 12, "end_line": 1244, "end_character": 40}, "updated": "2019-04-25 08:13:38.000000000", "message": "++", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "0dbfecd1d801b237c46690bd7a4dc8beebecb99f", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_eaed23b7", "line": 1244, "range": {"start_line": 1241, "start_character": 12, "end_line": 1244, "end_character": 40}, "in_reply_to": "ffb9cba7_b61b5f19", "updated": "2019-04-30 05:58:08.000000000", "message": "let us use noop.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bb56d4bdd085dc2298d35a75a62c2b1f01f190e3", "unresolved": false, "patch_set": 36, "id": "7faddb67_e43d688e", "line": 1196, "updated": "2019-07-30 23:05:42.000000000", "message": "I'm not sure whether we really want/need this option, but I understand why you added it.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "6a53ea294b0cc4adcf4b96d773880d4329e6705a", "unresolved": false, "patch_set": 36, "id": "7faddb67_b07aee84", "line": 1196, "in_reply_to": "7faddb67_e43d688e", "updated": "2019-08-06 13:32:32.000000000", "message": "This much safe than add an extra action to the current shutdown or reap. And we want to shutdown instead of reaping them also.", "commit_id": "1fb47ad0094643732fa876c744d40f8e05667308"}], "nova/tests/unit/compute/test_compute.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_b1b6f0f9", "line": 8559, "range": {"start_line": 8559, "start_character": 31, "end_line": 8559, "end_character": 59}, "updated": "2019-04-26 13:52:35.000000000", "message": "most of the nova test code uses mock_<variable name> instead of <variable name>_mock format", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_f1d30837", "line": 8576, "range": {"start_line": 8576, "start_character": 28, "end_line": 8576, "end_character": 34}, "updated": "2019-04-26 13:52:35.000000000", "message": "you used instance everywhere else, please keep the terminology consistent.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_91908c50", "line": 8595, "updated": "2019-04-26 13:52:35.000000000", "message": "It is pretty confusing that this test destroys the same instance twice. Can we have to separate instance for the test, one that is an orphan and one that is suspected.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "325316a142c86c5ad7cfdec08b725e5680e6001c", "unresolved": false, "patch_set": 18, "id": "ffb9cba7_31ad2088", "line": 8712, "updated": "2019-04-26 13:52:35.000000000", "message": "This feels like 3 separate test cases to me.", "commit_id": "3f7d55cf6218939826cf8c86f3e451cdb55ea31a"}], "nova/tests/unit/virt/libvirt/test_driver.py": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "7a8881055d4aee534a3d0d672ea3b7a6f12b38b2", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_fcc64768", "line": 52, "range": {"start_line": 52, "start_character": 0, "end_line": 52, "end_character": 52}, "updated": "2019-01-30 07:04:52.000000000", "message": "Here", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_95811afe", "line": 52, "range": {"start_line": 52, "start_character": 0, "end_line": 52, "end_character": 52}, "in_reply_to": "9fdfeff1_fcc64768", "updated": "2019-03-14 08:35:10.000000000", "message": "Done", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "7a8881055d4aee534a3d0d672ea3b7a6f12b38b2", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_1cc46b5e", "line": 20905, "range": {"start_line": 20905, "start_character": 15, "end_line": 20905, "end_character": 40}, "updated": "2019-01-30 07:04:52.000000000", "message": "Use uuids (oslo_utils.fixture.uuidsentinel)", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_b5869612", "line": 20905, "range": {"start_line": 20905, "start_character": 15, "end_line": 20905, "end_character": 40}, "in_reply_to": "9fdfeff1_1cc46b5e", "updated": "2019-03-14 08:35:10.000000000", "message": "Done", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "7a8881055d4aee534a3d0d672ea3b7a6f12b38b2", "unresolved": false, "patch_set": 2, "id": "9fdfeff1_5c20b348", "line": 20916, "range": {"start_line": 20916, "start_character": 17, "end_line": 20916, "end_character": 71}, "updated": "2019-01-30 07:04:52.000000000", "message": "assertNotIsInstance(e, exception.InstanceNotFound)", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "7b75f3635b30108d3ea160960fcc57cd4289b229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_35c4e65e", "line": 20916, "range": {"start_line": 20916, "start_character": 17, "end_line": 20916, "end_character": 71}, "in_reply_to": "9fdfeff1_5c20b348", "updated": "2019-03-14 08:35:10.000000000", "message": "Done", "commit_id": "0df759655930e8c9df975c16217b22f4ca3df9f1"}], "nova/virt/driver.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29aa2f70", "line": 1847, "range": {"start_line": 1847, "start_character": 31, "end_line": 1847, "end_character": 37}, "updated": "2019-03-27 14:24:53.000000000", "message": "nit: this is a libvirt specific term that wouldn't apply to other hypervisors, just say instance or guest.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3ffb3379", "line": 1847, "range": {"start_line": 1847, "start_character": 31, "end_line": 1847, "end_character": 37}, "in_reply_to": "5fc1f717_29aa2f70", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_e9b987cb", "line": 1850, "range": {"start_line": 1850, "start_character": 25, "end_line": 1850, "end_character": 48}, "updated": "2019-03-27 14:24:53.000000000", "message": "Just say \"the ``destroy`` method.\"", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_fff04b93", "line": 1850, "range": {"start_line": 1850, "start_character": 25, "end_line": 1850, "end_character": 48}, "in_reply_to": "5fc1f717_e9b987cb", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_89c80355", "line": 1857, "range": {"start_line": 1857, "start_character": 23, "end_line": 1857, "end_character": 29}, "updated": "2019-03-27 14:24:53.000000000", "message": "same", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_bf2c0302", "line": 1857, "range": {"start_line": 1857, "start_character": 23, "end_line": 1857, "end_character": 29}, "in_reply_to": "5fc1f717_89c80355", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29c30f3a", "line": 1859, "range": {"start_line": 1859, "start_character": 20, "end_line": 1859, "end_character": 26}, "updated": "2019-03-27 14:24:53.000000000", "message": "same", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7f321b60", "line": 1859, "range": {"start_line": 1859, "start_character": 20, "end_line": 1859, "end_character": 26}, "in_reply_to": "5fc1f717_29c30f3a", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a9e4dfe0", "line": 1860, "range": {"start_line": 1860, "start_character": 24, "end_line": 1860, "end_character": 31}, "updated": "2019-03-27 14:24:53.000000000", "message": "We aren't destroying the guest with this method.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9f358747", "line": 1860, "range": {"start_line": 1860, "start_character": 24, "end_line": 1860, "end_character": 31}, "in_reply_to": "5fc1f717_a9e4dfe0", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29d8ef1b", "line": 1861, "range": {"start_line": 1861, "start_character": 21, "end_line": 1861, "end_character": 27}, "updated": "2019-03-27 14:24:53.000000000", "message": "DB; the instance...", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3f4013a5", "line": 1861, "range": {"start_line": 1861, "start_character": 21, "end_line": 1861, "end_character": 27}, "in_reply_to": "5fc1f717_29d8ef1b", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}], "nova/virt/fake.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_291f8fb7", "line": 671, "range": {"start_line": 667, "start_character": 4, "end_line": 671, "end_character": 12}, "updated": "2019-03-27 14:24:53.000000000", "message": "Couldn't we implement these by looping over self.instances to find any by name and then take the appropriate action (change the power state or destroy the guest, i.e. remove it from self.instances).", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_62704073", "line": 671, "range": {"start_line": 667, "start_character": 4, "end_line": 671, "end_character": 12}, "in_reply_to": "5fc1f717_291f8fb7", "updated": "2019-03-28 08:15:43.000000000", "message": "I gonna address this later. thanks.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_e97ae7ee", "line": 9524, "range": {"start_line": 9524, "start_character": 24, "end_line": 9524, "end_character": 31}, "updated": "2019-03-27 14:24:53.000000000", "message": "destroy", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9f5ca77d", "line": 9524, "range": {"start_line": 9524, "start_character": 24, "end_line": 9524, "end_character": 31}, "in_reply_to": "5fc1f717_e97ae7ee", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_a9805fc0", "line": 9525, "range": {"start_line": 9525, "start_character": 21, "end_line": 9525, "end_character": 26}, "updated": "2019-03-27 14:24:53.000000000", "message": "; the", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3f57b35a", "line": 9525, "range": {"start_line": 9525, "start_character": 21, "end_line": 9525, "end_character": 26}, "in_reply_to": "5fc1f717_a9805fc0", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_89000336", "line": 9536, "updated": "2019-03-27 14:24:53.000000000", "message": "Do we want to return from this except block? What if we hit something here and then call undefineFlags below?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_5f5cff49", "line": 9536, "in_reply_to": "5fc1f717_89000336", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_49dd3bdb", "line": 9541, "updated": "2019-03-27 14:24:53.000000000", "message": "alignment", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_ff4ccbc8", "line": 9541, "in_reply_to": "5fc1f717_49dd3bdb", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09f5f356", "line": 9549, "range": {"start_line": 9548, "start_character": 33, "end_line": 9549, "end_character": 58}, "updated": "2019-03-27 14:24:53.000000000", "message": "alignment", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7fce9b2d", "line": 9549, "range": {"start_line": 9548, "start_character": 33, "end_line": 9549, "end_character": 58}, "in_reply_to": "5fc1f717_09f5f356", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_099ad312", "line": 9552, "updated": "2019-03-27 14:24:53.000000000", "message": "What is this for? Please document the code.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_c24ed46d", "line": 9552, "in_reply_to": "5fc1f717_099ad312", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_698a77bf", "line": 9561, "range": {"start_line": 9560, "start_character": 34, "end_line": 9561, "end_character": 55}, "updated": "2019-03-27 14:24:53.000000000", "message": "alignment", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_7fe77bad", "line": 9561, "range": {"start_line": 9560, "start_character": 34, "end_line": 9561, "end_character": 55}, "in_reply_to": "5fc1f717_698a77bf", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_2990efec", "line": 9571, "range": {"start_line": 9570, "start_character": 8, "end_line": 9571, "end_character": 71}, "updated": "2019-03-27 14:24:53.000000000", "message": "Same comments in the driver parent class docstring.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_9f9fc700", "line": 9571, "range": {"start_line": 9570, "start_character": 8, "end_line": 9571, "end_character": 71}, "in_reply_to": "5fc1f717_2990efec", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_29a9cf22", "line": 9574, "updated": "2019-03-27 14:24:53.000000000", "message": "This try/except block is nearly identical to the one above except for the destroy/shutdown call and the log message if there is an error, could we move this to a private method to be used by both methods to avoid all the redundant code?", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_42c74497", "line": 9574, "in_reply_to": "5fc1f717_29a9cf22", "updated": "2019-03-28 08:15:43.000000000", "message": "this small code snippet is quite close coupled together...\nHow to do that for good ..\nI would like to if I know how to, postpone your this comment a little bit.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}], "releasenotes/notes/bug-1820802-nova-orphan-instances-0169318d20b76156.yaml": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_690fd736", "line": 5, "range": {"start_line": 5, "start_character": 56, "end_line": 5, "end_character": 64}, "updated": "2019-03-27 14:24:53.000000000", "message": "\"This fix\" is fine for a commit message but not a release note which is ready as a group without context of what 'this fix' is. Just say something like, \"A configuration action is now available...\".", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_09365304", "line": 5, "range": {"start_line": 4, "start_character": 27, "end_line": 5, "end_character": 55}, "updated": "2019-03-27 14:24:53.000000000", "message": "Re-word this as something like, \"guests may be orphaned on the hypervisor on one host while the nova database says the instance is actually running on another host.\"", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_5f695f22", "line": 5, "range": {"start_line": 4, "start_character": 27, "end_line": 5, "end_character": 55}, "in_reply_to": "5fc1f717_09365304", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_3f6ed32e", "line": 5, "range": {"start_line": 5, "start_character": 56, "end_line": 5, "end_character": 64}, "in_reply_to": "5fc1f717_690fd736", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_46276ac8", "line": 8, "updated": "2019-03-27 14:24:53.000000000", "message": "Need to fix these whitespaces (tabs).", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_1f4197a6", "line": 8, "in_reply_to": "5fc1f717_46276ac8", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e6fa689c1e096879e927ef405b483a77fb1e9ebf", "unresolved": false, "patch_set": 10, "id": "5fc1f717_2c1a3d6e", "line": 10, "range": {"start_line": 10, "start_character": 7, "end_line": 10, "end_character": 11}, "updated": "2019-03-27 14:24:53.000000000", "message": "This is not a valid choice, it's 'shutdown'.", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "10f8d653f6bc846ee84b4fb770a121615ee3cb17", "unresolved": false, "patch_set": 10, "id": "5fc1f717_ff45abb4", "line": 10, "range": {"start_line": 10, "start_character": 7, "end_line": 10, "end_character": 11}, "in_reply_to": "5fc1f717_2c1a3d6e", "updated": "2019-03-28 08:15:43.000000000", "message": "Done", "commit_id": "b5304e30c612fe011975be364fc10a3d5bdc2a87"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b1932ba95945cf0e63e1343c3b8d68ea9825b51", "unresolved": false, "patch_set": 16, "id": "5fc1f717_352aef7d", "line": 6, "range": {"start_line": 6, "start_character": 20, "end_line": 6, "end_character": 31}, "updated": "2019-04-04 13:12:22.000000000", "message": "is not tracking", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ac5ab040f70f78a077d3ec27b5885684266d45ed", "unresolved": false, "patch_set": 16, "id": "5fc1f717_9444d7b9", "line": 6, "range": {"start_line": 6, "start_character": 20, "end_line": 6, "end_character": 31}, "in_reply_to": "5fc1f717_352aef7d", "updated": "2019-04-08 07:33:10.000000000", "message": "Done", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b1932ba95945cf0e63e1343c3b8d68ea9825b51", "unresolved": false, "patch_set": 16, "id": "5fc1f717_f52307a6", "line": 7, "range": {"start_line": 7, "start_character": 34, "end_line": 7, "end_character": 43}, "updated": "2019-04-04 13:12:22.000000000", "message": "available", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b1932ba95945cf0e63e1343c3b8d68ea9825b51", "unresolved": false, "patch_set": 16, "id": "5fc1f717_d5204b9e", "line": 7, "range": {"start_line": 7, "start_character": 20, "end_line": 7, "end_character": 26}, "updated": "2019-04-04 13:12:22.000000000", "message": "either \"configuration option\" or \"configurable action\"", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}, {"author": {"_account_id": 7543, "name": "Yongli He", "email": "yongli.he@intel.com", "username": "yongli.he"}, "change_message_id": "ac5ab040f70f78a077d3ec27b5885684266d45ed", "unresolved": false, "patch_set": 16, "id": "5fc1f717_140a2778", "line": 7, "range": {"start_line": 7, "start_character": 34, "end_line": 7, "end_character": 43}, "in_reply_to": "5fc1f717_f52307a6", "updated": "2019-04-08 07:33:10.000000000", "message": "Done", "commit_id": "6c0f668e4c36d69d89084521d10bcda47b34cd10"}]}}, "openstack%2Fnova~master~I28e3fb3ef20508d83f30ae6af8bf94967486f6c8": {"owner_id": 19102, "owner_name": "wei-fan@rc.jp.nec.com", "owner_email": "wei-fan@rc.jp.nec.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20040, "name": "Microsoft Hyper-V Compute CI", "email": "microsoft_nova_ci@microsoft.com", "username": "microsoft_nova_ci"}, {"value": -1, "date": "2019-11-07 16:04:50.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-03 10:12:10.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-11-06 23:04:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15286, "name": "XenProject CI", "email": "openstack-ci@xenproject.org", "username": "XenProject-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3059f65a", "line": 13, "updated": "2019-11-06 23:04:33.000000000", "message": "Is there no foreign or unique key that prevents this? I guess not:\n\nhttps://github.com/openstack/nova/blob/e79a0effc686f0d1bd2edca24ee50c10c5d6dc0a/nova/db/sqlalchemy/models.py#L379", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}], "nova/db/api.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1085daae", "line": 967, "updated": "2019-11-06 23:04:33.000000000", "message": "Should document the new param.", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}], "nova/db/sqlalchemy/api.py": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "a7600858f1bded3f32d107ab1e457d474d7475f2", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2b4741bf", "line": 3068, "range": {"start_line": 3068, "start_character": 0, "end_line": 3068, "end_character": 83}, "updated": "2019-10-02 23:17:00.000000000", "message": "pep8 job fails. This line should be wrapped less than 80 characters.", "commit_id": "873ee4f4c7664fad85a69d46612207d522c72755"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "040dbeae1688bc26724d9d26954785383de2fed4", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5d2a7b90", "line": 3068, "range": {"start_line": 3068, "start_character": 0, "end_line": 3068, "end_character": 83}, "in_reply_to": "3fa7e38b_2b4741bf", "updated": "2019-10-03 11:16:50.000000000", "message": "Done", "commit_id": "873ee4f4c7664fad85a69d46612207d522c72755"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "45210cea469df2331920f1e4d53e0cdb7087db32", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_289bc773", "line": 3052, "updated": "2019-11-07 16:04:50.000000000", "message": "Why not just change this to read/update the deleted row? if we're going to ignore it here and then just re-create it below (if it exists), why not just update this one? If we found/updated it then cool, and if it didn't exist, rows_updated will be Falsey and we'd continue with the create below using the same logic.", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_90ba2a6f", "line": 3055, "updated": "2019-11-06 23:04:33.000000000", "message": "Would be good to have a comment here for this logic.\n\nAlso, this alignment is a bit ugly - can we indent?", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_30ab361f", "line": 3056, "updated": "2019-11-06 23:04:33.000000000", "message": "If you want to make this as fast as possible, which you would since it's just an existence check (correct?), then you should pass columns=[] so instance_extra_get_by_instance_uuid doesn't by default load those other columns that we don't care about.", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "45210cea469df2331920f1e4d53e0cdb7087db32", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_088ccb33", "line": 3056, "in_reply_to": "3fa7e38b_30ab361f", "updated": "2019-11-07 16:04:50.000000000", "message": "It'd be better to do something even less expensive to check I think,  but I think with my comment above we could avoid the extra DB hit anyway, if I'm understanding the issue correctly.", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}], "nova/tests/unit/db/test_db_api.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f0791ec5", "line": 3404, "updated": "2019-11-06 23:04:33.000000000", "message": "Please add comments along with the calls in this test to make it more clear what is going on.", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_706e8e01", "line": 3406, "range": {"start_line": 3406, "start_character": 12, "end_line": 3406, "end_character": 16}, "updated": "2019-11-06 23:04:33.000000000", "message": "I guess this is just copying from above, but it's not a test, so how about we call this soft_delete_instance() instead?", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b04de69a", "line": 3411, "updated": "2019-11-06 23:04:33.000000000", "message": "so we soft delete the instance created in setup", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_5042726a", "line": 3415, "updated": "2019-11-06 23:04:33.000000000", "message": "this shows that we can get instance extra from the deleted instance", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b8348ed65384c04e9a90aaa34181bef5877ba152", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_105cfa4a", "line": 3421, "updated": "2019-11-06 23:04:33.000000000", "message": "and this shows instance_extra_update_by_uuid didn't attempt to create instance extra since the instance is soft deleted", "commit_id": "816c22fd81985aa20c84184e4c222839a46e888d"}]}}, "openstack%2Fnova~master~I0f1801b7a840afd557013e31d1cbc91511e0ff81": {"owner_id": 14764, "owner_name": "Yuki Nishiwaki", "owner_email": "uckey.1067@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-07 10:24:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-11-06 22:44:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": -1, "date": "2019-11-06 22:54:44.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/service.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "94a114dd184378ca229904e7cb8df0b322218e10", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_70368e54", "line": 64, "updated": "2019-11-06 22:27:25.000000000", "message": "Note we also have this:\n\nhttps://github.com/openstack/nova/blob/e79a0effc686f0d1bd2edca24ee50c10c5d6dc0a/nova/api/openstack/wsgi_app.py#L57\n\nBut I don't think it applies since it's only for creating an API service which would be ignored here anyway:\n\nhttps://github.com/openstack/nova/blob/e79a0effc686f0d1bd2edca24ee50c10c5d6dc0a/nova/api/openstack/compute/wsgi.py#L16\n\nhttps://github.com/openstack/nova/blob/e79a0effc686f0d1bd2edca24ee50c10c5d6dc0a/nova/api/metadata/wsgi.py#L16", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cccbab0903ae7a526b501e9eab2ea961d0861607", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1024fa0d", "line": 75, "updated": "2019-11-06 22:32:49.000000000", "message": "As a follow up it might not be a bad idea to move this option to the [compute] group so it's bit more clear where this is used.", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}], "nova/tests/unit/test_service.py": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "6b322fe6f8fe7a10307d042c74db97db0b3dab49", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e0479776", "line": 79, "updated": "2019-10-10 02:35:54.000000000", "message": "Here", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "6b322fe6f8fe7a10307d042c74db97db0b3dab49", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2037ef01", "line": 280, "updated": "2019-10-10 02:35:54.000000000", "message": "It should be as follows:\n\n  self.flags(enable_new_services=False)\n\nSee line 79.", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d54de9b7a6bef878cbd73b0b3c481745cf3c494e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_10c87a54", "line": 280, "in_reply_to": "3fa7e38b_2037ef01", "updated": "2019-11-06 22:23:22.000000000", "message": "They do the same thing under the covers. It's not really worth -1ing this over for a casual contributor, especially if it bothers you you can provide a patch on top which changes this.", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "6b322fe6f8fe7a10307d042c74db97db0b3dab49", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e03c77e2", "line": 299, "range": {"start_line": 299, "start_character": 8, "end_line": 299, "end_character": 55}, "updated": "2019-10-10 02:35:54.000000000", "message": "ditto", "commit_id": "3521abdc3e999ed853b54553ad56f6541174a23e"}]}}, "openstack%2Fnova~master~I0a8046e467ed60d707ab7636872b7956bde9e599": {"owner_id": 20382, "owner_name": "YuYang", "owner_email": "yuyangwang1985@gmail.com", "labels": [{"value": 1, "date": "2019-10-14 16:35:54.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20040, "name": "Microsoft Hyper-V Compute CI", "email": "microsoft_nova_ci@microsoft.com", "username": "microsoft_nova_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14571, "name": "Intel Experimental CI", "email": "openstack-networking-ci@intel.com", "username": "intel-networking-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-07 10:21:53.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20382, "name": "YuYang", "email": "yuyangwang1985@gmail.com", "username": "YuYangWang"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21784, "name": "Radek Zetik", "email": "radekx.zetik@intel.com", "username": "rzetikx"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~I0ff2b3c738979faf5393de5e6ccfc4f93c15e500": {"owner_id": 15491, "owner_name": "Philip Choi", "owner_email": "phchoi@cisco.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-02 17:02:39.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15286, "name": "XenProject CI", "email": "openstack-ci@xenproject.org", "username": "XenProject-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "28f21c58cb5c0630778535848fdbd7e8f30f77f4", "unresolved": false, "patch_set": 1, "id": "ff82abbf_12cd1f65", "line": 14, "range": {"start_line": 7, "start_character": 0, "end_line": 14, "end_character": 48}, "updated": "2017-11-28 07:02:17.000000000", "message": "you need rework your commit message", "commit_id": "7b39d9f9ee1e3d06fde0c062ae057b27a09599e0"}], "nova/cache_utils.py": [{"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "28f21c58cb5c0630778535848fdbd7e8f30f77f4", "unresolved": false, "patch_set": 1, "id": "ff82abbf_32caa34d", "line": 109, "range": {"start_line": 109, "start_character": 16, "end_line": 109, "end_character": 23}, "updated": "2017-11-28 07:02:17.000000000", "message": "a debug would be enough from the bug description", "commit_id": "7b39d9f9ee1e3d06fde0c062ae057b27a09599e0"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "15e46abb9dc437a42b9e933a3828db15b9a62423", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_07951440", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 85}, "updated": "2019-10-11 01:54:24.000000000", "message": "This line should be wrapped up within 79 characters.", "commit_id": "7f26f2bc5c0230a8850ab2e9a7fcbe6a73bd893b"}]}}, "openstack%2Fnova~master~I7ffe98eeb3ed0723584b08b233605231e9a91c12": {"owner_id": 26716, "owner_name": "Nakanishi Tomotaka", "owner_email": "nakanishi.tomotaka@po.ntt-tx.co.jp", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2019-10-07 11:00:43.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26716, "name": "Nakanishi Tomotaka", "email": "nakanishi.tomotaka@po.ntt-tx.co.jp", "username": "t-nakani"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11704, "name": "Maho Koshiya", "email": "koshiya.maho@po.ntt-tx.co.jp", "username": "koshi-m"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20722, "name": "Yikun Jiang", "email": "yikunkero@gmail.com", "username": "yikunkero"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "05dcc347b1a6d75beb93050ac8502de45cc45d86", "unresolved": false, "patch_set": 1, "id": "df87a7cf_2f89e3c8", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 5}, "updated": "2017-12-20 02:13:45.000000000", "message": "shelve", "commit_id": "bda9c6559c8591e85b75a073c41e2c9bb7112cbf"}, {"author": {"_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, "change_message_id": "7b3495212b88f4c5845fad72da78a5837d9b1b96", "unresolved": false, "patch_set": 2, "id": "bf8cb3f7_255b9f54", "line": 11, "range": {"start_line": 10, "start_character": 23, "end_line": 11, "end_character": 50}, "updated": "2017-12-27 05:07:14.000000000", "message": "This might need update, create server is implmented in this patch", "commit_id": "bf91aaa78a0d1b77ced6510d7882ac17c3b83762"}], "nova/tests/functional/test_placement_usages.py": [{"author": {"_account_id": 20722, "name": "Yikun Jiang", "email": "yikunkero@gmail.com", "username": "yikunkero"}, "change_message_id": "3b87ce0e38cf3342e20b18787cf8897d293d6ffd", "unresolved": false, "patch_set": 1, "id": "df87a7cf_c155be1f", "line": 78, "range": {"start_line": 78, "start_character": 13, "end_line": 78, "end_character": 14}, "updated": "2017-12-19 12:42:27.000000000", "message": "s/L/l/", "commit_id": "bda9c6559c8591e85b75a073c41e2c9bb7112cbf"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "af1e6e85f955ef9f92a3d05a908a83c875d9481a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_408eab79", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 75}, "updated": "2019-10-10 00:37:52.000000000", "message": "It should be as follows because of https://review.opendev.org/#/c/558911/ .\n\nfrom nova.tests.functional import test_report_client", "commit_id": "e4377e66d63c15e89c8b8916e981bed7a9d1b6c8"}]}}, "openstack%2Fnova~master~Ia9cad7dfa852a61b294848249916fbf3aa70e4d4": {"owner_id": 14070, "owner_name": "Eric Fried", "owner_email": "openstack@fried.cc", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~I924a381ebc7bb40bc98852fe0f19ec0f8d836883": {"owner_id": 23417, "owner_name": "yuanyue", "owner_email": "yyuanyuee@163.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20040, "name": "Microsoft Hyper-V Compute CI", "email": "microsoft_nova_ci@microsoft.com", "username": "microsoft_nova_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19737, "name": "huayue", "email": "huayuev5@gmail.com", "username": "huayue"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9172, "name": "Radoslav Gerganov", "email": "rgerganov@vmware.com", "username": "rgerganov"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9171, "name": "Vipin Balachandran", "email": "vipin.bl@gmail.com", "username": "vbala"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23417, "name": "yuanyue", "email": "yyuanyuee@163.com", "username": "yuanyue"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15286, "name": "XenProject CI", "email": "openstack-ci@xenproject.org", "username": "XenProject-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10608, "name": "Matthew Edmonds", "email": "edmondsw@us.ibm.com", "username": "edmondsw"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27248, "name": "Prateek Goel", "email": "prateek.goel2@tatacommunications.com", "username": "prateek.goel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "e7df393157ccf404c81c771e17b8dfd74786a42b", "unresolved": false, "patch_set": 3, "id": "3fa0c359_fba68bc1", "line": 14, "updated": "2018-02-20 20:25:01.000000000", "message": "If I understand correctly, this will also close bug 1303714 so we should add:\n\nCloses-Bug: #1303714", "commit_id": "f5d7097ff46356510a9c03f224bad11803b1fb08"}], "nova/compute/manager.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "e7df393157ccf404c81c771e17b8dfd74786a42b", "unresolved": false, "patch_set": 3, "id": "3fa0c359_bb9a435f", "line": 2127, "updated": "2018-02-20 20:25:01.000000000", "message": "Note to self: this moves the update of the instance.config_drive field to one place, boot time, and will save the value to the database. That means whether you get a config drive will be determined once at boot time and from then on, (reboot, rebuild, unshelve, migration) you will get what you had before, i.e. you cannot generate a config drive later on in an instance's life if it did not begin with one.\n\nIf I understand correctly, this is a change in behavior in that previous to this change, users could use rebuild or shelve/unshelve, for example, to change an already existing instance from 'no config drive' -> 'config drive' by updating nova.conf and then doing the rebuild or shelve/unshelve.\n\nIs that right or am I missing something? If it's a change in behavior, I'm thinking we should have a release note to signal the change in behavior to operators.", "commit_id": "f5d7097ff46356510a9c03f224bad11803b1fb08"}, {"author": {"_account_id": 23417, "name": "yuanyue", "email": "yyuanyuee@163.com", "username": "yuanyue"}, "change_message_id": "8a19b71612ac409e6cb82b8cb5ce4e327d3789f7", "unresolved": false, "patch_set": 3, "id": "3fa0c359_f47871c1", "line": 2127, "in_reply_to": "3fa0c359_bb9a435f", "updated": "2018-02-26 10:33:41.000000000", "message": "Yes, it is a change in behavior. Moreover, I'm thinking config drive should also be generated after rebuild or shelve/unshelve because relevant image is recreated and function _update_instance_after_spawn is called. The statement  configdrive.update_instance(instance) is contained in function _update_instance_after_spawn in original code. Changes have been made in the newly uploaded patch set.", "commit_id": "f5d7097ff46356510a9c03f224bad11803b1fb08"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "bfb3d3c7_2c5eed11", "side": "PARENT", "line": 1604, "updated": "2019-05-28 16:07:38.000000000", "message": "Currently called by:\n\n_build_and_run_instance\n_do_rebuild_instance\n_unshelve_instance", "commit_id": "ef4000a0d326deb004843ee51d18030224c5630f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "bfb3d3c7_6cadc5e7", "line": 2191, "updated": "2019-05-28 16:07:38.000000000", "message": "context: _build_resources\n\nReview note: the purpose of these 3 moves is that configdrive.required_by(instance) now only checks the instance object, so we need to set it *before* spawn(), whereas before we could set it afterwards.", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "bfb3d3c7_ac809d47", "line": 3045, "updated": "2019-05-28 16:07:38.000000000", "message": "context: _do_rebuild_instance", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "bfb3d3c7_8cf039ff", "line": 4894, "updated": "2019-05-28 16:07:38.000000000", "message": "context: _unshelve_instance", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "bc19afeaaa11dbd6e3418cd52952c44179481d34", "unresolved": false, "patch_set": 9, "id": "7faddb67_1f37a64f", "side": "PARENT", "line": 1721, "updated": "2019-07-31 15:29:58.000000000", "message": "Why remove this from here? Then we're playing whack-a-mole in the build, rebuild/evacuate and unshelve flows which are all calling driver.spawn and all calling this method?", "commit_id": "b8cb8ff8ec59a1477b16be94c5e366c9fcaa503e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "aff8d39c509fc20c6f4189d31e70d6038a4be0ad", "unresolved": false, "patch_set": 9, "id": "7faddb67_d103530b", "side": "PARENT", "line": 1721, "in_reply_to": "7faddb67_1f37a64f", "updated": "2019-08-30 12:13:14.000000000", "message": "i think know maybe mdbooth can say why.\ni just rebased tehre change on top of mine but technically i dont think this patch is needed.", "commit_id": "b8cb8ff8ec59a1477b16be94c5e366c9fcaa503e"}], "nova/tests/unit/test_configdrive2.py": [{"author": {"_account_id": 10608, "name": "Matthew Edmonds", "email": "edmondsw@us.ibm.com", "username": "edmondsw"}, "change_message_id": "4f67b8aace36086e86cb1cbed861a49cf1960055", "unresolved": false, "patch_set": 6, "id": "3fa0c359_17ce352c", "line": 93, "updated": "2018-02-26 20:11:42.000000000", "message": "should have tests like this for the other 2 cases as well:\n\n1) instance.config_drive or\n2) CONF.force_config_drive\n\nespecially given that we're trying to fix a bug related to force_config_drive.\n\nThen again... we already have the tests in tests/unit/virt/test_configdrive.py doing that. So why does this test exist? Appears to be redundant.", "commit_id": "6ba9fa2793b390503d5b1421f9e0fedb37fd9801"}], "nova/tests/unit/virt/libvirt/test_blockinfo.py": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "1a84d919d4ebddce4d851364da57de28724650df", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_cd09942c", "line": 373, "range": {"start_line": 373, "start_character": 8, "end_line": 373, "end_character": 36}, "updated": "2019-06-07 01:22:36.000000000", "message": "It should be instance_ref.config_drive", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "7ff91d252a2f71d71802c4c6318a7270eaefa48b", "unresolved": false, "patch_set": 7, "id": "7faddb67_45f62b92", "line": 373, "range": {"start_line": 373, "start_character": 8, "end_line": 373, "end_character": 36}, "in_reply_to": "9fb8cfa7_cd09942c", "updated": "2019-07-08 13:27:58.000000000", "message": "Done", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "1a84d919d4ebddce4d851364da57de28724650df", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_8d139c5c", "line": 412, "range": {"start_line": 412, "start_character": 8, "end_line": 412, "end_character": 43}, "updated": "2019-06-07 01:22:36.000000000", "message": "ditto", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "7ff91d252a2f71d71802c4c6318a7270eaefa48b", "unresolved": false, "patch_set": 7, "id": "7faddb67_e5f2b79a", "line": 412, "range": {"start_line": 412, "start_character": 8, "end_line": 412, "end_character": 43}, "in_reply_to": "9fb8cfa7_8d139c5c", "updated": "2019-07-08 13:27:58.000000000", "message": "Done", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "1a84d919d4ebddce4d851364da57de28724650df", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_4d1da464", "line": 444, "range": {"start_line": 444, "start_character": 8, "end_line": 444, "end_character": 43}, "updated": "2019-06-07 01:22:36.000000000", "message": "ditto", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "7ff91d252a2f71d71802c4c6318a7270eaefa48b", "unresolved": false, "patch_set": 7, "id": "7faddb67_05f03390", "line": 444, "range": {"start_line": 444, "start_character": 8, "end_line": 444, "end_character": 43}, "in_reply_to": "9fb8cfa7_4d1da464", "updated": "2019-07-08 13:27:58.000000000", "message": "Done", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}], "nova/tests/unit/virt/test_configdrive.py": [{"author": {"_account_id": 10608, "name": "Matthew Edmonds", "email": "edmondsw@us.ibm.com", "username": "edmondsw"}, "change_message_id": "4f67b8aace36086e86cb1cbed861a49cf1960055", "unresolved": false, "patch_set": 6, "id": "3fa0c359_1a065c1d", "line": 27, "updated": "2018-02-26 20:11:42.000000000", "message": "This should be \"optional\" to ensure that the reason the following assertTrue passes is because of instance.config_drive, not the metadata.", "commit_id": "6ba9fa2793b390503d5b1421f9e0fedb37fd9801"}], "nova/virt/configdrive.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "e7df393157ccf404c81c771e17b8dfd74786a42b", "unresolved": false, "patch_set": 3, "id": "3fa0c359_fb30cb58", "line": 181, "range": {"start_line": 181, "start_character": 37, "end_line": 181, "end_character": 45}, "updated": "2018-02-20 20:25:01.000000000", "message": "I almost wonder if this would be better named 'configured' or similar since, at a glance, I had thought this method had been change *not* to consider the configuration options or image properties (required vs required_by).", "commit_id": "f5d7097ff46356510a9c03f224bad11803b1fb08"}, {"author": {"_account_id": 23417, "name": "yuanyue", "email": "yyuanyuee@163.com", "username": "yuanyue"}, "change_message_id": "8a19b71612ac409e6cb82b8cb5ce4e327d3789f7", "unresolved": false, "patch_set": 3, "id": "3fa0c359_743b01e9", "line": 181, "range": {"start_line": 181, "start_character": 37, "end_line": 181, "end_character": 45}, "in_reply_to": "3fa0c359_fb30cb58", "updated": "2018-02-26 10:33:41.000000000", "message": "Thanks. I will improve it~", "commit_id": "f5d7097ff46356510a9c03f224bad11803b1fb08"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "bfb3d3c7_09051b14", "line": 160, "updated": "2019-05-28 16:07:38.000000000", "message": "nit: _configured would make it more obvious there are no external callers. Alternatively inline it into update_instance.", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "ab7f9324eba25a1b4ebc20892112f723e0cba6b0", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_95765806", "line": 166, "range": {"start_line": 166, "start_character": 12, "end_line": 166, "end_character": 33}, "updated": "2019-05-28 16:07:38.000000000", "message": "This is now redundant: it's only called from one place, and instance.config_drive was already checked.", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}], "releasenotes/notes/bug-1241806-config-drive-configuration-34432fa4a2dd19c6.yaml": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "a51cd65ff41bf79de986457fd039c41530781023", "unresolved": false, "patch_set": 4, "id": "3fa0c359_9dbcb1bb", "line": 1, "updated": "2018-02-26 11:08:48.000000000", "message": "Nit: kill trailing spaces in this reno", "commit_id": "fff38bec69197215800cc9a5c8291fbc2e1e81f7"}, {"author": {"_account_id": 23417, "name": "yuanyue", "email": "yyuanyuee@163.com", "username": "yuanyue"}, "change_message_id": "afe6d10c7ceb0875850066d2734da55c722f6227", "unresolved": false, "patch_set": 4, "id": "3fa0c359_a3bceeba", "line": 1, "in_reply_to": "3fa0c359_9dbcb1bb", "updated": "2018-02-26 12:24:05.000000000", "message": "Got it. Thanks.", "commit_id": "fff38bec69197215800cc9a5c8291fbc2e1e81f7"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "1a84d919d4ebddce4d851364da57de28724650df", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_aa09a631", "line": 17, "range": {"start_line": 17, "start_character": 4, "end_line": 17, "end_character": 65}, "updated": "2019-06-07 01:22:36.000000000", "message": "It does not appear in the generated release note.", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "7ff91d252a2f71d71802c4c6318a7270eaefa48b", "unresolved": false, "patch_set": 7, "id": "7faddb67_25cbef53", "line": 17, "range": {"start_line": 17, "start_character": 4, "end_line": 17, "end_character": 65}, "in_reply_to": "9fb8cfa7_aa09a631", "updated": "2019-07-08 13:27:58.000000000", "message": "Done", "commit_id": "795f007db5cd1c4e0e1fd57433a9544d7e6ed61f"}]}}, "openstack%2Fnova~master~I1893009e7e7eda576fd5b4ee9b1141ae00ff2b84": {"owner_id": 26936, "owner_name": "Surya Seetharaman", "owner_email": "suryaseetharaman.9@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"doc/source/cli/nova-manage.rst": [{"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "85b2045803469103ecade6c785434099602737cf", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_a7029071", "line": 262, "range": {"start_line": 261, "start_character": 59, "end_line": 262, "end_character": 63}, "updated": "2019-03-04 06:44:29.000000000", "message": "probably better put this in a note section?", "commit_id": "8a499922fea6972f0837e5b88febd5e323c6d3d0"}, {"author": {"_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, "change_message_id": "c658b86f07ccbf1ebb08a017f2540435d7f71ff1", "unresolved": false, "patch_set": 3, "id": "5fc1f717_a70da338", "line": 262, "range": {"start_line": 261, "start_character": 59, "end_line": 262, "end_character": 63}, "in_reply_to": "9fdfeff1_a7029071", "updated": "2019-03-06 15:06:12.000000000", "message": "umm, sure I thought it would be better to keep this closer to the description for \"--transport_url\". But if this works better in the note section, wfm.", "commit_id": "8a499922fea6972f0837e5b88febd5e323c6d3d0"}], "nova/cmd/manage.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b00d121aa651000554b1a97949156b1d8ce49d5a", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_dcc65a16", "line": 1601, "updated": "2018-09-26 13:16:16.000000000", "message": "Maybe update the help to mention that this does not apply to cell0. The doc too:\n\nhttps://docs.openstack.org/nova/latest/cli/nova-manage.html#nova-cells-v2", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}, {"author": {"_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, "change_message_id": "8e1d4a1bf2e72575688982706349ee9ab474d81c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_b7085727", "line": 1601, "in_reply_to": "3f79a3b5_dcc65a16", "updated": "2018-09-26 13:23:24.000000000", "message": "Done", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b00d121aa651000554b1a97949156b1d8ce49d5a", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_fc4b16ae", "line": 1644, "updated": "2018-09-26 13:16:16.000000000", "message": "Please add a comment here about why cell0 is special and we don't update the transport_url from config.", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}, {"author": {"_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, "change_message_id": "8e1d4a1bf2e72575688982706349ee9ab474d81c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_570f832e", "line": 1644, "in_reply_to": "3f79a3b5_fc4b16ae", "updated": "2018-09-26 13:23:24.000000000", "message": "Done", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "9b63741b0541b8b98301fd59af4130d8c964cd4d", "unresolved": false, "patch_set": 5, "id": "ffb9cba7_78ee8389", "line": 1679, "updated": "2019-04-22 09:32:16.000000000", "message": "A warning should be output if '--transport-url' is specified for cell0.", "commit_id": "cd10d503e32ec2647ab9241fbe18d74ac6bf10d6"}, {"author": {"_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, "change_message_id": "2d01e73391674e27302273664dc08cae6a7a0c92", "unresolved": false, "patch_set": 5, "id": "dfbec78f_c503f70c", "line": 1679, "in_reply_to": "ffb9cba7_78ee8389", "updated": "2019-05-04 17:11:04.000000000", "message": "I am not sure what you mean by \"a warning should be emitted if its specified for cell0\". Because by default in nova.conf we have cell_db set to cell0 while the transport url is the global one :) so even if a person doesn't specify one, we are still doing that by default. Honestly I don't think we should trouble an operator who is updating a cell with these details. For instance we sometimes have downstream people who just follow the documentation into doing this stuff without actually knowing what a \"cell0\" is. Plus the whole point as I have mentioned in my commit message is to NOT have to specify an transport-url for cell0.", "commit_id": "cd10d503e32ec2647ab9241fbe18d74ac6bf10d6"}], "nova/tests/unit/test_nova_manage.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b00d121aa651000554b1a97949156b1d8ce49d5a", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_3c00ae35", "line": 2265, "range": {"start_line": 2264, "start_character": 8, "end_line": 2265, "end_character": 61}, "updated": "2018-09-26 13:16:16.000000000", "message": "Shouldn't you ensure the transport_url is configured before calling this? Otherwise how do we know it was ignored?", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}, {"author": {"_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, "change_message_id": "8e1d4a1bf2e72575688982706349ee9ab474d81c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_1cfff202", "line": 2265, "range": {"start_line": 2264, "start_character": 8, "end_line": 2265, "end_character": 61}, "in_reply_to": "3f79a3b5_3c00ae35", "updated": "2018-09-26 13:23:24.000000000", "message": "you are right, dammit forgot to do that piece.", "commit_id": "84eebd140a94c649957c6fdb3323b9a79656e8a7"}]}}, "openstack%2Fnova~master~I304efe1146d7f80e0d2d44888d4efef49fb9ec0b": {"owner_id": 21239, "owner_name": "Alex Szarka", "owner_email": "szarka@inf.u-szeged.hu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20040, "name": "Microsoft Hyper-V Compute CI", "email": "microsoft_nova_ci@microsoft.com", "username": "microsoft_nova_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13915, "name": "Silvan Kaiser", "email": "silvan@quobyte.com", "username": "kaisers"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8a86f3e49494a70a92af1109ee941c8e529bd699", "unresolved": false, "patch_set": 4, "id": "1f1a1f67_1575e7cc", "line": 12, "range": {"start_line": 9, "start_character": 0, "end_line": 12, "end_character": 32}, "updated": "2017-07-20 10:56:32.000000000", "message": "You're going to have to reword this - I have no idea what you're trying to say :/", "commit_id": "8c50e73fc7ffd3e6eb32813422202a37128cf717"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "544033798f967fc375a1118abb35eeb8deed565f", "unresolved": false, "patch_set": 5, "id": "1f1a1f67_a104b57f", "line": 10, "range": {"start_line": 9, "start_character": 0, "end_line": 10, "end_character": 33}, "updated": "2017-07-20 12:45:05.000000000", "message": "More importantly, why? What's wrong with how we're doing thing at the moment?", "commit_id": "c3dfa0eb4660e28a6a768b747afac7835f931222"}, {"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "332b558960a618ff157abc1d9cf0d589f73bf6c4", "unresolved": false, "patch_set": 5, "id": "ff346bd7_e1c75045", "line": 10, "range": {"start_line": 9, "start_character": 0, "end_line": 10, "end_character": 33}, "in_reply_to": "1f1a1f67_a104b57f", "updated": "2017-07-21 21:00:48.000000000", "message": "Yeah, I could not understand the reason from the code change and the commit message, please write it on the commit message here.", "commit_id": "c3dfa0eb4660e28a6a768b747afac7835f931222"}]}}, "openstack%2Fnova~master~Ifa73d40763917cd9dbcbff75a8234c11ccdc5ed0": {"owner_id": 24965, "owner_name": "Kevin Rasmussen", "owner_email": "kj_529@hotmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24965, "name": "Kevin Rasmussen", "email": "kj_529@hotmail.com", "username": "krasmussen"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10962, "name": "David Bingham", "email": "dbingham@godaddy.com", "username": "wwriverrat"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd5abb7a6ee422ca528dd204e11ceab7aa1ca6ff", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_be11d2ae", "line": 14, "updated": "2019-01-25 18:00:35.000000000", "message": "Commit message is hard to read in gerrit if you don't wrap the lines at 72 chars.", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "a769f9245e241140c208f87d35db28e88ed1ba53", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_c81f2e59", "line": 14, "in_reply_to": "9fdfeff1_be11d2ae", "updated": "2019-01-28 00:22:33.000000000", "message": "See https://wiki.openstack.org/wiki/GitCommitMessages#Summary_of_Git_commit_message_structure", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 24965, "name": "Kevin Rasmussen", "email": "kj_529@hotmail.com", "username": "krasmussen"}, "change_message_id": "a0e64359589ae86dc02d0d534a4d1253b5f9879e", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_01edadb5", "line": 14, "in_reply_to": "9fdfeff1_c81f2e59", "updated": "2019-02-01 20:52:07.000000000", "message": "Thanks, I'll update the commit message to fit ^ once the blueprint has been reviewed.", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "25b6dcf4c946b10d537db3bd143144de24468100", "unresolved": false, "patch_set": 4, "id": "5fc1f717_840f2f2d", "line": 14, "range": {"start_line": 9, "start_character": 0, "end_line": 14, "end_character": 120}, "updated": "2019-03-07 09:53:25.000000000", "message": "this looks a little big urgly, should follow the guide for commit msg. and do we have a detailed design for this now?", "commit_id": "3e1b63f1e8acd23b5db0d7fefd305e78114e65d5"}], "nova/scheduler/filters/aggregate_subnet_availability_filter.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd5abb7a6ee422ca528dd204e11ceab7aa1ca6ff", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_5e6d4630", "line": 34, "updated": "2019-01-25 18:00:35.000000000", "message": "I'm not sure calling neutron for every compute host candidate per request is going to perform adequately if there are a large number of compute hosts.", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 24965, "name": "Kevin Rasmussen", "email": "kj_529@hotmail.com", "username": "krasmussen"}, "change_message_id": "5db67d580ab7215674ca4a9b4761a14e7b3b13f0", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_e1c7bf11", "line": 34, "in_reply_to": "9fdfeff1_5e6d4630", "updated": "2019-01-25 19:13:51.000000000", "message": "I may be incorrect as this is my first stab at a scheduler filter but doesn't the same spec_obj get passed for each candidate?\n\nAdding `spec_obj.subnet_ip_availability = ip_availability_dict` was done to avoid calling neutron for each candidate.", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 10962, "name": "David Bingham", "email": "dbingham@godaddy.com", "username": "wwriverrat"}, "change_message_id": "5df63b177afe76ab4728e00b8d73ade91dd6f451", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_9d04e219", "line": 34, "in_reply_to": "9fdfeff1_c1495b8b", "updated": "2019-01-29 17:49:37.000000000", "message": "Just thinking, but maybe:\n\nFetch the \"list_network_ip_availabilities\" from filter_properties in the spec_obj. If missing, fetch from neutron and push result into filter_properties. First host takes the hit, remainder of the hosts use the cached value.\n\nJust an idea :-)", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d365cced844ee0b7b444bc3b158864a636539b95", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_c1495b8b", "line": 34, "in_reply_to": "9fdfeff1_e1c7bf11", "updated": "2019-01-25 19:26:26.000000000", "message": "No, I think you're right. I skimmed over this without realizing you're caching the result on the request spec object after the first call. That said, we would probably add a new field to RequestSpec instead of setting an arbitrary attribute, to be less error prone.\n\nBut, don't change anything yet since we first need to discuss this proposal as a team and determine whether it should be added.", "commit_id": "8702928d359941437d7ce20bc5a774dcb7eaa64f"}, {"author": {"_account_id": 24965, "name": "Kevin Rasmussen", "email": "kj_529@hotmail.com", "username": "krasmussen"}, "change_message_id": "74f5250f9a84277f2083b3706f654f51f3be4811", "unresolved": false, "patch_set": 4, "id": "5fc1f717_6e3b02d1", "line": 47, "updated": "2019-03-07 08:03:52.000000000", "message": "Fixes a bug with the previous code that caused hosts that belonged to multiple aggregates to only grab one of the aggregates it was a part of at random to get the subnets from.", "commit_id": "3e1b63f1e8acd23b5db0d7fefd305e78114e65d5"}]}}, "openstack%2Fnova~master~I61574e260602653d8efdf588e261bfd9dbb73780": {"owner_id": 26490, "owner_name": "Jason SUN", "owner_email": "sunjia@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2018-11-29 13:49:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2018-11-30 07:31:40.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I285f68c81b0587c6a197d4791b09234a1697f5e7": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}], "comments": {}}, "openstack%2Fnova~stable%2Focata~I54dff4d5ed513690d0fae65de47a1a9c23aebbd4": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I54dff4d5ed513690d0fae65de47a1a9c23aebbd4": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Focata~I4b606fce473d064b9bb00213696c075cea020aaf": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I4b606fce473d064b9bb00213696c075cea020aaf": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Focata~I9f73fcbe7c3dfd64e75ac8224c13934b03443cd5": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I9f73fcbe7c3dfd64e75ac8224c13934b03443cd5": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Focata~I49460ec3b572ee14b32229e771a5499ff91e8722": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 1, "date": "2019-08-20 02:41:45.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "77657cfe66033e18db84f02d494933a007c9319e", "unresolved": false, "patch_set": 3, "id": "7faddb67_a3e89b15", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 45}, "updated": "2019-08-19 13:19:02.000000000", "message": "You can rebase on this:\n\nhttps://review.opendev.org/#/c/677201/", "commit_id": "f3cb82dd7da8f570ebec7c5bdfc51b5647bacee8"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "cac3a11928ec7a6d353282bc6a007b939c944ba9", "unresolved": false, "patch_set": 3, "id": "7faddb67_bb60b802", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 45}, "in_reply_to": "7faddb67_a3e89b15", "updated": "2019-08-20 02:01:35.000000000", "message": "Done", "commit_id": "f3cb82dd7da8f570ebec7c5bdfc51b5647bacee8"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "34d57d0dac986c582ad718b167dc7d34a70ad1ab", "unresolved": false, "patch_set": 4, "id": "7faddb67_7e19ce77", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 49}, "updated": "2019-08-20 02:22:03.000000000", "message": "This conflicts info need to be removed.", "commit_id": "bd0f2431aff9f1c983907d146e55c2fb6ff0d4c2"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ccb9b92ef8aa1134918c30ba79e31dd4edd28908", "unresolved": false, "patch_set": 4, "id": "7faddb67_3eea760e", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 49}, "in_reply_to": "7faddb67_1e577a03", "updated": "2019-08-20 02:41:45.000000000", "message": "yeah, this patch change will not lead to conflicts, I think it is okay to record this conflict.", "commit_id": "bd0f2431aff9f1c983907d146e55c2fb6ff0d4c2"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "43f2856702d9b15bf283ba77e5505f14568e8152", "unresolved": false, "patch_set": 4, "id": "7faddb67_1e577a03", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 49}, "in_reply_to": "7faddb67_7e19ce77", "updated": "2019-08-20 02:25:27.000000000", "message": "No. It is necesarry.\nWhen applying the patch, the conflict occurs in nova/tests/unit/objects/test_build_request.py (not nova/tests/functional/db/test_build_request.py).", "commit_id": "bd0f2431aff9f1c983907d146e55c2fb6ff0d4c2"}]}}, "openstack%2Fnova~master~I8aa48f9608a992e1739268a8378f1cf805b8dca9": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~If5b5bbdc928594d0f53a50dac7349af694a07b7c": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "3f800c89670a60d6a51f14f2776f78e41b408005", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_22f34876", "line": 23, "updated": "2019-06-12 14:57:50.000000000", "message": "I'm not a fan of this \"keep\" sentinel. What I would expect the behavior to be is that if I specify just one of the options but not the other, only update that one and ignore the other (don't update it from config). So then you'd have these semantics:\n\n1. if you don't specify either option, update from config\n2. if you specify only one option, update from the command line option value but don't update the other from config\n3. if you specify both options from the command line, update both from the command line values\n\nThat seems to be more inline with how people expected this to work in the bug report(s) and how OSC set/unset commands work (we don't change things that you don't specify). Granted, OSC commands don't have this same kind of \"by default update from config\" behavior either.", "commit_id": "6a7d1d105e68737bdebee26af82e7995218b7e4e"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "58eda6856d20ed1125dd56fea67c9e0f85d17c11", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_855d5e16", "line": 23, "in_reply_to": "9fb8cfa7_22f34876", "updated": "2019-06-12 15:06:11.000000000", "message": "> 1. if you don't specify either option, update from config\n > 2. if you specify only one option, update from the command line\n > option value but don't update the other from config\n > 3. if you specify both options from the command line, update both\n > from the command line values\n\nThis is confusing behavior to me, because the absence of one means we don't update it, but the absence of both means we _update_ both. Completely different behavior. Further, if I encode this into my deployment tool and then it changes (again) in the future, I've encoded an ambiguous position into my tool, which will do the wrong thing once the underlying behavior changes. Such ambiguous behavior is why we're discussing this at all.\n\nSo, IMHO, we should make it more stable, not less, regardless of what that means. I can think of other changes we could make to get towards more stability (i.e. gating the config-using behavior on a --from-config which takes everything from the config, exclusive of the other two) but that will make existing users have to change more as well.", "commit_id": "6a7d1d105e68737bdebee26af82e7995218b7e4e"}], "doc/source/cli/nova-manage.rst": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "46fd37565dcd7e7d061fe01c9d1d37888dfdde8c", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fc7bac24", "line": 298, "range": {"start_line": 298, "start_character": 55, "end_line": 298, "end_character": 58}, "updated": "2019-06-11 14:15:29.000000000", "message": "s/not//", "commit_id": "0866439ad097e7914068767133352b6bd2d5ddc8"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "61ce5a5cd58ae9fb95ce0c30de8756dbc18c39e3", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_26960f40", "line": 298, "range": {"start_line": 298, "start_character": 55, "end_line": 298, "end_character": 58}, "in_reply_to": "9fb8cfa7_fc7bac24", "updated": "2019-06-11 19:03:53.000000000", "message": "Done", "commit_id": "0866439ad097e7914068767133352b6bd2d5ddc8"}], "nova/cmd/manage.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "9440b194ab10d3e418ef732d47c03f05459d1d7e", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_c34d5ac4", "side": "PARENT", "line": 1517, "updated": "2019-05-31 17:39:29.000000000", "message": "Instead of removing this completely, I think you need to update them to default to the found cell_mapping, as you described in your commit message, example:\n\n transport_url = transport_url or cell_mapping.transport_url\n db_connection = db_connection or cell_mapping.database_connection\n\nOtherwise, we will not be checking for an already existing CellMapping with different uuid but same transport_url and db_connection properly on L1519.", "commit_id": "6e4ab9714cc0ca147f61997aa7b68f88185ade5c"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "d0169a03e5d3800a70d9d977111335a35c84fa62", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_9c4f1a33", "side": "PARENT", "line": 1517, "in_reply_to": "9fb8cfa7_75218afb", "updated": "2019-06-11 03:58:28.000000000", "message": "Done", "commit_id": "6e4ab9714cc0ca147f61997aa7b68f88185ade5c"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "e7b80adf085305189e8d4a4bb4eb53d23e74689b", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_75218afb", "side": "PARENT", "line": 1517, "in_reply_to": "9fb8cfa7_f0e29601", "updated": "2019-06-04 14:48:23.000000000", "message": "Yeah, the point of this is so that you can run this against a config file and not specify credentials on the command line.\n\nOne thing we could do is something like this:\n\n if transport_url or db_connection:\n     # At least one argument was provided, require the other\n     # to be specified, or a sentinel to leave it unchanged\n     if transport_url == 'keep':\n         transport_url = cell_mapping.transport_url\n     elif transport_url is None:\n         print('Specify a transport_url or \"keep\" to leave unchanged')\n     if db_connection == 'keep':\n         db_connection = cell_mapping.db_connection\n     elif db_connection is None:\n         print('Specify a db_connection or \"keep\" to leave unchanged')\n else:\n     # No command-line arguments, so take the config values\n     database_connection = CONF.database.connection\n     transport_url = CONF.transport_url\n\nThat would make the behavior either \"you want to set this from command-line arguments, so tell me both values or which one(s) to leave unchanged\" or \"You want me to take both values from the config\".\n\nI think that's easy to grok and explain in a help message. You could also add an \"if == conf\" option for the argument case, but I think it's unnecessary and probably just increases confusion.", "commit_id": "6e4ab9714cc0ca147f61997aa7b68f88185ade5c"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "b5f2716d3a4c1f18abf1c45a60fc6a8538d6a84c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f0e29601", "side": "PARENT", "line": 1517, "in_reply_to": "bfb3d3c7_c34d5ac4", "updated": "2019-05-31 18:38:53.000000000", "message": "Hm, I just found this old review where a similar change was proposed and it was rejected because apparently it's intentional that these default to the config file values:\n\nhttps://review.opendev.org/#/c/603998/2/nova/cmd/manage.py\n\nIf that is still the case, it looks like the best we could do here is add code comments explaining that the default to the config values is intentional and why. Because it's not intuitive, at least to me.", "commit_id": "6e4ab9714cc0ca147f61997aa7b68f88185ade5c"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4f7f4b69432b4cdc6ea19da0b26eab47ddd38893", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f065b6e2", "line": 1522, "updated": "2019-05-31 18:19:25.000000000", "message": "And here we should check if transport_url != cell_mapping.transport_url to avoid a needless update of the field in the case that it's not different (since we will default to the existing value).", "commit_id": "45eed1339dc7a1b8c69d1bb41cd46ac057c5ccd9"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4f7f4b69432b4cdc6ea19da0b26eab47ddd38893", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_90623ad8", "line": 1525, "updated": "2019-05-31 18:19:25.000000000", "message": "Same.", "commit_id": "45eed1339dc7a1b8c69d1bb41cd46ac057c5ccd9"}], "nova/tests/unit/test_nova_manage.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "9440b194ab10d3e418ef732d47c03f05459d1d7e", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_8d6225d8", "line": 2026, "updated": "2019-05-31 17:39:29.000000000", "message": "I think this test needs additional coverage since it didn't catch the problem and fail on PS1 with not defaulting to the specified CellMapping's transport_url and database_connection.", "commit_id": "45eed1339dc7a1b8c69d1bb41cd46ac057c5ccd9"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "9440b194ab10d3e418ef732d47c03f05459d1d7e", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_4d83cd57", "line": 2053, "updated": "2019-05-31 17:39:29.000000000", "message": "I think we need two more cases here, where only one of transport_url or database_connection is specified instead of both. As far as I can tell, the update_cell command does not require a user to pass both options. With PS1, I believe that these cases would erroneously allow an update that would result in a duplicate DB and MQ for two cells with different UUIDs.\n\nSo I think we need a case where update_cell(..., None, <db url>) is called and another case where update_cell(..., <mq url>, None) is called.", "commit_id": "45eed1339dc7a1b8c69d1bb41cd46ac057c5ccd9"}]}}, "openstack%2Fnova~master~I181dff387e78064b64d46c31b35c419e527fcac8": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/objects/request_spec.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e62561053a2b3a7742755c00abea8b2f489c5d3a", "unresolved": false, "patch_set": 2, "id": "5fc1f717_0b252bab", "line": 543, "updated": "2019-03-12 19:32:57.000000000", "message": "I'm not sure if Dan wanted the others:\n\n   ('requested_destination', 'requested_resources', 'network_metadata')\n\nhandled similarly in here or not.", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "a885ced90021dfe0439295e216dd19abffc5d642", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_97ff7033", "line": 543, "in_reply_to": "5fc1f717_0b252bab", "updated": "2019-06-18 16:15:38.000000000", "message": "Yeah, I think we should.", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6db6e2b867c1dee05228529785f28e1c8ed15e80", "unresolved": false, "patch_set": 17, "id": "9fb8cfa7_57a7b850", "line": 55, "updated": "2019-06-18 16:19:52.000000000", "message": "We shouldn't need to bump the version to change the default, AFAIK. Did you do this because you think it's necessary or because the hash changed in the test? Even if the latter, I don't think it matters to anything on the other side of RPC what the default is, so we could probably just cheat on the hash (if needed). But, see below.", "commit_id": "01d23a73668aeab1a41b5a1b1365ea972823c03f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "b23284728b67069664b061bb468cf62259bdec26", "unresolved": false, "patch_set": 17, "id": "9fb8cfa7_96820900", "line": 55, "in_reply_to": "9fb8cfa7_57a7b850", "updated": "2019-06-19 02:54:00.000000000", "message": "Done", "commit_id": "01d23a73668aeab1a41b5a1b1365ea972823c03f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6db6e2b867c1dee05228529785f28e1c8ed15e80", "unresolved": false, "patch_set": 17, "id": "9fb8cfa7_d77088df", "line": 95, "updated": "2019-06-18 16:19:52.000000000", "message": "Erm, I don't really like this having to go to nullable and didn't think about it when looking at the earlier patchset.\n\nI tend to think we should not make this nullable just so we can handle it with set_default. Either we can make the default be an empty object, or just not do the set_default thing on this field and continue to handle it like we were before and skip it.", "commit_id": "01d23a73668aeab1a41b5a1b1365ea972823c03f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "b23284728b67069664b061bb468cf62259bdec26", "unresolved": false, "patch_set": 17, "id": "9fb8cfa7_b6870d10", "line": 95, "in_reply_to": "9fb8cfa7_d77088df", "updated": "2019-06-19 02:54:00.000000000", "message": "Done", "commit_id": "01d23a73668aeab1a41b5a1b1365ea972823c03f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "a90aba1ea2947d9e6e802ac544263144df7864cf", "unresolved": false, "patch_set": 18, "id": "9fb8cfa7_4a505d33", "side": "PARENT", "line": 135, "updated": "2019-06-19 13:50:13.000000000", "message": "This creates a new object every time it gets run, whereas the new code on L92 creates one object at import time and lets everything else use that one object.", "commit_id": "65ffb498b84f5ef9ec11d840422f1982a06c8945"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "a90aba1ea2947d9e6e802ac544263144df7864cf", "unresolved": false, "patch_set": 18, "id": "9fb8cfa7_aa7559ce", "line": 95, "range": {"start_line": 93, "start_character": 47, "end_line": 95, "end_character": 66}, "updated": "2019-06-19 13:50:13.000000000", "message": "Unfortunately, I don't think we can do this. Just like mutable default arguments on method calls, this will end up with every object in the system using _the_same_ NetworkMetadata object as default, which could cause some cross-thread conflicts at times. I think we need to, as I said, go back to handling this field in the way it was before (i.e. old L135).", "commit_id": "b75f05939b17affc694e5f09380123cb8b497cec"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "1c69bb126bf614200e28d3abbd6df1b189a81f00", "unresolved": false, "patch_set": 18, "id": "9fb8cfa7_3177623d", "line": 95, "range": {"start_line": 93, "start_character": 47, "end_line": 95, "end_character": 66}, "in_reply_to": "9fb8cfa7_aa7559ce", "updated": "2019-06-24 02:25:00.000000000", "message": "Done", "commit_id": "b75f05939b17affc694e5f09380123cb8b497cec"}], "nova/tests/functional/regressions/test_bug_1815153.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e62561053a2b3a7742755c00abea8b2f489c5d3a", "unresolved": false, "patch_set": 2, "id": "5fc1f717_4b7ed4af", "line": 158, "range": {"start_line": 157, "start_character": 49, "end_line": 158, "end_character": 36}, "updated": "2019-03-12 19:32:57.000000000", "message": "I'm not sure what this means - wouldn't we get a NoValidHost error from the scheduler since you can't live migrate to the source host. I guess you're saying scheduling fails so the live migration fails and the server is not moved, i.e. the instance remains on the source host. We can't read a fault from the API because the instance is not in ERROR status, but the migration record should have an error status. Anyway, I'm just clarifying.", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "22f943f2f006a78f24da0069c99a0c911a82eb66", "unresolved": false, "patch_set": 2, "id": "5fc1f717_7a8b6067", "line": 158, "range": {"start_line": 157, "start_character": 49, "end_line": 158, "end_character": 36}, "in_reply_to": "5fc1f717_4b7ed4af", "updated": "2019-03-25 06:58:33.000000000", "message": "Done", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "4cd3a84afff7dfb1a048fc702d1a3e15299519c2", "unresolved": false, "patch_set": 2, "id": "5fc1f717_fb5fd10b", "line": 160, "range": {"start_line": 160, "start_character": 47, "end_line": 160, "end_character": 66}, "updated": "2019-03-06 07:57:48.000000000", "message": "I thought what you are adding is the case that no target_host is provided? as your changes in doc string?", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "2b8fcdd6d1df7bdb6cdfff8435201b6417126ec5", "unresolved": false, "patch_set": 2, "id": "5fc1f717_db7535fc", "line": 160, "range": {"start_line": 160, "start_character": 47, "end_line": 160, "end_character": 66}, "in_reply_to": "5fc1f717_bb2f09f5", "updated": "2019-03-06 08:23:46.000000000", "message": "Oh, I see, the comment seems makes sense", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "3ff5147cb910747a6515b75352868ccdfc757094", "unresolved": false, "patch_set": 2, "id": "5fc1f717_bb2f09f5", "line": 160, "range": {"start_line": 160, "start_character": 47, "end_line": 160, "end_character": 66}, "in_reply_to": "5fc1f717_fb5fd10b", "updated": "2019-03-06 08:20:42.000000000", "message": "I added \"Live migration with a target host without a force flag\" case.\nIn that case, requested_destination is set in a request spec.", "commit_id": "9844239fdaf4da08bef05941463c6570c082238d"}]}}, "openstack%2Fpython-openstackclient~master~Ib3c4de29db2cc7778da23dc074646fa4d8200e46": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21514, "name": "Huanxuan Ao", "email": "aohuanxuan@163.com", "username": "aohuanxuan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7350, "name": "Jordan Pittier", "email": "jordan.pittier@gmail.com", "username": "JordanP"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6482, "name": "Steve Martinelli", "email": "s.martinelli@gmail.com", "username": "stevemar"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"doc/source/cli/command-objects/server-migration.rst": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "6a84dce3b35506a184ebaa519a1c86a89554bdda", "unresolved": false, "patch_set": 14, "id": "5f201791_4601e504", "line": 50, "range": {"start_line": 50, "start_character": 23, "end_line": 50, "end_character": 26}, "updated": "2017-06-26 13:54:56.000000000", "message": "We usually say 'ID only' in this case.", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "27e8b8b7b257b30af2e83bd154156d439b130c6d", "unresolved": false, "patch_set": 14, "id": "5f201791_cc1bbd7e", "line": 50, "range": {"start_line": 50, "start_character": 23, "end_line": 50, "end_character": 26}, "in_reply_to": "5f201791_4601e504", "updated": "2017-06-27 08:00:10.000000000", "message": "Done", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "75ff8cb461e8e10b964890e398201130b92704ca", "unresolved": false, "patch_set": 19, "id": "7f287b81_f518f881", "line": 6, "updated": "2017-08-23 20:37:37.000000000", "message": "We should note here that a 'servcer migration' only exists while the migration is taking place, or if it failed (if that is the actual case).", "commit_id": "57d5ad17a3fab4f0434d3c80e4bf04e88bacc919"}, {"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "75ff8cb461e8e10b964890e398201130b92704ca", "unresolved": false, "patch_set": 19, "id": "7f287b81_d50dfc3e", "line": 19, "updated": "2017-08-23 20:37:37.000000000", "message": "These should be on 3 lines\n\nIs <server> always required?  I'd think there should be a way to list all migrations in the cloud?", "commit_id": "57d5ad17a3fab4f0434d3c80e4bf04e88bacc919"}, {"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "75ff8cb461e8e10b964890e398201130b92704ca", "unresolved": false, "patch_set": 19, "id": "7f287b81_474ddf70", "line": 42, "updated": "2017-08-23 20:37:37.000000000", "message": "Will a particular server ever have multiple migrations in progress at once?  Or is this due to old migration data hanging around?", "commit_id": "57d5ad17a3fab4f0434d3c80e4bf04e88bacc919"}], "doc/source/cli/commands.rst": [{"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "75ff8cb461e8e10b964890e398201130b92704ca", "unresolved": false, "patch_set": 19, "id": "7f287b81_b52150b7", "line": 146, "updated": "2017-08-23 20:37:37.000000000", "message": "Do these only exist while migrations are in progress?  If so we should add that here", "commit_id": "57d5ad17a3fab4f0434d3c80e4bf04e88bacc919"}], "doc/source/command-objects/server-migration.rst": [{"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "14b4b04a477a713668488ad05d2099e1b119e790", "unresolved": false, "patch_set": 9, "id": "5ff73747_28b94779", "line": 5, "range": {"start_line": 5, "start_character": 35, "end_line": 5, "end_character": 55}, "updated": "2017-04-26 08:44:02.000000000", "message": "Does this require specified compute microversion API ? I think api version discovery and mircoversion are not supported by osc yet", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "0316f5989b4aa542ed2c8ab95d0b8d00ea40e14f", "unresolved": false, "patch_set": 9, "id": "5ff73747_bf68a51c", "line": 5, "range": {"start_line": 5, "start_character": 35, "end_line": 5, "end_character": 55}, "in_reply_to": "5ff73747_28b94779", "updated": "2017-04-28 01:45:18.000000000", "message": "> Does this require specified compute microversion API ?\n\nYes.", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}], "doc/source/data/nova.csv": [{"author": {"_account_id": 6482, "name": "Steve Martinelli", "email": "s.martinelli@gmail.com", "username": "stevemar"}, "change_message_id": "48536b8e0dd0d00842f91a31969f39cd7dded535", "unresolved": false, "patch_set": 3, "id": "ffe62b97_9f1f0f07", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 42}, "updated": "2017-03-29 06:14:58.000000000", "message": "is this command unrelated?", "commit_id": "598188a439fe1eadc439b1d8a2e26f49d55c6e86"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "54b981c5ae63f1230a4dd758e17e4ea7810861bc", "unresolved": false, "patch_set": 3, "id": "ffe62b97_911a6314", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 42}, "in_reply_to": "ffe62b97_9f1f0f07", "updated": "2017-03-29 06:53:20.000000000", "message": "It is for the depricated API.\n\nhttps://developer.openstack.org/api-ref/compute/#list-migrations", "commit_id": "598188a439fe1eadc439b1d8a2e26f49d55c6e86"}, {"author": {"_account_id": 6482, "name": "Steve Martinelli", "email": "s.martinelli@gmail.com", "username": "stevemar"}, "change_message_id": "48536b8e0dd0d00842f91a31969f39cd7dded535", "unresolved": false, "patch_set": 3, "id": "ffe62b97_5ffce7b3", "line": 104, "range": {"start_line": 103, "start_character": 0, "end_line": 104, "end_character": 61}, "updated": "2017-03-29 06:14:58.000000000", "message": "these were already here", "commit_id": "598188a439fe1eadc439b1d8a2e26f49d55c6e86"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "54b981c5ae63f1230a4dd758e17e4ea7810861bc", "unresolved": false, "patch_set": 3, "id": "ffe62b97_910143b2", "line": 104, "range": {"start_line": 103, "start_character": 0, "end_line": 104, "end_character": 61}, "in_reply_to": "ffe62b97_5ffce7b3", "updated": "2017-03-29 06:53:20.000000000", "message": "Done", "commit_id": "598188a439fe1eadc439b1d8a2e26f49d55c6e86"}], "openstackclient/compute/v2/server.py": [{"author": {"_account_id": 7350, "name": "Jordan Pittier", "email": "jordan.pittier@gmail.com", "username": "JordanP"}, "change_message_id": "60bae024d535a1d5fd0d0aa84b2ac11824a64ed7", "unresolved": false, "patch_set": 4, "id": "ffe62b97_8209af96", "line": 2034, "updated": "2017-03-30 12:48:57.000000000", "message": "adding \"choices=('live-migration', 'migration', 'resize', 'evacuation')\" here would be great.", "commit_id": "84e85c3ff8a2d24c6ffd29e87923fcd0d27e5c95"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "cf30fc3b4d149c8a151a42c7242348b0a505362b", "unresolved": false, "patch_set": 4, "id": "bff0334d_c8ffb865", "line": 2034, "in_reply_to": "ffe62b97_8209af96", "updated": "2017-04-06 12:36:11.000000000", "message": "Done", "commit_id": "84e85c3ff8a2d24c6ffd29e87923fcd0d27e5c95"}], "openstackclient/compute/v2/server_migration.py": [{"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "754396be067da81ffc073085a299976a968ac20a", "unresolved": false, "patch_set": 7, "id": "bff0334d_f50da937", "line": 107, "updated": "2017-04-06 14:43:29.000000000", "message": "We generally do not filter show command results, with some specific exceptions (like tenant vs project).  Is there a reason to filter the returned attributes here?", "commit_id": "1605042671406185f0da83f642062c4ed22e9b0f"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "ce1694ec7559bbf5b01e1e71cc374ec6b91675e1", "unresolved": false, "patch_set": 7, "id": "5ff73747_6c7d4cb0", "line": 107, "in_reply_to": "bff0334d_f50da937", "updated": "2017-04-25 09:18:37.000000000", "message": "No.\nSo change it not to filter results.\nDone.", "commit_id": "1605042671406185f0da83f642062c4ed22e9b0f"}, {"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "14b4b04a477a713668488ad05d2099e1b119e790", "unresolved": false, "patch_set": 9, "id": "5ff73747_282387aa", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 21}, "updated": "2017-04-26 08:44:02.000000000", "message": "So many columns for list command, that looks messy in console, could we add a \"--long\" option to show all the columns? and just show the part of these by default (id, server uuid, type, status, source compute, dest compute)", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "14b4b04a477a713668488ad05d2099e1b119e790", "unresolved": false, "patch_set": 9, "id": "5ff73747_08d0cb4f", "line": 37, "range": {"start_line": 37, "start_character": 9, "end_line": 37, "end_character": 18}, "updated": "2017-04-26 08:44:02.000000000", "message": "Why no \"Source Host\"?", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "0316f5989b4aa542ed2c8ab95d0b8d00ea40e14f", "unresolved": false, "patch_set": 9, "id": "5ff73747_9fce092b", "line": 37, "range": {"start_line": 37, "start_character": 9, "end_line": 37, "end_character": 18}, "in_reply_to": "5ff73747_08d0cb4f", "updated": "2017-04-28 01:45:18.000000000", "message": "Because Nova does not return \"Source Host\".", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "14b4b04a477a713668488ad05d2099e1b119e790", "unresolved": false, "patch_set": 9, "id": "5ff73747_4866d353", "line": 72, "range": {"start_line": 72, "start_character": 27, "end_line": 72, "end_character": 41}, "updated": "2017-04-26 08:44:02.000000000", "message": "Seems the argument name is wrong for novaclient\n\n    $ openstack --os-compute-api-version 2.latest\n    (openstack)  server migration list chenrui_vm\n    list() got an unexpected keyword argument 'migration_type'", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "0316f5989b4aa542ed2c8ab95d0b8d00ea40e14f", "unresolved": false, "patch_set": 9, "id": "5ff73747_5f052145", "line": 72, "range": {"start_line": 72, "start_character": 27, "end_line": 72, "end_character": 41}, "in_reply_to": "5ff73747_4866d353", "updated": "2017-04-28 01:45:18.000000000", "message": "This patch depends on the following one.\n\nhttps://review.openstack.org/#/c/430839/", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "11856bf9119843cbd40139013147a96a2c380e02", "unresolved": false, "patch_set": 9, "id": "5ff73747_19757132", "line": 72, "range": {"start_line": 72, "start_character": 27, "end_line": 72, "end_character": 41}, "in_reply_to": "5ff73747_5f052145", "updated": "2017-04-28 07:15:17.000000000", "message": "Ah, got it, thank you.", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "6a84dce3b35506a184ebaa519a1c86a89554bdda", "unresolved": false, "patch_set": 14, "id": "5f201791_462a057f", "line": 30, "range": {"start_line": 30, "start_character": 16, "end_line": 30, "end_character": 20}, "updated": "2017-06-26 13:54:56.000000000", "message": "ID instead of UUID? UUID is a format, so I think \"Server ID\" is better.", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "27e8b8b7b257b30af2e83bd154156d439b130c6d", "unresolved": false, "patch_set": 14, "id": "5f201791_801fc959", "line": 30, "range": {"start_line": 30, "start_character": 16, "end_line": 30, "end_character": 20}, "in_reply_to": "5f201791_462a057f", "updated": "2017-06-27 08:00:10.000000000", "message": "Nova returns 'server_uuid' item.\n\nhttp://docs-draft.openstack.org/83/459483/14/check/gate-nova-api-ref/7623c75//api-ref/build/html/?expanded=id314-detail#id314", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "af6195131f866e9bbe2ebc640c46b40dbb10f024", "unresolved": false, "patch_set": 14, "id": "5f201791_c0bdc1d8", "line": 30, "range": {"start_line": 30, "start_character": 16, "end_line": 30, "end_character": 20}, "in_reply_to": "5f201791_801fc959", "updated": "2017-06-27 08:13:29.000000000", "message": "My point is that it is better to keep consistency across OSC commands.\nI don't think we need to follow what term nova API uses.", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "a83bf8d2867920bcfab5a6837c82d90764929577", "unresolved": false, "patch_set": 14, "id": "3f1d235d_2f7652da", "line": 30, "range": {"start_line": 30, "start_character": 16, "end_line": 30, "end_character": 20}, "in_reply_to": "5f201791_c0bdc1d8", "updated": "2017-06-29 11:35:23.000000000", "message": "Done", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}], "openstackclient/tests/unit/compute/v2/fakes.py": [{"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "14b4b04a477a713668488ad05d2099e1b119e790", "unresolved": false, "patch_set": 9, "id": "5ff73747_a8ac3734", "line": 1408, "range": {"start_line": 1408, "start_character": 25, "end_line": 1408, "end_character": 30}, "updated": "2017-04-26 08:44:02.000000000", "message": "server migration", "commit_id": "b08e3dce55084dc81622a3daa7c48f7271a06212"}, {"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "0a4216e76763e7704452d133ea0aa6d7dff68870", "unresolved": false, "patch_set": 12, "id": "5f201791_e3683e88", "line": 1430, "range": {"start_line": 1430, "start_character": 18, "end_line": 1430, "end_character": 40}, "updated": "2017-06-22 08:47:11.000000000", "message": "please use \"server-migration-\" + uuid.uuid4().hex to replace random integer, the prefix might help to debug unit test issue.", "commit_id": "5547fab99108d80e9ebea190c5e022bb617a51c1"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "b0fd70a0ebb112d0651c9d0eb7745cb65eeb0b09", "unresolved": false, "patch_set": 12, "id": "5f201791_447e93af", "line": 1430, "range": {"start_line": 1430, "start_character": 18, "end_line": 1430, "end_character": 40}, "in_reply_to": "5f201791_e3683e88", "updated": "2017-06-26 00:40:01.000000000", "message": "In nova, the 'id' of migration object is defined as integer.", "commit_id": "5547fab99108d80e9ebea190c5e022bb617a51c1"}], "openstackclient/tests/unit/compute/v2/test_server_migration.py": [{"author": {"_account_id": 8276, "name": "kiwik", "email": "chenrui.momo@gmail.com", "username": "kiwik"}, "change_message_id": "0a4216e76763e7704452d133ea0aa6d7dff68870", "unresolved": false, "patch_set": 12, "id": "5f201791_03369ae7", "line": 41, "range": {"start_line": 41, "start_character": 69, "end_line": 41, "end_character": 70}, "updated": "2017-06-22 08:47:11.000000000", "message": "Not necessary, make some confusion.", "commit_id": "5547fab99108d80e9ebea190c5e022bb617a51c1"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "b0fd70a0ebb112d0651c9d0eb7745cb65eeb0b09", "unresolved": false, "patch_set": 12, "id": "5f201791_a4a1e748", "line": 41, "range": {"start_line": 41, "start_character": 69, "end_line": 41, "end_character": 70}, "in_reply_to": "5f201791_03369ae7", "updated": "2017-06-26 00:40:01.000000000", "message": "Done", "commit_id": "5547fab99108d80e9ebea190c5e022bb617a51c1"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "6a84dce3b35506a184ebaa519a1c86a89554bdda", "unresolved": false, "patch_set": 14, "id": "5f201791_a668b9b8", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 13}, "updated": "2017-06-26 13:54:56.000000000", "message": "No need to assign 'migs'.\n\n  return compute_fakes.FakeServerMigration......", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "27e8b8b7b257b30af2e83bd154156d439b130c6d", "unresolved": false, "patch_set": 14, "id": "5f201791_403d31c2", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 13}, "in_reply_to": "5f201791_a668b9b8", "updated": "2017-06-27 08:00:10.000000000", "message": "Done", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}], "releasenotes/notes/list-show-all-server-migration-types-14acdc47672c832f.yaml": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "6a84dce3b35506a184ebaa519a1c86a89554bdda", "unresolved": false, "patch_set": 14, "id": "5f201791_66450143", "line": 5, "range": {"start_line": 5, "start_character": 14, "end_line": 5, "end_character": 16}, "updated": "2017-06-26 13:54:56.000000000", "message": "two spaces....", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "27e8b8b7b257b30af2e83bd154156d439b130c6d", "unresolved": false, "patch_set": 14, "id": "5f201791_e02f9d85", "line": 5, "range": {"start_line": 5, "start_character": 14, "end_line": 5, "end_character": 16}, "in_reply_to": "5f201791_66450143", "updated": "2017-06-27 08:00:10.000000000", "message": "Done", "commit_id": "67d58384160e725e144d3990c8133c9c90f8b72e"}]}}, "openstack%2Fnova~master~I8ba52f0cd877cefc1f7d3c10d8a07a2a1c21cb34": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~Ia15f9281ed1efcb89a83f6ef426b3294754f2bc5": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 08:36:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:34:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-11 02:27:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/virt/libvirt/blockinfo.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ab3da7ec6c0aea8a88f8582e36d0297d9da632de", "unresolved": false, "patch_set": 4, "id": "df33271e_5ef48887", "line": 543, "range": {"start_line": 542, "start_character": 0, "end_line": 543, "end_character": 60}, "updated": "2020-04-08 10:23:53.000000000", "message": "I think this would probably read better if it was this function that called '_get_disk_mapping'", "commit_id": "babdf8bbc81688ffccbe66a1b7882ea351b3ae02"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "85f7ce7c851ca4c169787fcd7b989f32f94f6e28", "unresolved": false, "patch_set": 4, "id": "df33271e_d3e98f1a", "line": 543, "range": {"start_line": 542, "start_character": 0, "end_line": 543, "end_character": 60}, "in_reply_to": "df33271e_5ef48887", "updated": "2020-04-09 07:49:10.000000000", "message": "gah, great point, I've had to rebase the series below this anyway so let me respin this.", "commit_id": "babdf8bbc81688ffccbe66a1b7882ea351b3ae02"}]}}, "openstack%2Fnova~master~I6a1cebb6676b20b76e451fc3bde5ea54bbf16ff7": {"owner_id": 7166, "owner_name": "Sylvain Bauza", "owner_email": "sbauza@redhat.com", "labels": [{"value": 2, "date": "2020-04-09 17:07:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-08 16:18:04.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-08 12:24:24.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 2, "date": "2020-04-08 14:18:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "432f8181b6089ac65c0d682b673fb608ea3b8942", "unresolved": false, "patch_set": 5, "id": "df33271e_b423baa6", "line": 22, "range": {"start_line": 22, "start_character": 36, "end_line": 22, "end_character": 76}, "updated": "2020-04-02 12:18:16.000000000", "message": "i think we will need to keep this logic around for as long as we have the reshape code since we need to keep the reshape functional test until that is removed.", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f690522455b64a147f68de3cb85eaee2531cf412", "unresolved": false, "patch_set": 5, "id": "df33271e_ab421e3c", "line": 22, "range": {"start_line": 22, "start_character": 36, "end_line": 22, "end_character": 76}, "in_reply_to": "df33271e_b423baa6", "updated": "2020-04-03 10:01:03.000000000", "message": "Done", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9ad68daad9a3eab05dc26b873f323456e9abb033", "unresolved": false, "patch_set": 6, "id": "df33271e_39fd873a", "line": 24, "updated": "2020-04-07 07:58:37.000000000", "message": "Yeah, we need to be able to create a pre-condition state in the functional test that is like _before the reshape_ then trigger a reshape. Right now creating the per-condition is done by creating an instance via the API. If we don't want to keep the old code around to support that then we can try to create and instance with some deeper interface, or by mocking out some part of the new code from the libvirt layer. None of it will look nice though. :/", "commit_id": "55e0592e70cd6a1f92845ae47f25209bd2d02d24"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "be063897c3e1241ac90aed2a7a7b0ce8d9b66df0", "unresolved": false, "patch_set": 7, "id": "df33271e_4207b01d", "line": 26, "updated": "2020-04-07 09:55:17.000000000", "message": "nit it seems gerrit does not support this syntax as it does not create a clickable link on the UI.", "commit_id": "7dce3e975018662e7094fdf772ecb640580a64a4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "69ecc793c6dcdab80d38138f23f649820520fc4f", "unresolved": false, "patch_set": 7, "id": "df33271e_47305408", "line": 26, "in_reply_to": "df33271e_4207b01d", "updated": "2020-04-07 16:25:48.000000000", "message": "it was the case before... :(", "commit_id": "7dce3e975018662e7094fdf772ecb640580a64a4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "75033057ed38fe15c00a6168cdd69d3141aa26b0", "unresolved": false, "patch_set": 8, "id": "df33271e_0f092d94", "line": 9, "range": {"start_line": 9, "start_character": 59, "end_line": 9, "end_character": 70}, "updated": "2020-04-08 10:23:49.000000000", "message": "Could you reference I511d26dc6487fadfcf22ba747abd385068e975a4", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "48688a70e67b67acb03dccf3d1dc5aadd1337ce5", "unresolved": false, "patch_set": 8, "id": "df33271e_816991bf", "line": 9, "range": {"start_line": 9, "start_character": 59, "end_line": 9, "end_character": 70}, "in_reply_to": "df33271e_0f092d94", "updated": "2020-04-08 10:55:06.000000000", "message": "This would respin the whole series, can we just leave it as a comment unless I *need* to respin ?", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4a98462aa8546572d2c5e6f99261d9f0400d797f", "unresolved": false, "patch_set": 8, "id": "df33271e_a1ee55b1", "line": 9, "range": {"start_line": 9, "start_character": 59, "end_line": 9, "end_character": 70}, "in_reply_to": "df33271e_816991bf", "updated": "2020-04-08 11:15:08.000000000", "message": "Yup of course.", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "bd3109a25a6aed5f5626fa10c4027b4c4207ed0a", "unresolved": false, "patch_set": 4, "id": "df33271e_41d3a5d5", "line": 799, "updated": "2020-04-01 15:31:42.000000000", "message": "F841 local variable 'mdev_created' is assigned to but never used", "commit_id": "ddf8f600555a51a6343e8ad4b1af5c21a3fbd610"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "432f8181b6089ac65c0d682b673fb608ea3b8942", "unresolved": false, "patch_set": 5, "id": "df33271e_b9d293cf", "line": 6928, "range": {"start_line": 6927, "start_character": 12, "end_line": 6928, "end_character": 37}, "updated": "2020-04-02 12:18:16.000000000", "message": "you have already made it mandatory by making it a positional are.\n\nit can still be none but it is now mandatory to be passed", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f690522455b64a147f68de3cb85eaee2531cf412", "unresolved": false, "patch_set": 5, "id": "df33271e_8b0f5a2c", "line": 6928, "range": {"start_line": 6927, "start_character": 12, "end_line": 6928, "end_character": 37}, "in_reply_to": "df33271e_b9d293cf", "updated": "2020-04-03 10:01:03.000000000", "message": "Done", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "432f8181b6089ac65c0d682b673fb608ea3b8942", "unresolved": false, "patch_set": 5, "id": "df33271e_b9b9f379", "line": 6950, "range": {"start_line": 6949, "start_character": 10, "end_line": 6950, "end_character": 37}, "updated": "2020-04-02 12:18:16.000000000", "message": "again its a postional arg so it is mandatoy in the signiture it just can be None currently.", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f690522455b64a147f68de3cb85eaee2531cf412", "unresolved": false, "patch_set": 5, "id": "df33271e_eb1a666c", "line": 6950, "range": {"start_line": 6949, "start_character": 10, "end_line": 6950, "end_character": 37}, "in_reply_to": "df33271e_b9b9f379", "updated": "2020-04-03 10:01:03.000000000", "message": "Done", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "432f8181b6089ac65c0d682b673fb608ea3b8942", "unresolved": false, "patch_set": 5, "id": "df33271e_19629f0a", "line": 7014, "range": {"start_line": 7014, "start_character": 26, "end_line": 7014, "end_character": 33}, "updated": "2020-04-02 12:18:16.000000000", "message": "its done as part of init_host right or in general that agent start/init", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f690522455b64a147f68de3cb85eaee2531cf412", "unresolved": false, "patch_set": 5, "id": "df33271e_cb15e23e", "line": 7014, "range": {"start_line": 7014, "start_character": 26, "end_line": 7014, "end_character": 33}, "in_reply_to": "df33271e_19629f0a", "updated": "2020-04-03 10:01:03.000000000", "message": "Done", "commit_id": "441cc4cca87e47ea39f8d82086147e737f7343c4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9ad68daad9a3eab05dc26b873f323456e9abb033", "unresolved": false, "patch_set": 6, "id": "df33271e_1c17d147", "line": 791, "updated": "2020-04-07 07:58:37.000000000", "message": "_recreate_assigned_mediated_devices() is called _before_ the virt driver can trigger a reshape.\n\n_recreate_assigned_mediated_devices is called from manager.init_host:\n\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/service.py\", line 158, in start\n    self.manager.init_host()\n  File \"/home/opnfv/rtox/nova/functi\n    onal-py37/nova/compute/manager.py\", line 1395, in init_host\n    self.driver.init_host(host=self.host)\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/virt/libvirt/driver.py\", line 720, in init_host\n    print(''.join(traceback.format_stack()))\n\nhttps://github.com/openstack/nova/blob/cd16ae25c865f25dbb313976b3d8ef9372db80af/nova/service.py#L158\n\n////\n\nupdate_provide_tree with startup=True flag is called from mamanger.pre_start_hook:\n\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/service.py\", line 176, in start\n    self.manager.pre_start_hook()\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/compute/manager.py\", line 1538, in pre_start_hook\n    startup=True)\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/compute/manager.py\", line 9726, in update_available_resource\n    startup=startup)\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/compute/manager.py\", line 9650, in _update_available_resource_for_node\n    startup=startup)\n  File \"/home/opnfv/rtox/nova/functional-py37/nova/compute/resource_tracker.py\", line 843, in update_available_resource\n\nhttps://github.com/openstack/nova/blob/cd16ae25c865f25dbb313976b3d8ef9372db80af/nova/service.py#L176\n\nbottom line, init_host called first in startup and that calls the _recreate_assigned_mediated_devices() then pre_start_hook is called and that can trigger a reshape. So your assumption here is not true. :/", "commit_id": "55e0592e70cd6a1f92845ae47f25209bd2d02d24"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "53962f92ed94300910012b602ee4c0c7d0c5fd7b", "unresolved": false, "patch_set": 7, "id": "df33271e_e2e084fb", "line": 791, "updated": "2020-04-07 09:54:12.000000000", "message": "+1 much better. thanks.", "commit_id": "7dce3e975018662e7094fdf772ecb640580a64a4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "53962f92ed94300910012b602ee4c0c7d0c5fd7b", "unresolved": false, "patch_set": 7, "id": "df33271e_62911447", "line": 796, "updated": "2020-04-07 09:54:12.000000000", "message": "do we real count that here?", "commit_id": "7dce3e975018662e7094fdf772ecb640580a64a4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "69ecc793c6dcdab80d38138f23f649820520fc4f", "unresolved": false, "patch_set": 7, "id": "df33271e_a707a01d", "line": 796, "in_reply_to": "df33271e_62911447", "updated": "2020-04-07 16:25:48.000000000", "message": "you're right, it was just a wrong copy/paste", "commit_id": "7dce3e975018662e7094fdf772ecb640580a64a4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "75033057ed38fe15c00a6168cdd69d3141aa26b0", "unresolved": false, "patch_set": 8, "id": "df33271e_ea92f7f5", "line": 722, "range": {"start_line": 720, "start_character": 0, "end_line": 722, "end_character": 50}, "updated": "2020-04-08 10:23:49.000000000", "message": "Not related to this change but isn't this too late if instances with vGPUs attached have already been restarted?", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "7b06983b6865b85e0117f302f2e24b0bbc84c8a4", "unresolved": false, "patch_set": 8, "id": "df33271e_01062187", "line": 722, "range": {"start_line": 720, "start_character": 0, "end_line": 722, "end_character": 50}, "in_reply_to": "df33271e_e14fbd67", "updated": "2020-04-08 11:14:32.000000000", "message": "Yeah apologies I was thinking about CONF.resume_guests_state_on_host_boot but that doesn't happen until *after* this has been called on the driver so sysfs will be correct by the time Nova attempts to launch instances.", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "48688a70e67b67acb03dccf3d1dc5aadd1337ce5", "unresolved": false, "patch_set": 8, "id": "df33271e_e14fbd67", "line": 722, "range": {"start_line": 720, "start_character": 0, "end_line": 722, "end_character": 50}, "in_reply_to": "df33271e_ea92f7f5", "updated": "2020-04-08 10:55:06.000000000", "message": "I haven't seen the issue when testing since you need to spawn the instances after (we just talk about recreating a sysfs object)", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ae517443c5f2fdfb88d5f278816d4fdda6732fc8", "unresolved": false, "patch_set": 8, "id": "df33271e_dd1371b7", "line": 798, "updated": "2020-04-08 16:10:42.000000000", "message": "Note to other reviewers: this is the meat of the change", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ae517443c5f2fdfb88d5f278816d4fdda6732fc8", "unresolved": false, "patch_set": 8, "id": "df33271e_5dd001f8", "line": 6953, "range": {"start_line": 6948, "start_character": 0, "end_line": 6953, "end_character": 24}, "updated": "2020-04-08 16:10:42.000000000", "message": "Was this an optimization? I'm having a hard time figuring out why it was necessary to move this", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "924fdda96da0fed3c4e3cbb6a06e6d31a7aa40b6", "unresolved": false, "patch_set": 8, "id": "df33271e_ddc6d116", "line": 6953, "range": {"start_line": 6948, "start_character": 0, "end_line": 6953, "end_character": 24}, "in_reply_to": "df33271e_5dd001f8", "updated": "2020-04-08 16:15:02.000000000", "message": "I wanted the parent attribute to be first checked since now it becomes mandatory to provide it (but you can still have a None value with a non-reshaped env).\n\nI agree this is not super important, just an optimisation indeed.", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ae517443c5f2fdfb88d5f278816d4fdda6732fc8", "unresolved": false, "patch_set": 8, "id": "df33271e_1d35d946", "line": 7043, "range": {"start_line": 7043, "start_character": 31, "end_line": 7043, "end_character": 63}, "updated": "2020-04-08 16:10:42.000000000", "message": "Weird that you didn't the call to '_get_supported_vgpu_types' into this function too", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "924fdda96da0fed3c4e3cbb6a06e6d31a7aa40b6", "unresolved": false, "patch_set": 8, "id": "df33271e_fdec7590", "line": 7043, "range": {"start_line": 7043, "start_character": 31, "end_line": 7043, "end_character": 63}, "in_reply_to": "df33271e_1d35d946", "updated": "2020-04-08 16:15:02.000000000", "message": "I wanted to lookup the config only a very few times and pass down the values at once, but also see the next change, I'm now only doing it once at startup.", "commit_id": "4987e46b4c253348d884dec78e28605e04c044e5"}]}}, "openstack%2Freleases~master~Ib6dfb66f318129b11e10ab5084ccd9c6a5291856": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 1, "date": "2020-04-11 07:50:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 2, "date": "2020-04-11 10:32:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {"deliverables/ussuri/python-novaclient.yaml": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9336eb7ff396b1c3285785ce2600528f91770712", "unresolved": false, "patch_set": 4, "id": "7f423b7e_8d980d6b", "line": 17, "updated": "2020-04-11 07:50:59.000000000", "message": "Checks out. This has is the merge commit bringing in https://review.opendev.org/#/c/714956/", "commit_id": "5abfe43a61ff40f7dd6fef9447c63a3a034d3b39"}]}}, "openstack%2Frally-openstack~master~I77a3c1ec184a097ece24d563cd2e28d469d4b61e": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 08:47:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Ftacker~master~I43a8a46af3c069db2022e83854e20f0c3532f86d": {"owner_id": 17255, "owner_name": "Toshiaki Takahashi", "owner_email": "ts-takahashi@nec.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-02 13:09:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 2, "date": "2020-04-11 09:46:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 1, "date": "2020-04-02 04:58:20.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 0, "_account_id": 17255, "name": "Toshiaki Takahashi", "email": "ts-takahashi@nec.com", "username": "takahashi_ts"}], "comments": {"tacker/vnfm/infra_drivers/kubernetes/k8s/translate_outputs.py": [{"author": {"_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, "change_message_id": "c9571f7d018c296c7a89743db8814106218c7ba2", "unresolved": false, "patch_set": 1, "id": "df33271e_99fd5db3", "line": 217, "updated": "2020-03-30 16:35:37.000000000", "message": "If you use copy() to avoid the value `tosca_kube_obj.labels` is changed, I think doing update() with `update_label` is more simple like below.\n\nlabels = update_label.update(tosca_kube_obj.labels)", "commit_id": "dcca94905717f225c4e3084bceae59a9bb8f4315"}, {"author": {"_account_id": 17255, "name": "Toshiaki Takahashi", "email": "ts-takahashi@nec.com", "username": "takahashi_ts"}, "change_message_id": "524f997202b173d2aae7ed6f0fe9903bbcf2bc9d", "unresolved": false, "patch_set": 1, "id": "df33271e_f5eefb1f", "line": 217, "in_reply_to": "df33271e_99fd5db3", "updated": "2020-04-01 12:49:38.000000000", "message": "I agree that updating `update_label` is better because it is local variable.\nBut I think update() method return nothing.", "commit_id": "dcca94905717f225c4e3084bceae59a9bb8f4315"}]}}, "openstack%2Fpuppet-tripleo~master~I5fc1470e13f0f0a2df095a865757603a81d803e6": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-08 01:03:18.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-09 14:19:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "x%2Fvmware-nsx~stable%2Ftrain~Id576ea0bc2e9c3dff1f1ba683ba26f1e30dded44": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 08:17:26.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fceilometer~master~I25558ff48b6236773f765aad8d1fc150f7011aef": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 07:22:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "opendev%2Fsandbox~master~I812adf842289b0d4c22b142fb244056ac74e7e66": {"owner_id": 31412, "owner_name": "Wenping Song", "owner_email": "songwenping@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsandbox~master~Iff4c24368479deda8c529d9da7024c44b7f99aa8": {"owner_id": 31412, "owner_name": "Wenping Song", "owner_email": "songwenping@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}], "comments": {}}, "opendev%2Fsandbox~master~I127af43af547c130aca5365204b45faef4ce8ae8": {"owner_id": 31412, "owner_name": "Wenping Song", "owner_email": "songwenping@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 31412, "name": "Wenping Song", "email": "songwenping@inspur.com", "username": "songwenping"}], "comments": {}}, "opendev%2Fsandbox~master~I8c27b89a64f6d307789fe90c00171664f8aeca8d": {"owner_id": 31412, "owner_name": "Wenping Song", "owner_email": "songwenping@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsandbox~master~I95465b84bf0418fd6b105094d729aad28e43a845": {"owner_id": 31412, "owner_name": "Wenping Song", "owner_email": "songwenping@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "airship%2Farmada~master~Ia7cd800ad9aff2330c7213c9b6247e836218e08c": {"owner_id": 31006, "owner_name": "Jordan Kramer", "owner_email": "b_bowler13@yahoo.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}], "comments": {"tools/gate/playbooks/armada-deploy-k8s.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "aa5b46daa93399e94f0e5eef953d4eaa371054ed", "unresolved": false, "patch_set": 2, "id": "1fa4df85_c989cc26", "line": 20, "range": {"start_line": 19, "start_character": 0, "end_line": 20, "end_character": 33}, "updated": "2020-04-07 20:48:42.000000000", "message": "This is all you need", "commit_id": "42dde7100e6cc7e58f3276b950b9af686c147211"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "aa5b46daa93399e94f0e5eef953d4eaa371054ed", "unresolved": false, "patch_set": 8, "id": "df33271e_5cdf8339", "updated": "2020-04-07 20:48:42.000000000", "message": "The next step here is to install the Armada charts using helm commands:\n\n  helm install [CHART_PATH]", "commit_id": "35b566bbc4f4a98895b9d94114738a18bb07f843"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "aa5b46daa93399e94f0e5eef953d4eaa371054ed", "unresolved": false, "patch_set": 8, "id": "df33271e_3c2d5f46", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 28}, "updated": "2020-04-07 20:48:42.000000000", "message": "This generates a new protocol buffer for Armada, i.e. python code. We probably don't want this.", "commit_id": "35b566bbc4f4a98895b9d94114738a18bb07f843"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "aa5b46daa93399e94f0e5eef953d4eaa371054ed", "unresolved": false, "patch_set": 8, "id": "df33271e_5c2ae32b", "line": 22, "range": {"start_line": 22, "start_character": 8, "end_line": 22, "end_character": 31}, "updated": "2020-04-07 20:48:42.000000000", "message": "This installs Helm without a Kubernetes cluster. Since you have deployed K8s, you already have Helm.", "commit_id": "35b566bbc4f4a98895b9d94114738a18bb07f843"}]}}, "openstack%2Ffreezer~master~I18032bd40489c4b1c511713b0f1c5bb1aca7c1d2": {"owner_id": 28614, "owner_name": "jacky06", "owner_email": "zhang.min@99cloud.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 14509, "name": "Pierre Mathieu", "email": "pierre-arthur.mathieu@hpe.com", "username": "slashme"}, {"value": 0, "_account_id": 27822, "name": "pengyuesheng", "email": "pengyuesheng@gohighsec.com", "username": "pengyuesheng"}, {"value": 0, "_account_id": 11151, "name": "Fausto Marzi", "email": "fausto.marzi@ericsson.com", "username": "fausto.marzi"}, {"value": 0, "_account_id": 17130, "name": "melissaml", "email": "ma.lei@99cloud.net", "username": "malei"}, {"value": 2, "date": "2020-04-11 02:27:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 14340, "name": "Memo Garcia", "email": "guillermo.ramirez-garcia@hp.com", "username": "memogarcia"}, {"value": 0, "_account_id": 22405, "name": "Vitaliy Nogin", "email": "shadoff1982@gmail.com", "username": "vnogin"}, {"value": 1, "date": "2020-04-10 14:20:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28614, "name": "jacky06", "email": "zhang.min@99cloud.net", "username": "jacky06"}, {"value": 0, "_account_id": 16768, "name": "Ruslan Aliev", "email": "raliev@mirantis.com", "username": "raliev"}, {"value": 0, "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 1, "date": "2020-03-31 11:02:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 0, "_account_id": 14101, "name": "yapeng Yang", "email": "a394954369@gmail.com", "username": "yapeng"}, {"value": 0, "_account_id": 28471, "name": "yanghongyu", "email": "yang.hongyu@99cloud.net", "username": "yanghongyu"}], "comments": {}}, "openstack%2Ffreezer-api~master~I88f8351c39673d8696df3dfa75a929af1bb1003a": {"owner_id": 27822, "owner_name": "pengyuesheng", "owner_email": "pengyuesheng@gohighsec.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-16 07:56:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 1, "date": "2019-10-14 04:22:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28543, "name": "shupeng", "email": "15050873171@163.com", "username": "Vieri"}, {"value": 1, "date": "2019-10-14 08:59:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17499, "name": "Filippo Inzaghi", "email": "zhao.daqing@99cloud.net", "username": "qingszhao"}, {"value": 0, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 1, "date": "2019-10-12 18:41:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 1, "date": "2020-03-20 07:04:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fnova~master~Ic2ad1468d31b7707b7f8f2b845a9cf47d9d076d5": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-10 08:39:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/compute/api.py": [{"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "c73413cc1bf440ac9edf6cb444f5bfbb68292120", "unresolved": false, "patch_set": 16, "id": "df33271e_6850aa5f", "line": 4251, "updated": "2020-04-08 14:29:37.000000000", "message": "this is disabled by default, we're all good.", "commit_id": "88cafcf2ec9c0b69f1c590c4ca53bcd4887ca809"}]}}, "openstack%2Ffreezer-api~master~I749d6ebdef9163ffa3135778a4accbb8be5ba9e3": {"owner_id": 28614, "owner_name": "jacky06", "owner_email": "zhang.min@99cloud.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 14509, "name": "Pierre Mathieu", "email": "pierre-arthur.mathieu@hpe.com", "username": "slashme"}, {"value": 0, "_account_id": 11151, "name": "Fausto Marzi", "email": "fausto.marzi@ericsson.com", "username": "fausto.marzi"}, {"value": 2, "date": "2020-04-11 02:23:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}, {"value": 0, "_account_id": 14340, "name": "Memo Garcia", "email": "guillermo.ramirez-garcia@hp.com", "username": "memogarcia"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 0, "_account_id": 22405, "name": "Vitaliy Nogin", "email": "shadoff1982@gmail.com", "username": "vnogin"}, {"value": 0, "_account_id": 14101, "name": "yapeng Yang", "email": "a394954369@gmail.com", "username": "yapeng"}, {"value": 0, "_account_id": 16768, "name": "Ruslan Aliev", "email": "raliev@mirantis.com", "username": "raliev"}], "comments": {"freezer_api/tests/unit/cmd/test_cmd.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_5328c884", "line": 14, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v1/test_action.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_931ed05c", "line": 20, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v1/test_api_common.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_93537016", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v1/test_backup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_73586c30", "line": 21, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v1/test_job.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_73234ca8", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v1/test_session.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_534d6870", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v2/test_action.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_b33834d3", "line": 20, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v2/test_api_common.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_537608a6", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v2/test_backup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_33526414", "line": 21, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v2/test_job.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_b33dd4bc", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/sqlalchemy/v2/test_session.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_d33b38ce", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/test_elastic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_f32e3c8a", "line": 23, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/test_elasticv2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_f343dc3d", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/v1/test_jobs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_332d4495", "line": 23, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/v1/test_sessions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_1347604e", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/v2/test_jobs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_d3405838", "line": 23, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}], "freezer_api/tests/unit/v2/test_sessions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "688532ff65db5b09d9b61174bd14c561b46ebe0c", "unresolved": false, "patch_set": 1, "id": "df33271e_1332c0f2", "line": 22, "updated": "2020-04-10 05:58:08.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "c4d1a11341cec9e0a59da3def9ad9380d7d96731"}]}}, "openstack%2Fmanila~master~I51dc25889c1d1fb361f0be6f8c0aa47ca64c9aaa": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 21:30:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I48f4d966201fc8d6bd6eec0c37f1575b434310e7": {"owner_id": 30002, "owner_name": "Douglas Viroel", "owner_email": "viroel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 11:51:05.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29831, "name": "Naresh Kumar Gunjalli", "email": "NareshKumar.Gunjalli@netapp.com", "username": "nareshkumarg"}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Ftripleo-common~master~I5735cfaa5fe59eabde66b3370a2c5838ff0c4b23": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:32:45.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-04-10 14:30:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {"tripleo_common/inventories.py": [{"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9da480de1b533812dfc53ecf6e881aea48cf7519", "unresolved": false, "patch_set": 1, "id": "df33271e_214df399", "line": 57, "range": {"start_line": 56, "start_character": 0, "end_line": 57, "end_character": 61}, "updated": "2020-04-09 20:49:01.000000000", "message": "Does it more sense to only create the \"plans\" if len(self.stack_to_inv_obj_map) > 1?", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "2a6483ec649ee5e33e42611212463de465c39c95", "unresolved": false, "patch_set": 1, "id": "df33271e_41c3ceed", "line": 57, "range": {"start_line": 56, "start_character": 0, "end_line": 57, "end_character": 61}, "in_reply_to": "df33271e_214df399", "updated": "2020-04-10 10:13:59.000000000", "message": "I'm thinking we always create plans and from now on playbooks can iterate over plans, even if it's just one plan", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "4d4db8591d0dbd8b19e40eab291a95697364082c", "unresolved": false, "patch_set": 1, "id": "df33271e_228fa8cd", "line": 57, "range": {"start_line": 56, "start_character": 0, "end_line": 57, "end_character": 61}, "in_reply_to": "df33271e_41c3ceed", "updated": "2020-04-10 14:30:20.000000000", "message": "ok", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9da480de1b533812dfc53ecf6e881aea48cf7519", "unresolved": false, "patch_set": 1, "id": "df33271e_e1a82b21", "line": 107, "range": {"start_line": 106, "start_character": 0, "end_line": 107, "end_character": 55}, "updated": "2020-04-09 20:49:01.000000000", "message": "So, if there's only one plan, we'll already have the plan variable set to the desired value. So we only take action of getting rid of the plan if there's more than one.", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "2a6483ec649ee5e33e42611212463de465c39c95", "unresolved": false, "patch_set": 1, "id": "df33271e_e1b14291", "line": 107, "range": {"start_line": 106, "start_character": 0, "end_line": 107, "end_character": 55}, "in_reply_to": "df33271e_e1a82b21", "updated": "2020-04-10 10:13:59.000000000", "message": "Yes, leave 'plan' for any old playbooks that expect it (if any) but going forward plans should be used instead. Maybe should add a deprecation reno for this.\n\nNot sure what the best approach would be for plan for a multi-stack inventory. Could just leave it there, so would be plan from the Undercloud (from the first stack we process), or continue setting it to '', but I'd worry that both would lead to unpredictable behaviour, so I figured deleting it for multistack would be best.", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "7ff73ce2be5279e03f4930956dba28bdb61e5d88", "unresolved": false, "patch_set": 1, "id": "df33271e_a1429a66", "line": 107, "range": {"start_line": 106, "start_character": 0, "end_line": 107, "end_character": 55}, "in_reply_to": "df33271e_e1b14291", "updated": "2020-04-10 10:15:15.000000000", "message": "> Maybe should add a deprecation reno for this.\n\nAlthough I need to follow up with doc patches for the inventory changes so could just add a note there instead", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9da480de1b533812dfc53ecf6e881aea48cf7519", "unresolved": false, "patch_set": 1, "id": "df33271e_810b1f28", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 55}, "updated": "2020-04-09 20:49:01.000000000", "message": "If you only create the plans key if len(self.stack_to_inv_obj_map) > 1, then do you want to indent this (as you indented line 107) so that you only sort the plans key if it exists?", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "4d4db8591d0dbd8b19e40eab291a95697364082c", "unresolved": false, "patch_set": 1, "id": "df33271e_e28820c7", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 55}, "in_reply_to": "df33271e_01a54647", "updated": "2020-04-10 14:30:20.000000000", "message": "I guess I was thinking if plans was there conditionally, you'd want to reference that key conditionally too. However, as per your other comment, if it's always going to be there, then I'm less concerned. Indenting on resubmit only is probably sufficient.", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}, {"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "2a6483ec649ee5e33e42611212463de465c39c95", "unresolved": false, "patch_set": 1, "id": "df33271e_01a54647", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 55}, "in_reply_to": "df33271e_810b1f28", "updated": "2020-04-10 10:13:59.000000000", "message": "Could indent I suppose, sorting a list with one item isn't going to take very long though :-) If I push another patch I'll move it into the conditional block", "commit_id": "2afb9771f0532335e971c72c0eb206de2fc38886"}]}}, "openstack%2Fsolum-specs~master~If26e126d88b33cd45a72932d1b271f7f08d50652": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-11 01:14:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fsushy~master~I15fca41fbe715469ccc22389de9cbf526ae3f211": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 12:11:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-04-10 13:39:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fnova~master~I0e1241ae691afd2af12ef15706c454c05d9f932c": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 07:40:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 12:15:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/virt/libvirt/test_blockinfo.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2fedd18506ef0291eaa91170f01662037613cce1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_34517532", "line": 284, "range": {"start_line": 284, "start_character": 20, "end_line": 284, "end_character": 22}, "updated": "2020-01-21 17:22:26.000000000", "message": "nit: weird indentation (vim?)", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4315bdf96b2b92ec15c20f2a6f68609856e7a8f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c6cce963", "line": 284, "range": {"start_line": 284, "start_character": 20, "end_line": 284, "end_character": 22}, "in_reply_to": "3fa7e38b_34517532", "updated": "2020-01-22 12:46:16.000000000", "message": "Done", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2fedd18506ef0291eaa91170f01662037613cce1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_547511c8", "line": 290, "updated": "2020-01-21 17:22:26.000000000", "message": "Could we get some comments in here explaining what you're trying to achieve. I can grok them from the names and content, but docstrings are so much easier", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4315bdf96b2b92ec15c20f2a6f68609856e7a8f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e6c9e550", "line": 290, "in_reply_to": "3fa7e38b_547511c8", "updated": "2020-01-22 12:46:16.000000000", "message": "Done", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}], "nova/tests/unit/virt/libvirt/test_driver.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2fedd18506ef0291eaa91170f01662037613cce1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_d437c1fc", "line": 19041, "range": {"start_line": 19041, "start_character": 24, "end_line": 19041, "end_character": 36}, "updated": "2020-01-21 17:22:26.000000000", "message": "?", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4315bdf96b2b92ec15c20f2a6f68609856e7a8f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_86d271fd", "line": 19041, "range": {"start_line": 19041, "start_character": 24, "end_line": 19041, "end_character": 36}, "in_reply_to": "3fa7e38b_d437c1fc", "updated": "2020-01-22 12:46:16.000000000", "message": "Done", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2fedd18506ef0291eaa91170f01662037613cce1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_54fc310c", "line": 21885, "range": {"start_line": 21885, "start_character": 67, "end_line": 21885, "end_character": 68}, "updated": "2020-01-21 17:22:26.000000000", "message": "can you add 'new=mock.Mock()' to avoid having to pass the function parameters, since you don't seem to need them", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4315bdf96b2b92ec15c20f2a6f68609856e7a8f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e62005fb", "line": 21885, "range": {"start_line": 21885, "start_character": 67, "end_line": 21885, "end_character": 68}, "in_reply_to": "3fa7e38b_54fc310c", "updated": "2020-01-22 12:46:16.000000000", "message": "TIL thanks.", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}], "nova/virt/libvirt/blockinfo.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e78a9ed84cd7e1c7c123b1da22e2885263144e64", "unresolved": false, "patch_set": 17, "id": "df33271e_2bf53ccc", "line": 652, "updated": "2020-03-24 16:17:33.000000000", "message": "I needed some time to parse the whole get_disk_mapping(). There was two modes in the baseline:\n* rescue\n* normal\n\nAnd now we have 3 modes\n* rescue\n* normal\n* stable rescue\n\nThe stable rescue is basically the normal mode + the rescue disk at the end of the mapping.\n\nI would refactor this into 3 helpers but I won't block on this.", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "466e93c96d59734371b715d8eef639b3801b0ced", "unresolved": false, "patch_set": 17, "id": "df33271e_2150980a", "line": 652, "in_reply_to": "df33271e_1fc1832f", "updated": "2020-03-26 11:30:09.000000000", "message": "I'm happy to review such refactor as a followup", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f6225e55029e5ddfb75751cd3afdcf561a582b17", "unresolved": false, "patch_set": 17, "id": "df33271e_1fc1832f", "line": 652, "in_reply_to": "df33271e_2bf53ccc", "updated": "2020-03-25 13:19:24.000000000", "message": "That's valid and something I can definitely do in a follow up if you'd like.", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e78a9ed84cd7e1c7c123b1da22e2885263144e64", "unresolved": false, "patch_set": 17, "id": "df33271e_ebe19400", "line": 673, "range": {"start_line": 670, "start_character": 0, "end_line": 673, "end_character": 65}, "updated": "2020-03-24 16:17:33.000000000", "message": "Do we have to consider the requested bus of the rescue disk here?", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "466e93c96d59734371b715d8eef639b3801b0ced", "unresolved": false, "patch_set": 17, "id": "df33271e_a13b08c6", "line": 673, "range": {"start_line": 670, "start_character": 0, "end_line": 673, "end_character": 65}, "in_reply_to": "df33271e_bfe7b7e4", "updated": "2020-03-26 11:30:09.000000000", "message": "thanks", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f6225e55029e5ddfb75751cd3afdcf561a582b17", "unresolved": false, "patch_set": 17, "id": "df33271e_bfe7b7e4", "line": 673, "range": {"start_line": 670, "start_character": 0, "end_line": 673, "end_character": 65}, "in_reply_to": "df33271e_ebe19400", "updated": "2020-03-25 13:19:24.000000000", "message": "No, the rescue device can and will likely have a different bus to the original disks and cdroms.\n\nFor example, disks could be virtio-scsi, cdrom could be IDE but the rescue disk device is presented over USB.", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_87aa5c82", "line": 99, "range": {"start_line": 91, "start_character": 0, "end_line": 99, "end_character": 33}, "updated": "2020-04-07 16:16:21.000000000", "message": "Looks like a rebase conflict", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_ed8ccc36", "line": 99, "range": {"start_line": 91, "start_character": 0, "end_line": 99, "end_character": 33}, "in_reply_to": "df33271e_87aa5c82", "updated": "2020-04-08 14:07:22.000000000", "message": "fup I36f84109e654e2aa746c95efa62a1b45b44534e8", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_07c92c77", "line": 222, "range": {"start_line": 210, "start_character": 0, "end_line": 222, "end_character": 1}, "updated": "2020-04-07 16:16:21.000000000", "message": "Whoops", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_8d7d401e", "line": 222, "range": {"start_line": 210, "start_character": 0, "end_line": 222, "end_character": 1}, "in_reply_to": "df33271e_07c92c77", "updated": "2020-04-08 14:07:22.000000000", "message": "fup I36f84109e654e2aa746c95efa62a1b45b44534e8", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_c7a10498", "line": 700, "range": {"start_line": 700, "start_character": 22, "end_line": 700, "end_character": 39}, "updated": "2020-04-07 16:16:21.000000000", "message": "can you call this simply 'image_meta'? The current name suggests it's something more than it it", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_8d76e0d7", "line": 700, "range": {"start_line": 700, "start_character": 22, "end_line": 700, "end_character": 39}, "in_reply_to": "df33271e_379f2704", "updated": "2020-04-08 14:07:22.000000000", "message": "Right, I was just trying to break up the block from L644.", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_8db1c092", "line": 700, "range": {"start_line": 700, "start_character": 22, "end_line": 700, "end_character": 39}, "in_reply_to": "df33271e_c7a10498", "updated": "2020-04-08 14:07:22.000000000", "message": "I'd rather not, it's making it clear that this is the image_meta provided for a rescue.", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "3aa7db6524aa486ae2151f69f429c7745e43218d", "unresolved": false, "patch_set": 21, "id": "df33271e_379f2704", "line": 700, "range": {"start_line": 700, "start_character": 22, "end_line": 700, "end_character": 39}, "in_reply_to": "df33271e_c7a10498", "updated": "2020-04-08 12:48:33.000000000", "message": "we lookup the rescue device type from the information that was only passed as a rescue image property, I don't really see how this can be reusable unless we add an argument for asking which image prop we should lookup.", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_2716f0a8", "line": 709, "range": {"start_line": 709, "start_character": 59, "end_line": 709, "end_character": 72}, "updated": "2020-04-07 16:16:21.000000000", "message": "and this might make more sense as 'device_type'. A docstring (and type hints, if you could grok them) would be great.", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_a79cc05b", "line": 709, "range": {"start_line": 709, "start_character": 40, "end_line": 709, "end_character": 57}, "updated": "2020-04-07 16:16:21.000000000", "message": "ditto", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_a8ee32b1", "line": 709, "range": {"start_line": 709, "start_character": 59, "end_line": 709, "end_character": 72}, "in_reply_to": "df33271e_2716f0a8", "updated": "2020-04-08 14:07:22.000000000", "message": "fup I100584bde61cc3bc8fda06f0ff2b2c6afd1c3d61", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_082bdeea", "line": 709, "range": {"start_line": 709, "start_character": 40, "end_line": 709, "end_character": 57}, "in_reply_to": "df33271e_a79cc05b", "updated": "2020-04-08 14:07:22.000000000", "message": "As above, I'd rather not.", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2fedd18506ef0291eaa91170f01662037613cce1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_0f97869e", "line": 3375, "range": {"start_line": 3375, "start_character": 24, "end_line": 3375, "end_character": 44}, "updated": "2020-01-21 17:22:26.000000000", "message": "nit: weird indentation", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4315bdf96b2b92ec15c20f2a6f68609856e7a8f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_467559ff", "line": 3375, "range": {"start_line": 3375, "start_character": 24, "end_line": 3375, "end_character": 44}, "in_reply_to": "3fa7e38b_0f97869e", "updated": "2020-01-22 12:46:16.000000000", "message": "Done", "commit_id": "ea5aa8495a23f7776fbcc70c6764a0be21d7fd06"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e78a9ed84cd7e1c7c123b1da22e2885263144e64", "unresolved": false, "patch_set": 17, "id": "df33271e_2bc89c53", "line": 4584, "updated": "2020-03-24 16:17:33.000000000", "message": "This is also a monster sized function. Maybe a comment would help that his is the stable device rescue case.", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "f6225e55029e5ddfb75751cd3afdcf561a582b17", "unresolved": false, "patch_set": 17, "id": "df33271e_1fd6a3f2", "line": 4584, "in_reply_to": "df33271e_2bc89c53", "updated": "2020-03-25 13:19:24.000000000", "message": "ACK I can respin and add that now.", "commit_id": "baf28454915ecc3ea39a2356e7f18a8c4aba7c84"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "3aa7db6524aa486ae2151f69f429c7745e43218d", "unresolved": false, "patch_set": 21, "id": "df33271e_37356747", "line": 3410, "updated": "2020-04-08 12:48:33.000000000", "message": "++ thanks for the explanations", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f27fb2b494f46b7b2bff41dd56d03a9beeca3e92", "unresolved": false, "patch_set": 21, "id": "df33271e_a72160ff", "line": 3444, "range": {"start_line": 3444, "start_character": 8, "end_line": 3444, "end_character": 54}, "updated": "2020-04-07 16:16:21.000000000", "message": "So the presence of _either_ option will trigger this alternate rescue mode?\n\nLater: yup, that's what you said in the commit message", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "3aa7db6524aa486ae2151f69f429c7745e43218d", "unresolved": false, "patch_set": 21, "id": "df33271e_d764fb4b", "line": 3468, "range": {"start_line": 3468, "start_character": 36, "end_line": 3468, "end_character": 44}, "updated": "2020-04-08 12:48:33.000000000", "message": "mmm, why should it be unstable for ephemeral disks and not BFV instances ?", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "41fed422fe83157de88931d13570c079210420af", "unresolved": false, "patch_set": 21, "id": "df33271e_2d86b4dc", "line": 3468, "range": {"start_line": 3468, "start_character": 36, "end_line": 3468, "end_character": 44}, "in_reply_to": "df33271e_d764fb4b", "updated": "2020-04-08 14:07:22.000000000", "message": "fup I36f84109e654e2aa746c95efa62a1b45b44534e8", "commit_id": "fa92dd02d3114a11e854dc534dd4c3ee84e2e017"}]}}, "openstack%2Fnova~master~Ib5f70f4bbfde8672507adebdbc4e411b5db39bb8": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsystem-config~master~Iacd3e921464b24479db13bbf7ae998b8d8e2103d": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:34:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-10 18:32:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~Ib5f70f4bbfde8672507adebdbc4e411b5db39bb8": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}], "comments": {}}, "openstack%2Fsushy~stable%2Fussuri~I979c219b5ddc2ef709173b17a29172f18ff15cae": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:39:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fnova~master~Idfccfa9831f1df6f261a247489154492a231d832": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 2, "date": "2020-04-08 16:36:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 08:36:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 1, "date": "2020-04-08 16:45:31.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/api/validation/extra_specs/traits.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5921342be635f79e17d2217cf4e916df1882be5d", "unresolved": false, "patch_set": 3, "id": "df33271e_8197d190", "side": "PARENT", "line": 44, "range": {"start_line": 41, "start_character": 0, "end_line": 44, "end_character": 18}, "updated": "2020-04-08 10:57:15.000000000", "message": "This is dead code because we don't have a trait parameter.", "commit_id": "86d09128c17aa1b051e4a50930b49e5376f0c90d"}]}}, "openstack%2Fsushy~stable%2Fussuri~Ib7eb38986e3d0c60e2a7af1e28800fda278fccd7": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:39:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fpython-novaclient~master~I7885b8558db7657abbfe1f45877f52e947f5f655": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 20:15:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {}}, "openstack%2Fpython-zunclient~stable%2Fussuri~Ic6eb27cb018eec6d476fbbe17f29ac020ce83b71": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 22:38:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpython-zunclient~master~Ic6eb27cb018eec6d476fbbe17f29ac020ce83b71": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 21:48:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "airship%2Fmaas~master~Id395e8ee0315b15d408c8bcb2bd531b9f08cd44a": {"owner_id": 24816, "owner_name": "Anthony Bellino", "owner_email": "ab2434@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17119, "name": "Dmitrii Kabanov", "email": "dmitrii.kabanov@att.com", "username": "dk370c"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}], "comments": {"charts/maas/templates/etc/_curtin_userdata.tpl": [{"author": {"_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, "change_message_id": "ae7308a2c855f4c8276ca8cc288957a2353b1f33", "unresolved": false, "patch_set": 1, "id": "df33271e_2d652f1e", "line": 102, "range": {"start_line": 102, "start_character": 11, "end_line": 102, "end_character": 65}, "updated": "2020-04-07 17:49:28.000000000", "message": "https://github.com/openstack/openstack-helm-infra/blob/master/ceph-osd/templates/bin/osd/ceph-volume/_common.sh.tpl#L202-L222\n\ncan you please add extra steps to format the disks like what is mentioned in above function ?", "commit_id": "dc524161191692db5816dc6981e98c79aac61827"}]}}, "openstack%2Fpython-dracclient~stable%2Fqueens~Ifc63ca7d9a30378e75b160739b709a1264ffe550": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8068, "name": "David Paterson", "email": "davpat2112@gmail.com", "username": "davpat2112"}, {"value": 2, "date": "2020-04-10 18:05:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 0, "_account_id": 29863, "name": "Monica Pardhi", "email": "mpardhi1991@gmail.com", "username": "mpardhi"}, {"value": 2, "date": "2020-04-10 21:50:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Fcharm-vault~master~I6e67f217690f69f3d6f282aba0cba4634de70bee": {"owner_id": 30561, "owner_name": "Peter Matulis", "owner_email": "peter.matulis@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 21:27:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}], "comments": {"src/README.md": [{"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "b3285011041be4d8bc7b151059ee98be32ad56e8", "unresolved": false, "patch_set": 1, "id": "df33271e_9c60a603", "line": 30, "updated": "2020-04-09 21:50:45.000000000", "message": "How about \"relate\" rather than \"hook it up\"?", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "256d6cecbf8c81aa6623004e3784bb96cbf480b3", "unresolved": false, "patch_set": 1, "id": "7f423b7e_01bfacfb", "line": 30, "in_reply_to": "df33271e_9c60a603", "updated": "2020-04-10 18:57:02.000000000", "message": "I chose a general term because for MySQL 8 I'm also deploying something, but I'll use \"relate\".", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "b3285011041be4d8bc7b151059ee98be32ad56e8", "unresolved": false, "patch_set": 1, "id": "df33271e_7c5de245", "line": 41, "updated": "2020-04-09 21:50:45.000000000", "message": "The section on postgresql and the need for version 9.x should probably be kept.", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "256d6cecbf8c81aa6623004e3784bb96cbf480b3", "unresolved": false, "patch_set": 1, "id": "7f423b7e_c15e6444", "line": 41, "in_reply_to": "df33271e_7c5de245", "updated": "2020-04-10 18:57:02.000000000", "message": "PostgreSQL 10 works for me on Bionic with Vault.", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "b3285011041be4d8bc7b151059ee98be32ad56e8", "unresolved": false, "patch_set": 1, "id": "df33271e_3c3d1add", "line": 57, "updated": "2020-04-09 21:50:45.000000000", "message": "I know you are using live data as an example but that could be confusing here. They need to get their versio of the VAULT_TOKEN.", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "b3285011041be4d8bc7b151059ee98be32ad56e8", "unresolved": false, "patch_set": 1, "id": "df33271e_1c1bf680", "line": 59, "updated": "2020-04-09 21:50:45.000000000", "message": "Same with KEY-1, etc, there is no indication what that points to.", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "b3285011041be4d8bc7b151059ee98be32ad56e8", "unresolved": false, "patch_set": 1, "id": "df33271e_fc1f3269", "line": 62, "updated": "2020-04-09 21:50:45.000000000", "message": "Same", "commit_id": "1030deb385c5faaa90a13f42b71920ea857dd439"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "474d34a745ad56a6e4e9ed424854ac02fb445214", "unresolved": false, "patch_set": 2, "id": "7f423b7e_4419c286", "line": 30, "updated": "2020-04-10 21:07:10.000000000", "message": "I am not sure the distinction of cloud's database vs separate database is helpful here.\n\nThen relate it to either MySQL or PostgresSQL.", "commit_id": "b6cd392ba3d7dbb979e23b34bcca1cca2e033bdb"}]}}, "openstack%2Fpython-dracclient~stable%2Fstein~Ifc63ca7d9a30378e75b160739b709a1264ffe550": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8068, "name": "David Paterson", "email": "davpat2112@gmail.com", "username": "davpat2112"}, {"value": 2, "date": "2020-04-10 18:10:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 0, "_account_id": 29863, "name": "Monica Pardhi", "email": "mpardhi1991@gmail.com", "username": "mpardhi"}, {"value": 2, "date": "2020-04-10 21:04:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I87ca65691dfbac84349e8af24d2f36f1db1c8be1": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 16:50:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fkolla-ansible~master~Ieed404e17e8a9829f38c03f7ee7fdb3caa3919e8": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "_account_id": 22076, "name": "Kevin Zhao", "email": "kevin.zhao@linaro.org", "username": "KevinZhao"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-10 16:50:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Foctavia~stable%2Fqueens~I611d9cd5a519abc6a330ec2c46a2f5a1fdb89313": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foctavia~stable%2Fqueens~I335287da66524d026f0c42086d885b478c568bbd": {"owner_id": 1131, "owner_name": "Brian Haley", "owner_email": "haleyb.dev@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30657, "name": "Paul Peereboom", "email": "paulpeereboom@hotmail.com", "username": "ppeereb"}], "comments": {}}, "openstack%2Foctavia~stable%2Fqueens~I2346c8a3f2fa4b4eb8a004b4aaab93986228c371": {"owner_id": 23567, "owner_name": "Luis Tomas Bolivar", "owner_email": "ltomasbo@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2019-01-08 21:23:48.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I87a2e83beadfce3b5078c2f75c6f1bfcc3d457cd": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 21:02:04.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-09 15:20:43.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-09 16:37:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-04-09 16:00:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}], "comments": {"deployment/nova/nova-compute-container-puppet.yaml": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "d2a6d22fb13d02f43d05de69f588bf64023d3f54", "unresolved": false, "patch_set": 1, "id": "df33271e_3932515f", "line": 1100, "updated": "2020-04-09 16:01:40.000000000", "message": "Dave Wilde and I were in the process of adding a docker path for the tasks below so that they didn't fail on the system units.\n\nBut it doesn't sound like it would be overly useful since docker isn't supported.", "commit_id": "35ca5b43845db924c9dd554eb0c30bfbd135cd5b"}]}}, "openstack%2Fcinder~driverfixes%2Fnewton~Iadf537521af93bbd28452a54e0e70e7ed18f606c": {"owner_id": 21129, "owner_name": "Alan Bishop", "owner_email": "abishop@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4599e2bee0b4c1c29e61d7fa6584330a94dd4a84", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_89989669", "line": 13, "range": {"start_line": 10, "start_character": 2, "end_line": 13, "end_character": 0}, "updated": "2019-12-02 15:50:30.000000000", "message": "Job openstack-tox-pep8 in openstack/cinder is not permitted to shadow job openstack-tox-pep8 in openstack/openstack-zuul-jobs", "commit_id": "81b8803c1cef810b91bf0087dfd614c5f65e1756"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4599e2bee0b4c1c29e61d7fa6584330a94dd4a84", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_299f2252", "line": 17, "range": {"start_line": 14, "start_character": 2, "end_line": 17, "end_character": 0}, "updated": "2019-12-02 15:50:30.000000000", "message": "Job openstack-tox-py27 in openstack/cinder is not permitted to shadow job openstack-tox-py27 in openstack/openstack-zuul-jobs", "commit_id": "81b8803c1cef810b91bf0087dfd614c5f65e1756"}]}}, "opendev%2Fsystem-config~master~I8d10cdbc89d9e509fa0c688345f5f462ccb539e6": {"owner_id": 5545, "owner_name": "matthew wagoner", "owner_email": "zxkuqyb@gmail.com", "labels": [{"value": 1, "date": "2020-04-10 17:42:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:37:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-10 17:46:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "opendev%2Fbase-jobs~master~I8cb7d8e81472bf65f5802358d4c1000fa168547e": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 2, "date": "2020-04-10 17:04:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 19:09:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~Ifde7abbe9a328cf53f4d9980067d0c0a0d380369": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~I727389df69c92bae9b0527fe8714df1763e540fb": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 19:09:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Ftrain~Ife14dbe04dd11db44a944f98373f63e01dfbb8d8": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:44:21.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-09 18:13:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-09 14:26:50.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Ftrain~I9c84a48f56ac372ad612e2cf68533e256117eff1": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 2, "date": "2020-04-09 14:38:50.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 1, "date": "2020-04-09 12:42:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 1, "date": "2020-04-09 09:24:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 2, "date": "2020-04-09 14:28:55.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I6302cbd971ee0f82b21630f3a0f56a9ca9a18658": {"owner_id": 25402, "owner_name": "Francesco Pantano", "owner_email": "fpantano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 11:24:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-04-10 14:11:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "a433de51ae4781a11b2e1d142ac173f2f5367ded", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e36cde06", "line": 7, "updated": "2020-02-03 16:25:50.000000000", "message": "I agree with the goal but less with that of using a boolean to control the behavior because it goes against the principle of controlling this via resource registry\n\nUnfortunately services in heat don't have visibility over the registry itself\n\nI guess alternatively we could split them in different heat services and output the content into multiple/separate ansible variables which we actually merge in tripleo-ansible?", "commit_id": "3edb168877488f8c7440751aeaa6ee39c96d4f7d"}], "deployment/ceph-ansible/ceph-rgw.yaml": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "984247cc1d8f692b7eafa5de34220fea1131b304", "unresolved": false, "patch_set": 9, "id": "df33271e_eb6b8681", "line": 98, "updated": "2020-04-03 10:08:48.000000000", "message": "I think we're missing rgw_trust_forwarded_https: 'true'", "commit_id": "95a1f4e4c1c3bf0257a0cb23350ba7ea924ced68"}], "environments/ceph-ansible/ceph-rgw.yaml": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "5178c793bc29e2974339e2fb242919b5f18779ef", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_033fbadf", "line": 8, "updated": "2020-02-03 16:26:35.000000000", "message": "there is also a problem with parameter sticking into heat for the entire lifecycle of the stack unless they are reset to a different value ... hence removing it doesn't revert it back to its default (false)", "commit_id": "3edb168877488f8c7440751aeaa6ee39c96d4f7d"}]}}, "openstack%2Ftripleo-common~stable%2Ftrain~I6108aebf49a4bbc98394987f56dce6bcbe521b3a": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:44:17.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-09 18:15:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-09 14:26:47.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {}}, "openstack%2Fnova~master~I1c74d772e33de9036037e767197a0bb15b127cd7": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:16:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:44:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Frally-openstack~master~I5bf9ffa2a165fdcc0aa02d1beeedeca6aedd7bd8": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:20:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_swift~stable%2Ftrain~I5a0e25f027856d289036dbf3afbbf36732cdc621": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_swift~stable%2Ftrain~Id139d689592638df006d3e476592d651004dcd76": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": {}, "comments": {}}, "openstack%2Fopenstack-ansible-os_swift~master~Id139d689592638df006d3e476592d651004dcd76": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": -1, "date": "2020-04-10 18:43:27.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "opendev%2Fsystem-config~master~Id57113fd5543e5c3639f6684da27275893e55bc8": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:15:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-09 22:03:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 18:57:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"playbooks/roles/etherpad/templates/settings.json.j2": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "d29c40014fe365c9cd2a9ed1c92e7abd2c3bcfd8", "unresolved": false, "patch_set": 2, "id": "df33271e_d75169db", "line": 32, "updated": "2020-04-09 22:03:33.000000000", "message": "We can do this?!  awesome!", "commit_id": "f7300215c7100ce2f0e03ed91ae9509fe06f55a3"}]}}, "openstack%2Fironic~stable%2Ftrain~I8c595830b8c7974c651a9e524b57a6540e4f3d1f": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 16:58:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-09 08:00:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 1, "date": "2020-04-08 20:54:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21909, "name": "Bob Fournier", "email": "bfournie@redhat.com", "username": "bfournie"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}], "comments": {"ironic/common/neutron.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "c987b5eea21be74af974948506abf5e0bda1751b", "unresolved": false, "patch_set": 1, "id": "df33271e_8507fdc9", "line": 15, "updated": "2020-04-07 13:03:58.000000000", "message": "netaddr is not a dependency of ironic.. we're probably pull it in indirectly, but it's nonetheless problematic.", "commit_id": "c46cdac27894d1f9a3563c50255fbb2532150b9c"}], "releasenotes/notes/dhcpv6-stateful-address-count-0f94ac6a55bd9e51.yaml": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "c987b5eea21be74af974948506abf5e0bda1751b", "unresolved": false, "patch_set": 1, "id": "df33271e_051c8d11", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 8}, "updated": "2020-04-07 13:03:58.000000000", "message": "It's weird that we're backporting it, despite it declared a feature. If it fixes an issue (I suspect it does), we need to rework the release note (probably do it on master and squash the backports).", "commit_id": "c46cdac27894d1f9a3563c50255fbb2532150b9c"}]}}, "openstack%2Fopenstack-ansible-os_swift~master~I5a0e25f027856d289036dbf3afbbf36732cdc621": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I6f48aaf198cbfba8d8099c84aa3d769767bdd0ee": {"owner_id": 8449, "owner_name": "Marios Andreou", "owner_email": "marios@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-10 11:08:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-04-10 08:29:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 0, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 4571, "name": "Steve Baker", "email": "sbaker@redhat.com", "username": "steve-stevebaker"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "192bf5392046f00e0fdfb354f81f1d7b4f2d90de", "unresolved": false, "patch_set": 1, "id": "df33271e_25bf7aaa", "line": 11, "updated": "2020-04-02 08:42:20.000000000", "message": "posted this after reviewing https://review.opendev.org/#/c/713753/3", "commit_id": "b37d5e29ddda92c96a74c872046895c163c4eb22"}], "roles/repo-setup/defaults/main.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "0d381111f939ac1c7873cedf4aba4de02a20dd5a", "unresolved": false, "patch_set": 1, "id": "df33271e_1a43ad43", "line": 66, "updated": "2020-04-02 13:24:14.000000000", "message": "see ykarel comments at \nhttps://review.opendev.org/#/c/713753/3/roles/repo-setup/tasks/get-dlrn-hash.yml@7\n\nlets add ^$ into those\n\n16:23 < marios> ykarel: yeah i see what you mean by $ will help \n16:23 < openstackgerrit> Takashi Kajinami proposed openstack/puppet-tripleo master: Autonatically set memcache_servers for keystone \n                         cache  https://review.opendev.org/716999\n16:23 < marios> ykarel: i can 'fix' in the followup (my patch)", "commit_id": "b37d5e29ddda92c96a74c872046895c163c4eb22"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "ea0578df4cc113ba79fe25f102cad801dd49f7f6", "unresolved": false, "patch_set": 2, "id": "df33271e_9ad5fd1e", "line": 66, "range": {"start_line": 66, "start_character": 12, "end_line": 66, "end_character": 13}, "updated": "2020-04-02 13:29:32.000000000", "message": "16:24 < ykarel> marios, also that is not commit hash, more good to use aggregate_hash\n16:26 < ykarel> marios, yes i mean for name of expected_commit_hash_regex: \"[a-zA-Z0-9]{32}$\"\n16:26 < ykarel> also use ^ as start\n16:26 < ykarel> else it will not be strict\n16:26 < ykarel> expected_agg_hash_regex: \"^[a-zA-Z0-9]{32}$\"\n16:27 < ykarel> like ^^ or aggregate_hash instead of agg_hash\n16:28 < marios> ykarel: ack", "commit_id": "4a8430a54f44943b27aeb4cf4906473ec0c60820"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "6b2ffa2dfb9c95f0648029941ea3e73336e9c81a", "unresolved": false, "patch_set": 5, "id": "df33271e_7c0c6693", "line": 66, "updated": "2020-04-03 06:25:57.000000000", "message": "for expected_aggregate_hash_regex we need ^ in beginning as this is subset of other regex. In last comment i mentioned only expected_commit_distro_hash_regex.", "commit_id": "9b9fc1a06494d8b1ae5570f2c1bce872d2e7ff08"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "6f80f118eb2132a133eef87a4a2c03d45c558520", "unresolved": false, "patch_set": 5, "id": "df33271e_5b5ebbe9", "line": 66, "in_reply_to": "df33271e_7c0c6693", "updated": "2020-04-03 16:05:53.000000000", "message": "ack 'full match' if its the aggregate gotcha", "commit_id": "9b9fc1a06494d8b1ae5570f2c1bce872d2e7ff08"}], "roles/repo-setup/tasks/get-dlrn-hash-newest.yml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "ba72852a77024e385b1009819f7b809cf8c32716", "unresolved": false, "patch_set": 3, "id": "df33271e_e423cb54", "line": 32, "range": {"start_line": 32, "start_character": 34, "end_line": 32, "end_character": 73}, "updated": "2020-04-02 14:58:20.000000000", "message": "this will not work with \"^[a-zA-Z0-9]{40}_[a-zA-Z0-9]{8}$\" as baseurl do not start with commit_distro_hash it just ends with it. for commit_distro_hash case u can remove ^$", "commit_id": "f5a7d7f05863016379206b6ffba08bd2fc067135"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "dcbdb3483abecdfc3b57f845f755e2922c389216", "unresolved": false, "patch_set": 3, "id": "df33271e_7c0d86e6", "line": 32, "range": {"start_line": 32, "start_character": 34, "end_line": 32, "end_character": 73}, "in_reply_to": "df33271e_e423cb54", "updated": "2020-04-03 05:54:13.000000000", "message": "Done", "commit_id": "f5a7d7f05863016379206b6ffba08bd2fc067135"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "88b73bb84f8de6785786cfa8499d9c83edaafad0", "unresolved": false, "patch_set": 6, "id": "df33271e_8895048a", "line": 32, "range": {"start_line": 32, "start_character": 34, "end_line": 32, "end_character": 73}, "updated": "2020-04-09 17:18:08.000000000", "message": "You miss the quotes, probalby you want \"| quote\", see https://docs.ansible.com/ansible/latest/user_guide/playbooks_filters.html", "commit_id": "97a4242f1a4007c2396d51897bdb2af2cf79fedb"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "cf15134469160f989541cefad1059b4a7e9f54ae", "unresolved": false, "patch_set": 6, "id": "df33271e_f6ec6abc", "line": 32, "range": {"start_line": 32, "start_character": 34, "end_line": 32, "end_character": 73}, "in_reply_to": "df33271e_8895048a", "updated": "2020-04-10 08:23:13.000000000", "message": "hmm... nice catch ... i was wondering about just adding \" but looks like it doesn't work as nicely (that leads to escaped \\\"):\n\nwith \n\ngrep baseurl | grep -Eo \"{{ expected_commit_distro_hash_regex }}\"$\n\n\nTASK [debug] *********************************************************************************************\nok: [127.0.0.1] => {\n    \"a_fact\": \"curl -s --fail --show-error ${HOME}/Downloads/playbook/play.yaml \\\\\\n| grep baseurl | grep -Eo \\\"[a-zA-Z0-9]{40}_[a-zA-Z0-9]{8}$\\\"\\n\"\n}\n\n\nbut with  | quote its nicer \n\n\n\n\nTASK [debug] *********************************************************************************************\nok: [127.0.0.1] => {\n    \"a_fact\": \"curl -s --fail --show-error ${HOME}/Downloads/playbook/play.yaml \\\\\\n| grep baseurl | grep -Eo '[a-zA-Z0-9]{40}_[a-zA-Z0-9]{8}$'\\n\"\n}", "commit_id": "97a4242f1a4007c2396d51897bdb2af2cf79fedb"}]}}, "openstack%2Ftripleo-common~master~Ia53288ded108a21c129c41dc257fe6285f58a9c6": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:16:31.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:02:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-04-09 12:43:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fopenstack-ansible-specs~master~I23a2d62a8853f01e8574ef37b5ee1ac2ee09acd0": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 18:21:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-10 09:50:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fpython-dracclient~stable%2Ftrain~Ifc63ca7d9a30378e75b160739b709a1264ffe550": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8068, "name": "David Paterson", "email": "davpat2112@gmail.com", "username": "davpat2112"}, {"value": 2, "date": "2020-04-10 18:07:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 0, "_account_id": 29863, "name": "Monica Pardhi", "email": "mpardhi1991@gmail.com", "username": "mpardhi"}, {"value": 2, "date": "2020-04-10 17:08:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Freleases~master~I960cc50fbca0410bbcffa3dc476fb0911c458d5d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:56:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-10 17:47:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "jjb%2Fpython-jenkins~master~I795000a638d518d0247572318c5dbee068239b87": {"owner_id": 31785, "owner_name": "Kazuhiro Suzuki", "owner_email": "ksauzzmsg@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"tests/test_script.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fefdf9c41ec6384e40866a9be6def6ece92460c0", "unresolved": false, "patch_set": 1, "id": "7f423b7e_be5ed942", "line": 29, "updated": "2020-04-10 17:56:37.000000000", "message": "linters: E303 too many blank lines (2)", "commit_id": "d871df9a4f98eddb7b57b4a8bc3ec7cda8e085b0"}]}}, "jjb%2Fpython-jenkins~master~I2c7744138ff9651c19f128918d5a38461ecffe68": {"owner_id": 31785, "owner_name": "Kazuhiro Suzuki", "owner_email": "ksauzzmsg@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"tests/test_script.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "024098fe171764e61ef077f410b290b54763655f", "unresolved": false, "patch_set": 1, "id": "7f423b7e_1e50ad32", "line": 29, "updated": "2020-04-10 17:56:08.000000000", "message": "linters: E303 too many blank lines (2)", "commit_id": "89056dbfa845d52ae0d031877b861efaec30620f"}]}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~Ib1c1eca68630f08de44aec29b6f6edac5e554f16": {"owner_id": 23804, "owner_name": "Daniel Alvarez", "owner_email": "dalvarez@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 08:23:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-04-09 08:23:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "x%2Fnetworking-mlnx~master~I1a5b5ab572b868b82d56bc6e4d3d9ccc6215a4e8": {"owner_id": 22948, "owner_name": "Hamdy Khader", "owner_email": "hamdyk@mellanox.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, {"value": 2, "date": "2019-11-14 09:26:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}], "comments": {"networking_mlnx/db/models/sdn_journal_db.py": [{"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "de6740855f81f0d6af0abdee3c96c6bd886f47b2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_eba6ec0f", "line": 23, "updated": "2019-11-11 17:10:13.000000000", "message": "un-needed change ?", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "977342fa6500ab7958bdc7c8cf752974d8aecd61", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9b769f0c", "line": 23, "in_reply_to": "3fa7e38b_eba6ec0f", "updated": "2019-11-12 11:20:13.000000000", "message": "yes", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}], "networking_mlnx/plugins/ml2/drivers/sdn/constants.py": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "097a58054cc4ae21d6a142b9510d3fa11cc43e10", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_75b97913", "line": 47, "range": {"start_line": 47, "start_character": 0, "end_line": 47, "end_character": 29}, "updated": "2019-11-11 14:36:49.000000000", "message": "remove this", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "977342fa6500ab7958bdc7c8cf752974d8aecd61", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_0070fe3f", "line": 47, "range": {"start_line": 47, "start_character": 0, "end_line": 47, "end_character": 29}, "in_reply_to": "3fa7e38b_75b97913", "updated": "2019-11-12 11:20:13.000000000", "message": "Done", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}], "networking_mlnx/plugins/ml2/drivers/sdn/sdn_mech_driver.py": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "e9b8d4a1d508b337f4e35b8865ac77e88f63a6db", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7a440848", "line": 39, "range": {"start_line": 39, "start_character": 0, "end_line": 39, "end_character": 78}, "updated": "2019-11-11 12:39:45.000000000", "message": "why do read file of mlnx agent?", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "864085bc951b5710133923bb5b8277f2d844973b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_dad97c56", "line": 39, "range": {"start_line": 39, "start_character": 0, "end_line": 39, "end_character": 78}, "in_reply_to": "3fa7e38b_7a440848", "updated": "2019-11-11 14:05:08.000000000", "message": "Done", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "e9b8d4a1d508b337f4e35b8865ac77e88f63a6db", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9a3d44be", "line": 42, "range": {"start_line": 42, "start_character": 0, "end_line": 42, "end_character": 29}, "updated": "2019-11-11 12:39:45.000000000", "message": "self: can be remove using neutron-lib DHCP_OPT_CLIENT_ID_NUM", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "e9b8d4a1d508b337f4e35b8865ac77e88f63a6db", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_da6c1cd2", "line": 91, "range": {"start_line": 90, "start_character": 4, "end_line": 91, "end_character": 72}, "updated": "2019-11-11 12:39:45.000000000", "message": "this is wrong you should use bind_normal_ports_physnets. you can't read other mechanisms config", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "864085bc951b5710133923bb5b8277f2d844973b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fadeb83c", "line": 91, "range": {"start_line": 90, "start_character": 4, "end_line": 91, "end_character": 72}, "in_reply_to": "3fa7e38b_da6c1cd2", "updated": "2019-11-11 14:05:08.000000000", "message": "Done", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "e9b8d4a1d508b337f4e35b8865ac77e88f63a6db", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9a66a4ee", "line": 201, "updated": "2019-11-11 12:39:45.000000000", "message": "unrelated change", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "864085bc951b5710133923bb5b8277f2d844973b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5affccaa", "line": 201, "in_reply_to": "3fa7e38b_9a66a4ee", "updated": "2019-11-11 14:05:08.000000000", "message": "Done", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "de6740855f81f0d6af0abdee3c96c6bd886f47b2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_8b1e580b", "line": 39, "updated": "2019-11-11 17:10:13.000000000", "message": "neutron-lib defines that in:\napi/definitions/provier_net.py:PHYSICAL_NETWORK", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "977342fa6500ab7958bdc7c8cf752974d8aecd61", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c0066686", "line": 39, "in_reply_to": "3fa7e38b_8b1e580b", "updated": "2019-11-12 11:20:13.000000000", "message": "Done", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "de6740855f81f0d6af0abdee3c96c6bd886f47b2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_0be6e84b", "line": 86, "range": {"start_line": 86, "start_character": 4, "end_line": 86, "end_character": 64}, "updated": "2019-11-11 17:10:13.000000000", "message": "for a fabric that:\n\na. uses external DHCP services\nb. does not require routing services\n\nit is not necessary to specify that fabric in bind_normal_ports_physnets.\n\nalso it is not clear from the description of the configuration that these map to IB fabric (although today they do).", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "f28b66fdd1d300573a101906a82ff865c1bb9439", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e642a10f", "line": 86, "range": {"start_line": 86, "start_character": 4, "end_line": 86, "end_character": 64}, "in_reply_to": "3fa7e38b_0be6e84b", "updated": "2019-11-11 18:06:11.000000000", "message": "so I think the name of is misleading it should be ib_physnet and we should have a parameter where to bind_normal_port (it Ib specify). Currently we can bind baremetal port or normal port for IB and I don't think it will change. But do that change will cause deployment change we don't want to do now.\nSo we need to improve the description of bind_normal_ports_physnets.", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "de6740855f81f0d6af0abdee3c96c6bd886f47b2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_6beafcd8", "line": 442, "range": {"start_line": 438, "start_character": 5, "end_line": 442, "end_character": 35}, "updated": "2019-11-11 17:10:13.000000000", "message": "as this entails a default behaviour of ETH fabric, can we have a unit test validating that ?\n\nthis will make sure that in the future this behaviour doesnt change \"accidently\"", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "977342fa6500ab7958bdc7c8cf752974d8aecd61", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_1bdaaf78", "line": 442, "range": {"start_line": 438, "start_character": 5, "end_line": 442, "end_character": 35}, "in_reply_to": "3fa7e38b_6beafcd8", "updated": "2019-11-12 11:20:13.000000000", "message": "Done", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "3582208546841ff6d0241c14696342cb16ee5fb8", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1b393ace", "line": 436, "updated": "2019-11-13 14:27:47.000000000", "message": "I would add a comment here specifying that bind_normal_ports_physnetns actually represent infiniband physnets.", "commit_id": "0bf78b6f9c4725d50f7a062e82cf9f301dc6a20f"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "312b9492de4f1f6f340fddc49b603fe2b84d3daa", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_da3e2e8a", "line": 436, "in_reply_to": "3fa7e38b_1b393ace", "updated": "2019-11-14 09:09:47.000000000", "message": "Done", "commit_id": "0bf78b6f9c4725d50f7a062e82cf9f301dc6a20f"}], "networking_mlnx/tests/unit/db/test_db.py": [{"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "de6740855f81f0d6af0abdee3c96c6bd886f47b2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2bd5e41b", "line": 163, "updated": "2019-11-11 17:10:13.000000000", "message": "can we add a test-case where a row for a specific fabric does not exist ?", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "977342fa6500ab7958bdc7c8cf752974d8aecd61", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_db6ad77f", "line": 163, "in_reply_to": "3fa7e38b_2bd5e41b", "updated": "2019-11-12 11:20:13.000000000", "message": "Done", "commit_id": "52f144906dd3c51324735561ab60ee4ba788f673"}], "requirements.txt": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "e9b8d4a1d508b337f4e35b8865ac77e88f63a6db", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7a5de813", "line": 25, "range": {"start_line": 22, "start_character": 0, "end_line": 25, "end_character": 62}, "updated": "2019-11-11 12:39:45.000000000", "message": "this should be in separate commit", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "864085bc951b5710133923bb5b8277f2d844973b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bac9207a", "line": 25, "range": {"start_line": 22, "start_character": 0, "end_line": 25, "end_character": 62}, "in_reply_to": "3fa7e38b_7a5de813", "updated": "2019-11-11 14:05:08.000000000", "message": "Done", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}, {"author": {"_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}, "change_message_id": "284382938a00bdca87c1a38fe225347ac754a2b3", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fa479876", "line": 25, "range": {"start_line": 22, "start_character": 0, "end_line": 25, "end_character": 62}, "in_reply_to": "3fa7e38b_bac9207a", "updated": "2019-11-11 14:06:34.000000000", "message": "in this commit:\nhttps://review.opendev.org/#/c/693699/\n\nwhich is the parent of this commit now.", "commit_id": "af70a65b3fbb2730fc9b59beeadf0f7fb5714dee"}]}}, "openstack%2Freleases~master~I997c92789b8a7bd388739c74058e77e65c8f8ad0": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-10 17:41:51.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 2, "date": "2020-04-10 17:44:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fairshipctl~master~Ia4da5b261e7cd518d446896b72c810421877472a": {"owner_id": 28690, "owner_name": "Sirajudeen", "owner_email": "sirajudeen.yasin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 1, "date": "2020-04-10 15:22:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-04-09 16:22:52.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 2, "date": "2020-04-10 17:28:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 9079, "name": "Sreejith P", "username": "Hamerins", "inactive": true}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-04-10 13:35:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "75e4d44317f797dce2c61afe063261236a374d6b", "unresolved": false, "patch_set": 7, "id": "df33271e_6a4e7038", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 8}, "updated": "2020-04-02 06:42:58.000000000", "message": "Remove this since you've already specified Relates-To", "commit_id": "a82a378daa0e3a9a20084ac33b5e340e0c199a98"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "8b75b564a83c200820deba27feb19ad7d2ca7715", "unresolved": false, "patch_set": 9, "id": "df33271e_5fa6b410", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 81}, "updated": "2020-04-03 06:52:29.000000000", "message": "wrap commit message lines in 72 characters", "commit_id": "0d46a5377db3d310f938439ebf4e32cc6901b196"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "0a73cc729564131c0347fa3521ba3f1da00e0a08", "unresolved": false, "patch_set": 9, "id": "df33271e_84f10805", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 81}, "in_reply_to": "df33271e_5fa6b410", "updated": "2020-04-03 13:26:29.000000000", "message": "Done", "commit_id": "0d46a5377db3d310f938439ebf4e32cc6901b196"}], "tools/add_license.sh": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "8fa609b2384451311dd679491573d3a21bce9bf8", "unresolved": false, "patch_set": 4, "id": "df33271e_91c17657", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 42}, "updated": "2020-04-01 20:34:42.000000000", "message": "Could we exclude the manifests directory? Some of those files are upstream resources, and we may not have permission to license them.", "commit_id": "86a7194057176d8005829e64b9215a850076c7c2"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "a5e28d311179c02fe612ceb3226a43e6c935173a", "unresolved": false, "patch_set": 4, "id": "df33271e_43671fea", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 42}, "in_reply_to": "df33271e_91c17657", "updated": "2020-04-01 23:13:52.000000000", "message": "> Could we exclude the manifests directory? Some of those files are\n > upstream resources, and we may not have permission to license them.\n\nDone. excluded manifests while getting file name list", "commit_id": "86a7194057176d8005829e64b9215a850076c7c2"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "75e4d44317f797dce2c61afe063261236a374d6b", "unresolved": false, "patch_set": 7, "id": "df33271e_6ae03027", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 11}, "updated": "2020-04-02 06:42:58.000000000", "message": "this should be 1st line of a bash script then empty line then licence.", "commit_id": "a82a378daa0e3a9a20084ac33b5e340e0c199a98"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "e76320af67be5472f3924e2e7fd2da419f9405a0", "unresolved": false, "patch_set": 10, "id": "df33271e_e4ee14b3", "line": 39, "range": {"start_line": 39, "start_character": 6, "end_line": 39, "end_character": 71}, "updated": "2020-04-03 13:43:33.000000000", "message": "1. no need to use additional variable. 'if' statement can check return codes\n2. no need to escape exclamation mark. use single quotes\n\nif head -1 $each | grep '^#!' > /dev/null\nthen\n...\nfi", "commit_id": "8b300663f8727614cd6aa8010e2fbe81ec19d557"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "9b69e8e41cd34f8e7b772844ed9ad941dfbe04ea", "unresolved": false, "patch_set": 10, "id": "df33271e_2aec4328", "line": 39, "range": {"start_line": 39, "start_character": 6, "end_line": 39, "end_character": 71}, "in_reply_to": "df33271e_e4ee14b3", "updated": "2020-04-03 14:20:58.000000000", "message": "> 1. no need to use additional variable. 'if' statement can check\n > return codes\n > 2. no need to escape exclamation mark. use single quotes\n > \n > if head -1 $each | grep '^#!' > /dev/null\n > then\n > ...\n > fi\n\nThanks. Done", "commit_id": "8b300663f8727614cd6aa8010e2fbe81ec19d557"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "e76320af67be5472f3924e2e7fd2da419f9405a0", "unresolved": false, "patch_set": 10, "id": "df33271e_8497483b", "line": 42, "range": {"start_line": 42, "start_character": 0, "end_line": 42, "end_character": 124}, "updated": "2020-04-03 13:43:33.000000000", "message": "split this into multiple lines it make code more readable", "commit_id": "8b300663f8727614cd6aa8010e2fbe81ec19d557"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "9b69e8e41cd34f8e7b772844ed9ad941dfbe04ea", "unresolved": false, "patch_set": 10, "id": "df33271e_cadaf777", "line": 42, "range": {"start_line": 42, "start_character": 0, "end_line": 42, "end_character": 124}, "in_reply_to": "df33271e_8497483b", "updated": "2020-04-03 14:20:58.000000000", "message": "Done", "commit_id": "8b300663f8727614cd6aa8010e2fbe81ec19d557"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "29d3a4a6ef1288103807dd5b5d7e5f95b2230987", "unresolved": false, "patch_set": 13, "id": "df33271e_06831706", "line": 24, "range": {"start_line": 24, "start_character": 4, "end_line": 24, "end_character": 39}, "updated": "2020-04-06 08:41:14.000000000", "message": "Can we add something like this into linting gate? Not right now, but could be done in later PS.", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "8ee9a44568f70d7ce9fd331e08e25e57b1f70364", "unresolved": false, "patch_set": 13, "id": "df33271e_abd94bf5", "line": 24, "range": {"start_line": 24, "start_character": 4, "end_line": 24, "end_character": 39}, "in_reply_to": "df33271e_06831706", "updated": "2020-04-06 15:03:24.000000000", "message": "> Can we add something like this into linting gate? Not right now,\n > but could be done in later PS.\n\nSure. Will try to do it in another PS", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "29d3a4a6ef1288103807dd5b5d7e5f95b2230987", "unresolved": false, "patch_set": 13, "id": "df33271e_06b5d7ee", "line": 41, "range": {"start_line": 41, "start_character": 16, "end_line": 41, "end_character": 18}, "updated": "2020-04-06 08:41:14.000000000", "message": "Also this probably should be calculated. Otherwise someone would change number of lines for some reason, and it would collapse.", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "8ee9a44568f70d7ce9fd331e08e25e57b1f70364", "unresolved": false, "patch_set": 13, "id": "df33271e_ebe353a3", "line": 41, "range": {"start_line": 41, "start_character": 16, "end_line": 41, "end_character": 18}, "in_reply_to": "df33271e_06b5d7ee", "updated": "2020-04-06 15:03:24.000000000", "message": "Done", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "32a31147897dafe97dfab6aac95b945d23c868fd", "unresolved": false, "patch_set": 13, "id": "df33271e_f2c5120c", "line": 43, "range": {"start_line": 40, "start_character": 0, "end_line": 43, "end_character": 25}, "updated": "2020-04-06 08:36:13.000000000", "message": "1. no need to use backslashes\n2. use 'set -xe' at the beginning of the script and you can gar rid of '&&'\n\nset -xe\n....\nif head -1 $each | grep '^#!' > /dev/null\nthen\n  head -n 1 $each >>$each.new\n  head -n 12 tools/$template >>$each.new\n  tail -n+2 $each >>$each.new\n  mv $each.new $each\nfi", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "8ee9a44568f70d7ce9fd331e08e25e57b1f70364", "unresolved": false, "patch_set": 13, "id": "df33271e_cbe00f9a", "line": 43, "range": {"start_line": 40, "start_character": 0, "end_line": 43, "end_character": 25}, "in_reply_to": "df33271e_f2c5120c", "updated": "2020-04-06 15:03:24.000000000", "message": "Done", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "82984918d112c6ab21adc61c22fd786609983288", "unresolved": false, "patch_set": 17, "id": "df33271e_a91e18b8", "line": 48, "range": {"start_line": 45, "start_character": 0, "end_line": 48, "end_character": 25}, "updated": "2020-04-09 09:58:01.000000000", "message": "code should reside on same column", "commit_id": "9270d44304e16f422b8a53e0ebcacf9b85c45d90"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "ddfd00389a8e11a06c2855f7b60bd12eecff311e", "unresolved": false, "patch_set": 17, "id": "df33271e_a5eab8d4", "line": 48, "range": {"start_line": 45, "start_character": 0, "end_line": 48, "end_character": 25}, "in_reply_to": "df33271e_a91e18b8", "updated": "2020-04-09 13:37:28.000000000", "message": "Done", "commit_id": "9270d44304e16f422b8a53e0ebcacf9b85c45d90"}], "tools/license_bash_yaml.txt": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "8fa609b2384451311dd679491573d3a21bce9bf8", "unresolved": false, "patch_set": 4, "id": "df33271e_d1de5e3c", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 32}, "updated": "2020-04-01 20:34:42.000000000", "message": "I think we want this header to have an extra line below as well.", "commit_id": "86a7194057176d8005829e64b9215a850076c7c2"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "a5e28d311179c02fe612ceb3226a43e6c935173a", "unresolved": false, "patch_set": 4, "id": "df33271e_835da716", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 32}, "in_reply_to": "df33271e_d1de5e3c", "updated": "2020-04-01 23:13:52.000000000", "message": "Done", "commit_id": "86a7194057176d8005829e64b9215a850076c7c2"}], "tools/license_go.txt": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0d6534f3004ac150e3b7eae1e398be434a4443c4", "unresolved": false, "patch_set": 13, "id": "df33271e_320dba90", "line": 11, "range": {"start_line": 1, "start_character": 0, "end_line": 11, "end_character": 33}, "updated": "2020-04-06 08:30:32.000000000", "message": "Using\n\n  /*\n    xxxxxxxxxxxxxxx\n    xxxxxxxxxxxxxxx\n    ...\n  */\n\nwould be much cleaner.", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "8ee9a44568f70d7ce9fd331e08e25e57b1f70364", "unresolved": false, "patch_set": 13, "id": "df33271e_ab54ab55", "line": 11, "range": {"start_line": 1, "start_character": 0, "end_line": 11, "end_character": 33}, "in_reply_to": "df33271e_320dba90", "updated": "2020-04-06 15:03:24.000000000", "message": "Done", "commit_id": "c380769bc4059222286f358b0b7ca64bafb3ad2e"}], "zuul.d/jobs.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "514562071b3a33c2bc44c57a244e75d7f10a777b", "unresolved": false, "patch_set": 11, "id": "df33271e_4a88a721", "line": 13, "updated": "2020-04-03 14:26:29.000000000", "message": "Is there a way to eliminate this extra line?", "commit_id": "f31444bbfdba8832335e14587613afc043ca5043"}, {"author": {"_account_id": 28690, "name": "Sirajudeen", "email": "sirajudeen.yasin@gmail.com", "username": "siraj.yasin"}, "change_message_id": "fa7260c8e06dd53ac035f62f418e601e745fefb8", "unresolved": false, "patch_set": 11, "id": "df33271e_d553bc6b", "line": 13, "in_reply_to": "df33271e_4a88a721", "updated": "2020-04-03 15:06:40.000000000", "message": "> Is there a way to eliminate this extra line?\n\nDone. This was added while testing, script will ignore this as License header is already present", "commit_id": "f31444bbfdba8832335e14587613afc043ca5043"}]}}, "openstack%2Fpython-tripleoclient~master~I9675e587abf3f07e91319a40620a8f4c67fbf97b": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:53:43.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-09 20:56:05.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 21:17:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": -1, "date": "2020-04-10 03:30:32.000000000", "permitted_voting_range": {"min": -1, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {"tripleoclient/utils.py": [{"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "8a764086d58a399622b4fbf68fb53bd78e162b97", "unresolved": false, "patch_set": 2, "id": "df33271e_cd0d553f", "line": 293, "range": {"start_line": 291, "start_character": 0, "end_line": 293, "end_character": 37}, "updated": "2020-04-10 03:30:32.000000000", "message": "I am -1 on this as this is not a very intuitive interface where the user has to decide which dict needs to be written to a file and which one should not... \n\nActually the issue we're seeing a bug in ansible-runner which treats every extra_var as string and has been fixed with https://github.com/ansible/ansible-runner/commit/343cdebc3f50aaf8357e38aec414b6bae5f23b1d\n\nBumping ansible-runner to 1.4.5 would have fixed this. we use python3-ansible-runner-1.4.4-2.el8.noarch", "commit_id": "a947b57094f2fd5da6d54e1c98b2aa947bb37914"}, {"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "b948a4227983300c3143220979ba56a12de21020", "unresolved": false, "patch_set": 2, "id": "7f423b7e_be87f9b6", "line": 293, "range": {"start_line": 291, "start_character": 0, "end_line": 293, "end_character": 37}, "in_reply_to": "7f423b7e_9e683d22", "updated": "2020-04-10 17:47:15.000000000", "message": "I think it was only blocking promotions for few days along with some other issues which were also fixed. There had been some force promotions without these fixes though not ideal. Also, I think I meant users as in 'users using this interface' i.e devs..probably would have mentioned it explicitly. But yeah we can followup.", "commit_id": "a947b57094f2fd5da6d54e1c98b2aa947bb37914"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "3e8719f1cd82f7128e65fd54160696d71b3b79b8", "unresolved": false, "patch_set": 2, "id": "7f423b7e_9e683d22", "line": 293, "range": {"start_line": 291, "start_character": 0, "end_line": 293, "end_character": 37}, "in_reply_to": "df33271e_cd0d553f", "updated": "2020-04-10 17:30:23.000000000", "message": "we approved it because it was blocking all the ovb jobs. We can follow up with something else if upgrading ansible runner addresses it, though these are the internals and not a requirement for the actual user.", "commit_id": "a947b57094f2fd5da6d54e1c98b2aa947bb37914"}]}}, "openstack%2Fneutron~stable%2Fstein~I87efe6cf8734bae6523106944e99fbd7db9ef4d5": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-09 19:42:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-04-09 23:53:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "75073b7878d643db3930b446901eca963d4b20b3", "unresolved": false, "patch_set": 1, "id": "df33271e_0529e488", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 71}, "updated": "2020-04-09 13:16:25.000000000", "message": "This was only true for the patch on master", "commit_id": "5da8eed6db21291b4f442c1b28c960ce5eba9c69"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "d9c96d18154a081631afaf9181ff0b9af63236c6", "unresolved": false, "patch_set": 1, "id": "df33271e_25022870", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 71}, "in_reply_to": "df33271e_0529e488", "updated": "2020-04-09 13:42:56.000000000", "message": "Thanks!", "commit_id": "5da8eed6db21291b4f442c1b28c960ce5eba9c69"}]}}, "openstack%2Fmanila~master~I124803734c81d3630c5147f5f3bb75724489c929": {"owner_id": 30998, "owner_name": "Andre Luiz Beltrami Rocha", "owner_email": "debeltrami@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-04-09 23:32:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 22:04:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "eefc19275c5127a298f266c11e7bf052f1463ce4", "unresolved": false, "patch_set": 6, "id": "df33271e_9abc3c07", "line": 15, "range": {"start_line": 14, "start_character": 0, "end_line": 15, "end_character": 53}, "updated": "2020-04-09 03:49:17.000000000", "message": "Andre, please remove this 2 dependencies in a next PS. Thanks!", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "ddc1912324ad9b8cb3c21657112b24bfdaa7f1f5", "unresolved": false, "patch_set": 6, "id": "df33271e_c18b6765", "line": 15, "range": {"start_line": 14, "start_character": 0, "end_line": 15, "end_character": 53}, "in_reply_to": "df33271e_9abc3c07", "updated": "2020-04-09 20:24:20.000000000", "message": "Done", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}], "contrib/ci/post_test_hook.sh": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "260c1439886d592e1b19d73625951d38cab9b918", "unresolved": false, "patch_set": 1, "id": "1fa4df85_09d0a0c8", "line": 231, "range": {"start_line": 231, "start_character": 4, "end_line": 231, "end_character": 74}, "updated": "2020-03-06 20:24:34.000000000", "message": "try this:\ninitset $TEMPEST_CONFIG run_create_share_from_snapshot_in_another_pool_or_az_tests True", "commit_id": "afd32e847c3b874fa06c1d9c76027ec0fc958058"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "dfdef95eed8c93bfa08e54f9c7b38eb6e62f28ae", "unresolved": false, "patch_set": 4, "id": "df33271e_474b3486", "line": 231, "range": {"start_line": 231, "start_character": 74, "end_line": 231, "end_character": 74}, "updated": "2020-04-07 17:58:39.000000000", "message": "Remove this line if you are going to keep 247.  Or drop 247 and add a lines to (1) init RUN_MANILA_CREATE_SHARE_FROM_SNAPSHOT_IN_ANOTHER_POOLOR_AZ_TESTS to false, earlier, for all drivers, and (2) iniset tempest config to the value of this variable more towards the end (somewhere around line 295ff).", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "2d610f06d8882be8fb25020a8175f5512084d77c", "unresolved": false, "patch_set": 4, "id": "df33271e_b777b73a", "line": 231, "range": {"start_line": 231, "start_character": 74, "end_line": 231, "end_character": 74}, "in_reply_to": "df33271e_474b3486", "updated": "2020-04-08 23:14:25.000000000", "message": "Hi Tom, I removed the line 231. Thank you for the comment.", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}], "contrib/ci/pre_test_hook.sh": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "dfdef95eed8c93bfa08e54f9c7b38eb6e62f28ae", "unresolved": false, "patch_set": 4, "id": "df33271e_2791d047", "line": 161, "range": {"start_line": 161, "start_character": 6, "end_line": 161, "end_character": 65}, "updated": "2020-04-07 17:58:39.000000000", "message": "Suggest:\n   # Enable using the scheduler when creating a share from snapshot", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "2d610f06d8882be8fb25020a8175f5512084d77c", "unresolved": false, "patch_set": 4, "id": "df33271e_d7919b48", "line": 161, "range": {"start_line": 161, "start_character": 6, "end_line": 161, "end_character": 65}, "in_reply_to": "df33271e_2791d047", "updated": "2020-04-08 23:14:25.000000000", "message": "Done. Thank you!", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}], "devstack/plugin.sh": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "a107c9defae29edbe961ea9007031068bcbb28cd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_60032b75", "line": 662, "range": {"start_line": 662, "start_character": 24, "end_line": 662, "end_character": 35}, "updated": "2020-03-11 17:00:13.000000000", "message": "I think that we should move this to the manila.conf default configs, and all jobs will config this with the default value, which is False.\nAlso, move this config to a new change since its not tied to ZFSonLinux", "commit_id": "cb7d33879889bbfe7d1d49e6813457a3f355962b"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "11e54c6fce85d31c934b8c17db78fec0a2ef5afe", "unresolved": false, "patch_set": 3, "id": "1fa4df85_c02c5fae", "line": 662, "range": {"start_line": 662, "start_character": 24, "end_line": 662, "end_character": 35}, "in_reply_to": "1fa4df85_60032b75", "updated": "2020-03-11 17:48:48.000000000", "message": "Sure, thank you Douglas. Done!", "commit_id": "cb7d33879889bbfe7d1d49e6813457a3f355962b"}], "devstack/settings": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "a107c9defae29edbe961ea9007031068bcbb28cd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_a02e03f8", "line": 129, "range": {"start_line": 129, "start_character": 0, "end_line": 129, "end_character": 111}, "updated": "2020-03-11 17:00:13.000000000", "message": "Lets move this to a different change since other drivers may depend on this to test the feature.", "commit_id": "cb7d33879889bbfe7d1d49e6813457a3f355962b"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "11e54c6fce85d31c934b8c17db78fec0a2ef5afe", "unresolved": false, "patch_set": 3, "id": "1fa4df85_1b3c26be", "line": 129, "range": {"start_line": 129, "start_character": 0, "end_line": 129, "end_character": 111}, "in_reply_to": "1fa4df85_a02e03f8", "updated": "2020-03-11 17:48:48.000000000", "message": "sure.", "commit_id": "cb7d33879889bbfe7d1d49e6813457a3f355962b"}], "manila/share/drivers/zfsonlinux/driver.py": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "dfdef95eed8c93bfa08e54f9c7b38eb6e62f28ae", "unresolved": false, "patch_set": 4, "id": "df33271e_0d2e6ba4", "line": 582, "range": {"start_line": 582, "start_character": 8, "end_line": 582, "end_character": 36}, "updated": "2020-04-07 17:58:39.000000000", "message": "I suspect this code would be cleaner and simpler if you just worked with src_backend_name, src_backend_pool_name, and src_backend_ssh_cmd (or src dict with these fields) and dst_backendname, dst_backend_pool_name, and dst_backend_ssh_cmd in every case.  (dst fields are currently just backend_name, pool_name, ssh_cmd).\n\nIn the case of same pool and back end the fields will match.\n\nWould make fewer lines and make cleaner self.execute invocation.", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "2d610f06d8882be8fb25020a8175f5512084d77c", "unresolved": false, "patch_set": 4, "id": "df33271e_77cb6f52", "line": 582, "range": {"start_line": 582, "start_character": 8, "end_line": 582, "end_character": 36}, "in_reply_to": "df33271e_0d2e6ba4", "updated": "2020-04-08 23:14:25.000000000", "message": "Hi Tom, in the new patch set I tried rename the variables as you suggest. Thank you!", "commit_id": "a639713f8fd714ee38a55047cab9bf1a7ffafa3c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "68c68b2b874cceef14943e8696df91d863f18c02", "unresolved": false, "patch_set": 5, "id": "df33271e_cf9452eb", "line": 599, "updated": "2020-04-08 18:00:44.000000000", "message": "pep8: E501 line too long (85 > 79 characters)", "commit_id": "8f3166db2bb8df7cf48b17a74791e71b0627cfdc"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "68c68b2b874cceef14943e8696df91d863f18c02", "unresolved": false, "patch_set": 5, "id": "df33271e_af974eeb", "line": 614, "updated": "2020-04-08 18:00:44.000000000", "message": "pep8: E501 line too long (81 > 79 characters)", "commit_id": "8f3166db2bb8df7cf48b17a74791e71b0627cfdc"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "0d0ad08a0a4ded1b7645e0a0387ed5692b91a734", "unresolved": false, "patch_set": 5, "id": "df33271e_b72177fe", "line": 637, "range": {"start_line": 612, "start_character": 0, "end_line": 637, "end_character": 13}, "updated": "2020-04-08 12:38:37.000000000", "message": "The simplification I'm suggesting is to just do:\n   src_config = ...\n   src_backend_ssh_cmd = ....\n   self.execute(\n     'ssh', src_backend_cmd,\n      ...\n      'ssh', dst_backend_cmd,\n      ....\n     )\nin every case, irrespective of whether src backend and dst backend are the same.\n\nIf this will work it would be simpler code.", "commit_id": "8f3166db2bb8df7cf48b17a74791e71b0627cfdc"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "2d610f06d8882be8fb25020a8175f5512084d77c", "unresolved": false, "patch_set": 5, "id": "df33271e_37fa7074", "line": 637, "range": {"start_line": 612, "start_character": 0, "end_line": 637, "end_character": 13}, "in_reply_to": "df33271e_b72177fe", "updated": "2020-04-08 23:14:25.000000000", "message": "Hi Tom, I will try the modification that you suggest. Thank you!", "commit_id": "8f3166db2bb8df7cf48b17a74791e71b0627cfdc"}], "manila/tests/share/drivers/zfsonlinux/test_driver.py": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "dbd077131184dce39be59bdf8479dd853b19fdda", "unresolved": false, "patch_set": 6, "id": "df33271e_ab8f3528", "line": 862, "range": {"start_line": 847, "start_character": 0, "end_line": 862, "end_character": 24}, "updated": "2020-04-09 01:44:07.000000000", "message": "It seems that you are setting different answers for the source share but your test is testing against different destinations. Please fix this.", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "ddc1912324ad9b8cb3c21657112b24bfdaa7f1f5", "unresolved": false, "patch_set": 6, "id": "df33271e_a1dd8371", "line": 862, "range": {"start_line": 847, "start_character": 0, "end_line": 862, "end_character": 24}, "in_reply_to": "df33271e_ab8f3528", "updated": "2020-04-09 20:24:20.000000000", "message": "Done", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, "change_message_id": "c08804c460ac32d0fe556819435cb948596e5c98", "unresolved": false, "patch_set": 6, "id": "df33271e_a0ee341f", "line": 880, "updated": "2020-04-08 23:52:39.000000000", "message": "This assertEqual will depend on the ddt case being evaluated. Say, if the dst_backend_name != src_backend_name this assertEqual will fail. Or am I missing something?", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "ddc1912324ad9b8cb3c21657112b24bfdaa7f1f5", "unresolved": false, "patch_set": 6, "id": "df33271e_81daff74", "line": 880, "in_reply_to": "df33271e_6b988d74", "updated": "2020-04-09 20:24:20.000000000", "message": "Hi all, I think now the test was improved. Thank you!", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "dbd077131184dce39be59bdf8479dd853b19fdda", "unresolved": false, "patch_set": 6, "id": "df33271e_6b988d74", "line": 880, "in_reply_to": "df33271e_a0ee341f", "updated": "2020-04-09 01:44:07.000000000", "message": "It seems that the config saved on private_storage is the config for the new share, that is the destination share, and the 'ip' and 'user' are being retrieve from manila config. The confusion is that he shall test against different source backends since his mocks are providing different info for each test. Its working but its not correct I guess.", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "5c96b9af391d0d04bf59d1641cda1aa4b892c9a9", "unresolved": false, "patch_set": 8, "id": "df33271e_bc5daa16", "line": 890, "range": {"start_line": 890, "start_character": 27, "end_line": 890, "end_character": 39}, "updated": "2020-04-09 21:04:00.000000000", "message": "dst_ssh_host", "commit_id": "324de5062153f0ba99ce9861b1056ed3164e2032"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "6ec26a99d2947b684145184063dc9516a7e9fb36", "unresolved": false, "patch_set": 8, "id": "df33271e_bceacad4", "line": 890, "range": {"start_line": 890, "start_character": 27, "end_line": 890, "end_character": 39}, "in_reply_to": "df33271e_bc5daa16", "updated": "2020-04-09 21:17:41.000000000", "message": "Looking again, I realize that if it's not necessary. In PS 9, I removed it.", "commit_id": "324de5062153f0ba99ce9861b1056ed3164e2032"}], "releasenotes/notes/zfsonlinux-driver-improvement-create-share-from-snapshot-another-backend-44296f572681be35.yaml": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "3750ea80caeecc5d17d5fa10a881cc70b7c3754e", "unresolved": false, "patch_set": 6, "id": "df33271e_5098d5be", "line": 5, "range": {"start_line": 5, "start_character": 67, "end_line": 5, "end_character": 68}, "updated": "2020-04-09 07:08:21.000000000", "message": "by specifying the Manila API configuration option \"[DEFAULT]/use_scheduler_creating_share_from_snapshot\"", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}, {"author": {"_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, "change_message_id": "ddc1912324ad9b8cb3c21657112b24bfdaa7f1f5", "unresolved": false, "patch_set": 6, "id": "df33271e_81483f2d", "line": 5, "range": {"start_line": 5, "start_character": 67, "end_line": 5, "end_character": 68}, "in_reply_to": "df33271e_5098d5be", "updated": "2020-04-09 20:24:20.000000000", "message": "Done.", "commit_id": "6ce8a5f9a2bcd6f895d4992c3090c119448ec27e"}]}}, "openstack%2Fpython-zunclient~stable%2Fussuri~I20ac9bbce1d836dc49c21cb49db1a0b43ba2131f": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:07:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpython-zunclient~stable%2Fussuri~I95010f6786909d7dc9c10edd96cd4edf3b8ae877": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:07:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpython-zunclient~master~I4966147bb341698c318970783047558053707c62": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:06:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpython-zunclient~master~I8d24f3444dffa8f1b629e7a93cc5baac6e6d8e89": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:06:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Freleases~master~Iee562d5b3330da9ea2860f6b46d04c64829871c7": {"owner_id": 11292, "owner_name": "Arne Wiebalck", "owner_email": "Arne.Wiebalck@cern.ch", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 07:39:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-10 00:11:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fnova~master~Id47515017982850b167d5c637d93b96ae00ba793": {"owner_id": 14070, "owner_name": "Eric Fried", "owner_email": "openstack@fried.cc", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 09:20:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 2, "date": "2020-04-07 02:25:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "de7c0d7ffc2feb455c7ce95d2e0d91ee5ed6e7cd", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_626b1df1", "line": 24, "updated": "2019-10-02 21:24:43.000000000", "message": "turns out this also\n\n Closes-Bug: #1728732", "commit_id": "52db9d24fb44b91e82d5f6cd4889fb2fd3104ff4"}], "etc/nova/api-paste.ini": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1ab557affc85cbcb09365e4922ba1accc46d6cae", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_c9d52e1d", "line": 29, "range": {"start_line": 28, "start_character": 0, "end_line": 29, "end_character": 34}, "updated": "2019-10-05 09:52:52.000000000", "message": "We need to keep backward-compatible existing api-paste.ini in the deployment, and yes, we keep it, so we are good at here.", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "e5f46ea4c79968f73953e19132b54c03a8b094e2", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f86307dc", "line": 29, "range": {"start_line": 28, "start_character": 0, "end_line": 29, "end_character": 34}, "in_reply_to": "3fa7e38b_c9d52e1d", "updated": "2019-10-07 14:29:51.000000000", "message": "Mm, good point: existing deployments that don't update their paste.ini will retain their existing behavior - and that's what we want?", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "852357b1bd7d64e4f9bed372f90f2b48482f7035", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ffcbdfa1", "line": 29, "range": {"start_line": 28, "start_character": 0, "end_line": 29, "end_character": 34}, "in_reply_to": "3fa7e38b_f86307dc", "updated": "2019-10-08 04:56:00.000000000", "message": "Yea, that is John teach me that.", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}], "nova/api/openstack/auth.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b1034f2d7af07eda4b32e3a10c42ec91e6ee996", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_06122f0a", "line": 39, "updated": "2019-10-08 13:50:34.000000000", "message": "I've been told we shouldn't use assert in production code since it can be optimized away [1]. However, I do see a couple of existing assert calls in the code so we're obviously not hitting that. I'd still prefer to replace this with an explicit check and raise, but absent that this will do\n\n[1] https://stackoverflow.com/questions/1693088/what-is-the-use-of-pythons-basic-optimizations-mode-python-o", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1334d7ba8ed811444789f06e6e2afe14017e6d41", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_e1cb3da2", "line": 39, "in_reply_to": "3fa7e38b_06122f0a", "updated": "2019-10-08 14:21:10.000000000", "message": "Confusingly, this is not production code.", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "1fe5775d1dafee75a0f295e244479c71fd04f652", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_7c5e1213", "line": 39, "in_reply_to": "3fa7e38b_e1cb3da2", "updated": "2019-10-08 15:16:23.000000000", "message": "Maybe in some future fup we should consider moving it?\n\nAt which point someone will come along and say they are using it to run nova behind basic auth without keystone (or something).", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "1fe5775d1dafee75a0f295e244479c71fd04f652", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_5cfd5638", "line": 50, "updated": "2019-10-08 15:16:23.000000000", "message": "I think you can get rid of this and thus potentially the os_url stuff above and then perhaps the /auth thing entirely", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}], "nova/api/openstack/compute/routes.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "0e14bed3389cefd67b19a425840c806966f0e12b", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_fc7202ad", "line": 373, "range": {"start_line": 373, "start_character": 0, "end_line": 373, "end_character": 14}, "updated": "2019-10-08 17:02:42.000000000", "message": "I was trying to stop this redirecting also[1] but lost the progress. But  we can do that later.\n\n[1] https://review.opendev.org/#/c/580544/3\nML- http://lists.openstack.org/pipermail/openstack/2018-July/046699.html", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a2a17e77948b930a6ed6772c827f64491d4dc260", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_9a42dd67", "line": 373, "range": {"start_line": 373, "start_character": 0, "end_line": 373, "end_character": 14}, "in_reply_to": "3fa7e38b_08f0f966", "updated": "2019-10-09 17:06:52.000000000", "message": "i see. Let's wait for actual bug report for those. Existing bugs were for v2 and v2.1 redirect.", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "59780d60cb4ff6978c074b54c5effdb47ec46ee8", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_08f0f966", "line": 373, "range": {"start_line": 373, "start_character": 0, "end_line": 373, "end_character": 14}, "in_reply_to": "3fa7e38b_fc7202ad", "updated": "2019-10-08 17:15:46.000000000", "message": "There were several patches we recently abandoned attempting to do the same.\n\nI believe this route (and the next) is unreachable if you use the updated paste.ini with the code in this patch. But we need to keep it here for backward compat with old paste.inis.", "commit_id": "dc3fb68ff3beb3395608211e7f5163c41a563710"}], "nova/api/openstack/urlmap.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1ab557affc85cbcb09365e4922ba1accc46d6cae", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_e9fcaa3f", "line": 179, "updated": "2019-10-05 09:52:52.000000000", "message": "Since the unitest https://github.com/openstack/nova/blob/master/nova/tests/unit/api/openstack/compute/test_urlmap.py depends on fakes.wsgi_app_v21, then we should make it use this wildcard mode https://github.com/openstack/nova/blob/master/nova/tests/unit/api/openstack/fakes.py#L81, then we can ensure it is tested.", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "e5f46ea4c79968f73953e19132b54c03a8b094e2", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_336f80fd", "line": 179, "in_reply_to": "3fa7e38b_e9fcaa3f", "updated": "2019-10-07 14:29:51.000000000", "message": "Done", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1ab557affc85cbcb09365e4922ba1accc46d6cae", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_09f82647", "line": 187, "updated": "2019-10-05 09:52:52.000000000", "message": "Maybe add some test ensure the SCRIPT_NAME and PATH_INFO is right https://github.com/openstack/nova/blob/master/nova/tests/unit/api/openstack/compute/test_urlmap.py", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "e5f46ea4c79968f73953e19132b54c03a8b094e2", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f37008dd", "line": 187, "in_reply_to": "3fa7e38b_09f82647", "updated": "2019-10-07 14:29:51.000000000", "message": "Done", "commit_id": "46af2de023b7f7039bd1d015b8578567d5e267da"}], "nova/tests/unit/api/openstack/compute/test_versions.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "0e14bed3389cefd67b19a425840c806966f0e12b", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_021a187c", "side": "PARENT", "line": 150, "range": {"start_line": 144, "start_character": 0, "end_line": 150, "end_character": 56}, "updated": "2019-10-08 17:02:42.000000000", "message": "or we could convert these into negative tests to verify that without '/' is not redirected.", "commit_id": "e33d270cd92b9c3a2be375d00aaebeb49adfb673"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "59780d60cb4ff6978c074b54c5effdb47ec46ee8", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_c89e6106", "side": "PARENT", "line": 150, "range": {"start_line": 144, "start_character": 0, "end_line": 150, "end_character": 56}, "in_reply_to": "3fa7e38b_021a187c", "updated": "2019-10-08 17:15:46.000000000", "message": "That's covered by the new tests at [1] (see the ddt data at L61 and L63).\n\n[1] https://review.opendev.org/#/c/685181/10/nova/tests/functional/api_sample_tests/test_versions.py@61", "commit_id": "e33d270cd92b9c3a2be375d00aaebeb49adfb673"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a2a17e77948b930a6ed6772c827f64491d4dc260", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_c93c11e3", "side": "PARENT", "line": 150, "range": {"start_line": 144, "start_character": 0, "end_line": 150, "end_character": 56}, "in_reply_to": "3fa7e38b_c89e6106", "updated": "2019-10-09 17:06:52.000000000", "message": "oh functional tests were getting 200 even before these and 685181 changes also. they were always doing request with '/' in url end?", "commit_id": "e33d270cd92b9c3a2be375d00aaebeb49adfb673"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "0e14bed3389cefd67b19a425840c806966f0e12b", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_c213a065", "side": "PARENT", "line": 457, "range": {"start_line": 451, "start_character": 0, "end_line": 457, "end_character": 56}, "updated": "2019-10-08 17:02:42.000000000", "message": "ditto", "commit_id": "e33d270cd92b9c3a2be375d00aaebeb49adfb673"}]}}, "airship%2Fporthole~master~I69eb1e64c22f98b1d1988c5eb48d0cb7a0eb3872": {"owner_id": 28208, "owner_name": "Roman Gorshunov", "owner_email": "roman.gorshunov@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": -1, "date": "2020-03-24 20:54:14.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, {"value": 1, "date": "2020-04-10 17:12:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}], "comments": {}}, "opendev%2Fbase-jobs~master~I414128f48afc207e936635aae4254bf4901cb709": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 17:05:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-04-10 16:54:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 17:02:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"doc/source/base.rst": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "abfcba5c9e80d7e009237717782739db628e4673", "unresolved": false, "patch_set": 1, "id": "bf3833fe_605b122e", "line": 6, "range": {"start_line": 4, "start_character": 1, "end_line": 6, "end_character": 30}, "updated": "2020-04-10 16:15:12.000000000", "message": "these are base jobs, let's create a different file for the rest", "commit_id": "9c587bef102975ecfb27f5ad40cbdaed7948685c"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "abfcba5c9e80d7e009237717782739db628e4673", "unresolved": false, "patch_set": 1, "id": "bf3833fe_404c0e76", "line": 13, "range": {"start_line": 8, "start_character": 25, "end_line": 13, "end_character": 52}, "updated": "2020-04-10 16:15:12.000000000", "message": "some of these are already in the docker file", "commit_id": "9c587bef102975ecfb27f5ad40cbdaed7948685c"}], "doc/source/docker-image.rst": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "609dc52b7f85e13ebbe40d1011373eb00d378b04", "unresolved": false, "patch_set": 2, "id": "7f423b7e_be6899ba", "line": 168, "updated": "2020-04-10 16:46:05.000000000", "message": "MY EYES!", "commit_id": "b01137e4028b0792be6400228dd7bcd3988e546d"}]}}, "openstack%2Fnova~master~I483f7c1b7639f875b18022f2ab9edc3b772bb2bc": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:16:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:54:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_tempest~master~I17ec60bf5a8344a2b6442d1d2e49cf0204340c70": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 08:00:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-08 20:13:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16011, "name": "James Denton", "email": "james.denton@outlook.com", "username": "busterswt"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fshade~master~Ifdcb3ca27c50a182c06d9bf39c518a24ea0b3472": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-10 15:44:52.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "d28b9eb079ed8cbbcc2b563734708ec01c9322a2", "unresolved": false, "patch_set": 1, "id": "df33271e_d6be81ac", "line": 4, "updated": "2020-04-10 15:21:10.000000000", "message": "you can even go to < 3\n\nVersion 2 support python 2 and 3, doesn't it?", "commit_id": "cbe73cfe6456a6f1b6e01592d6b26fbdd68cb4d2"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "78c3cf802501e8da49b27d77e84607d18857edea", "unresolved": false, "patch_set": 1, "id": "df33271e_f64465ba", "line": 4, "in_reply_to": "df33271e_d6be81ac", "updated": "2020-04-10 15:26:41.000000000", "message": "Yeah, this is wrong. Especially as I see there is \"<0.14\" in there too.\n\nUpdate coming.", "commit_id": "cbe73cfe6456a6f1b6e01592d6b26fbdd68cb4d2"}]}}, "openstack%2Fkeystone~master~Id04f2ca5b879ee1f37cd349ff85ebec01389213a": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 09:29:47.000000000", "_account_id": 15054, "name": "wangxiyuan", "email": "wangxiyuan1007@gmail.com", "username": "wangxiyuan"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-04-10 14:17:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "opendev%2Fsystem-config~master~Id83e36f235753e54361a429782356d628eec0d9c": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 15:52:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 22:50:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "opendev%2Fbase-jobs~master~Iaa471b8bc374c5aaf0d9efe0d47ab9d6f22bf78a": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 15:54:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 16:05:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"playbooks/upload-git-mirror/run.yaml": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "5949a84010194139b855d4b12897bcc1aa723966", "unresolved": false, "patch_set": 1, "id": "df33271e_16890974", "line": 3, "updated": "2020-04-10 14:50:14.000000000", "message": "you'll want to use vars here to pass \"git_mirror_repository: {{ git_mirror_credentials.git_mirror_repository }}\" or whatever you rename it if you do.", "commit_id": "b423e5fa6a44bf72e1f5a613b1cb98281f1a4420"}], "zuul.d/jobs.yaml": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "5949a84010194139b855d4b12897bcc1aa723966", "unresolved": false, "patch_set": 1, "id": "df33271e_767a1577", "line": 502, "updated": "2020-04-10 14:50:14.000000000", "message": "This is slightly misleading -- the job can be used by any repository.  What's important to zuul is that the playbook which runs a command on localhost is inside a trusted repo.  That is true (this repo is trusted), so Zuul will be happy.\n\nEssentially, we're saying (right now, in this review) that as the folks responsible for deciding what can run locally on executors, that the steps in this playbook are okay.  We trust the upload-git-mirror role not to attack the execution environment.\n\nI think I would drop the second sentence.  If you want to explain how it's different from the job in zuul-jobs, maybe say something like \"This is a nodeless version of the job in zuul-jobs, defined here since this job's playbook must be in a trusted repo.\"", "commit_id": "b423e5fa6a44bf72e1f5a613b1cb98281f1a4420"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "3107225e89db39f88782c6c1e371dd015d8eab23", "unresolved": false, "patch_set": 1, "id": "df33271e_b6401d37", "line": 502, "range": {"start_line": 502, "start_character": 23, "end_line": 502, "end_character": 50}, "updated": "2020-04-10 14:43:38.000000000", "message": "how can we enforce this?", "commit_id": "b423e5fa6a44bf72e1f5a613b1cb98281f1a4420"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "3107225e89db39f88782c6c1e371dd015d8eab23", "unresolved": false, "patch_set": 1, "id": "df33271e_963d19bd", "line": 508, "range": {"start_line": 508, "start_character": 38, "end_line": 508, "end_character": 40}, "updated": "2020-04-10 14:43:38.000000000", "message": "nit: lowercase secret", "commit_id": "b423e5fa6a44bf72e1f5a613b1cb98281f1a4420"}, {"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "5949a84010194139b855d4b12897bcc1aa723966", "unresolved": false, "patch_set": 1, "id": "df33271e_567f1165", "line": 528, "updated": "2020-04-10 14:50:14.000000000", "message": "You should indent this two spaces so it's part of the secret, then you might want to change the name to just \"target_repository\" or something, since the prefix isn't necessary (it's part of the secret).", "commit_id": "b423e5fa6a44bf72e1f5a613b1cb98281f1a4420"}]}}, "openstack%2Freleases~master~I2d5c75c2f0f1b57d6529a05262f6934ddce2f528": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-10 15:59:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, {"value": 2, "date": "2020-04-10 16:01:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fproject-config~master~I16bc248a1a370ab4819c8068e05bf6d15a3dd16b": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-04-10 15:47:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 15:48:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fmanila~master~Id3b3d5860d6325f368cbebfe7f97c98d64554d72": {"owner_id": 30002, "owner_name": "Douglas Viroel", "owner_email": "viroel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, {"value": 2, "date": "2020-04-10 01:20:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, {"value": 2, "date": "2020-04-10 01:10:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f2ec61d184616c41a17eb66540dc2584f1739abf", "unresolved": false, "patch_set": 6, "id": "df33271e_7371a344", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 0}, "updated": "2020-04-09 08:06:02.000000000", "message": "This needs to depend on the feature change, else it'll fail regression/unit tests.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}], "manila/share/drivers/netapp/dataontap/client/client_cmode.py": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_b8806848", "line": 2254, "range": {"start_line": 2254, "start_character": 16, "end_line": 2254, "end_character": 24}, "updated": "2020-04-07 15:57:43.000000000", "message": "nit: lower case ``volume's``", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_da76c4a4", "line": 2254, "range": {"start_line": 2254, "start_character": 16, "end_line": 2254, "end_character": 24}, "in_reply_to": "df33271e_b8806848", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}], "manila/share/drivers/netapp/dataontap/cluster_mode/lib_base.py": [{"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "44636824ea2e08f34f3b505ee66b668bd440918a", "unresolved": false, "patch_set": 1, "id": "df33271e_355e0ce6", "line": 713, "range": {"start_line": 713, "start_character": 32, "end_line": 713, "end_character": 66}, "updated": "2020-03-26 19:49:24.000000000", "message": "it may be helpful to log the current_state in this case", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "4954fa5d6c21bc251b0d532428e382044d4a2cbb", "unresolved": false, "patch_set": 1, "id": "df33271e_c365efb6", "line": 713, "range": {"start_line": 713, "start_character": 32, "end_line": 713, "end_character": 66}, "in_reply_to": "df33271e_355e0ce6", "updated": "2020-04-01 23:33:18.000000000", "message": "sure, done, thanks!", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "44636824ea2e08f34f3b505ee66b668bd440918a", "unresolved": false, "patch_set": 1, "id": "df33271e_b5c5fc5d", "line": 2633, "range": {"start_line": 2633, "start_character": 8, "end_line": 2633, "end_character": 24}, "updated": "2020-03-26 19:49:24.000000000", "message": "this is not a pure getter method, something like `update_create_from_snapshot_status` is a bit clunky, but would describe better what happens imho", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "4954fa5d6c21bc251b0d532428e382044d4a2cbb", "unresolved": false, "patch_set": 1, "id": "df33271e_c3a68fc1", "line": 2633, "range": {"start_line": 2633, "start_character": 8, "end_line": 2633, "end_character": 24}, "in_reply_to": "df33271e_b5c5fc5d", "updated": "2020-04-01 23:33:18.000000000", "message": "Yes, this interface is being proposed here[1] and its supposed to retrieve the current status of a share.\nSince we don't have other internal periodic threads to move forward this creation process (and I think that we shouldn't because can bring issues in the future with active/active) we decide to use this call.\nA better name could be 'update_share_status', something like that. The idea is to use it for other share 'pending' operation, not only creating_from_snapshot.\nThanks for asking!\n\n[1] https://review.opendev.org/#/c/709697/", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "44636824ea2e08f34f3b505ee66b668bd440918a", "unresolved": false, "patch_set": 1, "id": "df33271e_f58dc431", "line": 2634, "range": {"start_line": 2634, "start_character": 8, "end_line": 2634, "end_character": 26}, "updated": "2020-03-26 19:49:24.000000000", "message": "returning nothing in the 'else' case is unexpected", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "4954fa5d6c21bc251b0d532428e382044d4a2cbb", "unresolved": false, "patch_set": 1, "id": "df33271e_230e5be4", "line": 2634, "range": {"start_line": 2634, "start_character": 8, "end_line": 2634, "end_character": 26}, "in_reply_to": "df33271e_f58dc431", "updated": "2020-04-01 23:33:18.000000000", "message": "yes, the driver is still not prepared for any other status if the manager decides to send. Still logging just a warning and not moving to an error state. Just thinking on future new 'pending' states.", "commit_id": "ac34f3ac83511fbbc8174f790b0b64de1a47c756"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_2c8896c4", "line": 495, "range": {"start_line": 495, "start_character": 5, "end_line": 495, "end_character": 68}, "updated": "2020-04-07 15:57:43.000000000", "message": "Aren't you just going to return 0% (and 100% for the synchronous case)  -- or is there more to do here that I'm missing.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_8aff0166", "line": 495, "range": {"start_line": 495, "start_character": 5, "end_line": 495, "end_character": 68}, "in_reply_to": "df33271e_2c8896c4", "updated": "2020-04-07 17:37:12.000000000", "message": "The share-manager already sets 100% for the synchronous case where the new share is active. I'm not returning 0% since its not correspond to the current progress, instead  we prefer to left the field progress as None, and the user may know that the progress info are not being provided at all.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_cc376a4d", "line": 515, "range": {"start_line": 514, "start_character": 0, "end_line": 515, "end_character": 25}, "updated": "2020-04-07 15:57:43.000000000", "message": "This comment seems premature or at least worded \"funny\": it made me look for a save to private storage here but it's a lot further down.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_6a371d4f", "line": 515, "range": {"start_line": 514, "start_character": 0, "end_line": 515, "end_character": 25}, "in_reply_to": "df33271e_cc376a4d", "updated": "2020-04-07 17:37:12.000000000", "message": "You are right Tom, the comment is suppose to explain that the dict below is to hold the info that will be stored in the private storage. Will fix this in the next PS.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_2769d1bd", "line": 731, "range": {"start_line": 729, "start_character": 8, "end_line": 731, "end_character": 51}, "updated": "2020-04-07 15:57:43.000000000", "message": "Are we sure it's OK just to log a warning and skip rather than raising an Exception?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_aa82c5a3", "line": 731, "range": {"start_line": 729, "start_character": 8, "end_line": 731, "end_character": 51}, "in_reply_to": "df33271e_2769d1bd", "updated": "2020-04-07 17:37:12.000000000", "message": "I can't think on a reason for not raising an exception here at this moment. I'll provide an update soon if nobody disagree. Thanks!", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_331f1b09", "line": 497, "range": {"start_line": 496, "start_character": 0, "end_line": 497, "end_character": 48}, "updated": "2020-04-09 08:04:37.000000000", "message": "The parent share is always provided: https://review.opendev.org/#/c/709697/11/manila/share/manager.py@1765", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_8bce9e57", "line": 497, "range": {"start_line": 496, "start_character": 0, "end_line": 497, "end_character": 48}, "in_reply_to": "df33271e_331f1b09", "updated": "2020-04-09 19:07:49.000000000", "message": "Yes, removed.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_d3d34f37", "line": 512, "range": {"start_line": 512, "start_character": 56, "end_line": 512, "end_character": 62}, "updated": "2020-04-09 08:04:37.000000000", "message": "nit: None is the default", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_ebd76aed", "line": 512, "range": {"start_line": 512, "start_character": 56, "end_line": 512, "end_character": 62}, "in_reply_to": "df33271e_d3d34f37", "updated": "2020-04-09 19:07:49.000000000", "message": "removed.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_f3de533c", "line": 523, "range": {"start_line": 523, "start_character": 21, "end_line": 523, "end_character": 47}, "updated": "2020-04-09 08:04:37.000000000", "message": "This is a dict..", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "64e431e18de4ff17e0dba4115d6bc2f4b36f420d", "unresolved": false, "patch_set": 6, "id": "df33271e_beeda2b8", "line": 523, "range": {"start_line": 523, "start_character": 21, "end_line": 523, "end_character": 47}, "in_reply_to": "df33271e_2b631244", "updated": "2020-04-09 19:52:35.000000000", "message": "I see the problem now - currently, you're converting the parent share and its share server into a dictionary in the share manager, but, the actual/child share instance object and its own share server aren't being converted yet - I think this is something you can fix in a future patch in the share manager:\n\nhttps://review.opendev.org/#/c/709697/11/manila/share/manager.py@1768", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "96153ef4c522f3dc8f433f355e79ea10c806f1a9", "unresolved": false, "patch_set": 6, "id": "df33271e_fef56a58", "line": 523, "range": {"start_line": 523, "start_character": 21, "end_line": 523, "end_character": 47}, "in_reply_to": "df33271e_beeda2b8", "updated": "2020-04-09 20:14:30.000000000", "message": "Yes, but this looks like a endless conversion cause here have lots of backrefs associated to each entity. We can discuss later the best approach to solve this. Thanks.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_2b631244", "line": 523, "range": {"start_line": 523, "start_character": 21, "end_line": 523, "end_character": 47}, "in_reply_to": "df33271e_f3de533c", "updated": "2020-04-09 19:07:49.000000000", "message": "This explanation will fit all 'to_dict()' calls.\nEven if we try do convert the share/share-server objects to a dict, we still face issues with sqlalchemy and 'detached session' errors. \nThis happens because share-manager 'to_dict' method aren't \n converting all nested sqlalchemy objects, and a copy or a dict updates leads us, somehow, to 'detached session' errors.\nSo calling a 'to_dict' here avoid these type of errors.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "7bf9102a714505966784d39bb1c27edfba0bc221", "unresolved": false, "patch_set": 6, "id": "df33271e_1ca2d6ae", "line": 523, "range": {"start_line": 523, "start_character": 21, "end_line": 523, "end_character": 47}, "in_reply_to": "df33271e_fef56a58", "updated": "2020-04-09 21:21:43.000000000", "message": "+1", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_53e73f13", "line": 524, "range": {"start_line": 524, "start_character": 38, "end_line": 524, "end_character": 60}, "updated": "2020-04-09 08:04:37.000000000", "message": "same", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_ab56025b", "line": 524, "range": {"start_line": 524, "start_character": 38, "end_line": 524, "end_character": 60}, "in_reply_to": "df33271e_53e73f13", "updated": "2020-04-09 19:07:49.000000000", "message": "same as L523.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_b30a0bcf", "line": 2390, "range": {"start_line": 2389, "start_character": 16, "end_line": 2390, "end_character": 25}, "updated": "2020-04-09 08:04:37.000000000", "message": "Not all EAPIERRORS mean that the volume is undergoing a clone split - unfortunately 13001/EAPIERROR is a generic error, and sadly, you'll have to look into the message for keywords, perhaps like this:\n\n https://opendev.org/openstack/manila/src/commit/0c6b39d9a207de9be742f95dfe598b28396bffbe/manila/share/drivers/netapp/dataontap/client/client_cmode.py#L2355-L2356", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_eb4c8ac9", "line": 2390, "range": {"start_line": 2389, "start_character": 16, "end_line": 2390, "end_character": 25}, "in_reply_to": "df33271e_b30a0bcf", "updated": "2020-04-09 19:07:49.000000000", "message": "Much better! Thanks for sharing.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "64e431e18de4ff17e0dba4115d6bc2f4b36f420d", "unresolved": false, "patch_set": 7, "id": "df33271e_dec22634", "line": 2396, "range": {"start_line": 2396, "start_character": 20, "end_line": 2396, "end_character": 25}, "updated": "2020-04-09 19:52:35.000000000", "message": "raise ShareBackendException?", "commit_id": "b4c66338f22f249e3a9791f13837cf18dd38dba6"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "96153ef4c522f3dc8f433f355e79ea10c806f1a9", "unresolved": false, "patch_set": 7, "id": "df33271e_5e9c560d", "line": 2396, "range": {"start_line": 2396, "start_character": 20, "end_line": 2396, "end_character": 25}, "in_reply_to": "df33271e_dec22634", "updated": "2020-04-09 20:14:30.000000000", "message": "yeah, even been a private method, this should be converted here. Thanks.", "commit_id": "b4c66338f22f249e3a9791f13837cf18dd38dba6"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "761d7ec766c015e85e8cc9bf5cda37528bee3473", "unresolved": false, "patch_set": 8, "id": "df33271e_7c3cc22e", "line": 2345, "range": {"start_line": 2345, "start_character": 4, "end_line": 2345, "end_character": 75}, "updated": "2020-04-09 21:32:42.000000000", "message": "Don't know how this was moved to here, must be something with IDE shortcuts.", "commit_id": "63867a3ba9de3f5411420d47c7bf474419b3fcca"}], "manila/share/drivers/netapp/dataontap/cluster_mode/lib_multi_svm.py": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_3b1612f3", "line": 561, "range": {"start_line": 561, "start_character": 22, "end_line": 561, "end_character": 29}, "updated": "2020-04-07 15:57:43.000000000", "message": "nit: reside", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_ba7b008a", "line": 561, "range": {"start_line": 561, "start_character": 22, "end_line": 561, "end_character": 29}, "in_reply_to": "df33271e_3b1612f3", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_bbba226b", "line": 566, "range": {"start_line": 566, "start_character": 40, "end_line": 566, "end_character": 62}, "updated": "2020-04-07 15:57:43.000000000", "message": "What happens if share_server is None?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_0a2e51a4", "line": 566, "range": {"start_line": 566, "start_character": 40, "end_line": 566, "end_character": 62}, "in_reply_to": "df33271e_bbba226b", "updated": "2020-04-07 17:37:12.000000000", "message": "Will raise an AttributeError and fail.\nSince that lib_multi_svm is only called in DHSS==True mode, the share-manager will guarantee that a share_server will for this driver call. Let me know if you think that we still need to raise a different error for a share_server == None.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_36974993", "line": 592, "range": {"start_line": 592, "start_character": 20, "end_line": 592, "end_character": 57}, "updated": "2020-04-07 15:57:43.000000000", "message": "Can this call ever fail?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_4dfeb305", "line": 592, "range": {"start_line": 592, "start_character": 20, "end_line": 592, "end_character": 57}, "in_reply_to": "df33271e_36974993", "updated": "2020-04-07 17:37:12.000000000", "message": "Yes, can fail if the operator don't provide peering between different clusters. If it fails here, will fail the creation process. Didn't see any other operations above that need to rollback in this scenario. I'm OK with this failing and providing the vserver peer error message. What do you think?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_7691d199", "line": 598, "range": {"start_line": 598, "start_character": 20, "end_line": 598, "end_character": 58}, "updated": "2020-04-07 15:57:43.000000000", "message": "Or this one?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "0de119852d1b3552565963cb5d587b00c587dabc", "unresolved": false, "patch_set": 5, "id": "df33271e_ad35bfdd", "line": 598, "range": {"start_line": 598, "start_character": 20, "end_line": 598, "end_character": 58}, "in_reply_to": "df33271e_7691d199", "updated": "2020-04-07 17:37:12.000000000", "message": "Can fail for the same reasons pointed in the call above. If the admin does not provide a peered cluster, the call above will fail first and this one won't be called.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_d39b4fc6", "line": 561, "range": {"start_line": 560, "start_character": 8, "end_line": 561, "end_character": 65}, "updated": "2020-04-09 08:04:37.000000000", "message": "parent share is always provided per https://review.opendev.org/#/c/709697/11/manila/share/manager.py@1765\n\nSo this condition is always true..", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_cb49c6b7", "line": 561, "range": {"start_line": 560, "start_character": 8, "end_line": 561, "end_character": 65}, "in_reply_to": "df33271e_d39b4fc6", "updated": "2020-04-09 19:07:49.000000000", "message": "True! Done!", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_93b54735", "line": 565, "range": {"start_line": 565, "start_character": 29, "end_line": 565, "end_character": 33}, "updated": "2020-04-09 08:04:37.000000000", "message": "deep copy?", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_33955b88", "line": 565, "range": {"start_line": 565, "start_character": 40, "end_line": 565, "end_character": 49}, "updated": "2020-04-09 08:04:37.000000000", "message": "this is already performed by the share manager, why do it again?", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_0bcd6e30", "line": 565, "range": {"start_line": 565, "start_character": 40, "end_line": 565, "end_character": 49}, "in_reply_to": "df33271e_33955b88", "updated": "2020-04-09 19:07:49.000000000", "message": "same as [1]\n\n[1] https://review.opendev.org/#/c/712642/6/manila/share/drivers/netapp/dataontap/cluster_mode/lib_base.py@523", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "16e7e67ddf484c665c73a46ae577c7df9e09caa9", "unresolved": false, "patch_set": 6, "id": "df33271e_8bd85eef", "line": 565, "range": {"start_line": 565, "start_character": 29, "end_line": 565, "end_character": 33}, "in_reply_to": "df33271e_93b54735", "updated": "2020-04-09 19:07:49.000000000", "message": "yeah, after converting to dict again, we shouldn't have problems using deep copy.", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "64e431e18de4ff17e0dba4115d6bc2f4b36f420d", "unresolved": false, "patch_set": 7, "id": "df33271e_9e289ee2", "line": 560, "range": {"start_line": 560, "start_character": 11, "end_line": 560, "end_character": 48}, "updated": "2020-04-09 19:52:35.000000000", "message": "what you really want to check here is if parent and child are in different vservers in different clusters, this check won't do that...", "commit_id": "b4c66338f22f249e3a9791f13837cf18dd38dba6"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "96153ef4c522f3dc8f433f355e79ea10c806f1a9", "unresolved": false, "patch_set": 7, "id": "df33271e_a113c35b", "line": 560, "range": {"start_line": 560, "start_character": 11, "end_line": 560, "end_character": 48}, "in_reply_to": "df33271e_9e289ee2", "updated": "2020-04-09 20:14:30.000000000", "message": "Correct. By adding this I just made a shortcut to avoid all the process below. If parent and child are in the same backend and pool, they must be in the same cluster right? When creating share-from-snapshot we only need to create a peering for inter-cluster operations, since intra-cluster will not use snapmirror. This was my initial idea since host info is easy to retrieve. A note could clarify this for who's reading the code. Or just remove the if-clause.", "commit_id": "b4c66338f22f249e3a9791f13837cf18dd38dba6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "7bf9102a714505966784d39bb1c27edfba0bc221", "unresolved": false, "patch_set": 7, "id": "df33271e_dc74ee38", "line": 560, "range": {"start_line": 560, "start_character": 11, "end_line": 560, "end_character": 48}, "in_reply_to": "df33271e_a113c35b", "updated": "2020-04-09 21:21:43.000000000", "message": "I see, yeah, makes sense..", "commit_id": "b4c66338f22f249e3a9791f13837cf18dd38dba6"}], "manila/share/drivers/netapp/options.py": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_989ac4c2", "line": 158, "range": {"start_line": 158, "start_character": 69, "end_line": 158, "end_character": 76}, "updated": "2020-04-07 15:57:43.000000000", "message": "add space after ``volume``", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_983644b4", "line": 158, "range": {"start_line": 158, "start_character": 26, "end_line": 158, "end_character": 49}, "updated": "2020-04-07 15:57:43.000000000", "message": "volume clone split operation?", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_1a6dcccb", "line": 158, "range": {"start_line": 158, "start_character": 26, "end_line": 158, "end_character": 49}, "in_reply_to": "df33271e_983644b4", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_fa7108aa", "line": 158, "range": {"start_line": 158, "start_character": 69, "end_line": 158, "end_character": 76}, "in_reply_to": "df33271e_989ac4c2", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}], "releasenotes/notes/netapp-create-share-from-snapshot-another-pool-330639b57aa5f04d.yaml": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "819c13bcbb0dc384ab19a5d060d5898624350752", "unresolved": false, "patch_set": 5, "id": "df33271e_b8598836", "line": 5, "range": {"start_line": 4, "start_character": 4, "end_line": 5, "end_character": 72}, "updated": "2020-04-07 15:57:43.000000000", "message": "Suggest:\n   The NetApp driver now supports efficiently creating new shares from snaphots in pools or on back ends different from those for the original source share.", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a9661b30badc7ae2536dbd398d8a28f8ae3cb3b3", "unresolved": false, "patch_set": 5, "id": "df33271e_3a5bc32e", "line": 5, "range": {"start_line": 5, "start_character": 68, "end_line": 5, "end_character": 72}, "updated": "2020-04-06 18:00:11.000000000", "message": "nit: one", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_9a471c4d", "line": 5, "range": {"start_line": 5, "start_character": 68, "end_line": 5, "end_character": 72}, "in_reply_to": "df33271e_3a5bc32e", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "1b96422a209b212a72a6f072c365d415b35eaf89", "unresolved": false, "patch_set": 5, "id": "df33271e_7a44d847", "line": 5, "range": {"start_line": 4, "start_character": 4, "end_line": 5, "end_character": 72}, "in_reply_to": "df33271e_b8598836", "updated": "2020-04-09 03:37:45.000000000", "message": "Done", "commit_id": "f1d8820b7a8b1369e9853bc57dd56c7db32e9d9a"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a287e1ff1d0e446d77efb53989766ad43cfff3fd", "unresolved": false, "patch_set": 6, "id": "df33271e_3310bb4e", "line": 5, "range": {"start_line": 5, "start_character": 51, "end_line": 5, "end_character": 73}, "updated": "2020-04-09 08:04:37.000000000", "message": "nit: that of the source share", "commit_id": "45e756bcb18f3259dec9b52496a3e68c2c908d9d"}]}}, "openstack%2Fpuppet-tripleo~master~If4a6f25015374883050c48b7705e8207906118f4": {"owner_id": 11952, "owner_name": "Flavio Fernandes", "owner_email": "flavio@flaviof.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:15:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-10 08:07:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11082, "name": "Kamil Sambor", "email": "ksambor@redhat.com", "username": "ksambor"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"releasenotes/notes/add-octavia-provider-ovn-6734aa08af4772e4.yaml": [{"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "8bf986ef8748c746ec8426a48a5a19c6e2ecff86", "unresolved": false, "patch_set": 8, "id": "df33271e_e437a7af", "line": 6, "updated": "2020-04-09 10:18:38.000000000", "message": "Existing release notes should be static.", "commit_id": "2c1ad847ab659a64aed35cd6a3d091a22555c5e7"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "9d885f1e25e62c9949915bd52395a4e4b935d2ed", "unresolved": false, "patch_set": 8, "id": "df33271e_7f04c14a", "line": 6, "in_reply_to": "df33271e_e437a7af", "updated": "2020-04-09 12:20:44.000000000", "message": "ack. They were before I had to break them into 2.", "commit_id": "2c1ad847ab659a64aed35cd6a3d091a22555c5e7"}]}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~I64889715218b3f51a485dbca94ab733410aa0178": {"owner_id": 9914, "owner_name": "Ade Lee", "owner_email": "alee@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31661, "name": "Dave Wilde", "username": "dwilde", "inactive": true}, {"value": 2, "date": "2020-04-08 17:31:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 1, "date": "2020-04-08 14:22:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 2, "date": "2020-04-08 17:39:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 1, "date": "2020-04-08 17:32:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7414, "name": "David Wilde", "email": "dwilde@redhat.com", "username": "d34dh0r53"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}], "comments": {"tripleoclient/constants.py": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "e2061521ef05dfba3226bc887c350e953e85421e", "unresolved": false, "patch_set": 1, "id": "df33271e_3674dbce", "line": 97, "range": {"start_line": 96, "start_character": 0, "end_line": 97, "end_character": 42}, "updated": "2020-04-02 02:12:10.000000000", "message": "I'm not sure how much it matters, but this is named slightly different in master: \n\nhttps://opendev.org/openstack/python-tripleoclient/src/branch/master/tripleoclient/constants.py#L92-L93", "commit_id": "8408168aa7bd80da94efe0ea9ad1ed9e4c78e0e9"}], "tripleoclient/tests/v1/overcloud_delete/test_overcloud_delete.py": [{"author": {"_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, "change_message_id": "1d1339852a53a0a1f8b09ba2c4d3973ba8885c8d", "unresolved": false, "patch_set": 9, "id": "df33271e_86489587", "line": 109, "range": {"start_line": 109, "start_character": 8, "end_line": 109, "end_character": 48}, "updated": "2020-04-08 00:08:53.000000000", "message": "need to mock shutil.rmtree as well.", "commit_id": "bf195121d50d4ad372001df06f012f14f8a10995"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "3480153f8810805093361558e4dc05d0dfb58ff4", "unresolved": false, "patch_set": 9, "id": "df33271e_1584a85d", "line": 109, "range": {"start_line": 109, "start_character": 8, "end_line": 109, "end_character": 48}, "in_reply_to": "df33271e_86489587", "updated": "2020-04-08 12:46:28.000000000", "message": "Weird, that didn't fail for me locally.", "commit_id": "bf195121d50d4ad372001df06f012f14f8a10995"}], "tripleoclient/v1/overcloud_delete.py": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "bb57d69f88be93b87a1d460026803a7552c05268", "unresolved": false, "patch_set": 1, "id": "df33271e_f3c70f95", "line": 91, "range": {"start_line": 91, "start_character": 11, "end_line": 91, "end_character": 34}, "updated": "2020-04-02 19:38:48.000000000", "message": "I was able to remove this without breaking anything.", "commit_id": "8408168aa7bd80da94efe0ea9ad1ed9e4c78e0e9"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "e2061521ef05dfba3226bc887c350e953e85421e", "unresolved": false, "patch_set": 1, "id": "df33271e_59cef062", "line": 101, "updated": "2020-04-02 02:12:10.000000000", "message": "I needed to add the following line here to get this to run when I tested it locally:\n\n  ansible_config='/etc/ansible/ansible.cfg',\n\nI think the crux of the issue is that the default value is None, in which case run_ansible_playbook attempts to create a temp ansible.cfg. Creating a temp file in the workdir we're passing isn't going to work since the workdir is owned by the root user (I'm not invoking `openstack overcloud delete overcloud` as the root user).\n\nI don't know if what I did is the right solution. It's really just a short-circuit so that run_ansible_playbook doesn't attempt to create files in that directory.", "commit_id": "8408168aa7bd80da94efe0ea9ad1ed9e4c78e0e9"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "01eb4a6e5799d2e3f4899fd5a6a169bb7f9bf893", "unresolved": false, "patch_set": 2, "id": "df33271e_dc75b765", "line": 94, "updated": "2020-04-02 22:29:40.000000000", "message": "pep8: E501 line too long (82 > 79 characters)", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "1f9dc1b43791aed98ee63b4033b0e05249d180a5", "unresolved": false, "patch_set": 2, "id": "df33271e_0d69948a", "line": 94, "in_reply_to": "df33271e_dc75b765", "updated": "2020-04-03 18:21:33.000000000", "message": "Done", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "01eb4a6e5799d2e3f4899fd5a6a169bb7f9bf893", "unresolved": false, "patch_set": 2, "id": "df33271e_bc70b373", "line": 95, "updated": "2020-04-02 22:29:40.000000000", "message": "pep8: E501 line too long (81 > 79 characters)", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "1f9dc1b43791aed98ee63b4033b0e05249d180a5", "unresolved": false, "patch_set": 2, "id": "df33271e_2d6c589b", "line": 95, "in_reply_to": "df33271e_bc70b373", "updated": "2020-04-03 18:21:33.000000000", "message": "Done", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "1d7408750bb6ee84549b07fe2f2787b9e50842e2", "unresolved": false, "patch_set": 2, "id": "df33271e_13e392a5", "line": 98, "range": {"start_line": 98, "start_character": 8, "end_line": 98, "end_character": 46}, "updated": "2020-04-02 19:52:45.000000000", "message": "I would use a disposable tmp folder as you might overwrite one in the home dir.", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "1f9dc1b43791aed98ee63b4033b0e05249d180a5", "unresolved": false, "patch_set": 2, "id": "df33271e_ed927058", "line": 98, "range": {"start_line": 98, "start_character": 8, "end_line": 98, "end_character": 46}, "in_reply_to": "df33271e_13e392a5", "updated": "2020-04-03 18:21:33.000000000", "message": "Done", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "01eb4a6e5799d2e3f4899fd5a6a169bb7f9bf893", "unresolved": false, "patch_set": 2, "id": "df33271e_1c6c3f9a", "line": 99, "updated": "2020-04-02 22:29:40.000000000", "message": "pep8: E501 line too long (82 > 79 characters)", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "1f9dc1b43791aed98ee63b4033b0e05249d180a5", "unresolved": false, "patch_set": 2, "id": "df33271e_cd6e8c95", "line": 99, "in_reply_to": "df33271e_1c6c3f9a", "updated": "2020-04-03 18:21:33.000000000", "message": "Done", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "01eb4a6e5799d2e3f4899fd5a6a169bb7f9bf893", "unresolved": false, "patch_set": 2, "id": "df33271e_fc66bbba", "line": 111, "updated": "2020-04-02 22:29:40.000000000", "message": "pep8: E201 whitespace after '('", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "1f9dc1b43791aed98ee63b4033b0e05249d180a5", "unresolved": false, "patch_set": 2, "id": "df33271e_ed71d079", "line": 111, "in_reply_to": "df33271e_fc66bbba", "updated": "2020-04-03 18:21:33.000000000", "message": "Done", "commit_id": "0f2c343743bf2261a5dec4631a7bed28639c2b20"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c101bef76d67ec511b52cf3706d634a63d5c007e", "unresolved": false, "patch_set": 5, "id": "df33271e_3e2da0a8", "line": 100, "updated": "2020-04-03 21:46:12.000000000", "message": "pep8: E303 too many blank lines (2)", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "bddc9b2a645c5ab58884cfd0568a45013678a337", "unresolved": false, "patch_set": 5, "id": "df33271e_1fb7d1da", "line": 100, "in_reply_to": "df33271e_3e2da0a8", "updated": "2020-04-06 17:40:44.000000000", "message": "Done", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "02ebb20282f3fb3ca4436c9a3f51f545421769d8", "unresolved": false, "patch_set": 5, "id": "df33271e_835a9527", "line": 114, "range": {"start_line": 114, "start_character": 8, "end_line": 114, "end_character": 10}, "updated": "2020-04-03 19:56:24.000000000", "message": "Might want to check this to see if it succeeded and if not, throw some messaging indicating it failed", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "bddc9b2a645c5ab58884cfd0568a45013678a337", "unresolved": false, "patch_set": 5, "id": "df33271e_7f3a5d34", "line": 114, "range": {"start_line": 114, "start_character": 8, "end_line": 114, "end_character": 10}, "in_reply_to": "df33271e_835a9527", "updated": "2020-04-06 17:40:44.000000000", "message": "Good call. Took a stab at this in the latest patch set.", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "02ebb20282f3fb3ca4436c9a3f51f545421769d8", "unresolved": false, "patch_set": 5, "id": "df33271e_03468550", "line": 125, "range": {"start_line": 108, "start_character": 0, "end_line": 125, "end_character": 73}, "updated": "2020-04-03 19:56:24.000000000", "message": "I would try/catch/finally to prevent the tmpdir from sticking around", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "bddc9b2a645c5ab58884cfd0568a45013678a337", "unresolved": false, "patch_set": 5, "id": "df33271e_df4729bc", "line": 125, "range": {"start_line": 108, "start_character": 0, "end_line": 125, "end_character": 73}, "in_reply_to": "df33271e_03468550", "updated": "2020-04-06 17:40:44.000000000", "message": "++\n\nI wasn't sure what exception to look for specifically, so I stuck with a try/finally.\n\nLet me know if you think that will work.", "commit_id": "ec198a621c8bb10eeee6088d652c50693df99183"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dd69e678db6295aa61dfb03b54fd542aa1caaa50", "unresolved": false, "patch_set": 7, "id": "df33271e_b75089d6", "line": 124, "updated": "2020-04-06 21:49:44.000000000", "message": "pep8: H702  Formatting operation should be outside of localization method call", "commit_id": "db115b944e6f826d4fd4ee21ac1ece60dc3addd9"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "3b91f8930d01eb74a59a1d28ab403a605fba7fa2", "unresolved": false, "patch_set": 7, "id": "df33271e_183b54d1", "line": 124, "in_reply_to": "df33271e_b75089d6", "updated": "2020-04-07 13:23:07.000000000", "message": "Done", "commit_id": "db115b944e6f826d4fd4ee21ac1ece60dc3addd9"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "81824f74aa7fafde53096d344f056207217aa4d5", "unresolved": false, "patch_set": 8, "id": "df33271e_0d078b1e", "line": 96, "updated": "2020-04-07 17:59:03.000000000", "message": "pep8: H702  Argument to _, _LI, _LW, _LC, or _LE must be just a string", "commit_id": "ea9923448fb00f1c84ce62931f72b222d0f815c7"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "81824f74aa7fafde53096d344f056207217aa4d5", "unresolved": false, "patch_set": 8, "id": "df33271e_ed018708", "line": 111, "updated": "2020-04-07 17:59:03.000000000", "message": "pep8: H702  Argument to _, _LI, _LW, _LC, or _LE must be just a string", "commit_id": "ea9923448fb00f1c84ce62931f72b222d0f815c7"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "81824f74aa7fafde53096d344f056207217aa4d5", "unresolved": false, "patch_set": 8, "id": "df33271e_50fe4c05", "line": 128, "updated": "2020-04-07 17:59:03.000000000", "message": "pep8: H702  Argument to _, _LI, _LW, _LC, or _LE must be just a string", "commit_id": "ea9923448fb00f1c84ce62931f72b222d0f815c7"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1244864710b884442dc1b0dc3e0fbd1ed532f049", "unresolved": false, "patch_set": 9, "id": "df33271e_b3219da2", "line": 98, "updated": "2020-04-07 22:12:41.000000000", "message": "pep8: H701  Empty localization string", "commit_id": "bf195121d50d4ad372001df06f012f14f8a10995"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1244864710b884442dc1b0dc3e0fbd1ed532f049", "unresolved": false, "patch_set": 9, "id": "df33271e_932459b1", "line": 113, "updated": "2020-04-07 22:12:41.000000000", "message": "pep8: H701  Empty localization string", "commit_id": "bf195121d50d4ad372001df06f012f14f8a10995"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1244864710b884442dc1b0dc3e0fbd1ed532f049", "unresolved": false, "patch_set": 9, "id": "df33271e_f33a05cb", "line": 129, "updated": "2020-04-07 22:12:41.000000000", "message": "pep8: H701  Empty localization string", "commit_id": "bf195121d50d4ad372001df06f012f14f8a10995"}]}}, "openstack%2Ftripleo-heat-templates~master~I46eb9a24dd66821b27524fe4d1fdab617b6fa948": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 07:49:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-09 20:48:07.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}], "comments": {"extraconfig/post_deploy/undercloud_ctlplane_network.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fe15407323ad30b8e680ca655557bea45959bedb", "unresolved": false, "patch_set": 11, "id": "df33271e_bd1f4859", "line": 25, "updated": "2020-03-31 23:12:37.000000000", "message": "E302 expected 2 blank lines, found 1", "commit_id": "835f0777b1ca8d17c8cd6ec7f8ab42e17d5b76f7"}]}}, "openstack%2Fpuppet-tripleo~master~Ic668398c706d3a0eb834750453d1b42ce7ab9b16": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-09 20:27:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "x%2Fstackalytics~master~Iff56cea7d2b999afab51e0068278afb8514649e9": {"owner_id": 31814, "owner_name": "XiaoYu Zhu", "owner_email": "z503755743@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 15:12:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}], "comments": {}}, "x%2Fstackalytics~master~I6fe7fd911e894278f17e0568c3dbb140489f894a": {"owner_id": 31506, "owner_name": "Lin PeiWen", "owner_email": "591171850@qq.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 15:11:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}, {"value": 0, "_account_id": 31506, "name": "Lin PeiWen", "email": "591171850@qq.com", "username": "LinPeiWen"}], "comments": {}}, "openstack%2Fopenstack-zuul-jobs~master~Ic872ab38568536f7bd25d593f80c2d6aa8379b01": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-10 15:05:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-10 14:53:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~I2d7735751e504a10dbcf73a2fea832deeca664f0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:02:53.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-09 16:33:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {}}, "openstack%2Ftripleo-quickstart-extras~master~I167d00ee812f8442a3f2294a2bdad01ec8a9c052": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 02:11:45.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-09 18:25:40.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fos-net-config~stable%2Ftrain~Ibbe8021afdc4772c6e2017d11d012b8f5c46d907": {"owner_id": 12398, "owner_name": "Dan Sneddon", "owner_email": "dsneddon@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:14.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 2, "date": "2020-04-09 23:33:51.000000000", "_account_id": 21909, "name": "Bob Fournier", "email": "bfournie@redhat.com", "username": "bfournie"}], "comments": {}}, "openstack%2Fos-net-config~stable%2Fstein~Ibbe8021afdc4772c6e2017d11d012b8f5c46d907": {"owner_id": 12398, "owner_name": "Dan Sneddon", "owner_email": "dsneddon@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:17.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 2, "date": "2020-04-09 23:33:16.000000000", "_account_id": 21909, "name": "Bob Fournier", "email": "bfournie@redhat.com", "username": "bfournie"}], "comments": {}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~I4bc99bd3881251db0ea4d27e4c5e149c31edbd42": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 19:56:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-26 19:40:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 1, "date": "2020-03-27 08:15:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~If4ca8b6ba75d5d7321cb9ad2c6a9293bd30b796d": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 2, "date": "2020-04-09 16:26:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-04-09 16:26:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "1f7f4aeaaef50f573300b12d816f30ca5c69ba50", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_61b6d18f", "line": 14, "updated": "2020-01-30 14:37:56.000000000", "message": "I think there should be a link it was \"cherry-picked\" from https://review.opendev.org/#/c/703703/3 or the hash id?", "commit_id": "f692c27feb75379c63188a7d3e5476e1519a033b"}]}}, "openstack%2Fcharm-mysql-innodb-cluster~master~If6beb4450be755a1b204c63759de32d486201202": {"owner_id": 20805, "owner_name": "David Ames", "owner_email": "david@davam.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 14:34:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}], "comments": {}}, "openstack%2Fcharm-mysql-innodb-cluster~master~Idc44c27cd9a766c9d4fb2e5b2773ae3a4829741b": {"owner_id": 20805, "owner_name": "David Ames", "owner_email": "david@davam.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-10 06:59:29.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 2, "date": "2020-04-10 14:32:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}], "comments": {}}, "openstack%2Fopenstack-ansible-tests~master~Iaf8ebe677b40b5a8817eaddd1542bbac2c8d7c59": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:25:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-10 13:15:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}, {"value": 1, "date": "2020-04-10 09:58:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fnova~master~Ie9ae31cf3ab7ca108f132e4e0aff56368c40e6f7": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 2, "date": "2020-04-10 00:52:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:19:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fironic-lib~stable%2Fussuri~I8942016ef88695fb9c2fad14f179168a608e4af9": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:39:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironicclient~stable%2Fussuri~Ie7e62fd485e509c3f7bb53fe47dd1bb66cdf7b0e": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fironic-lib~stable%2Fussuri~I754a39e53aaae57313f2f2a53f4a3d7f4861f6e9": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:39:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironicclient~master~I0a5b8ef750905050db255d018a18182aadf576b3": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironicclient~stable%2Fussuri~I596fb224c881eb0e8dcbb8a9a938bdccc8dada5c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fcharm-deployment-guide~master~Ic09a05547469bcc3e5c8caa59d10f84ab3009cc9": {"owner_id": 31836, "owner_name": "Facundo Ciccioli", "owner_email": "facundo.ciccioli@canonical.com", "labels": {}, "comments": {}}, "openstack%2Frally~master~I3b45c4d3ed4eafe0b2fe539bef3173fcd00bd064": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:45:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fkolla-ansible~master~Ibff2502bbc6dedbd064e01d8dac59a8f647d09ff": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": -1, "date": "2020-04-10 13:04:19.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fpython-manilaclient~master~I585c9c845851fcd581e08b0084fc2528b85cd632": {"owner_id": 29632, "owner_name": "Carlos Eduardo", "owner_email": "ces.eduardo98@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-04-09 23:27:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-09 22:10:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-04-09 22:08:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"manilaclient/api_versions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5547ba5a99205e8e2f3974222125cbe289b85b03", "unresolved": false, "patch_set": 6, "id": "df33271e_ebebfd74", "line": 206, "updated": "2020-04-09 02:01:25.000000000", "message": "cover:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5547ba5a99205e8e2f3974222125cbe289b85b03", "unresolved": false, "patch_set": 6, "id": "df33271e_4b04a94a", "line": 206, "updated": "2020-04-09 02:01:25.000000000", "message": "py36:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5547ba5a99205e8e2f3974222125cbe289b85b03", "unresolved": false, "patch_set": 6, "id": "df33271e_2b016539", "line": 206, "updated": "2020-04-09 02:01:25.000000000", "message": "py37:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5547ba5a99205e8e2f3974222125cbe289b85b03", "unresolved": false, "patch_set": 6, "id": "df33271e_8bfa3140", "line": 206, "updated": "2020-04-09 02:01:25.000000000", "message": "py38:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4ccfc1377028d79e49b8097fa5b00675a7da2482", "unresolved": false, "patch_set": 7, "id": "df33271e_e6eb3475", "line": 206, "updated": "2020-04-09 03:08:16.000000000", "message": "cover:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8dd25d1c29d374707886a650f0083396191c4f55"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4ccfc1377028d79e49b8097fa5b00675a7da2482", "unresolved": false, "patch_set": 7, "id": "df33271e_4604a04a", "line": 206, "updated": "2020-04-09 03:08:16.000000000", "message": "py36:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8dd25d1c29d374707886a650f0083396191c4f55"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4ccfc1377028d79e49b8097fa5b00675a7da2482", "unresolved": false, "patch_set": 7, "id": "df33271e_26019c39", "line": 206, "updated": "2020-04-09 03:08:16.000000000", "message": "py37:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8dd25d1c29d374707886a650f0083396191c4f55"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4ccfc1377028d79e49b8097fa5b00675a7da2482", "unresolved": false, "patch_set": 7, "id": "df33271e_86fa2840", "line": 206, "updated": "2020-04-09 03:08:16.000000000", "message": "py38:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8dd25d1c29d374707886a650f0083396191c4f55"}], "releasenotes/notes/remove-experimental-flag-from-share-groups-feature-dcf2b0b67fe4cac4.yaml": [{"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "e56a2757f2e47ae3ee1fd519964e6c805d4dd5bd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_898d2b2c", "line": 5, "range": {"start_line": 5, "start_character": 35, "end_line": 5, "end_character": 42}, "updated": "2020-03-12 00:28:09.000000000", "message": "commands", "commit_id": "6ad9cf748e1f9f2ecaa61ab9ce1939638efc0f67"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "5856029d8ba405af20dff070c7e5e39e97c09d71", "unresolved": false, "patch_set": 6, "id": "df33271e_8b9b5171", "line": 1, "updated": "2020-04-09 01:47:50.000000000", "message": "missing --- before prelude", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "38190ac6ca1eaba7078fac7f95c2a5f6d34a881b", "unresolved": false, "patch_set": 6, "id": "df33271e_2b8685ba", "line": 1, "in_reply_to": "df33271e_8b9b5171", "updated": "2020-04-09 02:03:15.000000000", "message": "Done", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "5856029d8ba405af20dff070c7e5e39e97c09d71", "unresolved": false, "patch_set": 6, "id": "df33271e_0bfd816d", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 5}, "updated": "2020-04-09 01:47:50.000000000", "message": "not needed here", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "38190ac6ca1eaba7078fac7f95c2a5f6d34a881b", "unresolved": false, "patch_set": 6, "id": "df33271e_8b8fd1cb", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 5}, "in_reply_to": "df33271e_0bfd816d", "updated": "2020-04-09 02:03:15.000000000", "message": "Done", "commit_id": "f20e21a07217ee790ae68f8b79879b8320ad03ef"}]}}, "openstack%2Freleases~master~I31d541fae57c11f176aa3bd2e0ac62e37761c820": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:53:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-10 13:51:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fsushy-cli~stable%2Fussuri~Ia96dad55d1ff054d426e058f4722c7ce810f3020": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:38:07.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironic-inspector-client~master~Ia550759b11f005fb8a2273a6aa668bb4edfe7537": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironic-inspector-client~stable%2Fussuri~I08ed1d5594c44a2a37afe17c79f522b5de301baf": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fsushy-cli~master~Ic0ee8d2066c88588215145f45e5f29d0dc1728bf": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 12:03:16.000000000", "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-04-10 13:38:02.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fpython-ironic-inspector-client~stable%2Fussuri~I69cfa15b5efdb398c67ea0e4d03b0df85c488a86": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fsushy-cli~stable%2Fussuri~I00db90fd04114b2c99be9a6579d53aba65c37e1b": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 13:37:58.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fopenstack-helm~master~Ibbb535a8753b4bada49e4b0139489f5966854b5c": {"owner_id": 18476, "owner_name": "Ganesh Maharaj Mahalingam", "owner_email": "ganesh.mahalingam@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18476, "name": "Ganesh Maharaj Mahalingam", "email": "ganesh.mahalingam@intel.com", "username": "gmmaha"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7485, "name": "Tushar Gohad", "email": "tushar.gohad@intel.com", "username": "tsg"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26509, "name": "Huamin Chen", "email": "huamin.chen@gmail.com", "username": "rootfs"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26201, "name": "AT&T Openstack-Helm CI", "email": "stacey.fletcher@att.com", "username": "ATT-OSH-CI"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8181, "name": "Jaesuk Ahn", "email": "bluejay.ahn@gmail.com", "username": "blujeay.kr"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24165, "name": "Renis Makadia", "email": "renis.makadia@att.com", "username": "renmak"}], "comments": {"ceph/templates/bin/_common_functions.sh.tpl": [{"author": {"_account_id": 26509, "name": "Huamin Chen", "email": "huamin.chen@gmail.com", "username": "rootfs"}, "change_message_id": "5a00fae1efdfd2840ad09f1b0cbb43642c310de5", "unresolved": false, "patch_set": 72, "id": "9f91af0f_11f9144c", "line": 108, "updated": "2018-01-03 19:16:53.000000000", "message": "It is not there in ceph container yet but in the future when we ceph-volume, we will revisit this since ceph-volume also supports lvm sub command", "commit_id": "3db8942411ebd05bac5e60f34a1311140ca1780c"}, {"author": {"_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, "change_message_id": "fa03714f144a00549bea773a7b6723709748543a", "unresolved": false, "patch_set": 72, "id": "9f91af0f_2c415f3a", "line": 108, "in_reply_to": "9f91af0f_11f9144c", "updated": "2018-01-03 19:24:56.000000000", "message": "i'd be amenable to changing or eliminating this if that support would still allow us to address things by [i]scsi addresses, which i think we need.", "commit_id": "3db8942411ebd05bac5e60f34a1311140ca1780c"}], "ceph/templates/bin/_osd_disk_activate.sh.tpl": [{"author": {"_account_id": 26509, "name": "Huamin Chen", "email": "huamin.chen@gmail.com", "username": "rootfs"}, "change_message_id": "5a00fae1efdfd2840ad09f1b0cbb43642c310de5", "unresolved": false, "patch_set": 72, "id": "9f91af0f_d14f2c90", "line": 27, "updated": "2018-01-03 19:16:53.000000000", "message": "validate OSD_DEVICE", "commit_id": "3db8942411ebd05bac5e60f34a1311140ca1780c"}, {"author": {"_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, "change_message_id": "fa03714f144a00549bea773a7b6723709748543a", "unresolved": false, "patch_set": 72, "id": "9f91af0f_2c139f5e", "line": 27, "in_reply_to": "9f91af0f_d14f2c90", "updated": "2018-01-03 19:24:56.000000000", "message": "will do.  would \"[ -b ${OSD_DEVICE} ]\" be roughly sufficient?", "commit_id": "3db8942411ebd05bac5e60f34a1311140ca1780c"}], "ceph/templates/bin/_osd_disk_prepare.sh.tpl": [{"author": {"_account_id": 26509, "name": "Huamin Chen", "email": "huamin.chen@gmail.com", "username": "rootfs"}, "change_message_id": "5a00fae1efdfd2840ad09f1b0cbb43642c310de5", "unresolved": false, "patch_set": 72, "id": "9f91af0f_7146607f", "line": 28, "updated": "2018-01-03 19:16:53.000000000", "message": "validate OSD_DEVICE before use", "commit_id": "3db8942411ebd05bac5e60f34a1311140ca1780c"}], "doc/source/install/multinode.rst": [{"author": {"_account_id": 18476, "name": "Ganesh Maharaj Mahalingam", "email": "ganesh.mahalingam@intel.com", "username": "gmmaha"}, "change_message_id": "041fe9308aaaf6c79ce3d2fb5f3f19a59d34fb02", "unresolved": false, "patch_set": 60, "id": "df87a7cf_5f73dd16", "side": "PARENT", "line": 22, "updated": "2017-12-18 19:50:38.000000000", "message": "Leaving a note here. This change need to be reverted. This seems to be a residue from the patch's origins that was left behind.", "commit_id": "eed43b85249a458098896e742441bb9968213e92"}], "tools/gate/launch-osh/basic.sh": [{"author": {"_account_id": 18476, "name": "Ganesh Maharaj Mahalingam", "email": "ganesh.mahalingam@intel.com", "username": "gmmaha"}, "change_message_id": "041fe9308aaaf6c79ce3d2fb5f3f19a59d34fb02", "unresolved": false, "patch_set": 60, "id": "df87a7cf_828b4a66", "side": "PARENT", "line": 198, "range": {"start_line": 196, "start_character": 0, "end_line": 198, "end_character": 71}, "updated": "2017-12-18 19:50:38.000000000", "message": "Curious why we are removing the deployment of congress pod here.", "commit_id": "eed43b85249a458098896e742441bb9968213e92"}]}}, "openstack%2Fproject-config~master~Ie7b4f520d6f47d56a71c812dcc06fd5d26da8fe0": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:36:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-09 13:46:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"zuul.d/jobs.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "690b2697e0c6dcb3f015cba756d09923f6327d07", "unresolved": false, "patch_set": 1, "id": "df33271e_c3df180a", "line": 750, "updated": "2020-04-08 14:52:26.000000000", "message": "want to say \"official projects\" or something like that?", "commit_id": "ab53f02568f3235a09b60d1efd86c4534b7246cc"}, {"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "0487fad2448cf6e3c9210b7bb0191174e27d6547", "unresolved": false, "patch_set": 2, "id": "df33271e_12f11f6c", "line": 752, "updated": "2020-04-10 00:03:33.000000000", "message": "This is unsafe; a hypothetical x/nova repository could write to the nova repo.", "commit_id": "341dccfb5d9279a9f87ac05450c34dc2368b4132"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "b954254d6ea05211c3fe0c1a2432e44db9b30c58", "unresolved": false, "patch_set": 2, "id": "df33271e_33cc2434", "line": 752, "in_reply_to": "df33271e_12f11f6c", "updated": "2020-04-10 07:13:34.000000000", "message": "Let's make it protected for now...", "commit_id": "341dccfb5d9279a9f87ac05450c34dc2368b4132"}]}}, "openstack%2Foctavia~master~I1d591dda5fbb7aaea4d51da5a1d2218114051f36": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:26:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-10 11:05:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"zuul.d/jobs.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6acf3c431443a471295a1f1bc5f75f6e76f2e2a0", "unresolved": false, "patch_set": 2, "id": "df33271e_5024b1c6", "line": 36, "range": {"start_line": 26, "start_character": 2, "end_line": 36, "end_character": 0}, "updated": "2020-03-24 15:46:07.000000000", "message": "Once set, the post-review attribute may not be unset", "commit_id": "4700c5312e48149632dc12198a60a223600a222a"}]}}, "openstack%2Ftripleo-ansible~master~Idbe0a6526fa262121bbb424f8705a3664ea00abd": {"owner_id": 25402, "owner_name": "Francesco Pantano", "owner_email": "fpantano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-06 12:47:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"tripleo_ansible/roles/tripleo_ceph_common/defaults/main.yml": [{"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "82dae546e152c8ff131c54a46138fa8674764ada", "unresolved": false, "patch_set": 9, "id": "1fa4df85_6adcfc73", "line": 19, "range": {"start_line": 19, "start_character": 0, "end_line": 19, "end_character": 27}, "updated": "2020-03-18 21:03:21.000000000", "message": "I see, so ceph_conf_overrides will no longer be under ceph_aansible_group_vars_all.\n\nhttps://review.opendev.org/#/c/705442/9/deployment/ceph-ansible/ceph-base.yaml@586", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}], "tripleo_ansible/roles/tripleo_ceph_work_dir/tasks/build_config_overrides.yml": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "910d67557815b98c6f78f7bf0678bae75b40c53d", "unresolved": false, "patch_set": 9, "id": "1fa4df85_fe166aa7", "line": 1, "updated": "2020-03-19 04:47:04.000000000", "message": "don't hate me but to me it seems ansible isn't doing this any better than what you did in ceph-base.yaml already\n\nwhat would you think about leaving ceph_conf_overrides in heat and just move it out of the ceph-ansible all vars so that we only have to do the merging with ceph-rgw.yaml in ansible? (the prepare task)", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "d675a9602643f0066c86701a6028f261f5e394c6", "unresolved": false, "patch_set": 9, "id": "df33271e_300956dd", "line": 1, "in_reply_to": "1fa4df85_fe166aa7", "updated": "2020-03-20 19:11:03.000000000", "message": "Only thing is, I think Heat's days are numbered so I like moving the logic out of it.", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "7e032b8558d94c481609f2878e0a0333796ce3fe", "unresolved": false, "patch_set": 9, "id": "df33271e_7d997277", "line": 1, "in_reply_to": "df33271e_300956dd", "updated": "2020-03-30 07:17:52.000000000", "message": "Yeah, that's the reason why I moved the ceph_config_overrides code here.\nI think we can discuss more about the potential approaches and for sure this is a pure \"traslation\" process, I don't see any improvement by ansible code, so Giulio is right from a coding point of view.\nHowever, I see an effort taken in tripleo community to start moving the code in tripleo-ansible as much as possible, so this change can be considered in line with the \"transformation\" work.\nI'm going to update the PS to make it work properly, but I'm open to discuss more about this approach and refactor this code accordingly.", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "82dae546e152c8ff131c54a46138fa8674764ada", "unresolved": false, "patch_set": 9, "id": "1fa4df85_0a31c8a2", "line": 26, "range": {"start_line": 26, "start_character": 6, "end_line": 26, "end_character": 72}, "updated": "2020-03-18 21:03:21.000000000", "message": "Can you not sue quotes here and not use _in_ because it's fragile? Perhaps use intersect instead.", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "910d67557815b98c6f78f7bf0678bae75b40c53d", "unresolved": false, "patch_set": 9, "id": "1fa4df85_1e4826ca", "line": 26, "range": {"start_line": 26, "start_character": 6, "end_line": 26, "end_character": 72}, "in_reply_to": "1fa4df85_0a31c8a2", "updated": "2020-03-19 04:47:04.000000000", "message": "note that intent here is to catch items which aren't a valid ceph.conf section I think", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "7e032b8558d94c481609f2878e0a0333796ce3fe", "unresolved": false, "patch_set": 9, "id": "df33271e_9deef6ea", "line": 26, "range": {"start_line": 26, "start_character": 6, "end_line": 26, "end_character": 72}, "in_reply_to": "1fa4df85_1e4826ca", "updated": "2020-03-30 07:17:52.000000000", "message": "right, here the idea is to find all the specified (key,value)s that cannot be put in a valid section and by default go under global.\n\ne.g.,\n\nceph_config_overrides:\n  akey: avalue,   <= this should go under global\n  fakesection:    <= this should go under global (it's not a valid section)\n    key: value", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "82dae546e152c8ff131c54a46138fa8674764ada", "unresolved": false, "patch_set": 9, "id": "1fa4df85_ca5c10ef", "line": 32, "range": {"start_line": 32, "start_character": 6, "end_line": 32, "end_character": 37}, "updated": "2020-03-18 21:03:21.000000000", "message": "Ansible's handling of \"foo in bar\" expresssions has caused bugs in the past across versions and confusion about types; e.g. is it in this list or in this string?\n  \nDo you want to try re-writing this without quotes and using intersect()?", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "7e032b8558d94c481609f2878e0a0333796ce3fe", "unresolved": false, "patch_set": 9, "id": "df33271e_fdb8e2e5", "line": 32, "range": {"start_line": 32, "start_character": 6, "end_line": 32, "end_character": 37}, "in_reply_to": "1fa4df85_ca5c10ef", "updated": "2020-03-30 07:17:52.000000000", "message": "Sure, I can use item.key as list composed by one single element and then use the \"intersect\" filter (the intersect filter can be applied w/ two lists)", "commit_id": "ff76ea75e1d9b33a2e3d0c027143db3ecd75bcbf"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "874166275f2a65c26ce136c2cc51ee2403248865", "unresolved": false, "patch_set": 11, "id": "df33271e_e9002004", "line": 26, "range": {"start_line": 26, "start_character": 4, "end_line": 26, "end_character": 70}, "updated": "2020-03-30 10:20:11.000000000", "message": "this is the only way to make it work: changing item.key to a list composed by a single element and tweaking with ansible filters is not the right way to solve this problem imho: just take a look at [1] and [2] using intersect filter.\n\n[1] https://storage.bhs.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_63f/705442/9/check/tripleo-ci-centos-8-scenario001-standalone/63f2f95/logs/undercloud/home/zuul/standalone-ansible-3j3mof3a/ceph-ansible/group_vars/all.yml\n\n[2] https://764ebf5f5c1dcdb00047-4aa13c6b5893117c84c953dbfc32d7df.ssl.cf5.rackcdn.com/705442/9/check/tripleo-ci-centos-8-scenario004-standalone/5f45e9f/logs/undercloud/home/zuul/standalone-ansible-59wayqv8/ceph-ansible/group_vars/all.yml", "commit_id": "f61bd62310dad70ddac00d192b3c135f6081f701"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "874166275f2a65c26ce136c2cc51ee2403248865", "unresolved": false, "patch_set": 11, "id": "df33271e_2907a81a", "line": 32, "range": {"start_line": 32, "start_character": 4, "end_line": 32, "end_character": 35}, "updated": "2020-03-30 10:20:11.000000000", "message": "same here", "commit_id": "f61bd62310dad70ddac00d192b3c135f6081f701"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "f10a2603fa7b5998f841ec91562905706805dd75", "unresolved": false, "patch_set": 15, "id": "df33271e_c06845f6", "line": 19, "range": {"start_line": 19, "start_character": 4, "end_line": 19, "end_character": 14}, "updated": "2020-04-01 22:55:58.000000000", "message": "this can probably be set in defaults using a prefixed option:\n\n  ceph_orphan: {}", "commit_id": "447230882b2d09f0e4103f28fedb1d083ca17ece"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "b7a3159bea82cf0c1c95160efe32dae312ec75cf", "unresolved": false, "patch_set": 15, "id": "df33271e_a5654bb7", "line": 19, "range": {"start_line": 19, "start_character": 4, "end_line": 19, "end_character": 14}, "in_reply_to": "df33271e_c06845f6", "updated": "2020-04-02 07:41:40.000000000", "message": "Thanks, this is a good idea.", "commit_id": "447230882b2d09f0e4103f28fedb1d083ca17ece"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "f10a2603fa7b5998f841ec91562905706805dd75", "unresolved": false, "patch_set": 15, "id": "df33271e_a058a155", "line": 26, "range": {"start_line": 21, "start_character": 0, "end_line": 26, "end_character": 84}, "updated": "2020-04-01 22:55:58.000000000", "message": "IDK if this will build the dictionary like we're expecting? It may be better/faster to run this set_fact once in a jinja function like so:\n\n- name: build orphan set\n  set_fact:\n    orphan: |-\n      {% set orphan = {} %}\n      {% for key, value in (ceph_config_overrides | default({})).items() %}\n      {%   if not (['global', 'mon', 'mgr', 'osd', 'mds', 'client']) | intersect([item.key]) %}\n      {%     orphan.__setitem__(key, value) %}\n      {%   endif %}\n      {% endfor %}\n      {{ orphan }}", "commit_id": "447230882b2d09f0e4103f28fedb1d083ca17ece"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "b7a3159bea82cf0c1c95160efe32dae312ec75cf", "unresolved": false, "patch_set": 15, "id": "df33271e_45fb9fbf", "line": 26, "range": {"start_line": 21, "start_character": 0, "end_line": 26, "end_character": 84}, "in_reply_to": "df33271e_a058a155", "updated": "2020-04-02 07:41:40.000000000", "message": "> IDK if this will build the dictionary like we're expecting? It may\n > be better/faster to run this set_fact once in a jinja function like\n > so:\n > \n > - name: build orphan set\n > set_fact:\n > orphan: |-\n > {% set orphan = {} %}\n > {% for key, value in (ceph_config_overrides | default({})).items()\n > %}\n > {%   if not (['global', 'mon', 'mgr', 'osd', 'mds', 'client']) |\n > intersect([item.key]) %}\n > {%     orphan.__setitem__(key, value) %}\n > {%   endif %}\n > {% endfor %}\n > {{ orphan }}\n\nThanks Kevin, definitely a good idea to save a task and use a more \"pythonic way\" to do that.\nThanks for this suggestion, I'll do in the next PS!", "commit_id": "447230882b2d09f0e4103f28fedb1d083ca17ece"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "24a6150afb934340009e3cf9cab0d00a0a061860", "unresolved": false, "patch_set": 17, "id": "df33271e_e12c47ad", "line": 22, "range": {"start_line": 22, "start_character": 71, "end_line": 22, "end_character": 86}, "updated": "2020-04-03 12:28:34.000000000", "message": "In the previous version I had \"item.key\" which was not needed anymore w/ j2 syntax and it generated an issue tracked here [1].\n\n\n[1] https://3c584d871d99fa203d86-7637ce74125a0f2a5404346b147f7a3a.ssl.cf1.rackcdn.com/705442/10/check/tripleo-ci-centos-8-scenario004-standalone/23c5d46/logs/undercloud/home/zuul/standalone_deploy.log", "commit_id": "c5ecafbddc9e06df657523c1fc3b19f8c2860f75"}]}}, "openstack%2Fnova~master~Ia736c799dc2b3b0376e8d1601bfe0eb730862129": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"nova/tests/unit/policies/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "456d3d373496c64643ca806bc753c462dee47a09", "unresolved": false, "patch_set": 7, "id": "df33271e_e29af611", "line": 105, "updated": "2020-04-09 13:05:48.000000000", "message": "pep8: E265 block comment should start with '# '", "commit_id": "7a727a298d1eddf4a94aea3e88745b86416c9aea"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "02753e4bbe09c4c93e0a9169400d89954b10b243", "unresolved": false, "patch_set": 8, "id": "df33271e_be53e238", "line": 105, "updated": "2020-04-09 20:05:28.000000000", "message": "pep8: E265 block comment should start with '# '", "commit_id": "0d221816bfaecbee2671edba91c62ea950aab561"}]}}, "openstack%2Foctavia~stable%2Frocky~I2f680a00be695c3828166e6803882765af79b79e": {"owner_id": 7249, "owner_name": "Ann Taraday", "owner_email": "akamyshnikova@mirantis.com", "labels": [{"value": 2, "date": "2020-03-27 16:44:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-31 11:19:06.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-10 11:04:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {}}, "openstack%2Fironic~master~Iabc7e5482049df7aa6933053576ceb3f55e251b4": {"owner_id": 11292, "owner_name": "Arne Wiebalck", "owner_email": "Arne.Wiebalck@cern.ch", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 2, "date": "2020-04-09 16:06:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-04-10 10:28:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {"doc/source/admin/raid.rst": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "fc6f40dff8ad718fec4c431745ba963a8bb8383f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4def581b", "line": 387, "updated": "2020-01-10 18:58:40.000000000", "message": "Ussuri?", "commit_id": "21a720ec686c655454375b168c839ba0836ef7f8"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "190e6546f702bfbbb06f23770aef4aec2e4b9712", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2420f29a", "line": 387, "in_reply_to": "3fa7e38b_4def581b", "updated": "2020-01-14 11:06:21.000000000", "message": "Oh, yes, absolutely, will fix.", "commit_id": "21a720ec686c655454375b168c839ba0836ef7f8"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "fc6f40dff8ad718fec4c431745ba963a8bb8383f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_edd96483", "line": 392, "updated": "2020-01-10 18:58:40.000000000", "message": "This sounds like an operator can populate internal_driver_info, which is not possible. Let us rephrase in terms of something actionable.", "commit_id": "21a720ec686c655454375b168c839ba0836ef7f8"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "190e6546f702bfbbb06f23770aef4aec2e4b9712", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_041b766f", "line": 392, "in_reply_to": "3fa7e38b_edd96483", "updated": "2020-01-14 11:06:21.000000000", "message": "How is this populated for partition images? I could not find in our docs how this is done.\n\nOr this is an admin vs operator role question?\n\nI rephrased now to give less of an impression this can be done by the admin, but I agree it would be much better if we could point to something how things are actually working.", "commit_id": "21a720ec686c655454375b168c839ba0836ef7f8"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7dd8852a811d4bd018d019e894a17d2807fcac5e", "unresolved": false, "patch_set": 2, "id": "df33271e_22b1c790", "line": 388, "range": {"start_line": 388, "start_character": 33, "end_line": 388, "end_character": 69}, "updated": "2020-04-07 12:48:22.000000000", "message": "Let's make it clear that we're talking about the glance case. For standalone ironic it still has to be the first partition, unless we accept an explicit instance_info field (we probably should).", "commit_id": "975f8c6be8eeee4768fe628e9f34fc45c348ad95"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7dd8852a811d4bd018d019e894a17d2807fcac5e", "unresolved": false, "patch_set": 2, "id": "df33271e_22038744", "line": 393, "range": {"start_line": 393, "start_character": 0, "end_line": 393, "end_character": 22}, "updated": "2020-04-07 12:48:22.000000000", "message": "Let's not mention internal_driver_info, it's not writeable by users.", "commit_id": "975f8c6be8eeee4768fe628e9f34fc45c348ad95"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "4fe5801470077b99adcaa2a1e9897ef2f9d9daca", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7981a1c2", "line": 393, "updated": "2020-01-13 20:35:48.000000000", "message": "so ironic stashes this value into internal_driver_info. This value comes from our ramdisk/IPA. And that code gets it from... hmm.. Is it correct to say that if the image doesn't have a 'rootfs_uuid' property, then we use/assume that the root file system is on the first partition (as per Train or earlier)?\n\nNote -- I'm being lazy; don't know what changes were made to support software raid so just guessing here :)\n\nI'd like to avoid using internal_driver_info since that is internal. I am ok mentioning it as a side note or in parenthesis.  (And I see that our release notes explicitly mention that it comes from internal_driver_info: releasenotes/notes/sofware_raid_use_rootfs_uuid-f61eb671d696d251.yaml)", "commit_id": "975f8c6be8eeee4768fe628e9f34fc45c348ad95"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "190e6546f702bfbbb06f23770aef4aec2e4b9712", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_361b2b1e", "line": 393, "in_reply_to": "3fa7e38b_7981a1c2", "updated": "2020-01-14 11:06:21.000000000", "message": "There are two points here: where does the conductor get the root fs UUID from to pass it to the IPA, and what does the IPA try to find the root partition.\n\nThe proposed change for ironic tries to get the UUID from the image metadata and falls back to internal_driver_info (which was the default before).\n\nThe proposed change for the IPA tries to use the info passed from the conductor and falls back to the first partition if that fails (which is the current behaviour).", "commit_id": "975f8c6be8eeee4768fe628e9f34fc45c348ad95"}]}}, "openstack%2Fmanila~master~I080683541d527657f01008d43529fc53c19a09cd": {"owner_id": 29632, "owner_name": "Carlos Eduardo", "owner_email": "ces.eduardo98@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-04-09 21:47:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-09 21:16:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13915, "name": "Silvan Kaiser", "email": "silvan@quobyte.com", "username": "kaisers"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 21:52:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0f745088631b07233e6b4887efba481ecfa42b56", "unresolved": false, "patch_set": 4, "id": "df33271e_e0af1729", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 0}, "updated": "2020-04-07 05:32:35.000000000", "message": "DocImpact", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "869947050d44c488a355ea3cfda69c43708f9076", "unresolved": false, "patch_set": 4, "id": "df33271e_bb8ccb7f", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 0}, "in_reply_to": "df33271e_e0af1729", "updated": "2020-04-08 04:25:54.000000000", "message": "Done", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}], "manila/api/v2/share_group_snapshots.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1891c06e541aa7a1c6f160e0c2988cdc898baf1a", "unresolved": false, "patch_set": 6, "id": "df33271e_336a72ec", "line": 248, "range": {"start_line": 248, "start_character": 0, "end_line": 248, "end_character": 0}, "updated": "2020-04-09 15:00:08.000000000", "message": "Disable the function redefined here\n\n# pylint: disable=function-redefined", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "09a105a5192fe88166491953201ebb4d37d9bfde", "unresolved": false, "patch_set": 6, "id": "df33271e_9416c448", "line": 248, "range": {"start_line": 248, "start_character": 0, "end_line": 248, "end_character": 0}, "in_reply_to": "df33271e_336a72ec", "updated": "2020-04-09 17:08:17.000000000", "message": "Done", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ba6f6ea41d9dd2d5ce9e55f5cf999deb4f40407", "unresolved": false, "patch_set": 6, "id": "df33271e_b0ccc135", "line": 252, "range": {"start_line": 251, "start_character": 0, "end_line": 252, "end_character": 71}, "updated": "2020-04-09 07:27:50.000000000", "message": "[7;33m************* Module manila.api.v2.share_group_snapshots\u001b[0m\nmanila/api/v2/share_group_snapshots.py:251:4: E0102: \u001b[1;31mmethod already defined line 246\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)\nmanila/api/v2/share_group_snapshots.py:262:4: E0102: \u001b[1;31mmethod already defined line 257\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "09a105a5192fe88166491953201ebb4d37d9bfde", "unresolved": false, "patch_set": 6, "id": "df33271e_597bd526", "line": 252, "range": {"start_line": 251, "start_character": 0, "end_line": 252, "end_character": 71}, "in_reply_to": "df33271e_b0ccc135", "updated": "2020-04-09 17:08:17.000000000", "message": "Done", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1891c06e541aa7a1c6f160e0c2988cdc898baf1a", "unresolved": false, "patch_set": 6, "id": "df33271e_136f6efc", "line": 254, "range": {"start_line": 254, "start_character": 0, "end_line": 254, "end_character": 0}, "updated": "2020-04-09 15:00:08.000000000", "message": "Re-enable it here:\n\n# pylint: enable=function-redefined", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "09a105a5192fe88166491953201ebb4d37d9bfde", "unresolved": false, "patch_set": 6, "id": "df33271e_b419487b", "line": 254, "range": {"start_line": 254, "start_character": 0, "end_line": 254, "end_character": 0}, "in_reply_to": "df33271e_136f6efc", "updated": "2020-04-09 17:08:17.000000000", "message": "Done", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}], "manila/api/v2/share_group_type_specs.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ba6f6ea41d9dd2d5ce9e55f5cf999deb4f40407", "unresolved": false, "patch_set": 6, "id": "df33271e_b01961d8", "line": 122, "range": {"start_line": 121, "start_character": 0, "end_line": 122, "end_character": 64}, "updated": "2020-04-09 07:27:50.000000000", "message": "breaking the method name into two lines doesn't please pylint wrt the \"function-redefined\" issue.. \n\n[7;33m************* Module manila.api.v2.share_group_type_specs\u001b[0m\nmanila/api/v2/share_group_type_specs.py:121:4: E0102: \u001b[1;31mmethod already defined line 117\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}], "manila/api/v2/share_group_types.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ba6f6ea41d9dd2d5ce9e55f5cf999deb4f40407", "unresolved": false, "patch_set": 6, "id": "df33271e_f08489d5", "line": 239, "range": {"start_line": 239, "start_character": 38, "end_line": 239, "end_character": 74}, "updated": "2020-04-09 07:27:50.000000000", "message": "same, here and lines 262, 286\n\n\u001b[7;33m************* Module manila.api.v2.share_group_types\u001b[0m\nmanila/api/v2/share_group_types.py:238:4: E0102: \u001b[1;31mmethod already defined line 234\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)\nmanila/api/v2/share_group_types.py:262:4: E0102: \u001b[1;31mmethod already defined line 257\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)\nmanila/api/v2/share_group_types.py:286:4: E0102: \u001b[1;31mmethod already defined line 281\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}], "manila/api/v2/share_groups.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ba6f6ea41d9dd2d5ce9e55f5cf999deb4f40407", "unresolved": false, "patch_set": 6, "id": "df33271e_306a7119", "line": 323, "range": {"start_line": 322, "start_character": 4, "end_line": 323, "end_character": 77}, "updated": "2020-04-09 07:27:50.000000000", "message": "Pylint fails here and below:\n\n \n\u001b[7;33m************* Module manila.api.v2.share_groups\u001b[0m\nmanila/api/v2/share_groups.py:322:4: E0102: \u001b[1;31mmethod already defined line 317\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)\nmanila/api/v2/share_groups.py:333:4: E0102: \u001b[1;31mmethod already defined line 328\u001b[0m (\u001b[1;31mfunction-redefined\u001b[0m)", "commit_id": "92bdbf5e539ad7e9add1a254352b5ad2c0aba024"}], "manila/tests/api/v2/test_share_group_types.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ba6f6ea41d9dd2d5ce9e55f5cf999deb4f40407", "unresolved": false, "patch_set": 6, "id": "df33271e_d0b865c9", "side": "PARENT", "line": 166, "range": {"start_line": 159, "start_character": 33, "end_line": 166, "end_character": 58}, "updated": "2020-04-09 07:27:50.000000000", "message": "Worth keeping this around as a negative test, set microversion to any version < 2.55", "commit_id": "3fb8c5b7c4e13b337b3765b98e17c64cc4d4bd9f"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "8c6943b7a18b35af6e4cf27b13ca5e8255f0574e", "unresolved": false, "patch_set": 6, "id": "df33271e_e57b2089", "side": "PARENT", "line": 166, "range": {"start_line": 159, "start_character": 33, "end_line": 166, "end_character": 58}, "in_reply_to": "df33271e_d0b865c9", "updated": "2020-04-09 14:38:40.000000000", "message": "Alright, will add this test again.", "commit_id": "3fb8c5b7c4e13b337b3765b98e17c64cc4d4bd9f"}], "releasenotes/notes/graduate-share-groups-feature-5f751b49ccc62969.yaml": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0f745088631b07233e6b4887efba481ecfa42b56", "unresolved": false, "patch_set": 4, "id": "df33271e_a05a2f80", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 5}, "updated": "2020-04-07 05:32:35.000000000", "message": "prelude\n\nThis is huge.", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "869947050d44c488a355ea3cfda69c43708f9076", "unresolved": false, "patch_set": 4, "id": "df33271e_7bd7e350", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 5}, "in_reply_to": "df33271e_a05a2f80", "updated": "2020-04-08 04:25:54.000000000", "message": "Done", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0f745088631b07233e6b4887efba481ecfa42b56", "unresolved": false, "patch_set": 4, "id": "df33271e_80bbab70", "line": 3, "range": {"start_line": 3, "start_character": 4, "end_line": 3, "end_character": 62}, "updated": "2020-04-07 05:32:35.000000000", "message": "Share group APIs have graduated from their `experimental feature state <>`_ from API version ``2.5x``. Share group types can be created to encompass one or more share types, share groups can be created, updated, snapshotted and deleted, and shares can be created within share groups. These actions no longer require the inclusion of ``X-OpenStack-Manila-API-Experimental`` header in the API requests.", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "869947050d44c488a355ea3cfda69c43708f9076", "unresolved": false, "patch_set": 4, "id": "df33271e_bbe16b2d", "line": 3, "range": {"start_line": 3, "start_character": 4, "end_line": 3, "end_character": 62}, "in_reply_to": "df33271e_80bbab70", "updated": "2020-04-08 04:25:54.000000000", "message": "Done", "commit_id": "79aa84823f1e0fcb9627b684348699f9814f688e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "3c4a46996e28a75934515a27da0f8bc6752859c7", "unresolved": false, "patch_set": 5, "id": "df33271e_3b86fbdc", "line": 4, "range": {"start_line": 4, "start_character": 75, "end_line": 4, "end_character": 78}, "updated": "2020-04-08 04:53:55.000000000", "message": "need a link here: https://docs.openstack.org/manila/latest/contributor/experimental_apis.html perhaps..", "commit_id": "85d0a2b78eb4cb7b750fd638dadc9d08a4c88fb0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "56a7ac75a7fdb37289cd030d12cc5e1a31627950", "unresolved": false, "patch_set": 5, "id": "df33271e_ad45a445", "line": 4, "range": {"start_line": 4, "start_character": 75, "end_line": 4, "end_character": 78}, "in_reply_to": "df33271e_3b86fbdc", "updated": "2020-04-08 13:20:48.000000000", "message": "Yep, this link fits well... Sorry I forgot to replace this...", "commit_id": "85d0a2b78eb4cb7b750fd638dadc9d08a4c88fb0"}]}}, "openstack%2Ftelemetry-tempest-plugin~master~I8af8b2b040254b18e95d5cff8e0eed7d1a7ce969": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fnova~master~Id233f673a57461cc312e304873a41442d732c051": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 2, "date": "2020-04-09 07:01:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 20:12:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/context.py": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "80bc048edc2779661f15aaa461f6a89639e54ef7", "unresolved": false, "patch_set": 2, "id": "df33271e_e64b4a84", "line": 41, "updated": "2020-04-08 15:47:41.000000000", "message": "I wouldn't really argue with this, although I'm not sure I'm sold. For 98% of cases where there's only ever one cell, expiring this ever is just making more work for ourselves. Even in cases where there are multiples, it'd be problematic if the timer is long (as it should be) and unsynchronized. For example, scheduler expires its list, starts sending things to cells that conductor doesn't know about yet.", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "de566c27749d9f5fdc2aee53d0b6cd9ccf1146ba", "unresolved": false, "patch_set": 2, "id": "df33271e_9d9e0961", "line": 41, "in_reply_to": "df33271e_e64b4a84", "updated": "2020-04-08 16:02:59.000000000", "message": "That's fair enough -- I haven't felt strongly about refreshing on a timer and I defaulted to keeping the comment here. I was really just taking the lead from L47.", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}], "nova/service.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "6bdee3368da013d5f9c82e174c72813deff77f34", "unresolved": false, "patch_set": 1, "id": "df33271e_d77c40ed", "line": 159, "updated": "2020-04-06 07:33:24.000000000", "message": "Hm, maybe I should have linked https://bugs.launchpad.net/nova/+bug/1844929 here instead. And maybe should also mention that this could be removed once (1) python issue 40089 is resolved and (2) we require >= the python version it's fixed in.", "commit_id": "76b151fe004f3114cc90f29e70c53ae5e127ae8d"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2cd17218b6b13e80a5430af5cd25c37c837de103", "unresolved": false, "patch_set": 1, "id": "df33271e_d8ac358e", "line": 159, "in_reply_to": "df33271e_d77c40ed", "updated": "2020-04-08 03:09:57.000000000", "message": "This isn't quite right based on what I learned at:\n\nhttps://bugs.python.org/issue40091#msg365959\n\nSanitizing locks automatically is not something that python can ever do. It has to be taken care of by each library or application.\n\nI'm going to update this comment.", "commit_id": "76b151fe004f3114cc90f29e70c53ae5e127ae8d"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "80bc048edc2779661f15aaa461f6a89639e54ef7", "unresolved": false, "patch_set": 2, "id": "df33271e_a62e62a2", "line": 164, "updated": "2020-04-08 15:47:41.000000000", "message": "Just to be clear, this is late enough that it gets run after fork? I haven't gone chasing, but maybe you could just link in the review here for completeness?", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "126b447e40ca025943c4ba6140b5cbc365bc711c", "unresolved": false, "patch_set": 2, "id": "df33271e_4c12105a", "line": 164, "in_reply_to": "df33271e_7dfd05b0", "updated": "2020-04-08 16:51:24.000000000", "message": "Ack, thanks, makes sense.", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "de566c27749d9f5fdc2aee53d0b6cd9ccf1146ba", "unresolved": false, "patch_set": 2, "id": "df33271e_7dfd05b0", "line": 164, "in_reply_to": "df33271e_a62e62a2", "updated": "2020-04-08 16:02:59.000000000", "message": "Yeah, it's a little bit to unravel.\n\nFork happens here:\n\nhttps://github.com/openstack/oslo.service/blob/b7dc0d72c92215755692b2d96b799453dc7d0c00/oslo_service/service.py#L551-L565\n\nwhich calls _child_process:\n\nhttps://github.com/openstack/oslo.service/blob/b7dc0d72c92215755692b2d96b799453dc7d0c00/oslo_service/service.py#L532-L548\n\nwhich creates a plain Launcher, then calls Launcher.launch_service:\n\nhttps://github.com/openstack/oslo.service/blob/b7dc0d72c92215755692b2d96b799453dc7d0c00/oslo_service/service.py#L269-L284\n\nwhich calls Services.add:\n\nhttps://github.com/openstack/oslo.service/blob/b7dc0d72c92215755692b2d96b799453dc7d0c00/oslo_service/service.py#L744-L760\n\nwhich calls Services.run_service:\n\nhttps://github.com/openstack/oslo.service/blob/b7dc0d72c92215755692b2d96b799453dc7d0c00/oslo_service/service.py#L801-L810\n\nwhich calls start().", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "126b447e40ca025943c4ba6140b5cbc365bc711c", "unresolved": false, "patch_set": 2, "id": "df33271e_0c09282b", "line": 325, "updated": "2020-04-08 16:51:24.000000000", "message": "Do we not want to clear the cache on startup for these? WSGIService is the one that forks a lot over the lifetime of the service, so I would think it's more likely to hit the problem, no?", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "f85068b84e8b44a84b50158a38764205ba678ded", "unresolved": false, "patch_set": 2, "id": "df33271e_cc890027", "line": 325, "in_reply_to": "df33271e_0c09282b", "updated": "2020-04-08 17:03:11.000000000", "message": "Gah, we do. I got it for reset() and then through code inspection realized that reset() is not called during fork, so then I went back and added to start() and missed it here. Thanks for the catch.", "commit_id": "bac114564665aadd89b7ebcbdc3c6ce9d452aa98"}], "nova/tests/functional/test_service.py": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "0d586ca12f29e438b848d78b2cfecf9fa200cb17", "unresolved": false, "patch_set": 3, "id": "df33271e_f7c808a9", "line": 100, "range": {"start_line": 92, "start_character": 8, "end_line": 100, "end_character": 53}, "updated": "2020-04-08 20:12:36.000000000", "message": "I think I would probably test these separately, especially since they're wholly unrelated within nova. But I shan't nit out over that for the fix.", "commit_id": "941559042f609ee43ff3160c0f0d0c45187be17f"}]}}, "openstack%2Freleases~master~I4ba709b1f98087e7c2fb28c28f376bbb8b82fc48": {"owner_id": 8731, "owner_name": "Renat Akhmerov", "owner_email": "renat.akhmerov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 12:12:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Freleases~master~I9f24f61591360f5d457d5f47b0faa14c53c7d6c6": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 2, "date": "2020-04-09 18:41:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 2, "date": "2020-04-10 12:12:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"deliverables/ussuri/cinder.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d497e2c2154f85e05b1a5acc0a9945653eef744e", "unresolved": false, "patch_set": 1, "id": "df33271e_ba4ca59e", "line": 9, "updated": "2020-04-08 22:02:56.000000000", "message": "validate: [error] syntax error: could not find expected ':'", "commit_id": "dde7d3c031c20c104b66daba9814f9e6dac97eb0"}, {"author": {"_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, "change_message_id": "384161901e5b67ffc9577dd79d2838e645a6b81a", "unresolved": false, "patch_set": 2, "id": "df33271e_cb1546e7", "line": 13, "updated": "2020-04-09 18:41:09.000000000", "message": "We chatted on IRC about this. Would be nice to include which new drivers were added and what new features most drivers were focusng on adding- I know in the past its been like.. everyone adding replication or everyone adding HA.If you can add these details later, I will do what I can to get them added to release messaging if its not too late.", "commit_id": "8406ca33168270b0564728e8713d8a6ca39a3703"}]}}, "opendev%2Fsandbox~master~I3b564e3cba56a4d638ab1a8edf521cb6f71d0d83": {"owner_id": 31836, "owner_name": "Facundo Ciccioli", "owner_email": "facundo.ciccioli@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~Ibfc9469683fa9019d21c42b081681833193602cf": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-10 08:43:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 2, "date": "2020-04-10 12:08:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {}}, "openstack%2Freleases~master~I22ab1585326822d5ff76de474e4cbb00360243b6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 1, "date": "2020-04-10 04:40:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8716, "name": "Sampath Priyankara", "email": "sam47priya@gmail.com", "username": "sampath"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 12:02:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-10 06:03:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {}}, "openstack%2Freleases~master~I0f1e758e5e85abe7ad00e4754ab57147102f7c61": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 1, "date": "2020-04-10 09:38:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 2, "date": "2020-04-10 11:42:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fswift~master~Ia968ec7375ab346a2155769a46e74ce694a57fc2": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-04-03 22:34:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Id61deee3ec2981b2caddd07b06bef0b701e40ac2": {"owner_id": 20733, "owner_name": "Rajesh Tailor", "owner_email": "ratailor@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-04-09 21:07:57.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 8042, "name": "Ji\u0159\u00ed Str\u00e1nsk\u00fd", "email": "jistr@redhat.com", "username": "jistr"}, {"value": 0, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 0, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 0, "_account_id": 17216, "name": "Martin Schuppert", "email": "mschuppert@redhat.com", "username": "mcschupp"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fos-net-config~stable%2Fqueens~Ibbe8021afdc4772c6e2017d11d012b8f5c46d907": {"owner_id": 12398, "owner_name": "Dan Sneddon", "owner_email": "dsneddon@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:20.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 2, "date": "2020-04-09 23:31:54.000000000", "_account_id": 21909, "name": "Bob Fournier", "email": "bfournie@redhat.com", "username": "bfournie"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Icba8a8292d1e2675c7da3513d00a4a0f4191747e": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-04-09 20:04:58.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I43fd5f67c1a0be6eaa1752575349e64329cada4a": {"owner_id": 14250, "owner_name": "Grzegorz Grasza", "owner_email": "xek@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:45:39.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fqueens~Ib2fe159d6e2503db834ae68d9a60c627a15b7b5e": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 05:53:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10873, "name": "Juan Antonio Osorio Robles", "email": "jaosorior@redhat.com", "username": "ejuaoso"}, {"value": 2, "date": "2020-04-09 21:21:08.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 1, "date": "2020-03-23 07:43:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17216, "name": "Martin Schuppert", "email": "mschuppert@redhat.com", "username": "mcschupp"}, {"value": 2, "date": "2020-03-27 13:20:33.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 1, "date": "2020-03-23 11:21:36.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Frocky~Ib2fe159d6e2503db834ae68d9a60c627a15b7b5e": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 05:52:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 1, "date": "2020-03-23 11:14:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10873, "name": "Juan Antonio Osorio Robles", "email": "jaosorior@redhat.com", "username": "ejuaoso"}, {"value": 2, "date": "2020-04-09 21:21:05.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-03-23 10:06:51.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 1, "date": "2020-03-24 20:00:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 1, "date": "2020-03-23 07:43:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17216, "name": "Martin Schuppert", "email": "mschuppert@redhat.com", "username": "mcschupp"}, {"value": 1, "date": "2020-03-23 11:21:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Foctavia~master~I8c0fadbc47823d030dc232984988e47f86368410": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 1, "date": "2020-01-24 15:42:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 2, "date": "2020-04-09 23:04:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 22:32:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-10 11:03:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"doc/source/user/feature-classification/feature-matrix-listener.ini": [{"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "3bde277da47a77b73c0ac8546d41f061ec9cc9a1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b679b7fb", "line": 37, "range": {"start_line": 37, "start_character": 46, "end_line": 37, "end_character": 58}, "updated": "2020-01-24 14:57:06.000000000", "message": "option name is \"allowed-cidr\" ('-' instead of '_')", "commit_id": "50f5b6477e3d23900f20d5eba9ab0600db11a12c"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "ce1f5531bc037b691183f96d57c67179fdfc5c65", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_96eb5b79", "line": 37, "range": {"start_line": 37, "start_character": 46, "end_line": 37, "end_character": 58}, "in_reply_to": "3fa7e38b_b679b7fb", "updated": "2020-01-24 15:02:52.000000000", "message": "bleh, copy-pasta. thanks!", "commit_id": "50f5b6477e3d23900f20d5eba9ab0600db11a12c"}]}}, "openstack%2Fmanila~master~Iab13a0961eb4a387a502246e5d4b79bc9046e04b": {"owner_id": 30998, "owner_name": "Andre Luiz Beltrami Rocha", "owner_email": "debeltrami@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:48:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, {"value": 2, "date": "2020-04-09 16:02:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "8ba6ca9c8a38c6336ae74b9127bd2297c9f56544", "unresolved": false, "patch_set": 5, "id": "df33271e_0a675b27", "line": 12, "range": {"start_line": 12, "start_character": 30, "end_line": 12, "end_character": 37}, "updated": "2020-03-27 08:06:41.000000000", "message": "nit: supports", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_e8a61ec1", "line": 12, "range": {"start_line": 12, "start_character": 30, "end_line": 12, "end_character": 37}, "in_reply_to": "df33271e_0a675b27", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "8ba6ca9c8a38c6336ae74b9127bd2297c9f56544", "unresolved": false, "patch_set": 5, "id": "df33271e_8aad2b33", "line": 16, "range": {"start_line": 16, "start_character": 51, "end_line": 16, "end_character": 59}, "updated": "2020-03-27 08:06:41.000000000", "message": "nit: constantly", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_48aaaa84", "line": 16, "range": {"start_line": 16, "start_character": 51, "end_line": 16, "end_character": 59}, "in_reply_to": "df33271e_8aad2b33", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}], "api-ref/source/samples/share-instances-list-response.json": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_22869e14", "line": 2, "range": {"start_line": 2, "start_character": 3, "end_line": 2, "end_character": 24}, "updated": "2020-04-09 12:57:52.000000000", "message": "It would be nice to  include an example where the create is in progress.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_533e16b8", "line": 2, "range": {"start_line": 2, "start_character": 3, "end_line": 2, "end_character": 24}, "in_reply_to": "df33271e_22869e14", "updated": "2020-04-09 14:35:41.000000000", "message": "Done!", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "api-ref/source/samples/shares-list-detailed-response.json": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_e2bdd6b7", "line": 2, "range": {"start_line": 2, "start_character": 3, "end_line": 2, "end_character": 15}, "updated": "2020-04-09 12:57:52.000000000", "message": "It would be nice to include an example of a share whose creation is in progress.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_93b25e48", "line": 2, "range": {"start_line": 2, "start_character": 3, "end_line": 2, "end_character": 15}, "in_reply_to": "df33271e_e2bdd6b7", "updated": "2020-04-09 14:35:41.000000000", "message": "Oh, forgot this one. I might add later if a new PS is needed.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/api/openstack/api_version_request.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_7ade98da", "updated": "2020-04-09 06:22:27.000000000", "message": "manila/api/openstack/rest_api_version_history.rst needs an update too", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_88fa2972", "in_reply_to": "df33271e_7ade98da", "updated": "2020-04-09 14:35:41.000000000", "message": "oh, forgot this one, thanks! Done!", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_3ad890ed", "line": 148, "range": {"start_line": 147, "start_character": 13, "end_line": 148, "end_character": 54}, "updated": "2020-04-09 06:22:27.000000000", "message": "Share and share instance objects include a new field called \"progress\" which indicates the completion of a share creation operation as a percentage.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_68f7e58c", "line": 148, "range": {"start_line": 147, "start_character": 13, "end_line": 148, "end_character": 54}, "in_reply_to": "df33271e_3ad890ed", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/api/views/share_instance.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_7af7b85a", "line": 106, "range": {"start_line": 104, "start_character": 63, "end_line": 106, "end_character": 66}, "updated": "2020-04-09 06:22:27.000000000", "message": "not necessary", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_082c5900", "line": 106, "range": {"start_line": 104, "start_character": 63, "end_line": 106, "end_character": 66}, "in_reply_to": "df33271e_7af7b85a", "updated": "2020-04-09 14:35:41.000000000", "message": "removed.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/api/views/shares.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_36d89279", "line": 81, "range": {"start_line": 81, "start_character": 11, "end_line": 81, "end_character": 42}, "updated": "2020-03-31 06:46:16.000000000", "message": "If using an older Microversion, please cast 'creating_from_snapshot' to 'creating'. See https://opendev.org/openstack/manila/src/commit/0957b33e9b82f30edf630c51f3966b088721ae36/manila/api/views/share_accesses.py#L83-L93 for an example", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_289be665", "line": 81, "range": {"start_line": 81, "start_character": 11, "end_line": 81, "end_character": 42}, "in_reply_to": "df33271e_36d89279", "updated": "2020-04-01 14:23:16.000000000", "message": "Done! Also for share_instance entity. Thanks!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_d3afb8e0", "line": 98, "range": {"start_line": 97, "start_character": 8, "end_line": 98, "end_character": 59}, "updated": "2020-03-31 06:46:16.000000000", "message": "Why not set this as a share property in the sqlalchemy model?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_28b486d0", "line": 98, "range": {"start_line": 97, "start_character": 8, "end_line": 98, "end_character": 59}, "in_reply_to": "df33271e_d3afb8e0", "updated": "2020-04-01 14:23:16.000000000", "message": "Thanks for the suggestion. We've added this property into share model.", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_faa0e844", "line": 197, "range": {"start_line": 196, "start_character": 0, "end_line": 197, "end_character": 54}, "updated": "2020-04-09 06:22:27.000000000", "message": "not required", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_28379d4f", "line": 197, "range": {"start_line": 196, "start_character": 0, "end_line": 197, "end_character": 54}, "in_reply_to": "df33271e_faa0e844", "updated": "2020-04-09 14:35:41.000000000", "message": "removed", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/common/constants.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_f6e0ea28", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 56}, "updated": "2020-03-31 06:46:16.000000000", "message": "Seeing as we're adding a new external state to a share, what does the state transition for this look like? As below? Or am I missing some state?\n\n 'creating' ---> 'creating_from_snapshot' ---> 'error'\n                              |\n                              |\n                              V\n                          'available'", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_48d0eac9", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 56}, "in_reply_to": "df33271e_f6e0ea28", "updated": "2020-04-01 14:23:16.000000000", "message": "Not sure if we were clear about that in the spec. The idea is that an user may request more details about shares with this new status, looking into 'progress' field in detailed gets, if provided by drivers such info.\nYes, your state transition is correct, also 'creating' ---> 'available' remains since drivers can return the share as 'available' or just continue to return the export_locations list (when creating from snapshot).", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}], "manila/db/api.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bc7c9c1308065c7db6781585fb4bcb51e82d00da", "unresolved": false, "patch_set": 10, "id": "df33271e_71e1a89b", "line": 353, "range": {"start_line": 349, "start_character": 0, "end_line": 353, "end_character": 70}, "updated": "2020-04-08 19:08:43.000000000", "message": "fold with method above...", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}], "manila/db/migrations/alembic/versions/e6d88547b381_add_progress_field_to_share_instance.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_b395d489", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 57}, "updated": "2020-03-31 06:46:16.000000000", "message": "Curious as to why this isn't an integer?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_e868def5", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 57}, "in_reply_to": "df33271e_b395d489", "updated": "2020-04-01 14:23:16.000000000", "message": "We follow the implementation of progress in snapshot creation where the field also contains the '%'. Also followed the driver interface pattern that request a '%' in the driver response and avoids the manager/db of adding/removing '%' before query/update the database.", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_b3daf474", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 48}, "updated": "2020-03-31 06:46:16.000000000", "message": "nit: move statement to line 46..", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_88ddd2e1", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 48}, "in_reply_to": "df33271e_b3daf474", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}], "manila/db/sqlalchemy/models.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_5338c89e", "line": 259, "updated": "2020-03-31 06:46:16.000000000", "message": "@property\n    def progress(self):\n        if len(self.instances) > 0:\n            return self.instance.progress", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_084f0293", "line": 259, "in_reply_to": "df33271e_5338c89e", "updated": "2020-04-01 14:23:16.000000000", "message": "Done, thanks!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_1708bfd7", "line": 55, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'ManilaBase' has no 'soft_delete' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/scheduler/drivers/filter.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_3366e4c2", "line": 165, "range": {"start_line": 165, "start_character": 64, "end_line": 165, "end_character": 66}, "updated": "2020-03-31 06:46:16.000000000", "message": "host", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_088d4231", "line": 165, "range": {"start_line": 165, "start_character": 64, "end_line": 165, "end_character": 66}, "in_reply_to": "df33271e_3366e4c2", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "8ba6ca9c8a38c6336ae74b9127bd2297c9f56544", "unresolved": false, "patch_set": 5, "id": "df33271e_fe28fc86", "line": 173, "range": {"start_line": 173, "start_character": 8, "end_line": 173, "end_character": 70}, "updated": "2020-03-27 08:06:41.000000000", "message": "I suggest to use the same pattern like the two lines above (or vice versa change those to be the same like the line here)", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_e88f3e27", "line": 173, "range": {"start_line": 173, "start_character": 8, "end_line": 173, "end_character": 70}, "in_reply_to": "df33271e_fe28fc86", "updated": "2020-04-01 14:23:16.000000000", "message": "Done,thanks!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b23004a591c252d8a4a3f0ca5cfcb17e97dbce41", "unresolved": false, "patch_set": 5, "id": "df33271e_36d9b256", "line": 183, "range": {"start_line": 183, "start_character": 63, "end_line": 183, "end_character": 70}, "updated": "2020-03-31 06:49:51.000000000", "message": "replica or snapshot clone", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_4883ca04", "line": 183, "range": {"start_line": 183, "start_character": 63, "end_line": 183, "end_character": 70}, "in_reply_to": "df33271e_36d9b256", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}], "manila/scheduler/filters/create_from_snapshot.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_53bd68d6", "line": 48, "range": {"start_line": 48, "start_character": 24, "end_line": 48, "end_character": 25}, "updated": "2020-03-31 06:46:16.000000000", "message": "nit: redundant parentheses", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_c8587a57", "line": 48, "range": {"start_line": 48, "start_character": 24, "end_line": 48, "end_character": 25}, "in_reply_to": "df33271e_53bd68d6", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_93a8908c", "line": 54, "range": {"start_line": 54, "start_character": 72, "end_line": 54, "end_character": 78}, "updated": "2020-03-31 06:46:16.000000000", "message": "nit: None is the default", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_a8537638", "line": 54, "range": {"start_line": 54, "start_character": 72, "end_line": 54, "end_character": 78}, "in_reply_to": "df33271e_93a8908c", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_d395f841", "line": 60, "range": {"start_line": 60, "start_character": 11, "end_line": 60, "end_character": 27}, "updated": "2020-03-31 06:46:16.000000000", "message": "host_backend will always be set..", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_083422fb", "line": 60, "range": {"start_line": 60, "start_character": 11, "end_line": 60, "end_character": 27}, "in_reply_to": "df33271e_d395f841", "updated": "2020-04-01 14:23:16.000000000", "message": "for sure, done!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "4339d83f6e8c6266a398409c35e4121f0bc45bed", "unresolved": false, "patch_set": 10, "id": "df33271e_42977991", "updated": "2020-04-08 18:21:48.000000000", "message": "Please update the config opt help text for \"use_scheduler_creating_share_from_snapshot\" that this filter must be enabled and hosts must report a \"replication_domain\" if that config opt is used.. .", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_6b4ecd38", "in_reply_to": "df33271e_42977991", "updated": "2020-04-09 03:10:33.000000000", "message": "Done", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_fa3c68e2", "line": 26, "range": {"start_line": 26, "start_character": 55, "end_line": 26, "end_character": 74}, "updated": "2020-04-09 06:22:27.000000000", "message": "replication_domain", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_3f8199fc", "line": 26, "range": {"start_line": 26, "start_character": 55, "end_line": 26, "end_character": 74}, "in_reply_to": "df33271e_fa3c68e2", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_c84551b6", "line": 26, "range": {"start_line": 26, "start_character": 55, "end_line": 26, "end_character": 74}, "in_reply_to": "df33271e_fa3c68e2", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_3f6a39ec", "line": 35, "range": {"start_line": 35, "start_character": 62, "end_line": 35, "end_character": 64}, "updated": "2020-04-09 12:57:52.000000000", "message": "nit: s/of/as/", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_e81935d7", "line": 35, "range": {"start_line": 35, "start_character": 62, "end_line": 35, "end_character": 64}, "in_reply_to": "df33271e_3f6a39ec", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_7a017806", "line": 59, "range": {"start_line": 59, "start_character": 10, "end_line": 59, "end_character": 41}, "updated": "2020-04-09 06:22:27.000000000", "message": "No longer true", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_bf748937", "line": 59, "range": {"start_line": 59, "start_character": 10, "end_line": 59, "end_character": 41}, "in_reply_to": "df33271e_7a017806", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_28103da8", "line": 59, "range": {"start_line": 59, "start_character": 10, "end_line": 59, "end_character": 41}, "in_reply_to": "df33271e_7a017806", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_1d06661d", "line": 61, "range": {"start_line": 61, "start_character": 11, "end_line": 61, "end_character": 35}, "updated": "2020-04-09 06:22:27.000000000", "message": "nit: redundant", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/share/api.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_d32858e3", "line": 129, "range": {"start_line": 127, "start_character": 44, "end_line": 129, "end_character": 38}, "updated": "2020-03-31 06:46:16.000000000", "message": "Please separate this information as a LOG.error, it leaks information regarding cloud configuration to end users..", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_137480fd", "line": 284, "range": {"start_line": 284, "start_character": 12, "end_line": 284, "end_character": 56}, "updated": "2020-03-31 06:46:16.000000000", "message": "You already have this info, so no need to fetch the snapshot again on line 477, can you pass this as a kwarg to create_instance instead?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_c806ba20", "line": 284, "range": {"start_line": 284, "start_character": 12, "end_line": 284, "end_character": 56}, "in_reply_to": "df33271e_137480fd", "updated": "2020-04-01 14:23:16.000000000", "message": "Thanks for that! Done.", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_dd4d1e73", "line": 50, "range": {"start_line": 50, "start_character": 27, "end_line": 50, "end_character": 42}, "updated": "2020-04-09 06:22:27.000000000", "message": "enabling this option", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_e867754c", "line": 50, "range": {"start_line": 50, "start_character": 27, "end_line": 50, "end_character": 42}, "in_reply_to": "df33271e_3fafd97d", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_3fafd97d", "line": 50, "range": {"start_line": 50, "start_character": 27, "end_line": 50, "end_character": 42}, "in_reply_to": "df33271e_dd4d1e73", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/share/driver.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_534d6898", "line": 654, "range": {"start_line": 654, "start_character": 8, "end_line": 654, "end_character": 54}, "updated": "2020-03-31 06:46:16.000000000", "message": "Can you expand this docstring?\n\nPlease call out what drivers must do for long pending operations... \n\nYou now need the driver to return a dictionary containing at least two items: 'status' and 'export_locations', deprecated behavior is to just return a list of export location objects\n\nAlso, it appears you *need* the driver to set \"creating_share_from_snapshot\" as the status, if the creation is pending", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_ab441048", "line": 654, "range": {"start_line": 654, "start_character": 8, "end_line": 654, "end_character": 54}, "in_reply_to": "df33271e_534d6898", "updated": "2020-04-01 14:23:16.000000000", "message": "Added some info, hope that explains it better.\nThanks!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_33cd4431", "line": 2759, "range": {"start_line": 2759, "start_character": 18, "end_line": 2759, "end_character": 19}, "updated": "2020-03-31 06:46:16.000000000", "message": "periodically", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_4b6f44c4", "line": 2759, "range": {"start_line": 2759, "start_character": 18, "end_line": 2759, "end_character": 19}, "in_reply_to": "df33271e_33cd4431", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_33370402", "line": 2761, "range": {"start_line": 2761, "start_character": 66, "end_line": 2761, "end_character": 67}, "updated": "2020-03-31 06:46:16.000000000", "message": "Add when/how often this method is expected to be called.", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_2b72c0ad", "line": 2761, "range": {"start_line": 2761, "start_character": 66, "end_line": 2761, "end_character": 67}, "in_reply_to": "df33271e_33370402", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 9, "id": "df33271e_143693b5", "line": 2799, "range": {"start_line": 2799, "start_character": 9, "end_line": 2799, "end_character": 16}, "updated": "2020-04-09 12:57:52.000000000", "message": "and it returns ``progress``", "commit_id": "871c672140f5f98d77b4e4b26cbe26efff0f43b9"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "93ff80d497b781e1c196282bcfe459a4dd7d0752", "unresolved": false, "patch_set": 10, "id": "df33271e_8277c13a", "line": 665, "range": {"start_line": 665, "start_character": 43, "end_line": 665, "end_character": 49}, "updated": "2020-04-08 18:35:04.000000000", "message": "available", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_cb60b9a8", "line": 665, "range": {"start_line": 665, "start_character": 43, "end_line": 665, "end_character": 49}, "in_reply_to": "df33271e_8277c13a", "updated": "2020-04-09 03:10:33.000000000", "message": "Done", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "5842bcb4f7ead38c254a95b3f5b306fae8e0c329", "unresolved": false, "patch_set": 10, "id": "df33271e_56729b4a", "line": 666, "range": {"start_line": 666, "start_character": 13, "end_line": 666, "end_character": 18}, "updated": "2020-04-08 18:41:16.000000000", "message": "'error' is not an acceptable state..", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_ab6575b7", "line": 666, "range": {"start_line": 666, "start_character": 13, "end_line": 666, "end_character": 18}, "in_reply_to": "df33271e_56729b4a", "updated": "2020-04-09 03:10:33.000000000", "message": "Done", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "2c45447e72c06f2b0be798c2ee8539c5f11eb39e", "unresolved": false, "patch_set": 10, "id": "df33271e_c2b709d8", "line": 667, "range": {"start_line": 667, "start_character": 0, "end_line": 667, "end_character": 0}, "updated": "2020-04-08 18:36:38.000000000", "message": "Explain that, if \"creating_from_snapshot\" is returned, driver interface \"get_share_status\" must be implemented.", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_0b5741cc", "line": 667, "range": {"start_line": 667, "start_character": 0, "end_line": 667, "end_character": 0}, "in_reply_to": "df33271e_c2b709d8", "updated": "2020-04-09 03:10:33.000000000", "message": "Done", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "5842bcb4f7ead38c254a95b3f5b306fae8e0c329", "unresolved": false, "patch_set": 10, "id": "df33271e_7677df3b", "line": 684, "range": {"start_line": 684, "start_character": 0, "end_line": 684, "end_character": 0}, "updated": "2020-04-08 18:41:16.000000000", "message": "raises: ShareBackendException\n\nin case share cannot be created for some reason", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_eb5bfdf2", "line": 684, "range": {"start_line": 684, "start_character": 0, "end_line": 684, "end_character": 0}, "in_reply_to": "df33271e_7677df3b", "updated": "2020-04-09 03:10:33.000000000", "message": "Done", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_fd7102aa", "line": 658, "range": {"start_line": 658, "start_character": 38, "end_line": 658, "end_character": 72}, "updated": "2020-04-09 06:22:27.000000000", "message": "complete this creation asynchronously", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_ff061186", "line": 658, "range": {"start_line": 658, "start_character": 38, "end_line": 658, "end_character": 72}, "in_reply_to": "df33271e_fd7102aa", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_4859418c", "line": 658, "range": {"start_line": 658, "start_character": 38, "end_line": 658, "end_character": 72}, "in_reply_to": "df33271e_ff061186", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_5d6aaeb2", "line": 667, "range": {"start_line": 667, "start_character": 69, "end_line": 667, "end_character": 75}, "updated": "2020-04-09 06:22:27.000000000", "message": "available", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_285e7d75", "line": 667, "range": {"start_line": 667, "start_character": 69, "end_line": 667, "end_character": 75}, "in_reply_to": "df33271e_1f02d56f", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_1f02d56f", "line": 667, "range": {"start_line": 667, "start_character": 69, "end_line": 667, "end_character": 75}, "in_reply_to": "df33271e_5d6aaeb2", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_3d67eaeb", "line": 669, "range": {"start_line": 669, "start_character": 42, "end_line": 669, "end_character": 48}, "updated": "2020-04-09 06:22:27.000000000", "message": "available", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_7ffa0175", "line": 669, "range": {"start_line": 669, "start_character": 42, "end_line": 669, "end_character": 48}, "in_reply_to": "df33271e_3d67eaeb", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_08c8d91f", "line": 669, "range": {"start_line": 669, "start_character": 42, "end_line": 669, "end_character": 48}, "in_reply_to": "df33271e_7ffa0175", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_dd84fe60", "line": 1413, "range": {"start_line": 1413, "start_character": 63, "end_line": 1413, "end_character": 64}, "updated": "2020-04-09 06:22:27.000000000", "message": "They should respond with \"status\": \"available\" or \"status\": \"creating_from_snapshot\" here too?", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_e8cc9536", "line": 1413, "range": {"start_line": 1413, "start_character": 63, "end_line": 1413, "end_character": 64}, "in_reply_to": "df33271e_dd84fe60", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_22721eae", "line": 1441, "range": {"start_line": 1441, "start_character": 42, "end_line": 1441, "end_character": 69}, "updated": "2020-04-09 12:57:52.000000000", "message": "Why are we defaulting to AVAILABLE?  If a driver were to use the new dict format but fail to return status, isn't that an error condition?", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_6801a538", "line": 1441, "range": {"start_line": 1441, "start_character": 42, "end_line": 1441, "end_character": 69}, "in_reply_to": "df33271e_22721eae", "updated": "2020-04-09 14:35:41.000000000", "message": "You're right Tom. If the driver is using the new model update dict, it should be an status error. I'm raising an error now.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_a2674eb7", "line": 1445, "range": {"start_line": 1445, "start_character": 20, "end_line": 1445, "end_character": 77}, "updated": "2020-04-09 12:57:52.000000000", "message": "If a driver returns STATUS_ERROR that isn't an *invalid* status, is it?", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "944a5592449da49c47a44a5a9a01316ac8142759", "unresolved": false, "patch_set": 11, "id": "df33271e_53cd7683", "line": 1445, "range": {"start_line": 1445, "start_character": 20, "end_line": 1445, "end_character": 77}, "in_reply_to": "df33271e_48b5c17d", "updated": "2020-04-09 14:47:45.000000000", "message": "You are right.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_48b5c17d", "line": 1445, "range": {"start_line": 1445, "start_character": 20, "end_line": 1445, "end_character": 77}, "in_reply_to": "df33271e_a2674eb7", "updated": "2020-04-09 14:35:41.000000000", "message": "Acording to the driver interface, for creating_share_from_snaphot we don't support this status. Let me know if you think that we must treat 'error' in a different way.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_3d952a88", "line": 1448, "range": {"start_line": 1447, "start_character": 16, "end_line": 1448, "end_character": 38}, "updated": "2020-04-09 06:22:27.000000000", "message": "Drivers can override this call if they support consistency groups. \nSo you should do this *after* the driver call in the share manager, \nso you can handle the case when this interface is overridden too:\n\n\nhttps://opendev.org/openstack/manila/src/commit/93d9626ccd00c3b2a34a969ab2894101e0cc1735/manila/share/manager.py#L4042-L4044", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_ff2bb1e7", "line": 1448, "range": {"start_line": 1447, "start_character": 16, "end_line": 1448, "end_character": 38}, "in_reply_to": "df33271e_3d952a88", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_c8a8b121", "line": 1448, "range": {"start_line": 1447, "start_character": 16, "end_line": 1448, "end_character": 38}, "in_reply_to": "df33271e_ff2bb1e7", "updated": "2020-04-09 14:35:41.000000000", "message": "Sure, including NetApp implementation :)\nDone, moved things to share-manager.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_02071a84", "line": 2817, "updated": "2020-04-09 12:57:52.000000000", "message": "and progress as a percentage of the share completion task", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_a8a56d49", "line": 2817, "in_reply_to": "df33271e_02071a84", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "944a5592449da49c47a44a5a9a01316ac8142759", "unresolved": false, "patch_set": 12, "id": "df33271e_68afe529", "line": 658, "range": {"start_line": 658, "start_character": 22, "end_line": 658, "end_character": 23}, "updated": "2020-04-09 14:47:45.000000000", "message": "nit: will be able  to complete this creation asynchronously\n\nword 'to' is missing", "commit_id": "6c47b193b07a96f7131b6241d6323387acd33979"}], "manila/share/drivers/generic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_f70a7bcf", "line": 178, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'GenericShareDriver' has no 'do_setup' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_570ec7e4", "line": 639, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'GenericShareDriver' has no '_update_share_stats' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/share/drivers/hdfs/hdfs_native.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_d76c979d", "line": 91, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'HDFSNativeShareDriver' has no 'do_setup' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_b76753b7", "line": 437, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'HDFSNativeShareDriver' has no '_update_share_stats' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/share/drivers/ibm/gpfs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_5759a7fb", "line": 149, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'GPFSShareDriver' has no 'do_setup' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_375ce3eb", "line": 769, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'GPFSShareDriver' has no '_update_share_stats' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/share/drivers/maprfs/maprfs_native.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_97768f6f", "line": 98, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'MapRFSNativeShareDriver' has no 'do_setup' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_77714b76", "line": 438, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'MapRFSNativeShareDriver' has no '_update_share_stats' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/share/drivers/veritas/veritas_isa.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_37118305", "line": 129, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'ACCESSShareDriver' has no 'do_setup' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "12c854c7172a0d15788a286a31257a5655e39cd1", "unresolved": false, "patch_set": 7, "id": "df33271e_97fb2fbf", "line": 628, "updated": "2020-04-01 16:20:13.000000000", "message": "E1101: \u001b[1;31mSuper of 'ACCESSShareDriver' has no '_update_share_stats' member\u001b[0m (\u001b[1;31mno-member\u001b[0m)", "commit_id": "8974f5d4a489c48c40157b446eee660f8f7193fe"}], "manila/share/manager.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_f3a59c48", "line": 4463, "range": {"start_line": 4462, "start_character": 26, "end_line": 4463, "end_character": 58}, "updated": "2020-03-31 06:46:16.000000000", "message": "Can you filter this further in the database with status STATUS_CREATING_FROM_SNAPSHOT", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_cb6234d8", "line": 4463, "range": {"start_line": 4462, "start_character": 26, "end_line": 4463, "end_character": 58}, "in_reply_to": "df33271e_f3a59c48", "updated": "2020-04-01 14:23:16.000000000", "message": "Done!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_961fde59", "line": 4484, "range": {"start_line": 4481, "start_character": 12, "end_line": 4484, "end_character": 35}, "updated": "2020-03-31 06:46:16.000000000", "message": "Hmmm, so the design here is that this driver invocation will raise an exception to indicate that a given share cannot be created. \n\nPlease add this expectation in the driver interface doc string..", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_8b9aecb5", "line": 4484, "range": {"start_line": 4481, "start_character": 12, "end_line": 4484, "end_character": 35}, "in_reply_to": "df33271e_961fde59", "updated": "2020-04-01 14:23:16.000000000", "message": "Not really, don't want drivers raising exceptions for a get_share_status call, doesn't look correct. Instead, I'm just looking for status updates, if the driver fails to get such info, should return 'error' or 'creating_from_snapshot' depending on its internal issues.", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_f68bca64", "line": 4490, "range": {"start_line": 4490, "start_character": 43, "end_line": 4490, "end_character": 47}, "updated": "2020-03-31 06:46:16.000000000", "message": "share_id", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_6bda0878", "line": 4490, "range": {"start_line": 4490, "start_character": 43, "end_line": 4490, "end_character": 47}, "in_reply_to": "df33271e_f68bca64", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_36537219", "line": 4494, "range": {"start_line": 4494, "start_character": 42, "end_line": 4494, "end_character": 48}, "updated": "2020-03-31 06:46:16.000000000", "message": "None is the default for dict.get", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_cbe5143a", "line": 4494, "range": {"start_line": 4494, "start_character": 42, "end_line": 4494, "end_character": 48}, "in_reply_to": "df33271e_36537219", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_36053212", "line": 4497, "range": {"start_line": 4497, "start_character": 48, "end_line": 4497, "end_character": 53}, "updated": "2020-03-31 06:46:16.000000000", "message": "share_instance['progress']?\n\nIf a driver doesn't provide progress, we should probably assume that no progress has been made?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_4b0e24e5", "line": 4497, "range": {"start_line": 4497, "start_character": 48, "end_line": 4497, "end_character": 53}, "in_reply_to": "df33271e_36053212", "updated": "2020-04-01 14:23:16.000000000", "message": "We'll avoid setting any value if the driver doesn't provide this info, will remains as 'null' for users, that doesn't mean anything, I think. We still have db updates, so I'm considering that update_at will change, or not?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_f6446a49", "line": 4500, "range": {"start_line": 4500, "start_character": 40, "end_line": 4500, "end_character": 62}, "updated": "2020-03-31 06:46:16.000000000", "message": "If this is possible, we don't set a user message as in case of an exception?", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_2b112005", "line": 4500, "range": {"start_line": 4500, "start_character": 40, "end_line": 4500, "end_character": 62}, "in_reply_to": "df33271e_f6446a49", "updated": "2020-04-01 14:23:16.000000000", "message": "Fixed that!", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a8ff0f7fc46cbc5e5984644b0b13be9c769742b8", "unresolved": false, "patch_set": 5, "id": "df33271e_d66a06b1", "line": 4511, "range": {"start_line": 4511, "start_character": 20, "end_line": 4511, "end_character": 21}, "updated": "2020-03-31 06:46:16.000000000", "message": "Status of share instance %(id)s belonging to share %(share_id)s was updated to ...", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e024d9a0387c7f159d92437a02c6b104dde89e5a", "unresolved": false, "patch_set": 5, "id": "df33271e_6bf688d9", "line": 4511, "range": {"start_line": 4511, "start_character": 20, "end_line": 4511, "end_character": 21}, "in_reply_to": "df33271e_d66a06b1", "updated": "2020-04-01 14:23:16.000000000", "message": "Done", "commit_id": "b3cbf91f191534fe8b30078483eb74eb42c7fdd1"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1bbeadab976e5c4f9d882b85d3a035b1ecd7220b", "unresolved": false, "patch_set": 10, "id": "df33271e_7676bf08", "line": 4497, "range": {"start_line": 4496, "start_character": 0, "end_line": 4497, "end_character": 55}, "updated": "2020-04-08 18:51:57.000000000", "message": "handle exceptions here... \n\nor for line 4505 - but, clarify in the share driver doc string that exceptions are supposed to be handled; and if one is raised, the share status *will* be set to \"ERROR\".", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "e2608368d92c09f15b72985bc8d139955d641627", "unresolved": false, "patch_set": 10, "id": "df33271e_2b716577", "line": 4497, "range": {"start_line": 4496, "start_character": 0, "end_line": 4497, "end_character": 55}, "in_reply_to": "df33271e_7676bf08", "updated": "2020-04-09 03:10:33.000000000", "message": "Done, thks", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1bbeadab976e5c4f9d882b85d3a035b1ecd7220b", "unresolved": false, "patch_set": 10, "id": "df33271e_b67847f8", "line": 4529, "range": {"start_line": 4523, "start_character": 6, "end_line": 4529, "end_character": 18}, "updated": "2020-04-08 18:51:57.000000000", "message": "What is the user message here? You've to define a new message type", "commit_id": "6fe43f256abe4c7b664738414ef7c470853dba9b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_fd42a20e", "line": 1382, "range": {"start_line": 1380, "start_character": 0, "end_line": 1382, "end_character": 51}, "updated": "2020-04-09 06:22:27.000000000", "message": "The progress field must be updated here to 100%", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_8877c9d4", "line": 1382, "range": {"start_line": 1380, "start_character": 0, "end_line": 1382, "end_character": 51}, "in_reply_to": "df33271e_5f3c5d2e", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_5f3c5d2e", "line": 1382, "range": {"start_line": 1380, "start_character": 0, "end_line": 1382, "end_character": 51}, "in_reply_to": "df33271e_fd42a20e", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_3d488a2b", "line": 1563, "range": {"start_line": 1561, "start_character": 0, "end_line": 1563, "end_character": 51}, "updated": "2020-04-09 06:22:27.000000000", "message": "The progress field must be updated here to 100%", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_ff1451a2", "line": 1563, "range": {"start_line": 1561, "start_character": 0, "end_line": 1563, "end_character": 51}, "in_reply_to": "df33271e_3d488a2b", "updated": "2020-04-09 12:57:52.000000000", "message": "+1", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_687405d0", "line": 1563, "range": {"start_line": 1561, "start_character": 0, "end_line": 1563, "end_character": 51}, "in_reply_to": "df33271e_ff1451a2", "updated": "2020-04-09 14:35:41.000000000", "message": "Done", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_bd0adace", "line": 4525, "range": {"start_line": 4514, "start_character": 12, "end_line": 4525, "end_character": 18}, "updated": "2020-04-09 06:22:27.000000000", "message": "data_updates = {\n    'status': constants.STATUS_ERROR,\n }\n\n\nSo the handling from line 4531-4549 can handle this,", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_a87a8db6", "line": 4525, "range": {"start_line": 4514, "start_character": 12, "end_line": 4525, "end_character": 18}, "in_reply_to": "df33271e_bd0adace", "updated": "2020-04-09 14:35:41.000000000", "message": "So much easy, thanks!", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_1d25c65c", "line": 4556, "range": {"start_line": 4556, "start_character": 65, "end_line": 4556, "end_character": 73}, "updated": "2020-04-09 06:22:27.000000000", "message": "if a driver doesn't report this, you'll be resetting 0% to None... that'd be bad.. why not just leave it at 0% or whatever the driver's previous update was?", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_9f1b85c8", "line": 4556, "range": {"start_line": 4556, "start_character": 65, "end_line": 4556, "end_character": 73}, "in_reply_to": "df33271e_1d25c65c", "updated": "2020-04-09 12:57:52.000000000", "message": "Agree.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_c856f12a", "line": 4556, "range": {"start_line": 4556, "start_character": 65, "end_line": 4556, "end_character": 73}, "in_reply_to": "df33271e_1d25c65c", "updated": "2020-04-09 14:35:41.000000000", "message": "Sure, make sense, we shouldn't override the old progress value. Also fixed a little bug in this line :)", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1f9d34d830de2ef3729ead659596b15e38b84cc7", "unresolved": false, "patch_set": 11, "id": "df33271e_b974a137", "line": 4556, "range": {"start_line": 4556, "start_character": 65, "end_line": 4556, "end_character": 73}, "in_reply_to": "df33271e_c856f12a", "updated": "2020-04-09 16:02:09.000000000", "message": "Wow, and I didn't catch that myself - good to have multiple sets of eyes looking at this! :D", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/tests/api/v2/test_share_instances.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_1d8146fc", "line": 136, "range": {"start_line": 136, "start_character": 0, "end_line": 136, "end_character": 0}, "updated": "2020-04-09 06:22:27.000000000", "message": "asserts for v 2.54?", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_880ea938", "line": 136, "range": {"start_line": 136, "start_character": 0, "end_line": 136, "end_character": 0}, "in_reply_to": "df33271e_1d8146fc", "updated": "2020-04-09 14:35:41.000000000", "message": "added the assert for 'progress'. sorry about that. thanks.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/tests/share/drivers/dummy.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_9dc27633", "line": 235, "range": {"start_line": 231, "start_character": 0, "end_line": 235, "end_character": 9}, "updated": "2020-04-09 06:22:27.000000000", "message": "feels like you could toss a fair coin and make this method return \"creating_from_snapshot\" once in a while; else get_share_status will never be called on this method..", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "944a5592449da49c47a44a5a9a01316ac8142759", "unresolved": false, "patch_set": 11, "id": "df33271e_537bb626", "line": 235, "range": {"start_line": 231, "start_character": 0, "end_line": 235, "end_character": 9}, "in_reply_to": "df33271e_53da9677", "updated": "2020-04-09 14:47:45.000000000", "message": "OK by me.  Thanks.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_53da9677", "line": 235, "range": {"start_line": 231, "start_character": 0, "end_line": 235, "end_character": 9}, "in_reply_to": "df33271e_5fd8dded", "updated": "2020-04-09 14:35:41.000000000", "message": "Proposal: update this in a new change, because we'll need to fix some tests also.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "bf9abddeddd2b1733e2bd663850f609d83c6ae46", "unresolved": false, "patch_set": 11, "id": "df33271e_5fd8dded", "line": 235, "range": {"start_line": 231, "start_character": 0, "end_line": 235, "end_character": 9}, "in_reply_to": "df33271e_9dc27633", "updated": "2020-04-09 12:57:52.000000000", "message": "Yeah, that would help alleviate some of my concern that we don't exercise or cover the slow/asysnc path that much.", "commit_id": "f6d894f88d0de504ea291a165e6b4809a387026e"}], "manila/tests/share/test_api.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "26e63c136731aff2ba2005f754e240812c3c3429", "unresolved": false, "patch_set": 11, "id": "df33271e_5dd10efb", "side": "PARENT", "line": 2838, "range": {"start_line": 2837, "start_character": 0, "end_line": 2838, "end_character": 44}, "updated": "2020-04-09 06:22:27.000000000", "message": "Why is this being removed?", "commit_id": "5eaa9e60467309f0d2824d328b2f005cb2dfb454"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "d1c8ff2c4685787231645ffaf10bf5f801fd7033", "unresolved": false, "patch_set": 11, "id": "df33271e_f34daa72", "side": "PARENT", "line": 2838, "range": {"start_line": 2837, "start_character": 0, "end_line": 2838, "end_character": 44}, "in_reply_to": "df33271e_5dd10efb", "updated": "2020-04-09 14:35:41.000000000", "message": "Oh! must me a mistake on rebasing. Thanks.", "commit_id": "5eaa9e60467309f0d2824d328b2f005cb2dfb454"}], "manila/tests/share/test_manager.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1f9d34d830de2ef3729ead659596b15e38b84cc7", "unresolved": false, "patch_set": 12, "id": "df33271e_b9c2e132", "line": 4189, "range": {"start_line": 4188, "start_character": 0, "end_line": 4189, "end_character": 57}, "updated": "2020-04-09 16:02:09.000000000", "message": "Please cleanup in a follow up patch", "commit_id": "6c47b193b07a96f7131b6241d6323387acd33979"}]}}, "openstack%2Fkeystone~master~I8ee43b437b551858c198320204b768cdba311506": {"owner_id": 18464, "owner_name": "Richard Avelar", "owner_email": "csravelar@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 01:30:59.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 17860, "name": "Samuel de Medeiros Queiroz", "email": "samueldmq@gmail.com", "username": "samueldmq"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 2, "date": "2020-04-09 19:23:54.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 0, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "8d40c1cad6059d47152214fe38892c010bcfe4a4", "unresolved": false, "patch_set": 5, "id": "7faddb67_93081f27", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 35}, "updated": "2019-08-21 14:11:47.000000000", "message": "Can add tag closes-bug?", "commit_id": "2ccca93d8a1039ec12ae9a82dea196eccf8c269b"}], "keystone/identity/core.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "522869c8f8140e58fd44dc7e17ecfc6ccc329746", "unresolved": false, "patch_set": 7, "id": "1fa4df85_0d3a4297", "line": 1116, "updated": "2020-03-18 22:00:03.000000000", "message": "Are we letting non-federated users be updated into federated users? Do we want to allow that? (not sure what the answer is, just thinking out loud...)", "commit_id": "b22d0cf5f92af8406383dd753bb4f25564edda5e"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "81da9357ba13d71387863b66f7ccc66b75df998a", "unresolved": false, "patch_set": 9, "id": "df33271e_6d5d2a46", "line": 1135, "range": {"start_line": 1134, "start_character": 0, "end_line": 1135, "end_character": 37}, "updated": "2020-04-10 01:30:59.000000000", "message": "This seems redundant", "commit_id": "e723a1c16ebe04c927216a64f1025118f0094df1"}], "keystone/tests/unit/test_shadow_users.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8d87ba2c02ad28cc75cdc727077823036629509f", "unresolved": false, "patch_set": 8, "id": "df33271e_f8d49949", "line": 16, "updated": "2020-04-08 02:39:56.000000000", "message": "pep8: H306  imports not in alphabetical order (keystone.exception, keystone.common.provider_api)", "commit_id": "dab46d9f2c5bffa62df04295b6f218cbc2150be1"}]}}, "openstack%2Fkeystone~master~I6db03af81099a7509635881f05adf5a7257466a7": {"owner_id": 18464, "owner_name": "Richard Avelar", "owner_email": "csravelar@gmail.com", "labels": [{"value": 2, "date": "2020-04-10 01:35:26.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 2, "date": "2020-04-09 19:23:18.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 0, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "0d1d38933103cde456b36358d44dfb920ffad203", "unresolved": false, "patch_set": 7, "id": "7faddb67_d83a3696", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 12}, "updated": "2019-08-21 13:46:42.000000000", "message": "Can tag bug-id here too?", "commit_id": "bff6817c64917610863b6cbed1f22ce8e6bce6ba"}], "keystone/identity/core.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "639616f1aff4379c97f1861b4a65634936a93dc9", "unresolved": false, "patch_set": 8, "id": "1fa4df85_008d2930", "line": 930, "range": {"start_line": 930, "start_character": 12, "end_line": 930, "end_character": 58}, "updated": "2020-03-18 23:45:22.000000000", "message": "This needs to be handled. If this fails, it will return a Not Found to the user, but we actually need it to return a Bad Request https://github.com/openstack/api-sig/blob/master/guidelines/http/response-codes.rst#failure-code-clarifications", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "c566349f9800930e5f4a2be5cbc19eec6df4e6cf", "unresolved": false, "patch_set": 8, "id": "1fa4df85_00c1a9e4", "line": 930, "range": {"start_line": 930, "start_character": 12, "end_line": 930, "end_character": 58}, "in_reply_to": "1fa4df85_008d2930", "updated": "2020-03-19 00:19:02.000000000", "message": "Good catch! Same thing for the get_protocol down below.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "e1db3bf33c186fd1eebaacfce9651b83abf661f0", "unresolved": false, "patch_set": 8, "id": "1fa4df85_6ddc1674", "line": 952, "range": {"start_line": 951, "start_character": 8, "end_line": 952, "end_character": 35}, "updated": "2020-03-18 21:57:52.000000000", "message": "aren't these contrary?", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "c566349f9800930e5f4a2be5cbc19eec6df4e6cf", "unresolved": false, "patch_set": 8, "id": "1fa4df85_80acb935", "line": 952, "range": {"start_line": 951, "start_character": 8, "end_line": 952, "end_character": 35}, "in_reply_to": "1fa4df85_6ddc1674", "updated": "2020-03-19 00:19:02.000000000", "message": "Indeed, that second check seems unnecessary. Will remove.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "1c5e1e1d17011d9b2b86156e0455badfe8e14d2b", "unresolved": false, "patch_set": 8, "id": "df33271e_7ef66365", "line": 952, "range": {"start_line": 951, "start_character": 8, "end_line": 952, "end_character": 35}, "in_reply_to": "1fa4df85_6ddc1674", "updated": "2020-03-31 15:59:38.000000000", "message": "On deeper look, it seems fine. First conditional checks for null, empty or nonexistent. Second conditional cleans it up if existent.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "cf2e8120f65115b46d766fde718d96665ee9d973", "unresolved": false, "patch_set": 8, "id": "df33271e_faa3969c", "line": 952, "range": {"start_line": 951, "start_character": 8, "end_line": 952, "end_character": 35}, "in_reply_to": "df33271e_27a68754", "updated": "2020-03-31 22:36:06.000000000", "message": "In case that's what the API user does when calling the create_user. The schema allows an array, so it would probably allow an empty one to pass through.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "85c5f2b1003c0f499d7c58d2420a5e83f34af6d1", "unresolved": false, "patch_set": 8, "id": "df33271e_27a68754", "line": 952, "range": {"start_line": 951, "start_character": 8, "end_line": 952, "end_character": 35}, "in_reply_to": "df33271e_7ef66365", "updated": "2020-03-31 22:00:35.000000000", "message": "Why would it be existent but empty?", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}], "keystone/identity/schema.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "639616f1aff4379c97f1861b4a65634936a93dc9", "unresolved": false, "patch_set": 8, "id": "1fa4df85_20ace58a", "line": 37, "range": {"start_line": 37, "start_character": 8, "end_line": 37, "end_character": 23}, "updated": "2020-03-18 23:45:22.000000000", "message": "Is this so a local user can be mapped to multiple IdPs?", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "c566349f9800930e5f4a2be5cbc19eec6df4e6cf", "unresolved": false, "patch_set": 8, "id": "1fa4df85_20fdc539", "line": 37, "range": {"start_line": 37, "start_character": 8, "end_line": 37, "end_character": 23}, "in_reply_to": "1fa4df85_20ace58a", "updated": "2020-03-19 00:19:02.000000000", "message": "Yes. That was the general direction that Ron and Richard were taking users at the time of the writing of this code.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "639616f1aff4379c97f1861b4a65634936a93dc9", "unresolved": false, "patch_set": 8, "id": "1fa4df85_60a2dd9c", "line": 50, "range": {"start_line": 50, "start_character": 36, "end_line": 50, "end_character": 67}, "updated": "2020-03-18 23:45:22.000000000", "message": "What does this mean? What is the need for it? Why is it part of the list of protocols?", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "c566349f9800930e5f4a2be5cbc19eec6df4e6cf", "unresolved": false, "patch_set": 8, "id": "1fa4df85_c0a15148", "line": 50, "range": {"start_line": 50, "start_character": 36, "end_line": 50, "end_character": 67}, "in_reply_to": "1fa4df85_60a2dd9c", "updated": "2020-03-19 00:19:02.000000000", "message": "An idp can have multiple protocols. The unique_id passed down may be different for each protocol and idp. This is to allow multiple federated identities for each user.", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "85c5f2b1003c0f499d7c58d2420a5e83f34af6d1", "unresolved": false, "patch_set": 8, "id": "df33271e_477e2baf", "line": 50, "range": {"start_line": 50, "start_character": 36, "end_line": 50, "end_character": 67}, "in_reply_to": "1fa4df85_c0a15148", "updated": "2020-03-31 22:00:35.000000000", "message": "I'm still unclear where this comes from, is this just made up by the admin? Is it generated by keystone? How is the admin supposed to know what to put here?", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "cf2e8120f65115b46d766fde718d96665ee9d973", "unresolved": false, "patch_set": 8, "id": "df33271e_5aa722be", "line": 50, "range": {"start_line": 50, "start_character": 36, "end_line": 50, "end_character": 67}, "in_reply_to": "df33271e_477e2baf", "updated": "2020-03-31 22:36:06.000000000", "message": "It's the unique identifier sent by the identity provider in the assertion. In SAML, it would be the NameID, in OIDC it would be the username. When a user logs in via federation, keystone stores this in https://opendev.org/openstack/keystone/src/branch/master/keystone/identity/backends/sql_model.py#L339", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "1f470b733910dbe3b57de513fb1380a323931179", "unresolved": false, "patch_set": 8, "id": "df33271e_7d294088", "line": 50, "range": {"start_line": 50, "start_character": 36, "end_line": 50, "end_character": 67}, "in_reply_to": "df33271e_5aa722be", "updated": "2020-03-31 23:12:06.000000000", "message": "ohhhh gotcha thanks", "commit_id": "228294d9b1039fb123fd7abfd1129268b401e4ee"}], "keystone/tests/unit/test_shadow_users.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "15a846152f6ece63991a307a5f68b0f0bbc0a904", "unresolved": false, "patch_set": 10, "id": "df33271e_1837bdb2", "line": 16, "updated": "2020-04-08 02:43:23.000000000", "message": "pep8: H306  imports not in alphabetical order (keystone.exception, keystone.common.provider_api)", "commit_id": "62655dfbbb77722cc5ec73e1f74d1309d5389380"}]}}, "openstack%2Fpython-qinlingclient~master~I4f2b57ff140410a49f49f01d7af28b9e8fded8ec": {"owner_id": 11503, "owner_name": "Ritesh Paiboina", "owner_email": "rsritesh@rediff.com", "labels": [{"value": 2, "date": "2020-04-09 04:59:35.000000000", "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11503, "name": "Ritesh Paiboina", "email": "rsritesh@rediff.com", "username": "rsritesh"}, {"value": 1, "date": "2020-04-09 19:55:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16006, "name": "goldyfruit", "email": "gaetan.trellu@incloudus.com", "username": "goldyfruit"}], "comments": {}}, "openstack%2Fkeystone~master~I8d69ef68153d6650652e1081e5e7b9e5e31a3ed1": {"owner_id": 18464, "owner_name": "Richard Avelar", "owner_email": "csravelar@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, {"value": 2, "date": "2020-04-10 09:28:31.000000000", "_account_id": 15054, "name": "wangxiyuan", "email": "wangxiyuan1007@gmail.com", "username": "wangxiyuan"}, {"value": 0, "_account_id": 2218, "name": "Adam Young", "email": "adam@younglogic.com", "username": "ayoung"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 2, "date": "2020-04-08 05:12:00.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 0, "_account_id": 18338, "name": "Ron De Rose", "email": "ronald.de.rose@intel.com", "username": "derosenet"}, {"value": 0, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"keystone/identity/core.py": [{"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_faf1da01", "line": 957, "range": {"start_line": 956, "start_character": 0, "end_line": 957, "end_character": 42}, "updated": "2017-03-23 12:50:39.000000000", "message": "so this was my suggestion since the beginning, I like this!\n\nWhat have changed that you decided to implement in this way?", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_a3981a1d", "line": 957, "range": {"start_line": 956, "start_character": 0, "end_line": 957, "end_character": 42}, "in_reply_to": "1a1ced50_faf1da01", "updated": "2017-03-23 16:11:43.000000000", "message": "Ah, just following the spec still. Plan to tack on another patch as a dependancy on the last one to fix the two tests it fails in the other repo and add fed object back", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "8e27545fd21632b38dd18ed259f472d19aabb8ac", "unresolved": false, "patch_set": 23, "id": "1fa4df85_e0b7add7", "line": 964, "updated": "2020-03-18 23:45:16.000000000", "message": "Should this be added to list_users too?", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "6022ab899f4ca0266307a5adc25186a10f96efcf", "unresolved": false, "patch_set": 23, "id": "df33271e_7b06761e", "line": 964, "in_reply_to": "1fa4df85_e0b7add7", "updated": "2020-03-31 14:46:54.000000000", "message": "Will do.", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "05405ec84139e46b2f46a826a5b91cc69a36b3da", "unresolved": false, "patch_set": 23, "id": "df33271e_db4222ab", "line": 964, "in_reply_to": "df33271e_7b06761e", "updated": "2020-03-31 15:00:06.000000000", "message": "On second thought, I am concerned about the performance hit this would cause when listing users since it would turn it from one query to N queries.", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "4f97ce8415991fbae92c09b8ad0993e77ea6c556", "unresolved": false, "patch_set": 23, "id": "df33271e_442c69ab", "line": 964, "in_reply_to": "df33271e_db4222ab", "updated": "2020-03-31 22:02:34.000000000", "message": "thumbsup", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}], "keystone/identity/shadow_backends/base.py": [{"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_1ae956b7", "line": 26, "range": {"start_line": 26, "start_character": 4, "end_line": 26, "end_character": 38}, "updated": "2017-03-23 12:50:39.000000000", "message": "put an example of the list returned in this method.", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_e37052df", "line": 26, "range": {"start_line": 26, "start_character": 4, "end_line": 26, "end_character": 38}, "in_reply_to": "1a1ced50_1ae956b7", "updated": "2017-03-23 16:11:43.000000000", "message": "Done", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_ba3922a6", "line": 35, "range": {"start_line": 35, "start_character": 10, "end_line": 35, "end_character": 16}, "updated": "2017-03-23 12:50:39.000000000", "message": "why not just {}?", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_23734ae9", "line": 35, "range": {"start_line": 35, "start_character": 10, "end_line": 35, "end_character": 16}, "in_reply_to": "1a1ced50_ba3922a6", "updated": "2017-03-23 16:11:43.000000000", "message": "Done", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_7a024ab5", "line": 46, "range": {"start_line": 37, "start_character": 0, "end_line": 46, "end_character": 10}, "updated": "2017-03-23 12:50:39.000000000", "message": "this couldn't be harder to read.", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_23850aad", "line": 46, "range": {"start_line": 37, "start_character": 0, "end_line": 46, "end_character": 10}, "in_reply_to": "1a1ced50_7a024ab5", "updated": "2017-03-23 16:11:43.000000000", "message": "Ah, the reformatting has to account for multiple objects and protocols to follow \nhttps://specs.openstack.org/openstack/keystone-specs/specs/keystone/ocata/support-federated-attr.html", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "4f7d54620dc05189d299e6ba0e088fe2cbef263b", "unresolved": false, "patch_set": 5, "id": "1a1ced50_18e6b116", "line": 42, "range": {"start_line": 42, "start_character": 5, "end_line": 42, "end_character": 23}, "updated": "2017-03-23 17:27:11.000000000", "message": "typo", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "25e0f59cb74d4c6804d5610543d570ee81e38279", "unresolved": false, "patch_set": 5, "id": "1a1ced50_0ca3d650", "line": 42, "range": {"start_line": 42, "start_character": 5, "end_line": 42, "end_character": 23}, "in_reply_to": "1a1ced50_18e6b116", "updated": "2017-03-23 20:28:34.000000000", "message": "Done", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "4f7d54620dc05189d299e6ba0e088fe2cbef263b", "unresolved": false, "patch_set": 5, "id": "1a1ced50_78c4055f", "line": 58, "range": {"start_line": 49, "start_character": 0, "end_line": 58, "end_character": 10}, "updated": "2017-03-23 17:27:11.000000000", "message": "can you refactor this? :)", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "25e0f59cb74d4c6804d5610543d570ee81e38279", "unresolved": false, "patch_set": 5, "id": "1a1ced50_2c6c1236", "line": 58, "range": {"start_line": 49, "start_character": 0, "end_line": 58, "end_character": 10}, "in_reply_to": "1a1ced50_78c4055f", "updated": "2017-03-23 20:28:34.000000000", "message": "Refactor the spec or the code? If the code, elaborate please :)\nI could add a comment explaining the process like they mention here: http://stackoverflow.com/questions/3483520/use-cases-for-the-setdefault-dict-method ?", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "4f7d54620dc05189d299e6ba0e088fe2cbef263b", "unresolved": false, "patch_set": 5, "id": "1a1ced50_989f0165", "line": 60, "range": {"start_line": 60, "start_character": 11, "end_line": 60, "end_character": 29}, "updated": "2017-03-23 17:27:11.000000000", "message": "this might be included in the refactoring", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}], "keystone/tests/unit/identity/test_core.py": [{"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_9a1466e9", "line": 195, "range": {"start_line": 195, "start_character": 13, "end_line": 195, "end_character": 22}, "updated": "2017-03-23 12:50:39.000000000", "message": "s/get_users/get_user", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_cc3f0386", "line": 195, "range": {"start_line": 195, "start_character": 13, "end_line": 195, "end_character": 22}, "in_reply_to": "1a1ced50_9a1466e9", "updated": "2017-03-23 16:11:43.000000000", "message": "Done", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_7af08ac9", "line": 203, "range": {"start_line": 203, "start_character": 8, "end_line": 203, "end_character": 48}, "updated": "2017-03-23 12:50:39.000000000", "message": "self.assertIn('federated', user_ref)", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_ec44bf1c", "line": 203, "range": {"start_line": 203, "start_character": 8, "end_line": 203, "end_character": 48}, "in_reply_to": "1a1ced50_7af08ac9", "updated": "2017-03-23 16:11:43.000000000", "message": "Done", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "03491b0430afed20454f9f9aeb2ad5d100147db1", "unresolved": false, "patch_set": 3, "id": "1a1ced50_9aa706a6", "line": 207, "range": {"start_line": 207, "start_character": 8, "end_line": 207, "end_character": 48}, "updated": "2017-03-23 12:50:39.000000000", "message": "again?", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "d4db2f7199e14d9d372387a09a3da85261a8774a", "unresolved": false, "patch_set": 3, "id": "1a1ced50_0c4afb27", "line": 207, "range": {"start_line": 207, "start_character": 8, "end_line": 207, "end_character": 48}, "in_reply_to": "1a1ced50_9aa706a6", "updated": "2017-03-23 16:11:43.000000000", "message": "Done", "commit_id": "bdd0db0607de5e99f745e24ee8d8599e1992a917"}, {"author": {"_account_id": 11022, "name": "Rodrigo Duarte Sousa", "email": "rodrigodsousa@gmail.com", "username": "rodrigods"}, "change_message_id": "4f7d54620dc05189d299e6ba0e088fe2cbef263b", "unresolved": false, "patch_set": 5, "id": "1a1ced50_b88bdd1d", "line": 188, "range": {"start_line": 188, "start_character": 8, "end_line": 188, "end_character": 25}, "updated": "2017-03-23 17:27:11.000000000", "message": "I think would be good to follow the \"assertEqual\" naming convention (assertFedDicts) - I know we have this kind of examples in our code, however this is the \"default\" for Python tests.", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "25e0f59cb74d4c6804d5610543d570ee81e38279", "unresolved": false, "patch_set": 5, "id": "ffe62b97_45829cca", "line": 188, "range": {"start_line": 188, "start_character": 8, "end_line": 188, "end_character": 25}, "in_reply_to": "1a1ced50_b88bdd1d", "updated": "2017-03-23 20:28:34.000000000", "message": "Done", "commit_id": "4a18bd9e473c0e1ed4b58de6b723db9a91b7f411"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "5f7d197adfd93a55c7d5766361b8ee77fe92df16", "unresolved": false, "patch_set": 9, "id": "ffe62b97_a0c5a43e", "line": 195, "range": {"start_line": 195, "start_character": 46, "end_line": 195, "end_character": 51}, "updated": "2017-03-24 19:56:10.000000000", "message": "s/users/objects", "commit_id": "f38d326704911cacf09d2b4bfc9214696d743811"}, {"author": {"_account_id": 18464, "name": "Richard Avelar", "email": "csravelar@gmail.com", "username": "razone"}, "change_message_id": "8d2a29844b352314319b2347908ec812b65d8f6e", "unresolved": false, "patch_set": 9, "id": "ffe62b97_82e70b41", "line": 195, "range": {"start_line": 195, "start_character": 46, "end_line": 195, "end_character": 51}, "in_reply_to": "ffe62b97_a0c5a43e", "updated": "2017-03-27 14:27:36.000000000", "message": "Done", "commit_id": "f38d326704911cacf09d2b4bfc9214696d743811"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "4bc9a90ea6aaa3464a6159438fc86ccfcb1f4876", "unresolved": false, "patch_set": 22, "id": "7faddb67_f85ff20b", "line": 190, "updated": "2019-08-21 13:41:51.000000000", "message": "NIT: a new line space will be better.", "commit_id": "bcc20b2d9f7de64aa29a94051ecafc0afee3053e"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "58279ba4b0e360a243682e991ed32734e9e48df2", "unresolved": false, "patch_set": 24, "id": "df33271e_0a35b1da", "line": 189, "range": {"start_line": 188, "start_character": 32, "end_line": 189, "end_character": 66}, "updated": "2020-04-07 16:27:14.000000000", "message": "I think the domain conflict issue comes from this, this is combining two unrelated test classes, the v3 API test base class and the shadow users backend test class, and they have different ways of setting up the root and default domains.\n\nThis is not an API test, it's a manager/backend test, so can we have this not inherit from RestfulTestCase?\n\nCan we also move this test class to somewhere less generic - somewhere close to the shadow users tests, or the regular identity users tests? test_core.py does not seem like an appropriate place for this.", "commit_id": "bcded012575faf6262531aa1a6b2ba1c4a4344cf"}], "keystone/tests/unit/test_v3.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a64c1b34f11635bd7b38f71e8b428427a905d3e4", "unresolved": false, "patch_set": 23, "id": "1fa4df85_cd598a35", "line": 218, "updated": "2020-03-18 21:51:21.000000000", "message": "This looks unrelated, is this an accidental rebase addition?", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "6022ab899f4ca0266307a5adc25186a10f96efcf", "unresolved": false, "patch_set": 23, "id": "df33271e_db2fc285", "line": 218, "in_reply_to": "1fa4df85_cd598a35", "updated": "2020-03-31 14:46:54.000000000", "message": "I thought so too, but tests fail with a conflict error without this. Investigating.", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "4f97ce8415991fbae92c09b8ad0993e77ea6c556", "unresolved": false, "patch_set": 24, "id": "df33271e_472c6bab", "line": 218, "updated": "2020-03-31 22:02:34.000000000", "message": "still would prefer to undo this or keep it in a separate patch if possible", "commit_id": "bcded012575faf6262531aa1a6b2ba1c4a4344cf"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "8af62f0ca1848dfd550489dc79f21596a95211a9", "unresolved": false, "patch_set": 24, "id": "df33271e_baaf4e7b", "line": 218, "in_reply_to": "df33271e_472c6bab", "updated": "2020-03-31 22:37:49.000000000", "message": "I agree, I'm going to spend a few hours investigating why tests would fail without this.", "commit_id": "bcded012575faf6262531aa1a6b2ba1c4a4344cf"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "a38eefc166c9399c93f15082cf10f5f44ed935a8", "unresolved": false, "patch_set": 24, "id": "df33271e_477b35bd", "line": 218, "in_reply_to": "df33271e_baaf4e7b", "updated": "2020-04-07 15:55:51.000000000", "message": "I am unable to split this out in time or do more investigration.", "commit_id": "bcded012575faf6262531aa1a6b2ba1c4a4344cf"}], "releasenotes/notes/federated-attr-a887677dbe0917cc.yaml": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "d6655b5186e57250abe6a53e504545a8ac713d92", "unresolved": false, "patch_set": 15, "id": "3f79a3b5_bbaca436", "line": 3, "updated": "2018-10-22 21:02:13.000000000", "message": "This needs to link to the specification.\n\nhttps://docs.openstack.org/keystone/latest/contributor/release-notes.html#release-notes-for-features", "commit_id": "f7fe68b9f7b2766650ca57f21049e95758918f49"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "4bc9a90ea6aaa3464a6159438fc86ccfcb1f4876", "unresolved": false, "patch_set": 15, "id": "3fce034c_34e6bb18", "line": 3, "in_reply_to": "3f79a3b5_bbaca436", "updated": "2019-08-21 13:41:51.000000000", "message": "++", "commit_id": "f7fe68b9f7b2766650ca57f21049e95758918f49"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "9d5a84924acc1071b03b39a4da0968ed8d9fc4ef", "unresolved": false, "patch_set": 15, "id": "7faddb67_56b5b27c", "line": 3, "in_reply_to": "3f79a3b5_bbaca436", "updated": "2019-08-06 15:27:44.000000000", "message": "Done", "commit_id": "f7fe68b9f7b2766650ca57f21049e95758918f49"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a64c1b34f11635bd7b38f71e8b428427a905d3e4", "unresolved": false, "patch_set": 23, "id": "1fa4df85_ada44e09", "line": 8, "updated": "2020-03-18 21:51:21.000000000", "message": "I think I would add this to the final patch in the series, not the first.", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "6022ab899f4ca0266307a5adc25186a10f96efcf", "unresolved": false, "patch_set": 23, "id": "df33271e_c00eaf39", "line": 8, "in_reply_to": "1fa4df85_ada44e09", "updated": "2020-03-31 14:46:54.000000000", "message": "Will do.", "commit_id": "3236e64f1fe67ce5bce6c6996d6341e3f1370928"}]}}, "openstack%2Fkolla-ansible~master~I9fef14643d1bcc7eee9547eb87fa1fb436d8a6b3": {"owner_id": 30523, "owner_name": "Dincer Celik", "owner_email": "hello@dincercelik.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 09:30:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 18:53:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 2, "date": "2020-04-10 01:26:18.000000000", "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, {"value": 1, "date": "2020-04-10 05:28:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28614, "name": "jacky06", "email": "zhang.min@99cloud.net", "username": "jacky06"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "009835f7487201abe44ac5eb3a2124ca13e66ecf", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9332315d", "line": 12, "range": {"start_line": 12, "start_character": 13, "end_line": 12, "end_character": 20}, "updated": "2020-01-31 13:17:10.000000000", "message": "1821592", "commit_id": "0f74ac9f6e213060fcd8e374029b3da0c19c29cf"}], "ansible/roles/neutron/defaults/main.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "7de6fae25ded5fed703b02befe3e401d82e37c68", "unresolved": false, "patch_set": 7, "id": "1fa4df85_c1b2c0e6", "line": 248, "range": {"start_line": 248, "start_character": 0, "end_line": 248, "end_character": 24}, "updated": "2020-03-02 10:47:20.000000000", "message": "These were removed", "commit_id": "8315dc0a0ec1f6ebbe02f04751e2be60b59dc65d"}], "ansible/roles/ovs-dpdk/defaults/main.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "7de6fae25ded5fed703b02befe3e401d82e37c68", "unresolved": false, "patch_set": 7, "id": "1fa4df85_81ccc86a", "line": 83, "range": {"start_line": 83, "start_character": 0, "end_line": 83, "end_character": 22}, "updated": "2020-03-02 10:47:20.000000000", "message": "Removed", "commit_id": "8315dc0a0ec1f6ebbe02f04751e2be60b59dc65d"}], "ansible/roles/prechecks/tasks/datetime_checks.yml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "5cc35be4966ebb23617629094812735a7c3cb80a", "unresolved": false, "patch_set": 15, "id": "df33271e_da1a9715", "line": 2, "range": {"start_line": 2, "start_character": 8, "end_line": 2, "end_character": 16}, "updated": "2020-04-06 18:13:59.000000000", "message": "Ensure", "commit_id": "7204fa56b2a83aa2520b9d0218802d2c2d395724"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "5cc35be4966ebb23617629094812735a7c3cb80a", "unresolved": false, "patch_set": 15, "id": "df33271e_ba17d3ed", "line": 15, "range": {"start_line": 15, "start_character": 12, "end_line": 15, "end_character": 20}, "updated": "2020-04-06 18:13:59.000000000", "message": "Ensure", "commit_id": "7204fa56b2a83aa2520b9d0218802d2c2d395724"}]}}, "openstack%2Fhorizon~master~I1f93dc2256a523fb9fc086b37eaea0b8884621ab": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-04-06 20:59:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "date": "2020-04-06 20:59:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fneutron~master~Icb32776198f9b7fc6adfa287081e3feb4297116d": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-08 21:21:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-04-08 21:21:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 1, "date": "2020-04-08 21:21:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-08 21:21:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fkeystone~master~I3c58da290d52149e307280042ed20447da4687f7": {"owner_id": 16465, "owner_name": "Kristi Nikolla", "owner_email": "knikolla@bu.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 01:59:58.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 2, "date": "2020-04-09 01:59:58.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"api-ref/source/v3-ext/federation/identity-provider/parameters.yaml": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "4682a229a0e4cda9f43c9427823702a4b7cb78a5", "unresolved": false, "patch_set": 3, "id": "df33271e_6a9e1455", "line": 40, "range": {"start_line": 40, "start_character": 5, "end_line": 40, "end_character": 30}, "updated": "2020-04-06 23:48:38.000000000", "message": "could be clearer that this is set on the backend and not configurable by an API user. Maybe:\n\n\"If left unset, the default value configured in keystone will be used, if enabled.\"", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "08434b81bd576789ecf13806cd07e66a22e3d3d2", "unresolved": false, "patch_set": 3, "id": "df33271e_f226b2ba", "line": 40, "range": {"start_line": 40, "start_character": 5, "end_line": 40, "end_character": 30}, "updated": "2020-04-06 07:50:35.000000000", "message": "ohh I see the default value for default_authorization_ttl is O mins. https://review.opendev.org/#/c/677469/10/keystone/conf/federation.py", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}], "keystone/tests/unit/test_v3_federation.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_096fa8c5", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_e97364b0", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_496890b9", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=4>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_29654ce2", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=6>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_896298d7", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "py36:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_695f540e", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "py36:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_c99940d1", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "py38:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e43d53cdab35d2810eefa82bf9b8928facccae26", "unresolved": false, "patch_set": 3, "id": "df33271e_a99e7cb5", "line": 4066, "updated": "2020-04-06 09:21:31.000000000", "message": "py38:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "1ce4b4dd76d8c855777807d7de4e1120d54cb6cf"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3be535903baac9d0b03b6946f5269dd1402b1401", "unresolved": false, "patch_set": 4, "id": "df33271e_d0f257e3", "line": 4066, "updated": "2020-04-07 21:34:16.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "91769bb6ab7296338bd262851514ac9378b99410"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3be535903baac9d0b03b6946f5269dd1402b1401", "unresolved": false, "patch_set": 4, "id": "df33271e_3002a3b5", "line": 4066, "updated": "2020-04-07 21:34:16.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "91769bb6ab7296338bd262851514ac9378b99410"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3be535903baac9d0b03b6946f5269dd1402b1401", "unresolved": false, "patch_set": 4, "id": "df33271e_10fddfb0", "line": 4066, "updated": "2020-04-07 21:34:16.000000000", "message": "py36:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "91769bb6ab7296338bd262851514ac9378b99410"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3be535903baac9d0b03b6946f5269dd1402b1401", "unresolved": false, "patch_set": 4, "id": "df33271e_702d4b45", "line": 4066, "updated": "2020-04-07 21:34:16.000000000", "message": "py36:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "91769bb6ab7296338bd262851514ac9378b99410"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "308e62d999840665d82fc5532f61b049c9d21cd4", "unresolved": false, "patch_set": 5, "id": "df33271e_70b99913", "line": 4066, "updated": "2020-04-09 06:50:38.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_da6084a8", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_ba65c0b7", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "308e62d999840665d82fc5532f61b049c9d21cd4", "unresolved": false, "patch_set": 5, "id": "df33271e_d037c5af", "line": 4066, "updated": "2020-04-09 06:50:38.000000000", "message": "cover:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_1a578ccc", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=4>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "308e62d999840665d82fc5532f61b049c9d21cd4", "unresolved": false, "patch_set": 5, "id": "df33271e_b03cc193", "line": 4066, "updated": "2020-04-09 06:50:38.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=4>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "308e62d999840665d82fc5532f61b049c9d21cd4", "unresolved": false, "patch_set": 5, "id": "df33271e_103e4d8a", "line": 4066, "updated": "2020-04-09 06:50:38.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=6>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_fa5bc8f2", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "lower-constraints:  ResourceWarning: unclosed file <_io.BufferedReader name=6>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_5a747468", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "py37:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_3a71b077", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "py37:  ResourceWarning: unclosed file <_io.BufferedReader name=7>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_9a6a7c7e", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "py38:  ResourceWarning: unclosed file <_io.BufferedReader name=3>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "42ea8cca11b66556144a248daed5e31e62e9129f", "unresolved": false, "patch_set": 5, "id": "df33271e_7a67b8b8", "line": 4066, "updated": "2020-04-09 03:54:55.000000000", "message": "py38:  ResourceWarning: unclosed file <_io.BufferedReader name=5>", "commit_id": "c18956f198f223e3a47b2377b9007649187f4fd8"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I7dcd4608d3998596c2e4da19a8eca0d48e1fa841": {"owner_id": 14250, "owner_name": "Grzegorz Grasza", "owner_email": "xek@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 13:49:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 1, "date": "2020-04-09 08:57:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 1, "date": "2020-04-09 05:39:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7414, "name": "David Wilde", "email": "dwilde@redhat.com", "username": "d34dh0r53"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/ipa/ipaservices-baremetal-ansible.yaml": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "a702fb0d22fd8583b9d3ec8b3dc2835bb9a405de", "unresolved": false, "patch_set": 3, "id": "df33271e_b7c5f73e", "line": 78, "range": {"start_line": 74, "start_character": 0, "end_line": 78, "end_character": 25}, "updated": "2020-04-08 12:35:03.000000000", "message": "total nit, but I think we need to pick a spacing and stick with it. Both the block and external_deploy_tasks are list elements with different spacing.", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}, {"author": {"_account_id": 7414, "name": "David Wilde", "email": "dwilde@redhat.com", "username": "d34dh0r53"}, "change_message_id": "ac20cbd7124f9579c9ded66ca29bd2aaeae33060", "unresolved": false, "patch_set": 3, "id": "df33271e_03b900e8", "line": 78, "range": {"start_line": 74, "start_character": 0, "end_line": 78, "end_character": 25}, "in_reply_to": "df33271e_b7c5f73e", "updated": "2020-04-08 14:49:49.000000000", "message": "Done", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "a702fb0d22fd8583b9d3ec8b3dc2835bb9a405de", "unresolved": false, "patch_set": 3, "id": "df33271e_d7dfdb09", "line": 92, "range": {"start_line": 91, "start_character": 6, "end_line": 92, "end_character": 15}, "updated": "2020-04-08 12:35:03.000000000", "message": "same as above.", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}, {"author": {"_account_id": 7414, "name": "David Wilde", "email": "dwilde@redhat.com", "username": "d34dh0r53"}, "change_message_id": "ac20cbd7124f9579c9ded66ca29bd2aaeae33060", "unresolved": false, "patch_set": 3, "id": "df33271e_43cae86d", "line": 92, "range": {"start_line": 91, "start_character": 6, "end_line": 92, "end_character": 15}, "in_reply_to": "df33271e_d7dfdb09", "updated": "2020-04-08 14:49:49.000000000", "message": "Done", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "a702fb0d22fd8583b9d3ec8b3dc2835bb9a405de", "unresolved": false, "patch_set": 3, "id": "df33271e_77d08ff8", "line": 122, "range": {"start_line": 106, "start_character": 0, "end_line": 122, "end_character": 45}, "updated": "2020-04-08 12:35:03.000000000", "message": "while this should work, is there a reason to run a block in a block?", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}, {"author": {"_account_id": 7414, "name": "David Wilde", "email": "dwilde@redhat.com", "username": "d34dh0r53"}, "change_message_id": "ac20cbd7124f9579c9ded66ca29bd2aaeae33060", "unresolved": false, "patch_set": 3, "id": "df33271e_a39e5460", "line": 122, "range": {"start_line": 106, "start_character": 0, "end_line": 122, "end_character": 45}, "in_reply_to": "df33271e_77d08ff8", "updated": "2020-04-08 14:49:49.000000000", "message": "We did this to ensure that the nested when statements were correct.  Is there a better way to do this?", "commit_id": "2557936c7e2b58612420348dc5e24e8c41cae8a3"}]}}, "openstack%2Fpython-novaclient~master~Ic8fef7ee363435e9ac728b87d494593fcc6defc0": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:02:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {"novaclient/tests/unit/v2/test_shell.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5bdf5128d9dbfb908f61db8a16f91257b981790c", "unresolved": false, "patch_set": 3, "id": "df33271e_df8fce20", "line": 4541, "range": {"start_line": 4540, "start_character": 0, "end_line": 4541, "end_character": 35}, "updated": "2020-04-09 11:18:21.000000000", "message": "Whoops, I guess this was missed in the predecessor", "commit_id": "c0dfd35a63733522839f804e56d66d18f0beea63"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "090717f5e4a7e4d97abbf93e4ed526d8def281c1", "unresolved": false, "patch_set": 3, "id": "df33271e_ff8452d5", "line": 4541, "range": {"start_line": 4540, "start_character": 0, "end_line": 4541, "end_character": 35}, "in_reply_to": "df33271e_df06ae86", "updated": "2020-04-09 11:28:27.000000000", "message": "Done", "commit_id": "c0dfd35a63733522839f804e56d66d18f0beea63"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "fab56c212561d0bbed9d555eac1b6142a21fb93d", "unresolved": false, "patch_set": 3, "id": "df33271e_df06ae86", "line": 4541, "range": {"start_line": 4540, "start_character": 0, "end_line": 4541, "end_character": 35}, "in_reply_to": "df33271e_df8fce20", "updated": "2020-04-09 11:24:04.000000000", "message": "These lines (line 4540 and 4541) should be removed.\nThese are not necessary.", "commit_id": "c0dfd35a63733522839f804e56d66d18f0beea63"}]}}, "x%2Fvmware-nsx~stable%2Ftrain~Icc6570ddf6b0dd6d096250a50c7cc49f1c0a677b": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 08:18:08.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fvmware-nsx~master~Icc6570ddf6b0dd6d096250a50c7cc49f1c0a677b": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 08:18:00.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~master~I5ad6576e0d31a29822d1c7b47751ea81828630cf": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 2, "date": "2020-04-08 13:20:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:20:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 1, "date": "2020-04-08 13:45:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 1, "date": "2020-04-08 13:20:15.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"doc/ext/extra_specs.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "f0fda80938a2cba12e16ccdaafd3d1a52c90172c", "unresolved": false, "patch_set": 7, "id": "df33271e_c20b5c27", "line": 80, "range": {"start_line": 79, "start_character": 8, "end_line": 80, "end_character": 29}, "updated": "2020-03-31 10:47:36.000000000", "message": "You print this AttributeError, this script just execute in local env?\n\nWhy not use LOG.error()?", "commit_id": "f905dcb450daa2c9c1a32007c65f74e742f617af"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "970621c0a55ceb14a60c2e070fd8b10928760c50", "unresolved": false, "patch_set": 7, "id": "df33271e_a0a0cb91", "line": 80, "range": {"start_line": 79, "start_character": 8, "end_line": 80, "end_character": 29}, "in_reply_to": "df33271e_c20b5c27", "updated": "2020-03-31 14:32:31.000000000", "message": "Good catch. I should drop this entirely, I suspect", "commit_id": "f905dcb450daa2c9c1a32007c65f74e742f617af"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "331968f54c296a1773ddda6146276060b8874881", "unresolved": false, "patch_set": 8, "id": "df33271e_056fd62a", "line": 80, "range": {"start_line": 78, "start_character": 1, "end_line": 80, "end_character": 29}, "updated": "2020-04-02 08:51:36.000000000", "message": "as per PS7 this can be dropped.", "commit_id": "b9be71c0de7fd38da382bff6e36298bcc9ecdcd3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_bae2332e", "line": 39, "range": {"start_line": 36, "start_character": 0, "end_line": 39, "end_character": 2}, "updated": "2020-04-06 18:35:46.000000000", "message": "just form a style poitn of view i really which this\n\n\ndef _format_validator_group_help(\n    group_name: str,\n    validators: ty.Dict[str, base.ExtraSpecValidator],\n):\n\nwas \n\ndef _format_validator_group_help(\n    group_name: str, validators: ty.Dict[str, base.ExtraSpecValidator],):", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "5c35d837fbeddca62e572f2421d275cdc0f6d703", "unresolved": false, "patch_set": 12, "id": "df33271e_948468b3", "line": 41, "range": {"start_line": 41, "start_character": 10, "end_line": 41, "end_character": 20}, "updated": "2020-04-06 17:06:06.000000000", "message": "is group_name also the namespace name?", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "dad9b6db1cfe2f029a914ea45f1d8812e7841e46", "unresolved": false, "patch_set": 12, "id": "df33271e_9f8593d2", "line": 41, "range": {"start_line": 41, "start_character": 10, "end_line": 41, "end_character": 20}, "in_reply_to": "df33271e_948468b3", "updated": "2020-04-07 09:09:48.000000000", "message": "> is group_name also the namespace name?\n\nYes. Don't worry about this because I've dropped the idea in a future change. I've just kept this so people can see how I built up the extension, rather than dumping a whole load of Sphinx'isms that no one bar me could grok :)", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_bac19331", "line": 41, "range": {"start_line": 41, "start_character": 10, "end_line": 41, "end_character": 20}, "in_reply_to": "df33271e_948468b3", "updated": "2020-04-06 18:35:46.000000000", "message": "i dont know that we stirctly enforce that a validtator maps to 1 and only 1 namespace but that was the intent but in practice i think it would be the same as the namespace name.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_1a135fba", "line": 42, "range": {"start_line": 42, "start_character": 9, "end_line": 42, "end_character": 31}, "updated": "2020-04-06 18:35:46.000000000", "message": "ok i know what this is doing but its a little cryptic\nand we are hardcoding the use of \"=\" as the header chariter.\n\ni would prefer if this was extracted into a named generator and the line charather was passed in as an argument that can defaultto '='\n\nbut it not obvious that this is yeliding the line that renders adds the tile markup\n\ne.g. for my_namespce results in\n\nmy_namespace\n============\n\ninstead of just\n\nmy_namespace\n\nnote to other reviews each\nyeild is a new line in the rendered rst.\ncorrect stephen? that should be called out in the doc string.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "dad9b6db1cfe2f029a914ea45f1d8812e7841e46", "unresolved": false, "patch_set": 12, "id": "df33271e_3f760708", "line": 42, "range": {"start_line": 42, "start_character": 9, "end_line": 42, "end_character": 31}, "in_reply_to": "df33271e_1a135fba", "updated": "2020-04-07 09:09:48.000000000", "message": "You can use whatever header character you want here because we're using 'nested_parse_with_titles', which chooses the appropriate \"in document\" header level.\n\nAs above, I don't think this is a big deal because all of this is dropped in two patches time", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_1ac6bf17", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 22}, "updated": "2020-04-06 18:35:46.000000000", "message": "it only become obvirous that each yeild is a seperate line here", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_faa4bbbb", "line": 52, "range": {"start_line": 50, "start_character": 0, "end_line": 52, "end_character": 2}, "updated": "2020-04-06 18:35:46.000000000", "message": "and this was\n\ndef _format_validator_help(validator: base.ExtraSpecValidator):\n\nwasting vertical space like this is irrigating to read but i also know that is a personal preference.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_9ad92ff6", "line": 59, "range": {"start_line": 59, "start_character": 3, "end_line": 59, "end_character": 35}, "updated": "2020-04-06 18:35:46.000000000", "message": "again this can be the same generator just called with a different header charater.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_bae07398", "line": 68, "range": {"start_line": 68, "start_character": 17, "end_line": 68, "end_character": 20}, "updated": "2020-04-06 18:35:46.000000000", "message": "Min\n\nallthough i would prefer if you extracted this and made it a constnat", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_7aff0b34", "line": 71, "range": {"start_line": 71, "start_character": 16, "end_line": 71, "end_character": 21}, "updated": "2020-04-06 18:35:46.000000000", "message": "same", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "172673f4ebd486d5b916197d74107ea248810030", "unresolved": false, "patch_set": 12, "id": "df33271e_fa983b1c", "line": 81, "range": {"start_line": 81, "start_character": 13, "end_line": 81, "end_character": 28}, "updated": "2020-04-06 18:35:46.000000000", "message": "also a constant.\n\nthe reason being so that we can unit test this proerly and refer to the constants although i guess we could jsut leave it as is and assert the final content is as expected comparing the full sinpit\n\nspeaking of which you should have unit tests for this function and the one above.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "29cc75f71c4f082f2b935a7aa1688a772fb49c0a", "unresolved": false, "patch_set": 13, "id": "df33271e_a4d028f9", "line": 1, "updated": "2020-04-08 08:34:43.000000000", "message": "This looks correctly rendered https://6319631a8afc7845c7f6-af2016a5632320f910deb9dcbf495ac6.ssl.cf2.rackcdn.com/710037/13/check/openstack-tox-docs/eb7469b/docs/configuration/extra-specs.html", "commit_id": "86d09128c17aa1b051e4a50930b49e5376f0c90d"}], "doc/source/configuration/extra-specs.rst": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "ecacf2c15488e10f56226de57ed99ad36142bfbc", "unresolved": false, "patch_set": 4, "id": "df33271e_0193d4fb", "line": 15, "updated": "2020-03-26 12:15:40.000000000", "message": "I'm not sure these can be solved but it would made the doc more human usable:\n* each capabilities spec's description repeats the same information can we somehow move that as a category description?\n* doc is going through all the possible os-traits, this makes the doc really looong. Could we simply link to os-traits lib?\n\nAlso I think lexicographic ordering of keys would help", "commit_id": "2072326532c112a5265a98cb5259690a7fbec9cc"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "253e0ea92f0767aa11e209e153bfcc8b53a154dd", "unresolved": false, "patch_set": 4, "id": "df33271e_c950ee61", "line": 15, "in_reply_to": "df33271e_0193d4fb", "updated": "2020-03-26 15:41:04.000000000", "message": "I can do both of those, but I think I'll do that separately when I add the cross-referencing support. For now, I want to keep this as simple as possible, if that makes sense", "commit_id": "2072326532c112a5265a98cb5259690a7fbec9cc"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84a9f5c2e8ff41709dbf1a83c372462e1d79c285", "unresolved": false, "patch_set": 4, "id": "df33271e_a9148a4f", "line": 15, "in_reply_to": "df33271e_c950ee61", "updated": "2020-03-26 15:53:16.000000000", "message": "Sure. The current doc already better than what we had as it is complete.", "commit_id": "2072326532c112a5265a98cb5259690a7fbec9cc"}], "doc/source/configuration/index.rst": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "95765dc539f5dbb45289535462517c642bad6a37", "unresolved": false, "patch_set": 12, "id": "df33271e_9a0c8f43", "line": 93, "range": {"start_line": 79, "start_character": 1, "end_line": 93, "end_character": 14}, "updated": "2020-04-06 18:43:40.000000000", "message": "im not sure if this is the correct place\n\nwe like to the flavor docs under user form the root of the docs page anbd these docs are not visable there.\n\nso im not suer i would find them easily.\n\nalso the configuration docs are not normlay related to flavors which are created at runtime they related to config files so i dont think this fits this section of the docs very well.", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "dad9b6db1cfe2f029a914ea45f1d8812e7841e46", "unresolved": false, "patch_set": 12, "id": "df33271e_bf9e9704", "line": 93, "range": {"start_line": 79, "start_character": 1, "end_line": 93, "end_character": 14}, "in_reply_to": "df33271e_9a0c8f43", "updated": "2020-04-07 09:09:48.000000000", "message": "This is the reference for the extra specs. I plan to link to these from e.g. the '/user/flavors' doc once I have the cross-referencing in place (two patches from now)", "commit_id": "b3a055538188817cd468f493ffa2909c163b47a3"}], "nova/api/validation/extra_specs/capabilities.py": [{"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "29cc75f71c4f082f2b935a7aa1688a772fb49c0a", "unresolved": false, "patch_set": 13, "id": "df33271e_c4ebacd9", "line": 52, "updated": "2020-04-08 08:34:43.000000000", "message": "well, looks a nit to move the above but okay.", "commit_id": "86d09128c17aa1b051e4a50930b49e5376f0c90d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4d40ba33fba3ae4b25e5e6cbb571114f505b1b2b", "unresolved": false, "patch_set": 13, "id": "df33271e_cf7bc5bb", "line": 52, "in_reply_to": "df33271e_c4ebacd9", "updated": "2020-04-08 09:26:29.000000000", "message": "I needed that to avoid dumping a massive amount of text out for each one of these capabilities (there are many of them)", "commit_id": "86d09128c17aa1b051e4a50930b49e5376f0c90d"}]}}, "openstack%2Fnova~master~Ie70a0aef4f6647510750b7e0bdd2f040331b79e8": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 2, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 1, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 1, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 1, "date": "2020-04-08 13:19:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "5b90122bb66d537284efa35b8a5b5724ed470e40", "unresolved": false, "patch_set": 2, "id": "df33271e_84a2f1ac", "line": 9, "range": {"start_line": 9, "start_character": 40, "end_line": 9, "end_character": 43}, "updated": "2020-03-31 20:47:31.000000000", "message": "There is no [1] anymore!", "commit_id": "9ca6f98d82625b8f836e7be5ab0262011d063646"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "46d244ee0666f92ff1fa61381af1c8a80887f9b4", "unresolved": false, "patch_set": 2, "id": "df33271e_8e9dc3bd", "line": 9, "range": {"start_line": 9, "start_character": 40, "end_line": 9, "end_character": 43}, "in_reply_to": "df33271e_84a2f1ac", "updated": "2020-04-02 10:47:30.000000000", "message": "Done", "commit_id": "9ca6f98d82625b8f836e7be5ab0262011d063646"}], "nova/api/validation/extra_specs/accel.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "037dc6a2415c9a596b097b4f0f2b03c019bdfd74", "unresolved": false, "patch_set": 1, "id": "df33271e_c541a13b", "line": 46, "updated": "2020-03-31 14:01:45.000000000", "message": "I might be mistaken but I think we only support adding device_profile to the flavor extra_spec. https://review.opendev.org/#/c/631243/63/nova/compute/api.py@1217", "commit_id": "22d480c2a74cdbf67d0d9f300e462f7e8ce3d0b4"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "3a92a21e7217047e7a98b304f401a903b40ec854", "unresolved": false, "patch_set": 1, "id": "df33271e_fba8c620", "line": 46, "in_reply_to": "df33271e_c541a13b", "updated": "2020-03-31 15:12:06.000000000", "message": "Yes. These keys are used by Cyborg but not exposed to Nova. The flavor extra specs should only have 'accel:device_profile', with the name of the dp as its value. That dp name is used by Nova to look up the dp in Cyborg but then Nova looks only at the dp fields that match the extra specs syntax: resources/traits [1].\n\nSo, we don't need/want to support other 'accel:' fields in Nova.\n\n[1] https://review.opendev.org/#/c/631243/63/nova/accelerator/cyborg.py@138", "commit_id": "22d480c2a74cdbf67d0d9f300e462f7e8ce3d0b4"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "5b90122bb66d537284efa35b8a5b5724ed470e40", "unresolved": false, "patch_set": 2, "id": "df33271e_c4b35909", "line": 29, "range": {"start_line": 29, "start_character": 28, "end_line": 29, "end_character": 29}, "updated": "2020-03-31 20:47:31.000000000", "message": "Nit: \"The\"", "commit_id": "9ca6f98d82625b8f836e7be5ab0262011d063646"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "46d244ee0666f92ff1fa61381af1c8a80887f9b4", "unresolved": false, "patch_set": 2, "id": "df33271e_8e3943a5", "line": 29, "range": {"start_line": 29, "start_character": 28, "end_line": 29, "end_character": 29}, "in_reply_to": "df33271e_c4b35909", "updated": "2020-04-02 10:47:30.000000000", "message": "I'm not referring to a specific device profile but rather describing the general type of the value so the indefinite article is correct here, IMO", "commit_id": "9ca6f98d82625b8f836e7be5ab0262011d063646"}]}}, "openstack%2Fpaunch~master~I771d086cc75695d7ce2db35c852bb35bb4c59708": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:43:20.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-09 16:34:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-09 16:19:30.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~If199f6e2841f8c7bbfe1fb56538b0283ac04681c": {"owner_id": 11952, "owner_name": "Flavio Fernandes", "owner_email": "flavio@flaviof.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 13:40:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-04-09 18:19:35.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 11082, "name": "Kamil Sambor", "email": "ksambor@redhat.com", "username": "ksambor"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "9e04ed97446e14d27ae68d617b8a5e8ee9ea618b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1f2a02e5", "line": 7, "range": {"start_line": 7, "start_character": 19, "end_line": 7, "end_character": 30}, "updated": "2020-02-13 17:03:12.000000000", "message": "This isn't connecting the Octavia API to OVN NB, it is connecting the OVN provider for Octavia to the OVN NB.\nIt's likely even the OVN provider will not run in the context of the Octavia API.", "commit_id": "445515786b85e1c86f98a5bc7978c5f7005aab7c"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "35bfe1d8a14beaf846c8f1c4b777e0f72295f5b4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_34911c51", "line": 7, "range": {"start_line": 7, "start_character": 19, "end_line": 7, "end_character": 30}, "in_reply_to": "3fa7e38b_1f2a02e5", "updated": "2020-02-13 22:25:07.000000000", "message": "ack. My bad. I will make sure to get this right.", "commit_id": "445515786b85e1c86f98a5bc7978c5f7005aab7c"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "9e04ed97446e14d27ae68d617b8a5e8ee9ea618b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_bf05ee69", "line": 10, "range": {"start_line": 10, "start_character": 8, "end_line": 10, "end_character": 19}, "updated": "2020-02-13 17:03:12.000000000", "message": "Same", "commit_id": "445515786b85e1c86f98a5bc7978c5f7005aab7c"}], "deployment/octavia/octavia-api-container-puppet.yaml": [{"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "82c4a34b94c077d6d6170ccb95bfc0c53a8af59a", "unresolved": false, "patch_set": 7, "id": "1fa4df85_b05aba80", "line": 283, "updated": "2020-03-12 21:23:15.000000000", "message": "IIUC these go in the driver agent container, not the API - so just move these down to 301.", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "3b44b60b36f3273a35b3612d1ea3e31081911aa2", "unresolved": false, "patch_set": 7, "id": "1fa4df85_dc3e6dd9", "line": 283, "in_reply_to": "1fa4df85_b05aba80", "updated": "2020-03-13 01:25:11.000000000", "message": "Done", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "82c4a34b94c077d6d6170ccb95bfc0c53a8af59a", "unresolved": false, "patch_set": 7, "id": "1fa4df85_90f53e86", "line": 315, "updated": "2020-03-12 21:23:15.000000000", "message": "I'm not sure about this block ... what the appropriate values are and what the service name should be. We should ask Kamil. I think also that this is meant to be conditional on TLS *and* OVN in the mechanism drivers. The neutron api template has an example of how kamil handled this .. .probably should pull in ApacheBase's metadata_settings as well.", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "3b44b60b36f3273a35b3612d1ea3e31081911aa2", "unresolved": false, "patch_set": 7, "id": "1fa4df85_7c23b9bf", "line": 315, "in_reply_to": "1fa4df85_90f53e86", "updated": "2020-03-13 01:25:11.000000000", "message": "Ack. Will follow though with Kamil and add ovn_and_tls.", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "82c4a34b94c077d6d6170ccb95bfc0c53a8af59a", "unresolved": false, "patch_set": 7, "id": "1fa4df85_9023fe05", "line": 338, "updated": "2020-03-12 21:23:15.000000000", "message": "probably should be dependent on tls and OVN and did you mean for these to be defined in the driver agent service? This is meant only to create subdirectories.", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "3b44b60b36f3273a35b3612d1ea3e31081911aa2", "unresolved": false, "patch_set": 7, "id": "1fa4df85_5c559d1c", "line": 338, "in_reply_to": "1fa4df85_9023fe05", "updated": "2020-03-13 01:25:11.000000000", "message": "Hmm... I think this is how files are mapped in the container, so not dirs only. Will explore if this should be moved to a better place.", "commit_id": "75a3786efc22188d64e84582def267633c197f71"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "8c582a6774633f8257285e4a3cf544a751a43fb0", "unresolved": false, "patch_set": 17, "id": "1fa4df85_bd9d6658", "line": 210, "range": {"start_line": 210, "start_character": 71, "end_line": 210, "end_character": 77}, "updated": "2020-03-18 13:23:29.000000000", "message": "ditto. Keep it lowercase.", "commit_id": "8b4b5b9384238a6518428134f755996450af12ba"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "8c582a6774633f8257285e4a3cf544a751a43fb0", "unresolved": false, "patch_set": 17, "id": "1fa4df85_9da2ea99", "line": 210, "range": {"start_line": 210, "start_character": 30, "end_line": 210, "end_character": 41}, "updated": "2020-03-18 13:23:29.000000000", "message": "typo. Should be \"Deprecated\". Not fixing this will have have a negative impact in one of the Tempest tests (not ran in upstream CI).", "commit_id": "8b4b5b9384238a6518428134f755996450af12ba"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "0da5506e6b8f8417866470fa2cd7252c2acb5830", "unresolved": false, "patch_set": 17, "id": "1fa4df85_ddb70286", "line": 210, "range": {"start_line": 210, "start_character": 30, "end_line": 210, "end_character": 41}, "in_reply_to": "1fa4df85_9da2ea99", "updated": "2020-03-18 13:43:13.000000000", "message": "Done", "commit_id": "8b4b5b9384238a6518428134f755996450af12ba"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "0da5506e6b8f8417866470fa2cd7252c2acb5830", "unresolved": false, "patch_set": 17, "id": "1fa4df85_5d07921d", "line": 210, "range": {"start_line": 210, "start_character": 71, "end_line": 210, "end_character": 77}, "in_reply_to": "1fa4df85_bd9d6658", "updated": "2020-03-18 13:43:13.000000000", "message": "Done", "commit_id": "8b4b5b9384238a6518428134f755996450af12ba"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "29d458c6a84137dd0e07398b98f595eb5ddbf963", "unresolved": false, "patch_set": 21, "id": "1fa4df85_b28019f9", "line": 109, "range": {"start_line": 109, "start_character": 2, "end_line": 109, "end_character": 23}, "updated": "2020-03-19 17:12:43.000000000", "message": "The name is a bit misleading as the type is for the OVN provider driver only. Or is it that the parameter can hold multiple types?", "commit_id": "f0a08ac636b4f30a2e584b20fa7e516d75ba90f4"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "c63c2b582f0702ab9dbc5ba81a550acb924a8978", "unresolved": false, "patch_set": 21, "id": "1fa4df85_fa3c1be2", "line": 109, "range": {"start_line": 109, "start_character": 2, "end_line": 109, "end_character": 23}, "in_reply_to": "1fa4df85_b28019f9", "updated": "2020-03-20 11:59:48.000000000", "message": "It will be - atm we only have the one provider. Eventually this template will be something that allows aggregating multiple types. right now the source is ovn specific for the sake of expediency, but when we work through the details of how to allow providing multiple types, this will point to something else which will be responsible for pulling in provider specific configs.", "commit_id": "f0a08ac636b4f30a2e584b20fa7e516d75ba90f4"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "1bf63f4b0d0a746d914c4703b3938e0c4eeb7433", "unresolved": false, "patch_set": 21, "id": "1fa4df85_4e7a54f1", "line": 109, "range": {"start_line": 109, "start_character": 2, "end_line": 109, "end_character": 23}, "in_reply_to": "1fa4df85_fa3c1be2", "updated": "2020-03-20 12:52:09.000000000", "message": "Makes sense. Thank you!", "commit_id": "f0a08ac636b4f30a2e584b20fa7e516d75ba90f4"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "0b4c91f68142dda12bd6b86df2a9eb8e876cd7a6", "unresolved": false, "patch_set": 29, "id": "df33271e_3bf9f24c", "line": 271, "range": {"start_line": 271, "start_character": 0, "end_line": 271, "end_character": 257}, "updated": "2020-03-25 20:29:53.000000000", "message": "we actually need --config-dir /etc/octavia/conf.d to be provided as part of /var/lib/kolla/config_files/octavia_api.json\nTrouble is, we are not clear yet how that would work for wsgi... WIP", "commit_id": "91fd2c804459c904e69e4a133bd2628d179d060d"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "5444b73a68625b855ab250bb7485e852c61beefa", "unresolved": false, "patch_set": 39, "id": "df33271e_76838805", "line": 277, "updated": "2020-04-07 19:43:05.000000000", "message": "Let's not do this in this patch. After discussing with Carlos, the feeling is that a list of config files would be better, not just a blanket config dir. We can modify this template later when we are ready to use a new configuration file.", "commit_id": "bd9d17e66ab38e8deb3ad4f817f062b79633d5d4"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "30fb667f63706568d2d91976fe2e9543c1664f37", "unresolved": false, "patch_set": 39, "id": "df33271e_06548520", "line": 277, "in_reply_to": "df33271e_76838805", "updated": "2020-04-08 00:09:00.000000000", "message": "Done", "commit_id": "bd9d17e66ab38e8deb3ad4f817f062b79633d5d4"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "514cea50f8fac4e1a36bd25150690baca12e657e", "unresolved": false, "patch_set": 41, "id": "df33271e_2f3b3ec8", "line": 224, "updated": "2020-04-08 17:20:38.000000000", "message": "Is the if clause still needed?", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "f9acc7d7825e8830ab85e49f278b980d90838787", "unresolved": false, "patch_set": 41, "id": "df33271e_f453e614", "line": 224, "in_reply_to": "df33271e_2f3b3ec8", "updated": "2020-04-08 19:24:28.000000000", "message": "it is. read it as \n\nif is_ovn_in_neutron_mechanism_driver AND enable_driver_agent  then\n    {get_attr: [OctaviaProviderConfig, role_data, provider_driver_labels]}\nelse\n    []", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "104cf1fa3159f7f841c3a6dfa8a48434e49afeb5", "unresolved": false, "patch_set": 41, "id": "df33271e_298168fc", "line": 224, "in_reply_to": "df33271e_f453e614", "updated": "2020-04-09 09:49:02.000000000", "message": "Right. What I am thinking is if we can unconditionally include the \"get_attr\" in the list. Provider drivers should have logic to determine if they should be enabled or not. Like there is \"provider_driver_labels\" in https://review.opendev.org/#/c/707695/41/deployment/octavia/providers/ovn-provider-config.yaml@91 that would be nice to be appended to this list.\n\nAnyway, this would be more of an improvement so I'm okay as is now.", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "514cea50f8fac4e1a36bd25150690baca12e657e", "unresolved": false, "patch_set": 41, "id": "df33271e_ac33dc12", "line": 258, "updated": "2020-04-08 17:20:38.000000000", "message": "Not sure I understand why list_contact is required now. Is it that it was missing even before this patch? I'll never fully understand YAML/THT syntax :)", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7c143a0b9b51e5948310dcb449dbbe4da5a08acd", "unresolved": false, "patch_set": 41, "id": "df33271e_afc0eee1", "line": 258, "in_reply_to": "df33271e_ac33dc12", "updated": "2020-04-08 18:01:26.000000000", "message": "Because it's inheriting a list from the OctaviaProviderConfig. The only way it wouldn't require a list_concat is if the kolla_config_files was a single dict rather than a list", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "104cf1fa3159f7f841c3a6dfa8a48434e49afeb5", "unresolved": false, "patch_set": 41, "id": "df33271e_e92e6041", "line": 258, "in_reply_to": "df33271e_afc0eee1", "updated": "2020-04-09 09:49:02.000000000", "message": "Gotcha! Thanks, Alex!", "commit_id": "617be2e5c3d8a13777cdb523f71d41aefa80f6f3"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "595be09f5ed62440fd581ade1c6d42a2676be025", "unresolved": false, "patch_set": 42, "id": "df33271e_1f85b5cf", "line": 222, "updated": "2020-04-09 12:20:06.000000000", "message": "There shouldn't be any need for is_ovn_neutron_mechanism_driver in this file anywhere now. You can actually get rid of the \"if\" altogether and concat the contents of provider_driver_labels.", "commit_id": "7aa0c00056fcdd522c0a872f3e5baa629d1efae1"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "c992ecc1e2c08cecfdbe6b359f7cd35cdc4bf027", "unresolved": false, "patch_set": 42, "id": "df33271e_5f745dcf", "line": 222, "in_reply_to": "df33271e_1f85b5cf", "updated": "2020-04-09 12:33:15.000000000", "message": "Ack, but we still need enable_driver_agent\nI will remove the \"and\" and make this easier to the human eye.", "commit_id": "7aa0c00056fcdd522c0a872f3e5baa629d1efae1"}], "deployment/octavia/providers/ovn-provider-config.yaml": [{"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "564ffe26adcdf1e0299e5b9c857027422d9d7609", "unresolved": false, "patch_set": 21, "id": "df33271e_6413240f", "line": 67, "range": {"start_line": 67, "start_character": 92, "end_line": 67, "end_character": 109}, "updated": "2020-03-20 15:25:13.000000000", "message": "Not in the parameter list. This will fail during deployment.", "commit_id": "f0a08ac636b4f30a2e584b20fa7e516d75ba90f4"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "3f8d44b7038f84d5585e33723b955de51180245b", "unresolved": false, "patch_set": 21, "id": "df33271e_24bc7cba", "line": 67, "range": {"start_line": 67, "start_character": 92, "end_line": 67, "end_character": 109}, "in_reply_to": "df33271e_6413240f", "updated": "2020-03-20 15:35:15.000000000", "message": "Nice catch. Done.", "commit_id": "f0a08ac636b4f30a2e584b20fa7e516d75ba90f4"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "6949fa8c75de0fb8c518aed9003f81877d3d9efe", "unresolved": false, "patch_set": 24, "id": "df33271e_5f45e2b2", "line": 94, "updated": "2020-03-24 13:11:34.000000000", "message": "this should return a list - it should be \n- ['ovn: Octavia OVN driver.'] \n\nor\n\n- - 'ovn: Octavia OVN driver.'", "commit_id": "aa28cb8ece2da64d09f58276b714c6c20cdf45cb"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "72765d9719c4738b45e228d9238d8324b2479d0c", "unresolved": false, "patch_set": 24, "id": "df33271e_dfa3b24e", "line": 94, "in_reply_to": "df33271e_5f45e2b2", "updated": "2020-03-24 13:21:09.000000000", "message": "Done", "commit_id": "aa28cb8ece2da64d09f58276b714c6c20cdf45cb"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "681556f86ba455a2885775f22de470c62ef38343", "unresolved": false, "patch_set": 27, "id": "df33271e_25d2845d", "line": 104, "updated": "2020-03-24 20:51:28.000000000", "message": "I *think* this should be ovn_octavia if you want it to work properly with certmonger.", "commit_id": "efb5749cd2cac44147594068cfc965682ccbc0cf"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "f708091268e9bb3b49f41a11c723b1a7d24c9bf6", "unresolved": false, "patch_set": 27, "id": "df33271e_0567804f", "line": 104, "in_reply_to": "df33271e_25d2845d", "updated": "2020-03-24 21:24:49.000000000", "message": "Done", "commit_id": "efb5749cd2cac44147594068cfc965682ccbc0cf"}]}}, "openstack%2Fpuppet-tripleo~master~Id3425badc492ea07e34b99629dec771cf483cb5d": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-09 20:40:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-07 20:38:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~Ic3d8fb3e05cb74cd68207c9769d2fbf02653de98": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:39:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-07 20:40:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Id081f049bca6c961ad2ff649ac357cea8d552739": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:42:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 2, "date": "2020-04-09 11:53:30.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ib636dc528687dc67fae85c27a1571f51ae7332e7": {"owner_id": 7414, "owner_name": "David Wilde", "owner_email": "dwilde@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 19:16:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 1, "date": "2020-04-09 16:52:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-09 19:02:44.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Ib0bfc3e9009357f0aed28c0a10b927c5ca2e53a7": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:46:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 1, "date": "2020-04-09 16:54:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/memcached/memcached-container-puppet.yaml": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "b80ff3fc60701f47389110b4d809502a576f2a4a", "unresolved": false, "patch_set": 5, "id": "df33271e_e91ae07a", "line": 183, "updated": "2020-04-09 10:01:45.000000000", "message": "missing the logs bind-mount?", "commit_id": "ae69fb2fd567fe67b80986e026ddf2367e745d84"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "d4411e834fd06682b3f8fc668939a46ba0c386a4", "unresolved": false, "patch_set": 5, "id": "df33271e_c951dc38", "line": 191, "updated": "2020-04-09 09:59:20.000000000", "message": "missing mode :)", "commit_id": "ae69fb2fd567fe67b80986e026ddf2367e745d84"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I69a1d1059bdfc0b99cf6a4a3dc78a1eb9a43ad0b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 11:53:08.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I41681f90f70fa0dffe4abbe3d6d5c48015589f66": {"owner_id": 7414, "owner_name": "David Wilde", "owner_email": "dwilde@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 13:49:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 1, "date": "2020-04-09 07:13:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 2, "date": "2020-04-09 14:28:38.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-tackerclient~master~I2bac92581bb4be3f138107d108ecf9b38605f5cc": {"owner_id": 29236, "owner_name": "Shubham Potale", "owner_email": "Shubham.Potale@nttdata.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27180, "name": "Keiko Kuriu", "email": "kuriu.keiko@gmail.com", "username": "keiko-k"}, {"value": 0, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 2, "date": "2020-04-10 07:10:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 1, "date": "2020-04-10 00:44:56.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 0, "_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, {"value": 1, "date": "2020-04-10 01:31:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31648, "name": "Prashant Bhole", "email": "prashant.bhole@nttdata.com", "username": "pbhole"}, {"value": 1, "date": "2020-04-10 06:11:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"tackerclient/tests/unit/osc/v1/test_vnf_package.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "9b8017ece121ecbcb0d87e12d0c14a508e885f9e", "unresolved": false, "patch_set": 3, "id": "df33271e_b2edd3b8", "line": 60, "updated": "2020-04-09 23:46:40.000000000", "message": "pep8: E128 continuation line under-indented for visual indent", "commit_id": "e238f6d79de65b5473c11784fb61cac84d8f5ef5"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "9b8017ece121ecbcb0d87e12d0c14a508e885f9e", "unresolved": false, "patch_set": 3, "id": "df33271e_122c7f00", "line": 61, "updated": "2020-04-09 23:46:40.000000000", "message": "pep8: E128 continuation line under-indented for visual indent", "commit_id": "e238f6d79de65b5473c11784fb61cac84d8f5ef5"}]}}, "x%2Fnetworking-opencontrail~stable%2Ftrain~I1de24a8cac948177646e7e9c54e9bc8c9218c273": {"owner_id": 31444, "owner_name": "Micha\u0142 Kowieski", "owner_email": "michal.kowieski@codilime.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29784, "name": "Adrian Szczepa\u0144ski", "email": "aszczepanski@juniper.net", "username": "adrian.szczepanski"}, {"value": 0, "_account_id": 29780, "name": "Krzysztof Gromadzki", "email": "krzysztof.gromadzki@codilime.com", "username": "kgromadzki"}, {"value": 2, "date": "2020-04-10 06:05:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}], "comments": {"networking_opencontrail/repository/utils/client.py": [{"author": {"_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}, "change_message_id": "d955e6617c02d7b425cf8674f572c5f5ee707623", "unresolved": false, "patch_set": 4, "id": "df33271e_2406af1d", "line": 148, "range": {"start_line": 148, "start_character": 13, "end_line": 148, "end_character": 15}, "updated": "2020-04-09 10:16:52.000000000", "message": "Same as pi, those two letter shortcuts seem weird", "commit_id": "7f2446fe4add3f5e36f88b2578aecedc023ed4a3"}], "networking_opencontrail/repository/utils/utils.py": [{"author": {"_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}, "change_message_id": "d955e6617c02d7b425cf8674f572c5f5ee707623", "unresolved": false, "patch_set": 4, "id": "df33271e_a460ffd0", "line": 102, "range": {"start_line": 99, "start_character": 4, "end_line": 102, "end_character": 32}, "updated": "2020-04-09 10:16:52.000000000", "message": "maybe estract function?", "commit_id": "7f2446fe4add3f5e36f88b2578aecedc023ed4a3"}], "networking_opencontrail/resources/vmi.py": [{"author": {"_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}, "change_message_id": "7317be2b06d41e3016c185ef48b958cdcb87f6c7", "unresolved": false, "patch_set": 3, "id": "df33271e_beeb19da", "line": 60, "range": {"start_line": 60, "start_character": 19, "end_line": 60, "end_character": 28}, "updated": "2020-04-08 06:25:04.000000000", "message": "Why this?", "commit_id": "dc9533395f303c8b1ebb8353df232fd162f404ef"}]}}, "openstack%2Ftripleo-common~master~I7d2fce9f07c98b1770c01cacbae2d17b8e143b3b": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": -1, "date": "2020-04-02 13:26:34.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4571, "name": "Steve Baker", "email": "sbaker@redhat.com", "username": "steve-stevebaker"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Ftripleo-common~master~I01de538347c6cbbd18efe790031d6a4188520aa5": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-04-02 17:08:17.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4571, "name": "Steve Baker", "email": "sbaker@redhat.com", "username": "steve-stevebaker"}, {"value": -1, "date": "2020-04-03 03:53:19.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 1, "date": "2020-04-02 15:54:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Fnova~master~Ib64a1348cce1dca995746214616c4f33d9d664bd": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 12:47:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "51c9a40daa1ae1a8ca409a4eb4262ecd7de46faa", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ecd9bf80", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 45}, "updated": "2020-02-10 20:02:31.000000000", "message": "this is merged, can be removed next time you respin", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "958b04242acf4dab53565be5a21d435c75bad542", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a42433c5", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 45}, "in_reply_to": "3fa7e38b_6c9aaf12", "updated": "2020-02-11 13:14:09.000000000", "message": "Done", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "48940db7093c337bb949b1616f2e60503466b1b0", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6c9aaf12", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 45}, "in_reply_to": "3fa7e38b_ecd9bf80", "updated": "2020-02-10 20:59:29.000000000", "message": "oh thats for dataclasses support.", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "73dcae9f6c648d0e1558a5357ff935b1b00fabb0", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_84aed02e", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 49}, "updated": "2020-02-11 18:17:09.000000000", "message": "Just got new ones to add now :) Existing ones are all green", "commit_id": "e20a450fd85eccc8d3ae7754c34e9daa19f34977"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_694bd4af", "line": 13, "updated": "2020-04-06 10:07:56.000000000", "message": "Here, you should at least explain why you now want to ignore H238 PEP8 check.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2071fce7d534bdf578859170ca3118dc7babef23", "unresolved": false, "patch_set": 21, "id": "df33271e_d1e0c299", "line": 13, "in_reply_to": "df33271e_694bd4af", "updated": "2020-04-06 16:19:40.000000000", "message": "Done", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "92feb64157ecaecc371a208c5d17632304737a39", "unresolved": false, "patch_set": 22, "id": "df33271e_b49215f5", "line": 23, "updated": "2020-04-08 11:59:08.000000000", "message": "I'm not sure we need this now as tempest does not use extra speces from known namespaces", "commit_id": "64ea3c4a1685d5cc124243a50793425002061c09"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "29f2de90d88e00819537326002900618d8abfdab", "unresolved": false, "patch_set": 22, "id": "df33271e_173e63d9", "line": 23, "in_reply_to": "df33271e_b49215f5", "updated": "2020-04-08 12:47:23.000000000", "message": "Done", "commit_id": "64ea3c4a1685d5cc124243a50793425002061c09"}], "doc/source/user/filter-scheduler.rst": [{"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_49e5300a", "line": 379, "range": {"start_line": 379, "start_character": 33, "end_line": 379, "end_character": 49}, "updated": "2020-04-06 10:07:56.000000000", "message": "just a nit : a \"nova controller\" is not something supported by the nova project, just by downstream products or operators.\nSince you provided the needed services using the above, I'm fine.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_29cb8c72", "line": 389, "updated": "2020-04-06 10:07:56.000000000", "message": "nit: not sure why you wanted to change the package name but okay.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "2d48338dfece22f781c1458428ac7014a7d55d0a", "unresolved": false, "patch_set": 21, "id": "df33271e_9c3ad895", "line": 389, "in_reply_to": "df33271e_29cb8c72", "updated": "2020-04-06 12:29:32.000000000", "message": "+1", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9415337863ccabbb1d413aea4d9a1824b1e6a075", "unresolved": false, "patch_set": 21, "id": "df33271e_1a6c0807", "line": 455, "range": {"start_line": 440, "start_character": 0, "end_line": 455, "end_character": 5}, "updated": "2020-04-06 12:34:53.000000000", "message": "we should probably prefer doing this the setup.cfg way\n\nit is the more stable interface for doing this.\nsetup.py has brokent the compatiblity of the setup function before so i dont really like using it if it can be done via setup.cfg", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_09b5e8ee", "line": 456, "updated": "2020-04-06 10:07:56.000000000", "message": "thanks for this", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b2844b816f8315997d2812847dd9eae444cc5c44", "unresolved": false, "patch_set": 22, "id": "df33271e_5f983969", "line": 455, "range": {"start_line": 437, "start_character": 1, "end_line": 455, "end_character": 5}, "updated": "2020-04-06 17:35:23.000000000", "message": "nit if you have time in a follow up can you show how to do this with setup.cfg instead or add it as a second example.", "commit_id": "64ea3c4a1685d5cc124243a50793425002061c09"}], "nova/api/openstack/compute/flavors_extraspecs.py": [{"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_a98ddc32", "line": 37, "range": {"start_line": 37, "start_character": 39, "end_line": 37, "end_character": 43}, "updated": "2020-04-06 10:07:56.000000000", "message": "i don't see where and why you need to use this argument ?\n\nLATER : Ahah, I see, you need it in a later change (see below). It's a bit confusing but OK.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_691d94bc", "line": 39, "updated": "2020-04-06 10:07:56.000000000", "message": "NOTE(sbauza): For the moment, this change won't support the validation until https://review.opendev.org/#/c/708436/16/nova/api/openstack/compute/flavors_extraspecs.py in a later change", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_29d6ecc4", "line": 75, "updated": "2020-04-06 10:07:56.000000000", "message": "changing it seems a bit premature, but that's just a stylistic nit.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}], "nova/api/validation/extra_specs/base.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_21c30e3b", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 27}, "updated": "2020-01-29 14:09:03.000000000", "message": "Isn't it\n\n    class ExtraSpecValidator:", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f9460a22", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 27}, "in_reply_to": "3fa7e38b_21c30e3b", "updated": "2020-01-29 14:55:06.000000000", "message": "Oh, so it is. Still getting used to this Python 3 stuff :D", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d8a9bd26", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 27}, "in_reply_to": "3fa7e38b_d93b0e33", "updated": "2020-01-30 09:24:02.000000000", "message": "yeah either ExtraSpecValidator(object): or ExtraSpecValidator:", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d93b0e33", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 27}, "in_reply_to": "3fa7e38b_f9460a22", "updated": "2020-01-29 15:02:03.000000000", "message": "well technically if this was python 2 you should have\n ExtraSpecValidator(object) right to make it inheit form the \"new\" type objects\n\nin python3 only \nclass ExtraSpecValidator: might be fine i have not used data classes so dont know what that class decorator changes.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_134f366a", "line": 28, "updated": "2020-01-30 09:24:02.000000000", "message": "An unrelated observation: dataclasses with defaulted fields does not support inheritance. I learned that the hard way recently. https://gist.github.com/gibizer/af7fb55e2f34708c400d96bb9a65368d", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e1b896c1", "line": 34, "updated": "2020-01-29 14:09:03.000000000", "message": "This feels like a property with lazy loading behavior that does some level of validation as well during the load. This feels overly complex to me. I would do the initialization of the object with __init__ instead", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_41ebaa0f", "line": 43, "range": {"start_line": 43, "start_character": 30, "end_line": 43, "end_character": 34}, "updated": "2020-01-29 14:09:03.000000000", "message": "Doe we need both double blackslash and raw string? I think r'\\d+' or '\\\\d+' is what you want", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b9fad2b7", "line": 43, "range": {"start_line": 43, "start_character": 30, "end_line": 43, "end_character": 34}, "in_reply_to": "3fa7e38b_41ebaa0f", "updated": "2020-01-29 14:55:06.000000000", "message": "I thought so too, but Python told me I was wrong and docs [1] pointed me to this. It's the use of re.sub below that's problematic.\n\n[1] https://bugs.python.org/issue34304", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f86b59eb", "line": 43, "range": {"start_line": 43, "start_character": 30, "end_line": 43, "end_character": 34}, "in_reply_to": "3fa7e38b_b9fad2b7", "updated": "2020-01-30 09:24:02.000000000", "message": "Python 3.7.6 (default, Jan 19 2020, 22:34:52) \n[GCC 9.2.1 20200117] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import re\n>>> re.match(r'\\d+', '123')\n<re.Match object; span=(0, 3), match='123'>\n>>> re.match(r'\\\\d+', '123')\n>>> re.sub(r'\\\\d+', '!', '123')\n'123'\n>>> re.sub(r'\\d+', '!', '123')\n'!'\n>>>\n\nIsn't difference that you copy this pattern into and f' string? I'm puzzled but I accept that if it works like this then it works like this :)", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2b763962afdd88ac49be18c878bc1a060cc425ff", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_04366750", "line": 43, "range": {"start_line": 43, "start_character": 30, "end_line": 43, "end_character": 34}, "in_reply_to": "3fa7e38b_f86b59eb", "updated": "2020-02-11 11:58:18.000000000", "message": "Turns out this worked in Python 3.6 but not in 3.7 or 3.8 (hence the currently failing unit tests). I switched to 'string.replace' since I didn't need the regex magic 're.sub' provided, which lets me drop this double escaping madness", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_81ec4292", "line": 51, "range": {"start_line": 50, "start_character": 1, "end_line": 51, "end_character": 79}, "updated": "2020-01-29 14:09:03.000000000", "message": "I'm lost here, I guess I need to play with this code to get it.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b3118253", "line": 51, "range": {"start_line": 50, "start_character": 1, "end_line": 51, "end_character": 79}, "in_reply_to": "3fa7e38b_79b8dae6", "updated": "2020-01-30 09:24:02.000000000", "message": "thanks. so we add a named group for each substitutable param.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_79b8dae6", "line": 51, "range": {"start_line": 50, "start_character": 1, "end_line": 51, "end_character": 79}, "in_reply_to": "3fa7e38b_81ec4292", "updated": "2020-01-29 14:55:06.000000000", "message": "I clearly need comments but, in summary, given:\n\n    base.ExtraSpecValidator(\n        name='hw:numa_cpu.{id}',\n        ...\n        parameters=[\n            {\n                'name': 'id',\n                'type': int,\n                'description': 'The ID of the **guest** NUMA node.',\n            },\n        ],\n        ...\n    ),\n\nThis will transform 'hw:numa_cpu.{id}' to 'hw:numa_cpu.(?P<id>\\d+)' by substituting '{id}' with '(?P<id>\\d+)'. Putting this complexity here seemed better than having to write a regex for every extra spec name and value definition.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_21fb0e48", "line": 83, "range": {"start_line": 83, "start_character": 8, "end_line": 83, "end_character": 16}, "updated": "2020-01-29 14:09:03.000000000", "message": "What do we gain by using dataclasses? Having an action on the dataclass feels a bit strange to me.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_799d3a6a", "line": 83, "range": {"start_line": 83, "start_character": 8, "end_line": 83, "end_character": 16}, "in_reply_to": "3fa7e38b_21fb0e48", "updated": "2020-01-29 14:55:06.000000000", "message": "I can't use dicts because I want these actions. I could use a plain old class but since there's not a lot of complicated logic here, this seems like a good use of dataclasses.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5345ae49", "line": 83, "range": {"start_line": 83, "start_character": 8, "end_line": 83, "end_character": 16}, "in_reply_to": "3fa7e38b_799d3a6a", "updated": "2020-01-30 09:24:02.000000000", "message": "I guess we have different thresholds. The lazy loading name_regex property and the validate function makes this a non pure data class for me. But this is just matter of style so I won't push it.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_c5a7914f", "line": 17, "updated": "2020-02-25 11:39:12.000000000", "message": "doesn't pep8 cry because of multiple import per line?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8238529e06d539a0493a137c5b4ae444f82eeae4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_e7a07ea8", "line": 17, "in_reply_to": "1fa4df85_c5a7914f", "updated": "2020-02-25 11:58:57.000000000", "message": "No, this is an exception (like oslo.i18n). I've taken to doing\n\n  import typing as ty\n\nelsewhere though so can update this to do the same", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "5fc80b5f665011218a3a857cfffbe82904b97b55", "unresolved": false, "patch_set": 11, "id": "1fa4df85_eddccb47", "line": 17, "in_reply_to": "1fa4df85_e7a07ea8", "updated": "2020-02-26 10:28:05.000000000", "message": "both works for me, I just did not know that this was an exception.", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_e523adbd", "line": 45, "updated": "2020-02-25 11:39:12.000000000", "message": "the followings are not floats according to this regex: \n1 \n1.\n.1\n-1.0\n3.870892419913343e+20\n\nI'm not sure if we need to support all the formats, but -1.0 is definitely missing. The rest needs to be documented to not be supported.\n\nBtw, do we need to support floats in keys?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1c2c61921c73133b203fd516901683b0853f2e03", "unresolved": false, "patch_set": 11, "id": "1fa4df85_2884115e", "line": 45, "in_reply_to": "1fa4df85_0d892722", "updated": "2020-02-26 11:07:52.000000000", "message": "Okay, I've moved this to the PowerVM case. We can move it back in the future if necessary.", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "5fc80b5f665011218a3a857cfffbe82904b97b55", "unresolved": false, "patch_set": 11, "id": "1fa4df85_0d892722", "line": 45, "in_reply_to": "1fa4df85_c78782d7", "updated": "2020-02-26 10:28:05.000000000", "message": "Floats are tricky so if we can limit them to power VM then there we can easily say that we only support a subset of the floats that is enough for the power VM case. So I guess moving this to powerVM only would be a good thing. I would also accept to keep it global but have a thick documentation what format of floats we support.", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8238529e06d539a0493a137c5b4ae444f82eeae4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_c78782d7", "line": 45, "in_reply_to": "1fa4df85_e523adbd", "updated": "2020-02-25 11:58:57.000000000", "message": "> the followings are not floats according to this regex:\n > 1\n > 1.\n > .1\n > -1.0\n > 3.870892419913343e+20\n > \n > I'm not sure if we need to support all the formats, but -1.0 is\n > definitely missing. The rest needs to be documented to not be\n > supported.\n\nGood point. Done.\n\n > Btw, do we need to support floats in keys?\n\nYeah, just for the PowerVM case at the moment. Maybe I'd be better off defining a pattern for those particular keys?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_050a8925", "line": 47, "range": {"start_line": 47, "start_character": 50, "end_line": 47, "end_character": 56}, "updated": "2020-02-25 11:39:12.000000000", "message": "So is it a rule that we only allow letters, numbers and underscore in a string?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8238529e06d539a0493a137c5b4ae444f82eeae4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_a7aa8682", "line": 47, "range": {"start_line": 47, "start_character": 50, "end_line": 47, "end_character": 56}, "in_reply_to": "1fa4df85_050a8925", "updated": "2020-02-25 11:58:57.000000000", "message": "Hmm, good point. Probably should be '.*'. Will update", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_2038d3d1", "line": 63, "updated": "2020-02-25 11:39:12.000000000", "message": "'-' is missing here but added above. Should we extract a type - regexp mapping instead of duplicating these regexps?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8238529e06d539a0493a137c5b4ae444f82eeae4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_0767da4f", "line": 63, "in_reply_to": "1fa4df85_2038d3d1", "updated": "2020-02-25 11:58:57.000000000", "message": "Done", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_00403735", "line": 65, "updated": "2020-02-25 11:39:12.000000000", "message": "float format issues as above", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8238529e06d539a0493a137c5b4ae444f82eeae4", "unresolved": false, "patch_set": 11, "id": "1fa4df85_a75b6685", "line": 65, "in_reply_to": "1fa4df85_00403735", "updated": "2020-02-25 11:58:57.000000000", "message": "Done", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_e05f1b0c", "line": 69, "range": {"start_line": 69, "start_character": 29, "end_line": 69, "end_character": 31}, "updated": "2020-02-25 11:39:12.000000000", "message": "not to myself: this means ignorecase", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b5173bc9e7003177d203b5a14c7e263f307d0cc6", "unresolved": false, "patch_set": 11, "id": "1fa4df85_274f76be", "line": 110, "updated": "2020-02-25 11:59:36.000000000", "message": "@gibi: Any suggestions on what I should use here? Perhaps what I have is good enough?", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "5fc80b5f665011218a3a857cfffbe82904b97b55", "unresolved": false, "patch_set": 11, "id": "1fa4df85_edb12be3", "line": 110, "in_reply_to": "1fa4df85_274f76be", "updated": "2020-02-26 10:28:05.000000000", "message": "For me ValidationError is good enough for now.", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2833d5e4aa0180e09ced27b44ea7d296c55d5001", "unresolved": false, "patch_set": 12, "id": "1fa4df85_6d021bb7", "line": 33, "range": {"start_line": 33, "start_character": 4, "end_line": 33, "end_character": 20}, "updated": "2020-02-26 10:21:39.000000000", "message": "just a question, are we going to serialize those to API or file? I just feel we put the 'description' and 'deprecated' into the class, sounds like it is useful for serialization.", "commit_id": "66d7922dbfc7bccea3c0f175fa303a0bd48d034b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1c2c61921c73133b203fd516901683b0853f2e03", "unresolved": false, "patch_set": 12, "id": "1fa4df85_287651a6", "line": 33, "range": {"start_line": 33, "start_character": 4, "end_line": 33, "end_character": 20}, "in_reply_to": "1fa4df85_6d021bb7", "updated": "2020-02-26 11:07:52.000000000", "message": "Yes, I was to produce a Sphinx extension to automatically document this for us so I want it to be somewhat machine readable", "commit_id": "66d7922dbfc7bccea3c0f175fa303a0bd48d034b"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "61d6b210cf28a6c187ff8ad2d74d5fcf9800fd48", "unresolved": false, "patch_set": 14, "id": "1fa4df85_b5833acc", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "updated": "2020-03-02 13:49:47.000000000", "message": "I appreciate the desire to reuse the regex validator, but since we're doing this in python now, why not just\n\n try:\n     int(value)\n except ValueError:\n     # invalid", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "778c2b10539b66f073b7c89fb446961d397e1d30", "unresolved": false, "patch_set": 14, "id": "1fa4df85_e23b3fe8", "line": 63, "range": {"start_line": 63, "start_character": 26, "end_line": 63, "end_character": 32}, "updated": "2020-03-02 09:39:12.000000000", "message": "negative numbers are still not accepted here but accepted above for the keys.", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "f27b3d70ca6c37e6ee414708e9b88ba6a206b5d6", "unresolved": false, "patch_set": 14, "id": "1fa4df85_8b2cb102", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_0b99a1c2", "updated": "2020-03-04 18:07:53.000000000", "message": "You're parsing these as strings, though.\n\n ----> 1 int('0.786')\n\n ValueError: invalid literal for int() with base 10: '0.786'", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5f2577bca7c936fd7afe9050c40f01bdf8ae27a0", "unresolved": false, "patch_set": 14, "id": "1fa4df85_f8e3a732", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_2f5edb11", "updated": "2020-03-05 15:10:55.000000000", "message": "Okay, that's fair. I've switched to the int format and also started using 'oslo_utils.strutils.bool_from_string' for booleans. lmk if it works for you", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "d36b9c248d934228216416132c04e701cb770245", "unresolved": false, "patch_set": 14, "id": "1fa4df85_2f5edb11", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_6cc4e191", "updated": "2020-03-05 12:26:44.000000000", "message": "It means you're not reinventing the wheel. int() already knows how to parse for integers.\n\n> the other stuff with regexes\n\nI didn't go look at everything (this is just a drive-by response to something I happened to notice from my email feed) but IMO we should be taking every opportunity to reuse parsing/validation that already exists rather than rolling our own regex. Is a value an IP address? A URL? Please don't try to write regexes for those.\n\n(NB: when we were considering the yaml-driven design, funneling everything through regex arguably made a bit more sense.)", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "6acf48880a94877f4b89632a228897fc21daebe3", "unresolved": false, "patch_set": 14, "id": "1fa4df85_6cc4e191", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_8b2cb102", "updated": "2020-03-05 11:31:26.000000000", "message": "Oh, TIL.\n\nWith that said, we're doing the other stuff with regexes so it seems nice to be able to do that consistently, no? idk, I can switch but I'm not sure what it gives us", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e5ab99d02420790f4ae9664f950b2fd16a655ca5", "unresolved": false, "patch_set": 14, "id": "1fa4df85_0b99a1c2", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_b5833acc", "updated": "2020-03-04 17:43:12.000000000", "message": "I could, but then I'll allow things like 0.786. I'm not aware of anywhere where I'm using this format in extra specs where a non-whole number is desirable/allowed.", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "16d7afa9bf5f7c6045867b2581ec52d6d0adb405", "unresolved": false, "patch_set": 14, "id": "1fa4df85_1d859a5a", "line": 63, "range": {"start_line": 63, "start_character": 26, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_e23b3fe8", "updated": "2020-03-02 09:52:42.000000000", "message": "Damn it. Fixed", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ad4003f8df2896bebdc7c3878d151d792bfee548", "unresolved": false, "patch_set": 14, "id": "1fa4df85_58499b2e", "line": 63, "range": {"start_line": 62, "start_character": 8, "end_line": 63, "end_character": 32}, "in_reply_to": "1fa4df85_f8e3a732", "updated": "2020-03-05 15:13:55.000000000", "message": "Yeah, nice.", "commit_id": "6a28c82ffa8716ad2966716c3c666d81e32772e7"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7ac49bfd293f68b2104cefe12836beb320f1e436", "unresolved": false, "patch_set": 21, "id": "df33271e_dc38e03e", "line": 25, "updated": "2020-04-06 10:26:28.000000000", "message": "tbc, this ignored PEP check comes from https://docs.python.org/3/library/dataclasses.html", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_3c110c55", "line": 64, "updated": "2020-04-06 10:07:56.000000000", "message": "I'd have preferred that you compiled the regex value once when initting it, and caching this instead of calling N times the same .fullmatch() module method.\n\nThis being said, fortunately the re package does caching so there is not a huge performance hit by doing this, but I just feel we avoid a bit of unnecessary function calls\n\nhttps://docs.python.org/3/howto/regex.html#module-level-functions", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "2d48338dfece22f781c1458428ac7014a7d55d0a", "unresolved": false, "patch_set": 21, "id": "df33271e_fcca049f", "line": 64, "in_reply_to": "df33271e_3c110c55", "updated": "2020-04-06 12:29:32.000000000", "message": "FWIW, I prefer the simplicity of this approach here, rather than us trying to implement our own caching.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}], "nova/api/validation/extra_specs/capabilities.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_4d917652", "line": 56, "range": {"start_line": 55, "start_character": 0, "end_line": 56, "end_character": 41}, "updated": "2020-02-25 11:39:12.000000000", "message": "nit: I would mark the two lists with their respective sources directly below", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}], "nova/api/validation/extra_specs/hw.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0ab39836", "line": 23, "updated": "2020-01-28 17:57:29.000000000", "message": "I think I'll split this into multiple lists and just merge them later", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cad10058", "line": 32, "updated": "2020-01-28 17:57:29.000000000", "message": "I'm going to remove most of these because they almost almost duplicate what's in 'description' of the parent (data)class", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ca36e0b3", "line": 326, "updated": "2020-01-28 17:57:29.000000000", "message": "This is kind of unnecessary, but I didn't like the look of doing this in the 'validators' module", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eccded5a", "line": 32, "range": {"start_line": 32, "start_character": 28, "end_line": 32, "end_character": 62}, "updated": "2020-01-29 15:02:03.000000000", "message": "this feels a little weired.\n\n\"whether realtime priority should be enabled\"\nmight be better.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0b1a9e7f", "line": 32, "range": {"start_line": 32, "start_character": 28, "end_line": 32, "end_character": 62}, "in_reply_to": "3fa7e38b_eccded5a", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_61302655", "line": 42, "updated": "2020-01-29 14:09:03.000000000", "message": "do you mean every regex will start with '^' ? If yes then we can even add that automatically.\nI'm a bit confused as you use re.match in the impl there I don't think we need '^' as re.match always tries to match the whole string (in contrast with re.search)\n\n// later\n\nI see now, '^' is not the regexp string-start token but the expected input should start with the char ^. facepalm. :D", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7980da49", "line": 42, "in_reply_to": "3fa7e38b_61302655", "updated": "2020-01-29 15:02:03.000000000", "message": "i would prefer us not to add things to the regex automaticaly it makes figure out what going on harder as it add to the mental load", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ef6f1c90", "line": 42, "in_reply_to": "3fa7e38b_7980da49", "updated": "2020-01-30 13:13:40.000000000", "message": "> i would prefer us not to add things to the regex automaticaly it\n > makes figure out what going on harder as it add to the mental load\n\nnot an issue since as gibi notes we don't need to add anything here - the caret is needed by this particular extra spec", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e114169b", "line": 43, "updated": "2020-01-29 14:09:03.000000000", "message": "If we have pattern the that is also means we expect a string so adding 'type': str here is a bit redundant.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f38cda82", "line": 43, "in_reply_to": "3fa7e38b_999a76c1", "updated": "2020-01-30 09:24:02.000000000", "message": "I slept on this and I revert my statement. If we want to allow an unrestricted string as value then having a '.*' worst than having type: str", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4e38b8667b024c97987231503446992dcce9b297", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_999a76c1", "line": 43, "in_reply_to": "3fa7e38b_e114169b", "updated": "2020-01-29 14:40:19.000000000", "message": "It is, but I guess I wanted to be explicit. TBH, I could just use regex's for everything but that didn't seem very approachable. Need to think on this one", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_47ae5aa1", "line": 44, "updated": "2020-01-29 14:09:03.000000000", "message": "I've noticed that the top level config is based on kwargs while the second level is based on a dict syntax. I can accept his as a small inconvenience. But then I realized that we will have another way to specify these via a yaml file. And that yaml file syntax will not have this inconvenience. So why not we are using yaml files for the in tree validators as well?", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4e38b8667b024c97987231503446992dcce9b297", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f93ccac0", "line": 44, "in_reply_to": "3fa7e38b_47ae5aa1", "updated": "2020-01-29 14:40:19.000000000", "message": "I'm planning to switch from dict to a dataclass but just haven't had time to do it yet. Initially these were all dicts before I started cleaning things up", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7933fac4", "line": 44, "in_reply_to": "3fa7e38b_47ae5aa1", "updated": "2020-01-29 15:02:03.000000000", "message": "i personally hate the idea of doing this in yaml but could live it it.\n\nif we are going to drive this via data files i think we shoudl not do this and instead factor the glance metadefs out into a shared lib and reuse the code they already have which includes validation logic and the ablity to define key value paris across multiple namepaces for image, flavors, volume, host aggreates and i think some thing else.\n\nthey already have a rest api to expose this and it is consomued by horizon and heat to auto generate uis and do validation.\n\nso if we are going a file based route then i think it does not make sense to defien our own incompatele file format or reimplement that code and we should instead work with glance to create a comon lib that we can both share because we are really just reinventing the wheel here. the stevador extentions and python based implemation where the two things that i though where an impovement over what glace already does today.\n\nif we remove both i dont think this is a better approch. we could do automaitc docs generation form the metadefs too.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b386625f", "line": 44, "in_reply_to": "3fa7e38b_f93ccac0", "updated": "2020-01-30 09:24:02.000000000", "message": "Cool. I'm OK with a consisten kwargs syntax", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_815e8276", "line": 59, "updated": "2020-01-29 14:09:03.000000000", "message": "ditto enum values already define that the type is string", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ac1375b6", "line": 113, "range": {"start_line": 113, "start_character": 44, "end_line": 113, "end_character": 53}, "updated": "2020-01-29 15:02:03.000000000", "message": "this regex is not correct.\nwhen its a digit the unit sufix is optional and there cannot be any trailing or leading spaces.\n\nwe parse this with sting_to)bytes\nhttps://github.com/openstack/nova/blob/cc0e1950a0679321a207011f327f79a147cf3758/nova/virt/hardware.py#L1350-L1351\n\nusign it to conver the number into an integre number of KiBs\nusing the IEC defintions where MB is base 2 not base 10\n The units supported are\n        Kb(it), Kib(it), Mb(it), Mib(it), Gb(it), Gib(it), Tb(it), Tib(it), KB, KiB, MB, MiB, GB, GiB, TB, TiB\n\nhttps://github.com/openstack/oslo.utils/blob/44c7c0c0e6265568d3f01a91f087d853064adfdd/oslo_utils/strutils.py#L174-L185\n\nso this regex shoudl actully be\n(large|small|any|^\\d+([kKMGT]i?)?(b|bit|B)?$)", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f9191b8b", "line": 113, "range": {"start_line": 113, "start_character": 44, "end_line": 113, "end_character": 53}, "in_reply_to": "3fa7e38b_ac1375b6", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8c2d59af", "line": 146, "range": {"start_line": 146, "start_character": 20, "end_line": 146, "end_character": 23}, "updated": "2020-01-29 15:02:03.000000000", "message": "int\n\nthis is not a mask/list like the realtime mask", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "377f4b738d75cbf475a15721f5f3e1363164e23e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1ef8a47b", "line": 146, "range": {"start_line": 146, "start_character": 20, "end_line": 146, "end_character": 23}, "in_reply_to": "3fa7e38b_8c2d59af", "updated": "2020-01-29 21:37:41.000000000", "message": "actully as you pointed out on the spec this actully correct\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/juno/implemented/virt-driver-numa-placement.html", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4c33e112", "line": 149, "range": {"start_line": 148, "start_character": 16, "end_line": 149, "end_character": 57}, "updated": "2020-01-29 15:02:03.000000000", "message": "the number of gust cpus to emulate on guest the NUMA node\nidentified by ``{id}``.'", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6c36dd03", "line": 152, "range": {"start_line": 151, "start_character": 11, "end_line": 152, "end_character": 10}, "updated": "2020-01-29 15:02:03.000000000", "message": "remove", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "377f4b738d75cbf475a15721f5f3e1363164e23e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3efb207a", "line": 152, "range": {"start_line": 151, "start_character": 11, "end_line": 152, "end_character": 10}, "in_reply_to": "3fa7e38b_6c36dd03", "updated": "2020-01-29 21:37:41.000000000", "message": "as above this is correct.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2c054515", "line": 172, "range": {"start_line": 172, "start_character": 45, "end_line": 172, "end_character": 53}, "updated": "2020-01-29 15:02:03.000000000", "message": "here an below i would avoid using the term allocate as in teh cpu toplogy case it could be confused with cpu pinning", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_190c3743", "line": 172, "range": {"start_line": 172, "start_character": 45, "end_line": 172, "end_character": 53}, "in_reply_to": "3fa7e38b_2c054515", "updated": "2020-01-30 13:13:40.000000000", "message": "Left as-is because I couldn't think of anything better. Let me know if you have something.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_073862d1", "line": 194, "range": {"start_line": 193, "start_character": 7, "end_line": 194, "end_character": 36}, "updated": "2020-01-29 15:02:03.000000000", "message": "this one in partacalr could be misunderstood as being related to cpu pinning.\n\ni would repharse as \n'The number of virtual CPU  to emulate per socket in the\ngust cpu toplology.'", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0b313eef", "line": 194, "range": {"start_line": 193, "start_character": 7, "end_line": 194, "end_character": 36}, "in_reply_to": "3fa7e38b_073862d1", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8749b266", "line": 198, "range": {"start_line": 198, "start_character": 53, "end_line": 198, "end_character": 59}, "updated": "2020-01-29 15:02:03.000000000", "message": "again assign could be miss interpreted.\n\n'The number of virtual CPU cores per virtual cpu socket',", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4b1f365a", "line": 198, "range": {"start_line": 198, "start_character": 53, "end_line": 198, "end_character": 59}, "in_reply_to": "3fa7e38b_8749b266", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_67527613", "line": 205, "range": {"start_line": 205, "start_character": 42, "end_line": 205, "end_character": 50}, "updated": "2020-01-29 15:02:03.000000000", "message": "as above avoid allocate ill skip point this out for the other cases.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ab2d8a91", "line": 205, "range": {"start_line": 205, "start_character": 42, "end_line": 205, "end_character": 50}, "in_reply_to": "3fa7e38b_67527613", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_47689aba", "line": 218, "range": {"start_line": 218, "start_character": 28, "end_line": 218, "end_character": 34}, "updated": "2020-01-29 15:02:03.000000000", "message": "guest. This is use to limit the toplogies that can be requested by an image and will be used to validate the hw_cpu_sockets image property.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cb3fa6b0", "line": 218, "range": {"start_line": 218, "start_character": 28, "end_line": 218, "end_character": 34}, "in_reply_to": "3fa7e38b_47689aba", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e7abc6d0", "line": 250, "range": {"start_line": 226, "start_character": 4, "end_line": 250, "end_character": 24}, "updated": "2020-01-29 15:02:03.000000000", "message": "note the that this is used mainly to limit the toplogies that can be requested by the image.\n\nit is also technically used when we generate and sort the toplogies we generate by default.\n\nhttps://github.com/openstack/nova/blob/cc0e1950a0679321a207011f327f79a147cf3758/nova/virt/hardware.py#L451-L495\n\nif we are documenting there existene we proably shoudl explain how they are intended to be used.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eb6142d7", "line": 250, "range": {"start_line": 226, "start_character": 4, "end_line": 250, "end_character": 24}, "in_reply_to": "3fa7e38b_e7abc6d0", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c7bd6ab2", "line": 260, "range": {"start_line": 251, "start_character": 3, "end_line": 260, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "this should really have been in the os namespace.\nwe shoudl consider moving it in the future.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4b6df6c9", "line": 260, "range": {"start_line": 251, "start_character": 3, "end_line": 260, "end_character": 6}, "in_reply_to": "3fa7e38b_c7bd6ab2", "updated": "2020-01-30 13:13:40.000000000", "message": "Added a note.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_87ce92b4", "line": 280, "range": {"start_line": 280, "start_character": 24, "end_line": 280, "end_character": 29}, "updated": "2020-01-29 15:02:03.000000000", "message": "i think this willl be '.*' because technically this is a resouce class name that can be set in the config.\n\nwell i guess it would be '^([a-zA-Z0-9_]+(,)?)+$'\nsince it is a comma seperated list of valid resouce class names which can only be alphanumeric or underscore with no leading or trailing white space", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8b344ead", "line": 280, "range": {"start_line": 280, "start_character": 24, "end_line": 280, "end_character": 29}, "in_reply_to": "3fa7e38b_87ce92b4", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_4d9f3650", "line": 39, "updated": "2020-02-25 11:39:12.000000000", "message": "thanks! :)", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}], "nova/api/validation/extra_specs/hw_rng.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_27f1de96", "line": 22, "updated": "2020-01-29 15:02:03.000000000", "message": "these really should have been in the hw namespace instead of there own namespace. its a sperate thing but i think it would make sense to move these. im also noting other extra specs that we shoudl consider moving in the futrue in the other files but that is a seperate change to this.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_07cce287", "line": 27, "range": {"start_line": 26, "start_character": 13, "end_line": 27, "end_character": 39}, "updated": "2020-01-29 15:02:03.000000000", "message": "we are kind of changing the meaning of this.\n\nnow that the rng will be enabel by default this will be used to allow the admin to disable the rng if its explcitly set to false.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0bc5be5d", "line": 27, "range": {"start_line": 26, "start_character": 13, "end_line": 27, "end_character": 39}, "in_reply_to": "3fa7e38b_07cce287", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "6af579ffa9c979376225408ad55e71397089e05a", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_cc86ca16", "line": 50, "updated": "2020-02-18 16:23:33.000000000", "message": "1 might be a more sane value, here and above", "commit_id": "22e79692356a40492bf8bceac38212f9b614e783"}], "nova/api/validation/extra_specs/hw_video.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_67e276d5", "line": 24, "range": {"start_line": 24, "start_character": 13, "end_line": 24, "end_character": 33}, "updated": "2020-01-29 15:02:03.000000000", "message": "this should have just been in the hw namespace", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2b7c3a21", "line": 24, "range": {"start_line": 24, "start_character": 13, "end_line": 24, "end_character": 33}, "in_reply_to": "3fa7e38b_67e276d5", "updated": "2020-01-30 13:13:40.000000000", "message": "Added a note", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a7894e25", "line": 25, "updated": "2020-01-29 15:02:03.000000000", "message": "this is the maxium amount of video memory the use can request using hw_video_ram image property.\n\nhttps://github.com/openstack/glance/blob/26c5c8dff670617ecbcc2b319b25e632fa88cb4a/etc/metadefs/compute-libvirt-image.json#L86-L90\n\nthis is used to configre the amound of vrma that is exposed as bar 2 i think in the vm wich is basicaly the frame buffer/video memory that will be reported to the os by the default grapichs device however it has no effect for vGPUs", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8b876e12", "line": 25, "in_reply_to": "3fa7e38b_a7894e25", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/null.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8a3c6891", "line": 15, "range": {"start_line": 15, "start_character": 20, "end_line": 15, "end_character": 22}, "updated": "2020-01-28 17:57:29.000000000", "message": "whoops", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e1cdf65a", "updated": "2020-01-29 14:09:03.000000000", "message": "null means without namespace?", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_93dec669", "in_reply_to": "3fa7e38b_d991ce51", "updated": "2020-01-30 09:24:02.000000000", "message": "I just wanted to make sure I got it.\n\nIt is fun to say:\n\n    from nova.api.validators.extra_spec import null", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d991ce51", "in_reply_to": "3fa7e38b_e1cdf65a", "updated": "2020-01-29 14:55:06.000000000", "message": "Yup, for want of a better name :)", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_81020271", "line": 15, "range": {"start_line": 15, "start_character": 19, "end_line": 15, "end_character": 36}, "updated": "2020-01-29 14:09:03.000000000", "message": "copy-pasta", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eb75c235", "line": 15, "range": {"start_line": 15, "start_character": 19, "end_line": 15, "end_character": 36}, "in_reply_to": "3fa7e38b_81020271", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_27755e33", "line": 24, "range": {"start_line": 24, "start_character": 14, "end_line": 24, "end_character": 32}, "updated": "2020-01-29 15:02:03.000000000", "message": "this really should have been prefixed when we added it by the way. ideally we would deprecate this and replace it with an os:hide_hypervisor_id or hw:hide_hypervisor_id extra spec instead.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cb6c866d", "line": 24, "range": {"start_line": 24, "start_character": 14, "end_line": 24, "end_character": 32}, "in_reply_to": "3fa7e38b_27755e33", "updated": "2020-01-30 13:13:40.000000000", "message": "Added a note", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d90eaed6", "line": 34, "range": {"start_line": 34, "start_character": 0, "end_line": 34, "end_character": 1}, "updated": "2020-01-29 15:02:03.000000000", "message": "i think you are missing group_policy here.\n\ne.g. the group_policy to use when using the granuarl resouce request syntax. i dont think that has a prefix although placemet:group_policy proably would have made sense.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ebc8624f", "line": 34, "range": {"start_line": 34, "start_character": 0, "end_line": 34, "end_character": 1}, "in_reply_to": "3fa7e38b_d90eaed6", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/os.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0a487828", "line": 27, "range": {"start_line": 26, "start_character": 62, "end_line": 27, "end_character": 44}, "updated": "2020-01-28 17:57:29.000000000", "message": "It might be nice to formally encode this somewhere, even though we can't use it in validation. Maybe:\n\n  support_drivers=['$driver'],\n\nwhere $driver is a valid value for 'compute_driver', e.g. 'libvirt.LibvirtDriver'. Maybe that's unnecessary though. TBD.", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c5a67fc520628fcc27083640f94eee3128a0efb3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6a524cdc", "line": 83, "updated": "2020-01-28 17:57:29.000000000", "message": "Oh, I didn't add support for ints with 'enum'. Not even sure it makes sense. I need to fix something anyway", "commit_id": "58d85e4868f384737fe6a2462968c8aebeeccfc1"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_472dfaf9", "line": 24, "range": {"start_line": 24, "start_character": 14, "end_line": 24, "end_character": 28}, "updated": "2020-01-29 15:02:03.000000000", "message": "this makes sense i think to be under os but the rest of the option in this namespace shoudl really be under hw: or in a hyperv namespace like the powervm ones.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4bfdf66b", "line": 24, "range": {"start_line": 24, "start_character": 14, "end_line": 24, "end_character": 28}, "in_reply_to": "3fa7e38b_472dfaf9", "updated": "2020-01-30 13:13:40.000000000", "message": "Added a note", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_878bf214", "line": 42, "range": {"start_line": 41, "start_character": 46, "end_line": 42, "end_character": 19}, "updated": "2020-01-29 15:02:03.000000000", "message": "strangly enough i think this is an option we can define when creating the default grapis device in libvirt too. so we might want to add support for this in the future.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e79f464b", "line": 85, "range": {"start_line": 69, "start_character": 4, "end_line": 85, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "this is basicaly serves the same function as the libvirt the hw_video_ram image property. we should consider converging them at some point. while the admin can set a max vram in the flavor for libvirt the cant actully set the amount to use by default. that is only support in the image.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_abeb4aa3", "line": 85, "range": {"start_line": 69, "start_character": 4, "end_line": 85, "end_character": 6}, "in_reply_to": "3fa7e38b_e79f464b", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/powervm.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_27a9de23", "line": 15, "updated": "2020-01-29 15:02:03.000000000", "message": "as a general note given that all extra_specs are ment to require a spec i am not sure where most of these came form.\n\nnone of these are in the flavor docs", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_27647e4c", "line": 62, "range": {"start_line": 23, "start_character": 4, "end_line": 62, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "im not really sure that these make sense?\nmaybe erric can explain them?\n\nthe number of vcpu and memory is defiend in the falvor object adn we dont allow that to be altered via the image right.\n\nare these qos attibute of some kind to define constriants on oversubsription.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e742e692", "line": 92, "range": {"start_line": 63, "start_character": 4, "end_line": 92, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "this seams like a non standard way to do cpu quotas\nhttps://docs.openstack.org/nova/latest/user/flavors.html#extra-specs-cpu-limits", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_07d702c2", "line": 102, "range": {"start_line": 93, "start_character": 4, "end_line": 102, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "this presumable is a no standard way to enable cpu pinning\n\nhw:cpu_policy was inteded to be used by all virt drivers for that.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a794eee7", "line": 131, "range": {"start_line": 113, "start_character": 3, "end_line": 131, "end_character": 10}, "updated": "2020-01-29 15:02:03.000000000", "message": "i have no idea what these are.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_679a7612", "line": 142, "range": {"start_line": 133, "start_character": 2, "end_line": 142, "end_character": 6}, "updated": "2020-01-29 15:02:03.000000000", "message": "again this sound like a non standard way to do cpu thead policies\n\ne.g. hw:cpu_thread_policies", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a7bdce67", "line": 144, "range": {"start_line": 144, "start_character": 14, "end_line": 144, "end_character": 45}, "updated": "2020-01-29 15:02:03.000000000", "message": "this kind of sound like the ablity to specify a cpu model or machine type", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "186dcad0ea7932b0cb2297230f575b2a320474c1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3f3eb0e3", "line": 24, "range": {"start_line": 24, "start_character": 20, "end_line": 24, "end_character": 37}, "updated": "2020-01-30 16:20:29.000000000", "message": "PowerVC (the $ product that sits on top of nova+powervm) allows you to pass the extra specs through, and has them documented here: https://www.ibm.com/support/knowledgecenter/SSXK2N_1.4.4/com.ibm.powervc.standard.help.doc/powervc_pg_flavorsextraspecs_hmc.html", "commit_id": "b755a335e967009e0e7ee60756670beeaae90a14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "51f6405259eb61bb681f845177e4f44ccdc99e22", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f7374dad", "line": 24, "range": {"start_line": 24, "start_character": 20, "end_line": 24, "end_character": 37}, "in_reply_to": "3fa7e38b_3f3eb0e3", "updated": "2020-02-10 17:24:35.000000000", "message": "Done", "commit_id": "b755a335e967009e0e7ee60756670beeaae90a14"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "51c9a40daa1ae1a8ca409a4eb4262ecd7de46faa", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2cd4b74a", "line": 23, "updated": "2020-02-10 20:02:31.000000000", "message": "I think it would be good to include the link to the reference you used to populate these.", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ae646af06f47fa5d5c180bcc1448cc4b2bf98411", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0afe7106", "line": 23, "in_reply_to": "3fa7e38b_2cd4b74a", "updated": "2020-02-11 13:15:50.000000000", "message": "Done", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "48940db7093c337bb949b1616f2e60503466b1b0", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_4cc7b311", "line": 40, "range": {"start_line": 40, "start_character": 13, "end_line": 40, "end_character": 20}, "updated": "2020-02-10 20:59:29.000000000", "message": "max not min", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ae646af06f47fa5d5c180bcc1448cc4b2bf98411", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2afb2d16", "line": 40, "range": {"start_line": 40, "start_character": 13, "end_line": 40, "end_character": 20}, "in_reply_to": "3fa7e38b_4cc7b311", "updated": "2020-02-11 13:15:50.000000000", "message": "Done", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "48940db7093c337bb949b1616f2e60503466b1b0", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6ce5cfa2", "line": 76, "range": {"start_line": 49, "start_character": 4, "end_line": 76, "end_character": 6}, "updated": "2020-02-10 20:59:29.000000000", "message": "by the way im not sure how these min/max cpus,ram ectra can work with placement.\n\nyou either need to always claim the max and allow the allocation ratio to contol if over subscription is allowsed or you always claim the min and dissalow over subsrption but i suspect they dont do either and it does not work with placment correctly.", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}], "nova/api/validation/extra_specs/quota.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_394fc269", "line": 81, "range": {"start_line": 65, "start_character": 0, "end_line": 81, "end_character": 9}, "updated": "2020-01-29 15:02:03.000000000", "message": "for non local disk i think we should alos deprecate this in favor of cinder or ceph based qos.\n\nwe would need to keep this for local storage however so maybe its not worth it.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f90e0a31", "line": 99, "range": {"start_line": 84, "start_character": 0, "end_line": 99, "end_character": 9}, "updated": "2020-01-29 15:02:03.000000000", "message": "this should be considerd deprecated with the intoduction of neuton qos policies. we have not formally done that but i think we shoudl consider doing it and remove it in victoria.\nthe main reason we had not done that until now was this was needed for nova networks.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6b0c7296", "line": 99, "range": {"start_line": 84, "start_character": 0, "end_line": 99, "end_character": 9}, "in_reply_to": "3fa7e38b_f90e0a31", "updated": "2020-01-30 13:13:40.000000000", "message": "Added a note", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/resources.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_39d5821a", "line": 37, "range": {"start_line": 37, "start_character": 19, "end_line": 37, "end_character": 36}, "updated": "2020-01-29 15:02:03.000000000", "message": "this would be an optional parameter.\ne.g. you need this to work with resouces:VCPU=2 or resouces1:VCPU=2\nand i think we now can have named groups so \n\nresouces_my_group_name:VCPU=2 is valide in which case i think it would be 'resouces_[a-zA-z0-9_]*'\n\nso the regex for the whole key i think is 'resouces(_[a-zA-z0-9_]*|\\d+)?' so '(_[a-zA-z0-9_]*|\\d+)?' would be the regex for just the group.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eb1f02b7", "line": 37, "range": {"start_line": 37, "start_character": 19, "end_line": 37, "end_character": 36}, "in_reply_to": "3fa7e38b_39d5821a", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/traits.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_199a065f", "line": 42, "range": {"start_line": 42, "start_character": 31, "end_line": 42, "end_character": 38}, "updated": "2020-01-29 15:02:03.000000000", "message": "i think the regex here would be '(_[a-zA-z0-9_]*|\\d+)?'", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eb64e250", "line": 42, "range": {"start_line": 42, "start_character": 31, "end_line": 42, "end_character": 38}, "in_reply_to": "3fa7e38b_199a065f", "updated": "2020-01-30 13:13:40.000000000", "message": "Done", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f26d7015f6ea609a4d34c921dde6b94d6e54c93d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f9ccca62", "line": 44, "updated": "2020-01-29 15:02:03.000000000", "message": "{\n                    'type': str,\n                    'name': 'trait',\n                    'pattern': r'[a-zA-z0-9_]+', \n                },", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cb16c6a2", "line": 44, "in_reply_to": "3fa7e38b_f9ccca62", "updated": "2020-01-30 13:13:40.000000000", "message": "Oh, whoops. Good catch. I'll need tests for most/all of these.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/api/validation/extra_specs/validators.py": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_616826f2", "line": 43, "updated": "2020-01-29 14:09:03.000000000", "message": "this is almost a circle in the call graph\n\n  validators->\n  <module>.register()->\n  validators.EXTRA_SPEC_VALIDATORS.extend()\n\nit feels strange but didn't thin it through", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2180ee9b", "line": 49, "range": {"start_line": 49, "start_character": 4, "end_line": 49, "end_character": 46}, "updated": "2020-01-29 14:09:03.000000000", "message": "I would raise an exception if a key already defined to help avoid duplicated validators", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cb6b261a", "line": 49, "range": {"start_line": 49, "start_character": 4, "end_line": 49, "end_character": 46}, "in_reply_to": "3fa7e38b_2180ee9b", "updated": "2020-01-30 13:13:40.000000000", "message": "Yup, added a TODO to do this. This whole thing is a bit janky at the moment and needs to be shuffled around.", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}], "nova/tests/functional/test_cross_cell_migrate.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "48940db7093c337bb949b1616f2e60503466b1b0", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_e70f9829", "line": 872, "range": {"start_line": 872, "start_character": 10, "end_line": 872, "end_character": 53}, "updated": "2020-02-10 20:59:29.000000000", "message": "you can use the namespaced form\nso aggregate_instance_extra_specs:foo in the flavor\nand in teh validator just treat aggregate_instance_extra_specs:*=* as valid.\n\nits considered bad pratice not to use the namespaced version anyway. using the unnamepsaced version breaks the compute capablity filter i believe in some cases.", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "958b04242acf4dab53565be5a21d435c75bad542", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_041c2779", "line": 872, "range": {"start_line": 872, "start_character": 10, "end_line": 872, "end_character": 53}, "in_reply_to": "3fa7e38b_c72b7c7a", "updated": "2020-02-11 13:14:09.000000000", "message": "> actully come to think of it you proably need to  look at the filter\n > and see if they use any other namespcaes that are not used in the\n > drivers.\n > \n > e.g. aggregate_instance_extra_specs namespace is used by the\n > AggregateInstanceExtraSpecsFilter\n\nI did this and found that one and 'capabilities:' (by the aforementioned 'ComputeCapabilitiesFilter'", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "958b04242acf4dab53565be5a21d435c75bad542", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c44ccf98", "line": 872, "range": {"start_line": 872, "start_character": 10, "end_line": 872, "end_character": 53}, "in_reply_to": "3fa7e38b_e70f9829", "updated": "2020-02-11 13:14:09.000000000", "message": "> you can use the namespaced form\n > so aggregate_instance_extra_specs:foo in the flavor\n > and in teh validator just treat aggregate_instance_extra_specs:*=*\n > as valid.\n\nYeah, that's what I've decided. If someone really wants to use the non-namespaced variant, they can disable validation.\n\n > its considered bad pratice not to use the namespaced version\n > anyway. using the unnamepsaced version breaks the compute capablity\n > filter i believe in some cases.", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "05b93bd9c2f3f648ea545d2e371e6312f1a8b6c9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c72b7c7a", "line": 872, "range": {"start_line": 872, "start_character": 10, "end_line": 872, "end_character": 53}, "in_reply_to": "3fa7e38b_e70f9829", "updated": "2020-02-10 21:00:42.000000000", "message": "actully come to think of it you proably need to  look at the filter and see if they use any other namespcaes that are not used in the drivers.\n\ne.g. aggregate_instance_extra_specs namespace is used by the AggregateInstanceExtraSpecsFilter", "commit_id": "3b0233f15772f10607caa2261195875222eb76cf"}], "setup.cfg": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b2844b816f8315997d2812847dd9eae444cc5c44", "unresolved": false, "patch_set": 22, "id": "df33271e_9fcac14c", "line": 62, "range": {"start_line": 49, "start_character": 0, "end_line": 62, "end_character": 51}, "updated": "2020-04-06 17:35:23.000000000", "message": "nit: in the docs we should use this way of doing it as the example IMO", "commit_id": "64ea3c4a1685d5cc124243a50793425002061c09"}], "tox.ini": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fa6b87a036c2e2214b552a1c200c0dac04ea2d54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2161ced4", "line": 241, "range": {"start_line": 241, "start_character": 79, "end_line": 241, "end_character": 83}, "updated": "2020-01-29 14:09:03.000000000", "message": "why we need old style classes?", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "7b5b417606125aaa06e8e3a40f4559b4d229af14", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4b59768b", "line": 241, "range": {"start_line": 241, "start_character": 79, "end_line": 241, "end_character": 83}, "in_reply_to": "3fa7e38b_13c41694", "updated": "2020-01-30 13:13:40.000000000", "message": ":( \n\n  nova/api/validation/extra_specs/base.py:23:1: H238: old style class declaration, use new style (inherit from `object`)\n\nLooks like we need to make hacking Python 3 only and drop this rule, else fix it to do different things in Python 3", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1b1f953b47d79f1f6d2bb303a101f3da417576b2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b96f325f", "line": 241, "range": {"start_line": 241, "start_character": 79, "end_line": 241, "end_character": 83}, "in_reply_to": "3fa7e38b_2161ced4", "updated": "2020-01-29 14:55:06.000000000", "message": "This was picking up [1] as what seemed like a false positive. However, maybe it'll be okay if I drop the brackets. I'll try that and remove it if so. If not, it means this hacking rule is returning a false positive.\n\n[1] https://review.opendev.org/#/c/704643/2/nova/api/validation/extra_specs/base.py@23", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "440af53994a5a5b244b94e61f315f6e9702bb4b0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_13c41694", "line": 241, "range": {"start_line": 241, "start_character": 79, "end_line": 241, "end_character": 83}, "in_reply_to": "3fa7e38b_b96f325f", "updated": "2020-01-30 09:24:02.000000000", "message": "ack", "commit_id": "4209c2c02a5c7963c457e39120350737391aa5d0"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8f2cdd638b611a24f1f20bcc9664b8afbe0490b7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_2534654a", "line": 241, "range": {"start_line": 241, "start_character": 79, "end_line": 241, "end_character": 83}, "updated": "2020-02-25 11:39:12.000000000", "message": "note to myself: hacking is broken in py3", "commit_id": "0203ca1b29d54f703bb04b8374aa8a9fdef8d3a0"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "46ee20ebf3ea31494dbbb51e057ff87f6542bdac", "unresolved": false, "patch_set": 21, "id": "df33271e_09ffa867", "line": 241, "updated": "2020-04-06 10:07:56.000000000", "message": "While I understand *why* you want to avoid H238, you should document it at least in the commit msg so that we can easily track (with a git blame) later if we want to un-ignore it.", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "afdda9f777a4c4ca7ce0b3c97b703af9cc0fd9b1", "unresolved": false, "patch_set": 21, "id": "df33271e_5f5fa20d", "line": 241, "in_reply_to": "df33271e_09ffa867", "updated": "2020-04-06 11:07:46.000000000", "message": "We won't want to unignore it. If anything, it's probably time we removed that from hacking :)", "commit_id": "e4c9d496b21cd5cb883b1d63744649698fd2cec4"}]}}, "openstack%2Fopenstacksdk~master~I1e537d9833195e67bc120df717ceb0af6e9f41fd": {"owner_id": 29236, "owner_name": "Shubham Potale", "owner_email": "Shubham.Potale@nttdata.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3085, "name": "Tushar Patil", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"openstack/nfv_orchestration/v1/_proxy.py": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_b7005202", "line": 28, "range": {"start_line": 28, "start_character": 8, "end_line": 28, "end_character": 66}, "updated": "2019-08-10 13:09:07.000000000", "message": "Let's find another way to do this. This would break the user's ability to specify an endpoint_override in their config, which should really only be used for a user to fix a broken catalog.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_f632130f", "line": 28, "range": {"start_line": 28, "start_character": 8, "end_line": 28, "end_character": 66}, "in_reply_to": "7faddb67_b7005202", "updated": "2019-08-14 16:04:11.000000000", "message": "I know this is a hack. We are implementing ETSI specs [1] which supports many interfaces which would need new endpoints but it's not possible to add so many endpoints for service 'nfv-orchestration' hence we want to specify the full qualified URLs for managing vnf packages. One way to do it was to override endpoint_override attribute.\n\nWe are looking for another work around.\n[1]https://blueprints.launchpad.net/openstack/?searchtext=tosca-csar-mgmt-driver", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "openstack/tests/functional/nfv_orchestration/v1/test_vnf_package.py": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_3791c29b", "line": 34, "updated": "2019-08-10 13:09:07.000000000", "message": "Instead of tearDown, try using self.addCleanup in setUp.\n\n  self.addCleanup(\n    self.conn.nfv_orchestration.delete_vnf_package,\n    self.vnf_package.id,\n    ignore_missing=False)\n\naddCleanup is more resilient.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_29a5de47", "line": 34, "in_reply_to": "7faddb67_3791c29b", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_57f1de00", "line": 53, "updated": "2019-08-10 13:09:07.000000000", "message": "Then here you can add another addCleanup call. That way if something in list_vnf_packages throws an exception, you won't leak a vnf_package.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_39c2db54", "line": 53, "in_reply_to": "7faddb67_57f1de00", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_97d0b655", "line": 71, "updated": "2019-08-10 13:09:07.000000000", "message": "This is a thing a user needs to do, not just a test. Look through the code for \"wait_for_delete\". If you implement that for vnf_package, then the user is happier and the test can just use it.\n\nYou'll find that uses utils.iterate_timeout - so there's no need to pull in oslo.service.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_e4004b03", "line": 71, "in_reply_to": "7faddb67_97d0b655", "updated": "2019-08-14 16:04:11.000000000", "message": "In case if we use wait_for_delete method. it will throw attribute error \n\nAttributeError: 'VnfPackage' object has no attribute 'status' \n\nHere, we are implementing ETSI specs. according to that 'status' field is not available in vnfpackage obj.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_f7b80a12", "line": 93, "updated": "2019-08-10 13:09:07.000000000", "message": "As mentioned before - we should create this zip file on the fly from the expanded files in the filesystem rather than an opaque artifact - and we should write the functional test job to do $something to ensure we can use the cirros image that's already on test nodes, but if that *doesn't* happen and someone is running things directly it should download from the cirros url.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_fffc5540", "line": 93, "in_reply_to": "7faddb67_f7b80a12", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_d7bdce02", "line": 104, "updated": "2019-08-10 13:09:07.000000000", "message": "Similarly - there should probably be a method on the resource called \"wait_for_onboarded\" as well as one on the proxy. You can look at wait_for_reservation in openstack/baremetal/v1/node.py for an example.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_1fb6118c", "line": 104, "in_reply_to": "7faddb67_d7bdce02", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "openstack/tests/unit/nfv_orchestration/v1/fake_data/sample_vnf_package.zip": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_770ada20", "updated": "2019-08-10 13:09:07.000000000", "message": "I'd really prefer we don't check in opaque binary files, it's not an awesome use of git.\n\nI think we should expand this into a subdirectory, and then have the test zip it. Also - we should make the tests download the cirros image, because it doesn't belong in the git repo - but that should also be configurable to look for an existing cirros image on the filesystem, because devstack will already have a cirros image on the filesystem we can use.\n\nTHAT SAID - this is for unittests - this doesn't need to be a valid zip file. We should be able to have the unit test create a temp file with a .zip extension, write a few bytes to it, and pass that file to the upload command. For *functional* tests, we should do the above that I mentioned, becuase I can imagine the tacker service probably wants a real zip file uploaded.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_99a66fc0", "in_reply_to": "7faddb67_770ada20", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "openstack/tests/unit/nfv_orchestration/v1/test_vnf_package.py": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_d71aae6d", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 10}, "updated": "2019-08-10 13:09:07.000000000", "message": "I'm torn on this. I like how ddt is doing what it's doing - but we're also already using testscenarios for a similar purpose. If we're going to adopt ddt, then I think we should adopt ddt and not have both in the codebase.\n\nLet's see what some of the other cores think.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_39973b48", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 10}, "in_reply_to": "7faddb67_d71aae6d", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_5720fe9b", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 15}, "updated": "2019-08-10 13:09:07.000000000", "message": "We have an infrastructure already set up for using requests_mock to mock out http interactions and then verify that they work. Search the code for self.register_uris for examples of this (there is some other code in sdk doing other things, so sorry if you followed any patterns there - those all eventually want to be converted. So let's not add new code that doesn't use the requests_mock infrastructure. What you're doing here should be generally easy to convert.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_f98e832c", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 15}, "in_reply_to": "7faddb67_5720fe9b", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_7723baa8", "line": 84, "range": {"start_line": 72, "start_character": 0, "end_line": 84, "end_character": 24}, "updated": "2019-08-10 13:09:07.000000000", "message": "can go away with r_m", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_997f4f16", "line": 84, "range": {"start_line": 72, "start_character": 0, "end_line": 84, "end_character": 24}, "in_reply_to": "7faddb67_7723baa8", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_173a86cc", "line": 100, "range": {"start_line": 90, "start_character": 0, "end_line": 100, "end_character": 55}, "updated": "2019-08-10 13:09:07.000000000", "message": "can go away with r_m", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_b9848b0c", "line": 100, "range": {"start_line": 90, "start_character": 0, "end_line": 100, "end_character": 55}, "in_reply_to": "7faddb67_173a86cc", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_d7338ef5", "line": 175, "updated": "2019-08-10 13:09:07.000000000", "message": "This would be better with a register_uris and a self.assert_calls() after. That way we can show that all of the right REST calls are made in the right order.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_597d571a", "line": 175, "in_reply_to": "7faddb67_d7338ef5", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_373a22c4", "line": 202, "updated": "2019-08-10 13:09:07.000000000", "message": "As mentioned elsewhere, we don't need to use a real zipfile for the unittest - that'll just read things into ram and then discard them. Any file with a few bytes will do for this test. See self.imagefile in openstack/tests/unit/cloud/test_image.py for an example of this.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_39709b40", "line": 202, "in_reply_to": "7faddb67_373a22c4", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "openstack/tests/unit/nfv_orchestration/v1/uuidsentinel.py": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_b777f29f", "line": 21, "range": {"start_line": 21, "start_character": 8, "end_line": 21, "end_character": 40}, "updated": "2019-08-10 13:09:07.000000000", "message": "We don't need to add oslo_utils, even as a test-only library, just to generate a uuid.\n\n  import uuid\n\n  self._sentinels[name] = uuid.uuid4().hex", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_4ffcb3b4", "line": 21, "range": {"start_line": 21, "start_character": 8, "end_line": 21, "end_character": 40}, "in_reply_to": "7faddb67_b777f29f", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_376302e0", "line": 33, "range": {"start_line": 33, "start_character": 0, "end_line": 33, "end_character": 21}, "updated": "2019-08-10 13:09:07.000000000", "message": "This is clever, but let's not inject things into sys.modules. It has the potential to be confusing when reading the code elsewhere.\n\nhow about:\n\n  sentinel = UUIDSentinels()\n\nand then in test_vnf_package.py, just:\n\nFAKE_VNF_PACKAGE_ID = uuidsentinel.sentinel.vnf_package_id", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_2f0137b0", "line": 33, "range": {"start_line": 33, "start_character": 0, "end_line": 33, "end_character": 21}, "in_reply_to": "7faddb67_376302e0", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "requirements.txt": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_f4000805", "line": 20, "range": {"start_line": 20, "start_character": 0, "end_line": 20, "end_character": 42}, "updated": "2019-08-10 13:09:07.000000000", "message": "Please no oslo libraries added to the requirements. But looking at the patch, it doesn't look like this is used anywhere but tests, so it should be fine in test-requirements.\n\nAlso - we already have code that loops waiting for things, so I don't think we need to pull in oslo.service for that.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_39a5fb9f", "line": 20, "range": {"start_line": 20, "start_character": 0, "end_line": 20, "end_character": 42}, "in_reply_to": "7faddb67_f4000805", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}], "test-requirements.txt": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "8599e38790899fff4146e943f966e0af3cfea78f", "unresolved": false, "patch_set": 3, "id": "7faddb67_d7614ed5", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 31}, "updated": "2019-08-10 13:09:07.000000000", "message": "As mentioned elsewhere, let's not add this.", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "0bf9931f49e715ab6ecf33216e057cb7d6b908c6", "unresolved": false, "patch_set": 3, "id": "7faddb67_79c85354", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 31}, "in_reply_to": "7faddb67_d7614ed5", "updated": "2019-08-14 16:04:11.000000000", "message": "Done", "commit_id": "c3ece3a4af9acfa92d9fe0259ef6513ae552e4cd"}]}}, "openstack%2Fnova~master~I493062ed0ee632a9c647cf1f3cf497eebc39c4ca": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-04-08 09:10:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 10:08:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/api/openstack/compute/shelve.py": [{"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "d4c7e244cef8187d31d85869bef17140461eec39", "unresolved": false, "patch_set": 2, "id": "df33271e_622ab47e", "line": 92, "updated": "2020-04-07 09:16:29.000000000", "message": "I think you meant to delete this call here?", "commit_id": "79607b24d95caab29d942cb42d5270bbcc29de7d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fc22cb21302646ccc37e0a99f5a69d7653b567a6", "unresolved": false, "patch_set": 2, "id": "df33271e_d18547d1", "line": 92, "in_reply_to": "df33271e_2d725d4a", "updated": "2020-04-07 14:56:05.000000000", "message": "ah sorry. thanks stephen.", "commit_id": "79607b24d95caab29d942cb42d5270bbcc29de7d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "21085fd43ddec92c6b55d42267b5401feff7b670", "unresolved": false, "patch_set": 2, "id": "df33271e_2d725d4a", "line": 92, "in_reply_to": "df33271e_622ab47e", "updated": "2020-04-07 10:08:24.000000000", "message": "Done", "commit_id": "79607b24d95caab29d942cb42d5270bbcc29de7d"}]}}, "x%2Fnetworking-opencontrail~stable%2Fqueens~I1de24a8cac948177646e7e9c54e9bc8c9218c273": {"owner_id": 31444, "owner_name": "Micha\u0142 Kowieski", "owner_email": "michal.kowieski@codilime.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29784, "name": "Adrian Szczepa\u0144ski", "email": "aszczepanski@juniper.net", "username": "adrian.szczepanski"}, {"value": 0, "_account_id": 29780, "name": "Krzysztof Gromadzki", "email": "krzysztof.gromadzki@codilime.com", "username": "kgromadzki"}, {"value": 2, "date": "2020-04-10 06:05:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}], "comments": {}}, "openstack%2Fpython-novaclient~master~I6010adbc895b4e2438f9f0729e3c89f37a69c8f8": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-10 04:39:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 2, "date": "2020-04-10 04:36:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {}}, "openstack%2Fpython-novaclient~master~Id809f22d0da2cdedf33a2c0df202f3953fd01673": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-10 04:39:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 2, "date": "2020-04-10 01:04:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {}}, "openstack%2Fkeystone~master~I72a5d461488b50f20b59d1288016514a2b8f71e5": {"owner_id": 16465, "owner_name": "Kristi Nikolla", "owner_email": "knikolla@bu.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:49:35.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 1, "date": "2020-04-10 00:49:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-04-10 00:49:35.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"api-ref/source/v3/index.rst": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "3ad1cf709b21d1f483022db268314125cc87aae6", "unresolved": false, "patch_set": 1, "id": "df33271e_ca68d388", "line": 36, "range": {"start_line": 36, "start_character": 2, "end_line": 36, "end_character": 11}, "updated": "2020-04-08 09:55:28.000000000", "message": "NIT: Doesn't sound appropriate while reading as a user. Can update it to \"Addition\" or may be we can remove it and start with ability?", "commit_id": "7bc7ebf80f6de9718ab2fe98f87325faf53ae6b4"}], "api-ref/source/v3/parameters.yaml": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "3ad1cf709b21d1f483022db268314125cc87aae6", "unresolved": false, "patch_set": 1, "id": "df33271e_aaf8efc3", "line": 1024, "range": {"start_line": 1024, "start_character": 0, "end_line": 1024, "end_character": 26}, "updated": "2020-04-08 09:55:28.000000000", "message": "Maybe we can use the following convention. Example-\n\n request_default_limit_body_not_required:\n\n[0] https://etherpad.openstack.org/p/queens-ptg-keystone-doc-cleanup", "commit_id": "7bc7ebf80f6de9718ab2fe98f87325faf53ae6b4"}], "releasenotes/notes/bug-1816076-ba39508e6ade529e.yaml": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "9a2c0f8c9dc8b7ddd20afb36af56f1f84c249d6a", "unresolved": false, "patch_set": 1, "id": "df33271e_97d1a1fe", "line": 15, "updated": "2020-04-09 22:35:14.000000000", "message": "Thanks for thinking of this", "commit_id": "7bc7ebf80f6de9718ab2fe98f87325faf53ae6b4"}]}}, "openstack%2Fneutron~stable%2Ftrain~If6a5866e4406c9c6c30e989c79ffb4ee1a88cecf": {"owner_id": 7249, "owner_name": "Ann Taraday", "owner_email": "akamyshnikova@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-08 15:43:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, {"value": 0, "_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-08 15:35:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-04-09 23:57:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 1, "date": "2020-04-08 15:23:45.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 7249, "name": "Ann Taraday", "email": "akamyshnikova@mirantis.com", "username": "AKamyshnikova"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "77a92f1f6cb2f9ab9e97a5f57e77fc6f7f0643f2", "unresolved": false, "patch_set": 3, "id": "df33271e_3b3497fb", "line": 12, "updated": "2020-04-03 16:37:43.000000000", "message": "Can you add a conflicts section?\n\nConflicts:\n    neutron/common/cache_utils.py\n\nWas it just that one file?", "commit_id": "8e3bbe530d18ebd846ecf52c7e1e9d3131807e4f"}, {"author": {"_account_id": 7249, "name": "Ann Taraday", "email": "akamyshnikova@mirantis.com", "username": "AKamyshnikova"}, "change_message_id": "643dc0f09b896b29cf20810ae1e7bea2ef016edf", "unresolved": false, "patch_set": 3, "id": "df33271e_974bd8ae", "line": 12, "in_reply_to": "df33271e_3b3497fb", "updated": "2020-04-06 07:36:10.000000000", "message": "yes, done", "commit_id": "8e3bbe530d18ebd846ecf52c7e1e9d3131807e4f"}], "neutron/common/cache_utils.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "fcf56cbd0b7eb7327733adff2bf87d82bc32f445", "unresolved": false, "patch_set": 1, "id": "df33271e_37434244", "line": 68, "updated": "2020-04-01 16:45:54.000000000", "message": "py2 doesn't like this, guess should be before *args?", "commit_id": "9d2049737b07e86e841743afcdb124ffdfee64d7"}, {"author": {"_account_id": 7249, "name": "Ann Taraday", "email": "akamyshnikova@mirantis.com", "username": "AKamyshnikova"}, "change_message_id": "26c1ee7361dd1b386a61737890e4189cba844981", "unresolved": false, "patch_set": 1, "id": "df33271e_05e6b7e8", "line": 68, "in_reply_to": "df33271e_37434244", "updated": "2020-04-02 07:53:29.000000000", "message": "Done", "commit_id": "9d2049737b07e86e841743afcdb124ffdfee64d7"}]}}, "openstack%2Fneutron~stable%2Fqueens~Ia6202610c09811f240af35e2523126447bf02ca5": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-08 15:45:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 2, "date": "2020-04-10 00:01:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}], "comments": {}}, "openstack%2Fneutron~stable%2Fstein~Ibd4ef7b0db5b6830383fffcac685b9c709aae350": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-08 11:29:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-09 23:59:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~I7077577cca54329fbcb77fbde730389835ab6497": {"owner_id": 25241, "owner_name": "waleed mousa", "owner_email": "waleedm@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 0, "_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, {"value": 0, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 2, "date": "2020-04-09 23:55:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-08 07:55:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 16690, "name": "Noam Angel", "email": "noama@nvidia.com", "username": "noama"}], "comments": {"neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py": [{"author": {"_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, "change_message_id": "a34d388efed93fa6cbcc9613c1fbdb9463ab35ec", "unresolved": false, "patch_set": 2, "id": "df33271e_ff20369e", "line": 735, "range": {"start_line": 731, "start_character": 0, "end_line": 735, "end_character": 42}, "updated": "2020-04-06 10:48:40.000000000", "message": "I had to change merge logic here with update func as ** not supported in python2", "commit_id": "c09f191419b71cd1f414ea70dd47358b49d3c390"}]}}, "openstack%2Fneutron~stable%2Fstein~I8dca2c1a2f8cb467cfb44420f0eea54ca0932b05": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 2, "date": "2020-04-08 11:25:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-09 23:55:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fpython-novaclient~master~I9033540ac65ac0ee7337f16bdd002060652092ea": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 2, "date": "2020-04-08 16:33:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 2, "date": "2020-04-08 17:31:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {"doc/source/cli/nova.rst": [{"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "675d6b4fc3eccaa7259b9773be7a55adf31e388f", "unresolved": false, "patch_set": 4, "id": "df33271e_af30ee9f", "line": 2321, "updated": "2020-04-08 17:31:20.000000000", "message": "nit: It would be better to mention the mutually exclusive with --no-config-drive.\nIt can be done in the follow-up patch.", "commit_id": "ea092b29880e71f0ba2d8e1eb93a9cf73edee2a2"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7d1815e915d4eeaeba304439030dfdfcf3011402", "unresolved": false, "patch_set": 4, "id": "df33271e_30a09af4", "line": 2321, "in_reply_to": "df33271e_af30ee9f", "updated": "2020-04-10 03:55:35.000000000", "message": "Done", "commit_id": "ea092b29880e71f0ba2d8e1eb93a9cf73edee2a2"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "675d6b4fc3eccaa7259b9773be7a55adf31e388f", "unresolved": false, "patch_set": 4, "id": "df33271e_0f28fa31", "line": 2325, "updated": "2020-04-08 17:31:20.000000000", "message": "ditto", "commit_id": "ea092b29880e71f0ba2d8e1eb93a9cf73edee2a2"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7d1815e915d4eeaeba304439030dfdfcf3011402", "unresolved": false, "patch_set": 4, "id": "df33271e_90a1a6fa", "line": 2325, "in_reply_to": "df33271e_0f28fa31", "updated": "2020-04-10 03:55:35.000000000", "message": "Done", "commit_id": "ea092b29880e71f0ba2d8e1eb93a9cf73edee2a2"}], "novaclient/tests/unit/v2/test_shell.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f5d32360e1ab9b5288a4f8a093bf658c9f7c6d99", "unresolved": false, "patch_set": 2, "id": "df33271e_83123157", "line": 1853, "range": {"start_line": 1853, "start_character": 8, "end_line": 1853, "end_character": 12}, "updated": "2020-04-08 14:14:10.000000000", "message": "test", "commit_id": "1c9bf8be110f2088ee2eb9613e9fe7dc68d0d194"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "5bdffc1779d1fb8f9172c1652fa5b7af1a460f5b", "unresolved": false, "patch_set": 2, "id": "df33271e_e3d5fd1c", "line": 1853, "range": {"start_line": 1853, "start_character": 8, "end_line": 1853, "end_character": 12}, "in_reply_to": "df33271e_83123157", "updated": "2020-04-08 14:22:26.000000000", "message": "Yeah, this has to be fixed; right now, this test won't be run because of the misspelling.", "commit_id": "1c9bf8be110f2088ee2eb9613e9fe7dc68d0d194"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b4d1bff6f6974e39573863cf51289d577a0d07a7", "unresolved": false, "patch_set": 2, "id": "df33271e_833eb126", "line": 1853, "range": {"start_line": 1853, "start_character": 8, "end_line": 1853, "end_character": 12}, "in_reply_to": "df33271e_e3d5fd1c", "updated": "2020-04-08 14:37:54.000000000", "message": "Done", "commit_id": "1c9bf8be110f2088ee2eb9613e9fe7dc68d0d194"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9c570bac36ba1070b468cace8275cd7bb5f4a7e6", "unresolved": false, "patch_set": 3, "id": "df33271e_c391d848", "line": 1855, "range": {"start_line": 1855, "start_character": 64, "end_line": 1855, "end_character": 69}, "updated": "2020-04-08 15:02:26.000000000", "message": "This makes a suggestion how to fix our API bug in https://bugs.launchpad.net/nova/+bug/1871409 But if we diverge there then we can still update the client code to send whatever that will represent the no-config-drive option", "commit_id": "0a3582a8d99959b8dd321fc097f99af9e1d2fa84"}], "novaclient/v2/servers.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f5d32360e1ab9b5288a4f8a093bf658c9f7c6d99", "unresolved": false, "patch_set": 2, "id": "df33271e_e32a1d7c", "line": 897, "range": {"start_line": 897, "start_character": 14, "end_line": 897, "end_character": 20}, "updated": "2020-04-08 14:14:10.000000000", "message": "fix", "commit_id": "1c9bf8be110f2088ee2eb9613e9fe7dc68d0d194"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b4d1bff6f6974e39573863cf51289d577a0d07a7", "unresolved": false, "patch_set": 2, "id": "df33271e_2338853b", "line": 897, "range": {"start_line": 897, "start_character": 14, "end_line": 897, "end_character": 20}, "in_reply_to": "df33271e_e32a1d7c", "updated": "2020-04-08 14:37:54.000000000", "message": "Done", "commit_id": "1c9bf8be110f2088ee2eb9613e9fe7dc68d0d194"}], "novaclient/v2/shell.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "7bc5c03ab3a45c4d13fc785795a55afe1e8aed68", "unresolved": false, "patch_set": 3, "id": "df33271e_63e60c19", "line": 1561, "range": {"start_line": 1554, "start_character": 0, "end_line": 1561, "end_character": 44}, "updated": "2020-04-08 14:48:09.000000000", "message": "as it would not work for now, should we just not expose this ? i mean only add --config-drive. and once we fix the it on API side then we expose.\n\nor we should mention something in help of this option so that it would not give false result to users which is un-filtered servers list.", "commit_id": "0a3582a8d99959b8dd321fc097f99af9e1d2fa84"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9c570bac36ba1070b468cace8275cd7bb5f4a7e6", "unresolved": false, "patch_set": 3, "id": "df33271e_a3abf41a", "line": 1669, "updated": "2020-04-08 15:02:26.000000000", "message": "I guess we need to make --no-config-drive and --config-drive mutually exclusive", "commit_id": "0a3582a8d99959b8dd321fc097f99af9e1d2fa84"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "581c8bf2feb7d6572147882d2331069d278ad5c3", "unresolved": false, "patch_set": 3, "id": "df33271e_a6dae213", "line": 1669, "in_reply_to": "df33271e_a3abf41a", "updated": "2020-04-08 15:35:02.000000000", "message": "I agree, but I don't think I can do that with the weird argparse decorators we use :( Will investigate", "commit_id": "0a3582a8d99959b8dd321fc097f99af9e1d2fa84"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "02c7a10d2631c3cc421b522d249c76bb2b769c9d", "unresolved": false, "patch_set": 3, "id": "df33271e_78eb53db", "line": 1669, "in_reply_to": "df33271e_a6dae213", "updated": "2020-04-08 16:29:39.000000000", "message": "Figured it out", "commit_id": "0a3582a8d99959b8dd321fc097f99af9e1d2fa84"}]}}, "openstack%2Fironic~master~I6ed350b7b6039923e65711d792777f9b75f1eab3": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I28e38b71940c1f8370b3b72d00ef940dbf6791a0": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Fnova~master~Ia66d3a1ceb74ed521cf44922929b2a502f3ee935": {"owner_id": 28595, "owner_name": "Victor Coutellier", "owner_email": "victor.coutellier@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 12:20:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:19:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-03-16 07:37:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b572c806ef8082974c0a11f56c4abf7e38bd70cb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ebd97054", "line": 21, "range": {"start_line": 21, "start_character": 12, "end_line": 21, "end_character": 43}, "updated": "2020-01-08 21:12:05.000000000", "message": "If you say\n\n blueprint non-admin-filter-instance-by-az\n\ngerrit will render a hyperlink, making the actual blueprint ([1] fmr) easier to find.\n\n[1] https://blueprints.launchpad.net/nova/+spec/non-admin-filter-instance-by-az", "commit_id": "311ccf540e86b7437123afe371ec48dfab8b3760"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e67c194677ce6aec76c08e4321c9d868f9b3c83e", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_45a396b1", "line": 10, "range": {"start_line": 10, "start_character": 2, "end_line": 10, "end_character": 19}, "updated": "2020-01-31 02:49:37.000000000", "message": "From the spec, there are need to change below parameters to all non-admin to filter instances.\n\n- ``availability_zone``\n- ``config_drive``\n- ``key_name``\n- ``created_at``\n- ``launched_at``\n- ``terminated_at``\n- ``power_state``\n- ``task_state``\n- ``vm_state``\n- ``progress``\n- ``user_id``\n\nThis patch need to be update.", "commit_id": "f8adfea9541a832ce09481a406453327efc71bbb"}], "api-ref/source/parameters.yaml": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5f9f1a4d", "line": 421, "range": {"start_line": 420, "start_character": 66, "end_line": 421, "end_character": 21}, "updated": "2020-02-13 17:27:38.000000000", "message": "it sounds after 2.82 admin also cannot use this.\n\n.. and after 2.82, it is valid for non-admin users too.", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9fc27234", "line": 584, "range": {"start_line": 584, "start_character": 21, "end_line": 584, "end_character": 23}, "updated": "2020-02-13 17:27:38.000000000", "message": "ditto", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_1fdc4215", "line": 603, "range": {"start_line": 603, "start_character": 21, "end_line": 603, "end_character": 22}, "updated": "2020-02-13 17:27:38.000000000", "message": "ditto", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_bfde4e0c", "line": 895, "range": {"start_line": 895, "start_character": 21, "end_line": 895, "end_character": 22}, "updated": "2020-02-13 17:27:38.000000000", "message": "ditto", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "63bde46348b2e3b9a2bad78acfe7457241c97c61", "unresolved": false, "patch_set": 9, "id": "df33271e_ce513ddb", "line": 420, "range": {"start_line": 420, "start_character": 0, "end_line": 420, "end_character": 1}, "updated": "2020-03-24 17:19:34.000000000", "message": "This is confusingly worded. I know what you were going for but it's fixed in 2.83. Consider:\n\n  This parameter is restricted to administrators until microversion 2.83.\n  If non-admin users specify this parameter on a microversion less than 2.83,\n  it will be ignored.", "commit_id": "4018d6fb71a4e5bb0554ac36479cb217f55a6fcf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5d496417b7a3782c6ba20460f7d50b37e7e770d5", "unresolved": false, "patch_set": 9, "id": "df33271e_d03b2ece", "line": 420, "range": {"start_line": 420, "start_character": 0, "end_line": 420, "end_character": 1}, "in_reply_to": "df33271e_ce513ddb", "updated": "2020-04-10 03:46:45.000000000", "message": "Done", "commit_id": "4018d6fb71a4e5bb0554ac36479cb217f55a6fcf"}], "doc/source/contributor/microversions.rst": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fe023a276cb2d1f8d2dc4c2af913340daeb28a34", "unresolved": false, "patch_set": 8, "id": "1fa4df85_80019e07", "line": 376, "range": {"start_line": 375, "start_character": 45, "end_line": 376, "end_character": 35}, "updated": "2020-03-10 17:33:35.000000000", "message": "This is not needed for all cases, like this change where we are changing the sample response but changing the access permission. \n\nI will suggest adding this as a separate item :\n\n* If applicable, add Functional sample tests under ``nova/tests/functional/api_sample_tests``. Also, add JSON examples to ``doc/api_samples`` directory which can be generated automatically via tox env ``api-samples`` or run test with env var ``GENERATE_SAMPLES`` True.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "7d830e377cafde6460fee6ff3909011f2895c7c3", "unresolved": false, "patch_set": 8, "id": "1fa4df85_67c1cf2e", "line": 376, "range": {"start_line": 375, "start_character": 45, "end_line": 376, "end_character": 35}, "in_reply_to": "1fa4df85_80019e07", "updated": "2020-03-15 16:35:13.000000000", "message": "Done", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "d2ea62fd552a6ceff457ae3eb17d1cd0dbffe713", "unresolved": false, "patch_set": 9, "id": "1fa4df85_d1c4fc42", "line": 386, "range": {"start_line": 386, "start_character": 2, "end_line": 386, "end_character": 3}, "updated": "2020-03-16 07:37:33.000000000", "message": "nit: ``api-guide/source/server_concepts.rst``", "commit_id": "4018d6fb71a4e5bb0554ac36479cb217f55a6fcf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5d496417b7a3782c6ba20460f7d50b37e7e770d5", "unresolved": false, "patch_set": 9, "id": "df33271e_b0382ad3", "line": 386, "range": {"start_line": 386, "start_character": 2, "end_line": 386, "end_character": 3}, "in_reply_to": "1fa4df85_d1c4fc42", "updated": "2020-04-10 03:46:45.000000000", "message": "Done", "commit_id": "4018d6fb71a4e5bb0554ac36479cb217f55a6fcf"}], "nova/api/openstack/api_version_request.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_7a9304a5", "line": 222, "range": {"start_line": 222, "start_character": 30, "end_line": 222, "end_character": 35}, "updated": "2020-02-13 17:27:38.000000000", "message": "this is not changing the sort kye. newly added keys are already in valid sort key list- https://github.com/openstack/nova/blob/0d3aeb0287a0619695c9b9e17c2dec49099876a5/nova/api/openstack/compute/schemas/servers.py#L546", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}], "nova/api/openstack/compute/rest_api_version_history.rst": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_fae4d443", "line": 1086, "range": {"start_line": 1086, "start_character": 40, "end_line": 1086, "end_character": 44}, "updated": "2020-02-13 17:27:38.000000000", "message": "ditto", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}], "nova/api/openstack/compute/servers.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b572c806ef8082974c0a11f56c4abf7e38bd70cb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8b923c57", "line": 1273, "updated": "2020-01-08 21:12:05.000000000", "message": "I don't think you can do this without a microversion. You'll probably need to add one, with a conditional like those below.", "commit_id": "311ccf540e86b7437123afe371ec48dfab8b3760"}], "nova/tests/unit/api/openstack/compute/test_serversV21.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fe023a276cb2d1f8d2dc4c2af913340daeb28a34", "unresolved": false, "patch_set": 8, "id": "1fa4df85_0097ee49", "line": 2751, "range": {"start_line": 2751, "start_character": 0, "end_line": 2751, "end_character": 67}, "updated": "2020-03-10 17:33:35.000000000", "message": "you should not need to change this policy. It defaults to admin or owner so non-admin users which are owner of instance should be able to pass this checks.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "7d830e377cafde6460fee6ff3909011f2895c7c3", "unresolved": false, "patch_set": 8, "id": "1fa4df85_c7a9a390", "line": 2751, "range": {"start_line": 2751, "start_character": 0, "end_line": 2751, "end_character": 67}, "in_reply_to": "1fa4df85_0097ee49", "updated": "2020-03-15 16:35:13.000000000", "message": "Indeed the test still work without policy change, but it will for any filter even admin-only (see my other comment about that)", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fe023a276cb2d1f8d2dc4c2af913340daeb28a34", "unresolved": false, "patch_set": 8, "id": "1fa4df85_e0973244", "line": 2754, "range": {"start_line": 2754, "start_character": 0, "end_line": 2754, "end_character": 43}, "updated": "2020-03-10 17:33:35.000000000", "message": "we need to test the same for all newly allowed filters. may we run the below code for each new filter in loop.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "7d830e377cafde6460fee6ff3909011f2895c7c3", "unresolved": false, "patch_set": 8, "id": "1fa4df85_47c85373", "line": 2754, "range": {"start_line": 2754, "start_character": 0, "end_line": 2754, "end_character": 43}, "in_reply_to": "1fa4df85_e0973244", "updated": "2020-03-15 16:35:13.000000000", "message": "Done", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fe023a276cb2d1f8d2dc4c2af913340daeb28a34", "unresolved": false, "patch_set": 8, "id": "1fa4df85_00804ef4", "line": 2761, "range": {"start_line": 2761, "start_character": 0, "end_line": 2761, "end_character": 0}, "updated": "2020-03-10 17:33:35.000000000", "message": "we need to add tests showing that all newly added filters are not allowed for non-admin users if the request if with 2.82 microversion. \n\nYou can make req with version='2.82' and check 400 is return or not.\n\ntest_get_servers_new_filters_for_non_admin_old_version\n\nThat will show we are not breaking old microversions.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "7d830e377cafde6460fee6ff3909011f2895c7c3", "unresolved": false, "patch_set": 8, "id": "1fa4df85_a7cb4770", "line": 2761, "range": {"start_line": 2761, "start_character": 0, "end_line": 2761, "end_character": 0}, "in_reply_to": "1fa4df85_00804ef4", "updated": "2020-03-15 16:35:13.000000000", "message": "Admin only filter used by user does not return a 400 but is just ignored.\n\nI add the test but if I don't do a policy change, test are failing I don't know why", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "fe023a276cb2d1f8d2dc4c2af913340daeb28a34", "unresolved": false, "patch_set": 8, "id": "1fa4df85_80bafebd", "line": 2762, "range": {"start_line": 2762, "start_character": 8, "end_line": 2762, "end_character": 54}, "updated": "2020-03-10 17:33:35.000000000", "message": "this test is not needed as such. 'node' filter not allowed is checked by existing tests.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "7d830e377cafde6460fee6ff3909011f2895c7c3", "unresolved": false, "patch_set": 8, "id": "1fa4df85_e7b93fe9", "line": 2762, "range": {"start_line": 2762, "start_character": 8, "end_line": 2762, "end_character": 54}, "in_reply_to": "1fa4df85_80bafebd", "updated": "2020-03-15 16:35:13.000000000", "message": "Actually I didn't find this case in existing tests, the only test is \"test_get_servers_admin_filters_as_user\", and it only test for unknown_option, not admin_only one.\n\nAnd even more surprising, if you edit the test for checking admin_only filter without policy change, then the test fail, meaning that the admin_only filter work as user.", "commit_id": "f44a0dd56833274a440672716158ea9b8bd2e77d"}], "releasenotes/notes/allow-non-admin-filter-instance-more-filter-ea5abad7c32ff328.yaml": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8bd354804837d3f9726a0678d123501fe11b4f9", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_baeadc09", "line": 4, "range": {"start_line": 4, "start_character": 46, "end_line": 4, "end_character": 50}, "updated": "2020-02-13 17:27:38.000000000", "message": "ditto", "commit_id": "66e0f9fbc9e9a440c448f15ba588a45d306c7ea8"}]}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~Ifbad7787a54b3508e778b30d8d6d1f5cc9dc06db": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:18:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "zuul%2Fzuul-operator~master~I168128e543e03935c03ab9547f208f18e432e0fc": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-04-06 20:59:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-04-09 15:43:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fcyborg-tempest-plugin~master~Id4817c9b25e77000acdebe2a116a32b77b33d24a": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-04-09 07:16:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 2, "date": "2020-04-10 02:14:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 30759, "name": "Shogo Saito", "email": "shogo.saito.ac@hco.ntt.co.jp", "username": "s.shogo"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 0, "_account_id": 13629, "name": "Zhipeng", "email": "huangzhipeng@huawei.com", "username": "zhipengh"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 17813, "name": "wangzhh", "email": "wangzhengh@chinatelecom.cn", "username": "wangzhh"}, {"value": 0, "_account_id": 25847, "name": "zhuli", "email": "zhuli2317@gmail.com", "username": "zhuli"}, {"value": 1, "date": "2020-04-07 04:48:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, {"value": 0, "_account_id": 22899, "name": "coco-Gao", "email": "419546439@qq.com", "username": "Coco"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"setup.cfg": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "7f594c5817e3c3b2204df2f9162838e689569a4b", "unresolved": false, "patch_set": 1, "id": "df33271e_a36222d7", "line": 37, "range": {"start_line": 35, "start_character": 0, "end_line": 37, "end_character": 24}, "updated": "2020-04-05 18:52:42.000000000", "message": "remove as well", "commit_id": "177d8b8729c63f277ac9c2e9991a9a8608d0ead8"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "87d24d48608ff1620f60b87294dc71c1a70d49b7", "unresolved": false, "patch_set": 1, "id": "df33271e_a3ecc7f3", "line": 37, "range": {"start_line": 35, "start_character": 0, "end_line": 37, "end_character": 24}, "in_reply_to": "df33271e_a36222d7", "updated": "2020-04-07 03:18:04.000000000", "message": "Done", "commit_id": "177d8b8729c63f277ac9c2e9991a9a8608d0ead8"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2bf1947cbd52eddad957b1f8f74cababab2abf3d", "unresolved": false, "patch_set": 1, "id": "df33271e_8331deef", "line": 45, "range": {"start_line": 44, "start_character": 0, "end_line": 45, "end_character": 13}, "updated": "2020-04-05 18:46:58.000000000", "message": "we can remove this too", "commit_id": "177d8b8729c63f277ac9c2e9991a9a8608d0ead8"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "87d24d48608ff1620f60b87294dc71c1a70d49b7", "unresolved": false, "patch_set": 1, "id": "df33271e_43b5fbed", "line": 45, "range": {"start_line": 44, "start_character": 0, "end_line": 45, "end_character": 13}, "in_reply_to": "df33271e_8331deef", "updated": "2020-04-07 03:18:04.000000000", "message": "Done", "commit_id": "177d8b8729c63f277ac9c2e9991a9a8608d0ead8"}]}}, "openstack%2Fironic~master~Idc28812515a0f45e9e29b55cd81ef26a02ce8740": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 12:22:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-09 08:24:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}], "comments": {}}, "openstack%2Fcyborg~master~I45549fc5276c091ca585652b11836b967cb239e3": {"owner_id": 25738, "owner_name": "Xinran WANG", "owner_email": "xin-ran.wang@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-04-09 07:12:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 2, "date": "2020-04-10 01:26:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 23168, "name": "Yumeng Bao", "username": "Yumeng", "inactive": true}], "comments": {"api-ref/source/v2/deployables.inc": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_45d27f29", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 26}, "updated": "2020-04-02 09:29:27.000000000", "message": "This is necessary? I think we can remove this.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_ce313def", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 26}, "in_reply_to": "df33271e_45d27f29", "updated": "2020-04-06 15:36:57.000000000", "message": "Not sure what's this used for. I just do like other inc file's head. If we agree to remove this, I will update it.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_e55bd3f2", "line": 4, "updated": "2020-04-02 09:29:27.000000000", "message": "Do we need add the PATCH api? I saw Shogo will add this PATCH API in https://review.opendev.org/#/c/698190/1/cyborg/api/controllers/v2/deployables.py@197\n\nI prefer change PATCH to PUT method.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_eb587357", "line": 4, "in_reply_to": "df33271e_e55bd3f2", "updated": "2020-04-06 15:36:57.000000000", "message": "We can update the doc after Program API done.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_a5a6ebbf", "line": 45, "range": {"start_line": 45, "start_character": 20, "end_line": 45, "end_character": 23}, "updated": "2020-04-02 09:29:27.000000000", "message": "s/get/show", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "api-ref/source/v2/devices.inc": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_45755ef9", "line": 22, "range": {"start_line": 22, "start_character": 29, "end_line": 22, "end_character": 35}, "updated": "2020-04-02 09:29:27.000000000", "message": "s/device/devices", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_c5816ec5", "line": 44, "range": {"start_line": 44, "start_character": 20, "end_line": 44, "end_character": 23}, "updated": "2020-04-02 09:29:27.000000000", "message": "s/get/show", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/deployables/deployable-create-resp.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_0506b652", "updated": "2020-04-02 09:29:27.000000000", "message": "You removed this deployable create response, I know we removed this api, so I think you should add some details in commit messages.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/deployables/deployable-patch-curl.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_682dd793", "updated": "2020-04-02 09:29:27.000000000", "message": "And also need some details in commit message.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/deployables/deployable-post-curl.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_c820639e", "updated": "2020-04-02 09:29:27.000000000", "message": "And also need some details in commit message.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/deployables/deployable-update-resp.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_e81e070a", "side": "PARENT", "updated": "2020-04-02 09:29:27.000000000", "message": "In a response file, we should keep there is only have one response body in it, for each microversion there will be have one file to match it if the response body changed.", "commit_id": "07db145919a3b50c6d9627f1191965287b5d8367"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_e870c774", "updated": "2020-04-02 09:29:27.000000000", "message": "Maybe we can update this for the new PUT deployable API.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_2e9a69c4", "in_reply_to": "df33271e_e870c774", "updated": "2020-04-06 15:36:57.000000000", "message": "I think we can update this part after the Program API landed.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/deployables/deployables-list-resp.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_481a9316", "line": 10, "range": {"start_line": 10, "start_character": 24, "end_line": 10, "end_character": 25}, "updated": "2020-04-02 09:29:27.000000000", "message": "redundant white space.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_2e838958", "line": 10, "range": {"start_line": 10, "start_character": 24, "end_line": 10, "end_character": 25}, "in_reply_to": "df33271e_481a9316", "updated": "2020-04-06 15:36:57.000000000", "message": "Done", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_e8e3a703", "line": 27, "range": {"start_line": 26, "start_character": 8, "end_line": 27, "end_character": 50}, "updated": "2020-04-02 09:29:27.000000000", "message": "nit: we can move this to L16, above \"links\".", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_0e88456f", "line": 27, "range": {"start_line": 26, "start_character": 8, "end_line": 27, "end_character": 50}, "in_reply_to": "df33271e_e8e3a703", "updated": "2020-04-06 15:36:57.000000000", "message": "Done", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/devices/devices-getone-resp.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_48ef33e8", "line": 17, "range": {"start_line": 16, "start_character": 4, "end_line": 17, "end_character": 22}, "updated": "2020-04-02 09:29:27.000000000", "message": "nit: move this to L9, above links.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "12e7fac0b83ad2a5d1030ed543c24314c1bae0d5", "unresolved": false, "patch_set": 2, "id": "df33271e_ee908198", "line": 17, "range": {"start_line": 16, "start_character": 4, "end_line": 17, "end_character": 22}, "in_reply_to": "df33271e_48ef33e8", "updated": "2020-04-06 15:36:57.000000000", "message": "Done", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}], "doc/api_samples/devices/devices-list-resp.json": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_68c15754", "line": 2, "range": {"start_line": 2, "start_character": 14, "end_line": 2, "end_character": 15}, "updated": "2020-04-02 09:29:27.000000000", "message": "redundant white space.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9df2e3da95d89c931fb2358c9fc92e3668911fd4", "unresolved": false, "patch_set": 2, "id": "df33271e_28eaafd6", "line": 20, "range": {"start_line": 19, "start_character": 12, "end_line": 20, "end_character": 30}, "updated": "2020-04-02 09:29:27.000000000", "message": "ditto.", "commit_id": "002596446393b9c31d885934bfc88d3aec5a9803"}]}}, "openstack%2Freleases~master~I6702f1cb82213687a0af664eb2263763302e1a91": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 1, "date": "2020-04-09 20:17:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-10 01:36:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-09 20:26:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {}}, "openstack%2Freleases~master~Id063eefc507a8e8771b675fcd2009117c1a5ca3f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deliverables/ussuri/python-tripleoclient.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "ac4c0b1d0ec5fca9410624c8e4ad07c26ef556d1", "unresolved": false, "patch_set": 1, "id": "df33271e_f3cfa554", "line": 18, "range": {"start_line": 18, "start_character": 13, "end_line": 18, "end_character": 19}, "updated": "2020-04-07 22:42:36.000000000", "message": "I wasn't sure on this version numbering based on the long list of merges. Please validate this is appropriate and whether 14.0.0 would be better.", "commit_id": "185ce582151cd7baf6f5fc9c0228ee38c3088a3b"}]}}, "openstack%2Freleases~master~I4daab6bd6969795b435c2848bb7e8f45fab9c873": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "zuul%2Fzuul~master~I5d9f9509542e8ef6c062abb5bf417516995efb3c": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-11 16:24:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-11 16:38:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-11 16:23:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "zuul%2Fzuul~master~I30857c89de5927223d75e6f27877ccfa70005a59": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-04-03 14:28:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-10 18:03:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-10 18:05:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"doc/source/reference/developer/specs/kubernetes-operator.rst": [{"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "933d63106d12afbc446645fa4cd938062989a69a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_984f1e8c", "line": 369, "range": {"start_line": 369, "start_character": 4, "end_line": 369, "end_character": 15}, "updated": "2020-02-11 08:02:42.000000000", "message": "Do we want it like this or change it to jobVolumes which would fit into the naming style of standard kubernetes definitions?", "commit_id": "a5aa272dfe976cf18b13a408c30762ac91248325"}, {"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "fd3bf7bf0a7762333a14ed990cd9262dc4bd7b93", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_907a8e24", "line": 369, "range": {"start_line": 369, "start_character": 4, "end_line": 369, "end_character": 15}, "in_reply_to": "3fa7e38b_6dc37f3a", "updated": "2020-02-11 14:30:41.000000000", "message": "If we want to stick to k8s habits then it would make sense (if it's not too much effort).", "commit_id": "a5aa272dfe976cf18b13a408c30762ac91248325"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "0ce70feb13e20bf1a6fef58ae4edb5e4782ed56c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fe45d39c", "line": 369, "range": {"start_line": 369, "start_character": 4, "end_line": 369, "end_character": 15}, "in_reply_to": "3fa7e38b_907a8e24", "updated": "2020-02-11 16:25:04.000000000", "message": "Alright, I proposed that in https://review.opendev.org/707190 and implementation in https://review.opendev.org/707193", "commit_id": "a5aa272dfe976cf18b13a408c30762ac91248325"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "939958ce80ee678221f9e2c1680a95c4f1a0be4c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_be5c3b80", "line": 369, "range": {"start_line": 369, "start_character": 4, "end_line": 369, "end_character": 15}, "in_reply_to": "3fa7e38b_907a8e24", "updated": "2020-02-11 16:24:35.000000000", "message": "I think changing now before this is heavily in use would be best.", "commit_id": "a5aa272dfe976cf18b13a408c30762ac91248325"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "1cba2c20ab676352ca147591575672ffbd48c519", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6dc37f3a", "line": 369, "range": {"start_line": 369, "start_character": 4, "end_line": 369, "end_character": 15}, "in_reply_to": "3fa7e38b_984f1e8c", "updated": "2020-02-11 13:39:49.000000000", "message": "I don't mind, i picked snake case to match `external_config`. Thus should we also rename it externalConfig ?", "commit_id": "a5aa272dfe976cf18b13a408c30762ac91248325"}]}}, "openstack%2Fcyborg~master~I4d015b3723fb13c361cefe5eee6607f9cbe8f65d": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 10:45:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-04-10 01:08:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}], "comments": {}}, "openstack%2Fpython-tackerclient~master~I7a43ff6d91bad919dcaa450e66ef492a1d3a03ef": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-10 01:07:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}], "comments": {}}, "openstack%2Freleases~master~I59860e37e5b9428e323c40755fa1be6d52430038": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 13629, "name": "Zhipeng", "email": "huangzhipeng@huawei.com", "username": "zhipengh"}, {"value": 1, "date": "2020-04-10 00:43:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 30759, "name": "Shogo Saito", "email": "shogo.saito.ac@hco.ntt.co.jp", "username": "s.shogo"}, {"value": 2, "date": "2020-04-10 00:44:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-novaclient~master~I1fc64fb6e6611c92c6b72265e1bf4b32e9c45f0a": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 08:25:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-04-09 08:56:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 2, "date": "2020-04-09 04:17:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e1e71e3291f31a6b12a04c07017910d90b5b0d09", "unresolved": false, "patch_set": 1, "id": "1fa4df85_d450930d", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 21}, "updated": "2020-03-12 11:01:56.000000000", "message": "the user", "commit_id": "64fee588af5b1d25dfdf8d8dc0638a01f2a23b34"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d9ac847b2aa7ba6a5de28d0251a194ac83534ef", "unresolved": false, "patch_set": 4, "id": "1fa4df85_fcf776d3", "line": 14, "updated": "2020-03-17 12:51:26.000000000", "message": "Depends-On: https://review.opendev.org/#/c/693828/", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e93f20a34b5718f28847263ad122030d0b47ae9d", "unresolved": false, "patch_set": 13, "id": "df33271e_4eb87729", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 50}, "updated": "2020-04-07 11:36:53.000000000", "message": "Does this really depend on this change?\n\nThis is still usable by admins until that change lands so I'd think we could just land this novaclient change ahead of these policy changes?", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "36bd1d8c888213239c3cf37d604e163abe28f2a0", "unresolved": false, "patch_set": 13, "id": "df33271e_427b2bbd", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 50}, "in_reply_to": "df33271e_4eb87729", "updated": "2020-04-07 12:49:41.000000000", "message": "Done", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "3bef39c0c0a119d867b9ff04e76c63262a03268e", "unresolved": false, "patch_set": 15, "id": "df33271e_af212150", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 50}, "updated": "2020-04-08 09:02:35.000000000", "message": "It's still not clear to me if this really depends on this change or if it would just be nice to have for this be in place.", "commit_id": "efa734744d63a5ad345a744a10432f6d139c0df6"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "605b2d3b361b5722aa905a4b84909c7e2aac203b", "unresolved": false, "patch_set": 15, "id": "df33271e_efacc98d", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 50}, "in_reply_to": "df33271e_af212150", "updated": "2020-04-08 09:11:16.000000000", "message": "IT's not needed. We can drop this now, IMO", "commit_id": "efa734744d63a5ad345a744a10432f6d139c0df6"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "93cfc110d5ec265038436ccf57fefdf09f8f2da2", "unresolved": false, "patch_set": 17, "id": "df33271e_6c72744b", "line": 10, "range": {"start_line": 10, "start_character": 21, "end_line": 10, "end_character": 70}, "updated": "2020-04-08 17:09:06.000000000", "message": "This isn't true any more:\n\n  [--[no-]delete-on-termination]", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_60bf0caa", "line": 10, "range": {"start_line": 10, "start_character": 21, "end_line": 10, "end_character": 70}, "in_reply_to": "df33271e_6c72744b", "updated": "2020-04-09 00:24:26.000000000", "message": "Done", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}], "doc/source/cli/nova.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "10ea8f295339d67e587675c89701bb2c27bec799", "unresolved": false, "patch_set": 8, "id": "df33271e_326fd9fc", "line": 3964, "range": {"start_line": 3964, "start_character": 2, "end_line": 3964, "end_character": 25}, "updated": "2020-04-01 12:33:42.000000000", "message": "s/--delete-on-termination/--delete-on-termination <delete-on-termination>/", "commit_id": "59a674a59794aca3652bb5f2d158c35004742a9a"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_23a885d9", "line": 3964, "range": {"start_line": 3964, "start_character": 0, "end_line": 3964, "end_character": 51}, "updated": "2020-04-08 14:18:12.000000000", "message": "Instead of doing this, can we do a boolean option?\n\n  --delete-on-termination\n  --no-delete-on-termination\n\nSee [1] for an example.\n\n[1] https://review.opendev.org/#/c/718349/", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_0ca5a804", "line": 3964, "range": {"start_line": 3964, "start_character": 0, "end_line": 3964, "end_character": 51}, "in_reply_to": "df33271e_23a885d9", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_437029a6", "line": 3965, "range": {"start_line": 3965, "start_character": 52, "end_line": 3965, "end_character": 58}, "updated": "2020-04-08 14:18:12.000000000", "message": "should", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_eca7a40a", "line": 3965, "range": {"start_line": 3965, "start_character": 52, "end_line": 3965, "end_character": 58}, "in_reply_to": "df33271e_437029a6", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "93cfc110d5ec265038436ccf57fefdf09f8f2da2", "unresolved": false, "patch_set": 17, "id": "df33271e_0c5c887c", "line": 3947, "range": {"start_line": 3947, "start_character": 30, "end_line": 3947, "end_character": 77}, "updated": "2020-04-08 17:09:06.000000000", "message": "Replace with\n\n  [--[no-]delete-on-termination]", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_40a3e89e", "line": 3947, "range": {"start_line": 3947, "start_character": 30, "end_line": 3947, "end_character": 77}, "in_reply_to": "df33271e_0c5c887c", "updated": "2020-04-09 00:24:26.000000000", "message": "Done", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_00fd606d", "line": 3948, "range": {"start_line": 3948, "start_character": 56, "end_line": 3948, "end_character": 61}, "updated": "2020-04-09 00:24:26.000000000", "message": "volume", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_a00bd48b", "line": 3948, "range": {"start_line": 3948, "start_character": 43, "end_line": 3948, "end_character": 48}, "updated": "2020-04-09 00:24:26.000000000", "message": "volume", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "93cfc110d5ec265038436ccf57fefdf09f8f2da2", "unresolved": false, "patch_set": 17, "id": "df33271e_2c9d0c57", "line": 3967, "range": {"start_line": 3967, "start_character": 25, "end_line": 3967, "end_character": 49}, "updated": "2020-04-08 17:09:06.000000000", "message": "drop", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_20a06490", "line": 3967, "range": {"start_line": 3967, "start_character": 25, "end_line": 3967, "end_character": 49}, "in_reply_to": "df33271e_2c9d0c57", "updated": "2020-04-09 00:24:26.000000000", "message": "Done", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "93cfc110d5ec265038436ccf57fefdf09f8f2da2", "unresolved": false, "patch_set": 17, "id": "df33271e_8cac188d", "line": 3971, "range": {"start_line": 3971, "start_character": 28, "end_line": 3971, "end_character": 52}, "updated": "2020-04-08 17:09:06.000000000", "message": "drop", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_80a9707d", "line": 3971, "range": {"start_line": 3971, "start_character": 28, "end_line": 3971, "end_character": 52}, "in_reply_to": "df33271e_8cac188d", "updated": "2020-04-09 00:24:26.000000000", "message": "Done", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "9ac9e247246b36bd215fdc8988d5586fb9d762cb", "unresolved": false, "patch_set": 19, "id": "df33271e_5ad0f41f", "line": 3969, "updated": "2020-04-09 04:17:02.000000000", "message": "nit: It would be better to mention the mutual exclusion with '--no-delete-on-termination'.", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "994f7b7dd2dfd593d3080433cd229e7f5542d920", "unresolved": false, "patch_set": 19, "id": "df33271e_cd6a767f", "line": 3969, "in_reply_to": "df33271e_5ad0f41f", "updated": "2020-04-10 00:43:50.000000000", "message": "Done", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "9ac9e247246b36bd215fdc8988d5586fb9d762cb", "unresolved": false, "patch_set": 19, "id": "df33271e_3acd3085", "line": 3973, "updated": "2020-04-09 04:17:02.000000000", "message": "ditto", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "994f7b7dd2dfd593d3080433cd229e7f5542d920", "unresolved": false, "patch_set": 19, "id": "df33271e_ad6732b7", "line": 3973, "in_reply_to": "df33271e_3acd3085", "updated": "2020-04-10 00:43:50.000000000", "message": "Done", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}], "novaclient/base.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e1e71e3291f31a6b12a04c07017910d90b5b0d09", "unresolved": false, "patch_set": 1, "id": "1fa4df85_b474f79d", "line": 391, "range": {"start_line": 391, "start_character": 8, "end_line": 391, "end_character": 48}, "updated": "2020-03-12 11:01:56.000000000", "message": "for debug, will remove in next patch", "commit_id": "64fee588af5b1d25dfdf8d8dc0638a01f2a23b34"}], "novaclient/tests/unit/v2/test_shell.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6a4ecc0fd74ebfcd8b5f773caa3a9d6e8855b4c7", "unresolved": false, "patch_set": 13, "id": "df33271e_334ac0ab", "line": 4011, "range": {"start_line": 4006, "start_character": 0, "end_line": 4011, "end_character": 70}, "updated": "2020-04-07 11:31:57.000000000", "message": "You also want to assert that this doesn't change in 2.85 without --delete-on-termination right?", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "50c732ccba2ed3e4522cc1a471636e38969ce0b3", "unresolved": false, "patch_set": 13, "id": "df33271e_ce5be784", "line": 4011, "range": {"start_line": 4006, "start_character": 0, "end_line": 4011, "end_character": 70}, "in_reply_to": "df33271e_0e7dcf1b", "updated": "2020-04-07 12:01:39.000000000", "message": "Because we modified the PUT API, I think we need to test the feature in old microverversion, and it should be ok.", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5afab9f64c082f0fa39c5c52f8833ef1e4f9108e", "unresolved": false, "patch_set": 13, "id": "df33271e_0e7dcf1b", "line": 4011, "range": {"start_line": 4006, "start_character": 0, "end_line": 4011, "end_character": 70}, "in_reply_to": "df33271e_334ac0ab", "updated": "2020-04-07 11:57:12.000000000", "message": "It was added in L4021", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "36bd1d8c888213239c3cf37d604e163abe28f2a0", "unresolved": false, "patch_set": 13, "id": "df33271e_e2d07fcc", "line": 4011, "range": {"start_line": 4006, "start_character": 0, "end_line": 4011, "end_character": 70}, "in_reply_to": "df33271e_421ccbc0", "updated": "2020-04-07 12:49:41.000000000", "message": "Done", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9bd66893f80975f39bfcac7c4538ff239b95d007", "unresolved": false, "patch_set": 13, "id": "df33271e_421ccbc0", "line": 4011, "range": {"start_line": 4006, "start_character": 0, "end_line": 4011, "end_character": 70}, "in_reply_to": "df33271e_ce5be784", "updated": "2020-04-07 12:39:36.000000000", "message": "Sorry my point is that microversion 2.85 should also retain the same behaviour if --delete-on-termination isn't provided:\n\n    def test_volume_update_swap_v285(self):\n        \"\"\"Microversion 2.85, should also keep the original behaviour\"\"\"\n        self.run_command('volume-update sample-server Work Work',\n                         api_version='2.85')\n        self.assert_called('PUT', '/servers/1234/os-volume_attachments/Work',\n                           {'volumeAttachment': {'volumeId': 'Work'}})", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "7e39ac5fe687c7ae5e97aaa88ab8858a3d27ae15", "unresolved": false, "patch_set": 18, "id": "df33271e_c0c7f811", "line": 4541, "range": {"start_line": 4540, "start_character": 0, "end_line": 4541, "end_character": 35}, "updated": "2020-04-09 00:36:55.000000000", "message": "It should be removed because version-wrapped methods (@api_versions.wraps) are added in novaclient/v2/volumes.py.", "commit_id": "4a8eceaf0aa2fd8f00eaf40fe51ee39a227915d4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cdc28e1f806d3e0cacb023f343acd1916c8a3c95", "unresolved": false, "patch_set": 18, "id": "df33271e_607a6cba", "line": 4541, "range": {"start_line": 4540, "start_character": 0, "end_line": 4541, "end_character": 35}, "in_reply_to": "df33271e_c0c7f811", "updated": "2020-04-09 00:53:38.000000000", "message": "Done", "commit_id": "4a8eceaf0aa2fd8f00eaf40fe51ee39a227915d4"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "9ac9e247246b36bd215fdc8988d5586fb9d762cb", "unresolved": false, "patch_set": 19, "id": "df33271e_9a9b9c71", "line": 4001, "updated": "2020-04-09 04:17:02.000000000", "message": "It would be better to add the following error test cases.\n\n* Microversion 2.84 with --delete-on-termination\n* Microversion 2.84 with --no-delete-on-termination", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "994f7b7dd2dfd593d3080433cd229e7f5542d920", "unresolved": false, "patch_set": 19, "id": "df33271e_4d5786cb", "line": 4001, "in_reply_to": "df33271e_9a9b9c71", "updated": "2020-04-10 00:43:50.000000000", "message": "Done", "commit_id": "4d6c70d25df99a4f28f263cd3160c74ccf1343e3"}], "novaclient/v2/shell.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d9ac847b2aa7ba6a5de28d0251a194ac83534ef", "unresolved": false, "patch_set": 4, "id": "1fa4df85_fc72167c", "line": 2687, "range": {"start_line": 2687, "start_character": 5, "end_line": 2687, "end_character": 16}, "updated": "2020-03-17 12:51:26.000000000", "message": "volume", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "c28f06df94ac2f4fdd7578f19fe7844a180cfdb8", "unresolved": false, "patch_set": 4, "id": "1fa4df85_b547d1bc", "line": 2687, "range": {"start_line": 2687, "start_character": 5, "end_line": 2687, "end_character": 16}, "in_reply_to": "1fa4df85_fc72167c", "updated": "2020-03-17 15:39:29.000000000", "message": "Done", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d9ac847b2aa7ba6a5de28d0251a194ac83534ef", "unresolved": false, "patch_set": 4, "id": "1fa4df85_1c6e1296", "line": 2688, "range": {"start_line": 2688, "start_character": 14, "end_line": 2688, "end_character": 24}, "updated": "2020-03-17 12:51:26.000000000", "message": "volid", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "c28f06df94ac2f4fdd7578f19fe7844a180cfdb8", "unresolved": false, "patch_set": 4, "id": "1fa4df85_f526a916", "line": 2688, "range": {"start_line": 2688, "start_character": 14, "end_line": 2688, "end_character": 24}, "in_reply_to": "1fa4df85_1c6e1296", "updated": "2020-03-17 15:39:29.000000000", "message": "Instead of volume_id", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d9ac847b2aa7ba6a5de28d0251a194ac83534ef", "unresolved": false, "patch_set": 4, "id": "1fa4df85_7c04e6c6", "line": 2689, "range": {"start_line": 2689, "start_character": 22, "end_line": 2689, "end_character": 33}, "updated": "2020-03-17 12:51:26.000000000", "message": "I'm not sure why we are referring to this as the destination, there's no migration here. If anything it's the target volume?", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "c28f06df94ac2f4fdd7578f19fe7844a180cfdb8", "unresolved": false, "patch_set": 4, "id": "1fa4df85_757879f7", "line": 2689, "range": {"start_line": 2689, "start_character": 22, "end_line": 2689, "end_character": 33}, "in_reply_to": "1fa4df85_7c04e6c6", "updated": "2020-03-17 15:39:29.000000000", "message": "Yes, target is suitable.", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0e6ac3f62d4ffa793d3bf8f8cb0bcc864732ce33", "unresolved": false, "patch_set": 15, "id": "df33271e_c4d56ce7", "line": 2748, "range": {"start_line": 2745, "start_character": 0, "end_line": 2748, "end_character": 1}, "updated": "2020-04-08 09:20:40.000000000", "message": "This is added to the help text of the CLI so we need to be a bit more detailed to explain what can be done now. Something like:\n\nIf dest_volid is the same as the src_volid then the command migrates the data from the attached volume to the specified available volume and swaps out the active attachment to the new volume. Otherwise it only updates the parameters of the existing attachment.", "commit_id": "efa734744d63a5ad345a744a10432f6d139c0df6"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5e744d2d0479ef89c4a3d6924daa1d25d6de1537", "unresolved": false, "patch_set": 15, "id": "df33271e_415ae9f2", "line": 2748, "range": {"start_line": 2745, "start_character": 0, "end_line": 2748, "end_character": 1}, "in_reply_to": "df33271e_c4d56ce7", "updated": "2020-04-08 11:00:50.000000000", "message": "Yes, we should change this, will update.", "commit_id": "efa734744d63a5ad345a744a10432f6d139c0df6"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_83dcf174", "line": 2728, "range": {"start_line": 2728, "start_character": 14, "end_line": 2728, "end_character": 23}, "updated": "2020-04-08 14:18:12.000000000", "message": "src_volume", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_8cb8982a", "line": 2728, "range": {"start_line": 2728, "start_character": 14, "end_line": 2728, "end_character": 23}, "in_reply_to": "df33271e_83dcf174", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_03d2a15c", "line": 2732, "range": {"start_line": 2732, "start_character": 14, "end_line": 2732, "end_character": 24}, "updated": "2020-04-08 14:18:12.000000000", "message": "dest_volume", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_6cb3944e", "line": 2732, "range": {"start_line": 2732, "start_character": 14, "end_line": 2732, "end_character": 24}, "in_reply_to": "df33271e_03d2a15c", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_e3eb3d0f", "line": 2745, "range": {"start_line": 2745, "start_character": 7, "end_line": 2745, "end_character": 17}, "updated": "2020-04-08 14:18:12.000000000", "message": "dest_volume", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4f12cdf02c07a59e8452d8db6ce3060deacf3a39", "unresolved": false, "patch_set": 16, "id": "df33271e_43f3090b", "line": 2745, "range": {"start_line": 2745, "start_character": 37, "end_line": 2745, "end_character": 46}, "updated": "2020-04-08 14:18:12.000000000", "message": "src_volume", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_cc83c055", "line": 2745, "range": {"start_line": 2745, "start_character": 37, "end_line": 2745, "end_character": 46}, "in_reply_to": "df33271e_43f3090b", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "fcb0183fca81f0e841ab1d51b5540c5054083363", "unresolved": false, "patch_set": 16, "id": "df33271e_ac863c64", "line": 2745, "range": {"start_line": 2745, "start_character": 7, "end_line": 2745, "end_character": 17}, "in_reply_to": "df33271e_e3eb3d0f", "updated": "2020-04-08 16:57:16.000000000", "message": "Done", "commit_id": "cc1cbd91072bf1d361607a33f2b780bf54179912"}], "novaclient/v2/volumes.py": [{"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "6b9d5666eb43e74b52999d9f3704f0a79d9cd3c9", "unresolved": false, "patch_set": 4, "id": "1fa4df85_1f5a844f", "line": 128, "range": {"start_line": 127, "start_character": 4, "end_line": 128, "end_character": 51}, "updated": "2020-03-17 13:45:34.000000000", "message": "it should be wrapped with `@api_versions.wraps(\"2.83\")`", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "48f84e5f067c17808cef2df5bcce8acfc1855c0c", "unresolved": false, "patch_set": 4, "id": "1fa4df85_4f3129a2", "line": 128, "range": {"start_line": 127, "start_character": 4, "end_line": 128, "end_character": 51}, "in_reply_to": "1fa4df85_10f4b386", "updated": "2020-03-17 16:39:24.000000000", "message": "`api_versions.wraps` is not only about resolving conflicts between several microversions that implements the similar methods, it is also about preventing to call Nova API when novaclient is initialized with an unsupported version.", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "c28f06df94ac2f4fdd7578f19fe7844a180cfdb8", "unresolved": false, "patch_set": 4, "id": "1fa4df85_10f4b386", "line": 128, "range": {"start_line": 127, "start_character": 4, "end_line": 128, "end_character": 51}, "in_reply_to": "1fa4df85_1f5a844f", "updated": "2020-03-17 15:39:29.000000000", "message": "This function is the only one in VolumeManager, and I think it's not necessary to add @api_versions.wraps(\"2.83\") to limit the microversion, otherwise there is an another microversion need to be added, I think that should be wrapped @api_versions.wraps(\"2.93\").\n\nOf course, adding @ api_versions.wraps (\"2.83\") is no problem, and if you insist, I can add this.", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "13505147b06ceedff02b7747474552456f98ea14", "unresolved": false, "patch_set": 4, "id": "1fa4df85_9840c037", "line": 128, "range": {"start_line": 127, "start_character": 4, "end_line": 128, "end_character": 51}, "in_reply_to": "1fa4df85_4f3129a2", "updated": "2020-03-18 02:44:32.000000000", "message": "Thanks Andrey, done.", "commit_id": "d6575c438335e88e44df399bff4a7cf53efe3799"}], "releasenotes/notes/microversion-v2_85-230931f88c4f1d52.yaml": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6a4ecc0fd74ebfcd8b5f773caa3a9d6e8855b4c7", "unresolved": false, "patch_set": 13, "id": "df33271e_33f80048", "line": 4, "range": {"start_line": 4, "start_character": 37, "end_line": 4, "end_character": 44}, "updated": "2020-04-07 11:31:57.000000000", "message": "microversion", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "36bd1d8c888213239c3cf37d604e163abe28f2a0", "unresolved": false, "patch_set": 13, "id": "df33271e_02d5a3b7", "line": 4, "range": {"start_line": 4, "start_character": 37, "end_line": 4, "end_character": 44}, "in_reply_to": "df33271e_33f80048", "updated": "2020-04-07 12:49:41.000000000", "message": "Done", "commit_id": "9ed3a20e752b907b2b4c74290fe11250de80f1cc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e600725d953d7bb7099274a2bf8eb3880c411411", "unresolved": false, "patch_set": 17, "id": "df33271e_a0bd94b8", "line": 10, "updated": "2020-04-09 00:24:26.000000000", "message": "Wrong indentation.", "commit_id": "d28f701e753c4729ebc74af64a1747e0fe2f69ca"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "7e39ac5fe687c7ae5e97aaa88ab8858a3d27ae15", "unresolved": false, "patch_set": 18, "id": "df33271e_6049ccb5", "line": 4, "range": {"start_line": 4, "start_character": 37, "end_line": 4, "end_character": 54}, "updated": "2020-04-09 00:36:55.000000000", "message": "nit: Add a link to the API microversion history.\nhttps://docs.openstack.org/nova/latest/reference/api-microversion-history.html#id78", "commit_id": "4a8eceaf0aa2fd8f00eaf40fe51ee39a227915d4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cdc28e1f806d3e0cacb023f343acd1916c8a3c95", "unresolved": false, "patch_set": 18, "id": "df33271e_a0511439", "line": 4, "range": {"start_line": 4, "start_character": 37, "end_line": 4, "end_character": 54}, "in_reply_to": "df33271e_6049ccb5", "updated": "2020-04-09 00:53:38.000000000", "message": "Done", "commit_id": "4a8eceaf0aa2fd8f00eaf40fe51ee39a227915d4"}]}}, "openstack%2Fproject-config~master~If0f0fdaa3ab21bc9ded13a273b7ebe35a38f4fce": {"owner_id": 5263, "owner_name": "Jeremy Stanley", "owner_email": "fungi@yuggoth.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:15:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-10 00:17:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"zuul.d/jobs.yaml": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "02347df6ab27797812a274237836044856a2bd94", "unresolved": false, "patch_set": 1, "id": "df33271e_3248a385", "side": "PARENT", "line": 752, "updated": "2020-04-10 00:17:40.000000000", "message": "It should be noted the concern is that this would allow x/nova (or similar) to push to openstack/nova on github.", "commit_id": "395dfed08ca3c009d0040cc7c7a326ebd3dd0bf5"}]}}, "openstack%2Fmagnum~master~Ied4196e6f1ddcb131492b48fb57ff0ba9063bbf4": {"owner_id": 28022, "owner_name": "Bharat Kunwar", "owner_email": "brtknr@bath.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 23:27:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 0, "_account_id": 29425, "name": "Diogo Guerra", "email": "diogo.filipe.tomas.guerra@cern.ch", "username": "dioguerra"}, {"value": 2, "date": "2020-04-09 21:56:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "a80ff092f4497b24710c79230efa7e9a030a204e", "unresolved": false, "patch_set": 1, "id": "df33271e_9f98a575", "line": 11, "range": {"start_line": 11, "start_character": 43, "end_line": 11, "end_character": 44}, "updated": "2020-04-09 12:07:27.000000000", "message": "3", "commit_id": "e2627e7da523e308f53f7784fea6c6d0692db944"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "e5a0855ee7762c0652d30fc4560bf6a5eed89223", "unresolved": false, "patch_set": 1, "id": "df33271e_1fe935b6", "line": 11, "range": {"start_line": 11, "start_character": 43, "end_line": 11, "end_character": 44}, "in_reply_to": "df33271e_9f98a575", "updated": "2020-04-09 12:11:09.000000000", "message": "Done", "commit_id": "e2627e7da523e308f53f7784fea6c6d0692db944"}]}}, "openstack%2Fcyborg-specs~master~I51e58b3b7821001ef103c5fc465f63614c36fbf4": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 17813, "name": "wangzhh", "email": "wangzhengh@chinatelecom.cn", "username": "wangzhh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22899, "name": "coco-Gao", "email": "419546439@qq.com", "username": "Coco"}], "comments": {"specs/stein/approved/cyborg-api-wflows-for-instance-ops.rst": [{"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e8f07bde", "line": 49, "range": {"start_line": 49, "start_character": 16, "end_line": 49, "end_character": 18}, "updated": "2018-10-30 15:02:30.000000000", "message": "an", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_c30ba7d1", "line": 49, "range": {"start_line": 49, "start_character": 16, "end_line": 49, "end_character": 18}, "in_reply_to": "3f79a3b5_e8f07bde", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_306323ae", "line": 52, "range": {"start_line": 52, "start_character": 13, "end_line": 52, "end_character": 44}, "updated": "2018-10-31 10:52:41.000000000", "message": "I just confused about extARQ and ARQ, is extARQ necessary, IMHO, cyborg can expose ARQ directly.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_8397ef37", "line": 52, "range": {"start_line": 52, "start_character": 13, "end_line": 52, "end_character": 44}, "in_reply_to": "3f79a3b5_306323ae", "updated": "2018-11-05 22:54:46.000000000", "message": "We need a data structure to hold Cyborg-private fields, which can be exchanged between the conductor and the agent. ARQ is exposed to Nova, while ExtARQ is private to Cyborg.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_23769494", "line": 60, "range": {"start_line": 60, "start_character": 5, "end_line": 60, "end_character": 13}, "updated": "2018-10-30 15:02:30.000000000", "message": "Could you list all the possible enum values?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_23bffbab", "line": 60, "range": {"start_line": 60, "start_character": 5, "end_line": 60, "end_character": 13}, "in_reply_to": "3f79a3b5_23769494", "updated": "2018-11-05 22:54:46.000000000", "message": "Some of the possible substates are listed in the API sections below. \n\nIMHO, the full list is best left to the development stage. The substate indicates the progress of the request, and also which fields are valid in the ExtARQ. That will depend on the details.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_cd125c65", "line": 62, "range": {"start_line": 62, "start_character": 7, "end_line": 62, "end_character": 57}, "updated": "2018-10-31 10:52:41.000000000", "message": "Do you have any use cases that `accel` from VM image. Do you mean bit stream or something like that?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_434eb790", "line": 62, "range": {"start_line": 62, "start_character": 7, "end_line": 62, "end_character": 57}, "in_reply_to": "3f79a3b5_cd125c65", "updated": "2018-11-05 22:54:46.000000000", "message": "Yes. Please see \"Valid accel keys\" section of https://review.openstack.org/#/c/602978/5/specs/stein/approved/device-profiles.rst.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_28a3d3b2", "line": 66, "range": {"start_line": 66, "start_character": 5, "end_line": 66, "end_character": 25}, "updated": "2018-10-30 15:02:30.000000000", "message": "bitstream_uuid might be a better name here.\nAnother thought: bitstream might be too FPGA specific, can we include this in the accel_props? Also, should we add a field to indicate the type of the acc(FPGA/GPU/etc.)", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_fe2438b3", "line": 66, "range": {"start_line": 66, "start_character": 5, "end_line": 66, "end_character": 25}, "in_reply_to": "3f79a3b5_28a3d3b2", "updated": "2018-11-05 22:54:46.000000000", "message": "ExtARQ is a Cyborg-private struct. If the user has asked for an FPGA, the Cyborg conductor needs to tell the agent whether any bitstream needs to be programmed. The conductor decides that and sends the bitstream UUID in this field.\n\nThe ExtARQ includes an ARQ, which in turn indicates what accelerator type (FPGA/GPU/...) is requested.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_500b3f22", "line": 77, "range": {"start_line": 77, "start_character": 9, "end_line": 77, "end_character": 14}, "updated": "2018-10-31 10:52:41.000000000", "message": "s/vars/arqs", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9e1bc46d", "line": 77, "range": {"start_line": 77, "start_character": 9, "end_line": 77, "end_character": 14}, "in_reply_to": "3f79a3b5_500b3f22", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_48808fbf", "line": 104, "range": {"start_line": 104, "start_character": 48, "end_line": 104, "end_character": 52}, "updated": "2018-10-30 15:02:30.000000000", "message": "create_arqs?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_fe867815", "line": 104, "range": {"start_line": 104, "start_character": 48, "end_line": 104, "end_character": 52}, "in_reply_to": "3f79a3b5_48808fbf", "updated": "2018-11-05 22:54:46.000000000", "message": "OK", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_48ce4f2d", "line": 106, "range": {"start_line": 106, "start_character": 2, "end_line": 106, "end_character": 11}, "updated": "2018-10-30 15:02:30.000000000", "message": "accesses are", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_3e93905b", "line": 106, "range": {"start_line": 106, "start_character": 2, "end_line": 106, "end_character": 11}, "in_reply_to": "3f79a3b5_48ce4f2d", "updated": "2018-11-05 22:54:46.000000000", "message": "OK", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a88a83ba", "line": 117, "range": {"start_line": 117, "start_character": 4, "end_line": 117, "end_character": 27}, "updated": "2018-10-30 15:02:30.000000000", "message": "Please provide an example k-v pair to help the future developer to understand.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9e9e64b5", "line": 117, "range": {"start_line": 117, "start_character": 4, "end_line": 117, "end_character": 27}, "in_reply_to": "3f79a3b5_a88a83ba", "updated": "2018-11-05 22:54:46.000000000", "message": "Please see \"Valid accel keys\" section of https://review.openstack.org/#/c/602978/5/specs/stein/approved/device-profiles.rst.\n\nI will also refer to the device profiles spec here.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a87843c2", "line": 123, "range": {"start_line": 119, "start_character": 4, "end_line": 123, "end_character": 22}, "updated": "2018-10-30 15:02:30.000000000", "message": "Considering this, shall we include the image/bitstream inside the device profile, so that it's easy for users to specify.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_beefa01a", "line": 123, "range": {"start_line": 119, "start_character": 4, "end_line": 123, "end_character": 22}, "in_reply_to": "3f79a3b5_a87843c2", "updated": "2018-11-05 22:54:46.000000000", "message": "The bitstream, function, etc. can be specified in the device profile too. The VM image properties are only an alternative. In Stein, the operators can probably use only the device profile.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_6829cba0", "line": 125, "range": {"start_line": 125, "start_character": 24, "end_line": 125, "end_character": 28}, "updated": "2018-10-30 15:02:30.000000000", "message": "Please use the full name if it's the first appearance.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_7e890827", "line": 125, "range": {"start_line": 125, "start_character": 24, "end_line": 125, "end_character": 28}, "in_reply_to": "3f79a3b5_6829cba0", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_d07c2f76", "line": 158, "range": {"start_line": 158, "start_character": 40, "end_line": 158, "end_character": 71}, "updated": "2018-10-31 10:52:41.000000000", "message": "If one ARQ is in resolved state and it has not been bound successfully, what should we do before delete it?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_7e72684d", "line": 158, "range": {"start_line": 158, "start_character": 40, "end_line": 158, "end_character": 71}, "in_reply_to": "3f79a3b5_d07c2f76", "updated": "2018-11-05 22:54:46.000000000", "message": "When the ARQ failed to bind, the resources (if any) should be cleaned up by the driver/agent during the bind call itself. So, I would expect that nothing needs to be done in the delete call.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_280c3343", "line": 167, "range": {"start_line": 167, "start_character": 23, "end_line": 167, "end_character": 25}, "updated": "2018-10-30 15:02:30.000000000", "message": "meaning of the 1 here?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_7e97c838", "line": 167, "range": {"start_line": 167, "start_character": 23, "end_line": 167, "end_character": 25}, "in_reply_to": "3f79a3b5_280c3343", "updated": "2018-11-05 22:54:46.000000000", "message": "It is a place holder in case we need alternate bindings in the future. Since many people were uncomfortable with this, I am dropping the '1'. We can handle alternate bindings when we get to that.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_90c47796", "line": 192, "range": {"start_line": 192, "start_character": 1, "end_line": 192, "end_character": 48}, "updated": "2018-10-31 10:52:41.000000000", "message": "We should consider to add a lock here to avoid race. For example, lock one raw so that others can not modify it during someone is writing it.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_7e4a68ae", "line": 192, "range": {"start_line": 192, "start_character": 1, "end_line": 192, "end_character": 48}, "in_reply_to": "3f79a3b5_90c47796", "updated": "2018-11-05 22:54:46.000000000", "message": "Agreed. As we discussed, this is not a db lock. Rather, when an ExtARQ is being processed by the agent, it needs to be locked so that the conductor can prevent concurrent access to that extARQ. I suppose it could be just a boolean.\n\nThat lock should be part of the extARQ, not ARQ, so that we don't have to expose it to Nova (in the ARQ). I will add this.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a342a43b", "line": 199, "range": {"start_line": 199, "start_character": 33, "end_line": 199, "end_character": 45}, "updated": "2018-10-30 15:02:30.000000000", "message": "bitstream_uuid", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e44caa76", "line": 199, "range": {"start_line": 199, "start_character": 33, "end_line": 199, "end_character": 45}, "in_reply_to": "3f79a3b5_a342a43b", "updated": "2018-11-05 22:54:46.000000000", "message": "Why is it wrong to call it an id? That is the name we used in the device profiles spec as well.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_2368d4ba", "line": 202, "range": {"start_line": 202, "start_character": 7, "end_line": 202, "end_character": 18}, "updated": "2018-10-30 15:02:30.000000000", "message": "FPGA programming", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a4523210", "line": 202, "range": {"start_line": 202, "start_character": 7, "end_line": 202, "end_character": 18}, "in_reply_to": "3f79a3b5_2368d4ba", "updated": "2018-11-05 22:54:46.000000000", "message": "Yes", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a3b06443", "line": 204, "range": {"start_line": 204, "start_character": 65, "end_line": 204, "end_character": 70}, "updated": "2018-10-30 15:02:30.000000000", "message": "an available", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e3a65c0f", "line": 204, "range": {"start_line": 204, "start_character": 20, "end_line": 204, "end_character": 33}, "updated": "2018-10-30 15:02:30.000000000", "message": "statically attaching", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_64617ad4", "line": 204, "range": {"start_line": 204, "start_character": 20, "end_line": 204, "end_character": 33}, "in_reply_to": "3f79a3b5_e3a65c0f", "updated": "2018-11-05 22:54:46.000000000", "message": "I don't follow: what is the difference between 'a free' vs 'an available'? \n\nThe term 'attach handle' is used as a non, and 'static' is the adjective.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_63ca4ca4", "line": 222, "range": {"start_line": 222, "start_character": 25, "end_line": 222, "end_character": 29}, "updated": "2018-10-30 15:02:30.000000000", "message": "a binding", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_849b76c5", "line": 222, "range": {"start_line": 222, "start_character": 25, "end_line": 222, "end_character": 29}, "in_reply_to": "3f79a3b5_63ca4ca4", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_43b3900a", "line": 258, "range": {"start_line": 258, "start_character": 1, "end_line": 258, "end_character": 9}, "updated": "2018-10-30 15:02:30.000000000", "message": "is this a sync or async call? if we need to spend time on \"cleaning\".", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a479d281", "line": 258, "range": {"start_line": 258, "start_character": 1, "end_line": 258, "end_character": 9}, "in_reply_to": "3f79a3b5_43b3900a", "updated": "2018-11-05 22:54:46.000000000", "message": "Good question. Currently, this is a synchronous call because Nova will mark that RP as free after this returns. if this were async, Nova may free up the RP while Cyborg is still cleaning, and that can result in races.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_23d5341b", "line": 264, "range": {"start_line": 264, "start_character": 45, "end_line": 264, "end_character": 49}, "updated": "2018-10-30 15:02:30.000000000", "message": "binding-failed", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a4eeb21d", "line": 264, "range": {"start_line": 264, "start_character": 45, "end_line": 264, "end_character": 49}, "in_reply_to": "3f79a3b5_23d5341b", "updated": "2018-11-05 22:54:46.000000000", "message": "The name 'bind-failed' has been used in Nova spec as well. Is there a reason to change that?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "ab714e978d75db4edd0887c670a62b16ff55343b", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_d02f4f55", "line": 306, "range": {"start_line": 306, "start_character": 6, "end_line": 306, "end_character": 14}, "updated": "2018-10-31 10:52:41.000000000", "message": "Since we have changed the name to ARQ, all the url should also be changed.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_44d79e51", "line": 306, "range": {"start_line": 306, "start_character": 6, "end_line": 306, "end_character": 14}, "in_reply_to": "3f79a3b5_d02f4f55", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_63b00ce1", "line": 352, "range": {"start_line": 352, "start_character": 60, "end_line": 352, "end_character": 72}, "updated": "2018-10-30 15:02:30.000000000", "message": "bitstream_uuid", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_64d41a4c", "line": 352, "range": {"start_line": 352, "start_character": 60, "end_line": 352, "end_character": 72}, "in_reply_to": "3f79a3b5_63b00ce1", "updated": "2018-11-05 22:54:46.000000000", "message": "Please see earlier comment/question.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_4359508b", "line": 399, "range": {"start_line": 399, "start_character": 24, "end_line": 399, "end_character": 30}, "updated": "2018-10-30 15:02:30.000000000", "message": "too pci specific? can we use driver_id insread?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_4736c0ea", "line": 399, "range": {"start_line": 399, "start_character": 24, "end_line": 399, "end_character": 30}, "in_reply_to": "3f79a3b5_4359508b", "updated": "2018-11-05 22:54:46.000000000", "message": "Agreed, it is pci-specific. The driver that is being called knows its own identity, so we don't to pass in a driver id. I will change this to 'additional_info' which depends on the device type.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_63bfac79", "line": 424, "range": {"start_line": 424, "start_character": 10, "end_line": 424, "end_character": 14}, "updated": "2018-10-30 15:02:30.000000000", "message": "We should have a return code unless it's a async call.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e4a02aa7", "line": 424, "range": {"start_line": 424, "start_character": 10, "end_line": 424, "end_character": 14}, "in_reply_to": "3f79a3b5_63bfac79", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_43ce302d", "line": 436, "range": {"start_line": 436, "start_character": 10, "end_line": 436, "end_character": 14}, "updated": "2018-10-30 15:02:30.000000000", "message": "Same comment as above.", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_648c1a39", "line": 436, "range": {"start_line": 436, "start_character": 10, "end_line": 436, "end_character": 14}, "in_reply_to": "3f79a3b5_43ce302d", "updated": "2018-11-05 22:54:46.000000000", "message": "Done", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, "change_message_id": "a49c669f46a97a6f4fc1e570f6c7d412c8b3a015", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_638d6cd9", "line": 452, "range": {"start_line": 452, "start_character": 2, "end_line": 452, "end_character": 9}, "updated": "2018-10-30 15:02:30.000000000", "message": "Better align with the patch here\nhttps://review.openstack.org/#/c/611488/", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "fde8d4a5c2775b1431ea5e54c986eea577adbc99", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_24ce2258", "line": 452, "range": {"start_line": 452, "start_character": 2, "end_line": 452, "end_character": 9}, "in_reply_to": "3f79a3b5_638d6cd9", "updated": "2018-11-05 22:54:46.000000000", "message": "The API in that patch is:\n   program(self, device_path, image)\nwhere device_path is a PCI BDF and image seems to be a file path. \n\nFor one, we should use something other than a PCI BDF: the device_id is supposed to abstract that. Secondly, is it a good idea to store the bitstream image in a local file? There could be caching issues -- when do we delete it , what if it gets stale -- and security issues. Storing it in a buffer does not fully solve all security issues, but seems to be a step up, right?", "commit_id": "2600bbb513f714a38adcef26ecb91bbd37a7a68c"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_e21b6882", "line": 15, "range": {"start_line": 15, "start_character": 16, "end_line": 15, "end_character": 31}, "updated": "2018-12-06 11:43:52.000000000", "message": "need to be updated", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_16d77f23", "line": 94, "range": {"start_line": 92, "start_character": 0, "end_line": 94, "end_character": 4}, "updated": "2018-12-06 11:43:52.000000000", "message": "As you said below, the groups store the resource and traits, do we need to do a mapping between groups and arg in case some bindings failed.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_5d9f5a63", "line": 116, "range": {"start_line": 116, "start_character": 31, "end_line": 116, "end_character": 53}, "updated": "2018-12-06 11:43:52.000000000", "message": "not sure if it's the agent to call glance, or conductor.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_5688971f", "line": 124, "range": {"start_line": 122, "start_character": 21, "end_line": 124, "end_character": 63}, "updated": "2018-12-06 11:43:52.000000000", "message": "The expression makes me confused. When we create an ARQ, the input parameters are device profile and image_uuid, the image info will be stored in accel field, so what do you mean \"same as in devive profile\" and \"device profile groups\". It seem image info will also be stored in these two params according to your statement.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_f6a683a8", "line": 155, "range": {"start_line": 155, "start_character": 4, "end_line": 155, "end_character": 54}, "updated": "2018-12-06 11:43:52.000000000", "message": "If some ARQs are in binding states, I think we need to unbind them before deleting. In this case, this API should also return error. There should be 404 if the input uuid is invalid, and maybe 403 for bound ARQs.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_f6f4438c", "line": 179, "range": {"start_line": 179, "start_character": 9, "end_line": 179, "end_character": 21}, "updated": "2018-12-06 11:43:52.000000000", "message": "need update it.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_5693b7ff", "line": 204, "range": {"start_line": 204, "start_character": 48, "end_line": 204, "end_character": 78}, "updated": "2018-12-06 11:43:52.000000000", "message": "why region is required for FPGA programming", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_1699bf1b", "line": 215, "range": {"start_line": 214, "start_character": 1, "end_line": 215, "end_character": 55}, "updated": "2018-12-06 11:43:52.000000000", "message": "this should be the 1st step.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_f6ac4339", "line": 308, "range": {"start_line": 307, "start_character": 0, "end_line": 308, "end_character": 43}, "updated": "2018-12-06 11:43:52.000000000", "message": "conductor should also check the lock field.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_16b21f96", "line": 338, "range": {"start_line": 338, "start_character": 0, "end_line": 338, "end_character": 33}, "updated": "2018-12-06 11:43:52.000000000", "message": "same as the comment in line 308.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "4be1425b58b567b02e2c1521869d7a82d9bfc421", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_d6a7c750", "line": 356, "range": {"start_line": 356, "start_character": 10, "end_line": 356, "end_character": 20}, "updated": "2018-12-06 11:43:52.000000000", "message": "space here", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a8fece1149c7d8101655191fc294da3e895cd824", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_017386b4", "line": 362, "range": {"start_line": 362, "start_character": 0, "end_line": 362, "end_character": 35}, "updated": "2018-12-10 03:04:07.000000000", "message": "this function need to be updated according to our discussion about adding a driver_name field during the discovery.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "28a212e1558dd11fa0164f9614b48a796c78e41c", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_a124f51a", "line": 362, "range": {"start_line": 362, "start_character": 0, "end_line": 362, "end_character": 35}, "in_reply_to": "3f79a3b5_017386b4", "updated": "2018-12-11 05:22:00.000000000", "message": "Yes.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a8fece1149c7d8101655191fc294da3e895cd824", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_c176ee91", "line": 396, "range": {"start_line": 396, "start_character": 0, "end_line": 396, "end_character": 10}, "updated": "2018-12-10 03:04:07.000000000", "message": "IMHO, these function all need an roll back mechanism when failure occurs to reset the sub_state.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "28a212e1558dd11fa0164f9614b48a796c78e41c", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_01e4c9d1", "line": 396, "range": {"start_line": 396, "start_character": 0, "end_line": 396, "end_character": 10}, "in_reply_to": "3f79a3b5_c176ee91", "updated": "2018-12-11 05:22:00.000000000", "message": "Agreed.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a8fece1149c7d8101655191fc294da3e895cd824", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_a19ad2bf", "line": 402, "range": {"start_line": 401, "start_character": 0, "end_line": 402, "end_character": 21}, "updated": "2018-12-10 03:04:07.000000000", "message": "this function will be deprecated if we pass the driver name directly during the device discovery.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "28a212e1558dd11fa0164f9614b48a796c78e41c", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_61dc9d15", "line": 402, "range": {"start_line": 401, "start_character": 0, "end_line": 402, "end_character": 21}, "in_reply_to": "3f79a3b5_a19ad2bf", "updated": "2018-12-11 05:22:00.000000000", "message": "Agreed.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a8fece1149c7d8101655191fc294da3e895cd824", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_41a97ed8", "line": 427, "range": {"start_line": 427, "start_character": 2, "end_line": 427, "end_character": 21}, "updated": "2018-12-10 03:04:07.000000000", "message": "do we need to set the sub_state of ExtARQ in this function. Besides, what do you mean the \"setup\", do we need do anything else except update the specific fields", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "28a212e1558dd11fa0164f9614b48a796c78e41c", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_41ee41b6", "line": 427, "range": {"start_line": 427, "start_character": 2, "end_line": 427, "end_character": 21}, "in_reply_to": "3f79a3b5_41a97ed8", "updated": "2018-12-11 05:22:00.000000000", "message": "In some situations in the future, the driver may have to select an attach handle. This API needs to be revisited for extensibility.", "commit_id": "ea819105d65d9a70837364eb7e3955a78769e35d"}]}}, "openstack%2Fkeystone~master~I19dc400b2a7aa46709b242cdeef82beaca975ff3": {"owner_id": 16465, "owner_name": "Kristi Nikolla", "owner_email": "knikolla@bu.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 02:16:26.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 2, "date": "2020-04-08 01:46:22.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "d9f037acc87a9b0cc9f7ce2250f5658b77635c14", "unresolved": false, "patch_set": 7, "id": "df33271e_aa9adc6a", "line": 12, "updated": "2020-04-06 23:42:09.000000000", "message": "Some of these commits - probably this one, since it's the one closing the bug - should update the API version number and add a \"What's new in $version\" section to the API ref", "commit_id": "52b971bfb81a98d89ab1f626ed29f37a6ba2b097"}], "keystone/version.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "5b618982bfeaac5de686d6d4d3939d8d6392b01d", "unresolved": false, "patch_set": 9, "id": "df33271e_56112404", "line": 15, "updated": "2020-04-07 19:33:21.000000000", "message": "this will also need to be updated in keystone/api/discovery.py and keystone/tests/unit/test_versions.py", "commit_id": "89f5baa3292e60f2d3a70b60ddd0864621ad0fe6"}]}}, "openstack%2Freleases~master~I1e60b7dcf3320dcf886d17463785684398cf0c40": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-10 00:10:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 2, "date": "2020-04-09 20:31:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"deliverables/ussuri/ironic.yaml": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "a02336e5bc201b22f771b82592b746f891f46f39", "unresolved": false, "patch_set": 1, "id": "df33271e_0d2bf0ea", "line": 14, "range": {"start_line": 14, "start_character": 80, "end_line": 14, "end_character": 91}, "updated": "2020-04-08 13:36:58.000000000", "message": "decommission", "commit_id": "e427ae1a8b288870d7a014f0cd0120da38db5e66"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "b1722ed1a594f18e734ec02c458a06caf1ccf27b", "unresolved": false, "patch_set": 1, "id": "df33271e_2ded148b", "line": 17, "range": {"start_line": 17, "start_character": 4, "end_line": 17, "end_character": 16}, "updated": "2020-04-08 13:41:08.000000000", "message": "how about: \"UEFI and device selection are ...\"", "commit_id": "e427ae1a8b288870d7a014f0cd0120da38db5e66"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "df8e21b9fe192307dd7999415affc4ebbf53fb93", "unresolved": false, "patch_set": 3, "id": "df33271e_6373ac81", "line": 16, "updated": "2020-04-08 14:45:45.000000000", "message": "validate: [error] trailing spaces (trailing-spaces)", "commit_id": "82939b9085011377d16cf3260396767af0ac1367"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d346b6834416f191807f444ed0949163a81d37db", "unresolved": false, "patch_set": 5, "id": "df33271e_e23cb694", "line": 15, "updated": "2020-04-09 12:37:40.000000000", "message": "validate: [error] syntax error: found character '`' that cannot start any token", "commit_id": "b41069a2d4c8bbac5c63f3773c498f8f5077402a"}]}}, "openstack%2Freleases~master~Ic21d3cf81ca11c50deb9ab938bd274e5966408a6": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:09:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 2, "date": "2020-04-09 20:32:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ibd6bb3aa0a5d33e71f0d1d4cc00b3c160efb1684": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 17:22:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-10 00:09:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-09 20:33:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {"deliverables/ussuri/nova.yaml": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "69e7a5ce733835f40990586d4792c9c9f4779b03", "unresolved": false, "patch_set": 1, "id": "df33271e_894fd432", "updated": "2020-03-30 10:31:31.000000000", "message": "Placement audit might be good to mention too https://bugs.launchpad.net/nova/+bug/1793569", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "298cd9cb1f88e0d544e47640d64878fc0fe9c239", "unresolved": false, "patch_set": 1, "id": "1fa4df85_c529d19b", "line": 15, "updated": "2020-03-11 16:38:34.000000000", "message": "* Do we want to mention the new policy for the UNKNOWN host state?\n* Do we want to mention the per server SRIOV NUMA affinity policy?", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0a468a7f03149733f2956b5e1416b935ea3f4d7e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_8a18b984", "line": 15, "in_reply_to": "1fa4df85_15115254", "updated": "2020-03-12 09:03:51.000000000", "message": "Thanks. I will add these when they will get merged.", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "8a83540855a4df4b03297224521bf7842ed56e45", "unresolved": false, "patch_set": 1, "id": "1fa4df85_e88ff072", "line": 15, "in_reply_to": "1fa4df85_8a18b984", "updated": "2020-03-12 14:58:59.000000000", "message": "Remember that the stuff in here is regurgitated by marketing staff and journalists so it's better to word things based on the impact (what is the use case solved, what is the user improvement, etc). The lower level technical jargon will be lost on them, leave that for the actual in-tree release notes.\n\nIf smcginnis is still looking at these he's pretty good about executive speak (he really knows how to drive the bottom line using synergy and go-to market innovation) so maybe he'd take a look at this once there are more items in the list.", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "217e4802e8a9a4ec36ecadba4724e7e21df3e97b", "unresolved": false, "patch_set": 1, "id": "df33271e_bfc64967", "line": 15, "in_reply_to": "1fa4df85_99a79d50", "updated": "2020-04-09 12:14:52.000000000", "message": "* Added cyborg\n* TPM support did not make it\n* Added move operations with qos\n* unified limits did not make it\n* added nova-manage placement audit", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "78d7687000f8cf34cb05565be3e54a2eef167013", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ed829d52", "line": 15, "in_reply_to": "1fa4df85_a3c59b0c", "updated": "2020-03-12 17:41:44.000000000", "message": "> What's behind \"emulated virtual tpm\"?\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/ussuri/approved/add-emulated-virtual-tpm.html\n\nThe marketing angle for this one would pretty easy: your VM can do security-related things as if it had a real TPM.\n\nWith recent personnel shifts, though, we should be cautious about announcing this until the code is much closer to ready. (Same with all the as-yet-unmerged items.)", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "2600dffc91e2c491cc3c89429d15a6e6cf567769", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ea9fe362", "line": 15, "in_reply_to": "1fa4df85_a3c59b0c", "updated": "2020-03-12 17:12:03.000000000", "message": "Haha! Matt just doesn't want to admit he speaks executive too. :D\n\nBut yeah, make sure these are high level statements about new use cases or significant end user things that this new release will provide.", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2cfc8c15bca05422d9066cf997e7e65f4e8c3ff2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_15115254", "line": 15, "in_reply_to": "1fa4df85_c529d19b", "updated": "2020-03-11 19:30:00.000000000", "message": "> * Do we want to mention the new policy for the UNKNOWN host state?\n\nThis one is pretty minor and I'm not sure whether it's highlights worthy.\n\nMost of the things that come to mind are not sure whether they'll make FF:\n\n* nova cyborg integration\n* emulated virtual tpm\n* move operations with qos ports\n* unified limits\n* nova-audit", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "1b09086c61f97a88e1f792f3783769130aec8089", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a3c59b0c", "line": 15, "in_reply_to": "1fa4df85_e88ff072", "updated": "2020-03-12 16:03:20.000000000", "message": "> Remember that the stuff in here is regurgitated by marketing staff\n > and journalists so it's better to word things based on the impact\n > (what is the use case solved, what is the user improvement, etc).\n > The lower level technical jargon will be lost on them, leave that\n > for the actual in-tree release notes.\n > \n > If smcginnis is still looking at these he's pretty good about\n > executive speak (he really knows how to drive the bottom line using\n > synergy and go-to market innovation) so maybe he'd take a look at\n > this once there are more items in the list.\n\nI agree with Matt, the technical details and jargon should stay away from \"cycle-highlights\".\n\nI'm not convinced that the \"policy UNKNOWN\" stuff should be there.\n\nWhat's behind \"emulated virtual tpm\"?\n\nIf \"unified limits\" really reflect something global to openstack then I think it could be worth to add it with a simple explaination.", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "2e9ae71dae58b71c792f810362668463216d76f7", "unresolved": false, "patch_set": 1, "id": "1fa4df85_99a79d50", "line": 15, "in_reply_to": "1fa4df85_ed829d52", "updated": "2020-03-13 14:53:31.000000000", "message": "> > What's behind \"emulated virtual tpm\"?\n > \n > https://specs.openstack.org/openstack/nova-specs/specs/ussuri/approved/add-emulated-virtual-tpm.html\n > \n > The marketing angle for this one would pretty easy: your VM can do\n > security-related things as if it had a real TPM.\n\nWith this approach it sounds good for me.\n\n > \n > With recent personnel shifts, though, we should be cautious about\n > announcing this until the code is much closer to ready. (Same with\n > all the as-yet-unmerged items.)", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "860493c2789edaebdd6e43785037ca11a8af6c2a", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cd9c815f", "line": 15, "in_reply_to": "1fa4df85_ed829d52", "updated": "2020-03-12 18:00:22.000000000", "message": "In case it wasn't clear, I was not saying we should add the \"not sure they'll make FF\" items. I was saying most of the things that I would consider cycle highlight worthy are (1) in a not completed state and (2) not sure they will merge by FF. They are just things to keep an eye on for inclusion should they become completed.\n\nAnd one more I thought of (also not completed, but keep an eye on) is the policy scopes work.", "commit_id": "315a1dc6233491bcbdc8404ea0722c352c12b44f"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e9f085f8892354d4726164e62eccd18cc59a027c", "unresolved": false, "patch_set": 2, "id": "df33271e_a51bd8c7", "line": 19, "range": {"start_line": 19, "start_character": 42, "end_line": 19, "end_character": 48}, "updated": "2020-04-09 13:45:34.000000000", "message": "servers", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e9f085f8892354d4726164e62eccd18cc59a027c", "unresolved": false, "patch_set": 2, "id": "df33271e_c51edcb9", "line": 19, "range": {"start_line": 19, "start_character": 5, "end_line": 19, "end_character": 12}, "updated": "2020-04-09 13:45:34.000000000", "message": "typo: Further", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "721f96212bbe886e2a6aadbd739536cfff7b677e", "unresolved": false, "patch_set": 2, "id": "df33271e_289cb8be", "line": 19, "range": {"start_line": 19, "start_character": 42, "end_line": 19, "end_character": 48}, "in_reply_to": "df33271e_a51bd8c7", "updated": "2020-04-09 17:16:47.000000000", "message": "Done", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "721f96212bbe886e2a6aadbd739536cfff7b677e", "unresolved": false, "patch_set": 2, "id": "df33271e_08a1f4f8", "line": 19, "range": {"start_line": 19, "start_character": 5, "end_line": 19, "end_character": 12}, "in_reply_to": "df33271e_c51edcb9", "updated": "2020-04-09 17:16:47.000000000", "message": "Done", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "d723ae22b98384ab59d76b147a63c4043e7e08b0", "unresolved": false, "patch_set": 2, "id": "df33271e_483e618b", "line": 25, "range": {"start_line": 25, "start_character": 66, "end_line": 25, "end_character": 67}, "updated": "2020-04-09 14:07:35.000000000", "message": "should  we add the new Policy things ? Though I need to add doc and releases notes for that and due to some policies still to complete I might request FFE for that. \n\nCan we update this during FFE or we add now only ?", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "721f96212bbe886e2a6aadbd739536cfff7b677e", "unresolved": false, "patch_set": 2, "id": "df33271e_88ace4ed", "line": 25, "range": {"start_line": 25, "start_character": 66, "end_line": 25, "end_character": 67}, "in_reply_to": "df33271e_082f393f", "updated": "2020-04-09 17:16:47.000000000", "message": "We granted FFE for the policy work on the today's nova meeting so I added a generic highlight about it.", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "c5d7543deda6d446aee687badc0cb1a581187e4e", "unresolved": false, "patch_set": 2, "id": "df33271e_082f393f", "line": 25, "range": {"start_line": 25, "start_character": 66, "end_line": 25, "end_character": 67}, "in_reply_to": "df33271e_483e618b", "updated": "2020-04-09 14:10:47.000000000", "message": "It can be updated later for capturing historical information, but after tomorrow the marketing team will probably not be looking for updates so anything new after that will likely not make it into any of our Ussuri marketing messaging.", "commit_id": "72f8308ce5f4575368d366b19d4b71b3e1517976"}]}}, "openstack%2Ftempest~master~I4294a879071dde07e5eb1da4df133de8032e1059": {"owner_id": 16465, "owner_name": "Kristi Nikolla", "owner_email": "knikolla@bu.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:04:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-09 16:15:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}], "comments": {"tempest/api/identity/admin/v3/test_groups.py": [{"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "c19fe34f4e8e8ed06233cd6d928b8459642907cd", "unresolved": false, "patch_set": 1, "id": "df33271e_6313ac5d", "line": 120, "range": {"start_line": 120, "start_character": 16, "end_line": 120, "end_character": 52}, "updated": "2020-03-27 14:59:38.000000000", "message": "pep8 is throwing an error here:\n2020-03-24 12:35:48.620828 | ubuntu-bionic | ./tempest/api/identity/admin/v3/test_groups.py:120:22: H203  Use assertIs(Not)None to check for None\n2020-03-24 12:35:48.620912 | ubuntu-bionic |                 self.assertEqual(None, g['expires'])\n\nso please replace assertEqual by assertIs ...\nself.assertIs(None, g['expires'])", "commit_id": "5458cb3619a8a0dc23cdb01225472a9f55ee5935"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "276d1d7214c8caf13cd97db1063acb992a8afa19", "unresolved": false, "patch_set": 1, "id": "df33271e_4e223702", "line": 121, "range": {"start_line": 117, "start_character": 0, "end_line": 121, "end_character": 33}, "updated": "2020-03-25 17:19:05.000000000", "message": "May I ask why is the change needed? Is there any issue with the test as is? \nuser_groups should contain only the two groups created in the for loop above, shouldn't it?", "commit_id": "5458cb3619a8a0dc23cdb01225472a9f55ee5935"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "c19fe34f4e8e8ed06233cd6d928b8459642907cd", "unresolved": false, "patch_set": 1, "id": "df33271e_c35a794d", "line": 121, "range": {"start_line": 117, "start_character": 0, "end_line": 121, "end_character": 33}, "in_reply_to": "df33271e_3b73b24f", "updated": "2020-03-27 14:59:38.000000000", "message": "I see, thanks for the explanations, makes sense now.", "commit_id": "5458cb3619a8a0dc23cdb01225472a9f55ee5935"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "ea1234dbb0aa6bc43686c32b81519c67e834aa82", "unresolved": false, "patch_set": 1, "id": "df33271e_3b73b24f", "line": 121, "range": {"start_line": 117, "start_character": 0, "end_line": 121, "end_character": 33}, "in_reply_to": "df33271e_4e223702", "updated": "2020-03-25 20:16:47.000000000", "message": "A new feature that is being worked introduces expiration for user group memberships and adds an `expires` attribute for each group when listing groups for a user. This is present in the dicts in user_groups, but not in the dicts in groups. This change makes those proposed reviews pass this test.", "commit_id": "5458cb3619a8a0dc23cdb01225472a9f55ee5935"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "d1e2e7dedf32f3cae4b7da50052ca09f35c82028", "unresolved": false, "patch_set": 4, "id": "df33271e_99671db8", "line": 117, "range": {"start_line": 117, "start_character": 0, "end_line": 117, "end_character": 70}, "updated": "2020-04-09 15:51:21.000000000", "message": "can you update the notes with what you mentioned in review coment that this field is new in user groups and not present in groups so remove it.", "commit_id": "84cfe14c40781de9f013e2304fc919585cf68bb9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "d1e2e7dedf32f3cae4b7da50052ca09f35c82028", "unresolved": false, "patch_set": 4, "id": "df33271e_19802d46", "line": 121, "range": {"start_line": 119, "start_character": 0, "end_line": 121, "end_character": 47}, "updated": "2020-04-09 15:51:21.000000000", "message": "we can use Matcher things here with membership_expires_at field as not to compare but for now this lgtm.", "commit_id": "84cfe14c40781de9f013e2304fc919585cf68bb9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6bd0341c4148b19834ffdb6106e01a6ebfa8e04e", "unresolved": false, "patch_set": 5, "id": "df33271e_f9062986", "line": 122, "range": {"start_line": 122, "start_character": 16, "end_line": 122, "end_character": 61}, "updated": "2020-04-09 16:00:45.000000000", "message": "I hope its value is never going to None ? if it can be None at initial time or sometime I will suggest not to assert here and let's just remove the attr for this test scope irrespective of its value ?", "commit_id": "30638b53a4f9a277a821f7988d8c18b6de52bf77"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6dc192bdfc0c06a1d0715378576f2b0a0ed41342", "unresolved": false, "patch_set": 5, "id": "df33271e_195e6d75", "line": 122, "range": {"start_line": 122, "start_character": 16, "end_line": 122, "end_character": 61}, "in_reply_to": "df33271e_b9730116", "updated": "2020-04-09 16:04:54.000000000", "message": "got it. thanks", "commit_id": "30638b53a4f9a277a821f7988d8c18b6de52bf77"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "52d889c94ba80d9742a0fbd0044380f6ad85bedd", "unresolved": false, "patch_set": 5, "id": "df33271e_b9730116", "line": 122, "range": {"start_line": 122, "start_character": 16, "end_line": 122, "end_character": 61}, "in_reply_to": "df33271e_f9062986", "updated": "2020-04-09 16:04:18.000000000", "message": "It's null/None for non-expiring group memberships, which is what tempest is creating. The only group memberships that expire are ones carried over via federation and federation mappings.", "commit_id": "30638b53a4f9a277a821f7988d8c18b6de52bf77"}]}}, "openstack%2Fkeystone~master~I7d52cd2003f511483619a429de57201df4990209": {"owner_id": 16465, "owner_name": "Kristi Nikolla", "owner_email": "knikolla@bu.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 02:09:38.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 2, "date": "2020-04-08 01:47:43.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"api-ref/source/v3/parameters.yaml": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "218cc15529b3d9124dd8ba9b011c4574ac93bbd5", "unresolved": false, "patch_set": 11, "id": "df33271e_56f5a4ec", "line": 1247, "range": {"start_line": 1247, "start_character": 0, "end_line": 1247, "end_character": 21}, "updated": "2020-04-07 19:30:08.000000000", "message": "this needs to be added to groups.inc", "commit_id": "daac4020902bda182635f9e60a81ac07cf107594"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "218cc15529b3d9124dd8ba9b011c4574ac93bbd5", "unresolved": false, "patch_set": 11, "id": "df33271e_d6e09429", "line": 1247, "range": {"start_line": 1247, "start_character": 0, "end_line": 1247, "end_character": 21}, "updated": "2020-04-07 19:30:08.000000000", "message": "we started trying to use the more descriptive naming convention we discussed a while ago https://etherpad.openstack.org/p/queens-ptg-keystone-doc-cleanup", "commit_id": "daac4020902bda182635f9e60a81ac07cf107594"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "218cc15529b3d9124dd8ba9b011c4574ac93bbd5", "unresolved": false, "patch_set": 11, "id": "df33271e_b6db507b", "line": 1251, "range": {"start_line": 1251, "start_character": 4, "end_line": 1251, "end_character": 64}, "updated": "2020-04-07 19:30:08.000000000", "message": "you don't need to say this, groups.inc will only include it in the response", "commit_id": "daac4020902bda182635f9e60a81ac07cf107594"}], "api-ref/source/v3/samples/admin/user-groups-list-response.json": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "6699b58192ae8df42efc0709762180c1d0f5e462", "unresolved": false, "patch_set": 8, "id": "df33271e_9813e4b8", "line": 10, "updated": "2020-04-07 13:37:05.000000000", "message": "This should be documented in paramaters.yaml too", "commit_id": "7170bb0a28b2d28412666d0cca8d1307e7d252a3"}], "keystone/identity/backends/sql.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "dac16583cd35ad354944e10e20724ec5e0f92e60", "unresolved": false, "patch_set": 5, "id": "df33271e_a055e252", "line": 349, "range": {"start_line": 349, "start_character": 39, "end_line": 349, "end_character": 58}, "updated": "2020-03-24 23:15:35.000000000", "message": "isn't this the wrong model?", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "97d349533ebfb172a57392a55d220ca25a3d284b", "unresolved": false, "patch_set": 5, "id": "df33271e_cd09312d", "line": 349, "range": {"start_line": 349, "start_character": 39, "end_line": 349, "end_character": 58}, "in_reply_to": "df33271e_a055e252", "updated": "2020-03-25 14:31:13.000000000", "message": "Thank you, good catch. It is. I'm assuming Python's duck typing made it work since both tables have that identical column.", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "887497c7fc8c6b18f6fc237ca24630c0c66fa0eb", "unresolved": false, "patch_set": 6, "id": "df33271e_8d44841d", "line": 362, "updated": "2020-04-03 18:16:42.000000000", "message": "should we add support to this as well?", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "c669b8af4f7e45350260bd3f3bd573f3d81ae3a5", "unresolved": false, "patch_set": 6, "id": "df33271e_34275cb9", "line": 362, "in_reply_to": "df33271e_2beffb87", "updated": "2020-04-06 16:30:30.000000000", "message": "If a user has been assigned a group, and they also carry the group membership from mapping, the listing will have both entries, the normal one and the expiring one.", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "e14cfd56e779fce2f4f0598ad3c2e299b9cdedef", "unresolved": false, "patch_set": 6, "id": "df33271e_a09df867", "line": 362, "in_reply_to": "df33271e_8d44841d", "updated": "2020-04-05 18:06:33.000000000", "message": "Sure thing. One thing of note that I realized just now, is the possibility of returning multiple entries with the same user and group going to cause issues with clients? Thinking out loud.", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "aa61409066cf0c03921d7fb4dde2db07524a4356", "unresolved": false, "patch_set": 6, "id": "df33271e_2beffb87", "line": 362, "in_reply_to": "df33271e_a09df867", "updated": "2020-04-06 15:02:58.000000000", "message": "> is the\n > possibility of returning multiple entries with the same user and\n > group going to cause issues with clients? \n\nI'm not exactly sure what this means. If it's going to be too complex, we can defer it for now.", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "13082584c73ff49b0c6913ba13320a176051d382", "unresolved": false, "patch_set": 6, "id": "df33271e_e3354aaa", "line": 362, "in_reply_to": "df33271e_a09df867", "updated": "2020-04-05 19:15:09.000000000", "message": "This is going to be a bit more complex and I will try to get it done this Monday.", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}], "keystone/identity/core.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "887497c7fc8c6b18f6fc237ca24630c0c66fa0eb", "unresolved": false, "patch_set": 6, "id": "df33271e_8d5da4eb", "line": 1314, "updated": "2020-04-03 18:16:42.000000000", "message": "Is this necessary? would it be okay to just omit this and have the non-existence of the expires key imply that there is no expiry?", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "9ca3ccac0fd44dc860cb0a83da10ae0e1127c6f6", "unresolved": false, "patch_set": 6, "id": "df33271e_205ba887", "line": 1314, "in_reply_to": "df33271e_8d5da4eb", "updated": "2020-04-05 18:17:37.000000000", "message": "I'm not sure about the answer to this question. I skimmed the api-wg and they don't seem to provide guidelines for that. I check on other usage of ours, specifically 'password_expires_at' and that is present and null/None when password for a user do not expire. For now I'm keeping it, and renaming it to `membership_expires_at` to be more descriptive of what is actually expiring. We can talk about this during the meeting if it is okay to ommit entirely and I will be happy to update.", "commit_id": "37462a3037ab9d229188f591c3df9e26e65e4c62"}], "keystone/identity/shadow_backends/sql.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "dac16583cd35ad354944e10e20724ec5e0f92e60", "unresolved": false, "patch_set": 5, "id": "df33271e_20c71215", "line": 199, "range": {"start_line": 199, "start_character": 8, "end_line": 199, "end_character": 33}, "updated": "2020-03-24 23:15:35.000000000", "message": "suggest instead \"add_user_to_expiring_group\"", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "97d349533ebfb172a57392a55d220ca25a3d284b", "unresolved": false, "patch_set": 5, "id": "df33271e_6d50e50b", "line": 199, "range": {"start_line": 199, "start_character": 8, "end_line": 199, "end_character": 33}, "in_reply_to": "df33271e_20c71215", "updated": "2020-03-25 14:31:13.000000000", "message": "Sure, can rename. I was trying to avoid the implication that the group itself is expiring rather than the membership.", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "dac16583cd35ad354944e10e20724ec5e0f92e60", "unresolved": false, "patch_set": 5, "id": "df33271e_a0da02e6", "line": 204, "range": {"start_line": 204, "start_character": 16, "end_line": 204, "end_character": 18}, "updated": "2020-03-24 23:15:35.000000000", "message": "suggest using a more descriptive variable name", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}, {"author": {"_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, "change_message_id": "97d349533ebfb172a57392a55d220ca25a3d284b", "unresolved": false, "patch_set": 5, "id": "df33271e_0d41593a", "line": 204, "range": {"start_line": 204, "start_character": 16, "end_line": 204, "end_character": 18}, "in_reply_to": "df33271e_a0da02e6", "updated": "2020-03-25 14:31:13.000000000", "message": "Will do.", "commit_id": "f8b3c61c746e399bb23cc82599d98c70fa5e5b3c"}], "keystone/tests/unit/test_backend_sql.py": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "9b84cbc8813b12b2e1e10b8477fcf4a372ecdd4e", "unresolved": false, "patch_set": 8, "id": "df33271e_1704e87a", "line": 761, "range": {"start_line": 761, "start_character": 12, "end_line": 761, "end_character": 44}, "updated": "2020-04-06 07:26:58.000000000", "message": "Would it be more helpful to match the group ids too?", "commit_id": "7170bb0a28b2d28412666d0cca8d1307e7d252a3"}]}}, "openstack%2Fpython-openstackclient~master~I6a4b7219934805c1bbd1e88fcc670ae231d9ac37": {"owner_id": 14232, "owner_name": "Igor Malinovskiy", "owner_email": "u.glide@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14232, "name": "Igor Malinovskiy", "email": "u.glide@gmail.com", "username": "imalinovskiy"}, {"value": 1, "date": "2020-03-26 12:40:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-03-31 03:09:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-03-26 14:24:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-09 21:49:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-03-30 21:50:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fswift~master~I29c62d28311fd0c2bc6394e03153689523a5959d": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-03-21 01:18:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {}}, "openstack%2Freleases~master~Ic900b5f9b9868c0a943141c6ce476552a9f9285d": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-10 00:06:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 1, "date": "2020-04-09 17:25:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 1, "date": "2020-04-09 18:18:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-04-09 20:33:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-09 18:23:08.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}], "comments": {}}, "openstack%2Freleases~master~I167718f55c859a956e5940f4afc3f17bd9d3d600": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-04-10 00:05:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-09 20:34:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"deliverables/ussuri/neutron.yaml": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9c88c5dbd5cd49c120d9f18ec012408dab682331", "unresolved": false, "patch_set": 1, "id": "df33271e_f4bdbd68", "line": 13, "updated": "2020-04-08 12:12:05.000000000", "message": "cycle-highlights are mainly used for marketing purposes like a release announcement from OSF. It would be nice if we cover the values of the highlighted changes in addition to what are changed. I try to raise (or suggest) such things below.", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "63322bac798f28fff3a7602f854fa5cda121c7cc", "unresolved": false, "patch_set": 1, "id": "df33271e_70bfd9a9", "line": 13, "in_reply_to": "df33271e_f4bdbd68", "updated": "2020-04-09 07:21:46.000000000", "message": "Done", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9c88c5dbd5cd49c120d9f18ec012408dab682331", "unresolved": false, "patch_set": 1, "id": "df33271e_b480558d", "line": 15, "updated": "2020-04-08 12:12:05.000000000", "message": "It would be nice to mention what operators (both new and existing) should expect by this change. Main questions from this would be like the future of OVN and OVS drivers, what should be used for new deployments and so on.", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "63322bac798f28fff3a7602f854fa5cda121c7cc", "unresolved": false, "patch_set": 1, "id": "df33271e_90c25d33", "line": 15, "in_reply_to": "df33271e_b480558d", "updated": "2020-04-09 07:21:46.000000000", "message": "Done", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9c88c5dbd5cd49c120d9f18ec012408dab682331", "unresolved": false, "patch_set": 1, "id": "df33271e_9429d19c", "line": 19, "updated": "2020-04-08 12:12:05.000000000", "message": "Can we cover main expected use cases of the stateless security groups? \n\nFor example, the RFE says \"For some use cases, this statelessness will allow operators to choose for optimized datapath performance whereas stateful security groups impose extra processing on the system.\"", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "63322bac798f28fff3a7602f854fa5cda121c7cc", "unresolved": false, "patch_set": 1, "id": "df33271e_d0dd0515", "line": 19, "in_reply_to": "df33271e_9429d19c", "updated": "2020-04-09 07:21:46.000000000", "message": "Done", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9c88c5dbd5cd49c120d9f18ec012408dab682331", "unresolved": false, "patch_set": 1, "id": "df33271e_372287a5", "line": 23, "updated": "2020-04-08 12:12:05.000000000", "message": "I think the main value of this change is \"Address scopes and subnet pools are usually defined by operators and exposed to users. This change allows operators to use more granular access controls on address scopes and subnet pools.\"", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "63322bac798f28fff3a7602f854fa5cda121c7cc", "unresolved": false, "patch_set": 1, "id": "df33271e_d006a586", "line": 23, "in_reply_to": "df33271e_372287a5", "updated": "2020-04-09 07:21:46.000000000", "message": "Done", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9c88c5dbd5cd49c120d9f18ec012408dab682331", "unresolved": false, "patch_set": 1, "id": "df33271e_f74c9f77", "line": 26, "updated": "2020-04-08 12:12:05.000000000", "message": "This change would improve the performance of kubernetes network operations a lot. The number of API calls are much reduced. It is nice to mention it here.", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "63322bac798f28fff3a7602f854fa5cda121c7cc", "unresolved": false, "patch_set": 1, "id": "df33271e_d02b45e8", "line": 26, "in_reply_to": "df33271e_f74c9f77", "updated": "2020-04-09 07:21:46.000000000", "message": "Done", "commit_id": "53f6a057c2940fcc52ab96e4db8c44a37444810f"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "0629758bc5e7ea94548776d06650c449086e9365", "unresolved": false, "patch_set": 2, "id": "df33271e_f3f493f3", "line": 16, "updated": "2020-04-09 07:50:29.000000000", "message": "validate: [error] syntax error: mapping values are not allowed here", "commit_id": "7486ff13d29092a91274df41ce1789b93f383583"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_531f3607", "line": 14, "range": {"start_line": 14, "start_character": 4, "end_line": 14, "end_character": 7}, "updated": "2020-04-09 14:58:19.000000000", "message": "Can `` it here too", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_f47910fc", "line": 14, "range": {"start_line": 14, "start_character": 4, "end_line": 14, "end_character": 7}, "in_reply_to": "df33271e_531f3607", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_f3bc8add", "line": 16, "range": {"start_line": 15, "start_character": 67, "end_line": 16, "end_character": 69}, "updated": "2020-04-09 14:58:19.000000000", "message": "Benefits over the ``openvswitch`` driver include:", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_546a7c19", "line": 16, "range": {"start_line": 15, "start_character": 67, "end_line": 16, "end_character": 69}, "in_reply_to": "df33271e_f3bc8add", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_d3bd06b8", "line": 19, "range": {"start_line": 19, "start_character": 21, "end_line": 19, "end_character": 76}, "updated": "2020-04-09 14:58:19.000000000", "message": "Currently, default agent is still ``openvswitch``", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_f462b03d", "line": 19, "range": {"start_line": 19, "start_character": 21, "end_line": 19, "end_character": 76}, "in_reply_to": "df33271e_d3bd06b8", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_33af127e", "line": 20, "range": {"start_line": 20, "start_character": 43, "end_line": 20, "end_character": 63}, "updated": "2020-04-09 14:58:19.000000000", "message": "the default choice", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_3459b88d", "line": 20, "range": {"start_line": 20, "start_character": 43, "end_line": 20, "end_character": 63}, "in_reply_to": "df33271e_33af127e", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_13e92eb6", "line": 22, "range": {"start_line": 22, "start_character": 30, "end_line": 22, "end_character": 32}, "updated": "2020-04-09 14:58:19.000000000", "message": "\"set as stateless\" or \"and set it as stateless\"", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_13b48ed0", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 10}, "updated": "2020-04-09 14:58:19.000000000", "message": "Duplicate 'create'", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_145e3475", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 10}, "in_reply_to": "df33271e_13b48ed0", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_54539c6b", "line": 22, "range": {"start_line": 22, "start_character": 30, "end_line": 22, "end_character": 32}, "in_reply_to": "df33271e_13e92eb6", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_533c562e", "line": 23, "range": {"start_line": 23, "start_character": 61, "end_line": 23, "end_character": 69}, "updated": "2020-04-09 14:58:19.000000000", "message": "only use", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_3332725f", "line": 23, "range": {"start_line": 23, "start_character": 24, "end_line": 23, "end_character": 26}, "updated": "2020-04-09 14:58:19.000000000", "message": "rule", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_9449a4b8", "line": 23, "range": {"start_line": 23, "start_character": 24, "end_line": 23, "end_character": 26}, "in_reply_to": "df33271e_3332725f", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_f4c75011", "line": 23, "range": {"start_line": 23, "start_character": 61, "end_line": 23, "end_character": 69}, "in_reply_to": "df33271e_533c562e", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_d31986d7", "line": 24, "range": {"start_line": 24, "start_character": 16, "end_line": 24, "end_character": 18}, "updated": "2020-04-09 14:58:19.000000000", "message": "only one 'l'", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_d4cccc36", "line": 24, "range": {"start_line": 24, "start_character": 16, "end_line": 24, "end_character": 18}, "in_reply_to": "df33271e_d31986d7", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "5e19ca1f1638c72d5bcec5a01494b919fdfd0b4c", "unresolved": false, "patch_set": 4, "id": "df33271e_3380b2bf", "line": 35, "range": {"start_line": 35, "start_character": 24, "end_line": 35, "end_character": 28}, "updated": "2020-04-09 14:58:19.000000000", "message": "I tend to prefer \"greatly\" here", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "90f89de26ddfc3ed09e62a41fbd1f8d77acfbcdf", "unresolved": false, "patch_set": 4, "id": "df33271e_34ced82c", "line": 35, "range": {"start_line": 35, "start_character": 24, "end_line": 35, "end_character": 28}, "in_reply_to": "df33271e_3380b2bf", "updated": "2020-04-09 16:48:50.000000000", "message": "Done", "commit_id": "8ef0f30e707ac23a12534b040968225eefa01c55"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1a141aa953b5c808c3fd11d6edb3adffd95e5191", "unresolved": false, "patch_set": 5, "id": "df33271e_f431100d", "line": 14, "updated": "2020-04-09 17:01:06.000000000", "message": "validate: [error] syntax error: found character '`' that cannot start any token", "commit_id": "ac6366baa217eeddf9fac3b72998c6072222c2f2"}]}}, "openstack%2Fdevstack~stable%2Ftrain~Ia757ce3c969860a0c226e185f5ec2a941be69ded": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmagnum~master~Ibc1e02098155ac95bb35fcea5f21cc380bdf0d03": {"owner_id": 28022, "owner_name": "Bharat Kunwar", "owner_email": "brtknr@bath.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 23:25:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 2, "date": "2020-03-31 20:15:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "307a216eb3c70f3a860a23ccce0dd4e6295f6bbe", "unresolved": false, "patch_set": 6, "id": "df33271e_f48add18", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 54}, "updated": "2020-03-27 10:34:08.000000000", "message": "Not required any more", "commit_id": "297c978a088463c9b393935b7c4fa3aa8eb04c21"}], "doc/source/user/index.rst": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_2c3de5dc", "line": 452, "updated": "2020-03-17 08:11:03.000000000", "message": "- disabled\n- enforcing\n- permissive\n\nhttp://man7.org/linux/man-pages/man5/selinux_config.5.html", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}], "magnum/drivers/heat/driver.py": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_4c62a118", "line": 588, "range": {"start_line": 588, "start_character": 41, "end_line": 588, "end_character": 45}, "updated": "2020-03-17 08:11:03.000000000", "message": "ack", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "71eafc35a4d0af674f97fe7e649a5b937b935ec7", "unresolved": false, "patch_set": 2, "id": "1fa4df85_c6d98d22", "line": 588, "range": {"start_line": 588, "start_character": 41, "end_line": 588, "end_character": 45}, "in_reply_to": "1fa4df85_4c62a118", "updated": "2020-03-17 10:59:54.000000000", "message": "woops, this has been bugging me but should be a different patch.", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}], "magnum/drivers/k8s_fedora_atomic_v1/templates/kubecluster.yaml": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_2cbac56d", "line": 860, "range": {"start_line": 860, "start_character": 24, "end_line": 860, "end_character": 51}, "updated": "2020-03-17 08:11:03.000000000", "message": "[\"disabled\", \"enforcing\", \"permissive\"]\n\nhttp://man7.org/linux/man-pages/man5/selinux_config.5.html", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}], "magnum/drivers/k8s_fedora_coreos_v1/templates/fcct-config.yaml": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_4c194186", "line": 89, "range": {"start_line": 86, "start_character": 10, "end_line": 89, "end_character": 31}, "updated": "2020-03-17 08:11:03.000000000", "message": "We could add this as a file with overwrite: true. Not sure if there is a benefit for it though. So let's leave it like this. I mention it in case you want to investigate.", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "b65855642c1512d92f8c529450d4fa5467c124c9", "unresolved": false, "patch_set": 2, "id": "1fa4df85_c92d1ea9", "line": 89, "range": {"start_line": 86, "start_character": 10, "end_line": 89, "end_character": 31}, "in_reply_to": "1fa4df85_06d005f7", "updated": "2020-03-17 12:28:53.000000000", "message": "not sure if there is an advantage. This is fine as well since we do the same thing for atomic.\n\nFor completion, ignition writes files before the system boots. So we should need to run setenforce.", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "71eafc35a4d0af674f97fe7e649a5b937b935ec7", "unresolved": false, "patch_set": 2, "id": "1fa4df85_06d005f7", "line": 89, "range": {"start_line": 86, "start_character": 10, "end_line": 89, "end_character": 31}, "in_reply_to": "1fa4df85_4c194186", "updated": "2020-03-17 10:59:54.000000000", "message": "I know that is possible but dont see a clear advantage of doing it like that for now, especially given that we need to run setenforce here anyway.", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}], "magnum/drivers/k8s_fedora_coreos_v1/templates/kubecluster.yaml": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_8caad916", "line": 860, "range": {"start_line": 860, "start_character": 13, "end_line": 860, "end_character": 24}, "updated": "2020-03-17 08:11:03.000000000", "message": "+1", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "5e21953a4772c8d2230929e26d99f3a73acb6a22", "unresolved": false, "patch_set": 2, "id": "1fa4df85_ecab4d1b", "line": 862, "range": {"start_line": 862, "start_character": 24, "end_line": 862, "end_character": 51}, "updated": "2020-03-17 08:11:03.000000000", "message": "[\"disabled\", \"enforcing\", \"permissive\"]\n\nhttp://man7.org/linux/man-pages/man5/selinux_config.5.html", "commit_id": "a2893784fa4e5c835a601501fad48230a0af337d"}]}}, "airship%2Fairshipctl~master~I5822dbe085da63e087b4490db1cf72e3361d14c6": {"owner_id": 29132, "owner_name": "Krishna Venkata", "owner_email": "kvenkata986@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29132, "name": "Krishna Venkata", "email": "kvenkata986@gmail.com", "username": "kvenkata986"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-02 15:40:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}], "comments": {}}, "openstack%2Foslo.policy~master~I00edbea503aefbce31cbb43a74929db752235bf0": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:12:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-09 18:13:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-04-09 16:34:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 1, "date": "2020-04-09 16:22:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {}}, "openstack%2Foslo.policy~master~I3c2c889af25b723f1eedbe6167d614c6a4bc6cd2": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-04-07 17:44:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 2, "date": "2020-04-08 23:49:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-04-08 18:57:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 1, "date": "2020-04-08 15:35:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8866, "name": "Raildo Mascena de Sousa Filho", "email": "rmascena@redhat.com", "username": "raildo"}, {"value": 2, "date": "2020-04-08 18:37:05.000000000", "_account_id": 27954, "name": "Mois\u00e9s Guimar\u00e3es de Medeiros", "email": "guimaraes@pm.me", "username": "moguimar"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {"oslo_policy/opts.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_40d128fb", "line": 44, "range": {"start_line": 40, "start_character": 70, "end_line": 44, "end_character": 53}, "updated": "2020-04-09 00:31:37.000000000", "message": "This reads confusingly to me. Suggestion:\n\n\"If ``True``, the old deprecated defaults are not going to be evaluated. This means if any existing token is allowed for old defaults but is disallowed for new defaults, it will be disallowed.\"", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_60d42cea", "line": 45, "range": {"start_line": 45, "start_character": 47, "end_line": 45, "end_character": 51}, "updated": "2020-04-09 00:31:37.000000000", "message": "with the", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_c006d886", "line": 46, "range": {"start_line": 46, "start_character": 44, "end_line": 46, "end_character": 52}, "updated": "2020-04-09 00:31:37.000000000", "message": "the benefits", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}], "oslo_policy/policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_5ef4b2cf", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_de31e2a4", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_3e272e67", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_5e1dd20d", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_1e2cea45", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_7ee5360a", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_beefbee7", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_ded60228", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_3eb56eef", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_7eced683", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_febae6de", "line": 677, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_be017eb2", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_9efe3aac", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_fe2ca64b", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_7ef7f6d5", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_be1a1e14", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_fed14631", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_9e175aee", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_7e20964a", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_9eec7af4", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_5ee2f202", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_1ee18aff", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_3edc4e45", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_5ecb1271", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_1eba2add", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_bec85e74", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "507d23dc9256e4d4ee4a7089e2ce458a54340ba6", "unresolved": false, "patch_set": 1, "id": "df33271e_debf22ce", "line": 717, "updated": "2020-04-07 04:40:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "98096e98e0ea28fe67e213c15e6e3a75ca2ddbef"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_7bfff166", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_dbd43dec", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_fbd94122", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_3b2a89e6", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_9bf3d59f", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_fbf2e199", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_1b16a5a8", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_fb4781bb", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_9b38f53b", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_9b211500", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_bb269915", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_5b102da9", "line": 670, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_e0015c6c", "line": 700, "updated": "2020-04-09 00:31:37.000000000", "message": "This doesn't quite make sense to me, do you mean this?\n\nIf the enforce_new_defaults flag is True, do not add OrCheck to the old check_str and enforce only the new defaults.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_5b02ed70", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_9bcab543", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_3b05697b", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_1b08658f", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_1b2d05fd", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_7b34114b", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_bbf8597c", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_dbed5db8", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_db427dab", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_5b378d4e", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_bb3df92d", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_3b13a9ba", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_fb2021fa", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_3b78c9f6", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_7b0d318f", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c825daed586eb72dab3eff8e25ad923848b661be", "unresolved": false, "patch_set": 2, "id": "df33271e_db1b9dc7", "line": 709, "updated": "2020-04-07 19:03:40.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "de0927b85fae0452718f658bf41beff294aeb477", "unresolved": false, "patch_set": 2, "id": "df33271e_e5c16056", "line": 709, "in_reply_to": "df33271e_2053446d", "updated": "2020-04-09 13:37:33.000000000", "message": "I don't think this change is responsible for suppressing the warnings. I believe Ghanshyam put that into a separate review.\n\nAs I understand it, this change is only to allow operators a way to opt into new defaults without having to write policies back into files.\n\nhttps://review.opendev.org/#/c/717879/ is the review to deal with warning suppression.\n\nI think if we set suppress_default_change_warnings = True, Zuul won't comment (haven't tested this, yet).", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "094c3ff7b303ff803e35f45eb2e4f1450913c3c2", "unresolved": false, "patch_set": 2, "id": "df33271e_08073984", "line": 709, "in_reply_to": "df33271e_e5c16056", "updated": "2020-04-09 14:18:29.000000000", "message": "yeah, Stephen already fixed these  - https://review.opendev.org/#/c/718138/1", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "c2377c3ef5742ea3efe638c7a9b21c09361dc4fa", "unresolved": false, "patch_set": 2, "id": "df33271e_2053446d", "line": 709, "in_reply_to": "df33271e_fb2021fa", "updated": "2020-04-09 00:34:18.000000000", "message": "What's all this by the way? Scary to see on a change that's intended to *not* emit warning spam", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}], "releasenotes/notes/enforce_new_defaults-6ae17d8b8d166a2c.yaml": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_60ed4cb6", "line": 6, "range": {"start_line": 6, "start_character": 49, "end_line": 6, "end_character": 53}, "updated": "2020-04-09 00:31:37.000000000", "message": "means", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_403f6824", "line": 7, "range": {"start_line": 7, "start_character": 58, "end_line": 7, "end_character": 66}, "updated": "2020-04-09 00:31:37.000000000", "message": "defaults,", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_c02b78e8", "line": 7, "range": {"start_line": 7, "start_character": 10, "end_line": 7, "end_character": 17}, "updated": "2020-04-09 00:31:37.000000000", "message": "is allowed", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_e0367c51", "line": 8, "range": {"start_line": 8, "start_character": 4, "end_line": 8, "end_character": 8}, "updated": "2020-04-09 00:31:37.000000000", "message": "it will", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_402808e1", "line": 9, "range": {"start_line": 9, "start_character": 52, "end_line": 9, "end_character": 60}, "updated": "2020-04-09 00:31:37.000000000", "message": "the benefits", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_a01914d8", "line": 9, "range": {"start_line": 9, "start_character": 4, "end_line": 9, "end_character": 8}, "updated": "2020-04-09 00:31:37.000000000", "message": "with the", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_801e90b8", "line": 11, "range": {"start_line": 11, "start_character": 44, "end_line": 11, "end_character": 48}, "updated": "2020-04-09 00:31:37.000000000", "message": "rules", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bc8b770630765c4eef8afdf1d747edd98e2f6f29", "unresolved": false, "patch_set": 2, "id": "df33271e_601b8cc9", "line": 11, "range": {"start_line": 11, "start_character": 52, "end_line": 11, "end_character": 58}, "updated": "2020-04-09 00:31:37.000000000", "message": "the policy", "commit_id": "99012db14bd0e6f87aa2b79c272c7f5951972d41"}]}}, "openstack%2Foctavia~master~I538f956bb64c772bcd3e3591d3ee3118e5552b32": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Fpuppet-nova~master~I838240f7138adcbf619ce12ac616f0bc517570dd": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:38:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:29:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-nova~master~Iefb7e8a4d867b8721cdb5b00c2f71b2dd3a492c0": {"owner_id": 20733, "owner_name": "Rajesh Tailor", "owner_email": "ratailor@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-09 20:37:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:28:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"manifests/scheduler.pp": [{"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "3ecd63d1a077b931dbbed135c9d3f6ce3831b32f", "unresolved": false, "patch_set": 1, "id": "df33271e_6dca7c6e", "line": 64, "range": {"start_line": 61, "start_character": 18, "end_line": 64, "end_character": 44}, "updated": "2020-04-08 13:30:28.000000000", "message": "Can we remove this part ? IMO it's too much to copy whole explanation in nova because it makes it difficult to keep consistency, and I'd prefer to have this explanation in puppet side as simple as possible.", "commit_id": "706c30603f161ef39d8fcaccdeaf3a6ec0997318"}], "releasenotes/notes/nova_scheduler_enable_isolated_aggregate_filtering-ccadc597f556db7d.yaml": [{"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "3ecd63d1a077b931dbbed135c9d3f6ce3831b32f", "unresolved": false, "patch_set": 1, "id": "df33271e_edd5ec1c", "line": 4, "updated": "2020-04-08 13:30:28.000000000", "message": "The parameter name should be mentioned in release note.", "commit_id": "706c30603f161ef39d8fcaccdeaf3a6ec0997318"}, {"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "ed6303d0d99382c50aa549c0ab496b2af8e3402a", "unresolved": false, "patch_set": 1, "id": "df33271e_ada764a7", "line": 9, "range": {"start_line": 6, "start_character": 18, "end_line": 9, "end_character": 59}, "updated": "2020-04-08 13:33:15.000000000", "message": "Also I'd prefer to avoid whole parameter explanation in release note, too, because of the same reason which I mentioned in my previous comment.", "commit_id": "706c30603f161ef39d8fcaccdeaf3a6ec0997318"}]}}, "openstack%2Fnova~master~Id074e3292e560e67b1b02b7d97b6cdbf2d4be1c5": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"nova/db/sqlalchemy/api.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "18cc529a49b199f22d92ad00446d25fe59703587", "unresolved": false, "patch_set": 22, "id": "df33271e_945f4340", "line": 477, "updated": "2020-03-25 00:40:45.000000000", "message": "From the latest failure [1], I can see that this log message is _not_ reached -- the last log message is from nova.db.api. That means we're not getting past the @pick_context_manager_reader decorator for some reason ... and that is the thing that's connecting to the database. We're somehow failing to connect to the database and without any error raised.\n\n[1] https://zuul.opendev.org/t/openstack/build/b2a97ef7b1934b5683aad91d27364582", "commit_id": "fb610f2b66b0894bf96c46e079ee70b7c5764400"}]}}, "openstack%2Fnova~stable%2Ftrain~Id074e3292e560e67b1b02b7d97b6cdbf2d4be1c5": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.db~stable%2Ftrain~Ie5d7b2b5f60efe9612cef396ed58f9d0378b9cf7": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"oslo_db/sqlalchemy/enginefacade.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_0f6863b8", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_af7337b1", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_cf6e7bc8", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_2f5f270f", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_4f626bda", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_6f9e4fb9", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_8f9913d2", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_ef641fe8", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_0fad03ea", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_afa857db", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_cfa31b00", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_4fb70b3c", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5734745c2cb401bf77dd4cddae457044e3c4461b", "unresolved": false, "patch_set": 5, "id": "df33271e_efa9bfdd", "line": 351, "updated": "2020-04-04 02:32:12.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "86630a7133fbee21631b0e9b3633ba9f3dfc7860"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_07aaffd0", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_67b78b3c", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_47b40736", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_87872f62", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_a7823351", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_c781374d", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_e77c3b74", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py27:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_07931fa5", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_27962396", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_478d277a", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_67902b97", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dea04892ef98e1f2f82f2a5065e72abdf7d1e40c", "unresolved": false, "patch_set": 6, "id": "df33271e_a7e7d346", "line": 351, "updated": "2020-04-05 01:31:42.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f1c0e3f788f0fdc08fddf36795a7d52b65db9c8e"}]}}, "openstack%2Foslo.db~master~Ie5d7b2b5f60efe9612cef396ed58f9d0378b9cf7": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"oslo_db/sqlalchemy/enginefacade.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_2f2d68a8", "line": 348, "updated": "2020-04-04 02:12:11.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_8f3e34d8", "line": 348, "updated": "2020-04-04 02:12:11.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_af3978f3", "line": 348, "updated": "2020-04-04 02:12:11.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_cf1f9c6e", "line": 348, "updated": "2020-04-04 02:12:11.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_ef2260ba", "line": 348, "updated": "2020-04-04 02:12:11.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_2f7f28ac", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_8f70f4de", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_cf715ce1", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_ef7420d3", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_0f7ce4b3", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_4f4f0c92", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_6f4ad083", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_8f49148d", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_af44d875", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_ef5d4049", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_0f55041e", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_2f58c854", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_4f342cfc", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_6f2f70a7", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "add63c490b21f7247f4876023972e439fd7d617b", "unresolved": false, "patch_set": 5, "id": "df33271e_cf5afc4e", "line": 351, "updated": "2020-04-04 02:12:11.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "67428cb1b166077325eff43cf8d5b1aeb9c51d17"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_0765dfe1", "line": 348, "updated": "2020-04-05 01:20:49.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_2768e3b8", "line": 348, "updated": "2020-04-05 01:20:49.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_475fe70d", "line": 348, "updated": "2020-04-05 01:20:49.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_6762ebda", "line": 348, "updated": "2020-04-05 01:20:49.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_a79993d1", "line": 348, "updated": "2020-04-05 01:20:49.000000000", "message": "py38:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_07379fe5", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_273aa3cc", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_4731a7ec", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_6734abdf", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_8750cf0c", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_a74b535d", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "lower-constraints:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_073cbfbd", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_273f43b6", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_4746c751", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_67494b5f", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_c75ad728", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_e7555bfc", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py36:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_8779ef94", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_a774f39d", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_c773f7b0", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "573042b86e94c4ea7455b8a3fa7278d8be63a13e", "unresolved": false, "patch_set": 6, "id": "df33271e_e76efbc7", "line": 351, "updated": "2020-04-05 01:20:49.000000000", "message": "py37:  NotSupportedWarning: Configuration option(s) ['flush_on_nested'] not supported", "commit_id": "f66c16c6d43e5080e62a71037044d97a0586488e"}]}}, "openstack%2Fdevstack~master~Ia757ce3c969860a0c226e185f5ec2a941be69ded": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {"lib/databases/mysql": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "c29e08c665970dd761e1ab9273f609518fc672b2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0104a2c5", "line": 132, "updated": "2020-03-12 22:00:23.000000000", "message": "If this works, add the bug link to this comment:\n\nhttps://bugs.launchpad.net/nova/+bug/1844929", "commit_id": "0b8b23d5a5e7b9a9aff3b1084eb9e70446321939"}]}}, "openstack%2Fdevstack~stable%2Ftrain~I5c86039208c32c3374d57877b1664809f56ea007": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Ia9e001e2b1987f00a960cdf106eaa8e84dc4d71a": {"owner_id": 23618, "owner_name": "Christophe Fontaine", "owner_email": "cfontain@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:42:29.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-07 21:42:55.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 23618, "name": "Christophe Fontaine", "email": "cfontain@redhat.com", "username": "christophefontaine"}], "comments": {}}, "vexxhost%2Fbase-jobs~master~I389dcb0884b57bfd22e981e28c543d63afbd5527": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-09 23:04:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~I0eee5032396b25962bee45b430d457df5cf72011": {"owner_id": 31752, "owner_name": "Vladimir Blando", "owner_email": "vblando@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 21:44:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}, {"value": 2, "date": "2020-04-09 22:49:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fproject-config~master~Iadcdf01c6e1a5c3ea10c8a43fe84dc6168f160c3": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 2, "date": "2020-04-09 22:39:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 22:49:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "vexxhost%2Fbase-jobs~master~I402d922269cad3ed365f605794520aae44d362dd": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-09 22:58:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Flibvirtd_exporter~master~I764480b313b559a6f4e15eb312ac415c33a9661a": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-09 22:39:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~Ieda7dc3af58d38470df20a0a6641b6d2ee37130f": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-04-09 22:44:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 22:11:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-02 22:31:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-03 08:48:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I053c6c5eb1612b2e90de1b3683dc689b0dae28ef": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 18:46:57.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:28:19.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-repos~master~I7a8dec1e15177e801ed65ed02010bf6b169de000": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 20:28:56.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:27:02.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstacklib~master~If170d1c1468e9e668b4faaab0b94d2d7d2e1bb15": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:39:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "vexxhost%2Fbase-jobs~master~Iaf9ded573642720cef2b8d46d48f98a3eff689cb": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-09 22:36:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-glance~master~I17af43fe8cdf437c90453d316b66c3ea9d4f2745": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:27:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-manilaclient~master~Id73f6facca03e8490846b68c404593f16e95f8bd": {"owner_id": 30998, "owner_name": "Andre Luiz Beltrami Rocha", "owner_email": "debeltrami@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 12:00:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, {"value": 2, "date": "2020-04-09 12:09:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-04-09 05:55:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "80eb5a731f1fe4c4cab7e3c247f528903575f2f2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_37e5690b", "line": 14, "range": {"start_line": 13, "start_character": 20, "end_line": 14, "end_character": 35}, "updated": "2020-03-12 12:32:45.000000000", "message": "maybe: the progress of the create share from snapshot operation?", "commit_id": "e7562a533793d60a81dadbade800119dc3e3c1e0"}], "manilaclient/api_versions.py": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "2247a24a42ef6ae1aa5507d88f0d06087dd2362e", "unresolved": false, "patch_set": 6, "id": "df33271e_fe95f889", "line": 30, "range": {"start_line": 30, "start_character": 15, "end_line": 30, "end_character": 20}, "updated": "2020-04-03 21:05:05.000000000", "message": "Update to 2.54", "commit_id": "bc8709df943962082f611aacdc7b0665bd307c45"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "120d2accb2beee97e6fd1779b409c9d3e3e46f3c", "unresolved": false, "patch_set": 8, "id": "df33271e_f05fc56f", "line": 206, "updated": "2020-04-06 13:53:17.000000000", "message": "cover:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "689a4c19fefc78a046be038126ead8267ba60fb4"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "120d2accb2beee97e6fd1779b409c9d3e3e46f3c", "unresolved": false, "patch_set": 8, "id": "df33271e_5054b154", "line": 206, "updated": "2020-04-06 13:53:17.000000000", "message": "py36:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "689a4c19fefc78a046be038126ead8267ba60fb4"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "120d2accb2beee97e6fd1779b409c9d3e3e46f3c", "unresolved": false, "patch_set": 8, "id": "df33271e_30512d64", "line": 206, "updated": "2020-04-06 13:53:17.000000000", "message": "py37:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "689a4c19fefc78a046be038126ead8267ba60fb4"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "120d2accb2beee97e6fd1779b409c9d3e3e46f3c", "unresolved": false, "patch_set": 8, "id": "df33271e_904e39bf", "line": 206, "updated": "2020-04-06 13:53:17.000000000", "message": "py38:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "689a4c19fefc78a046be038126ead8267ba60fb4"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b5f88d62f5f07579fc0df96ec37c7edaa4f9c13e", "unresolved": false, "patch_set": 9, "id": "df33271e_7a8cd8d6", "line": 206, "updated": "2020-04-09 04:49:51.000000000", "message": "cover:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8d2718da8c921d3d08ef16fde7f2be3acc7fafca"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b5f88d62f5f07579fc0df96ec37c7edaa4f9c13e", "unresolved": false, "patch_set": 9, "id": "df33271e_dabec463", "line": 206, "updated": "2020-04-09 04:49:51.000000000", "message": "py36:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8d2718da8c921d3d08ef16fde7f2be3acc7fafca"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b5f88d62f5f07579fc0df96ec37c7edaa4f9c13e", "unresolved": false, "patch_set": 9, "id": "df33271e_bac300ed", "line": 206, "updated": "2020-04-09 04:49:51.000000000", "message": "py37:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8d2718da8c921d3d08ef16fde7f2be3acc7fafca"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b5f88d62f5f07579fc0df96ec37c7edaa4f9c13e", "unresolved": false, "patch_set": 9, "id": "df33271e_1ab5cc7e", "line": 206, "updated": "2020-04-09 04:49:51.000000000", "message": "py38:  UserWarning: Client version '1.0' is deprecated.", "commit_id": "8d2718da8c921d3d08ef16fde7f2be3acc7fafca"}], "releasenotes/notes/update-api-version-create-share-from-snapshot-another-pool-or-backend-694cfda84a41c4ff.yaml": [{"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "80eb5a731f1fe4c4cab7e3c247f528903575f2f2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_343d672c", "line": 3, "range": {"start_line": 3, "start_character": 4, "end_line": 3, "end_character": 57}, "updated": "2020-03-12 12:32:45.000000000", "message": "Maybe: Added ``progress`` field for shares and share replicas.", "commit_id": "e7562a533793d60a81dadbade800119dc3e3c1e0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "80eb5a731f1fe4c4cab7e3c247f528903575f2f2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_141dcbbc", "line": 4, "range": {"start_line": 3, "start_character": 59, "end_line": 4, "end_character": 25}, "updated": "2020-03-12 12:32:45.000000000", "message": "Maybe: This field allows the user to check... Or ... user to query...", "commit_id": "e7562a533793d60a81dadbade800119dc3e3c1e0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "80eb5a731f1fe4c4cab7e3c247f528903575f2f2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_f474af00", "line": 6, "range": {"start_line": 6, "start_character": 21, "end_line": 6, "end_character": 22}, "updated": "2020-03-12 12:32:45.000000000", "message": "percent", "commit_id": "e7562a533793d60a81dadbade800119dc3e3c1e0"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "5975b911df1abb97de74fe4cea1db875345e4cc4", "unresolved": false, "patch_set": 5, "id": "df33271e_7ee7cc13", "line": 4, "range": {"start_line": 4, "start_character": 4, "end_line": 4, "end_character": 25}, "updated": "2020-03-27 08:20:31.000000000", "message": "nit: allows the user to check", "commit_id": "d63c4c6321cae69e4f69702ab99aa45c647e1550"}]}}, "opendev%2Fsystem-config~master~I8398c8f4f6dc0ec1bb72ee040349bfc2232eed2e": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:35:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpuppet-horizon~master~Ie1c4fdfc5f95ce3103beea311223ec78597a38ec": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:02:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-horizon~master~I298706690ee73db76678653841514de120c61e27": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:36:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:02:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-manilaclient~master~I8c82873b4352311a50d063da92cc62bd8cd62792": {"owner_id": 31729, "owner_name": "Paula Asto", "owner_email": "carolinaasto@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}], "comments": {"manilaclient/v2/shell.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "60228a230aeb5a3cba6f5c74cd9c8763cdccf2a2", "unresolved": false, "patch_set": 2, "id": "df33271e_176111aa", "line": 4452, "updated": "2020-04-09 22:03:41.000000000", "message": "pep8: E302 expected 2 blank lines, found 1", "commit_id": "5c61fe258eb4801a0576bea39e71622f73d7ba07"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "60228a230aeb5a3cba6f5c74cd9c8763cdccf2a2", "unresolved": false, "patch_set": 2, "id": "df33271e_f7658db6", "line": 4464, "updated": "2020-04-09 22:03:41.000000000", "message": "pep8: E302 expected 2 blank lines, found 1", "commit_id": "5c61fe258eb4801a0576bea39e71622f73d7ba07"}]}}, "openstack%2Fpuppet-openstack-integration~stable%2Fqueens~Ifb1910cafc799ad453252defd21c83deda939efc": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:39:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Frocky~Ic52785c926a25f70b4471a4349727bf9b14a84cd": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:38:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Fstein~Ib5a2c782ce43d35271192710ecc9aacec7bd3b63": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:38:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~If09358e8248785cd5683f576f3b7d01aa33a0046": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:38:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fneutron~master~I327de751e3ba26c5be03b2571b105492661999cb": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-04-08 15:14:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-04-08 15:51:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-09 08:25:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 1, "date": "2020-04-09 08:39:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"neutron/tests/functional/base.py": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "a65ba6c1122fcc555019c5e15410a85d960f8500", "unresolved": false, "patch_set": 2, "id": "df33271e_10cb49a5", "line": 268, "updated": "2020-04-06 13:35:07.000000000", "message": "Cool, since we think that this maybe a pottential reason why the virtual ports test is a bit flaky, can we try to remove the decorator from those tests and recheck this patch ?\n\nOr even, put a change as DO NOT REVIEW on top of this one doing it.", "commit_id": "ff1489b8c140bde1ab151ae6b2891fa7716ea38b"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "1297cf223bdd3fef62aecd59cf6c5fe0833bd509", "unresolved": false, "patch_set": 4, "id": "df33271e_0ea74a0d", "line": 265, "range": {"start_line": 265, "start_character": 18, "end_line": 265, "end_character": 36}, "updated": "2020-04-09 08:39:09.000000000", "message": "nit: typo enough\nI also think it is funny how the previous comment said:\n5 seconds should be more than enough\nLOL", "commit_id": "f93aebe7903becb7289e08e0a9237170818b3a8b"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "e66faddb74490b9281f9ab8c4466e8ed2be0c363", "unresolved": false, "patch_set": 4, "id": "df33271e_262252a5", "line": 267, "range": {"start_line": 267, "start_character": 40, "end_line": 267, "end_character": 42}, "updated": "2020-04-08 15:08:36.000000000", "message": "Looks OK, configuration default is 180 if I read correctly. So bump from 5 to 15 sounds acceptable!", "commit_id": "f93aebe7903becb7289e08e0a9237170818b3a8b"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "88763a3fd84bde5a14d6923e343c7730c8c95308", "unresolved": false, "patch_set": 4, "id": "df33271e_6669fabc", "line": 267, "range": {"start_line": 267, "start_character": 40, "end_line": 267, "end_character": 42}, "in_reply_to": "df33271e_262252a5", "updated": "2020-04-08 15:12:55.000000000", "message": "yeah, default is 180 seconds. https://docs.openstack.org/networking-\novn/latest/configuration/ml2_conf.html", "commit_id": "f93aebe7903becb7289e08e0a9237170818b3a8b"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "33074ece253de2cc1d09545f371c74fe837714fa", "unresolved": false, "patch_set": 4, "id": "df33271e_136ad7eb", "line": 267, "range": {"start_line": 267, "start_character": 40, "end_line": 267, "end_character": 42}, "in_reply_to": "df33271e_6669fabc", "updated": "2020-04-09 08:25:57.000000000", "message": "Fine for me then, I know you tested this many times locally.", "commit_id": "f93aebe7903becb7289e08e0a9237170818b3a8b"}], "zuul.d/project.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5ce0254d5fd084f74b856706fdba27482c057ba1", "unresolved": false, "patch_set": 1, "id": "df33271e_dc44601e", "line": 45, "range": {"start_line": 5, "start_character": 2, "end_line": 45, "end_character": 0}, "updated": "2020-04-06 10:10:43.000000000", "message": "Job neutron-functional-1 not defined", "commit_id": "8a4376a856084a4b742105e3f5e676c906d9a82d"}]}}, "opendev%2Fsystem-config~master~I13768ed2ee257c8175c378c58525a6c83654e83b": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 15:47:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-04-08 15:47:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 1, "date": "2020-04-08 15:47:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~master~I4224ab2ca2d66cab1ba596760c6bb594ad1ce098": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:38:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 19:01:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Freleases~master~I8af5ce92ecd8700537c64b4ebecb049111d7788b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 21:08:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 2, "date": "2020-04-09 21:28:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~I7fbd54f02cc4549f68321ff6905cff3f4de1ddde": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 10:03:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-09 14:26:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~Ie267150fb564231cf0114137b8d945c1e9ebb302": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 10:04:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-09 14:26:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "opendev%2Fsystem-config~master~I14fef0e178544d71390a6601915c745647435ab9": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 15:47:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 20:48:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fansible-config_template~master~I17f67c33088c2fe18a6e4b1951258b358c778a93": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fpuppet-openstack-guide~master~I3814f1a89882d0d86b621425dc9ff08f5c6b5d41": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-09 20:38:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:25:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"doc/source/contributor/meetings.rst": [{"author": {"_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, "change_message_id": "f4a515e527ebf574fb855cfc9a04f65885dcbbc4", "unresolved": false, "patch_set": 1, "id": "df33271e_c2a9b27c", "line": 25, "updated": "2020-04-09 12:54:13.000000000", "message": "typo?", "commit_id": "1ac9ab688ba2be1dc52c2ece79cf2d5628df87bd"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "f35def53ceadc8cb3560937649fb8ab4803c6029", "unresolved": false, "patch_set": 1, "id": "df33271e_a21bcec7", "line": 25, "in_reply_to": "df33271e_c2a9b27c", "updated": "2020-04-09 13:00:37.000000000", "message": "the whitespace is extra - but you need an empty item to make sphinx happy.\n\nLet me remove the whitespace", "commit_id": "1ac9ab688ba2be1dc52c2ece79cf2d5628df87bd"}]}}, "openstack%2Freleases~master~Ib58d07f9db78a1f0c52af77397acac01fb349395": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:16:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-04-09 20:35:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I325f42d64cb0d9f1b16d4f7957d975feeca3b897": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 20:35:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Iba00adcca12d0e459db72e04eef87d9fa07aacd5": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 11:40:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 2, "date": "2020-04-09 15:51:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 1, "date": "2020-04-09 12:12:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29911, "name": "Dantali0n", "email": "info@dantalion.nl", "username": "Dantali0n"}, {"value": 2, "date": "2020-04-09 20:32:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I083c9ff1bef0b3178ba17046745579e3bedb90a6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 07:40:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 10:27:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 2, "date": "2020-04-09 20:31:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ib0e935d7f2b484b5808ba385159661d0a9d6f78c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 1, "date": "2020-04-09 00:56:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-09 10:25:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-04-09 20:30:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"deliverables/ussuri/python-solumclient.yaml": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "86109a9e17dde4039954ca62f0141ee088414ff8", "unresolved": false, "patch_set": 1, "id": "df33271e_9730b3ea", "line": 13, "updated": "2020-04-08 12:11:08.000000000", "message": "Sean, okay if I bump this to 3.1.0? A new requirement was introduced.", "commit_id": "342250e2ce2f30a6c6562648662646f6c4478e8c"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "7d4095ecf848cd2333cbe5226cb0f8b1c12141db", "unresolved": false, "patch_set": 1, "id": "df33271e_6d0d5c34", "line": 13, "in_reply_to": "df33271e_9730b3ea", "updated": "2020-04-08 13:18:01.000000000", "message": "Yeah, I think that makes sense.", "commit_id": "342250e2ce2f30a6c6562648662646f6c4478e8c"}]}}, "openstack%2Freleases~master~Ia52230140b5124423ca904fdc1e46f67b6e569bc": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 1, "date": "2020-04-08 15:04:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 20:29:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-08 15:13:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deliverables/ussuri/puppet-tripleo.yaml": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "e1628ed71d3421f698ff603b86738f54f67c895f", "unresolved": false, "patch_set": 1, "id": "df33271e_34572505", "line": 17, "range": {"start_line": 17, "start_character": 13, "end_line": 17, "end_character": 17}, "updated": "2020-04-08 11:42:51.000000000", "message": "I wonder if the \"Remove Dell EMC PS Series Driver support\" doesn't warrant a 13.0.0 version. Though it's definitely something outside puppet-tripleo per se, so I am on the fence.\n\nside note: Seeing the great purge of old remnants in this deliverable makes me happy :D", "commit_id": "18b2bbb71e2c2aa177e1b99652e8735e729a1389"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "444a08c8ab62399c8f2974b0ad71c7ff89831b85", "unresolved": false, "patch_set": 1, "id": "df33271e_8354f022", "line": 17, "range": {"start_line": 17, "start_character": 13, "end_line": 17, "end_character": 17}, "in_reply_to": "df33271e_34572505", "updated": "2020-04-08 15:04:11.000000000", "message": "As with all other puppet modules we bump the version at the start of the cycle and not again since all changes during the cycle. Removal of bits would already be covered from the 11.x to 12.x upgrade from train -> ussuri.", "commit_id": "18b2bbb71e2c2aa177e1b99652e8735e729a1389"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "e1628ed71d3421f698ff603b86738f54f67c895f", "unresolved": false, "patch_set": 1, "id": "df33271e_743b6dd0", "line": 21, "updated": "2020-04-08 11:42:51.000000000", "message": "there are many release notes pending there... Just a reminder in case you forgot, and would prefer to bundle them in.", "commit_id": "18b2bbb71e2c2aa177e1b99652e8735e729a1389"}]}}, "openstack%2Fopenstack-helm~master~Ieb42aaa1e3640ce3b0fcb83a5b1acca2868ceeea": {"owner_id": 26441, "owner_name": "dave kormann", "owner_email": "davek@research.att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26201, "name": "AT&T Openstack-Helm CI", "email": "stacey.fletcher@att.com", "username": "ATT-OSH-CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24165, "name": "Renis Makadia", "email": "renis.makadia@att.com", "username": "renmak"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"ceph/templates/bin/_common_functions.sh.tpl": [{"author": {"_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, "change_message_id": "d6177353af4e18c6a73cb5ddd6597d651e7918ff", "unresolved": false, "patch_set": 2, "id": "9f5c4f37_27f55bcc", "line": 94, "range": {"start_line": 94, "start_character": 30, "end_line": 94, "end_character": 34}, "updated": "2017-09-22 18:26:00.000000000", "message": "this should also work for pci devs.", "commit_id": "e1aa7bf6e662e757e5c834aed71092a55e72effd"}, {"author": {"_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, "change_message_id": "143982a1ab071172b57e44f847ff5b9be2b6d09b", "unresolved": false, "patch_set": 2, "id": "7f515b1d_b0a3bc4f", "line": 94, "range": {"start_line": 94, "start_character": 30, "end_line": 94, "end_character": 34}, "in_reply_to": "9f5c4f37_27f55bcc", "updated": "2017-09-22 18:31:57.000000000", "message": "Completely agree \u2014 I limited it to SCSI as I didn't have any devices that only showed up on PCI to test against.  If I can lay my hands on a system (or fire up a vm) to test on, I'll expand this to support PCI@... addresses.", "commit_id": "e1aa7bf6e662e757e5c834aed71092a55e72effd"}], "tools/gate/funcs/disk.sh": [{"author": {"_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, "change_message_id": "d6177353af4e18c6a73cb5ddd6597d651e7918ff", "unresolved": false, "patch_set": 7, "id": "7f515b1d_d0d078cc", "updated": "2017-09-22 18:26:00.000000000", "message": "can we remove this whole file - we should just have a single method for creating loopback devices.", "commit_id": "73a136bdbd091895d5acc1e998313612c800a191"}, {"author": {"_account_id": 26441, "name": "dave kormann", "email": "davek@research.att.com", "username": "multics"}, "change_message_id": "143982a1ab071172b57e44f847ff5b9be2b6d09b", "unresolved": false, "patch_set": 7, "id": "7f515b1d_70ae642f", "in_reply_to": "7f515b1d_d0d078cc", "updated": "2017-09-22 18:31:57.000000000", "message": "I only have it here because I wanted a quick test that didn't require me to wrestle with the complexity of getting iscsi working.  Once Renis has the iscsi gate scripts settled we'll just ditch this in a merge of our work.  So, \"yes, soon I hope.\"", "commit_id": "73a136bdbd091895d5acc1e998313612c800a191"}]}}, "openstack%2Ftripleo-common~stable%2Fstein~Iec115bfa1ef00112705785a5b3e6ed7dc222070e": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-12 14:16:38.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-12 14:22:48.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fkolla~master~Id1592e20bcc42893a5e9d0dba9f67cf4e896d268": {"owner_id": 31539, "owner_name": "Piotr Rabiega", "owner_email": "piotrx.rabiega@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 11:47:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 4264, "name": "Matthias Runge", "email": "mrunge@redhat.com", "username": "mrunge"}, {"value": 2, "date": "2020-04-09 10:51:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 18:42:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 31539, "name": "Piotr Rabiega", "email": "piotrx.rabiega@intel.com", "username": "prabiegx"}], "comments": {"docker/collectd/Dockerfile.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "b9227fcea81a9837b5256d1db8169ca0ca7e5654", "unresolved": false, "patch_set": 1, "id": "df33271e_3409e52b", "line": 82, "range": {"start_line": 82, "start_character": 9, "end_line": 82, "end_character": 47}, "updated": "2020-04-08 11:34:41.000000000", "message": "No need for this in master - only C8 supported.", "commit_id": "09ca53504677084657d67836fa7be728d4edf44b"}, {"author": {"_account_id": 4264, "name": "Matthias Runge", "email": "mrunge@redhat.com", "username": "mrunge"}, "change_message_id": "185ff923a66d98ebb3afd6c90015f73ca876182b", "unresolved": false, "patch_set": 1, "id": "df33271e_5360df01", "line": 82, "range": {"start_line": 82, "start_character": 9, "end_line": 82, "end_character": 47}, "in_reply_to": "df33271e_3409e52b", "updated": "2020-04-09 08:29:23.000000000", "message": "I'd still think the guard makes sense here. That way, you can simply cherry-pick this to train.", "commit_id": "09ca53504677084657d67836fa7be728d4edf44b"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "848a34eb198060c3e7111025e087372e3df3f5f4", "unresolved": false, "patch_set": 1, "id": "df33271e_6e41b639", "line": 82, "range": {"start_line": 82, "start_character": 9, "end_line": 82, "end_character": 47}, "in_reply_to": "df33271e_5360df01", "updated": "2020-04-09 08:36:57.000000000", "message": "ok", "commit_id": "09ca53504677084657d67836fa7be728d4edf44b"}], "releasenotes/notes/collectd-pmu-C8-79cf5a93fe6de831.yaml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "b9227fcea81a9837b5256d1db8169ca0ca7e5654", "unresolved": false, "patch_set": 1, "id": "df33271e_342285a5", "line": 6, "range": {"start_line": 4, "start_character": 0, "end_line": 6, "end_character": 17}, "updated": "2020-04-08 11:34:41.000000000", "message": "We already have this here: https://review.opendev.org/#/c/704560/5/releasenotes/notes/collectd-pmu-6aeae4759b8a1563.yaml", "commit_id": "09ca53504677084657d67836fa7be728d4edf44b"}]}}, "openstack%2Freleases~master~I851a10e7fcbbd1f33c0e970b7a7a3806369ed80a": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 10:21:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 10:27:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-04-09 20:28:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fkolla~master~I71008f690fcb04289451efa819b5e7f6d81cf99f": {"owner_id": 4264, "owner_name": "Matthias Runge", "owner_email": "mrunge@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4264, "name": "Matthias Runge", "email": "mrunge@redhat.com", "username": "mrunge"}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-09 10:51:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 18:40:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "3861bcddf4e729934492ef1f783a2384a55956aa", "unresolved": false, "patch_set": 1, "id": "df33271e_a84f5232", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 47}, "updated": "2020-04-08 13:53:11.000000000", "message": "collectd: exclude pcie_errors on s390x\n\nexcept from fail log", "commit_id": "669ac4931fd75e5cbabc795eab178f298b28c0d4"}], "docker/collectd/Dockerfile.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "070a1ffc00faee4ce77641329a1587c5b717c1c8", "unresolved": false, "patch_set": 1, "id": "df33271e_e8915a48", "line": 82, "range": {"start_line": 82, "start_character": 18, "end_line": 82, "end_character": 24}, "updated": "2020-04-08 14:01:48.000000000", "message": "!=", "commit_id": "669ac4931fd75e5cbabc795eab178f298b28c0d4"}]}}, "opendev%2Fsystem-config~master~I45e4d9713f3ba4760ba384d13487c6214d068800": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 15:47:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 15:40:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/roles/ansible-cron/tasks/main.yaml": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "e6f2c879e23402e4b1882db6ce466404ada8f30d", "unresolved": false, "patch_set": 8, "id": "df33271e_8e019109", "side": "PARENT", "line": 30, "updated": "2020-04-09 15:40:59.000000000", "message": "I expect this will leave the logrotate rules in place in /etc. We'll want to remember to clean that file up.", "commit_id": "c8aeaf8fd17af9d210a573a9e2fe7d55b662f329"}]}}, "openstack%2Fkolla~master~Id106cb71624e0b0d8393904afd2a62469e6066f1": {"owner_id": 31539, "owner_name": "Piotr Rabiega", "owner_email": "piotrx.rabiega@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 11:54:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 4264, "name": "Matthias Runge", "email": "mrunge@redhat.com", "username": "mrunge"}, {"value": 2, "date": "2020-04-09 10:52:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 18:41:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fkolla~master~I2273430b60e7b259cb687e7ec5c9f0885b625e0d": {"owner_id": 30523, "owner_name": "Dincer Celik", "owner_email": "hello@dincercelik.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-09 12:36:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 18:38:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~Id8775a0563e33f1878b49a1e797a6912c41caa8f": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 2, "date": "2020-04-09 13:39:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-04-09 08:29:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 1, "date": "2020-04-09 09:49:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {"networking_ovn/common/maintenance.py": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "c58d7ff5639ce00f4b28e10111a41a1d9162f103", "unresolved": false, "patch_set": 3, "id": "1fa4df85_5190b543", "line": 486, "updated": "2020-03-20 13:30:17.000000000", "message": "Needs a default= parameter (or catch ValueError for py2.7 compatibility)", "commit_id": "574db1297fe3c59e6afda7ae6587f97a64edd7d0"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_a6d3a703", "line": 510, "range": {"start_line": 510, "start_character": 8, "end_line": 510, "end_character": 12}, "updated": "2020-04-01 15:24:20.000000000", "message": "Master code does not have the ValueError try/except, is it something that can only happen in stable/train?", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_05fb56c0", "line": 510, "range": {"start_line": 510, "start_character": 8, "end_line": 510, "end_character": 12}, "in_reply_to": "df33271e_a6d3a703", "updated": "2020-04-02 08:33:14.000000000", "message": "Yes, I had to add it here because the default= parameter for max() and min() is not compatible with python 2. See: https://review.opendev.org/#/c/714091/", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}], "networking_ovn/common/ovn_client.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_46ec5b8e", "line": 264, "range": {"start_line": 264, "start_character": 16, "end_line": 264, "end_character": 50}, "updated": "2020-04-01 15:24:20.000000000", "message": "Looks a bit different in https://review.opendev.org/#/c/703376/15/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py this check is split with additional log message", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_a529ca37", "line": 264, "range": {"start_line": 264, "start_character": 16, "end_line": 264, "end_character": 50}, "in_reply_to": "df33271e_46ec5b8e", "updated": "2020-04-02 08:33:14.000000000", "message": "++ good point, will add it here!", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}], "networking_ovn/common/utils.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_66135f67", "line": 449, "updated": "2020-04-01 15:24:20.000000000", "message": "Looks like these 2 functions appeared during the neutron move I can not see them in networking-ovn master and in neutron they were added in \"[OVN] Move OVN commons to neutron tree\"", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_451a7e16", "line": 449, "in_reply_to": "df33271e_66135f67", "updated": "2020-04-02 08:33:14.000000000", "message": "Yeah, apparently we moved part of the code from the original external ports patch with the rest of OVN (these methods and a few constants). But we need it here in train.", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}], "networking_ovn/ovsdb/ovsdb_monitor.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_c1b97515", "line": 86, "range": {"start_line": 83, "start_character": 0, "end_line": 86, "end_character": 18}, "updated": "2020-04-01 15:24:20.000000000", "message": "This comes from I3f7de633e5546dc78c3546b9c34ea81d0a0524d3 worth listing it too in commit message (or backport separately)", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_c5db2e4c", "line": 86, "range": {"start_line": 83, "start_character": 0, "end_line": 86, "end_character": 18}, "in_reply_to": "df33271e_c1b97515", "updated": "2020-04-02 08:33:14.000000000", "message": "++ will add it to the commit message, thanks for point it out", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_a1df1167", "line": 112, "range": {"start_line": 112, "start_character": 64, "end_line": 112, "end_character": 65}, "updated": "2020-04-01 15:24:20.000000000", "message": "No need for \",default=ovn_const.HA_CHASSIS_GROUP_HIGHEST_PRIORITY\" in train?", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_05d23628", "line": 112, "range": {"start_line": 112, "start_character": 64, "end_line": 112, "end_character": 65}, "in_reply_to": "df33271e_a1df1167", "updated": "2020-04-02 08:33:14.000000000", "message": "Oh that's a great point! I need to wrap it with a try..except because the default parameter is Python3 only", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}], "networking_ovn/tests/functional/test_ovn_db_sync.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "31ec5c65f9f5a22be4d4708a08e532405e9bb6ef", "unresolved": false, "patch_set": 6, "id": "df33271e_81f64dd6", "line": 899, "updated": "2020-04-01 15:24:20.000000000", "message": "Can only find this change in master \"[OVN] Add missing OVN functional tests\", though good to go in train from the look of it", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "0c5022c80b523737c1de4875fab1b90399261dff", "unresolved": false, "patch_set": 6, "id": "df33271e_25eadad6", "line": 899, "in_reply_to": "df33271e_81f64dd6", "updated": "2020-04-02 08:33:14.000000000", "message": "++", "commit_id": "3b8f606254d3ed7b34c4ded393009e31a711f321"}]}}, "opendev%2Fsystem-config~master~Ib064c8412a3df28790b9ef51d88c50d43de1842d": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:49:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 15:33:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "ed5521eac86312164aabef4e5b776ee0891d3203", "unresolved": false, "patch_set": 4, "id": "df33271e_664bd186", "line": 1824, "range": {"start_line": 1824, "start_character": 12, "end_line": 1824, "end_character": 41}, "updated": "2020-04-08 00:07:59.000000000", "message": "Wel - the real problem is that it depends on itself.", "commit_id": "ec62b9cab6c0ceb841ca5cb600eed608e1cf95d3"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "af39366b27cc920cdfb9f40777b73b97008c34ca", "unresolved": false, "patch_set": 4, "id": "df33271e_13684985", "line": 1828, "updated": "2020-04-07 22:29:04.000000000", "message": "Should this job depend on system-config update job since we run our puppet out of system-config?", "commit_id": "ec62b9cab6c0ceb841ca5cb600eed608e1cf95d3"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "ed5521eac86312164aabef4e5b776ee0891d3203", "unresolved": false, "patch_set": 4, "id": "df33271e_464e8d96", "line": 1828, "in_reply_to": "df33271e_13684985", "updated": "2020-04-08 00:07:59.000000000", "message": "It should be parented on infra-prod-service-base which depends on update-system-config", "commit_id": "ec62b9cab6c0ceb841ca5cb600eed608e1cf95d3"}]}}, "openstack%2Fironic~master~Ib1c327156acee8d34be74dd15c3d4003f7ef31df": {"owner_id": 7386, "owner_name": "Tzu-Mainn Chen", "owner_email": "tzumainn@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 06:53:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, {"value": 2, "date": "2020-04-09 07:45:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"doc/source/admin/node-multitenancy.rst": [{"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "952e1bdbe75b24b6261c8a88bbe72cdd5e9f54ce", "unresolved": false, "patch_set": 2, "id": "df33271e_43ddc940", "line": 26, "range": {"start_line": 26, "start_character": 1, "end_line": 26, "end_character": 51}, "updated": "2020-04-08 14:22:59.000000000", "message": "Is this link correct?", "commit_id": "58562ca52539a723f844e4ddfeb3aad7bfe11ea5"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "987cb9d855906393af505c36f0f45be17c202666", "unresolved": false, "patch_set": 2, "id": "df33271e_c39d58bc", "line": 26, "range": {"start_line": 26, "start_character": 1, "end_line": 26, "end_character": 51}, "in_reply_to": "df33271e_43ddc940", "updated": "2020-04-08 14:43:55.000000000", "message": "Oh whoops - definitely not. Thanks for the catch, should be fixed now!", "commit_id": "58562ca52539a723f844e4ddfeb3aad7bfe11ea5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7bee9d41cf60319427ffc5885e78f7b24067b2c2", "unresolved": false, "patch_set": 3, "id": "df33271e_1df3190c", "line": 1, "updated": "2020-04-08 15:57:14.000000000", "message": "not needed (you can always use :doc:`/admin/node-multitenancy`)", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_3df37de9", "line": 1, "in_reply_to": "df33271e_1df3190c", "updated": "2020-04-08 16:13:15.000000000", "message": "Ah, good to know - removed!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7bee9d41cf60319427ffc5885e78f7b24067b2c2", "unresolved": false, "patch_set": 3, "id": "df33271e_fdf595ee", "line": 10, "updated": "2020-04-08 15:57:14.000000000", "message": "Let's start with defining what owners and lessees are", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_3d39bd3e", "line": 10, "in_reply_to": "df33271e_fdf595ee", "updated": "2020-04-08 16:13:15.000000000", "message": "Added!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7bee9d41cf60319427ffc5885e78f7b24067b2c2", "unresolved": false, "patch_set": 3, "id": "df33271e_5ddc8173", "line": 24, "updated": "2020-04-08 15:57:14.000000000", "message": "nit: use \"the Bare Metal service\" instead of Ironic (except that when you're referring to a specific sub-service, like ironic-conductor).", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_1d8319ce", "line": 24, "in_reply_to": "df33271e_5ddc8173", "updated": "2020-04-08 16:13:15.000000000", "message": "Updated!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "5d7b61e3e6bc2d7df593c1c830790e95d4219a68", "unresolved": false, "patch_set": 3, "id": "df33271e_66b1fa8f", "line": 26, "updated": "2020-04-08 15:46:00.000000000", "message": "can you please use the use openstackdocstheme extlink extension ?", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7bee9d41cf60319427ffc5885e78f7b24067b2c2", "unresolved": false, "patch_set": 3, "id": "df33271e_3dd7fd51", "line": 26, "updated": "2020-04-08 15:57:14.000000000", "message": "this doesn't even require an extension, simply :doc:`/configuration/sample-policy`", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_fdad959b", "line": 26, "in_reply_to": "df33271e_3dd7fd51", "updated": "2020-04-08 16:13:15.000000000", "message": "Fixed!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "7bee9d41cf60319427ffc5885e78f7b24067b2c2", "unresolved": false, "patch_set": 3, "id": "df33271e_9de60944", "line": 60, "updated": "2020-04-08 15:57:14.000000000", "message": "This should be a subheading (ditto below)", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_fd9bd562", "line": 60, "in_reply_to": "df33271e_9de60944", "updated": "2020-04-08 16:13:15.000000000", "message": "Makes sense - updated!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "5d7b61e3e6bc2d7df593c1c830790e95d4219a68", "unresolved": false, "patch_set": 3, "id": "df33271e_06bbce71", "line": 129, "updated": "2020-04-08 15:46:00.000000000", "message": "ditto", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, "change_message_id": "645656ba4fcad08c95463623f71d448208438a24", "unresolved": false, "patch_set": 3, "id": "df33271e_dd89b126", "line": 129, "in_reply_to": "df33271e_06bbce71", "updated": "2020-04-08 16:13:15.000000000", "message": "Fixed!", "commit_id": "3ee9d5d947007128e8f82da82a7340c36ab2882e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "69ce13e9d310c758f265df581c9a8c749be0ee41", "unresolved": false, "patch_set": 4, "id": "df33271e_f82ac329", "line": 128, "updated": "2020-04-08 16:27:28.000000000", "message": "docs: Unknown interpreted text role \"metalsmith-doc\".", "commit_id": "674e097c65a1fa259d5e1f075c4182ad5a0bd0e2"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "b26c46e5c1128ee6cd7e2db89f54179b16a4f452", "unresolved": false, "patch_set": 4, "id": "df33271e_f802c36e", "line": 128, "in_reply_to": "df33271e_f82ac329", "updated": "2020-04-08 16:35:15.000000000", "message": "you need to update doc/source/conf.py to make it aware of metalsmith", "commit_id": "674e097c65a1fa259d5e1f075c4182ad5a0bd0e2"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c5743440960393e5a3054da9976398264a17053f", "unresolved": false, "patch_set": 5, "id": "df33271e_ef6f96f9", "line": 26, "updated": "2020-04-08 18:04:45.000000000", "message": "docs: unknown document: /configuration/sample-policy.html", "commit_id": "f134196a9c2b322e3156b53e9f710e1c6a85e518"}]}}, "opendev%2Fsystem-config~master~I5ea46cbf124006e38c045e2f93a19d33a9c3db91": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:49:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-09 15:31:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpython-octaviaclient~master~I229392b5b324e92909ea417696a3652492274613": {"owner_id": 10273, "owner_name": "Adam Harwell", "owner_email": "flux.adam@gmail.com", "labels": [{"value": 2, "date": "2020-04-09 19:32:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 19:53:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octaviaclient/osc/v2/amphora.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "ba83955ccf483d6af007abe9d114c261f4ac078f", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2b87bdb7", "line": 68, "updated": "2020-03-04 18:18:35.000000000", "message": "Should this be \"all fields\"?", "commit_id": "1037a06b6cdacbd628e8a2aad17f5d88b8edf2b8"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "777e7c1337219e56ba1e3d50c401f69f658038d9", "unresolved": false, "patch_set": 1, "id": "1fa4df85_50e84fb1", "line": 68, "in_reply_to": "1fa4df85_2b87bdb7", "updated": "2020-03-10 21:43:00.000000000", "message": "That isn't the feature I was adding, but it could be? I was just intending to show \"more\".", "commit_id": "1037a06b6cdacbd628e8a2aad17f5d88b8edf2b8"}], "octaviaclient/osc/v2/constants.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "ba83955ccf483d6af007abe9d114c261f4ac078f", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6ba13546", "line": 280, "updated": "2020-03-04 18:18:35.000000000", "message": "These are not all of the fields. Shouldn't this be *all* of the fields to be similar to other --long options in OSC?\nhttps://docs.openstack.org/api-ref/load-balancer/v2/index.html?expanded=list-amphora-detail#list-amphora", "commit_id": "1037a06b6cdacbd628e8a2aad17f5d88b8edf2b8"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "777e7c1337219e56ba1e3d50c401f69f658038d9", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f0d29bff", "line": 280, "in_reply_to": "1fa4df85_6ba13546", "updated": "2020-03-10 21:43:00.000000000", "message": "Well, not per the help-text I put in the --long option. :D\nBut, it could be. Do you want this? I can do this... That may make it VERY long though...", "commit_id": "1037a06b6cdacbd628e8a2aad17f5d88b8edf2b8"}]}}, "openstack%2Fkolla-ansible~master~I79fcbf1efb02b7187406d3c3fccea6f200bcea69": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:51:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 2, "date": "2020-04-09 18:36:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {"ansible/roles/nova-cell/tasks/rolling_upgrade.yml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "4df56ce34af4d36f777b95c1db296b9668c681a9", "unresolved": false, "patch_set": 1, "id": "df33271e_8bf69ed6", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 26}, "updated": "2020-04-09 18:36:12.000000000", "message": ":D", "commit_id": "1d70f509e30688826304e57775eabcd7b1e9afd2"}]}}, "openstack%2Fpython-octaviaclient~master~Ida05b7a07c5a9adf81c95be1fe44e32b82793303": {"owner_id": 31565, "owner_name": "Noah Mickus", "owner_email": "noah.mickus@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 19:14:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 2, "date": "2020-04-09 19:20:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octaviaclient/osc/v2/listener.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "ff60a5899e92bd8e2498afaebd6837e8c3841da6", "unresolved": false, "patch_set": 2, "id": "df33271e_660471c7", "line": 181, "updated": "2020-04-07 23:25:27.000000000", "message": "This probably does not need to be line wrapped so short. This should fit on two lines.", "commit_id": "6bdee470c650ac2dd5ed3659352029377ecef03a"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "4afa2384cc9872fa847e8ddf348dffbd8b717d5b", "unresolved": false, "patch_set": 3, "id": "df33271e_e547ae76", "line": 179, "updated": "2020-04-09 00:04:18.000000000", "message": "--tls-ciphers", "commit_id": "45ba5a7e041f4da85fb714bf3899f52440997293"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "4afa2384cc9872fa847e8ddf348dffbd8b717d5b", "unresolved": false, "patch_set": 3, "id": "df33271e_45601a02", "line": 480, "updated": "2020-04-09 00:04:18.000000000", "message": "--tls-ciphers", "commit_id": "45ba5a7e041f4da85fb714bf3899f52440997293"}], "octaviaclient/tests/unit/osc/v2/test_listener.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "4afa2384cc9872fa847e8ddf348dffbd8b717d5b", "unresolved": false, "patch_set": 3, "id": "df33271e_8556a229", "line": 194, "updated": "2020-04-09 00:04:18.000000000", "message": "--tls-ciphers", "commit_id": "45ba5a7e041f4da85fb714bf3899f52440997293"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "4afa2384cc9872fa847e8ddf348dffbd8b717d5b", "unresolved": false, "patch_set": 3, "id": "df33271e_65539e3a", "line": 291, "updated": "2020-04-09 00:04:18.000000000", "message": "--tls-ciphers", "commit_id": "45ba5a7e041f4da85fb714bf3899f52440997293"}], "releasenotes/notes/add-ability-set-listener-cipher-list-fe379d0d0821ed42.yaml": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "4afa2384cc9872fa847e8ddf348dffbd8b717d5b", "unresolved": false, "patch_set": 3, "id": "df33271e_c531ca0d", "line": 4, "updated": "2020-04-09 00:04:18.000000000", "message": "--tls-ciphers", "commit_id": "45ba5a7e041f4da85fb714bf3899f52440997293"}]}}, "openstack%2Fpython-octaviaclient~master~Iddf03867321c08c50ed374c5e33552604f60c701": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-31 13:02:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-03-25 00:10:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-18 08:41:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-09 19:18:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {}}, "openstack%2Fpython-octaviaclient~master~Ifd2964b17e8b5704e79a9ef0d8cd3000f637a154": {"owner_id": 31565, "owner_name": "Noah Mickus", "owner_email": "noah.mickus@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 19:14:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 2, "date": "2020-04-09 19:19:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-04-09 19:19:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octaviaclient/osc/v2/pool.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "0347ae2c16b02174b172c456086b6e8f6eb907ef", "unresolved": false, "patch_set": 4, "id": "df33271e_e0de7c3c", "line": 134, "updated": "2020-04-09 00:05:23.000000000", "message": "--tls-ciphers", "commit_id": "a2cbe349e896e579c3b67cfac4fa8c3a81480a94"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "0347ae2c16b02174b172c456086b6e8f6eb907ef", "unresolved": false, "patch_set": 4, "id": "df33271e_40e76813", "line": 360, "updated": "2020-04-09 00:05:23.000000000", "message": "--tls-ciphers", "commit_id": "a2cbe349e896e579c3b67cfac4fa8c3a81480a94"}], "octaviaclient/tests/unit/osc/v2/test_pool.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "0347ae2c16b02174b172c456086b6e8f6eb907ef", "unresolved": false, "patch_set": 4, "id": "df33271e_20e4e40c", "line": 130, "updated": "2020-04-09 00:05:23.000000000", "message": "--tls-ciphers", "commit_id": "a2cbe349e896e579c3b67cfac4fa8c3a81480a94"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "0347ae2c16b02174b172c456086b6e8f6eb907ef", "unresolved": false, "patch_set": 4, "id": "df33271e_60ea6cd8", "line": 214, "updated": "2020-04-09 00:05:23.000000000", "message": "--tls-ciphers", "commit_id": "a2cbe349e896e579c3b67cfac4fa8c3a81480a94"}], "releasenotes/notes/add-ability-set-pool-cipher-list-70128f983506fbdb.yaml": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "0347ae2c16b02174b172c456086b6e8f6eb907ef", "unresolved": false, "patch_set": 4, "id": "df33271e_c0bc18de", "line": 4, "updated": "2020-04-09 00:05:23.000000000", "message": "--tls-ciphers", "commit_id": "a2cbe349e896e579c3b67cfac4fa8c3a81480a94"}]}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I8f54265dbadf21da6badd690f5cb123b549cf48c": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:08:30.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fcharm-rabbitmq-server~master~If8bc2f271be71caccd4f3f0b50f8ae412bef35b7": {"owner_id": 30561, "owner_name": "Peter Matulis", "owner_email": "peter.matulis@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 18:23:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}], "comments": {"README.md": [{"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "d87fa1f6ee08bd1bf44e77c848a2c09fe101ef23", "unresolved": false, "patch_set": 3, "id": "df33271e_da6ec9fe", "line": 106, "updated": "2020-04-08 22:04:10.000000000", "message": "I expect this is copy and pasted. Since rabbitmq is not an API we should not use that language.", "commit_id": "691250c1d06788a3d9d904a4089b2dcabcc2aeb5"}, {"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "8d5728ceaea981a410a1debcae20dbea8df8ef13", "unresolved": false, "patch_set": 3, "id": "df33271e_baee601f", "line": 106, "in_reply_to": "df33271e_da6ec9fe", "updated": "2020-04-09 03:44:52.000000000", "message": "Ok.", "commit_id": "691250c1d06788a3d9d904a4089b2dcabcc2aeb5"}, {"author": {"_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, "change_message_id": "d87fa1f6ee08bd1bf44e77c848a2c09fe101ef23", "unresolved": false, "patch_set": 3, "id": "df33271e_3a77f5d6", "line": 110, "updated": "2020-04-08 22:04:10.000000000", "message": "We might want to highlight we are binding the \"amqp\" relation. And that all amqp data will be handled on the bound network interface.", "commit_id": "691250c1d06788a3d9d904a4089b2dcabcc2aeb5"}, {"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "8d5728ceaea981a410a1debcae20dbea8df8ef13", "unresolved": false, "patch_set": 3, "id": "df33271e_7a8b3867", "line": 110, "in_reply_to": "df33271e_3a77f5d6", "updated": "2020-04-09 03:44:52.000000000", "message": "Ok.", "commit_id": "691250c1d06788a3d9d904a4089b2dcabcc2aeb5"}]}}, "openstack%2Fkolla-ansible~master~I6351147ddaff8b2ae629179a9bc3bae2ebac9519": {"owner_id": 30810, "owner_name": "James Kirsch", "owner_email": "generalfuzz@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:23:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-09 14:57:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 0, "_account_id": 29543, "name": "Scott Solkhon", "email": "scott.solkhon@gresearch.co.uk", "username": "scott.solkhon"}], "comments": {"ansible/group_vars/all.yml": [{"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "e4d01c4cb5ae38cb4cbb8344b883e42c08087754", "unresolved": false, "patch_set": 4, "id": "df33271e_8b7a8721", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "updated": "2020-03-24 16:53:33.000000000", "message": "why do we distinct one types of cert (.pem) over another types of cert (.crt)?", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "3a91d0cdffb54a008d0f45c543952a27136cd856", "unresolved": false, "patch_set": 4, "id": "df33271e_74ea8475", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_510e7234", "updated": "2020-03-24 22:21:41.000000000", "message": "We need to name is a .crt file for the \"update-ca-certificates\" or \"update-ca-trust\" command to append the cert into the global \"ca-certficates.crt\" for the container. I just tried this with the same file named \".pem\" and it was ignored.\n\nhttps://superuser.com/questions/437330/how-do-you-add-a-certificate-authority-ca-to-ubuntu", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "e444fb223cb4b9a5e49d1ccd768f6f9ab3c76c88", "unresolved": false, "patch_set": 4, "id": "df33271e_f8f310e6", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_5c3af997", "updated": "2020-03-25 19:24:26.000000000", "message": "sounds like this is not something we are going to fix in this change.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "fca56fada9def61eea9da2022497111113259b58", "unresolved": false, "patch_set": 4, "id": "df33271e_510e7234", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_6eabd188", "updated": "2020-03-24 17:40:47.000000000", "message": "Ah, no idea. I guess we can still amend that?", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "9e7765175cf9cafe6fa49253d0a0e48d334e9596", "unresolved": false, "patch_set": 4, "id": "df33271e_5c3af997", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_74ea8475", "updated": "2020-03-25 11:55:49.000000000", "message": "Well, we can rename on fly.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "7c30159f5c9e6515a4c04ee6e8d1b85e6cd37f6c", "unresolved": false, "patch_set": 4, "id": "df33271e_ab24abc7", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_8b7a8721", "updated": "2020-03-24 17:08:14.000000000", "message": ".crt usually also hold PEM. I didn't get the question.\n\nI see this only does refactor the parent directory path variable.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "98dd5f0ba1126e4de66c97443d61d307af8c99cc", "unresolved": false, "patch_set": 4, "id": "df33271e_6eabd188", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_ab24abc7", "updated": "2020-03-24 17:23:46.000000000", "message": "I just asked why for some certs we use .pem, but for others .crt - both are extensions used for PEM certificates ;-) it just looks kind of weird.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "26f59590b31097ecd4a811c1c871766570469c9f", "unresolved": false, "patch_set": 4, "id": "df33271e_705f1072", "line": 751, "range": {"start_line": 751, "start_character": 64, "end_line": 751, "end_character": 67}, "in_reply_to": "df33271e_f8f310e6", "updated": "2020-03-26 09:09:46.000000000", "message": "++, totally orthogonal.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_e5e96eb7", "line": 756, "range": {"start_line": 756, "start_character": 13, "end_line": 756, "end_character": 24}, "updated": "2020-03-30 19:39:50.000000000", "message": "Let's be consistent on backend_tls vs tls_backend. tls_backend is more consistent with kolla_enable_tls_internal.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_85d8621e", "line": 761, "range": {"start_line": 760, "start_character": 0, "end_line": 761, "end_character": 30}, "updated": "2020-03-30 19:39:50.000000000", "message": "kolla_tls_backend_cert/key", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_2bd56e1c", "line": 760, "range": {"start_line": 760, "start_character": 54, "end_line": 760, "end_character": 56}, "updated": "2020-04-03 10:30:21.000000000", "message": "It's not a CA cert unless it's self-signed.", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_4bdef23d", "line": 761, "range": {"start_line": 761, "start_character": 0, "end_line": 761, "end_character": 21}, "updated": "2020-04-03 10:30:21.000000000", "message": "If we're defining a default for one we might as well do the other too. backend.key?", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_90f2b999", "line": 760, "range": {"start_line": 760, "start_character": 25, "end_line": 760, "end_character": 81}, "updated": "2020-04-06 13:54:47.000000000", "message": "Let's adapt the certificates role to a sensible default, not the other way around.\n\n{{ kolla_certificates_dir }}/backend.crt", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_70ef35b0", "line": 761, "updated": "2020-04-06 13:54:47.000000000", "message": "ditto", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_9f02b36e", "line": 754, "range": {"start_line": 750, "start_character": 0, "end_line": 754, "end_character": 82}, "updated": "2020-04-07 09:30:05.000000000", "message": "Could you update etc/kolla/globals.yml to match these new defaults?\n\nAlso, there is a reference to {{ node_config }}/certificates in doc/source/admin/advanced-configuration.rst.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2cb21578ae9486cf6bec314c78cb9b33f2b7a1a7", "unresolved": false, "patch_set": 14, "id": "df33271e_aa558f52", "line": 761, "range": {"start_line": 761, "start_character": 65, "end_line": 761, "end_character": 68}, "updated": "2020-04-08 10:03:22.000000000", "message": "ok, we're going for a key with .pem... Seems to be fairly equal between .key and .pem for keys in a small sample of tutorials (possibly more .key).\n\nWe do still have the keystone key generated as .key though, so let's be consistent one way or the other.", "commit_id": "b810fd5bb235f628c35bf5c22e96d32954e394c2"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "31e47189bd279c44ae43ba64b5f1015b1592d2dd", "unresolved": false, "patch_set": 14, "id": "df33271e_ddd25134", "line": 761, "range": {"start_line": 761, "start_character": 65, "end_line": 761, "end_character": 68}, "in_reply_to": "df33271e_aa558f52", "updated": "2020-04-08 16:25:42.000000000", "message": "I will go will .pem for the key. That is what lets encrypt generates.", "commit_id": "b810fd5bb235f628c35bf5c22e96d32954e394c2"}], "ansible/inventory/all-in-one": [{"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "a1312e14b955afa95968c2f8a0525ca9befa966c", "unresolved": false, "patch_set": 13, "id": "df33271e_c234604d", "line": 40, "range": {"start_line": 40, "start_character": 0, "end_line": 40, "end_character": 10}, "updated": "2020-04-07 09:41:35.000000000", "message": "which one of those changed roles runs on the monitoring node?", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "110fc223606b5a97965ce488599090f3812b2e9b", "unresolved": false, "patch_set": 13, "id": "df33271e_c25bc084", "line": 40, "range": {"start_line": 40, "start_character": 0, "end_line": 40, "end_character": 10}, "in_reply_to": "df33271e_c234604d", "updated": "2020-04-07 09:45:21.000000000", "message": "None yet, but the service-cert-copy role will be applied to various services in time. We could stick to control if you prefer.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "632e7d1bacad8239febf5c050e4c448c4ee72154", "unresolved": false, "patch_set": 13, "id": "df33271e_0203e843", "line": 40, "range": {"start_line": 40, "start_character": 0, "end_line": 40, "end_character": 10}, "in_reply_to": "df33271e_c25bc084", "updated": "2020-04-07 09:47:38.000000000", "message": "Well, then if it becomes required - we can add it in a respective change ;-)", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}], "ansible/inventory/multinode": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_ab7fbe12", "line": 32, "updated": "2020-04-03 10:30:21.000000000", "message": "Can we move this below the top-level groups, maybe under baremetal?", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_0ba6aac1", "line": 36, "range": {"start_line": 34, "start_character": 0, "end_line": 36, "end_character": 7}, "updated": "2020-04-03 10:30:21.000000000", "message": "These should not be hosting API services by default.\n\nThese should also be added for the all-in-one inventory.", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}], "ansible/roles/certificates/tasks/generate.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_6bfe566b", "line": 167, "range": {"start_line": 167, "start_character": 29, "end_line": 167, "end_character": 31}, "updated": "2020-04-03 10:30:21.000000000", "message": "This is not the CA location. We should copy it to the haproxy CA cert location though, similar to how it's done for the others.\n\n{{ haproxy_backend_cacert_dir }}/{{ haproxy_backend_cacert }}", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_bf8217c7", "line": 18, "range": {"start_line": 18, "start_character": 11, "end_line": 18, "end_character": 55}, "updated": "2020-04-07 09:30:05.000000000", "message": "Could iterate over these instead:\n\n- kolla_tls_backend_cert | dirname\n- kolla_tls_backend_key | dirname", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_dfa8bbda", "line": 166, "range": {"start_line": 166, "start_character": 11, "end_line": 166, "end_character": 67}, "updated": "2020-04-07 09:30:05.000000000", "message": "Might as well go straight to kolla_tls_backend_cert, as you have done for the key.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2cb21578ae9486cf6bec314c78cb9b33f2b7a1a7", "unresolved": false, "patch_set": 14, "id": "df33271e_cac45362", "line": 18, "range": {"start_line": 18, "start_character": 11, "end_line": 18, "end_character": 43}, "updated": "2020-04-08 10:03:22.000000000", "message": "Needs {{ }}", "commit_id": "b810fd5bb235f628c35bf5c22e96d32954e394c2"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2cb21578ae9486cf6bec314c78cb9b33f2b7a1a7", "unresolved": false, "patch_set": 14, "id": "df33271e_2aa17faa", "line": 27, "range": {"start_line": 27, "start_character": 11, "end_line": 27, "end_character": 42}, "updated": "2020-04-08 10:03:22.000000000", "message": "ditto", "commit_id": "b810fd5bb235f628c35bf5c22e96d32954e394c2"}], "ansible/roles/certificates/templates/openssl-kolla-backend.cnf.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_0b67ca4e", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 38}, "updated": "2020-04-03 10:30:21.000000000", "message": "I think we can drop this", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_0bccea32", "line": 22, "range": {"start_line": 18, "start_character": 0, "end_line": 22, "end_character": 11}, "updated": "2020-04-03 10:30:21.000000000", "message": "Ok, looking cleaner. I expect ansible_host will work in CI, since we define it as the node's IP. We can't assume that though and need to move to the fact-based kolla_address lookup.", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_1f8ce37d", "line": 18, "range": {"start_line": 17, "start_character": 0, "end_line": 18, "end_character": 79}, "updated": "2020-04-07 09:30:05.000000000", "message": "This doesn't really make sense. You can drop it and keep the else.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}], "ansible/roles/certificates/templates/openssl-kolla-internal.cnf.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_1d6722b9", "line": 1, "updated": "2020-04-02 17:30:09.000000000", "message": "Perhaps it would be cleaner to generate a third certificate for the backends?", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_cba706a7", "line": 17, "range": {"start_line": 17, "start_character": 6, "end_line": 17, "end_character": 55}, "updated": "2020-03-30 19:39:50.000000000", "message": "The DNS vs IP split makes sense for the FQDN/VIP, but for the backend we always use an IP.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_fd423e3d", "line": 17, "range": {"start_line": 17, "start_character": 6, "end_line": 17, "end_character": 55}, "in_reply_to": "df33271e_9cb0a645", "updated": "2020-04-02 17:30:09.000000000", "message": "The FQDNs referred to here resolve to the VIP, rather than a machine IP. We generally use IPs for everything else in Kolla Ansible (for better or worse). We probably should document that the backend certs need to reference the server's IP on the internal API network.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_9cb0a645", "line": 17, "range": {"start_line": 17, "start_character": 6, "end_line": 17, "end_character": 55}, "in_reply_to": "df33271e_cba706a7", "updated": "2020-03-31 05:29:07.000000000", "message": "If machines are assigned a fqdn (os1.server.com), and we are using self signed certs, it is possible to use the machine domain name as the validated dns name for the cert. Should we document that backend servers must be defined with ips for verification of self signed certs to work?", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_4bb5b6cc", "line": 31, "range": {"start_line": 31, "start_character": 6, "end_line": 31, "end_character": 36}, "updated": "2020-03-30 19:39:50.000000000", "message": "I don't really get this logic", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_fc8a9267", "line": 31, "range": {"start_line": 31, "start_character": 6, "end_line": 31, "end_character": 36}, "in_reply_to": "df33271e_4bb5b6cc", "updated": "2020-03-31 05:29:07.000000000", "message": "This is to ensure we are not including the ansible host ip in the list. Can you suggest a different approach?", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_1db9e213", "line": 31, "range": {"start_line": 31, "start_character": 6, "end_line": 31, "end_character": 36}, "in_reply_to": "df33271e_fc8a9267", "updated": "2020-04-02 17:30:09.000000000", "message": "I would suggest we add a variable that defines a group or list of groups to iterate over. The 'control' group might be a sensible default since that is where API servers are typically hosted.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_cbd546e7", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "updated": "2020-03-30 19:39:50.000000000", "message": "The address that we configure for the backend in HAProxy is:\n\nhost_ip = 'api' | kolla_address(host)", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "1b078b83be7648216f0df8eb64033c3920244986", "unresolved": false, "patch_set": 5, "id": "df33271e_10f22907", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_00731b4f", "updated": "2020-04-06 13:37:30.000000000", "message": "The task for gathering facts you see is just executed against localhost, so we don't get facts for all hosts.\n\ngather-facts.yml is a playbook, so you can import it like this:\n\n- import_playbook: gather-facts.yml\n\nYou can also add a 'when' condition, with the gotcha that it will not pick up the default in group_vars/all.yml:\n\n- import_playbook: gather-facts.yml\n  when: kolla_enable_tls_backend | default(false) | bool", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "6cc78abd1d156bdb572fa83dd6ed86b3af4dc994", "unresolved": false, "patch_set": 5, "id": "df33271e_00731b4f", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_0bd7ca4c", "updated": "2020-04-04 17:07:51.000000000", "message": "Sorry, but I need a little more help here. First off, when executing the certificates role via: \"kolla-ansible -i ~/multinode certificates\" the first thing that is put in stdout:\n\nPLAY [Apply role certificates] ****************************************************************************************************************\n\nTASK [Gathering Facts] *************************************************************************\n\nso it may already be executing.\n\nWhen I try to import it using:\n\n- name: gather facts\n  include_role:\n    name: gather-facts.yml\n\nor \n\n- name: gather facts\n  import_role:\n    name: gather-facts.yml\n\nThe output is:\n\nTASK [gather facts] ***************************************************************************************************************************\n[WARNING]: Ignoring invalid path provided to plugin path: '/root/kolla-ansible/ansible/gather-facts.yml' is not a directory\n\nand it will still fail with:\n\n\"FilterError: Interface 'bond0' not present on host '139.178.85.203'\"}", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "71beebb0d40c30c9c9964d937ce20c85f36d8aa4", "unresolved": false, "patch_set": 5, "id": "df33271e_0bd7ca4c", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_3c9ae312", "updated": "2020-04-03 10:09:43.000000000", "message": "We have a gather-facts.yml playbook which could be imported from the certificates.yml playbook. We might want to make that conditional on generating backend TLS certs.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "0b14619b20fa4994b550cb7e5d8c495e4b5629cf", "unresolved": false, "patch_set": 5, "id": "df33271e_3c9ae312", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_5d652ab4", "updated": "2020-04-02 22:56:16.000000000", "message": "Can you elaborate on how to perform this?", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_5d652ab4", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_7c87a2b6", "updated": "2020-04-02 17:30:09.000000000", "message": "We would need to gather facts in order to determine the IPs.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_7c87a2b6", "line": 36, "range": {"start_line": 32, "start_character": 0, "end_line": 36, "end_character": 11}, "in_reply_to": "df33271e_cbd546e7", "updated": "2020-03-31 05:29:07.000000000", "message": "For some reason, this is failing locally with:\n\n\"FilterError: Interface 'bond0' not present on host '139.178.85.203'\n\nbond0 is definitely present on that host and the interface I use (ad this function works in other places)", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/certificates/templates/openssl-kolla.cnf.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_fdfa3eba", "line": 38, "range": {"start_line": 19, "start_character": 0, "end_line": 38, "end_character": 12}, "updated": "2020-04-02 17:30:09.000000000", "message": "If we had a separate certificate we wouldn't need this.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/haproxy-config/templates/haproxy_single_service_listen.cfg.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_2b1672a9", "line": 64, "range": {"start_line": 64, "start_character": 4, "end_line": 64, "end_character": 18}, "updated": "2020-03-30 19:39:50.000000000", "message": "Why are we only setting this for HTTPS? This would also be applied to a plain TLS (not HTTPS) connection, since we're not checking service_mode.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_375a5529", "line": 64, "range": {"start_line": 64, "start_character": 4, "end_line": 64, "end_character": 18}, "in_reply_to": "df33271e_2b1672a9", "updated": "2020-03-31 05:29:07.000000000", "message": "We only want to use https to verify HAProxy connections when the backend is TLS. This way connections to backend server will be properly terminated. \n\nAre you implying that this should be set in other other service modes as well?", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_9d297238", "line": 64, "range": {"start_line": 64, "start_character": 4, "end_line": 64, "end_character": 18}, "in_reply_to": "df33271e_375a5529", "updated": "2020-04-02 17:30:09.000000000", "message": "Based on https://cbonte.github.io/haproxy-dconv/1.8/configuration.html#4-option%20httpchk, this option converts the check/check-ssl TCP/TLS health check into an HTTP(s) health check. That seems like a fairly useful thing to do when service_mode is 'http', but here it could also be 'tcp' (see L54).\n\nI'd say this should be a separate, explicit change.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/haproxy-config/templates/haproxy_single_service_split.cfg.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_a5e3e6d8", "line": 84, "updated": "2020-03-30 19:39:50.000000000", "message": "indentation", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_1dd442e8", "line": 84, "in_reply_to": "df33271e_a5e3e6d8", "updated": "2020-04-02 17:30:09.000000000", "message": "or remove from this change, based on other comments.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/haproxy/tasks/config.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_10d069c9", "line": 148, "range": {"start_line": 148, "start_character": 13, "end_line": 148, "end_character": 40}, "updated": "2020-04-06 13:54:47.000000000", "message": "kolla_certificates_dir", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_105b4987", "line": 162, "range": {"start_line": 162, "start_character": 13, "end_line": 162, "end_character": 35}, "updated": "2020-04-06 13:54:47.000000000", "message": "It's a cert, not a CA cert. We'll need a different variable for the backend CA, or we could state that the backend CA should be included in the regular {{ certificates }}/ca/\" path and remove this task.", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_9020f9f9", "line": 170, "range": {"start_line": 170, "start_character": 2, "end_line": 170, "end_character": 37}, "updated": "2020-04-06 13:54:47.000000000", "message": "It's not required for keepalived, just haproxy.", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "a1312e14b955afa95968c2f8a0525ca9befa966c", "unresolved": false, "patch_set": 13, "id": "df33271e_c2aaa083", "line": 152, "range": {"start_line": 152, "start_character": 6, "end_line": 152, "end_character": 45}, "updated": "2020-04-07 09:41:35.000000000", "message": "can we not hardcode the group name? just do it like in earlier step.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2cb21578ae9486cf6bec314c78cb9b33f2b7a1a7", "unresolved": false, "patch_set": 14, "id": "df33271e_caa733a7", "line": 147, "range": {"start_line": 147, "start_character": 6, "end_line": 147, "end_character": 13}, "updated": "2020-04-08 10:03:22.000000000", "message": "nit: indentation", "commit_id": "b810fd5bb235f628c35bf5c22e96d32954e394c2"}], "ansible/roles/haproxy/templates/haproxy_main.cfg.j2": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "78bfdfd33dd045ca63e9107114e4a5c6a7fe9869", "unresolved": false, "patch_set": 22, "id": "df33271e_54c39c89", "line": 21, "range": {"start_line": 21, "start_character": 10, "end_line": 21, "end_character": 78}, "updated": "2020-04-09 16:36:27.000000000", "message": "while I generally doubt one would run backend tls w/o any of these, I think this should depend on backend tls", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d2c7c1ce64e515aa5fac6d2c468bf77a618cfd97", "unresolved": false, "patch_set": 22, "id": "df33271e_b48f88cb", "line": 21, "range": {"start_line": 21, "start_character": 10, "end_line": 21, "end_character": 78}, "in_reply_to": "df33271e_54c39c89", "updated": "2020-04-09 16:52:11.000000000", "message": "Was going to comment similar, but you could disable backend TLS globally but enable per-service. Maybe safest to just add this unconditionally.", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "24b48b091b4bf2f8300682485de8f3b382c2b35b", "unresolved": false, "patch_set": 22, "id": "df33271e_2b38329e", "line": 21, "range": {"start_line": 21, "start_character": 10, "end_line": 21, "end_character": 78}, "in_reply_to": "df33271e_b48f88cb", "updated": "2020-04-09 18:30:56.000000000", "message": "Yeah, makes sense. This is only for base, should work.", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}], "ansible/roles/keystone/defaults/main.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_65eefeb4", "line": 151, "range": {"start_line": 151, "start_character": 0, "end_line": 151, "end_character": 28}, "updated": "2020-03-30 19:39:50.000000000", "message": "nit: keystone_enable_tls_backend would be more consistent.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/keystone/tasks/copy-certs.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_45401aa6", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 38}, "updated": "2020-03-30 19:39:50.000000000", "message": "Would be better to do this inside the role. We might need to add a 'listen' attribute to the 'Restart keystone container' handler.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_f2d91b57", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 38}, "in_reply_to": "df33271e_45401aa6", "updated": "2020-03-31 05:29:07.000000000", "message": "I agree, however: 'notify' is not a valid attribute for a TaskInclude. Not sure how we can get around this.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "71beebb0d40c30c9c9964d937ce20c85f36d8aa4", "unresolved": false, "patch_set": 5, "id": "df33271e_4b10b200", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 38}, "in_reply_to": "df33271e_53399aa1", "updated": "2020-04-03 10:09:43.000000000", "message": "I'm not sure which include you're talking about, but all of the tasks in the service-cert-copy role are using the copy module. You've also now add a notify to them all, so we just need to remove this one.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "0b14619b20fa4994b550cb7e5d8c495e4b5629cf", "unresolved": false, "patch_set": 5, "id": "df33271e_53399aa1", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 38}, "in_reply_to": "df33271e_bdfef667", "updated": "2020-04-02 22:56:16.000000000", "message": "Unfortunately, not to the include task.\n\nhttps://github.com/HadrienPatte/ansible-role-jellyfin/pull/4\nhttps://github.com/ansible/ansible/issues/26537\nhttps://github.com/ansible/ansible/issues/67084", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_bdfef667", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 38}, "in_reply_to": "df33271e_f2d91b57", "updated": "2020-04-02 17:30:09.000000000", "message": "You can add a notify to the individual tasks in the role. 2 of 3 already have it.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}], "ansible/roles/keystone/templates/wsgi-keystone.conf.j2": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "df566b41c9aa409bf8a203dd957596d1aee6b8a1", "unresolved": false, "patch_set": 22, "id": "df33271e_7404e04a", "line": 9, "range": {"start_line": 9, "start_character": 22, "end_line": 9, "end_character": 57}, "updated": "2020-04-09 16:49:36.000000000", "message": "also, we are running on an edge case here; this would normally fail in centos (the path is different) but ssl_module is already enabled so it gets ignored", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}], "ansible/roles/service-cert-copy/defaults/main.yml": [{"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "e4d01c4cb5ae38cb4cbb8344b883e42c08087754", "unresolved": false, "patch_set": 4, "id": "df33271e_4bb7dfd6", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 38}, "updated": "2020-03-24 16:53:33.000000000", "message": "why multiply vars, if you can just use project_name?", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "3a91d0cdffb54a008d0f45c543952a27136cd856", "unresolved": false, "patch_set": 4, "id": "df33271e_14c338ef", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 38}, "in_reply_to": "df33271e_4bb7dfd6", "updated": "2020-03-24 22:21:41.000000000", "message": "We will need to override this for certain services. Nova, for example needs to only use \"nova-api\" directory.", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}], "ansible/roles/service-cert-copy/tasks/main.yml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_eb9c8a6b", "line": 2, "updated": "2020-03-30 19:39:50.000000000", "message": "{{ project_name }} | ...", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_ab96024b", "line": 9, "range": {"start_line": 9, "start_character": 6, "end_line": 9, "end_character": 31}, "updated": "2020-03-30 19:39:50.000000000", "message": "This is covered by select_services_enabled_and_mapped_to_host", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_2bc95225", "line": 21, "range": {"start_line": 21, "start_character": 6, "end_line": 21, "end_character": 62}, "updated": "2020-03-30 19:39:50.000000000", "message": "This is the cert for the VIP. Seems like these being the same is a testing corner case, which we could cover by setting kolla_backend_internal_cert.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_0b69ee1f", "line": 26, "range": {"start_line": 26, "start_character": 42, "end_line": 26, "end_character": 58}, "updated": "2020-03-30 19:39:50.000000000", "message": "Should be item.key", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_501b9e7f", "line": 26, "range": {"start_line": 26, "start_character": 42, "end_line": 26, "end_character": 58}, "in_reply_to": "df33271e_0b69ee1f", "updated": "2020-03-31 05:29:07.000000000", "message": "This is config_directory since it doesn't always match with service name. For example, nova-api uses backend, but directory on container is /etc/nova - not /etc/nova-api", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_ddf65a8f", "line": 26, "range": {"start_line": 26, "start_character": 42, "end_line": 26, "end_character": 58}, "in_reply_to": "df33271e_501b9e7f", "updated": "2020-04-02 17:30:09.000000000", "message": "This is the configuration directory of the container on the host, not in the container e.g. /etc/kolla/nova-api/nova.pem", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_4bd496bd", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 13}, "updated": "2020-03-30 19:39:50.000000000", "message": "This will prevent the file from being updated if it changes.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_abd1e225", "line": 31, "range": {"start_line": 31, "start_character": 6, "end_line": 31, "end_character": 31}, "updated": "2020-03-30 19:39:50.000000000", "message": "This is covered by select_services_enabled_and_mapped_to_host", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_0581f2c3", "line": 33, "range": {"start_line": 33, "start_character": 0, "end_line": 33, "end_character": 37}, "updated": "2020-03-30 19:39:50.000000000", "message": "Let's just use the haproxy.tls_backend flag.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_2ba312b4", "line": 34, "updated": "2020-03-30 19:39:50.000000000", "message": "How about this:\n\nitem.value.haproxy.values() | selectattr('enabled', 'bool') | selectattr('tls_backend', 'defined') | selectattr('tls_backend', 'bool') | list | length > 0", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "d8ad55bde8c59528b077737c3a199372bc082730", "unresolved": false, "patch_set": 5, "id": "df33271e_50155e9b", "line": 34, "in_reply_to": "df33271e_2ba312b4", "updated": "2020-03-31 05:29:07.000000000", "message": "The conditional check 'item.value.haproxy.values() | selectattr('enabled', 'bool') | selectattr('tls_backend', 'defined') | selectattr('tls_backend', 'bool') | list | length > 0' failed. \n\nThe error was: no test named 'bool'", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d38e85f4492061fafe876e57fea3370e98b2a17", "unresolved": false, "patch_set": 5, "id": "df33271e_bd443675", "line": 34, "in_reply_to": "df33271e_50155e9b", "updated": "2020-04-02 17:30:09.000000000", "message": "That's annoying. It's because bool is a filter rather than a test. The problem is that we often use 'no' for false, but this evaluates as truthy unless you pass it through the bool filter.\n\nI think our options include building an incredibly complex filter chain, making a custom filter to munge the haproxy data, or making a custom jinja test that uses the bool filter.", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_c57a6aef", "line": 35, "updated": "2020-03-30 19:39:50.000000000", "message": "notify:\n    - \"Restart {{ item.key }} container\"", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "d93a0ad525a57d68f784e4f1657ebe26bee0dbb2", "unresolved": false, "patch_set": 5, "id": "df33271e_6ba99a8e", "line": 37, "updated": "2020-03-30 19:39:50.000000000", "message": "Same for this task", "commit_id": "fe6aeb3a7332a3a315f1a75ba02453c3ede54be4"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "eb653bfcf67735663e814640ecac7ede44cb7ff6", "unresolved": false, "patch_set": 8, "id": "df33271e_18fc50b3", "line": 30, "range": {"start_line": 29, "start_character": 0, "end_line": 30, "end_character": 118}, "updated": "2020-04-02 17:41:07.000000000", "message": "If we assume that all backends will either be tls or none will, then this works. I think that's safe. Something like this might work to incorporate the bool filter:\n\n- item.value.haproxy.values() | selectattr('enabled', 'defined') | map(attribute='enabled') | map('bool') | list | length > 0\n- item.value.haproxy.values() | selectattr('tls_backend', 'defined') | map(attribute='tls_backend') | map('bool') | list | length > 0\n\nAlternatively we build some magic select_services_with_haproxy_tls_backend filter.", "commit_id": "88ab722ce239977a1ab6670e0c761f6c2a19797f"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_0bf50a57", "line": 30, "range": {"start_line": 29, "start_character": 6, "end_line": 30, "end_character": 137}, "updated": "2020-04-03 10:30:21.000000000", "message": "I think I missed a bit. We need to filter out false values using select:\n\n- item.value.haproxy.values() | selectattr('enabled', 'defined') | map(attribute='enabled') | map('bool') | select | list | length > 0\n- item.value.haproxy.values() | selectattr('tls_backend', 'defined') | map(attribute='tls_backend') | map('bool') | | select | list | length > 0", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_6be8167b", "line": 51, "updated": "2020-04-03 10:30:21.000000000", "message": "ditto", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c89f069f5f6203b1fd5b1b089f46524400ab6ad5", "unresolved": false, "patch_set": 12, "id": "df33271e_d0044181", "line": 48, "range": {"start_line": 35, "start_character": 0, "end_line": 48, "end_character": 40}, "updated": "2020-04-06 13:54:47.000000000", "message": "I don't think this is right. The cert isn't necessarily a CA, unless it's self-signed. Why not drop the cert in the {{ certificates }}/ca/ directory when it's generated, then the first task in this file will copy it into place.", "commit_id": "f255026f82a53f4f45078f425f1cbbbbc8daa24a"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_02976892", "line": 20, "range": {"start_line": 17, "start_character": 0, "end_line": 20, "end_character": 38}, "updated": "2020-04-07 09:30:05.000000000", "message": "I still find the mix of .pem and .crt a bit confusing. We have a default backend cert with .crt, but the project and host specific lookups use .pem, as is the destination. I think this will trip people up.\n\nIf there is a requirement for .crt for the CA cert, let's not let that influence the cert's extension. Ansible has a splitext filter if you need to rename the cert in the certificates role when copying the CA cert into place. Alternatively just set the name explicitly to backend.crt (or use a role variable).", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "c5a00fa4c5e57a2fd57950263cf51c194468cc0f", "unresolved": false, "patch_set": 17, "id": "df33271e_18ea0774", "line": 40, "range": {"start_line": 37, "start_character": 0, "end_line": 40, "end_character": 61}, "updated": "2020-04-08 16:42:32.000000000", "message": "These are still .key", "commit_id": "f70630916e0c74af5add48101331af8c2a7506eb"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6e772926fb98d1c277a1fc0d4cedf3c280eb2042", "unresolved": false, "patch_set": 18, "id": "df33271e_8cda5814", "line": 40, "updated": "2020-04-08 17:06:00.000000000", "message": "-key.pem", "commit_id": "1d400bca11f19e52ad9eb75219de2bfbcf9faa6d"}], "doc/source/admin/advanced-configuration.rst": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9edb51afad0f05f051d103a97ad00d31a32329ad", "unresolved": false, "patch_set": 13, "id": "df33271e_a2f5dcef", "line": 199, "updated": "2020-04-07 09:30:05.000000000", "message": "We will need some documentation for this. It can be added separately.", "commit_id": "16d2c722b83aaf0297b5795bdc07e1dd463a3d67"}], "releasenotes/notes/copy-certificate-authority-into-containers-860cbda3384dd731.yaml": [{"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "e4d01c4cb5ae38cb4cbb8344b883e42c08087754", "unresolved": false, "patch_set": 4, "id": "df33271e_8bc8c755", "line": 17, "range": {"start_line": 17, "start_character": 14, "end_line": 17, "end_character": 70}, "updated": "2020-03-24 16:53:33.000000000", "message": "huh?", "commit_id": "c3bc91d4314ac0f8ad81c7de14b55a88e36cea3e"}], "releasenotes/notes/encrypt-backend-haproxy-keystone-fb96285d74fb464c.yaml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "78bfdfd33dd045ca63e9107114e4a5c6a7fe9869", "unresolved": false, "patch_set": 22, "id": "df33271e_744b402a", "line": 6, "range": {"start_line": 6, "start_character": 35, "end_line": 6, "end_character": 47}, "updated": "2020-04-09 16:36:27.000000000", "message": "nit: communication", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}], "tests/check-config.sh": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "78bfdfd33dd045ca63e9107114e4a5c6a7fe9869", "unresolved": false, "patch_set": 22, "id": "df33271e_f460f0a7", "line": 19, "range": {"start_line": 19, "start_character": 28, "end_line": 19, "end_character": 33}, "updated": "2020-04-09 16:36:27.000000000", "message": "more like .*\\.pem", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "78bfdfd33dd045ca63e9107114e4a5c6a7fe9869", "unresolved": false, "patch_set": 22, "id": "df33271e_d465ecb6", "line": 20, "range": {"start_line": 20, "start_character": 28, "end_line": 20, "end_character": 33}, "updated": "2020-04-09 16:36:27.000000000", "message": "ditto", "commit_id": "b475643c112f49701db2fb3d1493987888c97c8a"}], "tests/templates/globals-default.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_ebfb8643", "line": 122, "range": {"start_line": 122, "start_character": 0, "end_line": 122, "end_character": 21}, "updated": "2020-04-03 10:30:21.000000000", "message": "The certificates role should probably copy this into place.", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "f74d27c17b72ffd5ec11431fc1b8acaa180bd4db", "unresolved": false, "patch_set": 14, "id": "df33271e_8a088b2d", "side": "PARENT", "line": 120, "updated": "2020-04-08 10:10:06.000000000", "message": "I'm interested to know which part of this change allows us to remove this. Is it a bug fix that should be backported to Train?", "commit_id": "9643dd54e26760d6249eed2ecb2712da28b05882"}, {"author": {"_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, "change_message_id": "31e47189bd279c44ae43ba64b5f1015b1592d2dd", "unresolved": false, "patch_set": 14, "id": "df33271e_06cf4eb0", "side": "PARENT", "line": 120, "in_reply_to": "df33271e_8a088b2d", "updated": "2020-04-08 16:25:42.000000000", "message": "This parameter isn't used anywhere - accidentally went in with the CI test txn. Doesn't need a backport since the tls CI test is new to Ussuri", "commit_id": "9643dd54e26760d6249eed2ecb2712da28b05882"}], "tests/templates/inventory.j2": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "6d56a323d34df8eba97a9cbc9c23ea80646ddfc3", "unresolved": false, "patch_set": 10, "id": "df33271e_2b972eee", "line": 53, "range": {"start_line": 51, "start_character": 0, "end_line": 53, "end_character": 7}, "updated": "2020-04-03 10:30:21.000000000", "message": "As in multinode.", "commit_id": "4716d7a792e76397103bdcbd2ab7924506482112"}]}}, "openstack%2Ftripleo-quickstart-extras~master~I4778b24866078c451997ffca3b9b80671f912b9d": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-28 13:52:52.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-27 15:56:09.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"roles/undercloud-deploy/templates/hieradata-overrides-t-h-t-undercloud.yaml.j2": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "feba2c6e867d602e3f35d1457fdac9bd0cc71b36", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ed6354db", "line": 5, "range": {"start_line": 3, "start_character": 0, "end_line": 5, "end_character": 15}, "updated": "2020-02-27 15:28:20.000000000", "message": "This is the wrong spot. This is hieradata. There should be a custom env file configuration somewhere (not sure if we've implemented it in t-q-e)", "commit_id": "5aed5eb8ec6000a2d51102091f2e4d46faac43f7"}]}}, "openstack%2Fnova~master~I167719dd72657e824b7e0183a09aa1a8cf0c4299": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "6b258966615866f7a75b97b7792f4e3a82b808de", "unresolved": false, "patch_set": 1, "id": "5faad753_b1bc7706", "line": 13, "updated": "2019-09-14 02:43:08.000000000", "message": "Maybe you shuold be add the \"Related-Bug: #1843836\" or #Partial-Bug: #1815879\".", "commit_id": "95bc60222de4707dc95914cb5e62e9705ebfb921"}]}}, "openstack%2Fnova~master~Ie9af539cf1cdbce14c30dbf89e4676ebc50f3246": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 14:10:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:09:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fswift~feature%2Flosf~I3cb1fcffc8a09c356ed0e9f5e10f78ddc15cda9f": {"owner_id": 25251, "owner_name": "Alexandre L\u00e9cuyer", "owner_email": "alexandre.lecuyer@corp.ovh.com", "labels": [{"value": 2, "date": "2020-04-09 16:04:06.000000000", "_account_id": 13852, "name": "Romain LE DISEZ", "email": "romain.le-disez@corp.ovh.com", "username": "rledisez"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"swift/obj/kvfile.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "828d0c7e9ba2c09305444439e0611abc3fbc6d2d", "unresolved": false, "patch_set": 1, "id": "df33271e_da5d297a", "line": 24, "updated": "2020-04-08 21:49:16.000000000", "message": "pep8: F401 'split' imported but unused", "commit_id": "2c09d6e6e45a61ed90ab30c3b0882e3fac08d481"}, {"author": {"_account_id": 13852, "name": "Romain LE DISEZ", "email": "romain.le-disez@corp.ovh.com", "username": "rledisez"}, "change_message_id": "d4146a764cdb9451588b031a45793d9e705bc7e5", "unresolved": false, "patch_set": 2, "id": "df33271e_59f7558c", "line": 811, "updated": "2020-04-09 16:04:06.000000000", "message": "So all this green is not new code, but code taken from diskfile.py to replace the os.listdir by vfiles.listdir", "commit_id": "4e5960293c696a47405435d34cc5cfb093f2f321"}, {"author": {"_account_id": 13852, "name": "Romain LE DISEZ", "email": "romain.le-disez@corp.ovh.com", "username": "rledisez"}, "change_message_id": "d4146a764cdb9451588b031a45793d9e705bc7e5", "unresolved": false, "patch_set": 2, "id": "df33271e_390b717d", "line": 932, "updated": "2020-04-09 16:04:06.000000000", "message": "Copied to replace listdir() calls too", "commit_id": "4e5960293c696a47405435d34cc5cfb093f2f321"}], "swift/obj/vfile.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "828d0c7e9ba2c09305444439e0611abc3fbc6d2d", "unresolved": false, "patch_set": 1, "id": "df33271e_fa58ed8a", "line": 27, "updated": "2020-04-08 21:49:16.000000000", "message": "pep8: F401 'defaultdict' imported but unused", "commit_id": "2c09d6e6e45a61ed90ab30c3b0882e3fac08d481"}]}}, "openstack%2Fglance~master~I5118489284fea007f8f29663581221b07a575cf3": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:38:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-08 19:41:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {"glance/api/v2/images.py": [{"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "1332787e4d87ab496e8d0f04d58f7af60e1f7293", "unresolved": false, "patch_set": 2, "id": "df33271e_16781329", "line": 116, "updated": "2020-04-08 18:42:25.000000000", "message": "See comment way below.", "commit_id": "5d68cc13800d4f0c349308cc9dda0dad348d865d"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "36ab44263615f1062800d2eeb4b25d6eca32c101", "unresolved": false, "patch_set": 2, "id": "df33271e_912a6d7b", "line": 116, "in_reply_to": "df33271e_16781329", "updated": "2020-04-08 18:58:49.000000000", "message": "Done", "commit_id": "5d68cc13800d4f0c349308cc9dda0dad348d865d"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "1332787e4d87ab496e8d0f04d58f7af60e1f7293", "unresolved": false, "patch_set": 2, "id": "df33271e_d686ab13", "line": 1108, "updated": "2020-04-08 18:42:25.000000000", "message": "I suggest doing the validation down here in the request deserializer -- will keep it all in one place, and will be easier when this is refactored to do schema validation.", "commit_id": "5d68cc13800d4f0c349308cc9dda0dad348d865d"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "36ab44263615f1062800d2eeb4b25d6eca32c101", "unresolved": false, "patch_set": 2, "id": "df33271e_f12139a1", "line": 1108, "in_reply_to": "df33271e_d686ab13", "updated": "2020-04-08 18:58:49.000000000", "message": "Done", "commit_id": "5d68cc13800d4f0c349308cc9dda0dad348d865d"}]}}, "openstack%2Ftripleo-ansible~master~I031559a377a8fe399e1cb0611991f1725d554ce7": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Idd0641a2f7be1d3d8c1995478590dc58370795b5": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29775, "name": "Sandeep Yadav", "email": "sandyada@redhat.com", "username": "sandeepyadav93"}, {"value": -1, "date": "2020-04-09 14:01:39.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}], "comments": {"tripleoclient/tests/v1/overcloud_deploy/test_overcloud_deploy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8103a4729a67d025dde41480ceb930c136893bcf", "unresolved": false, "patch_set": 3, "id": "df33271e_adbb160c", "line": 686, "updated": "2020-04-07 00:51:11.000000000", "message": "pep8: F841 local variable 'testcase' is assigned to but never used", "commit_id": "d045387f993e71adcc7493b7167d002ba6260c74"}], "tripleoclient/v1/overcloud_deploy.py": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "887faab8203ea1be785bd0e202c748c5e6493c3b", "unresolved": false, "patch_set": 1, "id": "df33271e_57593dfc", "line": 279, "range": {"start_line": 279, "start_character": 0, "end_line": 279, "end_character": 39}, "updated": "2020-04-06 21:50:09.000000000", "message": "might want to put this in under line 304 at 314, but otherwise this is great.", "commit_id": "9285abe35c802283ca2573d976641a0da088fbfa"}]}}, "opendev%2Fsystem-config~master~I7ee0c60fade0b29a52898a7edf64554d1aa61cae": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:12:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-09 15:53:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/roles/gerrit/tasks/main.yaml": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "c9287ff0bd19dbddf9b8a792455aeaa458801c25", "unresolved": false, "patch_set": 1, "id": "df33271e_102092f7", "line": 306, "range": {"start_line": 306, "start_character": 105, "end_line": 306, "end_character": 112}, "updated": "2020-04-03 15:43:58.000000000", "message": "I think we need to define this or substitute it here.", "commit_id": "133d3a1e8d6028e8967a34f0a13ab72f656a0637"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "c9287ff0bd19dbddf9b8a792455aeaa458801c25", "unresolved": false, "patch_set": 1, "id": "df33271e_70863ede", "line": 315, "range": {"start_line": 315, "start_character": 88, "end_line": 315, "end_character": 95}, "updated": "2020-04-03 15:43:58.000000000", "message": "See above. Not sure if the same command.", "commit_id": "133d3a1e8d6028e8967a34f0a13ab72f656a0637"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "b0e0167048f81917426b60beef074c75aefe8132", "unresolved": false, "patch_set": 3, "id": "df33271e_3034b6fb", "line": 306, "range": {"start_line": 306, "start_character": 103, "end_line": 306, "end_character": 104}, "updated": "2020-04-03 15:51:13.000000000", "message": "This \\ should be removed. We only need a single \\", "commit_id": "aa56b7a712c46ef8007529e44e963b2de456a9b3"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "b0e0167048f81917426b60beef074c75aefe8132", "unresolved": false, "patch_set": 3, "id": "df33271e_903942f4", "line": 315, "range": {"start_line": 315, "start_character": 86, "end_line": 315, "end_character": 87}, "updated": "2020-04-03 15:51:13.000000000", "message": "See above.", "commit_id": "aa56b7a712c46ef8007529e44e963b2de456a9b3"}]}}, "openstack%2Fnova~stable%2Frocky~I0ef4b954b7f4ae65b6c0f96580c5f9472a2b873c": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22076, "name": "Kevin Zhao", "email": "kevin.zhao@linaro.org", "username": "KevinZhao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fproject-config~master~I3a56b537a8b96567fbef002c5b4ab3f42dcb96ba": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 17:13:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-09 16:09:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/copy-release-tools-scripts/files/release-tools/add_master_python3_jobs.sh": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "e490444d8ec1cc442a7f7691eddc5ab0c945f501", "unresolved": false, "patch_set": 1, "id": "df33271e_a86a88af", "line": 63, "updated": "2020-04-09 17:13:17.000000000", "message": "You can do multiple files in one `git add ...` so don't really need a loop, you just need to get them all on one line with something like:\n\n        git add $(echo $changes)\n\nOr even up above where you populate the $changes value you could just do:\n\n  changes=$(git diff-index --name-only HEAD --|paste -s -)\n\nThat way they're already all in one line in the variable itself, and then you only need to:\n\n        git add $changes", "commit_id": "b7933a7e701039ed9e3e29a60b2b53e576df1730"}], "roles/copy-release-tools-scripts/files/release-tools/functions": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "e816e94463f7e62e835f00b9079cdf0055930e40", "unresolved": false, "patch_set": 1, "id": "df33271e_88106450", "line": 89, "range": {"start_line": 89, "start_character": 10, "end_line": 89, "end_character": 11}, "updated": "2020-04-09 17:07:36.000000000", "message": "This appears to be the reason why we were picking up extra files. Not sure why we want to keep backup files in gate jobs, but safe enough to not add it in our job template patch.", "commit_id": "b7933a7e701039ed9e3e29a60b2b53e576df1730"}]}}, "openstack%2Ftripleo-ansible~master~I9c5f3023dbac1a9409d83341790df2a6f5d82179": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-08 18:32:27.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/playbooks/cli-create-deployment-plan.yaml": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "71bf24d0a2683b0b12461cc220d82582c872a50f", "unresolved": false, "patch_set": 1, "id": "df33271e_25d0b1f7", "line": 48, "range": {"start_line": 48, "start_character": 14, "end_line": 48, "end_character": 18}, "updated": "2020-04-07 13:09:31.000000000", "message": "Can you update these no_log options to use the following Jinja expression?\n\n  \"{{ not ((ansible_verbosity | int) >= 2) | bool }}\"\n\nWe have a change here: https://review.opendev.org/#/c/715006/5 that will update all of our existing no_log options to respect ansible verbosity and it would be great if we could simply get these to follow that pattern.", "commit_id": "5a86d9d76cbfcbfff789dfa9377381f618dd3105"}]}}, "openstack%2Ftripleo-heat-templates~master~I43fd5f67c1a0be6eaa1752575349e64329cada4a": {"owner_id": 14250, "owner_name": "Grzegorz Grasza", "owner_email": "xek@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 18:07:10.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10873, "name": "Juan Antonio Osorio Robles", "email": "jaosorior@redhat.com", "username": "ejuaoso"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 0, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 2, "date": "2020-04-08 18:11:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 0, "_account_id": 26359, "name": "Andrew Austin", "email": "aaustin@redhat.com", "username": "aaustin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "f2c5aff2afe06db3c8e03fc35f6983d2506d8073", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_40f16fdd", "line": 13, "updated": "2020-01-09 19:14:24.000000000", "message": "should be a launchpad reference for upstream patches.", "commit_id": "3766564edb9e3a6e3fe49054f1f9efdf0e67ee93"}], "deployment/apache/apache-baremetal-puppet.j2.yaml": [{"author": {"_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, "change_message_id": "4f4c4d6b3d28f36448bacc271cd456a93b709570", "unresolved": false, "patch_set": 4, "id": "df33271e_5db2c195", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "updated": "2020-03-27 20:12:38.000000000", "message": "We want to make sure we have a default here.\n\n {%- if network.vip|default(false) %}", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}, {"author": {"_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, "change_message_id": "646935c2ba17dfbc182d0e23b59d4f05da1c0956", "unresolved": false, "patch_set": 4, "id": "df33271e_8e61df3c", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "in_reply_to": "df33271e_5d0e413b", "updated": "2020-04-07 12:01:07.000000000", "message": "Done", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}, {"author": {"_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, "change_message_id": "4864acbf8f9e5de914aa8d014508be06bc16310b", "unresolved": false, "patch_set": 4, "id": "df33271e_9849f7d1", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "in_reply_to": "df33271e_5d0e413b", "updated": "2020-03-27 20:47:37.000000000", "message": "This is'nt ansible. It's python->jinj2 - see: tripleo_common/utils/template.py#L135\n\nIs it ansible specificly that won't evaluate bare variables? Or is it actually a jinja2? (If this is something in jinja2 we have many many places to update in THT.)", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "9be623e8aaa78ae3442e185722482aca7ec6b7b4", "unresolved": false, "patch_set": 4, "id": "df33271e_5d0e413b", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "in_reply_to": "df33271e_5db2c195", "updated": "2020-03-27 20:15:24.000000000", "message": "In future versions of ansible the evaluation of bare variables will be removed.\n\n    {% if network.vip | default(false) | bool %}", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}, {"author": {"_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, "change_message_id": "8d97d23733ffc74356a862cbc81aa4aeac149aea", "unresolved": false, "patch_set": 4, "id": "df33271e_97727348", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "in_reply_to": "df33271e_8e61df3c", "updated": "2020-04-08 12:32:38.000000000", "message": "looks like there is no bool filter\n\njinja2.exceptions.TemplateAssertionError: no filter named 'bool'", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "cec6d32f4256d93215a8f37ee9663e60b2b51e1f", "unresolved": false, "patch_set": 4, "id": "df33271e_bf4da9c5", "line": 66, "range": {"start_line": 66, "start_character": 9, "end_line": 66, "end_character": 30}, "in_reply_to": "df33271e_9849f7d1", "updated": "2020-03-30 13:07:57.000000000", "message": "I know ansible is deprecating it which leverages the same jinja2, but I'm not sure if Jinja2 is the reason Ansible is deprecating this functionality. That said, even if this still works in Jinja2 after the Ansible deprecation I would still rewrite the statement so that its not comparing bare variables.", "commit_id": "76f093bad658b4e4ebd0cd431cc1a39839614443"}]}}, "zuul%2Fzuul~master~Ie2c4b96dfd5fac45970e705646264f1801a93ffc": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7069, "name": "Joshua Hesketh", "email": "josh@nitrotech.org", "username": "jhesketh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 0, "date": "2020-04-09 17:02:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"tests/fixtures/config/data-return/git/common-config/playbooks/data-return-inventory.yaml": [{"author": {"_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, "change_message_id": "86a199f79b6b8a32d3500e61a92501d7deebb5a2", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_b15380e2", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "updated": "2018-08-21 00:36:51.000000000", "message": "I wonder if we should set this to be a fact, to avoid breaking the API on add_host.  If somebody wanted to run this playbook directly in ansible, they'd get a syntax error.", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}, {"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "231f155eafcaebbf1ea539e9b8668a8ec8458b9c", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_e5401209", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "in_reply_to": "3f79a3b5_332f2d40", "updated": "2018-09-17 18:04:46.000000000", "message": "++ for using zuul_return as this is clearly an api to influence child jobs (and the only api in zuul to influence child jobs is zuul_return)", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "cc87be4a129c73bc2cce238e97023eafb707ad6c", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_332f2d40", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "in_reply_to": "3f79a3b5_b15380e2", "updated": "2018-08-23 04:42:35.000000000", "message": "this is not breaking the API and you won't get a syntax error. though it's a behavior change indeed...", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "f6246a10afc2c1accab7b4db1e73e7d995575ec4", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_a4bc396c", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "in_reply_to": "3f79a3b5_e5401209", "updated": "2018-09-19 05:44:18.000000000", "message": "Next PS revert to the initial proposal and only rely on zuul_return to update the inventory.", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}], "zuul/ansible/actiongeneral/add_host.py": [{"author": {"_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, "change_message_id": "cc145570ebf250369cdeb99e8975dea00d1fa0d8", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e366aec1", "line": 124, "range": {"start_line": 116, "start_character": 0, "end_line": 124, "end_character": 26}, "updated": "2018-08-13 15:12:42.000000000", "message": "I am not sure how, but I think we want this change to be optional (false by default). Because as it stands now, any time we use add_host, we'll add the host into the inventory file.  I can see times, between run phases where we don't actually want to do that.\n\nMaybe we need to toggle a specific zuul fact to enable updating of inventory, as not to break user facing API for add_host.", "commit_id": "43aedca2074366b07b24d2acb4a36153eca8aeb4"}, {"author": {"_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, "change_message_id": "86a199f79b6b8a32d3500e61a92501d7deebb5a2", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_715f28e5", "line": 118, "updated": "2018-08-21 00:36:51.000000000", "message": "do we need to vendor the entry add_host logic here? Is it would be possible to use super() then add out zuul specific bits?", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "cc87be4a129c73bc2cce238e97023eafb707ad6c", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_f3245562", "line": 118, "in_reply_to": "3f79a3b5_715f28e5", "updated": "2018-08-23 04:42:35.000000000", "message": "that can be done, not sure if it will cause side effect though.", "commit_id": "cfebe3c6ce60addc7890b8d1a0e73ea6588cd009"}], "zuul/executor/server.py": [{"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "0d43406a5c312d4ca1ede766480f47fd25da9dca", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_4061eaa8", "line": 975, "updated": "2018-08-09 04:49:28.000000000", "message": "correct the indentation for this line as pep8 failing", "commit_id": "5e7931434826cd1290f7553e7883cad3bf893aaa"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "8429471388a1d83a3b57725bf95999bfdc915c39", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_7b77ec03", "line": 975, "in_reply_to": "3f79a3b5_4061eaa8", "updated": "2018-08-09 13:50:08.000000000", "message": "Done", "commit_id": "5e7931434826cd1290f7553e7883cad3bf893aaa"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "03fc5a9d96cfb5cce7d06d342c11dbea4fe031b5", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_4d585657", "line": 1075, "updated": "2018-11-18 19:44:55.000000000", "message": "Can we log this case? Could indicate users that are either 1) confused and need help or 2) trying something dangerous.", "commit_id": "f69f27fe36449b4f5f0e34ad428bb29d592c922c"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "b1437960c0b3bb755f311407fdaa9a0c1f62bf65", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_6e99897e", "line": 1075, "in_reply_to": "3f79a3b5_4d585657", "updated": "2018-11-19 03:17:25.000000000", "message": "Done", "commit_id": "f69f27fe36449b4f5f0e34ad428bb29d592c922c"}, {"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "7af9490c5f33644d435025541e0238508044ced6", "unresolved": false, "patch_set": 14, "id": "bfb3d3c7_fff12796", "line": 1133, "range": {"start_line": 1133, "start_character": 18, "end_line": 1133, "end_character": 22}, "updated": "2019-05-30 17:58:36.000000000", "message": "This actually looks like hostvars so we probably should name it hostvars.", "commit_id": "ed4ee57c386a9f3be3b70c5b976cb69786cf70ba"}]}}, "starlingx%2Fansible-playbooks~master~Ibd4cdcb53d1d55409d947c1f3af45659ed21a7ae": {"owner_id": 28707, "owner_name": "Stefan Dinescu", "owner_email": "stefan.dinescu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 12:40:37.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 2, "date": "2020-04-09 16:42:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 28434, "name": "David Sullivan", "email": "david.sullivan@windriver.com", "username": "dsullivanwr"}], "comments": {}}, "openstack%2Fopenstacksdk~stable%2Frocky~Ie147257f6ed12617c4ab04f3e2d4d6735551ee57": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 2, "date": "2020-04-09 15:14:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 27379, "name": "jrosser", "inactive": true}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Ftrain~Ifbc73806b768f76f803ab01c115a9e5c2e2492ac": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-02 10:33:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 2, "date": "2020-04-08 15:11:36.000000000", "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}], "comments": {}}, "zuul%2Fzuul-operator~master~Ic4a6a27707205594910ad90a5577fbbe727e2352": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-04-06 18:47:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-04-09 15:43:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "openstack%2Fironic~master~Ib5ed0ce09ce97ddb914fa4f830265dfc24a0bc1a": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 22271, "name": "paresh", "email": "paresh.sao@hpe.com", "username": "kesper"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-04-08 18:36:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 18:36:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"ironic/common/images.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_c15a794d", "line": 169, "updated": "2020-03-27 10:10:48.000000000", "message": "I think you invented os.walk :)", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_90914b55", "line": 169, "in_reply_to": "df33271e_67105401", "updated": "2020-04-03 11:05:00.000000000", "message": "E-mail client with an embedded operating system. We got one already!", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "797d7956ff35ee1befc3012ba95415acb6e06d5b", "unresolved": false, "patch_set": 16, "id": "df33271e_67105401", "line": 169, "in_reply_to": "df33271e_c15a794d", "updated": "2020-04-02 23:41:49.000000000", "message": "As long as it is not an email client ;)", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_b0960f4b", "line": 169, "in_reply_to": "df33271e_c15a794d", "updated": "2020-04-03 11:05:00.000000000", "message": "II think I started out with `os.walk`, but then something turned out to be inconvenient with it. I can't recall it now.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_213fe5d6", "line": 201, "updated": "2020-03-27 10:10:48.000000000", "message": "nit: Mounting", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_50850306", "line": 201, "in_reply_to": "df33271e_213fe5d6", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_e134ddfd", "line": 202, "updated": "2020-03-27 10:10:48.000000000", "message": "nit: no need to add exception when used LOG.exception, the whole traceback will be logged anyway", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_2b4e0e96", "line": 202, "in_reply_to": "df33271e_e134ddfd", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_6120cdb1", "line": 208, "range": {"start_line": 208, "start_character": 15, "end_line": 208, "end_character": 33}, "updated": "2020-03-27 10:10:48.000000000", "message": "nit: EnvironmentError is a base of both", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_4b471278", "line": 208, "range": {"start_line": 208, "start_character": 15, "end_line": 208, "end_character": 33}, "in_reply_to": "df33271e_6120cdb1", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_c12f199f", "line": 209, "updated": "2020-03-27 10:10:48.000000000", "message": "nit: Examining\n\nalso not much use for LOG.exception, the traceback is obvious here.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_eb570625", "line": 209, "in_reply_to": "df33271e_c12f199f", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "9b295ba3c07db9091f136a497971ce735cb414a9", "unresolved": false, "patch_set": 16, "id": "df33271e_b40d2c40", "line": 218, "range": {"start_line": 218, "start_character": 39, "end_line": 218, "end_character": 55}, "updated": "2020-03-24 19:09:54.000000000", "message": "configdrive is being added, and should thus be after kernel_params in case this is invoked with positional arguments.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_cb27a2c6", "line": 218, "range": {"start_line": 218, "start_character": 39, "end_line": 218, "end_character": 55}, "in_reply_to": "df33271e_b40d2c40", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_810eb138", "line": 271, "updated": "2020-03-27 10:10:48.000000000", "message": "ditto re EnvironmentError\n\nactually, this snippet is used twice, can the exception handling be moved to _create_root_fs?", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_4b155248", "line": 271, "in_reply_to": "df33271e_810eb138", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "9b295ba3c07db9091f136a497971ce735cb414a9", "unresolved": false, "patch_set": 16, "id": "df33271e_f407b41b", "line": 283, "updated": "2020-03-24 19:09:54.000000000", "message": "crafty! I like it!", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_ab0fbe34", "line": 283, "in_reply_to": "df33271e_f407b41b", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_2118857f", "line": 294, "updated": "2020-03-27 10:10:48.000000000", "message": "I guess same comment here re positional arguments?", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_6607ad19", "line": 294, "in_reply_to": "df33271e_2118857f", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_6109ed2f", "line": 368, "updated": "2020-03-27 10:10:48.000000000", "message": "ditto", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_860f512c", "line": 368, "in_reply_to": "df33271e_6109ed2f", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "9b295ba3c07db9091f136a497971ce735cb414a9", "unresolved": false, "patch_set": 16, "id": "df33271e_df3569dc", "line": 514, "range": {"start_line": 514, "start_character": 20, "end_line": 514, "end_character": 41}, "updated": "2020-03-24 19:09:54.000000000", "message": "This is a utility method available to drivers which means the new value should go at the end in case someone has use positional arguments.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_c62e798a", "line": 514, "range": {"start_line": 514, "start_character": 20, "end_line": 514, "end_character": 41}, "in_reply_to": "df33271e_df3569dc", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}], "ironic/drivers/modules/redfish/boot.py": [{"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "3b1b6fdcb57103d216ba1622404b88db1b3a0dd5", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_9209eb95", "line": 481, "range": {"start_line": 481, "start_character": 16, "end_line": 481, "end_character": 31}, "updated": "2019-11-05 07:52:01.000000000", "message": "Can we move this check at L476 before creating tempfile?", "commit_id": "1fa4a24338704f5564a07bfb6aeccc7a2c90a03a"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "43d92a674f4c843f90e25fbd95809b8361c3664b", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_421dbabc", "line": 481, "range": {"start_line": 481, "start_character": 16, "end_line": 481, "end_character": 31}, "in_reply_to": "3fa7e38b_9209eb95", "updated": "2019-11-28 10:23:03.000000000", "message": "++ it makes sense as the resulting tempfile is used only if configdrive is defined\nprobably need to move L479 as well", "commit_id": "1fa4a24338704f5564a07bfb6aeccc7a2c90a03a"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "43d92a674f4c843f90e25fbd95809b8361c3664b", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_62f6b660", "line": 496, "updated": "2019-11-28 10:23:03.000000000", "message": "maybe move this up to L509 outside of the second with ?", "commit_id": "1fa4a24338704f5564a07bfb6aeccc7a2c90a03a"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_9418b175", "line": 491, "updated": "2020-03-27 10:10:48.000000000", "message": "nit:\n\n 'file://%s' % cfgdrv_fileobj.name", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_e6b61d3e", "line": 491, "in_reply_to": "df33271e_9418b175", "updated": "2020-04-03 11:05:00.000000000", "message": "I'd sleep better outsourcing URL building to somebody else. What's the reason to do it manually if we have a tool?", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "66867358890fc00c4818f5a330597e5cdd630908", "unresolved": false, "patch_set": 16, "id": "df33271e_0a7c7be9", "line": 491, "in_reply_to": "df33271e_af12c156", "updated": "2020-04-08 10:01:00.000000000", "message": "I think the tool is correct, it's just that the file URI does not have some of the components of the URL URI.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "30a43b4cf576a3473485e938dbe7f816e5cba00c", "unresolved": false, "patch_set": 16, "id": "df33271e_af12c156", "line": 491, "in_reply_to": "df33271e_e6b61d3e", "updated": "2020-04-08 08:48:01.000000000", "message": "Because the tool is not designed for that, as you can see by supplying 4 empty strings.", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}], "releasenotes/notes/add-redfish-configdrive-e629d9880ff3e19d.yaml": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "868f2ee3a04f382a2dcfd6d99060d10db16930cc", "unresolved": false, "patch_set": 16, "id": "df33271e_b43695e5", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 9}, "updated": "2020-03-27 10:10:48.000000000", "message": "Is it user-visible at this point? It doesn't seem to, let's maybe skip the release note until we have something that operators can use?", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "33e38f12f62746d9ea7c7120d84ed0fcfd9e0e78", "unresolved": false, "patch_set": 16, "id": "df33271e_e6e45d3e", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 9}, "in_reply_to": "df33271e_b43695e5", "updated": "2020-04-03 11:05:00.000000000", "message": "Done", "commit_id": "75f2e30fcb649def6966439655168352c0bc1f84"}]}}, "opendev%2Fsystem-config~master~Ic1917688cba37c03e45e3bccbce6fc723022b94c": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:28:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-09 15:27:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-docs~master~Idd4b84327672d181439fa5b7d8bd904713561af1": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:20:21.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-09 16:17:06.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Icba8a8292d1e2675c7da3513d00a4a0f4191747e": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 06:11:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-04-09 06:11:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, "change_message_id": "018dfe6b1ccafbf9d8b34b7dbd60e90321cee57e", "unresolved": false, "patch_set": 4, "id": "df33271e_5e5ac84f", "line": 23, "range": {"start_line": 23, "start_character": 58, "end_line": 23, "end_character": 66}, "updated": "2020-04-08 10:52:06.000000000", "message": "I'm curious, silly what ? :)", "commit_id": "96358131c453e8b2553109035d0d8f76206764e5"}, {"author": {"_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, "change_message_id": "9743aa164c19ffc7b5eb5eba505364e14392a057", "unresolved": false, "patch_set": 4, "id": "df33271e_e8a31ab0", "line": 23, "range": {"start_line": 23, "start_character": 58, "end_line": 23, "end_character": 66}, "in_reply_to": "df33271e_5e5ac84f", "updated": "2020-04-08 14:00:27.000000000", "message": "ops, let me add that ;)", "commit_id": "96358131c453e8b2553109035d0d8f76206764e5"}, {"author": {"_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, "change_message_id": "b7b821402174653aa5c50b2d4d7cbe3f6a5b7da4", "unresolved": false, "patch_set": 5, "id": "df33271e_bd914d49", "line": 24, "updated": "2020-04-08 17:06:54.000000000", "message": "s/now/no/", "commit_id": "c08b8cf0151d991a1bfe1e1f6f6b6254c1a7080f"}, {"author": {"_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, "change_message_id": "1994c1874c57359f8029aadab935d71857bac927", "unresolved": false, "patch_set": 5, "id": "df33271e_66d0daf8", "line": 35, "range": {"start_line": 33, "start_character": 0, "end_line": 35, "end_character": 35}, "updated": "2020-04-08 16:05:23.000000000", "message": "Can you share the snippet that does that, that would be something to add to validation.", "commit_id": "c08b8cf0151d991a1bfe1e1f6f6b6254c1a7080f"}, {"author": {"_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, "change_message_id": "cf5d665f1d0b7f87ca5d819db093d66b60d06090", "unresolved": false, "patch_set": 5, "id": "df33271e_3dcb7d4a", "line": 35, "range": {"start_line": 33, "start_character": 0, "end_line": 35, "end_character": 35}, "in_reply_to": "df33271e_66d0daf8", "updated": "2020-04-08 16:07:48.000000000", "message": "Just run iptables -nvL INPUT |grep _haproxy |wc -l\n27\n\nAfter the minor update step on all controller/haproxy nodes, nothing all too fancy i am afraid", "commit_id": "c08b8cf0151d991a1bfe1e1f6f6b6254c1a7080f"}]}}, "openstack%2Fcharm-neutron-api~master~I05bc78c4e752afb706f9c3a6803320a9702b62c3": {"owner_id": 31817, "owner_name": "Marco Filipe Moutinho da Silva", "owner_email": "marco.silva@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 16:10:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fovsdbapp~master~Ic898cefb4ced76e9e169b9f5d6caaace600abb0c": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-17 16:25:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 1, "date": "2020-03-17 16:27:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-03-18 08:05:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 1, "date": "2020-03-18 01:28:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~I2d7735751e504a10dbcf73a2fea832deeca664f0": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 12:20:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-07 20:40:29.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I14c51106ad1ee40a6edfa520d330d1ea0a52edee": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {"environments/undercloud.yaml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "ff2c1ea204a024d32ce8f4b772be256366ff24ec", "unresolved": false, "patch_set": 1, "id": "df33271e_d9f52559", "side": "PARENT", "line": 200, "range": {"start_line": 200, "start_character": 2, "end_line": 200, "end_character": 53}, "updated": "2020-04-09 16:07:45.000000000", "message": "Does this need to wait until we've switched to centos8 completely?", "commit_id": "5323f2033e17512a8ab34b8ef7915fe5ab9f7a9a"}]}}, "openstack%2Freleases~master~I11544b47cda86c26a48506fcb0357dea22c3bf40": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 15:16:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 2, "date": "2020-04-09 15:51:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Foslo.policy~master~If7a467a12d5d272180fa8061d12e5f2699c08282": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 2, "date": "2020-04-09 14:43:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-04-08 15:36:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-08 16:51:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 2, "date": "2020-04-09 12:48:57.000000000", "_account_id": 27954, "name": "Mois\u00e9s Guimar\u00e3es de Medeiros", "email": "guimaraes@pm.me", "username": "moguimar"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "43102a14b09e75877cc72808acbb5872fd390c80", "unresolved": false, "patch_set": 1, "id": "df33271e_6a5bb453", "line": 25, "range": {"start_line": 25, "start_character": 43, "end_line": 25, "end_character": 50}, "updated": "2020-04-07 00:25:40.000000000", "message": "nit: warning", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "b5d03c29d26c465144ea34c470e64f276da12929", "unresolved": false, "patch_set": 2, "id": "df33271e_af3be1ce", "line": 9, "updated": "2020-04-08 08:49:45.000000000", "message": "OK, I totally miss-understood the intent here.\n\nWhen you have no policy overrides, but the check_str has changed via the deprecation system, a log messiage is ommitted. This allows projects to stop that happening.\n\nClearly, this is particulary useful for projects, like nova, that have just changed every check_str in the project!\n\nGot it now.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}], "oslo_policy/policy.py": [{"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "43102a14b09e75877cc72808acbb5872fd390c80", "unresolved": false, "patch_set": 1, "id": "df33271e_8a5ef842", "line": 510, "updated": "2020-04-07 00:25:40.000000000", "message": "This suppresses the warnings, but what about the logical OR?\n\nDo we want to offer a way for operators to opt into the new defaults and new concept of system scope without having to override all their policies with the new defaults?", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "13bffda1acbd41c6357b574f51533245869e9be6", "unresolved": false, "patch_set": 1, "id": "df33271e_ed2b5e7f", "line": 510, "in_reply_to": "df33271e_8a5ef842", "updated": "2020-04-07 00:32:51.000000000", "message": "yeah, i was thinking to add separate flag for that but I think we can control with this flag itsef (after renaming). \n\nshould I switch enforce_scope to True also with new fag or keep both flag separate ? I prefer the former as both scope and new defaults enabled at same time make sense (I think that is what we discussed in IRC chat also).", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_6d90ee4f", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_cd9dba67", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_2daf0695", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_8d7c5221", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_cd765a3f", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_0d8e8226", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_cdabfa72", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_ed923e4b", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_4d988a69", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_0db7a2da", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_6dc74e47", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_2db6e6da", "line": 677, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e107fd66e42ada84ed4142b50732fa9100e90c1e", "unresolved": false, "patch_set": 1, "id": "df33271e_43a4db08", "line": 677, "in_reply_to": "df33271e_ed923e4b", "updated": "2020-04-07 02:56:15.000000000", "message": "this is not fun which are from tests cases :)", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_ad9af66a", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_ed8d1e32", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_8d93b25c", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_0d896225", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_6d790e2e", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_ad73164d", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_4d836a05", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_2d88a61d", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_ada83677", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_6d9e2e55", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_2d9d4659", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_8da1f298", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_cdc49a43", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_edbb5ec1", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_4db1aae1", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "61b29bd85483b14f8148f73316d6758b7e4ca6d4", "unresolved": false, "patch_set": 1, "id": "df33271e_8dca924c", "line": 714, "updated": "2020-04-07 01:11:54.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "ce10f82aaf13cc0a851d8aa0205608493cd0362c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "60368a749a99ad8411a474f231a348b888607d3b", "unresolved": false, "patch_set": 2, "id": "df33271e_c307191c", "line": 506, "range": {"start_line": 506, "start_character": 38, "end_line": 506, "end_character": 45}, "updated": "2020-04-08 14:42:30.000000000", "message": "suppress", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "60368a749a99ad8411a474f231a348b888607d3b", "unresolved": false, "patch_set": 2, "id": "df33271e_2309a42b", "line": 508, "range": {"start_line": 508, "start_character": 47, "end_line": 508, "end_character": 54}, "updated": "2020-04-08 14:42:30.000000000", "message": "affect", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "60368a749a99ad8411a474f231a348b888607d3b", "unresolved": false, "patch_set": 2, "id": "df33271e_c301d806", "line": 508, "range": {"start_line": 507, "start_character": 52, "end_line": 508, "end_character": 18}, "updated": "2020-04-08 14:42:30.000000000", "message": "that have not been overridden", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_1e5b4a2e", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_fe74a69e", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_5e65d2e0", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_de79e293", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_3ea44e08", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_5eaaf2d1", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_9e5f5a0d", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_7e96d696", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_fe82e651", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_beb7be3a", "line": 677, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "60368a749a99ad8411a474f231a348b888607d3b", "unresolved": false, "patch_set": 2, "id": "df33271e_032580ab", "line": 713, "updated": "2020-04-08 14:42:30.000000000", "message": "I have the below warnings resolved with https://review.opendev.org/718138", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_7e3ff6b4", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_be497e61", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_9e463a4f", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_5e3cb2be", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_be621ed7", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_7e6896b9", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_3e6f2ec6", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_1e74ea98", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_1ea98ade", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_7ead36e9", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_de9e02b7", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_fe9946d0", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_de872261", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_1e822a50", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_3e7d6e6e", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6dfe1a155bab6d073d1bd00f7a7eb41336aa5a04", "unresolved": false, "patch_set": 2, "id": "df33271e_9eb47a37", "line": 714, "updated": "2020-04-07 04:28:09.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "da6397abe00ba52db25760e122113e6590f92afa"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a292fead8873d75dbbadb2bb1e39875b25ca861", "unresolved": false, "patch_set": 3, "id": "df33271e_e5e200d5", "line": 513, "range": {"start_line": 512, "start_character": 8, "end_line": 513, "end_character": 50}, "updated": "2020-04-09 13:42:07.000000000", "message": "Do we document the difference between this option and the next option anywhere outside of code comments?", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "c79937f4b3d63427503299988e2a33ec55df92d4", "unresolved": false, "patch_set": 3, "id": "df33271e_73951a40", "line": 513, "range": {"start_line": 512, "start_character": 8, "end_line": 513, "end_character": 50}, "in_reply_to": "df33271e_08ea990d", "updated": "2020-04-09 14:43:22.000000000", "message": "Yeah - I think adding it somewhere is a good idea, but we can do that in a follow up.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "d3531f10e375af7fcc9128acbb53f322e752a832", "unresolved": false, "patch_set": 3, "id": "df33271e_08ea990d", "line": 513, "range": {"start_line": 512, "start_character": 8, "end_line": 513, "end_character": 50}, "in_reply_to": "df33271e_e5e200d5", "updated": "2020-04-09 14:05:20.000000000", "message": "I think no. Existing option is supposed to be used by tests only so i did not find the doc for that.\n\nShould we add that somewhere ?", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_7872334b", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_9877373b", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_f89be362", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_389d4b57", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_98ac578d", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_b8bafbbc", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_d8dc1f1a", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_f8b483d3", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_38c6eb4a", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_38cb8b4a", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_58d00ff8", "line": 677, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"old_rule\":\"role:bang\" was deprecated in N in favor of \"new_rule\":\"role:bang\". Reason: \"old_rule\" is a bad name. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_d88edf25", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_3878ab29", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_b8915b49", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_1899676d", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "lower-constraints:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_78a7d3a8", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_58a2cf9b", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_d8b7ffd7", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_18b207e7", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py36:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_58cbef51", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_78c0732b", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_b8df9b0a", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_98c5773f", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py37:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_98da9714", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"foo:bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_f8e923b7", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_78d513e5", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"\". Reason: because of reasons. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cffd07ac1e9e91b053b1b4703d57dfcf664e9e47", "unresolved": false, "patch_set": 3, "id": "df33271e_18e7a7e6", "line": 714, "updated": "2020-04-08 16:34:03.000000000", "message": "py38:  UserWarning: Policy \"foo:create_bar\":\"role:fizz\" was deprecated in N in favor of \"foo:create_bar\":\"role:bang\". Reason: \"role:bang\" is a better default. Either ensure your deployment is ready for the new default or copy/paste the deprecated policy into your policy file and maintain it manually.", "commit_id": "51088be5ea843e8b69a6670ea94aaaee91a3f88c"}]}}, "openstack%2Freleases~master~I2634631f4db053ee06c3b92f778dc9b49e3c7135": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 1, "date": "2020-04-08 11:47:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-08 14:07:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-09 15:50:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"deliverables/ussuri/python-ironic-inspector-client.yaml": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "e8cd1377977e81a4934299783d60b2c9bdf89ffb", "unresolved": false, "patch_set": 1, "id": "df33271e_e164dd4b", "line": 14, "range": {"start_line": 14, "start_character": 15, "end_line": 14, "end_character": 18}, "updated": "2020-04-08 11:19:26.000000000", "message": "Would you be okay to bump to 4.1.0? It sends a better message to packagers, as you're not only doing a patch change, you're effectively adding requirements.", "commit_id": "7577a6430ccf242cd6adcc7bb640794b20a40632"}]}}, "openstack%2Fopenstacksdk~stable%2Fussuri~Ib374e5974fe8eba630bc3d0eaf531175cf58c885": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 08:34:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-03 21:32:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fdevstack~master~I9d4831955070990a81a809d988612d9d5b1aa672": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 20:07:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-02 22:37:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I1ecb1983a6e0102247e75860b6234dc149623858": {"owner_id": 13413, "owner_name": "Jan Kundr\u00e1t", "owner_email": "jkt@kde.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "starlingx%2Fstx-puppet~master~I88ed37ba3a143e3abee78a9f5584b16f17becc76": {"owner_id": 31484, "owner_name": "Jessica Castelino", "owner_email": "jessica.castelino@windriver.com", "labels": [{"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:07:21.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-04-09 15:43:09.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-04-09 11:33:56.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 1, "date": "2020-04-09 13:27:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"modules/puppet-dcmanager/src/dcmanager/manifests/init.pp": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "65dfc0554583c831342f1ad6cb41740681b38b76", "unresolved": false, "patch_set": 1, "id": "df33271e_1f11365e", "line": 25, "range": {"start_line": 25, "start_character": 33, "end_line": 25, "end_character": 34}, "updated": "2020-04-09 11:42:28.000000000", "message": "Why wouldn't we leave this at 5? In order to handle the various audits and requests coming in through the REST API, it seems like we're going to often be using more than a single connection. I assume that it is going to be more expensive to be constantly destroying and creating these connections so why not have a small pool (e.g. 5)?", "commit_id": "7134a062502bab3afde7d44c1d7cf6c21b2fa7ab"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "08e84c322c9dcbca42e7aee1fb6b156ccb85336a", "unresolved": false, "patch_set": 1, "id": "df33271e_6539d0d5", "line": 25, "range": {"start_line": 25, "start_character": 33, "end_line": 25, "end_character": 34}, "in_reply_to": "df33271e_1f11365e", "updated": "2020-04-09 13:27:27.000000000", "message": "Multiple concurrent activities do not necessarily equate to concurrent db accesses. If one database connection cannot handle the workload at steady state, additional ones (up to max_overflow value) will kick in. I don't see an evidence that more than one connection is necessary at stead state.\n\nThe config file is being shared by both dcmanager-api and dcmanager-anager. The former is a multi-process service. Hence these pool settings are inherited by each worker. In general the system will end up with a high number of idle connections if multi-process services all have max_pool_size > 1 because a) work distribution to the workers are not guaranteed in round-robin fashion and b) when a seldom activity occurs that entail a surge in database accesses of the services involved, the extra connections will remain in the pool for 1hr (database_idle_timeout) after the event providing that the timeout setting is honored. Soaking keystone service (20 workers & max_pool_size of 5) overnight following a stress test showed that the number of idle connections still stayed at 98.\n\nThe dcmanager api is not even used unless someone issues a dcmanager sucbloud list/show, add/delete subcloud REST call/command which is not a constant event.", "commit_id": "7134a062502bab3afde7d44c1d7cf6c21b2fa7ab"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "6ea66172c42e2d7a6c630345f13a9d3a66ab969d", "unresolved": false, "patch_set": 1, "id": "df33271e_68c3658a", "line": 25, "range": {"start_line": 25, "start_character": 33, "end_line": 25, "end_character": 34}, "in_reply_to": "df33271e_6539d0d5", "updated": "2020-04-09 14:07:21.000000000", "message": "Thanks Tee - sounds like 1 is good then.", "commit_id": "7134a062502bab3afde7d44c1d7cf6c21b2fa7ab"}]}}, "openstack%2Fironic-python-agent~master~Ie52a82bf71a2277cea11fd2dedfd9c1e0001d95f": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 08:36:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-04-09 09:12:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}], "comments": {}}, "starlingx%2Fansible-playbooks~master~Iac49f81ef44e6cb82ff884717888dfc1a7cd2a45": {"owner_id": 21776, "owner_name": "Jerry Sun", "owner_email": "jerry.sun@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:38:00.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 2, "date": "2020-04-09 15:40:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, {"value": 0, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {"playbookconfig/src/playbooks/roles/bootstrap/bringup-essential-services/tasks/bringup_kubemaster.yml": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "e63efb1761e6ad3994a87160e7b89eb0b3e8d59a", "unresolved": false, "patch_set": 1, "id": "df33271e_425ac282", "line": 375, "range": {"start_line": 375, "start_character": 10, "end_line": 375, "end_character": 43}, "updated": "2020-03-30 13:43:42.000000000", "message": "I assume this file is only required for the kubectl command below? If so, I would prefer to put it in a temporary directory and not under /etc. If the file is required to be preserved, it should be put in config_permdir instead.", "commit_id": "9e0e8938a0051f4707228e24b5f283e15531805e"}, {"author": {"_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, "change_message_id": "952ad49ee4ad687a44f884e0fa998dc47d3f1f26", "unresolved": false, "patch_set": 1, "id": "df33271e_fec28a58", "line": 375, "range": {"start_line": 375, "start_character": 10, "end_line": 375, "end_character": 43}, "in_reply_to": "df33271e_425ac282", "updated": "2020-03-30 20:10:35.000000000", "message": "moved to /tmp", "commit_id": "9e0e8938a0051f4707228e24b5f283e15531805e"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "6a394bf059574c34b925bc9310858f6feb955c6a", "unresolved": false, "patch_set": 2, "id": "df33271e_8cc9865a", "line": 375, "range": {"start_line": 375, "start_character": 10, "end_line": 375, "end_character": 32}, "updated": "2020-03-31 12:27:13.000000000", "message": "So now the question is, since we aren't making any changes to this file, why not just reference it directly in the command below?", "commit_id": "4c0876f9862e73d0cee392359697631c922f2bc9"}, {"author": {"_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, "change_message_id": "cbb360928ecb1944dc2877e4cb591348286a728e", "unresolved": false, "patch_set": 2, "id": "df33271e_6004a77f", "line": 375, "range": {"start_line": 375, "start_character": 10, "end_line": 375, "end_character": 32}, "in_reply_to": "df33271e_8cc9865a", "updated": "2020-04-03 19:33:37.000000000", "message": "Done", "commit_id": "4c0876f9862e73d0cee392359697631c922f2bc9"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "53466423c832c28f1e98e47e76b59c4a1ddd18b9", "unresolved": false, "patch_set": 3, "id": "df33271e_a575f4ce", "line": 375, "range": {"start_line": 375, "start_character": 4, "end_line": 375, "end_character": 81}, "updated": "2020-04-06 19:20:15.000000000", "message": "You shouldn't be referencing an absolute path. Remote playbooks could be using a different path.", "commit_id": "ebb381c782174c1030e3eb484e0e10e391333eba"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "f3fac461c801681c636ea7bb7071f30b25d4cb27", "unresolved": false, "patch_set": 3, "id": "df33271e_375c477d", "line": 375, "range": {"start_line": 375, "start_character": 4, "end_line": 375, "end_character": 81}, "in_reply_to": "df33271e_308c6834", "updated": "2020-04-08 12:40:19.000000000", "message": "Thanks Jerry. I will defer to Tee on this, but it just seems strange to me that we don't have a single reference to /usr/share/ansible in any of our other playbooks.", "commit_id": "ebb381c782174c1030e3eb484e0e10e391333eba"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "6bbf188c6f11c6b9e6840b81c63ec0264f65f64b", "unresolved": false, "patch_set": 3, "id": "df33271e_5708eb2b", "line": 375, "range": {"start_line": 375, "start_character": 4, "end_line": 375, "end_character": 81}, "in_reply_to": "df33271e_375c477d", "updated": "2020-04-08 12:48:48.000000000", "message": "Because it would/should be referenced relatively to role_path or playbook_dir variable.", "commit_id": "ebb381c782174c1030e3eb484e0e10e391333eba"}, {"author": {"_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, "change_message_id": "7d016adcc9bdb6fc3b105c2e210810259ea85085", "unresolved": false, "patch_set": 3, "id": "df33271e_308c6834", "line": 375, "range": {"start_line": 375, "start_character": 4, "end_line": 375, "end_character": 81}, "in_reply_to": "df33271e_60563a09", "updated": "2020-04-07 18:23:38.000000000", "message": "@tee moved\n@bart I tested remote execution before the final change here, and it works.", "commit_id": "ebb381c782174c1030e3eb484e0e10e391333eba"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "b3eb6a505102ece1bd641f92ef59a367ddc6ade4", "unresolved": false, "patch_set": 3, "id": "df33271e_60563a09", "line": 375, "range": {"start_line": 375, "start_character": 4, "end_line": 375, "end_character": 81}, "in_reply_to": "df33271e_a575f4ce", "updated": "2020-04-06 19:26:34.000000000", "message": "It will look for the file on the target which is either local host/remote host. If the target is running StarlingX load that is compatible with the bootstrap playbook which is being executed (the check is done earlier in prepare-env role I think) then this file should exist.\n\nI would define the location of the file in the role vars", "commit_id": "ebb381c782174c1030e3eb484e0e10e391333eba"}], "playbookconfig/src/playbooks/roles/common/files/psp-policies.yaml": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "e63efb1761e6ad3994a87160e7b89eb0b3e8d59a", "unresolved": false, "patch_set": 1, "id": "df33271e_42e8027b", "line": 1, "updated": "2020-03-30 13:43:42.000000000", "message": "Add some comments about where you got this if it was copied from somewhere. Otherwise add a comment header with some general comments about what policies are being created and why.", "commit_id": "9e0e8938a0051f4707228e24b5f283e15531805e"}, {"author": {"_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, "change_message_id": "952ad49ee4ad687a44f884e0fa998dc47d3f1f26", "unresolved": false, "patch_set": 1, "id": "df33271e_5eb456f2", "line": 1, "in_reply_to": "df33271e_42e8027b", "updated": "2020-03-30 20:10:35.000000000", "message": "Done", "commit_id": "9e0e8938a0051f4707228e24b5f283e15531805e"}]}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~Ic6abf9f09bb687e830a06e7129f77e2504ea8e2a": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-09 14:18:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 14:26:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"zuul.d/unit.yaml": [{"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "e830ba0d70d56393e2b45ca1b816f2112b9d1a01", "unresolved": false, "patch_set": 1, "id": "df33271e_08de1910", "side": "PARENT", "line": 23, "range": {"start_line": 23, "start_character": 4, "end_line": 23, "end_character": 17}, "updated": "2020-04-09 14:17:59.000000000", "message": "I'm afraid this is currently making puppet-openstack-unit-5.5-centos-8 in master non-voting, because of the duplicated job name, and this is why I'm trying to backport this change.", "commit_id": "3223f0fe61ae5a077810e51782e015e4638f2b27"}]}}, "openstack%2Foctavia-dashboard~master~Id4457d164e6899ffe4b9e4a0332b771d0ee33770": {"owner_id": 3031, "owner_name": "Sam Morrison", "owner_email": "sorrison@gmail.com", "labels": [{"value": 2, "date": "2020-04-09 01:49:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 12:46:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 2245, "name": "Jacky Hu", "email": "hudayou@hotmail.com", "username": "hudayou"}, {"value": 0, "_account_id": 18418, "name": "Andy Botting", "email": "andy@andybotting.com", "username": "andybotting"}], "comments": {"octavia_dashboard/api/rest/lbaasv2.py": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "2e487ae30aa81c245d55d84f37262654d72787ef", "unresolved": false, "patch_set": 2, "id": "df33271e_6b16cd4b", "line": 1410, "updated": "2020-04-09 01:01:42.000000000", "message": "conn.load_balancer.availabilityzones() should be\nconn.load_balancer.availability_zones()", "commit_id": "7c13bf8c45c6987872cfd9455a8bf0762c82079b"}]}}, "openstack%2Fkayobe~master~I359b07abadc8665ff0a8c3407ca0fc5effc504cf": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 09:52:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 13:32:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}], "comments": {}}, "openstack%2Freleases~master~Ifa0a7b3907f20638088d264a9762ba30f469db26": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 15:09:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-09 14:57:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Ftacker~master~If5276a47b8822c5c19d045fbc5c41394f4a9dd2d": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-31 03:04:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 1, "date": "2020-04-05 00:02:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 19644, "name": "Yan Xing an", "email": "yanxingan@cmss.chinamobile.com", "username": "yanxingan"}, {"value": 0, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "_account_id": 16511, "name": "Bob Haddleton", "email": "bob.haddleton@nokia.com", "username": "bobh"}, {"value": 0, "_account_id": 2874, "name": "yong sheng gong", "email": "gong.yongsheng@99cloud.net", "username": "gongysh"}, {"value": 2, "date": "2020-04-09 15:02:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 0, "_account_id": 13380, "name": "Sridhar Ramaswamy", "email": "srics.r@gmail.com", "username": "srics-r"}, {"value": 1, "date": "2020-03-30 02:24:22.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, "change_message_id": "bcd66b0ffe65ed9fd3a6ccf35ec14e5bb65aaa9d", "unresolved": false, "patch_set": 1, "id": "df33271e_d4a18248", "line": 9, "updated": "2020-03-29 08:44:26.000000000", "message": "What do you think removing shebang `/usr/bin/env python` in addition to these changes to avoid to be run with python2? There are two files containing it.\n- tools/install_venv.py\n- tacker/cmd/eventlet/tacker_server.py", "commit_id": "cda43557a1b1a4b387402e5e7f50405c70f6ebbe"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "2e02c848a8570478b43a9580ad6ad486ef581280", "unresolved": false, "patch_set": 1, "id": "df33271e_d4ba226c", "line": 9, "in_reply_to": "df33271e_d4a18248", "updated": "2020-03-29 09:16:28.000000000", "message": "Let's switch those to python3 instead", "commit_id": "cda43557a1b1a4b387402e5e7f50405c70f6ebbe"}]}}, "openstack%2Ftripleo-heat-templates~master~I8b7af40a4dfba297821a7aae6edf5938c43034a1": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-04 03:48:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-04-08 18:54:20.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-06 16:27:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}], "comments": {"releasenotes/notes/cinder-remove-dell-ps-fce96d05f529d0da.yaml": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "fcc2225ba675e4bacdfc7940f90207d4dfd3a85f", "unresolved": false, "patch_set": 2, "id": "df33271e_22047a14", "line": 5, "range": {"start_line": 5, "start_character": 39, "end_line": 5, "end_character": 56}, "updated": "2020-04-03 00:07:24.000000000", "message": "nit: \"the driver has been removed from cinder.\"", "commit_id": "5709afe6dd502df9209c2a98559536f5a59c55be"}, {"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "66739ce33b198e54b5f4086410402773e395e1f0", "unresolved": false, "patch_set": 2, "id": "df33271e_2252ba13", "line": 5, "range": {"start_line": 5, "start_character": 39, "end_line": 5, "end_character": 56}, "in_reply_to": "df33271e_22047a14", "updated": "2020-04-03 00:13:23.000000000", "message": "Done\n\nUpdated the whole sentence to merge suggested change.", "commit_id": "5709afe6dd502df9209c2a98559536f5a59c55be"}]}}, "openstack%2Fproject-config~master~Ib91e58cec330f702620d789d0c52aa3c4c4e8f4d": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-04-09 14:52:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-08 19:12:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"gerrit/projects.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "b0fe056555b6caae3a8c267c6964389313bb7687", "unresolved": false, "patch_set": 1, "id": "df33271e_4e124db3", "line": 4042, "range": {"start_line": 4040, "start_character": 2, "end_line": 4042, "end_character": 36}, "updated": "2020-04-06 15:42:42.000000000", "message": "remove as well", "commit_id": "55cd5ad3faf669c1585c998c8c256da87dc59fe0"}, {"author": {"_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, "change_message_id": "4a566cd882007b2ad383c9c64a629e54fb12c8d2", "unresolved": false, "patch_set": 1, "id": "df33271e_94ad8833", "line": 4042, "range": {"start_line": 4040, "start_character": 2, "end_line": 4042, "end_character": 36}, "in_reply_to": "df33271e_4e124db3", "updated": "2020-04-06 17:08:29.000000000", "message": "Done", "commit_id": "55cd5ad3faf669c1585c998c8c256da87dc59fe0"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "b0fe056555b6caae3a8c267c6964389313bb7687", "unresolved": false, "patch_set": 1, "id": "df33271e_ae267915", "line": 4063, "range": {"start_line": 4061, "start_character": 2, "end_line": 4063, "end_character": 36}, "updated": "2020-04-06 15:42:42.000000000", "message": "remove as well", "commit_id": "55cd5ad3faf669c1585c998c8c256da87dc59fe0"}, {"author": {"_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, "change_message_id": "4a566cd882007b2ad383c9c64a629e54fb12c8d2", "unresolved": false, "patch_set": 1, "id": "df33271e_f4aa1417", "line": 4063, "range": {"start_line": 4061, "start_character": 2, "end_line": 4063, "end_character": 36}, "in_reply_to": "df33271e_ae267915", "updated": "2020-04-06 17:08:29.000000000", "message": "Done", "commit_id": "55cd5ad3faf669c1585c998c8c256da87dc59fe0"}]}}, "openstack%2Ftripleo-upgrade~master~If022a4647aaebc4b212bba188cc959ff2f8f9311": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-04-04 17:30:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {"filter_plugins/tripleo_inventory.py": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "4b9bdb676fc9a28073d14493ba3dda0356f98123", "unresolved": false, "patch_set": 5, "id": "df33271e_db718246", "line": 1, "updated": "2020-03-31 14:54:38.000000000", "message": "why are we doing filters in this project? shouldn't it be done in tripleo-ansible? Which is where we have modules/plugins/filters/etc for tripleo.", "commit_id": "78f87cc015f50fce26edf51137b26066c491fbf4"}, {"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "66ca8888361913839ae248fccb51c352efc648f3", "unresolved": false, "patch_set": 5, "id": "df33271e_bbcc7e6a", "line": 1, "in_reply_to": "df33271e_db718246", "updated": "2020-03-31 14:56:06.000000000", "message": "+1 - other projects might benefit of that filter at some point (*staring* at validations)", "commit_id": "78f87cc015f50fce26edf51137b26066c491fbf4"}, {"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "7661303e7f72ba776564741b6812278e928a63de", "unresolved": false, "patch_set": 5, "id": "df33271e_fe7433d1", "line": 38, "range": {"start_line": 38, "start_character": 23, "end_line": 38, "end_character": 36}, "updated": "2020-03-31 16:05:12.000000000", "message": "more efficient to use an OrderedDict I assume", "commit_id": "78f87cc015f50fce26edf51137b26066c491fbf4"}]}}, "openstack%2Ftripleo-ci~master~I80bd2b27787502edcb46fa8006f20f00badce507": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 15:56:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-08 18:34:13.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-09 05:24:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 1, "date": "2020-04-08 14:49:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I0a8b4dab3adaa0c8c48413c0f1d65db813291414": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-06 09:59:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-06 13:43:28.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"environments/undercloud.yaml": [{"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "1011e9deda57ee57827a3843e643254de8f3a4b2", "unresolved": false, "patch_set": 1, "id": "df33271e_c61c5d15", "line": 228, "range": {"start_line": 228, "start_character": 4, "end_line": 228, "end_character": 99}, "updated": "2020-03-26 14:58:22.000000000", "message": "By the way, do we really need this overriding about memcached_servers ?\nAs far as I see the correct value is set even if we don't have this, and IMO it would make more sense to remove them if they are useless overriding.", "commit_id": "4ea6d47341a226c602b3a5d6afdf6c59607e784b"}]}}, "openstack%2Fswift~master~I9bd913ee1b32ba1566c420973723296766d1812f": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 19:30:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-04-06 17:00:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1179, "name": "Clay Gerrard", "email": "clay.gerrard@gmail.com", "username": "clay-gerrard"}, {"value": 0, "_account_id": 7233, "name": "Matthew Oliver", "email": "matt@oliver.net.au", "username": "mattoliverau"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"swift/common/ring/composite_builder.py": [{"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "4ac4130f5adbe17e9533c3480129af97b4714d06", "unresolved": false, "patch_set": 2, "id": "df33271e_90cae29e", "side": "PARENT", "line": 82, "range": {"start_line": 82, "start_character": 53, "end_line": 82, "end_character": 54}, "updated": "2020-04-03 18:14:51.000000000", "message": "Pretty sure the backslash is significant -- the note at https://46f0fe2d889c9344d81d-b65aba79d26aa5ef33fd003933b1dd3e.ssl.cf1.rackcdn.com/717271/2/check/openstack-tox-docs/6d1aec5/docs/ring.html#composite-builder looks pretty screwy. I guess we need two of them, though?", "commit_id": "b4b0ebd4aa0a710af288a69ae787e10420fdeb1a"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "33123d47b07b4935b27ac32a1dc48c203e7ca75b", "unresolved": false, "patch_set": 2, "id": "df33271e_2d20d8f7", "side": "PARENT", "line": 82, "range": {"start_line": 82, "start_character": 53, "end_line": 82, "end_character": 54}, "in_reply_to": "df33271e_90cae29e", "updated": "2020-04-03 18:37:14.000000000", "message": "I'll fix...", "commit_id": "b4b0ebd4aa0a710af288a69ae787e10420fdeb1a"}], "test/unit/obj/test_ssync_receiver.py": [{"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "4ac4130f5adbe17e9533c3480129af97b4714d06", "unresolved": false, "patch_set": 2, "id": "df33271e_d0cd8a87", "line": 1171, "updated": "2020-04-03 18:14:51.000000000", "message": "Looks like the diff in gerrit is a red herring, and it's all just cleaning up unnecessary indent like below.", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}], "tox.ini": [{"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "4ac4130f5adbe17e9533c3480129af97b4714d06", "unresolved": false, "patch_set": 2, "id": "df33271e_8a5aaa27", "line": 132, "updated": "2020-04-03 18:14:51.000000000", "message": "Seems related to https://github.com/PyCQA/pycodestyle/issues/400", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}, {"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "4ac4130f5adbe17e9533c3480129af97b4714d06", "unresolved": false, "patch_set": 2, "id": "df33271e_16208af7", "line": 134, "updated": "2020-04-03 18:14:51.000000000", "message": "Yeah, this one's weird -- seems to be some change between pep8 1.5.7 and 1.6, but I'm not seeing any difference between https://github.com/PyCQA/pycodestyle/blob/1.5.7/pep8.py#L190 and https://github.com/PyCQA/pycodestyle/blob/1.6/pep8.py#L198\n\nBut won't disabling it mean we no longer catch even longer lines? Probably better to just set\n\n max_line_length = 80", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "33123d47b07b4935b27ac32a1dc48c203e7ca75b", "unresolved": false, "patch_set": 2, "id": "df33271e_8d8644db", "line": 134, "in_reply_to": "df33271e_16208af7", "updated": "2020-04-03 18:37:14.000000000", "message": "let me try what the line limit is.", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}, {"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "4ac4130f5adbe17e9533c3480129af97b4714d06", "unresolved": false, "patch_set": 2, "id": "df33271e_f0024e0b", "line": 137, "range": {"start_line": 136, "start_character": 0, "end_line": 137, "end_character": 40}, "updated": "2020-04-03 18:14:51.000000000", "message": ":exploding_head:", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "33123d47b07b4935b27ac32a1dc48c203e7ca75b", "unresolved": false, "patch_set": 2, "id": "df33271e_ad8188c6", "line": 137, "range": {"start_line": 136, "start_character": 0, "end_line": 137, "end_character": 40}, "in_reply_to": "df33271e_f0024e0b", "updated": "2020-04-03 18:37:14.000000000", "message": "you need to decide as team which of these to disable - and which to enable. There's no consistency currently in the repo. Or you can decide you don't care...", "commit_id": "9fda80b045634e2e1640684c8a6396b84aebc93c"}]}}, "openstack%2Fproject-config~master~I18f4f79f6e65874f514a1782132996218a33825a": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:54:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-08 05:26:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fironic~stable%2Ftrain~Iff498690f37ebcf24c4da8eb8b18ac6e897e9d27": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I0ce1483ef3ad1df59be77704d0d1bb96876f6249": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-04-08 12:38:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Fglance-specs~master~I4484903886a09d4556ce11e671b1ae0dd8d9b16f": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-09 14:52:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-04-09 14:37:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-09 14:32:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fproject-config~master~I5760374206dabbd265d30d43bb8095e90a1c4b9a": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-09 14:52:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-09 09:08:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"zuul.d/projects.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "ae79d9a3ce485f95a8272d4430ea7530949f71ed", "unresolved": false, "patch_set": 1, "id": "df33271e_97a5efa4", "line": 4597, "range": {"start_line": 4596, "start_character": 6, "end_line": 4597, "end_character": 17}, "updated": "2020-04-01 16:27:55.000000000", "message": "those should be defined in-tree nowadays.", "commit_id": "b26ced3600c090d1d66549ddbb47b1661e299a74"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "ae79d9a3ce485f95a8272d4430ea7530949f71ed", "unresolved": false, "patch_set": 1, "id": "df33271e_77a02b91", "line": 4598, "updated": "2020-04-01 16:27:55.000000000", "message": "that one is fine", "commit_id": "b26ced3600c090d1d66549ddbb47b1661e299a74"}]}}, "starlingx%2Fdistcloud~master~I98cec42eb5880d95d54182339dab6b5c951d6cfd": {"owner_id": 31484, "owner_name": "Jessica Castelino", "owner_email": "jessica.castelino@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 2, "date": "2020-04-08 19:44:20.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 1, "date": "2020-04-08 18:57:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 2, "date": "2020-04-09 14:45:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}], "comments": {"distributedcloud/dcorch/engine/sync_thread.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "18ba401fcb80a5bfaba83212421d91ad01f3fc2b", "unresolved": false, "patch_set": 1, "id": "df33271e_856b34b5", "line": 209, "range": {"start_line": 209, "start_character": 8, "end_line": 209, "end_character": 45}, "updated": "2020-03-30 13:54:30.000000000", "message": "I would prefer this be done after the initialize.", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "314e9b919bd3dd5da34909abc59798b8e6c60db3", "unresolved": false, "patch_set": 1, "id": "df33271e_b4c78864", "line": 209, "range": {"start_line": 209, "start_character": 8, "end_line": 209, "end_character": 45}, "in_reply_to": "df33271e_856b34b5", "updated": "2020-03-30 17:37:50.000000000", "message": "Done", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "18ba401fcb80a5bfaba83212421d91ad01f3fc2b", "unresolved": false, "patch_set": 1, "id": "df33271e_c58ffc72", "line": 283, "range": {"start_line": 283, "start_character": 50, "end_line": 283, "end_character": 56}, "updated": "2020-03-30 13:54:30.000000000", "message": "send", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "314e9b919bd3dd5da34909abc59798b8e6c60db3", "unresolved": false, "patch_set": 1, "id": "df33271e_54cefc81", "line": 283, "range": {"start_line": 283, "start_character": 50, "end_line": 283, "end_character": 56}, "in_reply_to": "df33271e_c58ffc72", "updated": "2020-03-30 17:37:50.000000000", "message": "Done", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "18ba401fcb80a5bfaba83212421d91ad01f3fc2b", "unresolved": false, "patch_set": 1, "id": "df33271e_65c43092", "line": 289, "range": {"start_line": 288, "start_character": 8, "end_line": 289, "end_character": 48}, "updated": "2020-03-30 13:54:30.000000000", "message": "I think we still want to make these updates during the audit, so your check should happen after this.", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "314e9b919bd3dd5da34909abc59798b8e6c60db3", "unresolved": false, "patch_set": 1, "id": "df33271e_74d18023", "line": 289, "range": {"start_line": 288, "start_character": 8, "end_line": 289, "end_character": 48}, "in_reply_to": "df33271e_65c43092", "updated": "2020-03-30 17:37:50.000000000", "message": "Done", "commit_id": "500067374fac40a6a39b2ec0b852103d14379acf"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "12688a55cf1b291ab6f87b40c0b6e6cd458ab2d0", "unresolved": false, "patch_set": 2, "id": "df33271e_5dc5a18d", "line": 506, "range": {"start_line": 505, "start_character": 0, "end_line": 506, "end_character": 19}, "updated": "2020-04-08 15:58:52.000000000", "message": "I think these two lines should be wrapped in a \"if self.initial_audit_in_progress\" test, to avoid waking up the sync thread unnecessarily.\n\nI'd like to see a brief comment here explaining that after setting the flag to false we need to wake up the sync thread to ensure it sends out a sync status update.", "commit_id": "503a09b5f55baa0f2f2c1d5778b79fdcc9d00e50"}]}}, "openstack%2Fkolla~master~I2c75dbc2ea063dd3507eaaf93a484c50acae5fb5": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-09 12:59:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-09 06:32:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {".zuul.d/debian.yaml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2c9673ea8c668d4f549cf46f2d79a35190b6b189", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b8cf7a52", "line": 33, "range": {"start_line": 33, "start_character": 4, "end_line": 33, "end_character": 17}, "updated": "2020-01-06 09:51:36.000000000", "message": "nit: not required", "commit_id": "fe9cb67b8a583af4101ce8bfc0e186f4a7af72cd"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "4cd48ba493af96ca4b62c0fffc4670edfbd6cc55", "unresolved": false, "patch_set": 7, "id": "df33271e_2a605fa5", "side": "PARENT", "line": 34, "range": {"start_line": 34, "start_character": 4, "end_line": 34, "end_character": 17}, "updated": "2020-04-08 09:46:12.000000000", "message": "nit: I would keep it to retain symmetry", "commit_id": "f1f1d854594da23321ad94ae6358ecbdc119d18e"}, {"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "0a2c7f95f6e899de70f3d40a19b6b4587b882e6d", "unresolved": false, "patch_set": 7, "id": "df33271e_8ae1abff", "side": "PARENT", "line": 34, "range": {"start_line": 34, "start_character": 4, "end_line": 34, "end_character": 17}, "in_reply_to": "df33271e_2a605fa5", "updated": "2020-04-08 09:51:44.000000000", "message": "parent is not voting already.", "commit_id": "f1f1d854594da23321ad94ae6358ecbdc119d18e"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "b21cbc2bba599dbe1970d789cd32bab4ebd6633b", "unresolved": false, "patch_set": 7, "id": "df33271e_d71cfb78", "side": "PARENT", "line": 34, "range": {"start_line": 34, "start_character": 4, "end_line": 34, "end_character": 17}, "in_reply_to": "df33271e_8ae1abff", "updated": "2020-04-08 12:47:55.000000000", "message": "I know, but if we ever change it, we have to remember about this.", "commit_id": "f1f1d854594da23321ad94ae6358ecbdc119d18e"}], "tests/templates/template_overrides.j2": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "c65193626656652c4717181fe7457d8b31325d1f", "unresolved": false, "patch_set": 5, "id": "df33271e_ea1cb76b", "side": "PARENT", "line": 90, "updated": "2020-04-08 09:30:59.000000000", "message": "oops?", "commit_id": "f1f1d854594da23321ad94ae6358ecbdc119d18e"}]}}}