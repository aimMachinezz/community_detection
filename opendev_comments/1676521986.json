{"openstack%2Ftripleo-quickstart~master~Ifcb1c5e64ed0005f760aef8435a980d5bdefb193": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29775, "name": "Sandeep Yadav", "email": "sandyada@redhat.com", "username": "sandeepyadav93"}, {"value": 0, "_account_id": 16312, "name": "Alfredo Moralejo", "email": "amoralej@redhat.com", "username": "amoralej"}, {"value": 2, "date": "2020-04-14 14:37:29.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-04-20 10:56:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-04-15 07:58:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "openstack%2Fnova~master~I55a47d447f5f5b2d18754027f69e05e729d40338": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-04-20 15:16:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:45:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/policies/servers.py": [{"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "9c0547dc1036e1c79eeb75ec79d1445d23608d46", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29f3910c", "line": 133, "updated": "2020-04-14 10:02:29.000000000", "message": "Seems like these should allow project too", "commit_id": "05ec728ebbac263bb610fcf775a2fc57d0d12d73"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "f9fcf8faec02bb2e63ff4b1b5c27ed19d32c0a59", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_31700b73", "line": 133, "in_reply_to": "3f4c43b2_29f3910c", "updated": "2020-04-14 15:40:03.000000000", "message": "humm, ohk but is it ok to show host status to owner of server ?", "commit_id": "05ec728ebbac263bb610fcf775a2fc57d0d12d73"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "310ac2ce15996f82bbd5a8fcba2e43d1c29340ab", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cdab001b", "line": 133, "in_reply_to": "3f4c43b2_31700b73", "updated": "2020-04-15 08:48:30.000000000", "message": "that is really an operator choice, if they allow people to live-migrate, they are going to need to know which host it landed on, most likely anyways.\n\nThe concept is basically where its a private cloud, but you want the projects to look after themselves more. We got pulled up about it in a few design summit sessions in the past. Although the exact details escape me.", "commit_id": "05ec728ebbac263bb610fcf775a2fc57d0d12d73"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a8cefb8186ad7bbbffd58f691a945fb6343a7eb5", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_57e016cd", "line": 133, "in_reply_to": "3f4c43b2_cdab001b", "updated": "2020-04-15 13:24:59.000000000", "message": "I see. giving project role opetion and keeping default to system admin make sense. done", "commit_id": "05ec728ebbac263bb610fcf775a2fc57d0d12d73"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "9c0547dc1036e1c79eeb75ec79d1445d23608d46", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9e68143", "line": 158, "updated": "2020-04-14 10:02:29.000000000", "message": "As above", "commit_id": "05ec728ebbac263bb610fcf775a2fc57d0d12d73"}]}}, "opendev%2Fsystem-config~master~I4c4bd243c9684e3987eeb99e4c66d31a882336a0": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-20 16:07:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-20 16:10:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fnova~master~I7801685b8ded35c4aece27e2193674b70bd0633a": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-04-20 15:20:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:50:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~Ibfc1917d35ab9e7657b13ec32582891f06d88176": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-04-20 15:19:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:48:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/policies/test_servers.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "4c8cf5c8228bd58c70831a45b700f59191cbc5c3", "unresolved": false, "patch_set": 4, "id": "1f493fa4_7ecbada4", "line": 1233, "range": {"start_line": 1232, "start_character": 0, "end_line": 1233, "end_character": 30}, "updated": "2020-04-20 16:50:04.000000000", "message": "weird that you did this this way rather than via a decorator, but that's a nit", "commit_id": "95c74a26d40883faa053febc72657a8b8e6c5bd3"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "49a784ce4147572cbc1342beff45b5fcea716461", "unresolved": false, "patch_set": 4, "id": "1f493fa4_dec12131", "line": 1233, "range": {"start_line": 1232, "start_character": 0, "end_line": 1233, "end_character": 30}, "in_reply_to": "1f493fa4_7ecbada4", "updated": "2020-04-20 16:58:52.000000000", "message": "not sure why :) maybe while trying required mock and testing this tests.", "commit_id": "95c74a26d40883faa053febc72657a8b8e6c5bd3"}]}}, "openstack%2Fnova~master~I06cd5bd497ef287ccc279672a71e36b2d4bc2adc": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-04-20 15:14:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:45:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/policies/extended_server_attributes.py": [{"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "0f859e0675db32f6619a52762fa233c017ef613c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49ab7dd5", "line": 64, "updated": "2020-04-14 10:00:46.000000000", "message": "System or project I think, some people will want this for all users\n\nMaybe add a todo to split into host and non host things.", "commit_id": "cfe13d9b4bee838a83bd714e0d25a6c5b55d2a31"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2012588d99bdac9d8d11941425d4dc9c31ac295d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_718e1379", "line": 64, "in_reply_to": "3f4c43b2_49ab7dd5", "updated": "2020-04-14 15:36:54.000000000", "message": "i see. may be separating the attributes might need adjustment for other API access for example list filters for these attr. But something to do later so adding note for now make sense.", "commit_id": "cfe13d9b4bee838a83bd714e0d25a6c5b55d2a31"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cb98f217d0e17e7779bf9d774d522d71e1745e3a", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d79d4658", "line": 64, "in_reply_to": "3f4c43b2_4db250e8", "updated": "2020-04-15 13:23:46.000000000", "message": "i see. make sense. done", "commit_id": "cfe13d9b4bee838a83bd714e0d25a6c5b55d2a31"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "5c4905402537f4f595471cfb8ef3916eedf06a97", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4db250e8", "line": 64, "in_reply_to": "3f4c43b2_718e1379", "updated": "2020-04-15 08:27:37.000000000", "message": "Sorry, I was more meaning we should do system and project here, to let admin's make that call for now.", "commit_id": "cfe13d9b4bee838a83bd714e0d25a6c5b55d2a31"}]}}, "starlingx%2Fconfig~master~Ie35e5bb3f1237887dfff66f4ed8d71a24f95ebdb": {"owner_id": 31646, "owner_name": "Carmen Rata", "owner_email": "carmen.rata@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, {"value": 0, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-04-20 17:49:12.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-04-20 17:44:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 1, "date": "2020-04-20 17:44:32.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}, {"value": 0, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "5a93befa91d325540d0379b641c86211cbfe3ab5", "unresolved": false, "patch_set": 2, "id": "1f493fa4_a19eba51", "line": 9, "updated": "2020-04-20 17:36:09.000000000", "message": "nit: lines in commit message should be wrapped at 72 chars, per:\nhttps://wiki.openstack.org/wiki/GitCommitMessages#Summary_of_Git_commit_message_structure", "commit_id": "d5e7665d545c88adae208dd8c09801658b55fe9a"}, {"author": {"_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, "change_message_id": "4140dea7d1f13d8ee02e639b3da329e91777f23b", "unresolved": false, "patch_set": 2, "id": "1f493fa4_e11d62be", "line": 9, "in_reply_to": "1f493fa4_a19eba51", "updated": "2020-04-20 17:42:53.000000000", "message": "Done", "commit_id": "d5e7665d545c88adae208dd8c09801658b55fe9a"}]}}, "starlingx%2Fcert-manager-armada-app~master~I6e618f8d34a0b8a219d0a3477898761b1cae156c": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 1, "date": "2020-04-20 18:08:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-04-20 16:50:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 2, "date": "2020-04-20 18:12:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "openstack%2Fansible-role-collect-logs~master~Ida2f71a5077e56bf245060268d725eecac0a3e5b": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-14 10:46:48.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-20 10:14:59.000000000", "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, {"value": 2, "date": "2020-04-17 08:17:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "c1891bd494221859feff47ad2da4d513015ad0ed", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_92cbd351", "line": 10, "range": {"start_line": 9, "start_character": 1, "end_line": 10, "end_character": 1}, "updated": "2020-04-15 07:11:05.000000000", "message": "This is fine but can you please add something... be a bit more specific about what this change is doing... it's a bit hard to come to without any prior context. Especially I'm missing something like:\n\" moving flatten_nested_dict.py from filter_plugins to /library (why?) & fix its return include 'data'  \"", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "49eb73ba06c5ce019d4cfea01a431622e6d88304", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_127dd8e6", "line": 10, "range": {"start_line": 9, "start_character": 1, "end_line": 10, "end_character": 1}, "in_reply_to": "3f4c43b2_3213dfb7", "updated": "2020-04-17 08:17:45.000000000", "message": "thanks", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3ab92a398caa8d9b653a6d1b0e5f454ac3474729", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_3213dfb7", "line": 10, "range": {"start_line": 9, "start_character": 1, "end_line": 10, "end_character": 1}, "in_reply_to": "3f4c43b2_92cbd351", "updated": "2020-04-15 07:24:37.000000000", "message": "library is default location for modules, as you can see there is an already existing module there. The return data is not changed and \"data\" itself is not are requirement, but a module returns everything inside a dictionary, so you need a key to put your \"result\" under, that is called \"data\", mainly for lack of inspiration for a better name.", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}], "filter_plugins/flatten_nested_dict.py": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "c1891bd494221859feff47ad2da4d513015ad0ed", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_d2c55b3e", "updated": "2020-04-15 07:11:05.000000000", "message": "why do we want that in library instead please?", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "723824e11abe53fd70b9b82683376720806b39a9", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_5204807b", "in_reply_to": "3f4c43b2_7224470e", "updated": "2020-04-17 08:12:03.000000000", "message": "sounds like a good reason", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3ab92a398caa8d9b653a6d1b0e5f454ac3474729", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_7224470e", "in_reply_to": "3f4c43b2_d2c55b3e", "updated": "2020-04-15 07:24:37.000000000", "message": "Because that is where ansible is looking for modules.", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}], "library/flatten_nested_dict.py": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "280703318480759b329f4d2d749f3f8aa60985b5", "unresolved": false, "patch_set": 4, "id": "df33271e_ed3515dd", "line": 63, "range": {"start_line": 46, "start_character": 0, "end_line": 63, "end_character": 29}, "updated": "2020-04-07 09:56:55.000000000", "message": "this is incorrect example, it fails the modules, please provide clear input and output examples for the module.", "commit_id": "7e6c4ab4714a4fc18cf7fd3dfd4add60f29f83c7"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "c1891bd494221859feff47ad2da4d513015ad0ed", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_72cd675c", "line": 68, "range": {"start_line": 68, "start_character": 15, "end_line": 68, "end_character": 19}, "updated": "2020-04-15 07:11:05.000000000", "message": "why are you changing the interface here\n\nwas it wrong currently i.e. modules must return these things 'data' and 'changed' (makes sense in terms of ansible task if so) ?", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "723824e11abe53fd70b9b82683376720806b39a9", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_d2eff0ad", "line": 68, "range": {"start_line": 68, "start_character": 15, "end_line": 68, "end_character": 19}, "in_reply_to": "3f4c43b2_52830bcd", "updated": "2020-04-17 08:12:03.000000000", "message": "well it *is* changing the interface since before you could just get the info without having to know/use 'data' ... but it seems fine to me to do that.", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3ab92a398caa8d9b653a6d1b0e5f454ac3474729", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_52830bcd", "line": 68, "range": {"start_line": 68, "start_character": 15, "end_line": 68, "end_character": 19}, "in_reply_to": "3f4c43b2_72cd675c", "updated": "2020-04-15 07:24:37.000000000", "message": "Not changing interface, is new interface as filters do not really have one. A module needs to return a dictionary with some special keys. We put our own computed list under data.\n\nIf you want we can pick almost any name we want (few are reserved like changed, failed,..)", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, "change_message_id": "23a4231d2bbf011e1629c2831f42b770c6d70eda", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_c278bf2b", "line": 78, "updated": "2020-04-17 10:42:11.000000000", "message": "Where is \"capture_file\" that I see in the example defined ?", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3d4381e2fab0dc7dfd6c95db74a65e13b39c25b5", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_62d60bc6", "line": 78, "in_reply_to": "3f4c43b2_c278bf2b", "updated": "2020-04-17 10:59:12.000000000", "message": "capture_file is just an example of additional keys that get passed into the final dictionaries. If you put \"foo: bar\", it should also be passed down.\n\nThe only special keys are \"name\" and \"group\", all the others are only passed down.", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}], "tasks/collect.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "c1891bd494221859feff47ad2da4d513015ad0ed", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_b2a9af7c", "line": 28, "range": {"start_line": 28, "start_character": 6, "end_line": 28, "end_character": 14}, "updated": "2020-04-15 07:11:05.000000000", "message": "why preferable to set_fact as was happening previously? Not used outside this play?", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "723824e11abe53fd70b9b82683376720806b39a9", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_f222ecff", "line": 28, "range": {"start_line": 28, "start_character": 6, "end_line": 28, "end_character": 14}, "in_reply_to": "3f4c43b2_92559353", "updated": "2020-04-17 08:12:03.000000000", "message": "... \nbut where are we now calling the flatten_nested_dict i just noticed it's gone from line 27..", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3ab92a398caa8d9b653a6d1b0e5f454ac3474729", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_92559353", "line": 28, "range": {"start_line": 28, "start_character": 6, "end_line": 28, "end_character": 14}, "in_reply_to": "3f4c43b2_b2a9af7c", "updated": "2020-04-15 07:24:37.000000000", "message": "A filter works inside jinja2 so you can use it with set_fact or just directly where you want. Still, a module can only run inside a task and you can only record its output using register. Shortly: it is impossible to use set_fact with a module. Yep, you could set fact in an additional task but in our case this is not needed, mainly we consume the result in the next task.\n\nPS. set_fact is a module itself.", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "28639a35aa8989f5dc0e51d6ecdc510790d64390", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_72d25cd4", "line": 28, "range": {"start_line": 28, "start_character": 6, "end_line": 28, "end_character": 14}, "in_reply_to": "3f4c43b2_f222ecff", "updated": "2020-04-17 09:31:51.000000000", "message": "line 26 in new code is the module call (check identation)", "commit_id": "b1d1684f0529f506659e2cf25c2af608e54909d1"}]}}, "openstack%2Ftripleo-quickstart~master~Icd16c0252f20fde86a9755047c3ec18bade00293": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-20 09:57:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-04-08 07:30:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "0ed96e354961c724095af8226498728f7f7f923f", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cc128c62", "line": 8, "updated": "2020-03-09 07:47:52.000000000", "message": "cool story bro...\n\ncan you please remind of the connection btween fs35 and fs1\n\nalso we recently made fs1 do *api tempest tests but i don't see that here", "commit_id": "0467804c5133c7dfc9deddf155512d8ef541d749"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "58a6fdf0bdeed358bce35119d9ec17f89c55147a", "unresolved": false, "patch_set": 1, "id": "df33271e_53919a46", "line": 8, "in_reply_to": "1fa4df85_cc128c62", "updated": "2020-04-02 19:38:07.000000000", "message": "should be same, but fs035 has ipv6 - the only difference", "commit_id": "0467804c5133c7dfc9deddf155512d8ef541d749"}], "config/general_config/featureset035.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "a7cb4667bf373b0f939a2de22903fa8562a0ce61", "unresolved": false, "patch_set": 2, "id": "df33271e_b23d77c5", "line": 188, "updated": "2020-04-03 07:46:40.000000000", "message": "in FS1 we also run *.api tempest tests\nhttps://github.com/openstack/tripleo-quickstart/blob/2d92afe29eae7afea4c7d12674ac088b413c2400/config/general_config/featureset001.yml#L199-L208\n\nso will you add it here too?", "commit_id": "8613d739462354701bb31d4585fae7b9d3f9949f"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "2c4685ec522d48d3907c017298d780ba9afd7fb7", "unresolved": false, "patch_set": 2, "id": "df33271e_b027d364", "line": 188, "in_reply_to": "df33271e_b23d77c5", "updated": "2020-04-07 21:34:33.000000000", "message": "yeah, seems like worth it", "commit_id": "8613d739462354701bb31d4585fae7b9d3f9949f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "d0c3fcbbe0069a6a5b08379543319db16f62d676", "unresolved": false, "patch_set": 3, "id": "df33271e_fe1641a7", "line": 185, "range": {"start_line": 185, "start_character": 51, "end_line": 185, "end_character": 56}, "updated": "2020-04-08 06:45:09.000000000", "message": ";)", "commit_id": "3df803979fcd3afb8d7c070f65e62c127c3da5e5"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "a39ae0ebef952defa5e0406c5f97128072ee8f7f", "unresolved": false, "patch_set": 3, "id": "df33271e_be29599c", "line": 185, "range": {"start_line": 185, "start_character": 51, "end_line": 185, "end_character": 56}, "in_reply_to": "df33271e_fe1641a7", "updated": "2020-04-08 16:52:00.000000000", "message": "Done", "commit_id": "3df803979fcd3afb8d7c070f65e62c127c3da5e5"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "d0c3fcbbe0069a6a5b08379543319db16f62d676", "unresolved": false, "patch_set": 3, "id": "df33271e_3e11c9ad", "line": 186, "range": {"start_line": 186, "start_character": 53, "end_line": 186, "end_character": 62}, "updated": "2020-04-08 06:45:09.000000000", "message": "remov.. confusing as fs35 is not mentioned there it's about fs20/fs01", "commit_id": "3df803979fcd3afb8d7c070f65e62c127c3da5e5"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "a39ae0ebef952defa5e0406c5f97128072ee8f7f", "unresolved": false, "patch_set": 3, "id": "df33271e_1e1a057c", "line": 186, "range": {"start_line": 186, "start_character": 53, "end_line": 186, "end_character": 62}, "in_reply_to": "df33271e_3e11c9ad", "updated": "2020-04-08 16:52:00.000000000", "message": "Done", "commit_id": "3df803979fcd3afb8d7c070f65e62c127c3da5e5"}]}}, "openstack%2Ftripleo-ci~master~I741fdf338c06c9ac2eaaf06628ebc2b099038d33": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-04-20 09:43:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-19 15:30:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"docs/tripleo-quickstart-logs.html": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "a585551c28f50d4fcdb929a7dcebf8a1aabe72f7", "unresolved": false, "patch_set": 1, "id": "df33271e_79270fb8", "line": 34, "range": {"start_line": 34, "start_character": 97, "end_line": 34, "end_character": 100}, "updated": "2020-04-07 06:55:33.000000000", "message": "i think you just need to remove .gz from the text not add it to the url", "commit_id": "904b6ab928003ae30fc08bf3d1f234e8c6732fee"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "8aa3f96ab73ea64e90c6d921e996e12b04dd0853", "unresolved": false, "patch_set": 1, "id": "df33271e_d91d7c74", "line": 34, "updated": "2020-04-07 06:53:58.000000000", "message": "where is it broken though?\n\ne.g. there it looks correct?\n\nhttps://acbecf2c4485a49c5074-a45826960d45b13f019a0388ffa6602d.ssl.cf1.rackcdn.com/713439/12/check/tripleo-ci-centos-8-standalone/447a1d0/logs/README.html\n\nand if you add .gz in the end like above it is 404 \n\nhttps://acbecf2c4485a49c5074-a45826960d45b13f019a0388ffa6602d.ssl.cf1.rackcdn.com/713439/12/check/tripleo-ci-centos-8-standalone/447a1d0/logs/undercloud/var/log/extra/errors.txt.txt.gz", "commit_id": "904b6ab928003ae30fc08bf3d1f234e8c6732fee"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "98922224d1093e575017e2bbd546263dee9a0da2", "unresolved": false, "patch_set": 1, "id": "df33271e_c86a717f", "line": 34, "range": {"start_line": 34, "start_character": 97, "end_line": 34, "end_character": 100}, "in_reply_to": "df33271e_19452344", "updated": "2020-04-09 14:09:25.000000000", "message": "17:03 < sshnaidm> marios, can you revote please? Now it's fine: https://review.opendev.org/#/c/717961/\n17:04 < marios> sshnaidm: ack checking\n17:05 < marios> sshnaidm: you posted some other fix? \n17:05 < marios> sshnaidm: i don't see upadte there \n17:05 < marios> sshnaidm: i.e. you fixed the link for vex? \n17:08 < sshnaidm> marios, enabled gzip for it\n17:08 < sshnaidm> marios, https://review.opendev.org/711500", "commit_id": "904b6ab928003ae30fc08bf3d1f234e8c6732fee"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "414b800775f826b00d464c995559414b31b99c48", "unresolved": false, "patch_set": 1, "id": "df33271e_19452344", "line": 34, "range": {"start_line": 34, "start_character": 97, "end_line": 34, "end_character": 100}, "in_reply_to": "df33271e_79270fb8", "updated": "2020-04-07 06:57:42.000000000", "message": "09:55 < sshnaidm|afk> marios, hmm.. and here it's with gz \nhttps://logserver.rdoproject.org/65/717865/3/openstack-check/tripleo-ci-centos-8-ovb-3ctlr_1comp-featureset001-vexxhost/d3054f4/logs/\n09:55 < openstackgerrit> Gael Chamoulaud proposed openstack/tripleo-validations master: Remove objects migrated to validations-common  \n                         https://review.opendev.org/713204\n09:55 < sshnaidm|afk> seems like it's not the same everywhere\n09:56 < marios> sshnaidm|afk: i see :/", "commit_id": "904b6ab928003ae30fc08bf3d1f234e8c6732fee"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~Icba8a8292d1e2675c7da3513d00a4a0f4191747e": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:40:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}], "comments": {}}, "recordsansible%2Fara-web~master~I21fd853ad2831cc6fe9b1e873e7c412f7114e3f4": {"owner_id": 9061, "owner_name": "David Moreau Simard", "owner_email": "moi@dmsimard.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 17:55:51.000000000", "_account_id": 9061, "name": "David Moreau Simard", "email": "moi@dmsimard.com", "username": "dmsimard"}], "comments": {}}, "openstack%2Ffuturist~master~I2b8d8d6cf4ac29dc58cd8fe418d613445d65c3be": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:56:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:55:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I40c860f22993efbe375c741c63513d764ba4eebc": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-20 10:56:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-17 21:05:04.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/roles/tripleo_bootstrap/tasks/main.yml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "73122d9d39d2ed71a8cf628ddb920b8841d766d2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0aa919de", "line": 116, "range": {"start_line": 116, "start_character": 10, "end_line": 116, "end_character": 43}, "updated": "2020-04-17 15:39:54.000000000", "message": "i would just try to change this one and see if that works", "commit_id": "b4222ec8211a3687e3dbb1c85be946223bd6c315"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "7f5a20307b551aa44e2177576bbe903288dacff3", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a42adb8c", "line": 129, "updated": "2020-04-17 15:32:16.000000000", "message": "this seems too much, why would we have it both in /usr/bin AND in /usr/local/bin?", "commit_id": "b4222ec8211a3687e3dbb1c85be946223bd6c315"}]}}, "openstack%2Fironic~stable%2Ftrain~Iad04779cc8c782b20d6636dd2bbb602bc89255b2": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 14:47:35.000000000", "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-04-20 13:17:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fneutron~master~I7875142ebecd17663e17847fb14997200d7ae5c8": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-20 15:01:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-04-15 07:27:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-16 07:27:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-15 07:26:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/objects/ports.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "9d943aa8d8dd25f5609e2495e170d6778762c1a7", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a6806e8d", "line": 633, "updated": "2020-04-14 09:48:17.000000000", "message": "name of this method suggests that it will return Ports, but this doc says only about fixed IPs. I think that this doc should be updated to match with the other :)", "commit_id": "b085a3ee8d431fa401a51fbff911af1d61f486cd"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "2d30dd7f46228810b58852986ee1eae1c297823c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_6a5104d9", "line": 633, "in_reply_to": "3f4c43b2_a6806e8d", "updated": "2020-04-14 12:49:51.000000000", "message": "Agree, the doc string is not correct.", "commit_id": "b085a3ee8d431fa401a51fbff911af1d61f486cd"}], "neutron/tests/unit/objects/test_ports.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "f4567d17e8501a56d3e614eba21dbb4a8535efab", "unresolved": false, "patch_set": 2, "id": "df33271e_8fc32157", "line": 557, "range": {"start_line": 557, "start_character": 28, "end_line": 557, "end_character": 38}, "updated": "2020-04-01 08:49:10.000000000", "message": "network_id in fixed_ips? where it is like that?", "commit_id": "b085a3ee8d431fa401a51fbff911af1d61f486cd"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "9d943aa8d8dd25f5609e2495e170d6778762c1a7", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_465c0a4b", "line": 557, "range": {"start_line": 557, "start_character": 28, "end_line": 557, "end_character": 38}, "in_reply_to": "df33271e_6c7b94bd", "updated": "2020-04-14 09:48:17.000000000", "message": "ok", "commit_id": "b085a3ee8d431fa401a51fbff911af1d61f486cd"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "0602407550ef247c447019ac4b35f9c7d0865fb0", "unresolved": false, "patch_set": 2, "id": "df33271e_6c7b94bd", "line": 557, "range": {"start_line": 557, "start_character": 28, "end_line": 557, "end_character": 38}, "in_reply_to": "df33271e_8fc32157", "updated": "2020-04-08 17:12:46.000000000", "message": "This is the DB model object. \"fixed_ips\" is a list of IPAllocation registers:\n\nhttps://github.com/openstack/neutron/blob/master/neutron/db/models_v2.py#L56", "commit_id": "b085a3ee8d431fa401a51fbff911af1d61f486cd"}]}}, "openstack%2Fswift~stable%2Fussuri~I331b55201839c772cfd521239c16b34aad731bca": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 15:03:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}], "comments": {}}, "opendev%2Fsystem-config~master~I8fed8d2d381020594de63bf1069f68122d018c47": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:49:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-19 15:57:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I4f3d38ea70d48589be3e1b7f5eea96c358b44560": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 2, "date": "2020-04-20 07:31:58.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "starlingx%2Fnginx-ingress-controller-armada-app~master~If6792f5d4348d4f257fcf93a4d32760cb110bd97": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 1, "date": "2020-04-20 16:54:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-04-20 16:56:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 2, "date": "2020-04-20 17:02:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "openstack%2Ftempest~master~Ib54b16543eb428087555cd3411bae51244d1aa65": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 23:21:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-04-20 14:54:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {}}, "openstack%2Fnova~master~I3c9ae47d0ceb64fa3082a01cb7df27faa4f5a00d": {"owner_id": 30009, "owner_name": "Fran\u00e7ois Palin", "owner_email": "fpalin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 13:30:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-02 15:29:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 30009, "name": "Fran\u00e7ois Palin", "email": "fpalin@redhat.com", "username": "FrancoisPalin"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2020-04-17 10:28:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 1, "date": "2020-04-18 07:32:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "68cb48eb4fa40ce29d9131d62d4b154ac5befd43", "unresolved": false, "patch_set": 2, "id": "7faddb67_dd525d3b", "line": 14, "range": {"start_line": 9, "start_character": 0, "end_line": 14, "end_character": 8}, "updated": "2019-07-16 13:18:26.000000000", "message": "Your actual change is pretty generic as it's touching code in _shutdown_instance that's obviously used outside of this limited instance deletion use case. You might want to reword this.", "commit_id": "37821894a4f3eb18432299dc1378a9187a6920f4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_486edf64", "line": 7, "range": {"start_line": 7, "start_character": 20, "end_line": 7, "end_character": 23}, "updated": "2019-12-05 15:07:39.000000000", "message": "API", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "7ad65b1b9b3fc90bf0c9589a1995b16feca93a20", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_28f7e35c", "line": 12, "range": {"start_line": 10, "start_character": 9, "end_line": 12, "end_character": 32}, "updated": "2019-12-05 15:10:59.000000000", "message": "You mean a MessagingTimeout from the cinder API, right? Because the API call in cinder is a blocking RPC call and the backend times out the default rpc_response_timeout of 60 seconds and then we orphan the volume.\n\nHow does retrying fix that? I guess because the original request is being processed and eventually completes, so a subsequent request comes into cinder and cinder says it's already done and there is nothing to do. Are there cinder backends that would fail though if you try to terminate a connection or delete an attachment that is already terminated/deleted?", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "93bce0043d5699fa0e2187295180e733d0259531", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_b206bc84", "line": 12, "range": {"start_line": 10, "start_character": 9, "end_line": 12, "end_character": 32}, "in_reply_to": "3fa7e38b_28f7e35c", "updated": "2020-01-23 00:16:16.000000000", "message": "> Are there cinder backends that would fail though if you try to terminate\n > a connection or delete an attachment that is already terminated/deleted?\n\nThe drivers are supposed to be able to handle this, though it's difficult to say whether they all do.  The reference drivers check to make sure something exists before trying to delete from the backend, so hopefully the drivers for backends where this might be a problem took the hint to do likewise.", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}], "nova/compute/manager.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "0223dbebe086dc8691c95950de4c5f7b5e14ec28", "unresolved": false, "patch_set": 2, "id": "7faddb67_e468fdb9", "line": 2626, "updated": "2019-07-14 12:49:11.000000000", "message": "Why not retry on this? Note attachment_delete above is the new style for this and could fail the same way.", "commit_id": "37821894a4f3eb18432299dc1378a9187a6920f4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "68cb48eb4fa40ce29d9131d62d4b154ac5befd43", "unresolved": false, "patch_set": 2, "id": "7faddb67_9dd385d5", "line": 2626, "in_reply_to": "7faddb67_e468fdb9", "updated": "2019-07-16 13:18:26.000000000", "message": "Yup agreed, we need to handle both and could potentially retry. \n\nThat said the associated bug and commit message describe a timeout between c-api and c-vol causing this so I'm not sure how useful a retry would actually be.\n\nCould we also have cinderclient raise something more specific here to highlight this is a timeout between c-api and c-vol rather than a generic error? I appreciate that we only get a 500 back from c-api but doesn't that contain something we could use to raise an more meaningful exception?", "commit_id": "37821894a4f3eb18432299dc1378a9187a6920f4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "77fcbd1ed38b9549b0772a3ec542ec7229a5ec52", "unresolved": false, "patch_set": 2, "id": "7faddb67_2d1cc376", "line": 2634, "updated": "2019-07-12 22:17:48.000000000", "message": "I think this is something we do not want to do. This will flip the cinder volume status to \"detached\" when the volume was not actually detached from the cinder storage backend. Which will result in the volume being made available for attachment by others when it is still attached to the original instance.\n\nI'm adding lyarwood to this review to sanity check me.", "commit_id": "37821894a4f3eb18432299dc1378a9187a6920f4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "68cb48eb4fa40ce29d9131d62d4b154ac5befd43", "unresolved": false, "patch_set": 2, "id": "7faddb67_ddc49df7", "line": 2634, "in_reply_to": "7faddb67_2d1cc376", "updated": "2019-07-16 13:18:26.000000000", "message": "terminate_connection only unmaps the volume from a specific compute host so I'd actually be okay with this in that context. It would allow the volume to be reused and allow operators to manually clean up the mapping.\n\nI need to go over attachment_delete but I think there's additional logic in there so without a specific timeout exception being raised I don't think it would be safe to just swallow a failure there and detach the volume.", "commit_id": "37821894a4f3eb18432299dc1378a9187a6920f4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ec57998923410fc36c6abc945f76e81ff91c69bb", "unresolved": false, "patch_set": 3, "id": "7faddb67_6011d55d", "line": 2613, "range": {"start_line": 2613, "start_character": 27, "end_line": 2613, "end_character": 28}, "updated": "2019-08-08 14:31:30.000000000", "message": "Should we make this configurable?\n\nMaybe also increase the default to 3 or 5?", "commit_id": "4475affcdfb52e432a3f712da5fea7175566f350"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "5c788ab7d12f456f4d2f5d0962bd1bcdeb7d8f5d", "unresolved": false, "patch_set": 3, "id": "7faddb67_f186f365", "line": 2613, "range": {"start_line": 2613, "start_character": 27, "end_line": 2613, "end_character": 28}, "in_reply_to": "7faddb67_6011d55d", "updated": "2019-08-08 20:53:48.000000000", "message": "I'd like to avoid new configs for this, but you could potentially piggy back on these:\n\nhttps://docs.openstack.org/nova/latest/configuration/config.html#hyperv.volume_attach_retry_count\n\nhttps://docs.openstack.org/nova/latest/configuration/config.html#hyperv.volume_attach_retry_interval", "commit_id": "4475affcdfb52e432a3f712da5fea7175566f350"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "618137570eed4926fbeb2cb4df20dbe807899ffe", "unresolved": false, "patch_set": 3, "id": "7faddb67_f5b530d1", "line": 2613, "range": {"start_line": 2613, "start_character": 27, "end_line": 2613, "end_character": 28}, "in_reply_to": "7faddb67_f186f365", "updated": "2019-08-29 13:13:17.000000000", "message": "I wouldn't reuse these, they are currently used to control the retrying of calls down to os-brick and not to c-api as in this case.\n\nI'd still introduce new configurables here, if anything these hyperv specific configurables could be extracted into generic configurables used across the virt drivers when making calls down to os-brick.", "commit_id": "4475affcdfb52e432a3f712da5fea7175566f350"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ec57998923410fc36c6abc945f76e81ff91c69bb", "unresolved": false, "patch_set": 3, "id": "7faddb67_e07dc5b2", "line": 2615, "range": {"start_line": 2613, "start_character": 0, "end_line": 2615, "end_character": 24}, "updated": "2019-08-08 14:31:30.000000000", "message": "You could use the retrying module for this by extracting the below into a separate method with the @retrying.retry decorator. There's a few examples in the codebase already:\n\nhttp://codesearch.openstack.org/?q=%40retrying.retry&i=nope&files=&repos=openstack/nova", "commit_id": "4475affcdfb52e432a3f712da5fea7175566f350"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "bca15d787b37d27e865bf85d368f24fa26e898d8", "unresolved": false, "patch_set": 3, "id": "7faddb67_f1d4b349", "line": 2615, "range": {"start_line": 2613, "start_character": 0, "end_line": 2615, "end_character": 24}, "in_reply_to": "7faddb67_e07dc5b2", "updated": "2019-08-08 20:56:18.000000000", "message": "I definitely agree with splitting this out into a separate method, this method is already getting huge and hard to unit test properly.\n\nWhat I'd suggest doing is a 2-patch series, one where you refactor this delete/terminate code out - which won't have any test changes, and then another which adds the try/except + retyr logic you want and then you can unit test just that without the rest of the complexity in the _shutdown_instance method.", "commit_id": "4475affcdfb52e432a3f712da5fea7175566f350"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "744f3d2c85cf4b171e2182ba5b302513a8ac6e22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_47d17057", "line": 2630, "range": {"start_line": 2628, "start_character": 0, "end_line": 2630, "end_character": 74}, "updated": "2019-09-16 15:12:04.000000000", "message": "Can we just move this into _volume_detach_delete ?", "commit_id": "9f16721708097e4bc3fe8302deca56507fd965fa"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "744f3d2c85cf4b171e2182ba5b302513a8ac6e22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6764acba", "line": 2643, "range": {"start_line": 2641, "start_character": 0, "end_line": 2643, "end_character": 57}, "updated": "2019-09-16 15:12:04.000000000", "message": "Move this into _volume_detach_delete", "commit_id": "9f16721708097e4bc3fe8302deca56507fd965fa"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_283295a8", "line": 2556, "range": {"start_line": 2554, "start_character": 0, "end_line": 2556, "end_character": 51}, "updated": "2019-09-23 08:46:39.000000000", "message": "nit - you can wrap this onto two lines I think, it doesn't need to be indented.", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "6a18aecbf343a89f30ef2b79e081bb8f7b37640d", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_db5605cf", "line": 2550, "range": {"start_line": 2550, "start_character": 27, "end_line": 2550, "end_character": 59}, "updated": "2019-10-10 13:29:11.000000000", "message": "Ack: \"The base exception class for all exceptions this library raises.\"\n\nSo we will retry on *any* cinder exception.", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "58b46c449f923b61ffa1f1ca1c0198cf776bfb5d", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5baba0d4", "line": 2550, "range": {"start_line": 2550, "start_character": 27, "end_line": 2550, "end_character": 59}, "in_reply_to": "3fa7e38b_7a6ea42f", "updated": "2019-10-16 11:45:41.000000000", "message": "I think what you've written here is correct. I was just calling out for the benefit of other reviewers that I'd actually checked.\n\nDon't change this on my account!", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}, {"author": {"_account_id": 30009, "name": "Fran\u00e7ois Palin", "email": "fpalin@redhat.com", "username": "FrancoisPalin"}, "change_message_id": "0e5484f804b5192a085ad178d6554df3c7f013ef", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_7a6ea42f", "line": 2550, "range": {"start_line": 2550, "start_character": 27, "end_line": 2550, "end_character": 59}, "in_reply_to": "3fa7e38b_db5605cf", "updated": "2019-10-15 17:46:34.000000000", "message": "I will make use of type instead of isinstance to make sure this is true only when base class ClientException", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "6a18aecbf343a89f30ef2b79e081bb8f7b37640d", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_dbcda530", "line": 2560, "range": {"start_line": 2558, "start_character": 0, "end_line": 2560, "end_character": 59}, "updated": "2019-10-10 13:29:11.000000000", "message": "In the event that detach fails we will retry terminate_connection(). From a brief look at the implementation, it seems that whether this fails or not for a connection which was previously terminated is delegated to the volume backend driver. The couple I looked at didn't look like they would fail, but I still think we could be more conservative here. I think it would be more robust to retry terminate_connection until it works, then detach until it works.\n\ne.g.\n\ndef _volume_detach_delete():\n  @retrying.retry(...)\n  def _retry(f, *args, **kwargs):\n    return f(*args, **kwargs)\n\n  if bdm.attachment_id:\n    _retry(self.volume_api.attachment_delete, context, ...)\n  else:\n    connector = self.driver.get_volume_connector(instance)\n    _retry(self.volume_api.terminate_connection, context, ...)\n    _retry(self.volume_api.detach, context, ...)\n\nThoughts?", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9f76244b4e415055256fb877395160739a481d05", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9537a0b0", "line": 2560, "range": {"start_line": 2558, "start_character": 0, "end_line": 2560, "end_character": 59}, "in_reply_to": "3fa7e38b_7afb0478", "updated": "2019-11-04 14:21:57.000000000", "message": "Apologies I missed that you were waiting on my input here.\n\nI agree that it would be more robust to retry both but if we are going to do that then I'd decorate attachment_delete, terminate_connection and detach in nova/volume/cinder.py instead of private _retry methods here. IMHO it's useful in any context they are called.", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}, {"author": {"_account_id": 30009, "name": "Fran\u00e7ois Palin", "email": "fpalin@redhat.com", "username": "FrancoisPalin"}, "change_message_id": "0e5484f804b5192a085ad178d6554df3c7f013ef", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_7afb0478", "line": 2560, "range": {"start_line": 2558, "start_character": 0, "end_line": 2560, "end_character": 59}, "in_reply_to": "3fa7e38b_dbcda530", "updated": "2019-10-15 17:46:34.000000000", "message": "Thanks for taking the time, Matt. I agree with your suggestion, this way we better focus the retry on where the issue is. I'm also interested in what Lee thinks about this, before I go for a respin.", "commit_id": "bcd3177d5055b48f9e67e236f70bfd2340dee049"}], "nova/conf/compute.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "744f3d2c85cf4b171e2182ba5b302513a8ac6e22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_24eeb288", "line": 974, "range": {"start_line": 974, "start_character": 0, "end_line": 974, "end_character": 25}, "updated": "2019-09-16 15:12:04.000000000", "message": "How about `Volume API detach call retry count`?", "commit_id": "9f16721708097e4bc3fe8302deca56507fd965fa"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "a0f9b62723381becd6bb9bf2da6a6138a76c0e30", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_237d1db2", "line": 865, "range": {"start_line": 865, "start_character": 56, "end_line": 865, "end_character": 62}, "updated": "2019-11-08 11:48:15.000000000", "message": "detach, terminate_connection and attachment_delete.", "commit_id": "2c69428553e6c2bbda56b48827814a0353417ca1"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "add0f65e41df311deee3302b81c84951a28a2949", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_e811cbb0", "line": 859, "updated": "2019-12-05 15:04:04.000000000", "message": "If we're going to have a new config option, we should probably at least have a short 'fixes' release note mentioning the new config option.\n\nIt would also be nice to have a follow up change that is not backported which consolidates the generic option with the existing hyper-v specific ones I mentioned earlier:\n\nhttps://docs.openstack.org/nova/latest/configuration/config.html#hyperv.volume_attach_retry_count\n\nhttps://docs.openstack.org/nova/latest/configuration/config.html#hyperv.volume_attach_retry_interval\n\nI realize this option is for detach while those are for attach, but I would think we could just have generic options for both.", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c4223dc03b57787e9b1d792d98d99b0ded955ea2", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_88d5b7b9", "line": 863, "updated": "2019-12-05 15:07:50.000000000", "message": "Technically this option isn't only used when detaching a volume. We terminate connections and delete attachments during move operations without actually detaching the volume. I'm not sure that's really worth mentioning in the docs here though since it probably doesn't matter.", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c4223dc03b57787e9b1d792d98d99b0ded955ea2", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_a87c33ea", "line": 870, "range": {"start_line": 870, "start_character": 26, "end_line": 870, "end_character": 38}, "updated": "2019-12-05 15:07:50.000000000", "message": "You don't need to mention this, it will be rendered in the docs automatically:\n\nhttps://storage.bhs1.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_52b/669674/9/check/openstack-tox-docs/52ba01a/docs/configuration/config.html#compute.volume_detach_retry_count", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_28eda3b7", "line": 871, "updated": "2019-12-05 15:07:39.000000000", "message": "Looks like lyarwood asked for this at [1]. I'm not sure why it would be necessary though. If something is failing to complete after 5 loops, surely that's an issue that bumping the value will only mask?\n\n[1] https://review.opendev.org/#/c/669674/3/nova/compute/manager.py@2613", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}], "nova/tests/unit/compute/test_compute_mgr.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "744f3d2c85cf4b171e2182ba5b302513a8ac6e22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_24d552ba", "line": 1423, "range": {"start_line": 1422, "start_character": 0, "end_line": 1423, "end_character": 79}, "updated": "2019-09-16 15:12:04.000000000", "message": "mock_attachment_delete.side_effect = \\\n    cinder_exception.ClientException(code=500)\n\nCan you also test the behaviour of a non-ClientException here, IOW that we only try once and then fail?", "commit_id": "9f16721708097e4bc3fe8302deca56507fd965fa"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "744f3d2c85cf4b171e2182ba5b302513a8ac6e22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_649fcab4", "line": 1432, "range": {"start_line": 1428, "start_character": 0, "end_line": 1432, "end_character": 16}, "updated": "2019-09-16 15:12:04.000000000", "message": "Yse assertRaises here to avoid this:\n\nhttps://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises", "commit_id": "9f16721708097e4bc3fe8302deca56507fd965fa"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b6d2bb33", "line": 1420, "range": {"start_line": 1420, "start_character": 56, "end_line": 1420, "end_character": 65}, "updated": "2019-09-23 08:46:39.000000000", "message": "expected_retry_count?", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_364a4b27", "line": 1427, "range": {"start_line": 1427, "start_character": 26, "end_line": 1427, "end_character": 35}, "updated": "2019-09-23 08:46:39.000000000", "message": "This can just be exc right? I'd personally rename it to raised_expection or something more meaningful as well.", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f61a7315", "line": 1434, "range": {"start_line": 1434, "start_character": 20, "end_line": 1434, "end_character": 50}, "updated": "2019-09-23 08:46:39.000000000", "message": "This isn't correct, it should be `CONF.compute.volume_detach_retry_count`.\n\nRegardless, we would normally set this within the test itself using \n\n    self.flags(volume_detach_retry_count=5, group='compute')", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_16edcfee", "line": 1438, "range": {"start_line": 1438, "start_character": 8, "end_line": 1438, "end_character": 47}, "updated": "2019-09-23 08:46:39.000000000", "message": "You could also provide this in the call below.", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "655ad301fd44464087404ed55b4f014d63903362", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f6efd3e6", "line": 1439, "range": {"start_line": 1439, "start_character": 0, "end_line": 1439, "end_character": 21}, "updated": "2019-09-23 08:46:39.000000000", "message": "nit - I don't think you need a variable here.", "commit_id": "613f2162989082f72dd281b9786ec834cc92a759"}], "nova/tests/unit/volume/test_cinder.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "a0f9b62723381becd6bb9bf2da6a6138a76c0e30", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_8359715c", "line": 564, "range": {"start_line": 540, "start_character": 0, "end_line": 564, "end_character": 57}, "updated": "2019-11-08 11:48:15.000000000", "message": "LGTM but it would be nice to see a test for the positive case where the first call fails but subsequent attempts pass. Just provide an iterable as a side_effect of [cinder_exception.ClientException(code=500), None] and assert that the client is called twice without an exception being raised:\n\nhttps://docs.python.org/3/library/unittest.mock.html#unittest.mock.Mock.side_effect", "commit_id": "2c69428553e6c2bbda56b48827814a0353417ca1"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_a8075370", "line": 555, "range": {"start_line": 554, "start_character": 61, "end_line": 555, "end_character": 74}, "updated": "2019-12-05 15:07:39.000000000", "message": "style nit: just drag both of these onto the same line. Ditto below", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_48181fcc", "line": 560, "range": {"start_line": 559, "start_character": 69, "end_line": 560, "end_character": 15}, "updated": "2019-12-05 15:07:39.000000000", "message": "nit: Try\n\n ...side_effect = [\n      cinder_exception.ClientException(code=500), None]", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}], "nova/volume/cinder.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c4223dc03b57787e9b1d792d98d99b0ded955ea2", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_e8ed4b8e", "line": 549, "updated": "2019-12-05 15:07:50.000000000", "message": "Is there a backoff on this with the retry interval or are we just retrying again immediately?", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_8867f751", "line": 552, "range": {"start_line": 549, "start_character": 20, "end_line": 552, "end_character": 69}, "updated": "2019-12-05 15:07:39.000000000", "message": "style nit: just drag these down onto new lines and lose the wrapping", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_08654745", "line": 552, "range": {"start_line": 552, "start_character": 24, "end_line": 552, "end_character": 25}, "updated": "2019-12-05 15:07:39.000000000", "message": "these brackets look unnecessary?", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "19275220b055c5ec14fd2ec75f89b6b0f75157f9", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_a8551354", "line": 619, "updated": "2019-12-05 15:07:39.000000000", "message": "ditto", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "7ad65b1b9b3fc90bf0c9589a1995b16feca93a20", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_e8bb0b72", "line": 869, "updated": "2019-12-05 15:10:59.000000000", "message": "This seems extremely broad.\n\nLet's say we get a MessagingTimeout in cinder which results in a 500 error. But the actual backend in cinder has deleted the attachment. Now we retry and this time we get a 400 response from Cinder because the resource is already gone, we'll just continue retrying until we exhaust our retries and raise that NotFound error back up to the caller, right?", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c467f38997146d833444fd31eb39db7e7337a70d", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_685ddb46", "line": 869, "in_reply_to": "3fa7e38b_e8bb0b72", "updated": "2019-12-05 15:14:49.000000000", "message": "Could we scope this to only ClientException where the code is 500?", "commit_id": "862a90d304110d33c4fd53768c50435a44c54d73"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c88f5e56ae84bfc4b4fa583a2b7ba8960bd7f9aa", "unresolved": false, "patch_set": 10, "id": "1fa4df85_ad26e567", "line": 552, "range": {"start_line": 552, "start_character": 20, "end_line": 552, "end_character": 78}, "updated": "2020-03-12 17:50:41.000000000", "message": "Any reason not to use:\n\n  isinstance(e, cinder_apiclient.exceptions.InternalServerError)\n\n?\n\nI don't know if cinder subclasses 'InternalServerError' but if it does, 'type(e) ==' won't catch things", "commit_id": "01c334cbdd859f4e486ac2c369a4bdb3ec7709cc"}, {"author": {"_account_id": 30009, "name": "Fran\u00e7ois Palin", "email": "fpalin@redhat.com", "username": "FrancoisPalin"}, "change_message_id": "5ea2a07daa106b6e721abada48f06a96ee5abf08", "unresolved": false, "patch_set": 10, "id": "1fa4df85_b96859ba", "line": 552, "range": {"start_line": 552, "start_character": 20, "end_line": 552, "end_character": 78}, "in_reply_to": "1fa4df85_ad26e567", "updated": "2020-03-13 14:09:56.000000000", "message": "I am specifically (and intentionally) targeting InternalServerError (HTTP 500) to trigger a retry, and not its subclasses", "commit_id": "01c334cbdd859f4e486ac2c369a4bdb3ec7709cc"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bdb03540bfa3e5c9b79f22289090f08529e35e96", "unresolved": false, "patch_set": 10, "id": "df33271e_c73de9bb", "line": 552, "range": {"start_line": 552, "start_character": 20, "end_line": 552, "end_character": 78}, "in_reply_to": "1fa4df85_b96859ba", "updated": "2020-04-02 15:29:43.000000000", "message": "Ah, fair. Thanks", "commit_id": "01c334cbdd859f4e486ac2c369a4bdb3ec7709cc"}]}}, "openstack%2Ftempest~master~Id3a5b32f8ab197bcb1c59b5f6364dde4d8648eab": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-04-17 03:04:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 1, "date": "2020-04-20 09:18:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-04-20 09:15:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-20 10:12:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5690, "name": "Masayuki Igawa", "inactive": true}, {"value": 1, "date": "2020-04-20 08:35:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 31239, "name": "Paras Babbar", "email": "pbabbar@redhat.com", "username": "pbabbar"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"tempest/api/compute/servers/test_device_tagging.py": [{"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "2c912bac945a5ead11a51a384a28a88de7ec6a4f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c688ecc7", "line": 116, "range": {"start_line": 116, "start_character": 12, "end_line": 116, "end_character": 41}, "updated": "2020-04-16 06:59:48.000000000", "message": "If md_json should not be empty, how about adding\nself.assertNotEmpty(md_json) after L116? So we can see that the testcase fails because of empty md_json", "commit_id": "62975d1f17e3abafea24501a4f52891c3076828e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ad22de3849a72f4932bfaeea85de078cdb55d5c2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_badccf74", "line": 116, "range": {"start_line": 116, "start_character": 12, "end_line": 116, "end_character": 41}, "in_reply_to": "3f4c43b2_0f2f87a1", "updated": "2020-04-16 10:21:00.000000000", "message": "Actually no, we should not raise an exception if the data is empty. Instead of this, we just return False and let the active wait (\"call_until_true\") continue sending the SSH command and checking the response.", "commit_id": "62975d1f17e3abafea24501a4f52891c3076828e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "2bb2db0f2fb504abe04cc796e940ec426751e255", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f2f87a1", "line": 116, "range": {"start_line": 116, "start_character": 12, "end_line": 116, "end_character": 41}, "in_reply_to": "3f4c43b2_c688ecc7", "updated": "2020-04-16 10:04:14.000000000", "message": "That's a good check to add.", "commit_id": "62975d1f17e3abafea24501a4f52891c3076828e"}, {"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "2c912bac945a5ead11a51a384a28a88de7ec6a4f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6b10c92", "line": 319, "range": {"start_line": 319, "start_character": 8, "end_line": 319, "end_character": 37}, "updated": "2020-04-16 06:59:48.000000000", "message": "Does this have the same issue?", "commit_id": "62975d1f17e3abafea24501a4f52891c3076828e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "2bb2db0f2fb504abe04cc796e940ec426751e255", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f1a2f7d", "line": 319, "range": {"start_line": 319, "start_character": 8, "end_line": 319, "end_character": 37}, "in_reply_to": "3f4c43b2_c6b10c92", "updated": "2020-04-16 10:04:14.000000000", "message": "I didn't see that in the tests, but is the same casuistry. Makes sense to modify this too.", "commit_id": "62975d1f17e3abafea24501a4f52891c3076828e"}]}}, "openstack%2Fglance~master~Ica04d8878eeb748cc4bbfedae895a54896ce16b3": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 12:33:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "opendev%2Fsystem-config~master~I87b3d56de41f0ba5658c1240ddfc7ecf1c3c43af": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:50:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-20 17:00:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6aee0e2b49067ddf130e973b4e8bd41af048ec3b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_aa9e1ab5", "line": 1731, "range": {"start_line": 1719, "start_character": 2, "end_line": 1731, "end_character": 0}, "updated": "2020-04-18 14:00:43.000000000", "message": "Job system-config-beaker-puppet-4 not defined", "commit_id": "9d019e8d31e074c1a1ec31ea196ad2ca2614ff7f"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check-arm64", "change_message_id": "8a0409bf9192c369030d3ba4b68fd3c1c20d35cd", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_eaa822dc", "line": 1731, "range": {"start_line": 1719, "start_character": 2, "end_line": 1731, "end_character": 0}, "updated": "2020-04-18 14:00:52.000000000", "message": "Job system-config-beaker-puppet-4 not defined", "commit_id": "9d019e8d31e074c1a1ec31ea196ad2ca2614ff7f"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "7e73924f1ffe315d62249ae3ea4a287ddca51081", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_aa3a9a94", "line": 1571, "range": {"start_line": 1570, "start_character": 0, "end_line": 1571, "end_character": 43}, "updated": "2020-04-18 14:40:40.000000000", "message": "you can merge this job and it's parent, this is the only child.", "commit_id": "2e3b6895d1c162fe4b4a84a6ad1750a61010b430"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "fb911103de0a446c097fbf19584600624ea0e2d0", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_aa31faa4", "line": 1571, "range": {"start_line": 1570, "start_character": 0, "end_line": 1571, "end_character": 43}, "in_reply_to": "3f4c43b2_aa3a9a94", "updated": "2020-04-18 14:45:49.000000000", "message": "Done", "commit_id": "2e3b6895d1c162fe4b4a84a6ad1750a61010b430"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "ed1cab877ff62055c8e17fcf960fca7bfd2ff446", "unresolved": false, "patch_set": 5, "id": "1f493fa4_7ee60deb", "line": 1692, "updated": "2020-04-20 17:00:20.000000000", "message": "We dont run any centos-7 anymore so we can remove this job entirely.", "commit_id": "ca684c775ba56224294ea0b651134bc7001fabe5"}]}}, "openstack%2Freno~master~Ic3a8ab8b127fd5bf51b91ac6e83d459ffc087fc4": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-04-20 16:57:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-20 17:11:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8d1694c6f5511c2626a658682b1631e7d7020670", "unresolved": false, "patch_set": 1, "id": "1f493fa4_bb8707b7", "line": 7, "range": {"start_line": 7, "start_character": 26, "end_line": 7, "end_character": 32}, "updated": "2020-04-20 16:32:34.000000000", "message": "optional /o\\", "commit_id": "06e2b231cb92d00e2aa1e98b1c2c99e432a6a037"}], "releasenotes/notes/sphinx-with-tarballs-d3215fc6831c3516.yaml": [{"author": {"_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, "change_message_id": "b9a087a3bb9356069ebc132c41e86eb17184e43d", "unresolved": false, "patch_set": 1, "id": "1f493fa4_dbe2d32f", "line": 5, "updated": "2020-04-20 15:59:24.000000000", "message": "It might help to show the search path here.", "commit_id": "06e2b231cb92d00e2aa1e98b1c2c99e432a6a037"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "756044f2e780ec65ec0c54f3f25ac36a084c54bc", "unresolved": false, "patch_set": 1, "id": "1f493fa4_fb2d0fa9", "line": 5, "in_reply_to": "1f493fa4_dbe2d32f", "updated": "2020-04-20 16:40:12.000000000", "message": "Done (I'd to fix the commit message also)", "commit_id": "06e2b231cb92d00e2aa1e98b1c2c99e432a6a037"}]}}, "openstack%2Fpython-tripleoclient~master~Iceb4c282f3ae9fcb2c3836263ba66f5792e42334": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 13:42:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-17 18:54:39.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "opendev%2Fsystem-config~master~I4bcd8ebd6da8395e77d673ac76f4c41568d810ec": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-20 16:49:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-20 16:58:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~I9788ab12f5cfe0b1884f265482ceb9f533e9574e": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 28332, "name": "Alexandre arents", "email": "alexandre.arents@corp.ovh.com", "username": "aarents"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 08:46:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-04-17 17:05:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsystem-config~master~I21b01d360b50dba10673c2986e8a2868b8747522": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:49:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-19 15:57:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fkuryr-tempest-plugin~master~I275bb0bae3e59b0abbea807f401361b201962e7f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 1, "date": "2020-03-03 10:25:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 07:18:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 1, "date": "2020-04-02 12:28:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 21302, "name": "Gena", "email": "gcheresh@redhat.com", "username": "gcheresh"}, {"value": 2, "date": "2020-04-20 15:20:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "openstack%2Ftempest~master~I38a91b8e293e39625d08073e2b898451b6126ecb": {"owner_id": 31707, "owner_name": "Jason Li", "owner_email": "dl2017@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5196, "name": "Matthew Treinish", "email": "mtreinish@kortar.org", "username": "treinish"}, {"value": 1, "date": "2020-04-14 14:35:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24780, "name": "Sangeet Gupta", "email": "sg774j@att.com", "username": "sgupta"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-04-14 08:31:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-04-14 08:41:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 1921, "name": "Andrea Frittoli", "email": "andrea.frittoli@gmail.com", "username": "andrea-frittoli"}, {"value": 0, "_account_id": 28701, "name": "Dustin Specker", "email": "v-dspecker@microsoft.com", "username": "dustinspecker"}, {"value": 2, "date": "2020-04-20 01:45:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 1, "date": "2020-04-14 15:39:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17887, "name": "Doug Schveninger", "email": "ds6901@att.com", "username": "Doug.Schveninger"}, {"value": 2, "date": "2020-04-15 23:37:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, {"value": 0, "_account_id": 7350, "name": "Jordan Pittier", "email": "jordan.pittier@gmail.com", "username": "JordanP"}, {"value": 0, "_account_id": 25590, "name": "Pallav Gupta", "email": "pallav.gupta@ericsson.com", "username": "Pallav.Gupta"}, {"value": 0, "_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, {"value": 0, "_account_id": 6487, "name": "Durgarao Vemana", "email": "vkdrtechsavvy@gmail.com", "username": "vemana-kanakadurgarao"}, {"value": 0, "_account_id": 24817, "name": "Avishek Dutta", "email": "ad620p@att.com", "username": "ad620p"}, {"value": 0, "_account_id": 31026, "name": "Akshay", "display_name": "Akshay Wasankar", "email": "akshaywasankar51@gmail.com", "username": "akshay_wasankar"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 0, "_account_id": 29875, "name": "Devraj Paul", "email": "devraj.paul@gmail.com"}], "comments": {"tempest/common/compute.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a896f2ac9935c5c60bdffd7c1eddf4b278d0e721", "unresolved": false, "patch_set": 1, "id": "df33271e_c518f876", "line": 405, "updated": "2020-04-06 18:44:41.000000000", "message": "pep8: E501 line too long (96 > 79 characters)", "commit_id": "0006efeeb30bc89e9702e2c64f335ca45d3b34ab"}, {"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "a1283dc21b4dcf54bebee348cd09b3c2703774a9", "unresolved": false, "patch_set": 2, "id": "df33271e_83cf0356", "line": 406, "updated": "2020-04-07 03:33:40.000000000", "message": "I am curious why it works before?", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, "change_message_id": "ce4a43071ecc4b953357f169df071f0c8e3236ab", "unresolved": false, "patch_set": 2, "id": "df33271e_f60158b1", "line": 406, "in_reply_to": "df33271e_1b918547", "updated": "2020-04-07 19:33:59.000000000", "message": "updated by addressing the /websockify path. thanks Doug.", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, "change_message_id": "0482cc1a3da551a9922996104049864bf9f4ab11", "unresolved": false, "patch_set": 2, "id": "df33271e_8c0722ca", "line": 406, "in_reply_to": "df33271e_25739182", "updated": "2020-04-07 15:15:37.000000000", "message": "This is not Dev stack environment. It is in our production environment. Our production environment is deployed using k8s cluster and the noVNC endpoint is accessed using ingress, which needs the request to follow a more strict http request format. The / prefix is needed to meet that requirement.\n\nThe request before change is \nGET ?token=dc9c5489-ebe9-4bf4-9e99-404fd404420f HTTP/1.1\nThe request format after change is:\nGET /?token=dc9c5489-ebe9-4bf4-9e99-404fd404420f HTTP/1.1\nAfter change, the request format is more strictly comply to http request format and able to go through.\n\nThe TCs were in blacklist before the change due to \"HTTP/1.1 400 Bad Request\" error. After the change, TCs pass  successfully.", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 17887, "name": "Doug Schveninger", "email": "ds6901@att.com", "username": "Doug.Schveninger"}, "change_message_id": "bb9e98c3426b765ad2e1cb67e64a5ecba24fd435", "unresolved": false, "patch_set": 2, "id": "df33271e_25739182", "line": 406, "in_reply_to": "df33271e_83cf0356", "updated": "2020-04-07 13:02:06.000000000", "message": "My guess is that in DEV stack it is using the else when assigning path variable and others deployment are using qparams['path'][0].\n\nThat is a guess by looking at the code.\n\nWith that said I would say that the path should be corrected not the reqdata, but please debug this and prove my guess.\n\nIf the else on path is set the value will be \n\nGET //websockify HTTP/1.1\\r\\n' \n\nand that looks wrong\n\nformat requirements from here https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, "change_message_id": "0482cc1a3da551a9922996104049864bf9f4ab11", "unresolved": false, "patch_set": 2, "id": "df33271e_acfe6602", "line": 406, "in_reply_to": "df33271e_83cf0356", "updated": "2020-04-07 15:15:37.000000000", "message": "Our production environment is deployed using k8s cluster now and the noVNC endpoint is accessed using ingress, which needs the request to follow a more strict http request format. The / prefix is needed to meet that requirement.", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 17887, "name": "Doug Schveninger", "email": "ds6901@att.com", "username": "Doug.Schveninger"}, "change_message_id": "68adaeac772c60abdc92d167db08c28e251702a0", "unresolved": false, "patch_set": 2, "id": "df33271e_1b918547", "line": 406, "in_reply_to": "df33271e_acfe6602", "updated": "2020-04-07 18:59:50.000000000", "message": "My point is that reqdata can be either \nGET //websockify HTTP/1.1\\r\\n\nor\n'GET /{value from path} HTTP/1.1\\r\\n'\n\nthis value is invalid to my knowledge and caused by you path set\nGET //websockify HTTP/1.1\\r\\n", "commit_id": "36799435d6cef711b873c2f825bb04d3ab1487a9"}, {"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "1c68eca5380f23c062eccc60efa3a451e9176012", "unresolved": false, "patch_set": 3, "id": "df33271e_2954fac9", "line": 412, "range": {"start_line": 405, "start_character": 0, "end_line": 412, "end_character": 50}, "updated": "2020-04-08 00:23:34.000000000", "message": "How about lstrip \"/\" from path then adding one \"/\" for path?", "commit_id": "312b5f5686515e4dd92d0fec87e408d9cb73dc8b"}, {"author": {"_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, "change_message_id": "032d1c60c842787920487153dd5d423535fb78cb", "unresolved": false, "patch_set": 3, "id": "df33271e_c8fd763b", "line": 412, "range": {"start_line": 405, "start_character": 0, "end_line": 412, "end_character": 50}, "in_reply_to": "df33271e_2954fac9", "updated": "2020-04-08 14:10:13.000000000", "message": "good point! this makes code much clean. thanks zhufl!\nUpdated in new patch set.", "commit_id": "312b5f5686515e4dd92d0fec87e408d9cb73dc8b"}, {"author": {"_account_id": 17887, "name": "Doug Schveninger", "email": "ds6901@att.com", "username": "Doug.Schveninger"}, "change_message_id": "932f564d7d8eb9af79837e2154549c64ecc02563", "unresolved": false, "patch_set": 7, "id": "df33271e_b447884c", "line": 408, "range": {"start_line": 408, "start_character": 17, "end_line": 408, "end_character": 59}, "updated": "2020-04-09 16:19:57.000000000", "message": "urlparse.parse_qs(url.query) take the query string and give you key value pairs [1] so you donot have to worry about the http query string RFC [2].\n\nWith that said i would add the / to line 408 and remove th e / from  line 404 /websockify so that line 408 just uses path directly.\n\nI would also lead a comment update so people know what and why you did this that do not know the references below.\n\n[1] https://docs.python.org/3/library/urllib.parse.html \n[2} https://tools.ietf.org/html/rfc3986#section-3.4", "commit_id": "72fd55302ff6cade93dfd9492ebcbc339b8367e6"}, {"author": {"_account_id": 31707, "name": "Jason Li", "email": "dl2017@att.com", "username": "jason2020"}, "change_message_id": "fbbabcbb741569fa04f24e4174f55ec181cdc91f", "unresolved": false, "patch_set": 7, "id": "df33271e_c8bf0ca8", "line": 408, "range": {"start_line": 408, "start_character": 17, "end_line": 408, "end_character": 59}, "in_reply_to": "df33271e_b447884c", "updated": "2020-04-09 17:45:43.000000000", "message": "thanks Doug. updated per your comments.", "commit_id": "72fd55302ff6cade93dfd9492ebcbc339b8367e6"}]}}, "openstack%2Fcharm-mysql-router~master~I0a40a65cdf1b618ec843bf872fe0b39866496e1c": {"owner_id": 20805, "owner_name": "David Ames", "owner_email": "david@davam.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 08:58:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24824, "name": "Dmitrii Shcherbakov", "email": "dmitrii.shcherbakov@canonical.com", "username": "dmitriis"}, {"value": 1, "date": "2020-04-20 05:56:34.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 0, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {"src/lib/charm/openstack/mysql_router.py": [{"author": {"_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, "change_message_id": "83bb8c5cfd459222090c13b292b23de9526b9f56", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_835a4b27", "line": 481, "updated": "2020-04-16 15:15:26.000000000", "message": "it feels weird that you're calling receiving_interface.wait_timeout() twice", "commit_id": "fc589d1b2f6b56af0f76faca7df8843fae8160c3"}, {"author": {"_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}, "change_message_id": "8fbca4079caa30d696889cc0d145d300472c763e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_677c4bb5", "line": 481, "in_reply_to": "3f4c43b2_835a4b27", "updated": "2020-04-18 13:08:34.000000000", "message": "I tend to agree.", "commit_id": "fc589d1b2f6b56af0f76faca7df8843fae8160c3"}]}}, "openstack%2Fneutron~stable%2Fqueens~I25d3da929f8d0b6ee15d7b90ec59b9d58a4ae6a5": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-17 13:02:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-20 09:02:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fneutron-specs~master~I768c2a4858d52527a0eb3ae9b90001667eccb6c3": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fneutron-specs~master~I8cbef41fed33ce8392f9413de7a3b1d033857ce5": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fneutron~master~I4833ed0c9a2741bdd007d4ebb3e8c1cb4c30d4c7": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 1, "date": "2020-04-16 07:27:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-10 13:11:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-04-10 13:11:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, {"value": 0, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:59:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-04-14 09:38:25.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_c9fdc009", "line": 22, "updated": "2020-04-06 12:17:39.000000000", "message": "If we fix this bug (the code seems to be addressing this) then this fix is not just a refactor. May be a good idea to mention that in the commit message.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_cb12d0b4", "line": 22, "in_reply_to": "df33271e_c9fdc009", "updated": "2020-04-06 16:42:25.000000000", "message": "Good idea. I'll add this info here.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}], "neutron/objects/ports.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_6d40c408", "line": 642, "range": {"start_line": 630, "start_character": 4, "end_line": 642, "end_character": 32}, "updated": "2020-03-16 16:16:19.000000000", "message": "Delete it?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_88f2ce05", "line": 642, "range": {"start_line": 630, "start_character": 4, "end_line": 642, "end_character": 32}, "in_reply_to": "1fa4df85_6d40c408", "updated": "2020-03-16 18:10:49.000000000", "message": "Yes, that was just a tests", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}], "neutron/plugins/ml2/drivers/ovn/mech_driver/extensions/qos.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_cd6218ae", "line": 29, "range": {"start_line": 29, "start_character": 6, "end_line": 29, "end_character": 27}, "updated": "2020-03-16 16:16:19.000000000", "message": "Question: If this is in\nneutron/plugins/ml2/drivers/ovn/mech_driver/extensions\nbut not in \nneutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client/extensions\n\nCan we name it like this?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_28eb9adc", "line": 29, "range": {"start_line": 29, "start_character": 6, "end_line": 29, "end_character": 27}, "in_reply_to": "1fa4df85_cd6218ae", "updated": "2020-03-16 18:10:49.000000000", "message": "You are right, this is a client extension. It makes sense to implement this code under ovsdb.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_4dace834", "line": 69, "range": {"start_line": 69, "start_character": 26, "end_line": 69, "end_character": 40}, "updated": "2020-03-16 16:16:19.000000000", "message": "What if I'll create a rule without direction? It will be EGRESS by default?\n\nI remember some issues when specifying a rule from openstack client without a direction - I saw some errors while using OVN.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "e5d8fb26d2df3aeda5352e32f8bfb90893bdf108", "unresolved": false, "patch_set": 9, "id": "1fa4df85_4cbb6ac3", "line": 69, "range": {"start_line": 69, "start_character": 26, "end_line": 69, "end_character": 40}, "in_reply_to": "1fa4df85_48cb7652", "updated": "2020-03-18 10:37:56.000000000", "message": "++ thanks fro the explanation", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_48cb7652", "line": 69, "range": {"start_line": 69, "start_character": 26, "end_line": 69, "end_character": 40}, "in_reply_to": "1fa4df85_4dace834", "updated": "2020-03-16 18:10:49.000000000", "message": "QosBandwidthLimitRule OVO \"direction\" field has \"EGRESS_DIRECTION\" as default value.\n\n\"rule\" is an instance created from a DB retrieval query. This instance will have always this value assigned.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_0dfd90b0", "line": 77, "range": {"start_line": 77, "start_character": 20, "end_line": 77, "end_character": 21}, "updated": "2020-03-16 16:16:19.000000000", "message": "an?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_68c6724c", "line": 77, "range": {"start_line": 77, "start_character": 20, "end_line": 77, "end_character": 21}, "in_reply_to": "1fa4df85_0dfd90b0", "updated": "2020-03-16 18:10:49.000000000", "message": "Done", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_2d216c4e", "line": 79, "range": {"start_line": 79, "start_character": 40, "end_line": 79, "end_character": 49}, "updated": "2020-03-16 16:16:19.000000000", "message": "bandwidth", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_c8dc461a", "line": 79, "range": {"start_line": 79, "start_character": 40, "end_line": 79, "end_character": 49}, "in_reply_to": "1fa4df85_2d216c4e", "updated": "2020-03-16 18:10:49.000000000", "message": "Done", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_4d1ce812", "line": 80, "range": {"start_line": 80, "start_character": 9, "end_line": 80, "end_character": 18}, "updated": "2020-03-16 16:16:19.000000000", "message": "bandwidth", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_a8e9cab7", "line": 80, "range": {"start_line": 80, "start_character": 9, "end_line": 80, "end_character": 18}, "in_reply_to": "1fa4df85_4d1ce812", "updated": "2020-03-16 18:10:49.000000000", "message": "Done", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_4de148fc", "line": 111, "range": {"start_line": 111, "start_character": 36, "end_line": 111, "end_character": 40}, "updated": "2020-03-16 16:16:19.000000000", "message": "Maybe we can store it in some constant like:\nOVN_QOS_DEFAULT_RULE_PRIORITY\nor something like this?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_68cbd249", "line": 111, "range": {"start_line": 111, "start_character": 36, "end_line": 111, "end_character": 40}, "in_reply_to": "1fa4df85_4de148fc", "updated": "2020-03-16 18:10:49.000000000", "message": "Yes, I prefer this idea.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_adb79cd8", "line": 152, "range": {"start_line": 149, "start_character": 0, "end_line": 152, "end_character": 61}, "updated": "2020-03-16 16:16:19.000000000", "message": "Ok, as per L185 this should be deleted and then added when the rule has been change.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_c8bd2669", "line": 152, "range": {"start_line": 149, "start_character": 0, "end_line": 152, "end_character": 61}, "in_reply_to": "1fa4df85_adb79cd8", "updated": "2020-03-16 18:10:49.000000000", "message": "Sorry, I don't understand your point here.\n\nEvery time we need to apply a OVN QoS policy in a OVN port, we first delete any existing OVN QoS rule in both directions (a OVN port can have one OVN QoS rule per direction).", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "e5d8fb26d2df3aeda5352e32f8bfb90893bdf108", "unresolved": false, "patch_set": 9, "id": "1fa4df85_2c062e88", "line": 152, "range": {"start_line": 149, "start_character": 0, "end_line": 152, "end_character": 61}, "in_reply_to": "1fa4df85_c8bd2669", "updated": "2020-03-18 10:37:56.000000000", "message": "Yes, Sorry, I only left a note here. In L185 you check if a policy is needed to be updated. Only in this situation you're executing L149. All fine.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_6de684eb", "line": 163, "range": {"start_line": 163, "start_character": 15, "end_line": 163, "end_character": 23}, "updated": "2020-03-16 16:16:19.000000000", "message": "ovn_rule should be set in all cases here right?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "e5d8fb26d2df3aeda5352e32f8bfb90893bdf108", "unresolved": false, "patch_set": 9, "id": "1fa4df85_4c17eaa4", "line": 163, "range": {"start_line": 163, "start_character": 15, "end_line": 163, "end_character": 23}, "in_reply_to": "1fa4df85_68d512b7", "updated": "2020-03-18 10:37:56.000000000", "message": "Yes, so if qos_rules will return empty dict, then we will not use _ovn_qos_rule (which returns not empty structure all the time).\n\nSo there is no reason to verify if ovn_rule is empty, because it will never be.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_68d512b7", "line": 163, "range": {"start_line": 163, "start_character": 15, "end_line": 163, "end_character": 23}, "in_reply_to": "1fa4df85_6de684eb", "updated": "2020-03-16 18:10:49.000000000", "message": "\"_qos_rules\" will return a dictionary with the QoS rules per direction:\nqos_rules = {constants.EGRESS_DIRECTION: {...},\n             constants.INGRESS_DIRECTION: {...}}\n\nIn case one or both directions do not have rules, the value of this key will be an empty dict.\n\n\"_ovn_qos_rule\" will transform those Neutron QoS rules to OVN rules. If \"rules\" is an empty dict, \"_ovn_qos_rule\" will return None. In this case we don't apply anything.\n\nWe can have a QoS policy without rules or with rules not supported by this driver (min BW rules). In this case, \"_qos_rules\" will return empty dicts.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_ad61dc3b", "line": 226, "updated": "2020-03-16 16:16:19.000000000", "message": "What if policy is not linked to any port or network. You can early exit here and not open an empty txn.\n\nif not (network_bindings or port_bindings):\n   return", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_034a4154", "line": 226, "in_reply_to": "1fa4df85_ad61dc3b", "updated": "2020-03-16 18:10:49.000000000", "message": "Uhhh, good idea!", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_cd9778eb", "line": 238, "range": {"start_line": 238, "start_character": 16, "end_line": 238, "end_character": 59}, "updated": "2020-03-16 16:16:19.000000000", "message": "Maybe we can pass a policy here? To not execute the self._port_effective_qos_policy_id from L183?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_43cb5952", "line": 238, "range": {"start_line": 238, "start_character": 16, "end_line": 238, "end_character": 59}, "in_reply_to": "1fa4df85_cd9778eb", "updated": "2020-03-16 18:10:49.000000000", "message": "When reset=True, L183 is not executed.\n\nBut a good improvement I need to do here is to pass the Neutron QoS rules (those ones returned by \"_qos_rules\"). Instead of, in both methods \"update_network\" and \"update_port\", retrieve every time the qos rules from the Neutron DB, we can retrieve them just once.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}], "neutron/plugins/ml2/drivers/ovn/mech_driver/mech_driver.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "8afff85ca8fa7b45ff29caf4d29cd15167509464", "unresolved": false, "patch_set": 3, "id": "1fa4df85_efcaf19e", "side": "PARENT", "line": 625, "range": {"start_line": 624, "start_character": 61, "end_line": 625, "end_character": 54}, "updated": "2020-03-06 11:12:52.000000000", "message": "That was ugly :)", "commit_id": "59dd469bd3deba1d66c6da2097145f2cf53e3c7e"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "cb016fea5678eb16973f37e1fbbe76fbcfdd1998", "unresolved": false, "patch_set": 12, "id": "1fa4df85_4bd7b0ef", "line": 387, "updated": "2020-03-19 19:59:05.000000000", "message": "This was changed in master branch, so not sure if this is correct any more.", "commit_id": "b588e5a58c0ebecf0b077d4a0f2c78cab65b9f3b"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ce18d333772c22c21c17a3449e3f1ea90a3278e5", "unresolved": false, "patch_set": 12, "id": "1fa4df85_5f6a0181", "line": 387, "in_reply_to": "1fa4df85_4bd7b0ef", "updated": "2020-03-20 10:01:35.000000000", "message": "Yeah, I need to add the original network to this call.", "commit_id": "b588e5a58c0ebecf0b077d4a0f2c78cab65b9f3b"}], "neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/extensions/qos.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "c873dd9b1a371894f28f2bdd821152b414155aa7", "unresolved": false, "patch_set": 11, "id": "1fa4df85_8c4ac2a9", "line": 167, "range": {"start_line": 164, "start_character": 0, "end_line": 167, "end_character": 65}, "updated": "2020-03-18 10:43:12.000000000", "message": "Ok, I understand it, all fine now.", "commit_id": "6b1e43f08121c9d029b731069d37e6ef5c15851c"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "cb016fea5678eb16973f37e1fbbe76fbcfdd1998", "unresolved": false, "patch_set": 12, "id": "1fa4df85_2b959433", "line": 223, "updated": "2020-03-19 19:59:05.000000000", "message": "The ovn_client caller never uses the return value.", "commit_id": "b588e5a58c0ebecf0b077d4a0f2c78cab65b9f3b"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ce18d333772c22c21c17a3449e3f1ea90a3278e5", "unresolved": false, "patch_set": 12, "id": "1fa4df85_9ff959c9", "line": 223, "in_reply_to": "1fa4df85_2b959433", "updated": "2020-03-20 10:01:35.000000000", "message": "No, but is used in L236-238 in this file.", "commit_id": "b588e5a58c0ebecf0b077d4a0f2c78cab65b9f3b"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "a8fc6b92d36f867762df2f10dd3ced4ea2e543b0", "unresolved": false, "patch_set": 14, "id": "df33271e_66fae342", "line": 212, "range": {"start_line": 212, "start_character": 20, "end_line": 212, "end_character": 43}, "updated": "2020-03-24 10:06:43.000000000", "message": "Again, thanks Maciej: I need to filter only those ports with qos policy", "commit_id": "b9d74718d098e70057e1dccc985d1361973af51e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "5bdfaaf0b3ab89a0baa4ee541d2f9f8829440b82", "unresolved": false, "patch_set": 14, "id": "df33271e_1fb9682d", "line": 212, "range": {"start_line": 212, "start_character": 20, "end_line": 212, "end_character": 43}, "in_reply_to": "df33271e_66fae342", "updated": "2020-03-26 16:45:40.000000000", "message": "Done", "commit_id": "b9d74718d098e70057e1dccc985d1361973af51e"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "4c0417fc487c1916662990809b1216a08d4bc868", "unresolved": false, "patch_set": 17, "id": "df33271e_08eabe0d", "line": 215, "range": {"start_line": 215, "start_character": 15, "end_line": 215, "end_character": 49}, "updated": "2020-03-27 13:54:16.000000000", "message": "Thanks!", "commit_id": "bf59f63656e5c0f20ce1d78f0f302df7e4cb7ba5"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_3a1d8c0f", "line": 74, "updated": "2020-04-06 12:17:39.000000000", "message": "As also commented in the unit tests, shall we have an error case here if we have some non-supported rules?", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_31612e3b", "line": 74, "in_reply_to": "df33271e_3a1d8c0f", "updated": "2020-04-06 16:42:25.000000000", "message": "As commented in the tests, I'll log a warning in case we have a non-supported rule. This cannot happen due to \"validate_rule_for_port\", but just in case we change the code a break this check.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_693114ed", "line": 91, "updated": "2020-04-06 12:17:39.000000000", "message": "nit: missing closing }", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_8e0e1530", "line": 91, "in_reply_to": "df33271e_693114ed", "updated": "2020-04-06 16:42:25.000000000", "message": "Done", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_4996d096", "line": 123, "range": {"start_line": 123, "start_character": 46, "end_line": 123, "end_character": 68}, "updated": "2020-04-06 12:17:39.000000000", "message": "Is this guaranteed to exist? The method above fills this conditionally.\n\nWe had a bug not long ago:\n\nhttps://bugs.launchpad.net/neutron/+bug/1862893\n\nIt may be worth to check if we don't have the same problem here.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_91ad9a33", "line": 123, "range": {"start_line": 123, "start_character": 46, "end_line": 123, "end_character": 68}, "in_reply_to": "df33271e_4996d096", "updated": "2020-04-06 16:42:25.000000000", "message": "Arggg I made this mistake again.\n\nYou are right! \"max_burst_kbps\" is not mandatory in the Neutron QoS rule and \"burst\" is not mandatory in the OVN QoS rule neither.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_9f664a29", "line": 227, "range": {"start_line": 227, "start_character": 8, "end_line": 227, "end_character": 21}, "updated": "2020-04-06 12:17:39.000000000", "message": "nit: While not a native english speaker to my ear bound_ports and port_bindings are not the exact same things. bound_ports would be the correct one here. The same for network_bindings.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_9172bae2", "line": 227, "range": {"start_line": 227, "start_character": 8, "end_line": 227, "end_character": 21}, "in_reply_to": "df33271e_9f664a29", "updated": "2020-04-06 16:42:25.000000000", "message": "Done", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "23da2e6262e0f0e655272f8e5c593413ed203fef", "unresolved": false, "patch_set": 19, "id": "df33271e_c91625f2", "line": 79, "range": {"start_line": 66, "start_character": 8, "end_line": 79, "end_character": 53}, "updated": "2020-04-08 07:49:40.000000000", "message": "why we need this validation here instead of use of validate_policy mechanism from qos service plugin?", "commit_id": "8e96ef5bbdd6c7510401a95395406910219e9baa"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f65acca1198692a54e732a906fcb919d3d04d449", "unresolved": false, "patch_set": 19, "id": "df33271e_4fb5f5cc", "line": 79, "range": {"start_line": 66, "start_character": 8, "end_line": 79, "end_character": 53}, "in_reply_to": "df33271e_c91625f2", "updated": "2020-04-08 09:14:02.000000000", "message": "Yes, we use \"validate_policy\" because this is done by the plugin itself and it will call \"validate_rule_for_port\" [1].\n\nThe log.warning() was added after [2]. But this is the only check. I can remove it again.\n\nThe other \"if\" branches are needed to build the qos_rules structured that will be used to create the OVN QoS rules.\n\n\n[1]https://github.com/openstack/neutron/blob/d1384bddec0c1a5992fa846406a5cb602ccd0885/neutron/services/qos/drivers/manager.py#L137\n[2]https://review.opendev.org/#/c/711317/18/neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/extensions/qos.py@74", "commit_id": "8e96ef5bbdd6c7510401a95395406910219e9baa"}], "neutron/plugins/ml2/drivers/ovn/mech_driver/ovsdb/ovn_client.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "8afff85ca8fa7b45ff29caf4d29cd15167509464", "unresolved": false, "patch_set": 3, "id": "1fa4df85_6f5361e3", "line": 416, "range": {"start_line": 416, "start_character": 29, "end_line": 416, "end_character": 40}, "updated": "2020-03-06 11:12:52.000000000", "message": "Actually we do not create port there, can we rename this method? Like 'create_policy_for_port'?", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "3baa8ed5155d84e6e90e7f35fa206c1a8fd0dd4b", "unresolved": false, "patch_set": 3, "id": "1fa4df85_268e8fd0", "line": 416, "range": {"start_line": 416, "start_character": 29, "end_line": 416, "end_character": 40}, "in_reply_to": "1fa4df85_6a8773b8", "updated": "2020-03-13 08:18:32.000000000", "message": "Ok! thanks for explanation!", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "967dad2f6b2a60e9d0b1a354cac072142b5ff209", "unresolved": false, "patch_set": 3, "id": "1fa4df85_6a8773b8", "line": 416, "range": {"start_line": 416, "start_character": 29, "end_line": 416, "end_character": 40}, "in_reply_to": "1fa4df85_6f5361e3", "updated": "2020-03-12 17:27:55.000000000", "message": "What I want here is to make a parallelism between the event (create_port, update_port, etc) and the extension event. In case we want to implement a ovn_client manager extension, the extension method name should no differ from the caller.\n\nThat's why I'll keep this naming.", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "8cb3b7e7225c84c37fb6256236770bff1129926f", "unresolved": false, "patch_set": 3, "id": "1fa4df85_d90c8c95", "line": 416, "range": {"start_line": 416, "start_character": 29, "end_line": 416, "end_character": 40}, "in_reply_to": "1fa4df85_6f5361e3", "updated": "2020-03-09 02:28:20.000000000", "message": "agree", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "8afff85ca8fa7b45ff29caf4d29cd15167509464", "unresolved": false, "patch_set": 3, "id": "1fa4df85_2f6329b4", "line": 673, "range": {"start_line": 673, "start_character": 29, "end_line": 673, "end_character": 40}, "updated": "2020-03-06 11:12:52.000000000", "message": "update_qos_for_port?", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "8afff85ca8fa7b45ff29caf4d29cd15167509464", "unresolved": false, "patch_set": 3, "id": "1fa4df85_8f4edd35", "line": 1751, "range": {"start_line": 1751, "start_character": 25, "end_line": 1751, "end_character": 39}, "updated": "2020-03-06 11:12:52.000000000", "message": "update_qos_for_network?", "commit_id": "95a65d5f5dc493c7d5ce191d7d4fb8df4332f401"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_6d6c4408", "line": 627, "range": {"start_line": 627, "start_character": 11, "end_line": 627, "end_character": 64}, "updated": "2020-03-16 16:16:19.000000000", "message": "<3", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_e8d4a249", "line": 627, "range": {"start_line": 627, "start_character": 11, "end_line": 627, "end_character": 64}, "in_reply_to": "1fa4df85_6d6c4408", "updated": "2020-03-16 18:10:49.000000000", "message": "hehehe", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "cb016fea5678eb16973f37e1fbbe76fbcfdd1998", "unresolved": false, "patch_set": 12, "id": "1fa4df85_cb31605b", "side": "PARENT", "line": 447, "updated": "2020-03-19 19:59:05.000000000", "message": "Let's leave the comment, was actually going to clean this up in another change.", "commit_id": "df3b15da8f3ee7c492c32d8684c968d0ddc73d53"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ce18d333772c22c21c17a3449e3f1ea90a3278e5", "unresolved": false, "patch_set": 12, "id": "1fa4df85_7ffc9db4", "side": "PARENT", "line": 447, "in_reply_to": "1fa4df85_cb31605b", "updated": "2020-03-20 10:01:35.000000000", "message": "Done, but this extension needs this port_object containing the original port information.", "commit_id": "df3b15da8f3ee7c492c32d8684c968d0ddc73d53"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "cb016fea5678eb16973f37e1fbbe76fbcfdd1998", "unresolved": false, "patch_set": 12, "id": "1fa4df85_aba0a491", "side": "PARENT", "line": 1862, "updated": "2020-03-19 19:59:05.000000000", "message": "Should this bump_revision() be removed?", "commit_id": "df3b15da8f3ee7c492c32d8684c968d0ddc73d53"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ce18d333772c22c21c17a3449e3f1ea90a3278e5", "unresolved": false, "patch_set": 12, "id": "1fa4df85_9f6ab9b0", "side": "PARENT", "line": 1862, "in_reply_to": "1fa4df85_aba0a491", "updated": "2020-03-20 10:01:35.000000000", "message": "OVN network register does not store the qos policy anymore. There is no need to update the register and bump the version.", "commit_id": "df3b15da8f3ee7c492c32d8684c968d0ddc73d53"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "66b377b26fb222972e463778169f8041fdb7fb15", "unresolved": false, "patch_set": 14, "id": "df33271e_2622a0a5", "side": "PARENT", "line": 1897, "updated": "2020-03-23 23:13:18.000000000", "message": "Hi Rodolfo - my comment in the last PS was because the bump_revision() was independent of the qos code, it's done currently even when that's not called.  Maybe I'm missing something?", "commit_id": "a4d63e18cfda250faac23bf29a1882c16fb0cb13"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "5bdfaaf0b3ab89a0baa4ee541d2f9f8829440b82", "unresolved": false, "patch_set": 14, "id": "df33271e_ff45a444", "side": "PARENT", "line": 1897, "in_reply_to": "df33271e_2622a0a5", "updated": "2020-03-26 16:45:40.000000000", "message": "You are right!! We need to bump the network version.\n\nGood catch, this is a big mistake. Thanks!", "commit_id": "a4d63e18cfda250faac23bf29a1882c16fb0cb13"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "1432ef70338a07ec345125c01b18a289a1bc8244", "unresolved": false, "patch_set": 14, "id": "df33271e_46551f50", "line": 1781, "updated": "2020-03-24 09:56:42.000000000", "message": "Thanks Maciej for finding this error: we need to indent this line to execute it INSIDE the transaction.", "commit_id": "b9d74718d098e70057e1dccc985d1361973af51e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "5bdfaaf0b3ab89a0baa4ee541d2f9f8829440b82", "unresolved": false, "patch_set": 14, "id": "df33271e_9f7e1869", "line": 1781, "in_reply_to": "df33271e_46551f50", "updated": "2020-03-26 16:45:40.000000000", "message": "Done", "commit_id": "b9d74718d098e70057e1dccc985d1361973af51e"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "23da2e6262e0f0e655272f8e5c593413ed203fef", "unresolved": false, "patch_set": 19, "id": "df33271e_09e00dcc", "line": 468, "updated": "2020-04-08 07:49:40.000000000", "message": "this comment is pretty old so maybe it's time to do some cleaning? :)", "commit_id": "8e96ef5bbdd6c7510401a95395406910219e9baa"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f65acca1198692a54e732a906fcb919d3d04d449", "unresolved": false, "patch_set": 19, "id": "df33271e_afd001f9", "line": 468, "in_reply_to": "df33271e_09e00dcc", "updated": "2020-04-08 09:14:02.000000000", "message": "You are right. With changes made to this class methods in the neutron migration, we need to revisit those comments.", "commit_id": "8e96ef5bbdd6c7510401a95395406910219e9baa"}], "neutron/tests/functional/base.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_cd4e9895", "line": 267, "range": {"start_line": 267, "start_character": 40, "end_line": 267, "end_character": 44}, "updated": "2020-03-16 16:16:19.000000000", "message": "Why this?", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_a8430a13", "line": 267, "range": {"start_line": 267, "start_character": 40, "end_line": 267, "end_character": 44}, "in_reply_to": "1fa4df85_cd4e9895", "updated": "2020-03-16 18:10:49.000000000", "message": "Sorry!! That was just for manual testing, to avoid timeouts during the breakpoints.", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}], "neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/extensions/test_qos.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "61eb5f7368f231a343dc05cae9ae7c781d855242", "unresolved": false, "patch_set": 9, "id": "1fa4df85_ed583457", "line": 57, "range": {"start_line": 57, "start_character": 6, "end_line": 57, "end_character": 31}, "updated": "2020-03-16 16:16:19.000000000", "message": "I think we can add some more tests here", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "db455f18a9bf99917a56831694de6df1a8dca9fb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_e807c2c8", "line": 57, "range": {"start_line": 57, "start_character": 6, "end_line": 57, "end_character": 31}, "in_reply_to": "1fa4df85_ed583457", "updated": "2020-03-16 18:10:49.000000000", "message": "The point is I focused the functional tests to those methods making use of the NB DB, in this case \"_update_port_qos_rules\".\n\nAny other test, related to this class, does not make use of the NB DB. In that case, I just mocked this function and I implemented everything else in https://review.opendev.org/#/c/711317/9/neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/extensions/test_qos.py", "commit_id": "c477bb4c735599e24570857988be59fbc6d9d1b8"}], "neutron/tests/functional/plugins/ml2/drivers/ovn/mech_driver/ovsdb/extensions/test_qos.py": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_3a93cca5", "line": 26, "range": {"start_line": 25, "start_character": 0, "end_line": 26, "end_character": 56}, "updated": "2020-04-06 12:17:39.000000000", "message": "At least in the API max_burst_kbps is optional. May be worth to have rules in these tests with max_burst_kbps not present.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_ae3af9c9", "line": 26, "range": {"start_line": 25, "start_character": 0, "end_line": 26, "end_character": 56}, "in_reply_to": "df33271e_3a93cca5", "updated": "2020-04-06 16:42:25.000000000", "message": "That's correct. I'll make this change in the testing code.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}], "neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/ovsdb/extensions/test_qos.py": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_9abe58fd", "line": 36, "updated": "2020-04-06 12:17:39.000000000", "message": "The same here as in the functional tests.", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_ee3401e1", "line": 36, "in_reply_to": "df33271e_9abe58fd", "updated": "2020-04-06 16:42:25.000000000", "message": "Done", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "daa09b5e854f18b9dfd2991fd1d9ee07e3ce7de5", "unresolved": false, "patch_set": 18, "id": "df33271e_9a53f8e2", "line": 127, "updated": "2020-04-06 12:17:39.000000000", "message": "Does this mean we silently ignore a non-supported rule type? Is that how this should work?", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "c033c51fb0a9b36bac028790e702ecaef14e627b", "unresolved": false, "patch_set": 18, "id": "df33271e_312acee6", "line": 127, "in_reply_to": "df33271e_9a53f8e2", "updated": "2020-04-06 16:42:25.000000000", "message": "The QoS driver validates any port when applied to a port QoSPlugin._validate_update_port_callback\n\nThis method is called when a port or a network are updated and validates any port with the configured drivers.\n\nIf the port is already bound to a host using OVN driver, this check will reject any invalid rule. That means this should no happen.\n\nI'll remove this check here. Anyway, if for any reason we have a qos rule not accepted in the policy, we should log a warning but not fail (this is just my opinion)", "commit_id": "fed4a5edb4e6d0b21e7113c9d5339f3a7eb0d501"}]}}, "airship%2Fairshipctl~master~I2e3c4df06163caa032d2d9b7a2032123d311915a": {"owner_id": 31681, "owner_name": "Vamsi Savaram", "owner_email": "vamsi.savaram@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:19:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 1, "date": "2020-04-20 16:06:37.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 2, "date": "2020-04-20 16:38:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"roles/docker-install/defaults/main.yaml": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "05afee7d90a4feef20484cd6ff06fb95523a63c4", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_3010c201", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "updated": "2020-04-17 17:20:47.000000000", "message": "i think this should be jinja template, not variables.", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "6662775a1273204e33005640e6720ce5f1856925", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_904b96ae", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_3010c201", "updated": "2020-04-17 17:46:32.000000000", "message": "I could do that, but this way it is easier to append existing daemon.json if one exists. \nFor e.g. https://review.opendev.org/#/c/713733/21/roles/airship-images-configure-docker/tasks/main.yaml", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1b178ab5e28b82d0828ba1d6f322a3714cc1efbc", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_be094396", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_3e6ff392", "updated": "2020-04-17 19:28:13.000000000", "message": "Well, this may create a mess. So i would rather have it a template, which is then converted to json using filter, and if we want to append it later, we can use combine filter same way, since we can use combine on jsons in ansible i think", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "a293f7bed7e16e949c3fab69b4741b903d9719f9", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_93a8c077", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_904b96ae", "updated": "2020-04-17 18:35:01.000000000", "message": "But you don't append in role, you just write out the whole  file. And you don't check if it exists already anyway.", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4c1c6e275a2528f5e57cfbe7b3d00ed0b24b97eb", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_f32b04e8", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_93a8c077", "updated": "2020-04-17 18:40:10.000000000", "message": "i mean this is viable, in the end i think, since we are using to_nice_json, however now i don't understand why we need quotes.", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "1c822fac595525edca3aa7fba8e3145b1e252794", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_de79affc", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_be094396", "updated": "2020-04-17 19:32:57.000000000", "message": "Got it. Moved this to json template in PS 6.", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "73b59899f58f01529b7e3fc81508c075fd2544f9", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_3e6ff392", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 44}, "in_reply_to": "3f4c43b2_f32b04e8", "updated": "2020-04-17 19:10:34.000000000", "message": "I meant, it would be easier if we want to append at a later point of time. But, I can make it a template, no problem.\nThe quotes on the key is needed for yaml, because of the \"-\".", "commit_id": "8476cc521a921124046686ccf97c6996d5e32683"}], "roles/docker-install/tasks/main.yaml": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "83366d516bdf1514ad9877c876e077561fc725bb", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_e061be3b", "line": 76, "range": {"start_line": 72, "start_character": 0, "end_line": 76, "end_character": 14}, "updated": "2020-04-14 08:46:27.000000000", "message": "Why is this needed?", "commit_id": "29f1bebd7e5d63bf02ea6aedceca9ff9e75ed780"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "1d987a570723c85c61baf5a79a80a0e7c4c90a06", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_80354fdd", "line": 76, "range": {"start_line": 72, "start_character": 0, "end_line": 76, "end_character": 14}, "in_reply_to": "3f4c43b2_e061be3b", "updated": "2020-04-14 13:40:12.000000000", "message": "It was not needed, removed now.", "commit_id": "29f1bebd7e5d63bf02ea6aedceca9ff9e75ed780"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "83366d516bdf1514ad9877c876e077561fc725bb", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_e0effe84", "line": 82, "range": {"start_line": 78, "start_character": 0, "end_line": 82, "end_character": 14}, "updated": "2020-04-14 08:46:27.000000000", "message": "This will override existing configuration, but it should merge with existing configuration, because there are e.g. opendev container image caching proxies set up. Or at least they should be pre-set up there, if I'm not mistaken.", "commit_id": "29f1bebd7e5d63bf02ea6aedceca9ff9e75ed780"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "1d987a570723c85c61baf5a79a80a0e7c4c90a06", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_40406736", "line": 82, "range": {"start_line": 78, "start_character": 0, "end_line": 82, "end_character": 14}, "in_reply_to": "3f4c43b2_e0effe84", "updated": "2020-04-14 13:40:12.000000000", "message": "I thought this role is where we first install docker. And there is no existing configuration. I saw that we do not use the install-docker role from zuul-jobs, but our own docker-install role which does not add any proxies as you mention.", "commit_id": "29f1bebd7e5d63bf02ea6aedceca9ff9e75ed780"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "240305e8adc622c1a93cbd44230ebfa9697cc59d", "unresolved": false, "patch_set": 7, "id": "3f4c43b2_646a8cb3", "line": 74, "range": {"start_line": 74, "start_character": 13, "end_line": 74, "end_character": 79}, "updated": "2020-04-17 21:12:44.000000000", "message": "i am not sure that u can lookup template in zuul.  and in our case this returns empty string, please check the result of the job and see invocation arguments. But you can use  ansible template module instead.", "commit_id": "0d503d7fd302fd5291909273b91f89578883e9d0"}], "roles/docker-install/templates/daemon.j2": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "240305e8adc622c1a93cbd44230ebfa9697cc59d", "unresolved": false, "patch_set": 7, "id": "3f4c43b2_99ac6135", "line": 2, "range": {"start_line": 1, "start_character": 0, "end_line": 2, "end_character": 40}, "updated": "2020-04-17 21:12:44.000000000", "message": "i think we need this to be a valid json to start:\n{\n  \"log-driver\": \"{{ docker_config_log_driver }}\",\n  \"log-opts\": \"{{ docker_config_log_opts }}\"\n}", "commit_id": "0d503d7fd302fd5291909273b91f89578883e9d0"}]}}, "x%2Fnetworking-ansible~master~I832f366a95399312bdd36be304603459db1148ba": {"owner_id": 6994, "owner_name": "Michael Chapman", "owner_email": "woppin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 15:57:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5792, "name": "Dan Radez", "email": "dradez@redhat.com", "username": "dradez"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I940b1d3eceb98e16fa366c243672f588b1412d70": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 15:30:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-20 15:35:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-20 15:33:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "starlingx%2Futilities~master~I5c7639fb77e7a2a3edd3c99a8b29b0761cd444c4": {"owner_id": 31646, "owner_name": "Carmen Rata", "owner_email": "carmen.rata@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, {"value": 2, "date": "2020-04-20 15:40:55.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-04-20 15:03:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"utilities/platform-util/platform-util/platform_util/license/license.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "5b1faaa70b370220ff7cae2789d83a4fc52adf69", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73d89b7e", "line": 28, "updated": "2020-04-17 13:19:17.000000000", "message": "since the the license_file is a minimum mandatory argument why not position it as such?\n\ne.g. verify_license(license_file, *args...)", "commit_id": "d939199a385b0367bb667e27ca552ee3632c9eba"}, {"author": {"_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, "change_message_id": "f66c38f430db1e19ab7a02e8520d7f9e954607c5", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ee65e446", "line": 28, "in_reply_to": "3f4c43b2_73d89b7e", "updated": "2020-04-17 14:22:40.000000000", "message": "This code gets executed when \"verify-license\" utility is called from the command line, so the arguments will be passed as: [0] is <utility_name> (in this case \"verify-license\", [1] <license_file>, etc. What I have done is to drop argv[0] which is the utility name when calling \"verifu_license\" function. I did that to be in sync with the function arguments when called from sysinv/common/health.py.", "commit_id": "d939199a385b0367bb667e27ca552ee3632c9eba"}, {"author": {"_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, "change_message_id": "c8e32797ea373cc0cd8590f9ee6c33d4f21aa464", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c7e4263f", "line": 28, "in_reply_to": "3f4c43b2_a4181b75", "updated": "2020-04-20 14:33:15.000000000", "message": "/usr/bin/verify-license binary is called from either command line or sysinv/common/health.py the same way, a variable list of arguments and the condition to have at least one (the license file) is checked before any processing is done. To mandate that the \"verify_license\" function, inside the binary have a signature: verify_license(license_file, *args) does not make license_file mandatory. That is accomplished by our checks for its presence as a param and existence in the file system. We would need extra filtering of the binary input params and separate license file, extract the script name and pass the rest of the arguments if any. Given the fact that verify_license is an internal function in the verify-license binary does not have any reinforcement of how the params are passed from outside. We have the checks for license_file to be present. Just my 2c.", "commit_id": "d939199a385b0367bb667e27ca552ee3632c9eba"}, {"author": {"_account_id": 31646, "name": "Carmen Rata", "email": "carmen.rata@windriver.com", "username": "crata"}, "change_message_id": "21f32fa023b668cea7413d07f74968786bc74474", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2d586f30", "line": 28, "in_reply_to": "3f4c43b2_a4181b75", "updated": "2020-04-17 16:14:40.000000000", "message": "I would like to add the following comment here and keep the current impl succinct:\"The arguments passed to verify_license from command line will not include sys.argv[0] which is the script name. Only the actual arguments: sys.argv[1] and onward will be passed., meaning license_file followed by optional attributes\"", "commit_id": "d939199a385b0367bb667e27ca552ee3632c9eba"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "57f90ea19cdd15c73393177d7ba21af6852b8326", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a4181b75", "line": 28, "in_reply_to": "3f4c43b2_ee65e446", "updated": "2020-04-17 14:56:05.000000000", "message": "The arguments being passed in this way isnt intuitive.  I'd recommend to review passing the arguments and adding a comment.", "commit_id": "d939199a385b0367bb667e27ca552ee3632c9eba"}]}}, "openstack%2Fironic~master~Ifb66524c762ebe30e5c61b0c77ced65a817bbf19": {"owner_id": 19604, "owner_name": "ankit", "owner_email": "ankit.dhn31@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, {"value": 2, "date": "2020-04-13 08:58:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 23:57:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ff9cf7de3377630855eae2ec4bb9c92656d149bb", "unresolved": false, "patch_set": 1, "id": "7faddb67_357fba67", "line": 14, "updated": "2019-08-22 13:19:58.000000000", "message": "Is there a story/task for this?\n\nSeems more like parity and refactoring some minor improvements, to be honest.", "commit_id": "fe30b38f35aa8fb1e0dbcf84e7e99f05ca5d5fe2"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_b06e0a2a", "line": 13, "updated": "2019-08-28 15:29:51.000000000", "message": "For a specific hardware type? all hardware types?", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_264e446e", "line": 13, "in_reply_to": "7faddb67_b06e0a2a", "updated": "2019-08-29 07:56:24.000000000", "message": "For hardware type ilo. I have now mentioned it in commit message.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_7062d23f", "line": 14, "updated": "2019-08-28 15:29:51.000000000", "message": "Is there a story/task for this?", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_802280b9", "line": 14, "in_reply_to": "7faddb67_7062d23f", "updated": "2019-08-29 07:56:24.000000000", "message": "I have created the story for this but forgot to add in Patch set 2. I have raised Patch set 3 with that.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "8c94c51b27d7d1ac9e3ab680f7743d427970c8c0", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_e1711ae1", "line": 7, "updated": "2019-12-19 15:50:05.000000000", "message": "The title and commit message seem not to match the actual changes. The change seems to be to generalize the ISO building for virtual media driver re-use. Which I think is a great enhancement, but we're going to need to provide that clarity in commit messages and release notes.", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "4a8fe2748c7ce1f7ae619cc646ca119c4cd4f748", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f372f3e3", "line": 7, "in_reply_to": "3fa7e38b_e1711ae1", "updated": "2020-01-06 12:19:22.000000000", "message": "Done", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "8c94c51b27d7d1ac9e3ab680f7743d427970c8c0", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_016d5600", "line": 13, "range": {"start_line": 12, "start_character": 29, "end_line": 13, "end_character": 16}, "updated": "2019-12-19 15:50:05.000000000", "message": "This needs to be clarified as well. What will, what drivers will. etc.", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "4a8fe2748c7ce1f7ae619cc646ca119c4cd4f748", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1370efd9", "line": 13, "range": {"start_line": 12, "start_character": 29, "end_line": 13, "end_character": 16}, "in_reply_to": "3fa7e38b_016d5600", "updated": "2020-01-06 12:19:22.000000000", "message": "Done", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}], "ironic/drivers/modules/deploy_utils.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ef35a885a6e57e7786323ccf56147a435c040970", "unresolved": false, "patch_set": 13, "id": "df33271e_97262516", "line": 853, "range": {"start_line": 853, "start_character": 0, "end_line": 853, "end_character": 31}, "updated": "2020-04-06 22:26:54.000000000", "message": "I'm semi -1 on this because:\n\n1) the ironic-conductor should already be operating at a umask that is acceptable for the files to be accessible as configured by the environment.\n2) There is no reason to actually provide everyone access to the files if the server is configured for a common group. It is not an \"uncommon\" configuration to do this, but regardless explicitly setting a mask to a hardcoded value seems wrong to me.\n\nNote: Since this method is being moved, I guess I can live with it.", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "59fa57df3c2d064c0055b548f18f6910773ce45f", "unresolved": false, "patch_set": 13, "id": "df33271e_5e3648e9", "line": 853, "range": {"start_line": 853, "start_character": 0, "end_line": 853, "end_character": 31}, "in_reply_to": "df33271e_7e39913d", "updated": "2020-04-09 05:03:52.000000000", "message": "Done", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "59fa57df3c2d064c0055b548f18f6910773ce45f", "unresolved": false, "patch_set": 13, "id": "df33271e_5adbd4eb", "line": 853, "range": {"start_line": 853, "start_character": 0, "end_line": 853, "end_character": 31}, "in_reply_to": "df33271e_97262516", "updated": "2020-04-09 05:03:52.000000000", "message": "Done", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "9cedacc23151b26d37891b1a2e5f6741f9f228f7", "unresolved": false, "patch_set": 13, "id": "df33271e_7e39913d", "line": 853, "range": {"start_line": 853, "start_character": 0, "end_line": 853, "end_character": 31}, "in_reply_to": "df33271e_97262516", "updated": "2020-04-08 06:42:44.000000000", "message": "I think we can do away with this.", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}], "ironic/drivers/modules/ilo/boot.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ff9cf7de3377630855eae2ec4bb9c92656d149bb", "unresolved": false, "patch_set": 1, "id": "7faddb67_95b46e38", "line": 146, "updated": "2019-08-22 13:19:58.000000000", "message": "Is there any reason that we can't make this common code across the redfish and ilo drivers?", "commit_id": "fe30b38f35aa8fb1e0dbcf84e7e99f05ca5d5fe2"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "69e4e99dde1997f8ec488a9856452641ea7b82c2", "unresolved": false, "patch_set": 1, "id": "7faddb67_abbb0673", "line": 146, "in_reply_to": "7faddb67_7b1e59bc", "updated": "2019-08-27 12:16:55.000000000", "message": "Done", "commit_id": "fe30b38f35aa8fb1e0dbcf84e7e99f05ca5d5fe2"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "f5ebe83e0c2531088f03257405c01ad2548bb94e", "unresolved": false, "patch_set": 1, "id": "7faddb67_7b1e59bc", "line": 146, "in_reply_to": "7faddb67_95b46e38", "updated": "2019-08-26 06:40:16.000000000", "message": "+1", "commit_id": "fe30b38f35aa8fb1e0dbcf84e7e99f05ca5d5fe2"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "69e4e99dde1997f8ec488a9856452641ea7b82c2", "unresolved": false, "patch_set": 1, "id": "7faddb67_0b8b3ac0", "line": 146, "in_reply_to": "7faddb67_95b46e38", "updated": "2019-08-27 12:16:55.000000000", "message": "Done", "commit_id": "fe30b38f35aa8fb1e0dbcf84e7e99f05ca5d5fe2"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_30145a4d", "line": 54, "range": {"start_line": 54, "start_character": 7, "end_line": 54, "end_character": 16}, "updated": "2019-08-28 15:29:51.000000000", "message": "Why rename? These are functionally public constants on the driver interface module, so renaming is less than ideal, and really we should map names around to maintain continuity.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_e346de7b", "line": 54, "range": {"start_line": 54, "start_character": 7, "end_line": 54, "end_character": 16}, "in_reply_to": "7faddb67_30145a4d", "updated": "2019-08-29 07:56:24.000000000", "message": "I didn't use REQUIRED_PROPERTIES because now user can either pass ilo_deploy_iso or (deploy_kernel and deploy_ramdisk). So there is no mandatory parameter.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_cb3d17bd", "line": 69, "updated": "2019-08-28 15:29:51.000000000", "message": "makes sense to split apart I guess.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_0b548ffd", "line": 75, "range": {"start_line": 75, "start_character": 7, "end_line": 75, "end_character": 16}, "updated": "2019-08-28 15:29:51.000000000", "message": "Also, these aren't really partitions, these are ramdisk parameters.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_83860aba", "line": 75, "range": {"start_line": 75, "start_character": 7, "end_line": 75, "end_character": 16}, "in_reply_to": "7faddb67_0b548ffd", "updated": "2019-08-29 07:56:24.000000000", "message": "Done", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aeefd8af", "line": 124, "range": {"start_line": 121, "start_character": 4, "end_line": 124, "end_character": 61}, "updated": "2019-11-06 03:04:58.000000000", "message": "These checks can move to top at L108. If no iso is provided we can use kernel/ramdisk to create iso.", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_d2ecfcf5", "line": 124, "range": {"start_line": 121, "start_character": 4, "end_line": 124, "end_character": 61}, "in_reply_to": "3fa7e38b_aeefd8af", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_2e31a85a", "line": 127, "range": {"start_line": 127, "start_character": 57, "end_line": 127, "end_character": 59}, "updated": "2019-11-06 03:04:58.000000000", "message": "Also it can indicate that DEPLOY_RAMDISK_PROPERTIES or RESCUE_RAMDISK_PROPERTIES are missing.", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_d2c5dc5d", "line": 127, "range": {"start_line": 127, "start_character": 57, "end_line": 127, "end_character": 59}, "in_reply_to": "3fa7e38b_2e31a85a", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}], "ironic/drivers/modules/ilo/common.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ef35a885a6e57e7786323ccf56147a435c040970", "unresolved": false, "patch_set": 13, "id": "df33271e_57d01dca", "line": 118, "updated": "2020-04-06 22:26:54.000000000", "message": "Please map the copy_image_file_to_webserver to the new location and add a note for removal later.", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "9cedacc23151b26d37891b1a2e5f6741f9f228f7", "unresolved": false, "patch_set": 13, "id": "df33271e_5e35ad45", "line": 118, "in_reply_to": "df33271e_57d01dca", "updated": "2020-04-08 06:42:44.000000000", "message": "+1", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "59fa57df3c2d064c0055b548f18f6910773ce45f", "unresolved": false, "patch_set": 13, "id": "df33271e_5ad114fb", "line": 118, "in_reply_to": "df33271e_57d01dca", "updated": "2020-04-09 05:03:52.000000000", "message": "Done", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "59fa57df3c2d064c0055b548f18f6910773ce45f", "unresolved": false, "patch_set": 13, "id": "df33271e_3aced059", "line": 118, "in_reply_to": "df33271e_5e35ad45", "updated": "2020-04-09 05:03:52.000000000", "message": "Done", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "a185fd33d63e7f425da1faded4d1d5388fef6fb2", "unresolved": false, "patch_set": 16, "id": "3f4c43b2_177d23b1", "line": 138, "range": {"start_line": 136, "start_character": 8, "end_line": 138, "end_character": 70}, "updated": "2020-04-13 08:58:47.000000000", "message": "Should we capture this in release notes as well?", "commit_id": "c4d9984c51b15680ab4bfe38764942278ece5e1f"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "68a0b03c6e27172ee8d471770dcad9172d2dff26", "unresolved": false, "patch_set": 16, "id": "3f4c43b2_4818acd2", "line": 138, "range": {"start_line": 136, "start_character": 8, "end_line": 138, "end_character": 70}, "in_reply_to": "3f4c43b2_177d23b1", "updated": "2020-04-16 23:57:41.000000000", "message": "Perhaps, but I suspect we can live without a reno since the renos are really intended for the operator.", "commit_id": "c4d9984c51b15680ab4bfe38764942278ece5e1f"}], "ironic/drivers/modules/redfish/boot.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "53f94e634d4de65e7509b2e31052393c2ee4d689", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_96a72652", "line": 603, "updated": "2020-01-20 14:24:19.000000000", "message": "So something seems to start going sideways here. The CI job that covers this code path fails.\n\n    [None req-6ebed2b8-58b7-4b51-870b-aed09e6c1b3c None None] Asynchronous exception: Node failed to deploy. Exception: Failed to prepare instance for booting for node 1e7e74ec-82c6-4f84-885c-ff481d114998: ironic.common.exception.InstanceDeployFailure: Failed to prepare instance for booting\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor Traceback (most recent call last):\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/agent_base_vendor.py\", line 780, in prepare_instance_to_boot\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     task.driver.boot.prepare_instance(task)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/redfish/boot.py\", line 694, in prepare_instance\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     iso_ref = self._prepare_boot_iso(task, **params)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/redfish/boot.py\", line 456, in _prepare_boot_iso\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     root_uuid=root_uuid)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/virtual_media_base.py\", line 91, in prepare_iso_image\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     boot_mode=boot_mode)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/common/images.py\", line 497, in create_boot_iso\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     kernel_params=params)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/common/images.py\", line 266, in create_isolinux_image_for_uefi\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     _mount_deploy_iso(deploy_iso, mountdir))\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/common/images.py\", line 579, in _mount_deploy_iso\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     raise exception.ImageCreationFailed(image_type='iso', error=error)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor ironic.common.exception.ImageCreationFailed: Creating iso image failed: Deploy iso didn't contain efiboot.img or grub.cfg\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor \nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor During handling of the above exception, another exception occurred:\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor \nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor Traceback (most recent call last):\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/agent_base_vendor.py\", line 389, in heartbeat\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     self.continue_deploy(task)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/usr/local/lib/python3.6/dist-packages/ironic_lib/metrics.py\", line 59, in wrapped\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     result = f(*args, **kwargs)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/conductor/task_manager.py\", line 148, in wrapper\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     return f(*args, **kwargs)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/iscsi_deploy.py\", line 361, in continue_deploy\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     prep_boot_part_uuid=prep_boot_part_uuid)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/usr/local/lib/python3.6/dist-packages/ironic_lib/metrics.py\", line 59, in wrapped\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     result = f(*args, **kwargs)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/agent_base_vendor.py\", line 787, in prepare_instance_to_boot\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     log_and_raise_deployment_error(task, msg, exc=e)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/usr/local/lib/python3.6/dist-packages/ironic_lib/metrics.py\", line 59, in wrapped\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     result = f(*args, **kwargs)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor   File \"/opt/stack/ironic/ironic/drivers/modules/agent_base_vendor.py\", line 227, in log_and_raise_deployment_error\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor     raise exception.InstanceDeployFailure(msg)\nJan 18 18:41:38.745612 ubuntu-bionic-vexxhost-sjc1-0013961800 ironic-conductor[11172]: ERROR ironic.drivers.modules.agent_base_vendor ironic.common.exception.InstanceDeployFailure: Failed to prepare instance for booting", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "53f94e634d4de65e7509b2e31052393c2ee4d689", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_f62bfa97", "line": 603, "range": {"start_line": 603, "start_character": 62, "end_line": 603, "end_character": 69}, "updated": "2020-01-20 14:24:19.000000000", "message": "Why pass d_info? It seems to be read by the method just to determine if config_via_floppy (which I'd kind of like to see removed anyway) is set. The prepare_iso_deploy method could just as easily call since the task is passed to it.", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ef35a885a6e57e7786323ccf56147a435c040970", "unresolved": false, "patch_set": 13, "id": "df33271e_f7c171e6", "side": "PARENT", "line": 482, "updated": "2020-04-06 22:26:54.000000000", "message": "Do we even still need _publish_image?", "commit_id": "9cfdd6a0d9a711e376a506902a80e1326a325c9e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ef35a885a6e57e7786323ccf56147a435c040970", "unresolved": false, "patch_set": 13, "id": "df33271e_37bc7968", "line": 249, "updated": "2020-04-06 22:26:54.000000000", "message": "I see we still use this for the \"floppy\" functionality :(", "commit_id": "e7ac1dceb69c29b9400e6e251d1f7671bdf78e76"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8052b7fcbc2dc0221cc648a1929029d111673714", "unresolved": false, "patch_set": 15, "id": "df33271e_7c583930", "line": 23, "updated": "2020-04-10 10:35:04.000000000", "message": "pep8: F401 'oslo_serialization.base64' imported but unused", "commit_id": "50b0d626037588b9dbf00ac1f31e4c7b28d09b7c"}], "ironic/drivers/modules/virtual_media_base.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_4c04cf7e", "line": 1, "range": {"start_line": 1, "start_character": 12, "end_line": 1, "end_character": 16}, "updated": "2019-08-28 15:29:51.000000000", "message": "2019 or just strip the line completely. The corporate agreements with the foundation includes a rights assignment, so the copyright line is... semi-pointless I think.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_239636f1", "line": 1, "range": {"start_line": 1, "start_character": 12, "end_line": 1, "end_character": 16}, "in_reply_to": "7faddb67_4c04cf7e", "updated": "2019-08-29 07:56:24.000000000", "message": "Done", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_4e0f4488", "line": 73, "range": {"start_line": 70, "start_character": 4, "end_line": 73, "end_character": 50}, "updated": "2019-11-06 03:04:58.000000000", "message": "May this should be handled as additional argument to this method instead of adding driver checks.", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "865af03aef51b421f27f3a80aa82659d07697f2a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_ce817e4f", "line": 73, "range": {"start_line": 70, "start_character": 4, "end_line": 73, "end_character": 50}, "in_reply_to": "3fa7e38b_4e0f4488", "updated": "2019-11-15 13:16:54.000000000", "message": "+1\nAlternatively, may be the caller can pass proper CONF params via existing  `params` argument?", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_80594efe", "line": 73, "range": {"start_line": 70, "start_character": 4, "end_line": 73, "end_character": 50}, "in_reply_to": "3fa7e38b_4e0f4488", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_20709a73", "line": 73, "range": {"start_line": 70, "start_character": 4, "end_line": 73, "end_character": 50}, "in_reply_to": "3fa7e38b_ce817e4f", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_0e4f0cbf", "line": 105, "range": {"start_line": 105, "start_character": 8, "end_line": 105, "end_character": 46}, "updated": "2019-11-06 03:04:58.000000000", "message": "Driver specific checks should not be added here. Better to handle this as part of method arguments method.", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "865af03aef51b421f27f3a80aa82659d07697f2a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aecc42bb", "line": 105, "range": {"start_line": 105, "start_character": 8, "end_line": 105, "end_character": 46}, "in_reply_to": "3fa7e38b_0e4f0cbf", "updated": "2019-11-15 13:16:54.000000000", "message": "++++\nOtherwise we grow a spaghetti monster out of this code!", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_75b172e0", "line": 105, "range": {"start_line": 105, "start_character": 8, "end_line": 105, "end_character": 46}, "in_reply_to": "3fa7e38b_0e4f0cbf", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_15c83e54", "line": 105, "range": {"start_line": 105, "start_character": 8, "end_line": 105, "end_character": 46}, "in_reply_to": "3fa7e38b_aecc42bb", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_6ec32008", "line": 117, "range": {"start_line": 117, "start_character": 12, "end_line": 117, "end_character": 52}, "updated": "2019-11-06 03:04:58.000000000", "message": "ditto", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_95750e03", "line": 117, "range": {"start_line": 117, "start_character": 12, "end_line": 117, "end_character": 52}, "in_reply_to": "3fa7e38b_6ec32008", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8ec8dc21", "line": 122, "range": {"start_line": 121, "start_character": 12, "end_line": 122, "end_character": 66}, "updated": "2019-11-06 03:04:58.000000000", "message": "ditto", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_32c8f04b", "line": 122, "range": {"start_line": 121, "start_character": 12, "end_line": 122, "end_character": 66}, "in_reply_to": "3fa7e38b_8ec8dc21", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "5903f7ae0409f4da13d0652e4435993f03a631e2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aef9184f", "line": 137, "range": {"start_line": 132, "start_character": 12, "end_line": 137, "end_character": 51}, "updated": "2019-11-06 03:04:58.000000000", "message": "Can this return the tempurl. I think iLO drivers also need HTTP URL to attach to vmedia.", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_12913454", "line": 137, "range": {"start_line": 132, "start_character": 12, "end_line": 137, "end_character": 51}, "in_reply_to": "3fa7e38b_aef9184f", "updated": "2019-12-03 08:09:37.000000000", "message": "It is being handled by prepare_ramdisk.\nhttps://opendev.org/openstack/ironic/src/branch/master/ironic/drivers/modules/ilo/boot.py#L503", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "53f94e634d4de65e7509b2e31052393c2ee4d689", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_56fd2e07", "line": 41, "range": {"start_line": 40, "start_character": 37, "end_line": 41, "end_character": 62}, "updated": "2020-01-20 14:24:19.000000000", "message": "Please either use generic driver-independent configuration parameters, OR create a method that checks the various places this is set to return the default.", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "9d6216bf96fffd039d33d5c0065426965a85ad8a", "unresolved": false, "patch_set": 9, "id": "df33271e_3af7f0d5", "line": 41, "range": {"start_line": 40, "start_character": 37, "end_line": 41, "end_character": 62}, "in_reply_to": "3fa7e38b_56fd2e07", "updated": "2020-03-31 06:35:48.000000000", "message": "Done", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "53f94e634d4de65e7509b2e31052393c2ee4d689", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_91089025", "line": 98, "range": {"start_line": 97, "start_character": 16, "end_line": 98, "end_character": 67}, "updated": "2020-01-20 14:24:19.000000000", "message": "I'm 95% sure we have common code in ironic that can cover this task. I'd prefer to avoid having to invoke ilo_common in a driver independent piece of code.", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "9d6216bf96fffd039d33d5c0065426965a85ad8a", "unresolved": false, "patch_set": 9, "id": "df33271e_704fd933", "line": 98, "range": {"start_line": 97, "start_character": 16, "end_line": 98, "end_character": 67}, "in_reply_to": "3fa7e38b_91089025", "updated": "2020-03-31 06:35:48.000000000", "message": "Done", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "53f94e634d4de65e7509b2e31052393c2ee4d689", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_d6111e5e", "line": 140, "updated": "2020-01-20 14:24:19.000000000", "message": "We're missing driver_info being documented here. Makes sense to see it here, but it should be documented as a parameter.", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "9d6216bf96fffd039d33d5c0065426965a85ad8a", "unresolved": false, "patch_set": 9, "id": "df33271e_d69846c1", "line": 140, "in_reply_to": "3fa7e38b_d6111e5e", "updated": "2020-03-31 06:35:48.000000000", "message": "Done", "commit_id": "701e778d3c7a5a3a9fe78262fa8bca027eaf32db"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "17b297997ed212c2140ec2315976cd3d1b4dcf19", "unresolved": false, "patch_set": 12, "id": "df33271e_7a7786a1", "line": 63, "updated": "2020-03-31 22:06:05.000000000", "message": "E117 over-indented", "commit_id": "f65ffe1ccd1cb62fda9b5414c5f12eb68badf4c3"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "32ff6cfc1b98d2eda17523322421ffaf02010336", "unresolved": false, "patch_set": 12, "id": "df33271e_49d8fa79", "line": 63, "in_reply_to": "df33271e_7a7786a1", "updated": "2020-04-01 09:54:27.000000000", "message": "Done", "commit_id": "f65ffe1ccd1cb62fda9b5414c5f12eb68badf4c3"}], "releasenotes/notes/add-iso-less-vmedia-ilo-e93002e335cb21e1.yaml": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "c0b60f3a1972d10ebb0a049fa0362bcb8997dfab", "unresolved": false, "patch_set": 2, "id": "7faddb67_305c5a7c", "line": 4, "updated": "2019-08-28 15:29:51.000000000", "message": "nit: whitespace at end of line.", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "96a2bb1bb4b2ef791b2e94674e6412e0e4407b30", "unresolved": false, "patch_set": 2, "id": "7faddb67_c03878ef", "line": 4, "in_reply_to": "7faddb67_305c5a7c", "updated": "2019-08-29 07:56:24.000000000", "message": "Done", "commit_id": "f202c3e2a5037b64dcb2d3daa757aedb3e3f7c1b"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "865af03aef51b421f27f3a80aa82659d07697f2a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_0e6b1685", "line": 3, "range": {"start_line": 3, "start_character": 52, "end_line": 3, "end_character": 59}, "updated": "2019-11-15 13:16:54.000000000", "message": "Should we mention that the old way of image passing is still available?", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "b46ff22a31ebac084ae505e3af1b672500579d59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8d1df7bf", "line": 3, "range": {"start_line": 3, "start_character": 52, "end_line": 3, "end_character": 59}, "in_reply_to": "3fa7e38b_0e6b1685", "updated": "2019-12-03 08:09:37.000000000", "message": "Done", "commit_id": "7359a150cc9bc50d0acec031618318f3399d0091"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "8c94c51b27d7d1ac9e3ab680f7743d427970c8c0", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_21417264", "line": 4, "range": {"start_line": 3, "start_character": 4, "end_line": 4, "end_character": 45}, "updated": "2019-12-19 15:50:05.000000000", "message": "The reality of this is that this is a feature for the ilo driver it seems. That should be stated as the redfish driver already has this capability.", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}, {"author": {"_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, "change_message_id": "4a8fe2748c7ce1f7ae619cc646ca119c4cd4f748", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_8e06f8cc", "line": 4, "range": {"start_line": 3, "start_character": 4, "end_line": 4, "end_character": 45}, "in_reply_to": "3fa7e38b_21417264", "updated": "2020-01-06 12:19:22.000000000", "message": "Done", "commit_id": "60084ff2d682c3a10ed363fe1c8bdb3091b0bfc2"}]}}, "openstack%2Ftripleo-heat-templates~master~I0fe2bf37f71fa4009aa597deae41f74bce8ab214": {"owner_id": 26343, "owner_name": "Jose Luis Franco", "owner_email": "jfrancoa@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-upgrade~stable%2Fstein~Ide1049b8652cf63673964df65e04137b7b28dd64": {"owner_id": 26343, "owner_name": "Jose Luis Franco", "owner_email": "jfrancoa@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-upgrade~master~Ide1049b8652cf63673964df65e04137b7b28dd64": {"owner_id": 26343, "owner_name": "Jose Luis Franco", "owner_email": "jfrancoa@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnetworking-generic-switch~master~I07b8931daabfedd0e570249a3744b591f665531a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 10:08:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {"networking_generic_switch/tests/unit/netmiko/test_juniper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7a7a8170c269450dc9dd5471c9d9314c38e129f2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9b9e0eb6", "line": 17, "updated": "2020-04-18 19:01:43.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import tenacity", "commit_id": "e4b76c327aeba6c00ba4a4f05772c1e44cf5b4c1"}], "networking_generic_switch/tests/unit/test_devices.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7a7a8170c269450dc9dd5471c9d9314c38e129f2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fba59205", "line": 17, "updated": "2020-04-18 19:01:43.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "e4b76c327aeba6c00ba4a4f05772c1e44cf5b4c1"}], "networking_generic_switch/tests/unit/test_generic_switch_mech.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7a7a8170c269450dc9dd5471c9d9314c38e129f2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bb9b0ac7", "line": 17, "updated": "2020-04-18 19:01:43.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "e4b76c327aeba6c00ba4a4f05772c1e44cf5b4c1"}]}}, "openstack%2Foctavia-dashboard~stable%2Fstein~I83687ed1476a9e413ca6a8a880dd31783450df67": {"owner_id": 31870, "owner_name": "Tamerlan Abu", "owner_email": "tamerlanabu@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 16:30:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 11:08:54.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Foctavia-dashboard~stable%2Ftrain~I83687ed1476a9e413ca6a8a880dd31783450df67": {"owner_id": 31870, "owner_name": "Tamerlan Abu", "owner_email": "tamerlanabu@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 16:30:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 11:08:35.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Ftripleo-docs~master~Iad363ade1b3367a7f2fd0a9609c07a0434c1d83e": {"owner_id": 25402, "owner_name": "Francesco Pantano", "owner_email": "fpantano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 16:26:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-04-20 16:04:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"deploy-guide/source/features/ceph_config.rst": [{"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_dbb566f0", "line": 541, "range": {"start_line": 541, "start_character": 1, "end_line": 541, "end_character": 19}, "updated": "2020-04-07 14:53:56.000000000", "message": "\"Since Luminous, Ceph\"\n\nPlease add a comma", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_a9f92181", "line": 541, "range": {"start_line": 541, "start_character": 1, "end_line": 541, "end_character": 19}, "in_reply_to": "df33271e_dbb566f0", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_36a2a99b", "line": 543, "range": {"start_line": 543, "start_character": 55, "end_line": 543, "end_character": 59}, "updated": "2020-04-07 14:53:56.000000000", "message": "OSDs", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_89f41d89", "line": 543, "range": {"start_line": 543, "start_character": 55, "end_line": 543, "end_character": 59}, "in_reply_to": "df33271e_36a2a99b", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_7ba37ab2", "line": 545, "range": {"start_line": 545, "start_character": 37, "end_line": 545, "end_character": 40}, "updated": "2020-04-07 14:53:56.000000000", "message": "OSD\n\ncaptialize", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_962d75ff", "line": 545, "range": {"start_line": 545, "start_character": 37, "end_line": 545, "end_character": 46}, "updated": "2020-04-07 14:53:56.000000000", "message": "What does \"OSD nodes\" refer to here? CephStorage nodes or something else?", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_e9f3299d", "line": 545, "range": {"start_line": 545, "start_character": 37, "end_line": 545, "end_character": 40}, "in_reply_to": "df33271e_7ba37ab2", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_c91c65c3", "line": 545, "range": {"start_line": 545, "start_character": 37, "end_line": 545, "end_character": 46}, "in_reply_to": "df33271e_962d75ff", "updated": "2020-04-08 07:54:51.000000000", "message": "Sorry, I used the \"nodes\" term referring to the \"tree data structure\" (in the crushmap context), but I see your point and I changed this term into \"layers\", which is appropriate in the crushmap context as well", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_5b9e7663", "line": 546, "range": {"start_line": 546, "start_character": 6, "end_line": 546, "end_character": 28}, "updated": "2020-04-07 14:53:56.000000000", "message": "can be used to avoid?", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_297991fb", "line": 546, "range": {"start_line": 546, "start_character": 6, "end_line": 546, "end_character": 28}, "in_reply_to": "df33271e_5b9e7663", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_d637fd4c", "line": 547, "range": {"start_line": 546, "start_character": 38, "end_line": 547, "end_character": 12}, "updated": "2020-04-07 14:53:56.000000000", "message": "Is \"nodes\" the correct term here? In the context of the tripleo doc \"nodes\" usually means the server being managed.", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_498695dd", "line": 547, "range": {"start_line": 546, "start_character": 38, "end_line": 547, "end_character": 12}, "in_reply_to": "df33271e_d637fd4c", "updated": "2020-04-08 07:54:51.000000000", "message": "same as before", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1a963cef0a67b043566d441f6fe4b7fd58488aba", "unresolved": false, "patch_set": 1, "id": "df33271e_b8486887", "line": 578, "updated": "2020-04-07 13:47:34.000000000", "message": "deploy-guide:  WARNING: Content block expected for the \"note\" directive; none found.", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1a963cef0a67b043566d441f6fe4b7fd58488aba", "unresolved": false, "patch_set": 1, "id": "df33271e_185fd441", "line": 579, "updated": "2020-04-07 13:47:34.000000000", "message": "deploy-guide:  WARNING: Explicit markup ends without a blank line; unexpected unindent.", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_d6109dab", "line": 581, "range": {"start_line": 548, "start_character": 0, "end_line": 581, "end_character": 46}, "updated": "2020-04-07 14:53:56.000000000", "message": "Excellent!", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_31ae33e7", "line": 583, "range": {"start_line": 583, "start_character": 0, "end_line": 583, "end_character": 41}, "updated": "2020-04-07 14:53:56.000000000", "message": "This section seems to cover the only way to customize crush maps from before the recent ceph-ansible change which let us use device classes (the easier way you documented above up to line 581). It's good that you're documenting both, and I'm glad you state in the previous paragraph that this way is not necessary if the device classes are sufficient. \n\nMaybe it would help to split them further. Line 538 starts a section which is good as is, but here on line 582 do you want to make this section have it's own header. E.g. \"Customizing crushmap using node specific overrides\". Also, you could open that section stating that if using device classes alone is not sufficient that you can have additional control as described in the new section.", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_c971050f", "line": 583, "range": {"start_line": 583, "start_character": 0, "end_line": 583, "end_character": 41}, "in_reply_to": "df33271e_31ae33e7", "updated": "2020-04-08 07:54:51.000000000", "message": "++ I'll move this section after the device classes description.\nThe user can follow this section to configure device classes, and, if it's not sufficient, we can have an additional section for node spec overrides", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_1be6ae17", "line": 585, "range": {"start_line": 585, "start_character": 35, "end_line": 585, "end_character": 56}, "updated": "2020-04-07 14:53:56.000000000", "message": "Please use the following here so that it's a link to the relevant doc: \n\n:doc:`node_specific_hieradata`\n\nFor example:\n\nhttps://opendev.org/openstack/tripleo-docs/commit/3d6ffded364cbc83ad28b02d740c00fbb1fe3428", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_2962313f", "line": 585, "range": {"start_line": 585, "start_character": 35, "end_line": 585, "end_character": 56}, "in_reply_to": "df33271e_1be6ae17", "updated": "2020-04-08 07:54:51.000000000", "message": "Thanks and done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "1c1f27a5c3dd2c4d694bb6c069090740c01b3091", "unresolved": false, "patch_set": 1, "id": "df33271e_3188f3c4", "line": 585, "range": {"start_line": 585, "start_character": 35, "end_line": 585, "end_character": 56}, "in_reply_to": "df33271e_1be6ae17", "updated": "2020-04-07 15:00:17.000000000", "message": "When you link, you might want to suggest that they start by using tools/make_ceph_disk_list.py to build a JSON file to get started and then modify it to add the osd_crush_location properties dictionary.", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_49d4d5bd", "line": 585, "range": {"start_line": 585, "start_character": 35, "end_line": 585, "end_character": 56}, "in_reply_to": "df33271e_3188f3c4", "updated": "2020-04-08 07:54:51.000000000", "message": "I'll do in the next PS, thanks, I think it's important mentioning the tool that can be used to:\n1. autogenerate nodeDataLookup\n2. reducing the space for a \"human error\"", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_1667a553", "line": 612, "range": {"start_line": 612, "start_character": 0, "end_line": 612, "end_character": 36}, "updated": "2020-04-07 14:53:56.000000000", "message": "As seen in the example above,", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_e9e4c9ae", "line": 612, "range": {"start_line": 612, "start_character": 0, "end_line": 612, "end_character": 36}, "in_reply_to": "df33271e_1667a553", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "9dfa6f30f9dd23720bc37209a469905dbdf475e2", "unresolved": false, "patch_set": 1, "id": "df33271e_b6c6b915", "line": 619, "range": {"start_line": 619, "start_character": 22, "end_line": 619, "end_character": 58}, "updated": "2020-04-07 14:53:56.000000000", "message": "\"in the customize placement group section\"", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "d5b9f6239fca106cc866b6334673900109cb8903", "unresolved": false, "patch_set": 1, "id": "df33271e_c9df45d4", "line": 619, "range": {"start_line": 619, "start_character": 22, "end_line": 619, "end_character": 58}, "in_reply_to": "df33271e_b6c6b915", "updated": "2020-04-08 07:54:51.000000000", "message": "Done", "commit_id": "8e2fc2d03dcb412b0f052e230674d53fc2e5cd02"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "b299807bc08fd54061a07227a437cef5e2bf8b4e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_c4aa646f", "line": 547, "range": {"start_line": 543, "start_character": 17, "end_line": 547, "end_character": 54}, "updated": "2020-04-20 14:12:42.000000000", "message": "Device classes are a new property for OSDs visible by running `ceph osd tree` and observing the class column, which should default correctly to each device's hardware capability (hdd, ssd or nvme). This feature is useful because Ceph CRUSH rules can restrict placement to a specific device class. For example, they make it easy to create a \"fast\" pool that distributes data only over SSDs. To do this, one simply needs to specify in the pool definition which device class should be used. This is simpler than directly having to edit the CRUSH map itself.", "commit_id": "3783886392cbc2ae02171fc63ce022fbaf469bcd"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "01f1305e278d544d09232efa5c367eac9dea10ac", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_a7baba06", "line": 547, "range": {"start_line": 543, "start_character": 17, "end_line": 547, "end_character": 54}, "in_reply_to": "3f4c43b2_2438683b", "updated": "2020-04-20 14:33:27.000000000", "message": "Done", "commit_id": "3783886392cbc2ae02171fc63ce022fbaf469bcd"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "0f0edac25acd22502785d9f983337c927ce75bc8", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_2438683b", "line": 547, "range": {"start_line": 543, "start_character": 17, "end_line": 547, "end_character": 54}, "in_reply_to": "3f4c43b2_c4aa646f", "updated": "2020-04-20 14:15:07.000000000", "message": "> This is simpler than directly having to edit the CRUSH map itself.\n\nor better yet....\n\n\nThis is simpler than directly editing the CRUSH map itself.", "commit_id": "3783886392cbc2ae02171fc63ce022fbaf469bcd"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "b299807bc08fd54061a07227a437cef5e2bf8b4e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_04ebac12", "line": 612, "range": {"start_line": 612, "start_character": 22, "end_line": 612, "end_character": 23}, "updated": "2020-04-20 14:12:42.000000000", "message": "Please remove this quote and the other quote after section.\n\nSorry for any confusion. I had quoted what I was suggesting but didn't mean to say the quote itself should be in the document.", "commit_id": "3783886392cbc2ae02171fc63ce022fbaf469bcd"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "01f1305e278d544d09232efa5c367eac9dea10ac", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_0739eea2", "line": 612, "range": {"start_line": 612, "start_character": 22, "end_line": 612, "end_character": 23}, "in_reply_to": "3f4c43b2_04ebac12", "updated": "2020-04-20 14:33:27.000000000", "message": "Done", "commit_id": "3783886392cbc2ae02171fc63ce022fbaf469bcd"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "d81f28045bbdb95691664e56beef9d5e1a6a009a", "unresolved": false, "patch_set": 7, "id": "1f493fa4_5bd523b9", "line": 566, "updated": "2020-04-20 16:26:51.000000000", "message": "I think the last two are not necessary anymore, I'd remove them if you need to update this further", "commit_id": "271673dfdf6f746dbbee540d114c47ec124e968d"}]}}, "airship%2Farmada~master~I3e68a54becadd5b2a2343960a120bdc3de8e8515": {"owner_id": 28719, "owner_name": "Phil Sphicas", "owner_email": "phil.sphicas@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-20 02:37:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8863, "name": "Andrii Ostapenko", "email": "anost1986@gmail.com", "username": "aostapenko"}, {"value": 2, "date": "2020-04-19 18:54:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 1, "date": "2020-04-20 15:27:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28664, "name": "Ahmad Mahmoudi", "email": "ahmad.mahmoudi@att.com", "username": "ahmad"}, {"value": 1, "date": "2020-04-20 13:43:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28778, "name": "Dan Crank", "email": "danielcrank@microsoft.com", "username": "dancrank"}, {"value": 2, "date": "2020-04-20 15:32:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-04-19 22:58:16.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 24816, "name": "Anthony Bellino", "email": "ab2434@att.com", "username": "anthony.bellino"}, {"value": 1, "date": "2020-04-20 14:29:48.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "airship%2Farmada~master~If5d09f649ca037855c88f928aee6b4dc35ca8b48": {"owner_id": 28719, "owner_name": "Phil Sphicas", "owner_email": "phil.sphicas@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-20 02:38:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8863, "name": "Andrii Ostapenko", "email": "anost1986@gmail.com", "username": "aostapenko"}, {"value": 1, "date": "2020-04-20 15:23:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28664, "name": "Ahmad Mahmoudi", "email": "ahmad.mahmoudi@att.com", "username": "ahmad"}, {"value": 2, "date": "2020-04-20 15:39:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-04-20 16:25:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}], "comments": {}}, "openstack%2Ffreezer-api~master~Ibc3b00aca7332f12b58893213acfc88749b74aa1": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 14509, "name": "Pierre Mathieu", "email": "pierre-arthur.mathieu@hpe.com", "username": "slashme"}, {"value": 0, "_account_id": 11151, "name": "Fausto Marzi", "email": "fausto.marzi@ericsson.com", "username": "fausto.marzi"}, {"value": 1, "date": "2020-04-15 09:35:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 14340, "name": "Memo Garcia", "email": "guillermo.ramirez-garcia@hp.com", "username": "memogarcia"}, {"value": 0, "_account_id": 22405, "name": "Vitaliy Nogin", "email": "shadoff1982@gmail.com", "username": "vnogin"}, {"value": 0, "_account_id": 16768, "name": "Ruslan Aliev", "email": "raliev@mirantis.com", "username": "raliev"}, {"value": 2, "date": "2020-04-20 15:37:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 0, "_account_id": 14101, "name": "yapeng Yang", "email": "a394954369@gmail.com", "username": "yapeng"}], "comments": {}}, "openstack%2Ffreezer-api~master~I7bb95a8ebd7023046baae30595159254bac25690": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 14509, "name": "Pierre Mathieu", "email": "pierre-arthur.mathieu@hpe.com", "username": "slashme"}, {"value": 0, "_account_id": 11151, "name": "Fausto Marzi", "email": "fausto.marzi@ericsson.com", "username": "fausto.marzi"}, {"value": 1, "date": "2020-04-15 17:26:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 14340, "name": "Memo Garcia", "email": "guillermo.ramirez-garcia@hp.com", "username": "memogarcia"}, {"value": 0, "_account_id": 22405, "name": "Vitaliy Nogin", "email": "shadoff1982@gmail.com", "username": "vnogin"}, {"value": 0, "_account_id": 16768, "name": "Ruslan Aliev", "email": "raliev@mirantis.com", "username": "raliev"}, {"value": 2, "date": "2020-04-20 15:37:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 0, "_account_id": 14101, "name": "yapeng Yang", "email": "a394954369@gmail.com", "username": "yapeng"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "02cb21b6840c0ce56295dc7bb6b5901baaac7b7c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_064b2284", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 43}, "updated": "2020-04-14 09:49:32.000000000", "message": "I think it should be bumped, not?", "commit_id": "f5332fd0d1246d833ce6b7fa61dddef142432e63"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "22bb3ade79d46fb1e89a783cb792c1c864f5ae7e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_94ff58a9", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 43}, "in_reply_to": "3f4c43b2_064b2284", "updated": "2020-04-14 10:38:01.000000000", "message": "yes - separate change. Too many changes.", "commit_id": "f5332fd0d1246d833ce6b7fa61dddef142432e63"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "09871e33550e85d23b2e4a3979f2933f2827cbee", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_4c76e0da", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 43}, "in_reply_to": "3f4c43b2_94ff58a9", "updated": "2020-04-14 17:02:41.000000000", "message": "Updated in\nhttps://review.opendev.org/720032", "commit_id": "f5332fd0d1246d833ce6b7fa61dddef142432e63"}]}}, "openstack%2Fkayobe~stable%2Ftrain~Ib477de5f3af2e4c182d0c2999c274dbb5553531c": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:01:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I44d15da4c8e1ec0d1f7284daed69dbf5caa40bf0": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 11:46:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29671, "name": "Albin Vass", "email": "albin.vass@gmail.com", "username": "albin_vass"}, {"value": 2, "date": "2020-04-20 15:57:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I5954751451b7c931e8a9d79c713a2798522d8b81": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 09:05:25.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21757, "name": "Xing Zhang", "email": "angeiv.zhang@gmail.com", "username": "angeiv"}, {"value": 2, "date": "2020-04-20 13:11:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-20 11:01:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 0, "_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}], "comments": {}}, "openstack%2Fkolla~master~I2d6165c4b7e934c3e6ad32b3de1060d07b792463": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-20 11:11:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-20 06:49:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "zuul%2Fzuul~master~Ic7f87ea571ed2d4bdf84ef146e19fc2671e7cdc0": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 14:57:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-04-20 15:04:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-docs~master~Id98f49fd314ae4521fb73c26fae5bfaeea1abc4d": {"owner_id": 25402, "owner_name": "Francesco Pantano", "owner_email": "fpantano@redhat.com", "labels": [{"value": 2, "date": "2020-04-20 10:13:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15205, "name": "Guillaume Abrioux", "email": "gabrioux@redhat.com"}, {"value": 2, "date": "2020-04-20 15:53:06.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {}}, "openstack%2Fpuppet-ironic~master~I1e5db37da6ac4f981226bb69942002af8ef465d6": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:00:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 14:43:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "opendev%2Fsystem-config~master~I6e3e0e96e38f24484e6038e502dfcc279e8e4fbf": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 13:44:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-20 13:37:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 1, "date": "2020-04-20 12:50:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "starlingx%2Fupstream~master~I56c1aa36ca55360c23f81d4e2b8d15a325617f50": {"owner_id": 28486, "owner_name": "Tee Ngo", "owner_email": "tee.ngo@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 2, "date": "2020-04-20 14:55:34.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-04-20 14:28:25.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-04-20 14:19:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 1, "date": "2020-04-20 13:37:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, {"value": 1, "date": "2020-04-18 00:13:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 1, "date": "2020-04-20 13:56:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "be69fbcb983734454c9ec6acbc9f63e04ba8b6ce", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_120c8a39", "line": 15, "range": {"start_line": 15, "start_character": 24, "end_line": 15, "end_character": 29}, "updated": "2020-04-20 14:54:44.000000000", "message": "nit: admin", "commit_id": "d5f2693324302998f725898a4e05dc8c2c9d849b"}]}}, "x%2Fnetworking-ansible~master~I0bd2fcc43cffa03dfe1d308168d231982b3a4daf": {"owner_id": 6994, "owner_name": "Michael Chapman", "owner_email": "woppin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 15:56:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5792, "name": "Dan Radez", "email": "dradez@redhat.com", "username": "dradez"}, {"value": 0, "_account_id": 6994, "name": "Michael Chapman", "email": "woppin@gmail.com", "username": "michaeltchapman"}], "comments": {}}, "openstack%2Fgovernance~master~I26fcab3b288b5ed64c74f7a6725b43036f195d44": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 1, "date": "2020-04-20 15:12:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-18 16:05:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Id1e3d05606b1f15b600fd8a069434a6dca27762e": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:03:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-04-20 06:48:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "openstack%2Fgovernance~master~I557d3d1f9da3d96508530b3ba7371689bcc77dea": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 2033, "name": "Belmiro Moreira", "email": "moreira.belmiro.email.lists@gmail.com", "username": "moreira-belmiro-email-lists"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fkolla~master~Id43f1bbd6a454832ab8dbf003a058403f6b34b5d": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:37:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-20 09:51:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 1, "date": "2020-04-17 16:10:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"setup.cfg": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "2fdd410c56a6fe50f6e0e829ef4c44d4f4cb42be", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_aa78e529", "line": 46, "range": {"start_line": 43, "start_character": 0, "end_line": 46, "end_character": 32}, "updated": "2020-04-17 15:55:24.000000000", "message": "remove this as well", "commit_id": "c7a7d51976a576b6493f956107d38b3fc97d9187"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "92759c97bbae3476140e996ba5587fb2869df0f9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4a7201e5", "line": 46, "range": {"start_line": 43, "start_character": 0, "end_line": 46, "end_character": 32}, "in_reply_to": "3f4c43b2_aa78e529", "updated": "2020-04-17 16:08:18.000000000", "message": "Done", "commit_id": "c7a7d51976a576b6493f956107d38b3fc97d9187"}], "tox.ini": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "92759c97bbae3476140e996ba5587fb2869df0f9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8a7c09b6", "line": 12, "updated": "2020-04-17 16:08:18.000000000", "message": "Did this too!", "commit_id": "c7a7d51976a576b6493f956107d38b3fc97d9187"}]}}, "openstack%2Fgovernance~master~I1b0aad1bdb93cb348852c380a64b330e7fdcd14c": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-06 01:05:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 1, "date": "2020-04-05 00:36:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 1, "date": "2020-04-06 09:52:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 0, "_account_id": 2033, "name": "Belmiro Moreira", "email": "moreira.belmiro.email.lists@gmail.com", "username": "moreira-belmiro-email-lists"}], "comments": {}}, "openstack%2Ffreezer-dr~master~Ibb2e614c7db8a01e41caed8314c1d46479c78295": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 14509, "name": "Pierre Mathieu", "email": "pierre-arthur.mathieu@hpe.com", "username": "slashme"}, {"value": 0, "_account_id": 11151, "name": "Fausto Marzi", "email": "fausto.marzi@ericsson.com", "username": "fausto.marzi"}, {"value": 1, "date": "2020-04-14 10:08:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 14340, "name": "Memo Garcia", "email": "guillermo.ramirez-garcia@hp.com", "username": "memogarcia"}, {"value": 0, "_account_id": 22405, "name": "Vitaliy Nogin", "email": "shadoff1982@gmail.com", "username": "vnogin"}, {"value": 0, "_account_id": 16768, "name": "Ruslan Aliev", "email": "raliev@mirantis.com", "username": "raliev"}, {"value": 2, "date": "2020-04-20 15:37:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27068, "name": "Trinh Nguyen", "email": "dangtrinhnt@gmail.com", "username": "dangtrinhnt"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 0, "_account_id": 14101, "name": "yapeng Yang", "email": "a394954369@gmail.com", "username": "yapeng"}], "comments": {}}, "openstack%2Fgovernance~master~I82cf00bcbffef7112e8362336e255cacd243a39a": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 1, "date": "2020-04-06 01:37:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fgovernance~master~I3d55b416c64bc2ffba35ee90e0770955b9fa8664": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fgovernance~master~I8a80139ff2ac872ca222eff2e9e383f8b5110181": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 1, "date": "2020-04-04 03:00:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8716, "name": "Sampath Priyankara", "email": "sam47priya@gmail.com", "username": "sampath"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fgovernance~master~I11709970f9ebe2b30eab65197fef36d843ba8ccf": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 29503, "name": "Justin Ferrieu", "email": "jferrieu@objectif-libre.com", "username": "jferrieu"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}], "comments": {}}, "openstack%2Fkuryr-libnetwork~master~I9357128c04f2fe0284432c1f6a543d63309efda3": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 9820, "name": "Liping Mao", "email": "limao@cisco.com", "username": "LipingMao"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11343, "name": "Gal Sagie", "email": "gal.sagie@gmail.com", "username": "GalSagie"}, {"value": 0, "_account_id": 14885, "name": "Daniel Mellado", "email": "dmellado@redhat.com", "username": "daniel-mellado"}, {"value": 0, "_account_id": 6598, "name": "Berezovsky Irena", "email": "irenab.dev@gmail.com", "username": "irenab"}, {"value": 2, "date": "2020-04-18 19:53:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, {"value": 0, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}, {"value": 2, "date": "2020-04-20 13:09:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "starlingx%2Fconfig~master~I624e38adfb5a7d4c1193da0dfe29991492f41d6a": {"owner_id": 28434, "owner_name": "David Sullivan", "owner_email": "david.sullivan@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 12:18:34.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 28747, "name": "Ovidiu Poncea", "email": "ovidiu.poncea@outlook.com", "username": "ovidiu.poncea"}, {"value": 2, "date": "2020-04-17 20:01:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28434, "name": "David Sullivan", "email": "david.sullivan@windriver.com", "username": "dsullivanwr"}], "comments": {"controllerconfig/controllerconfig/controllerconfig/upgrades/management.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "2b0f1ca61a0586d9e97dedb654f1dd72cb186c7e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c87e476a", "line": 190, "updated": "2020-04-15 15:23:13.000000000", "message": "Does this need to return True otherwise?  There doesnt appear to be a consumer of the return value currently.", "commit_id": "475e1d6939233fd5874470e035682cef57af5c92"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "e99493d06f2838daff785e6d66611eb7616f50ee", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_116a13b2", "line": 190, "in_reply_to": "3f4c43b2_c3f3c809", "updated": "2020-04-15 20:05:43.000000000", "message": "I'd prefer to raise the exception and keep the interface the same. Also - shouldn't we capture and log the output of the playbook or direct the output to a file? See _upgrade_downgrade_kube_networking for an example of logging it.", "commit_id": "475e1d6939233fd5874470e035682cef57af5c92"}, {"author": {"_account_id": 28434, "name": "David Sullivan", "email": "david.sullivan@windriver.com", "username": "dsullivanwr"}, "change_message_id": "fff4d1d72fd480915b0dafb7ab66bb042cc7247c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c3f3c809", "line": 190, "in_reply_to": "3f4c43b2_c87e476a", "updated": "2020-04-15 15:59:13.000000000", "message": "Yeah I should change that. Either I need to rethrow the exception or change the handling in the agent manager.", "commit_id": "475e1d6939233fd5874470e035682cef57af5c92"}]}}, "openstack%2Fgovernance~master~I2d528a4d95eb79ecc5338b8e93f0119f07de6bbb": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 1, "date": "2020-04-08 14:24:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7973, "name": "Douglas Mendiz\u00e1bal", "email": "dmendiza@redhat.com", "username": "dougmendizabal"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 1, "date": "2020-04-20 13:52:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27954, "name": "Mois\u00e9s Guimar\u00e3es de Medeiros", "email": "guimaraes@pm.me", "username": "moguimar"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "starlingx%2Fconfig~master~I6384ffd1d14ac105e26b83c02aaa8f090e1fdde1": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 13:13:17.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 2, "date": "2020-04-20 13:20:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}], "comments": {}}, "openstack%2Felection~master~Iddbea5bb8a71d2ddf3c6ad4fd785baeae2b8dea5": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": -2, "date": "2020-04-02 21:06:50.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10278, "name": "Jimmy McArthur", "email": "jimmy@openstack.org", "username": "jimmymcarthur"}], "comments": {}}, "openstack%2Fironic-ui~master~Id0049dea1e16f9c459e7e63e5f7d96666fff708a": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 14:53:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 13:49:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fgovernance~master~I525ac49d50564fd8ba8f816ec5d979763f8a5fc2": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-04-05 23:59:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10420, "name": "Adrian Turjak", "email": "devs+openstack@uncaught-exceptions.com", "username": "adriant"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "x%2Franger~master~Ib4f4933e6f3a8ee296d58610cb29d97599632326": {"owner_id": 21111, "owner_name": "STEW TY", "owner_email": "punsoca@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 21:03:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19391, "name": "Chi Lo", "email": "cl566n@att.com", "username": "cl566n"}, {"value": 2, "date": "2020-04-20 13:32:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29585, "name": "Jeremy Houser", "email": "jeremyhouser@protonmail.com", "username": "jh629g"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I2f94102badd83d82073df2dfb1e36a524c7b0686": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24468, "name": "Limestone Networks CI", "email": "openstack-ci@limestonenetworks.com", "username": "limestone-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 08:45:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29671, "name": "Albin Vass", "email": "albin.vass@gmail.com", "username": "albin_vass"}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-20 12:55:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-17 08:45:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fgovernance~master~Ifd004ef0acf37f92d001a24ac2a0949395379e78": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-06 23:09:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {"reference/projects.yaml": [{"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "ee1d2e35cd1d7b7d490862b82e7fafc5ebd65557", "unresolved": false, "patch_set": 1, "id": "df33271e_56bcd26b", "line": 3194, "range": {"start_line": 3194, "start_character": 11, "end_line": 3194, "end_character": 29}, "updated": "2020-04-03 17:10:45.000000000", "message": "Should probably change this to tburke@nvidia.com -- SwiftStack as an independent company no longer exists, though that email address will still be usable for some period.", "commit_id": "45f070053c330ee1cf3ff52169b965b2b202457c"}]}}, "openstack%2Ftempest-stress~master~I9ca4f08bc512adde72fdead4d44a86b28f06706a": {"owner_id": 5689, "owner_name": "Masayuki Igawa", "owner_email": "masayuki@igawa.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 13:09:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}], "comments": {}}, "openstack%2Fgovernance~master~I102296a986a1800c809ad875443f8a924dd0b30b": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 1, "date": "2020-04-20 09:30:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I05657fec198176c7d7345e84293f4902c81fa30c": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-04-17 08:45:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 0, "_account_id": 24468, "name": "Limestone Networks CI", "email": "openstack-ci@limestonenetworks.com", "username": "limestone-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 1, "date": "2020-04-17 13:25:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 2, "date": "2020-04-20 12:55:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-17 08:45:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/ensure-pip/README.rst": [{"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "ca65b52b78db75e5cee6fa9543f366aed7122ca6", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_6c0f55e1", "line": 53, "updated": "2020-04-14 22:10:36.000000000", "message": "the lack of line return looks odd in the html output: https://2d26f1a9f780ab3a8047-41571b934cfe7bb61559f346800eddd4.ssl.cf2.rackcdn.com/719704/3/check/zuul-tox-docs/b90083c/docs/python-roles.html#rolevar-ensure-pip.ensure_pip_from_upstream_interpreters", "commit_id": "f482cbae4dcd2d5f8f11c75ba7cf894c5d698c0a"}]}}, "airship%2Fairshipctl~master~Icc4500177e859d5a4607b98ec2bd2737521d00b1": {"owner_id": 28618, "owner_name": "Drew Walters", "owner_email": "drewwalters@microsoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-04-20 13:19:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-04-20 13:15:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"pkg/remote/redfish/client.go": [{"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "0f4f8ab67a98034f1fcca2ab7cfce19ee340bf8b", "unresolved": false, "patch_set": 7, "id": "7f423b7e_5eeb55af", "line": 201, "range": {"start_line": 201, "start_character": 17, "end_line": 201, "end_character": 35}, "updated": "2020-04-10 17:21:46.000000000", "message": "just be aware that in enterprise networks firewalls may work non-standard user-agent headers. we faced this with yum [1]:) and networking team denied to change that and it was necessary to make a workaround with proxy that changes user-agent... that was ugly...\nSuggest ability to override default user-agent field in airshipctl\n\n[1] http://middiu.blogspot.com/2013/11/overriding-yum-user-agent-header.html", "commit_id": "80ea4bd4de53392b620c6f044dac91c5312f4048"}], "pkg/remote/redfish/constants.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "ffb6af8bf23e3b02b98f3f5d0649167a4a19feef", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_9704937d", "line": 16, "range": {"start_line": 16, "start_character": 6, "end_line": 16, "end_character": 23}, "updated": "2020-04-13 10:09:32.000000000", "message": "use camel case instead of snake case", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "eb97a5464f9fb3d2dc4dcc8d5b3600b554107c6b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_00b65ffb", "line": 16, "range": {"start_line": 16, "start_character": 6, "end_line": 16, "end_character": 23}, "in_reply_to": "3f4c43b2_9704937d", "updated": "2020-04-14 14:00:10.000000000", "message": "Done", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "56c7f458d40148d9d6e52b4cefaac216a7066267", "unresolved": false, "patch_set": 12, "id": "3f4c43b2_ae5f5c0c", "line": 15, "range": {"start_line": 15, "start_character": 3, "end_line": 15, "end_character": 20}, "updated": "2020-04-17 13:51:47.000000000", "message": "adjust comment or remove since it's not exported", "commit_id": "d32eee2b13fc1fe4730399a69c4931f50856cd88"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "f2cd8da912a10d076c94d2da1861453cb08ae90f", "unresolved": false, "patch_set": 12, "id": "3f4c43b2_be666328", "line": 15, "range": {"start_line": 15, "start_character": 3, "end_line": 15, "end_character": 20}, "in_reply_to": "3f4c43b2_ae5f5c0c", "updated": "2020-04-17 19:51:49.000000000", "message": "> adjust comment or remove since it's not exported\n\ngood catch. Done", "commit_id": "d32eee2b13fc1fe4730399a69c4931f50856cd88"}], "pkg/remote/redfish/utils.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "002184d8cec33efc9273e6938af76719b50dbf5f", "unresolved": false, "patch_set": 10, "id": "3f4c43b2_15bdf8b6", "line": 43, "range": {"start_line": 40, "start_character": 0, "end_line": 43, "end_character": 2}, "updated": "2020-04-14 18:25:18.000000000", "message": "looks like err here is always nil", "commit_id": "962583071347fd1a8a00a39aaa52f72cb314e4b4"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "5f8025a80775275dc51ea500c76f847c55caccfd", "unresolved": false, "patch_set": 10, "id": "3f4c43b2_8fec3e2a", "line": 43, "range": {"start_line": 40, "start_character": 0, "end_line": 43, "end_character": 2}, "in_reply_to": "3f4c43b2_15bdf8b6", "updated": "2020-04-15 22:26:12.000000000", "message": "> looks like err here is always nil\n\nGood catch. Fixed!", "commit_id": "962583071347fd1a8a00a39aaa52f72cb314e4b4"}], "pkg/remote/redfish/vendors/dell/client.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "a6d707a896cf775f282217981eb470489ea66cf8", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_f2d9a5f4", "line": 1, "updated": "2020-04-13 10:25:31.000000000", "message": "We can use Go struct embedding (sort of an inheritance) end extend generic client instead of redefining all methods.", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "eb97a5464f9fb3d2dc4dcc8d5b3600b554107c6b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_a0c04b52", "line": 1, "in_reply_to": "3f4c43b2_f2d9a5f4", "updated": "2020-04-14 14:00:10.000000000", "message": "Done", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}], "pkg/remote/remotedirect/remote_direct.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "ffb6af8bf23e3b02b98f3f5d0649167a4a19feef", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_121ed1b9", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "updated": "2020-04-13 10:09:32.000000000", "message": "Just thought: what if we would have to introduce more than one vendor specific driver?\nI'm not really insisting (since only Dell implementation may require additional procedures) but it may worth thinking on creating sort of 'driver directory' - map of redfish client factories\n\nvar driverList map[string]func(id string, iso string, base string, insecure bool, proxy bool, user string, pass string) Context, Client, error\n\nand create redfish client object\n\nc := driverList['redfishDell']()\nor\nc := driverList['redfish']()", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "eb97a5464f9fb3d2dc4dcc8d5b3600b554107c6b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_4021874d", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "in_reply_to": "3f4c43b2_121ed1b9", "updated": "2020-04-14 14:00:10.000000000", "message": "> Just thought: what if we would have to introduce more than one\n > vendor specific driver?\n > I'm not really insisting (since only Dell implementation may\n > require additional procedures) but it may worth thinking on\n > creating sort of 'driver directory' - map of redfish client\n > factories\n > \n > var driverList map[string]func(id string, iso string, base string,\n > insecure bool, proxy bool, user string, pass string) Context,\n > Client, error\n > \n > and create redfish client object\n > \n > c := driverList['redfishDell']()\n > or\n > c := driverList['redfish']()\n\nI really liked this idea; it would make testing a lot easier too. The compiler doesn't like the return type, as both NewClient methods are not returning an interface, but a struct that has additional properties.\n\nAny ideas of getting around this?\n\n  clientList = map[string]func(string, string, string, bool, bool, string, string) (context.Context, Client, error){\n          redfish.ClientType: redfish.NewClient,\n          redfishDell.ClientType: redfishDell.NewClient,\n  }", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "725df89194f01e7c0c069d40684f01f0a6ca80df", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_cd766007", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "in_reply_to": "3f4c43b2_4021874d", "updated": "2020-04-15 08:40:34.000000000", "message": "> > Just thought: what if we would have to introduce more than one\n > > vendor specific driver?\n > > I'm not really insisting (since only Dell implementation may\n > > require additional procedures) but it may worth thinking on\n > > creating sort of 'driver directory' - map of redfish client\n > > factories\n > >\n > > var driverList map[string]func(id string, iso string, base\n > string,\n > > insecure bool, proxy bool, user string, pass string) Context,\n > > Client, error\n > >\n > > and create redfish client object\n > >\n > > c := driverList['redfishDell']()\n > > or\n > > c := driverList['redfish']()\n > \n > I really liked this idea; it would make testing a lot easier too.\n > The compiler doesn't like the return type, as both NewClient\n > methods are not returning an interface, but a struct that has\n > additional properties.\n > \n > Any ideas of getting around this?\n > \n > clientList = map[string]func(string, string, string, bool, bool,\n > string, string) (context.Context, Client, error){\n > redfish.ClientType: redfish.NewClient,\n > redfishDell.ClientType: redfishDell.NewClient,\n > }\n\nlooks good and we can fill this list in  init function of the module. in this case we'd  have to return interface", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "8c597fa89aa0d35fa5b2591b7d4fc4af919cf320", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_ecd52cbb", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "in_reply_to": "3f4c43b2_4021874d", "updated": "2020-04-14 16:55:26.000000000", "message": "May be this sounds a bit crazy, but it's just a logical continuation of your conversation about different vendors. we already use docker images for iso_gen. why don't we do the same for redfish clients?", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "5f8025a80775275dc51ea500c76f847c55caccfd", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_ef41820d", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "in_reply_to": "3f4c43b2_cd766007", "updated": "2020-04-15 22:26:12.000000000", "message": "> in this case we'd  have to return interface\n\nI don't think we can return an interface since the redfish package needs access to the properties in the redfish.Client struct. Wouldn't we lose access to the redfishAPI and redfish config?\n\nI'd prefer to return an interface here as well. I hope I am missing something!", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "5f8025a80775275dc51ea500c76f847c55caccfd", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_af05bac4", "line": 93, "range": {"start_line": 73, "start_character": 0, "end_line": 93, "end_character": 3}, "in_reply_to": "3f4c43b2_ecd52cbb", "updated": "2020-04-15 22:26:12.000000000", "message": "> May be this sounds a bit crazy, but it's just a logical\n > continuation of your conversation about different vendors. we\n > already use docker images for iso_gen. why don't we do the same for\n > redfish clients?\n\nGood question. The redfish client is actually a wrapper around the go-redfish library with a few vendor calls. This functionality is vendor-specific, and there isn't a widely distributed client to containerize (to my knowledge). Everything we are building here is airship-specific.", "commit_id": "bbfb60094d2b54ca39eaccf00c2054c8b3969fea"}]}}, "airship%2Fairshipctl~master~I43b5bca41519c88b01535c156b2db0e9edaa81bb": {"owner_id": 21040, "owner_name": "Alexey", "owner_email": "aodinokov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 14:24:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 17583, "name": "Pavel Basov", "email": "pbasov@mirantis.com", "username": "basov"}, {"value": 0, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, {"value": 0, "_account_id": 8478, "name": "Vladislav Kuzmin", "email": "vkuzmin@mirantis.com", "username": "vkuzmin"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-04-17 19:31:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "9a48dcc4326d68f65f04fc8f47794a81dfb84564", "unresolved": false, "patch_set": 25, "id": "3f4c43b2_62728be5", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 109}, "updated": "2020-04-17 11:11:13.000000000", "message": "Wrap this line according to commit message subject recommendatios", "commit_id": "a471d518ad8ab247475153581e9ec7e21f71b025"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "62a33510063a390b31f7b6ccc597bd0a84146810", "unresolved": false, "patch_set": 25, "id": "3f4c43b2_2a0fb589", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 109}, "in_reply_to": "3f4c43b2_62728be5", "updated": "2020-04-17 16:00:55.000000000", "message": "Done", "commit_id": "a471d518ad8ab247475153581e9ec7e21f71b025"}], "roles/apache-wsgi-sushy-emulator/defaults/main.yml": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c3e6cf416e2e5b26bb4be81c495c36ccf9d41d1d", "unresolved": false, "patch_set": 22, "id": "3f4c43b2_1e5fcce2", "line": 23, "range": {"start_line": 19, "start_character": 0, "end_line": 23, "end_character": 25}, "updated": "2020-04-15 11:13:37.000000000", "message": "remove commented lines", "commit_id": "1834274eefb3901e2a99f01766388042be642823"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "73e45624b6cb8cc4ca0eb8350635f043d676e716", "unresolved": false, "patch_set": 22, "id": "3f4c43b2_3aca916c", "line": 23, "range": {"start_line": 19, "start_character": 0, "end_line": 23, "end_character": 25}, "in_reply_to": "3f4c43b2_1e5fcce2", "updated": "2020-04-15 14:04:34.000000000", "message": "done", "commit_id": "1834274eefb3901e2a99f01766388042be642823"}], "roles/apache-wsgi-sushy-emulator/tasks/main.yml": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8b46c50a72e75b32558ee7f138bc7ebde47f0d22", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_782e0ca6", "line": 13, "range": {"start_line": 13, "start_character": 2, "end_line": 13, "end_character": 37}, "updated": "2020-04-13 22:08:47.000000000", "message": "i think python3-pip message is wrong here", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "c26fd6a43f38b6a39a408624a343b5a6d8eecb8c", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_d6bd5d69", "line": 13, "range": {"start_line": 13, "start_character": 2, "end_line": 13, "end_character": 37}, "in_reply_to": "3f4c43b2_782e0ca6", "updated": "2020-04-14 15:41:48.000000000", "message": "done", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8b46c50a72e75b32558ee7f138bc7ebde47f0d22", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_981e786e", "line": 19, "range": {"start_line": 19, "start_character": 0, "end_line": 19, "end_character": 14}, "updated": "2020-04-13 22:08:47.000000000", "message": "it is better to group this with block, if we are using become on every state here.", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "c26fd6a43f38b6a39a408624a343b5a6d8eecb8c", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_b1641bbb", "line": 19, "range": {"start_line": 19, "start_character": 0, "end_line": 19, "end_character": 14}, "in_reply_to": "3f4c43b2_981e786e", "updated": "2020-04-14 15:41:48.000000000", "message": "done", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8b46c50a72e75b32558ee7f138bc7ebde47f0d22", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_b8309409", "line": 42, "range": {"start_line": 40, "start_character": 0, "end_line": 42, "end_character": 23}, "updated": "2020-04-13 22:08:47.000000000", "message": "seems like, you are using ansible native modules for everything else, i think we should consider using ansible module for this well: apache2_module\n\nIn addition, i think you have wrong name, since it says ssl module", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "c26fd6a43f38b6a39a408624a343b5a6d8eecb8c", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_b6f4115d", "line": 42, "range": {"start_line": 40, "start_character": 0, "end_line": 42, "end_character": 23}, "in_reply_to": "3f4c43b2_b8309409", "updated": "2020-04-14 15:41:48.000000000", "message": "I see that the previous block installs and enables wsgi, so this part is even not needed.\nI'll just remove it :)", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}], "roles/apache-wsgi-sushy-emulator/templates/etc/apache2/sites-available/wsgi-sushy-emulator-ssl.conf.j2": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8b46c50a72e75b32558ee7f138bc7ebde47f0d22", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_58a8701e", "line": 34, "range": {"start_line": 1, "start_character": 0, "end_line": 34, "end_character": 11}, "updated": "2020-04-13 22:08:47.000000000", "message": "no need to put it into templates/etc/apache2/sites-available/wsgi-sushy-emulator-ssl.conf.j2  in templates, should be in  templates/wsgi-sushy-emulator-ssl.conf.j2", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "c26fd6a43f38b6a39a408624a343b5a6d8eecb8c", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_51731781", "line": 34, "range": {"start_line": 1, "start_character": 0, "end_line": 34, "end_character": 11}, "in_reply_to": "3f4c43b2_58a8701e", "updated": "2020-04-14 15:41:48.000000000", "message": "done", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}], "roles/apache-wsgi-sushy-emulator/templates/var/www/sushy-emulator/sushy-emulator.wsgi.j2": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8b46c50a72e75b32558ee7f138bc7ebde47f0d22", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_38b12491", "line": 1, "updated": "2020-04-13 22:08:47.000000000", "message": "no need to put it into templates/var/www... in templates, should be in  templates/sushy-emulator.wsgi.j2", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}, {"author": {"_account_id": 21040, "name": "Alexey", "email": "aodinokov@mirantis.com", "username": "aodinokov"}, "change_message_id": "c26fd6a43f38b6a39a408624a343b5a6d8eecb8c", "unresolved": false, "patch_set": 17, "id": "3f4c43b2_d10447c9", "line": 1, "in_reply_to": "3f4c43b2_38b12491", "updated": "2020-04-14 15:41:48.000000000", "message": "done", "commit_id": "947d9c9b95361fb6180a387e479c26ac0cd5a225"}]}}, "openstack%2Fcinder~master~I5deaf0b961378a3a18046bea97fc56e98c284f77": {"owner_id": 23601, "owner_name": "michael", "owner_email": "Michael.Mcaleer@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 19:12:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 26561, "name": "liu tracy", "email": "Tracy.Liu@emc.com"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-04-16 14:50:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30555, "name": "Fernando Ferraz", "display_name": "Fernando Ferraz", "email": "fesilva@redhat.com", "username": "fernandoperches"}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28080, "name": "Akhil Jayakumar", "email": "akjayaku@cisco.com", "username": "akjayaku"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}], "comments": {"cinder/volume/drivers/dell_emc/powermax/utils.py": [{"author": {"_account_id": 30555, "name": "Fernando Ferraz", "display_name": "Fernando Ferraz", "email": "fesilva@redhat.com", "username": "fernandoperches"}, "change_message_id": "ba4b3e075ebb954308396b2d87acf8ebf05a8acc", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_fe6496e7", "line": 1906, "updated": "2020-04-15 20:24:54.000000000", "message": "We could raise the VolumeBackendAPIException exception \"There has been a problem parsing the pool...\" here as we are sure at this point we don't have the necessary fields from pool_details. IMO code would be easier to read.", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "04990f5a26fa3a6a61dadf23713768e66b9aa81d", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_5b2b0d2f", "line": 1906, "in_reply_to": "3f4c43b2_fe6496e7", "updated": "2020-04-16 13:15:08.000000000", "message": "Sure I can change IndexError to VolumeBackendAPIException", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 30555, "name": "Fernando Ferraz", "display_name": "Fernando Ferraz", "email": "fesilva@redhat.com", "username": "fernandoperches"}, "change_message_id": "ba4b3e075ebb954308396b2d87acf8ebf05a8acc", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_318d8f7b", "line": 1912, "updated": "2020-04-15 20:24:54.000000000", "message": "Maybe we could verify if this extra_specs is properly configured earlier in is_compression_disabled().", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "04990f5a26fa3a6a61dadf23713768e66b9aa81d", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_7bdd2941", "line": 1912, "in_reply_to": "3f4c43b2_318d8f7b", "updated": "2020-04-16 13:15:08.000000000", "message": "I want to keep is_compression_disabled specific to compression settings only, extra specs are as set and we can determine here if there is a problem with the pool_name if we have to parse settings from specs.", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 30555, "name": "Fernando Ferraz", "display_name": "Fernando Ferraz", "email": "fesilva@redhat.com", "username": "fernandoperches"}, "change_message_id": "ba4b3e075ebb954308396b2d87acf8ebf05a8acc", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_1e77c2d6", "line": 1913, "updated": "2020-04-15 20:24:54.000000000", "message": "Maybe I'm missing something here but I wonder if theses error messages looks odd to the context. When we call is_compression_disabled() we are waiting for a Boolean but instead we could get a exception saying storage-assisted migration is disabled.", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "04990f5a26fa3a6a61dadf23713768e66b9aa81d", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_1bbfc5d0", "line": 1913, "in_reply_to": "3f4c43b2_1e77c2d6", "updated": "2020-04-16 13:15:08.000000000", "message": "I agree, this was born from a bug raised internally around a specific use-case for upcoming release, I will remove the migration specific details so message only pertains to missing pool_name.", "commit_id": "ef1ec38703ffb221a4206732476d51be3dd7d3e7"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "f220238669b9ded79cfd1a0321fcfd29556a1751", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_5571ee0b", "line": 1941, "range": {"start_line": 1941, "start_character": 28, "end_line": 1941, "end_character": 33}, "updated": "2020-04-19 19:12:59.000000000", "message": "Things like these would probably be better as just the literal empty string ''", "commit_id": "9fabc40ccf0e6f96f1f21a78295449e9308d3072"}]}}, "starlingx%2Fconfig~master~Id7f6cd6fc499ea4644e16c80b68ebde19c6f59ad": {"owner_id": 31483, "owner_name": "Simon Cousineau", "owner_email": "simon.cousineau@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, {"value": 2, "date": "2020-04-20 14:19:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 1, "date": "2020-04-20 14:04:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28709, "name": "Kevin Smith", "email": "kevin.smith@windriver.com", "username": "kevin.smith.wrs"}, {"value": 2, "date": "2020-04-20 13:56:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 1, "date": "2020-04-20 13:42:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "ca175de570dc65708bee13c4486f41b8f418dca0", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_908ef6cd", "line": 9, "updated": "2020-04-17 17:53:34.000000000", "message": "nit: line length over 79 chars", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "4bccb5233d0ef0c8e287200c19aaa04b8a45ab6c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_7341b439", "line": 9, "in_reply_to": "3f4c43b2_908ef6cd", "updated": "2020-04-17 18:07:05.000000000", "message": "Done", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "ca175de570dc65708bee13c4486f41b8f418dca0", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_30b9e279", "line": 15, "updated": "2020-04-17 17:53:34.000000000", "message": "'Story:' is also required to correspond with the 'Task:' present", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "4bccb5233d0ef0c8e287200c19aaa04b8a45ab6c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_103f86d6", "line": 15, "in_reply_to": "3f4c43b2_30b9e279", "updated": "2020-04-17 18:07:05.000000000", "message": "Done", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}], "sysinv/sysinv/sysinv/sysinv/helm/filebeat.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "ca175de570dc65708bee13c4486f41b8f418dca0", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_b0fe9234", "line": 44, "updated": "2020-04-17 17:53:34.000000000", "message": "comment should be appended, as the prior comments are not linked to the updated code which immediately follows it", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "4bccb5233d0ef0c8e287200c19aaa04b8a45ab6c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_505bce52", "line": 44, "in_reply_to": "3f4c43b2_b0fe9234", "updated": "2020-04-17 18:07:05.000000000", "message": "Done", "commit_id": "42da92a7cde64477d0c7c84a64661f54929e0ff1"}, {"author": {"_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, "change_message_id": "1c6da5be8464b9c4af8f75d5efdffda62e185cdf", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_f3bca4dd", "line": 43, "range": {"start_line": 42, "start_character": 0, "end_line": 43, "end_character": 49}, "updated": "2020-04-17 18:31:36.000000000", "message": "Does this cover off the autodiscover default config as well, or is there a manifest change also required?", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "4a6e2f8f4bb535ac579fe8fe070aca0b0358e8c0", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_c43384f5", "line": 43, "range": {"start_line": 42, "start_character": 0, "end_line": 43, "end_character": 49}, "in_reply_to": "3f4c43b2_1e295737", "updated": "2020-04-20 13:41:21.000000000", "message": "I can confirm that logs collected via autodiscover have their labels properly de-dotted.", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}, {"author": {"_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, "change_message_id": "a4bbe33f08899f959664771a0568e921c8cbd6ab", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_1e295737", "line": 43, "range": {"start_line": 42, "start_character": 0, "end_line": 43, "end_character": 49}, "in_reply_to": "3f4c43b2_be9e63b5", "updated": "2020-04-17 19:13:17.000000000", "message": "Please test to make sure container logs that are collected via autodiscover are properly replaced with _.", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "cc4cb027b354302b8da110e9922cd6f3b631fdb7", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_be9e63b5", "line": 43, "range": {"start_line": 42, "start_character": 0, "end_line": 43, "end_character": 49}, "in_reply_to": "3f4c43b2_f3bca4dd", "updated": "2020-04-17 19:05:29.000000000", "message": "I think these processors are applied to all logs being exported from Filebeat, which should include those from autodiscovery.", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}], "sysinv/sysinv/sysinv/sysinv/helm/metricbeat.py": [{"author": {"_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, "change_message_id": "1c6da5be8464b9c4af8f75d5efdffda62e185cdf", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_f3a144ab", "line": 177, "range": {"start_line": 177, "start_character": 0, "end_line": 177, "end_character": 33}, "updated": "2020-04-17 18:31:36.000000000", "message": "Is the annotations.dedot also required?", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}, {"author": {"_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, "change_message_id": "cc4cb027b354302b8da110e9922cd6f3b631fdb7", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_137150e1", "line": 177, "range": {"start_line": 177, "start_character": 0, "end_line": 177, "end_character": 33}, "in_reply_to": "3f4c43b2_f3a144ab", "updated": "2020-04-17 19:05:29.000000000", "message": "Yes, annotations.dedot should also be added.", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}, {"author": {"_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, "change_message_id": "1c6da5be8464b9c4af8f75d5efdffda62e185cdf", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_d3a408bc", "line": 205, "range": {"start_line": 205, "start_character": 0, "end_line": 205, "end_character": 33}, "updated": "2020-04-17 18:31:36.000000000", "message": "Is the annotations.dedot also required?", "commit_id": "4e58b8526e21eef8deb85fe91773a05f7442aa96"}]}}, "starlingx%2Ftools~master~Ic45b7ea5c56addf1e51c0e563d240d6eb5542815": {"owner_id": 28410, "owner_name": "Scott Little", "owner_email": "scott.little@windriver.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftempest-stress~master~I67ba5ceb1728ee16b866ecf1b71cbf545a01b7d9": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 13:09:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 23:31:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 1, "date": "2020-04-14 09:57:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}], "comments": {}}, "openstack%2Frequirements~master~Ic86072c644b85e27960df87e77b8d665769b4e1c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~I746f9785c49a5baef4f493e8dd73c25507951dce": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "e911d171a4ebb3824e1ce45ceb6a175860e0ef17", "unresolved": false, "patch_set": 1, "id": "df33271e_540d8933", "line": 163, "range": {"start_line": 163, "start_character": 4, "end_line": 163, "end_character": 28}, "updated": "2020-04-08 11:34:25.000000000", "message": "Should not that be on required-projects rally-openstack line?", "commit_id": "d60dcdfd068167732becb203213d8af4acd77549"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "1bcb49f8b1b5b21afcc0b6df07f7e9025f9e09a6", "unresolved": false, "patch_set": 1, "id": "df33271e_d4a359b0", "line": 163, "range": {"start_line": 163, "start_character": 4, "end_line": 163, "end_character": 28}, "in_reply_to": "df33271e_540d8933", "updated": "2020-04-08 11:51:32.000000000", "message": "I wasn't sure, but if that will work, I think it will be better to move it as You suggested", "commit_id": "d60dcdfd068167732becb203213d8af4acd77549"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "92b6aa7426f4ff12a46d4ae156117fb9f6d8880d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_194a7c54", "line": 163, "range": {"start_line": 163, "start_character": 4, "end_line": 163, "end_character": 28}, "in_reply_to": "df33271e_d4a359b0", "updated": "2020-04-13 04:42:09.000000000", "message": "I added tag to devstack plugin:\nhttps://review.opendev.org/718514\nPerhaps from the 2 we can have a fire proof solution :-)", "commit_id": "d60dcdfd068167732becb203213d8af4acd77549"}]}}, "openstack%2Fneutron~stable%2Fqueens~Ica953cc2038b24c4b3985447b393763912aa6abd": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}], "comments": {"neutron/tests/common/net_helpers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "f441313ed3d53d0bd5777e69b91ec648e2b3b534", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2988661d", "line": 518, "updated": "2020-04-17 14:36:01.000000000", "message": "pep8: F821 undefined name 'ConnectionError'", "commit_id": "57e700516c35a7472da68958404e6470ad315d7a"}]}}, "openstack%2Fneutron~stable%2Frocky~Ica953cc2038b24c4b3985447b393763912aa6abd": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}], "comments": {"neutron/tests/common/net_helpers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "006de12f81bfc89f61d242a26a09b55c44fd3aa4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_245ecbe5", "line": 518, "updated": "2020-04-17 15:06:05.000000000", "message": "pep8: F821 undefined name 'ConnectionError'", "commit_id": "a405e6bf3ea7653eda5b2f59232a57eb65da2717"}]}}, "openstack%2Fneutron~stable%2Fstein~Ica953cc2038b24c4b3985447b393763912aa6abd": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~Ica953cc2038b24c4b3985447b393763912aa6abd": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}], "comments": {}}, "starlingx%2Ftools~master~Iaf11db06357206b7ba24733043fb4431270a72b5": {"owner_id": 28682, "owner_name": "Ran An", "owner_email": "ran1.an@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-03 17:31:57.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-04-20 14:14:25.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-04-02 08:34:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28470, "name": "Yan Chen", "email": "yan.chen@intel.com", "username": "chenyan"}], "comments": {}}, "openstack%2Fcinder~master~I8ace7662bb11d5708dd507b79f4a2476c9875ac5": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 15:09:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "starlingx%2Fkernel~master~I6546a9f626178d5d537d253b579090da3a3ded43": {"owner_id": 28607, "owner_name": "Saul Wold", "owner_email": "saul.wold@windriver.com", "labels": {}, "comments": {}}, "starlingx%2Fdocs~master~I4bff8d43a8a9bd6450261048f1adb50d8c5bbced": {"owner_id": 31549, "owner_name": "Poornima Y N", "owner_email": "poornima.y.n@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "zuul%2Fzuul-jobs~master~Ie2677364d8696d5c4f71eefe2054da1b39e8bb35": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24468, "name": "Limestone Networks CI", "email": "openstack-ci@limestonenetworks.com", "username": "limestone-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 1, "date": "2020-04-17 13:25:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 2, "date": "2020-04-20 12:52:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-17 14:25:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "starlingx%2Fcert-manager-armada-app~master~I1d63f9d9ccaaadeb6a00fa9cac128e3966827793": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-04-20 11:18:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 2, "date": "2020-04-20 13:17:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I713a3cc790039dee3d28d83198f5afff5bebc491": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 24468, "name": "Limestone Networks CI", "email": "openstack-ci@limestonenetworks.com", "username": "limestone-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 1, "date": "2020-04-17 13:24:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 2, "date": "2020-04-20 12:51:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-04-17 08:19:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "x%2Fbrowbeat~master~Ia0360b04020188812ed2a4fb36e05e8f7a73a9bc": {"owner_id": 16845, "owner_name": "Sindhur", "owner_email": "smalleni@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 13:03:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16845, "name": "Sindhur", "email": "smalleni@redhat.com", "username": "smalleni"}, {"value": 0, "_account_id": 10442, "name": "Masco Kaliyamoorthy", "email": "mkaliyam@redhat.com", "username": "masco"}], "comments": {"browbeat/elastic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b510aedfe8105a90a5ccdc8d61381d592040a72a", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_9657f926", "line": 52, "updated": "2020-04-20 05:35:57.000000000", "message": "linters: E128 continuation line under-indented for visual indent", "commit_id": "22562f1a836f7b532758d2ad9fac5f523bffa727"}]}}, "openstack%2Fkuryr~master~Ibe31e2d17b8baf88c40e00e3beaa019b13594c7c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11343, "name": "Gal Sagie", "email": "gal.sagie@gmail.com", "username": "GalSagie"}, {"value": 1, "date": "2020-04-20 06:44:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 14885, "name": "Daniel Mellado", "email": "dmellado@redhat.com", "username": "daniel-mellado"}, {"value": 0, "_account_id": 6598, "name": "Berezovsky Irena", "email": "irenab.dev@gmail.com", "username": "irenab"}, {"value": 2, "date": "2020-04-18 19:54:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, {"value": 0, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}, {"value": 2, "date": "2020-04-20 13:01:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "openstack%2Fkolla~master~I75c088bf52fb1de7d9244aee6f8d86e64fa43aea": {"owner_id": 3217, "owner_name": "Ian Wells", "owner_email": "", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9820, "name": "Liping Mao", "email": "limao@cisco.com", "username": "LipingMao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23942, "name": "Matt Kucia", "email": "maciej@kucia.net", "username": "maciejkucia"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26576, "name": "yanpeifei", "email": "yanpeifei@gohighsec.com", "username": "yanpeifei", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10787, "name": "Michal Jastrzebski (inc0)", "email": "michal.jastrzebski@intel.com", "username": "inc0"}], "comments": {"kolla/image/build.py": [{"author": {"_account_id": 14119, "name": "Sam Yaple", "email": "sam+git@yaple.net", "username": "SamYaple"}, "change_message_id": "90c8afbf893ee400122c2229b28411cb05186b62", "unresolved": false, "patch_set": 12, "id": "3f3283f1_0c88571d", "line": 462, "updated": "2017-09-18 23:10:35.000000000", "message": "by default when building an image if a RUN step fails then the failed container will remain on the system until it is manually removed (presumably for debugging). --forcerm removes the container regardless to the failure status.", "commit_id": "dd93b7d174b784e0647904088ac7e1d72a8d5242"}, {"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "9971deb7e3f2fd5c54b6dd1c8ed5453f23f4dd7f", "unresolved": false, "patch_set": 12, "id": "7f515b1d_8a043916", "line": 462, "in_reply_to": "3f3283f1_0c88571d", "updated": "2017-10-03 04:52:27.000000000", "message": "Feel free to add this functionality. :)", "commit_id": "dd93b7d174b784e0647904088ac7e1d72a8d5242"}], "kolla/image/fastbuild.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e782aa534c0de014b66a8e05b25a91dff591c938", "unresolved": false, "patch_set": 7, "id": "5f2577a7_c0dcbae5", "line": 234, "range": {"start_line": 234, "start_character": 12, "end_line": 234, "end_character": 16}, "updated": "2017-09-15 03:42:29.000000000", "message": "you can run somthing like \n docker rm $(docker ps -a | grep Exited | grep \"/buildstuff/buildme.sh\" | awk '{ print $1 } ')\n\nto clean up all the build containers.", "commit_id": "7f519e0d42e006690794bb7854081f9b29341b95"}]}}, "openstack%2Freleases~master~I8f33d4c0bf5fcba203d410cd021c548219a757ec": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:17:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 09:27:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "jjb%2Fjenkins-job-builder~master~Ic5ef400cf4cd088680b92bd10b88b79520795729": {"owner_id": 31860, "owner_name": "Christoph Erhardt", "owner_email": "christoph.erhardt@methodpark.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 13:08:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13807, "name": "Thanh Ha", "display_name": "zxiiro", "email": "zxiiro@gmail.com", "username": "zxiiro", "status": "On Leave"}, {"value": 2, "date": "2020-04-20 12:36:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, {"value": 0, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "_account_id": 31860, "name": "Christoph Erhardt", "email": "christoph.erhardt@methodpark.de", "username": "mp-chet"}], "comments": {}}, "openstack%2Fneutron~master~If2df3ea9b3cbd2c9757dc22751de06932dad4757": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": -1, "date": "2020-04-20 12:18:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/tests/functional/agent/l3/extensions/qos/test_fip_qos_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52baa409", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b23848a0", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/agent/l3/extensions/test_gateway_ip_qos_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cfba916c", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2fb3359a", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/agent/linux/test_dhcp.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92d9cc58", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2dad048", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/agent/linux/test_l3_tc_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2599435", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3242783f", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/db/test_network.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_123adcca", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_723360f7", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/pecan_wsgi/test_controllers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0fd919f2", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6fe25da2", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/pecan_wsgi/test_hooks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f54c121", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af32a50e", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/services/l3_router/test_l3_dvr_ha_router_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12c49c90", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_72bd2001", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/services/l3_router/test_l3_dvr_router_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4fa68155", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.callbacks", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af646523", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/functional/services/portforwarding/test_port_forwarding.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8fc409f7", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_efb5cd7f", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l2/extensions/test_qos.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f3d992a", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.qos", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f46ddc2", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/extensions/qos/test_fip.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4ff84148", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.qos", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af9625ef", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/extensions/test_port_forwarding.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d20b5421", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32143844", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/extensions/test_snat_log.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cfec5191", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f05f546", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/test_dvr_local_router.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_920b8cd4", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f20c90ed", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/test_legacy_router.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12965c94", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_728fe074", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/l3/test_router_info.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92ef0c1d", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.exceptions", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2f01000", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/linux/openvswitch_firewall/test_firewall.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f2089ae", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.utils", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef114d5f", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/linux/openvswitch_firewall/test_rules.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0fb0f989", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6fa9bd22", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/linux/test_interface.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8ff6c962", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_efe78dab", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/linux/test_l3_tc_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52458442", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b277a8a0", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/linux/test_tc_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4fd5e1e4", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from pyroute2.netlink", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af074582", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/metadata/test_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f263916", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f1ffdb6", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/ovsdb/test_impl_idl.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f37e9ff", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef382def", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/test_resource_cache.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d224f4b1", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_323d58c4", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/agent/windows/test_ip_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d27234ad", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import netifaces", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_326b98b7", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/api/rpc/handlers/test_dhcp_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f1cc1c0", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af7aa5ed", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/api/rpc/handlers/test_resources_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d25cf4ee", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.objects", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32755865", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/api/rpc/handlers/test_securitygroups_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf8571d1", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f6e952e", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/api/v2/test_resource.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f0c09a6", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_effdcd6e", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test__utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf02916f", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2ffb3579", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_dvr_mac_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1272dc7b", "line": 28, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.utils", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_726b6084", "line": 28, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_extraroute_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f9b6916", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef9cad0f", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_ipam_backend_mixin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf3d71de", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.exceptions", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f2695cf", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_l3_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cfe9f1b7", "line": 27, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2fd21501", "line": 27, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_l3_dvr_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f4321b0", "line": 28, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af15859e", "line": 28, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_portsecurity_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2435412", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_324c3841", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_portsecurity_db_common.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2807449", "line": 14, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.api.definitions", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3299d8c3", "line": 14, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_provisioning_blocks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2f514ef", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32def86c", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/db/test_rbac_db_mixin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_521624f3", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2d4c821", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4fdfa1d5", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_aff1056e", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_expose_port_forwarding_in_fip.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f02b93d", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6ffb7d46", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_external_net.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f8de1d1", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_afbf455f", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_floating_ip_port_forwarding.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92054c14", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f206501c", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_l3_ext_gw_mode.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f31a95d", "line": 26, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.utils", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef32ed5d", "line": 26, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_network_segment_range.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52b3c44d", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b285e85c", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_providernet.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f547952", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f4d3dc3", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_quotasv2_detail.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12681cb7", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7261a0d3", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/extensions/test_servicetype.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f8759b7", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f909dee", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/ipam/drivers/neutrondb_ipam/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_923d4c91", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f23e5089", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/ipam/test_requests.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_928a6c67", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f27bf077", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/ipam/test_subnet_alloc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5268e485", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b20688cd", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/notifiers/test_batch_notifier.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2ceb4b2", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import eventlet", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32c71899", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/notifiers/test_ironic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52174446", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import eventlet", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b229688b", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/notifiers/test_nova.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f296199", "line": 24, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from novaclient", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af1bc57e", "line": 24, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/objects/qos/test_rule_type.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f52493a", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.qos", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef430d6b", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/objects/test_ports.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f7599cb", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.tests", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f7eddaf", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/objects/test_subnet.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52fd84af", "line": 14, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b22fa83d", "line": 14, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/agent/test__common_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12201c48", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7219a020", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/agent/test_capabilities.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f6bd91d", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f741dff", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/base_type_tunnel.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f02010d", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins.ml2", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2004803", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/l2pop/rpc_manager/test_l2population_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf6f31fa", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f7855c2", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/linuxbridge/agent/test_arp_protect.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f7b21bd", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af4d859b", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/extension_drivers/test_qos_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12113c53", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.qos", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_721a406f", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/test_sriov_nic_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f68891d", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef594d8e", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/mech_driver/test_mech_sriov_nic_switch.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f0c793f", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins.ml2", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f053d14", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/openflow/native/test_br_int.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf161156", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f0fb537", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/openflow/native/test_ofswitch.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92342c95", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from os_ken.ofproto", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f225b05d", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/mech_driver/test_mech_openvswitch.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12f77cd5", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins.ml2", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_720080ac", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/ovn/mech_driver/ovsdb/test_commands.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f7fe9de", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from ovsdbapp.backend.ovs_idl", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef802dc2", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/test_helpers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cfd3b1d4", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2fdcd5e2", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/drivers/test_type_vlan.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf48d188", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f617506", "line": 22, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/extensions/test_port_security.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_123f7cb4", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.api.definitions", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7248805b", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/test_driver_context.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf10d1ab", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f2975e5", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/test_extension_driver_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_927c2c84", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f26db0cc", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/test_ovo_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f69a9fa", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef6aedea", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/test_port_binding.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4fee81b4", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af2c6502", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/plugins/ml2/test_tracked_resources.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8fcd2933", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_efce6d2b", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/privileged/agent/linux/test_netlink_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d22a342a", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32239858", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/quota/test_resource.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92d8ac7b", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2c930ac", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/quota/test_resource_registry.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf37314d", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f4055a5", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/auto_allocate/test_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2a7d40a", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32b0b843", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/l3_router/service_providers/test_driver_controller.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_528c647e", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2ea080c", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/agent/l3/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f5e3943", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f57fd27", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/agent/test_log_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12493c30", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_725240e0", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/common/test_db_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12dbfc7b", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.utils", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_72e4003d", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/common/test_sg_callback.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0f23d9be", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.callbacks", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f2c1dac", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/common/test_sg_validate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_922eec8f", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f21f7058", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/common/test_snat_validate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cfa1f148", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f8a15be", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/common/test_validators.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f4a01ac", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_afc8e521", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/drivers/openvswitch/test_ovs_firewall_log.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cf5e1175", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2f57b55a", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/drivers/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f1a49c9", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.logapi", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ef0b0d7a", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/rpc/test_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5230e4e8", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.logapi", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b24e886c", "line": 18, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/logapi/test_logging_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2119406", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_32fa78bc", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/metering/agents/test_metering_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9266ecc0", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.tests.unit", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f25770c9", "line": 16, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/metering/test_metering_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_524f4433", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.utils", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b26168ac", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/qos/drivers/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0ff8f978", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.qos", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6ff1bd95", "line": 19, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/drivers/linuxbridge/agent/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_525e2412", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.trunk", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b29cc8c0", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/drivers/ovn/test_trunk_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52e1042a", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.services.trunk", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2d32860", "line": 21, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/rpc/test_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0fcf5956", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6fd89d1d", "line": 15, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/rpc/test_backend.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92a1ccfb", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2a2d0fb", "line": 17, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/rpc/test_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12adbce8", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from sqlalchemy.orm", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_72b6c040", "line": 20, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/services/trunk/test_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92538c17", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import testtools", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2549000", "line": 23, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}], "neutron/tests/unit/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f71610c", "line": 24, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from neutron_lib.plugins", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a1a9869c30cde5246b4490e61429236c385d21b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_af63c541", "line": 24, "updated": "2020-04-19 13:34:45.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "c4e269fc67ca8a2656d11e22695c0c06a03826b3"}]}}, "openstack%2Fneutron-tempest-plugin~master~Ie6cae5b1e7b600a2b2396f403a8fa5a90e5f3463": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-19 12:40:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-19 22:47:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-04-20 07:57:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fxstatic-graphlib~master~Ie81b61e2f61678892ed8c81a8ae018ad42da9cff": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 10:00:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-20 12:02:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19184, "name": "Idan Hefetz", "email": "idan.hefetz@nokia.com", "username": "idan-hefetz"}, {"value": 1, "date": "2020-04-12 13:53:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "6231663488e1aef6d29274197cc34d79b14f4410", "unresolved": false, "patch_set": 5, "id": "5f3f37e8_bdc41f94", "line": 4, "range": {"start_line": 4, "start_character": 8, "end_line": 4, "end_character": 23}, "updated": "2020-04-11 15:06:05.000000000", "message": "remove, it's in project-config, see change https://review.opendev.org/#/c/716630/", "commit_id": "d8de620a3df2d1952aa8857d658658aef5801b30"}, {"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "1c130eb3b29d9b6f6b06c927b74d65da339196d9", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_62d5d2b9", "line": 4, "range": {"start_line": 4, "start_character": 8, "end_line": 4, "end_character": 23}, "in_reply_to": "5f3f37e8_bdc41f94", "updated": "2020-04-11 20:47:26.000000000", "message": "Done", "commit_id": "d8de620a3df2d1952aa8857d658658aef5801b30"}]}}, "starlingx%2Fupstream~master~I562886eef7473908ccfbd1c5baddf0c1fa23123a": {"owner_id": 28512, "owner_name": "Mario Alfredo Carrillo Arevalo", "owner_email": "mario.alfredo.c.arevalo@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28414, "name": "Austin Sun", "email": "austin.sun@intel.com", "username": "sunausti"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28470, "name": "Yan Chen", "email": "yan.chen@intel.com", "username": "chenyan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28512, "name": "Mario Alfredo Carrillo Arevalo", "email": "mario.alfredo.c.arevalo@intel.com", "username": "mcarril6"}], "comments": {"openstack/python-horizon/centos/stx-horizon.stable_docker_image": [{"author": {"_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, "change_message_id": "34d21ab55e91abf686530c9d5a07e333add5d5f0", "unresolved": false, "patch_set": 3, "id": "7faddb67_d9f763f5", "line": 36, "range": {"start_line": 32, "start_character": 32, "end_line": 36, "end_character": 89}, "updated": "2019-07-05 17:02:57.000000000", "message": "Ideally these lines (and the csrftoken line) are the only ones we should need to be adding to enable the fm panels of the plugin.  If this is the only way to get it working though then I suppose it's ok for now", "commit_id": "254c571b74e044b51c416d485735a7aab5350725"}, {"author": {"_account_id": 28512, "name": "Mario Alfredo Carrillo Arevalo", "email": "mario.alfredo.c.arevalo@intel.com", "username": "mcarril6"}, "change_message_id": "0291e22a5ccc1cf3bf5869e4c15107821bb353dd", "unresolved": false, "patch_set": 3, "id": "7faddb67_f1a593b6", "line": 36, "range": {"start_line": 32, "start_character": 32, "end_line": 36, "end_character": 89}, "in_reply_to": "7faddb67_d9f763f5", "updated": "2019-07-05 20:40:44.000000000", "message": "Hi Tyler,\n\nyeah, unfortunately after multiple tests, I could not avoid to include the extra modifications.", "commit_id": "254c571b74e044b51c416d485735a7aab5350725"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "9cfb6d803f6d4c880bf4ef0c91324e0f51c2f394", "unresolved": false, "patch_set": 4, "id": "7faddb67_39bc34ba", "line": 27, "range": {"start_line": 25, "start_character": 42, "end_line": 27, "end_character": 49}, "updated": "2019-07-10 18:08:08.000000000", "message": "This all seems very much like a hack to get things working. Why is it necessary to be modifying code in this image after installing it? Can we not make the appropriate changes to the dashboard? This is going to be an issue if we issue incremental patches to the image.\n\nThere must be a better way to do this.", "commit_id": "61f4efcbf42066796320416673dd18cfcba98568"}]}}, "openstack%2Fironic-python-agent-builder~master~I8d434f7f8412734a540b797255abb6391325f434": {"owner_id": 24828, "owner_name": "Kaifeng Wang", "owner_email": "kaifeng.w@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:17:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:25:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {"doc/source/admin/dib.rst": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "0f042de19f4bb6eac9b2fc03cef994f98c62a25f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_474b0f2a", "line": 145, "updated": "2020-04-18 10:03:38.000000000", "message": "s/have disabled/disable/", "commit_id": "2ed8156dbb56d0911aee1564bff619b6420032b5"}]}}, "openstack%2Fosprofiler~master~I76e01d55ff4d9095a6dbf520752042824225de73": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:21:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, {"value": 2, "date": "2020-04-20 08:56:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"osprofiler/tests/unit/test_initializer.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e59e257bb2ada9ede9b6034638a0cc0d830f9eea", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_42964b95", "line": 14, "updated": "2020-04-20 08:56:28.000000000", "message": "testtools is third party, iirc", "commit_id": "6a4d27f7b771e456928fe07a0c5f445484396fb0"}]}}, "openstack%2Fnetworking-bagpipe~master~I918131cff19f8ff6bc91bef45c849befc1284100": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-20 09:41:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}], "comments": {}}, "opendev%2Fsandbox~master~Ia6811af8fadc872016c4bed69a3a6fc231ddb23b": {"owner_id": 30905, "owner_name": "Harshavardhan Metla", "owner_email": "harshavardhan.metla@tcs.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 11:53:06.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30905, "name": "Harshavardhan Metla", "email": "harshavardhan.metla@tcs.com", "username": "harsha24"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30907, "name": "Triveni Gurram", "email": "triveni.gurram@tcs.com", "username": "triveni"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}], "comments": {}}, "openstack%2Fpanko~master~I470b83580d3f8040baf0cf1d4cf964713f151bdb": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:55:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fvitrage-dashboard~master~I5983a19cadb210d55c30107fb963cfeaae0f1ee9": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 16:02:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 2, "date": "2020-04-20 11:29:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 1, "date": "2020-04-18 19:15:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "b96283c0c7bb16ef2f6cce3a359a90e1afad5072", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_78d5f6e4", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 49}, "updated": "2020-04-20 11:29:59.000000000", "message": "It will be fixed on horizon side", "commit_id": "805d94e9853e43e3d9f35e0ede2f9ddaea26bc69"}]}}, "openstack%2Fopenstack-ansible-os_cinder~master~Ie3e2216cfb795a5646123f854cd92ec2a9a65102": {"owner_id": 31792, "owner_name": "Marcus Klein", "owner_email": "marcus.klein@open-xchange.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 14:52:22.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I729f2ed1db5d996b510448c5c9c4fbd0341b604b": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~I84f93888059ec09b182a03e751ade6810e133a29": {"owner_id": 22578, "owner_name": "Abhijeet Kasurde", "owner_email": "akasurde@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 09:10:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-13 18:46:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 22578, "name": "Abhijeet Kasurde", "email": "akasurde@redhat.com", "username": "akasurde"}], "comments": {"scripts/inventory/openstack.yml": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "312f682ca9cbebb514760b8b004c1ac7fb755f69", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86e1f29d", "updated": "2020-04-14 09:41:12.000000000", "message": "What exactly is this file doing? It looks like an example, but nothing in its name suggests that. Should we move it to somewhere like 'examples'?", "commit_id": "5576eea3ce636c67ed956fddc93e1e00042d5756"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "6c2cffc449cdbff70d75ad6e52f4c900e65d2059", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3226f8cf", "in_reply_to": "3f4c43b2_86e1f29d", "updated": "2020-04-19 15:49:26.000000000", "message": "It's mentioned here in comments: https://review.opendev.org/#/c/719429/1/scripts/inventory/openstack_inventory.py", "commit_id": "5576eea3ce636c67ed956fddc93e1e00042d5756"}]}}, "openstack%2Foctavia-dashboard~stable%2Fstein~I3d5102a73ace7f0ac563aa460d627772d7325427": {"owner_id": 31870, "owner_name": "Tamerlan Abu", "owner_email": "tamerlanabu@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31870, "name": "Tamerlan Abu", "email": "tamerlanabu@gmail.com", "username": "tabu"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Fpython-aodhclient~master~I7268264d3e2c98474604ec5f46298d36b7d32f18": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:52:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fconstellations~master~I4980bac7a558a291963270de592078f1a3af1111": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-18 19:17:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 10:47:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Foctavia-dashboard~master~I83687ed1476a9e413ca6a8a880dd31783450df67": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-17 09:58:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2019-10-23 02:35:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octavia_dashboard/static/dashboard/project/lbaasv2/workflow/model.service.spec.js": [{"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a8e82ad16839f876d06716de697faf3ed8215e36", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_84a1f0f9", "line": 353, "updated": "2019-10-11 23:15:02.000000000", "message": "I think we were looking into making this a certificate type (I forget if it's \"certificate\" or \"x509\" or what in Barbican, but there is definitely a way to make this more specific than listing every single Barbican secret, and we should probably do that filtering.", "commit_id": "acbaafbbce7c1f6e0323fd51c1476ab944d308cd"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "eb81c5fa1ffca7b0a26d381e98d31c0b42a4ee59", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a856fa28", "line": 353, "in_reply_to": "3fa7e38b_84a1f0f9", "updated": "2019-10-17 09:58:30.000000000", "message": "Our user cookbooks do not mention/make use of secret types and the default type (opaque) while not encouraged it works. We should support until \"opaque\" until we decide to deprecate it and eventually drop support.\n\n\"Used for backwards compatibility with previous versions of the API without typed secrets. New applications are encouraged to specify one of the other secret types.\"\n\nhttps://docs.openstack.org/barbican/latest/api/reference/secret_types.html", "commit_id": "acbaafbbce7c1f6e0323fd51c1476ab944d308cd"}]}}, "x%2Fvmware-nsx~master~I85d6d79bb8b6494efc27136f12db02fc120afa32": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:01:38.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmonasca-notification~master~I561ea633a09eb3d7468d2d55aa46d6fb3b2380ff": {"owner_id": 16222, "owner_name": "witek", "owner_email": "witold.bedyk@suse.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:43:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28062, "name": "Martin Chacon Piza", "email": "martin@chaconpiza.com", "username": "martinchacon"}, {"value": 2, "date": "2020-04-20 10:09:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}], "comments": {"monasca_notification/plugins/jira_notifier.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "25eb28a9db61bba1989df643e7a9aaf5549ff3e8", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_94a29c4a", "line": 20, "updated": "2020-04-15 12:52:21.000000000", "message": "pep8: H306  imports not in alphabetical order (six.moves.urllib, simplejson)", "commit_id": "7c153ecf74b3c57b9e93537a22fb4664df9d9309"}], "monasca_notification/plugins/slack_notifier.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "25eb28a9db61bba1989df643e7a9aaf5549ff3e8", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b49fd801", "line": 20, "updated": "2020-04-15 12:52:21.000000000", "message": "pep8: H306  imports not in alphabetical order (six.moves.urllib, simplejson)", "commit_id": "7c153ecf74b3c57b9e93537a22fb4664df9d9309"}]}}, "openstack%2Ftenks~stable%2F1.0~I8b550e5b5208afdf4c1aaa97ceaa5805238cb334": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 2, "date": "2020-04-20 09:52:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Fcharm-masakari~master~If26833be117d0c9a6d06a75ce50dc713a14ca44e": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 10:07:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24824, "name": "Dmitrii Shcherbakov", "email": "dmitrii.shcherbakov@canonical.com", "username": "dmitriis"}, {"value": 1, "date": "2020-04-20 08:54:15.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}], "comments": {}}, "opendev%2Firc-meetings~master~Iab18ad448d4d1dbc4e50dd7842cca0d3390164af": {"owner_id": 5263, "owner_name": "Jeremy Stanley", "owner_email": "fungi@yuggoth.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-16 20:59:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-04-20 09:40:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"meetingindex.jinja": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "e5c295860312ba4e136320e3ddbe57c5f7c1b868", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_dccb9050", "side": "PARENT", "line": 39, "updated": "2020-04-16 17:54:58.000000000", "message": "Yeah, this is a good point, thanks.", "commit_id": "5ab12c68f20f10423c5ea2fc33bf43470ca579ef"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "86cbb4ee6106c41c45ab37d6464c943a316d88bb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_127983fb", "line": 25, "updated": "2020-04-15 07:24:02.000000000", "message": "I'd rather keep this branded than so generic. How about\n\n\"OpenDev hosted IRC channels ...\"", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "e5c295860312ba4e136320e3ddbe57c5f7c1b868", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7cb51ccd", "line": 25, "updated": "2020-04-16 17:54:58.000000000", "message": "Technically they're not OpenDev hosted, they're Freenode hosted. They're OpenDev assisted, if we want to get particular about it. I mainly wanted to avoid making it look like we're implying that all IRC channels and meetings listed here are *about* OpenDev the collaboratory.", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, "change_message_id": "c09cb33e39f131291729d882b93ab6be5d8b630f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cdfdc03b", "line": 25, "in_reply_to": "3f4c43b2_127983fb", "updated": "2020-04-15 08:46:55.000000000", "message": "I like \"IRC channels\" as it's generic enough.", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "86cbb4ee6106c41c45ab37d6464c943a316d88bb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f27df7e7", "line": 29, "updated": "2020-04-15 07:24:02.000000000", "message": "dito", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, "change_message_id": "c09cb33e39f131291729d882b93ab6be5d8b630f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_adfaf43e", "line": 29, "in_reply_to": "3f4c43b2_f27df7e7", "updated": "2020-04-15 08:46:55.000000000", "message": "same", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "86cbb4ee6106c41c45ab37d6464c943a316d88bb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7269e723", "line": 38, "range": {"start_line": 38, "start_character": 81, "end_line": 38, "end_character": 100}, "updated": "2020-04-15 07:24:02.000000000", "message": "Make this \"for OpenStack usage questions\", too? Or is that overdoing it?", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, "change_message_id": "c09cb33e39f131291729d882b93ab6be5d8b630f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ed999c1f", "line": 38, "range": {"start_line": 38, "start_character": 81, "end_line": 38, "end_character": 100}, "in_reply_to": "3f4c43b2_7269e723", "updated": "2020-04-15 08:46:55.000000000", "message": "+1 to \"OpenStack usage questions\"\n\nI would actually also add #opendev and put it first in the \"main channels\" list", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "86cbb4ee6106c41c45ab37d6464c943a316d88bb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2736f15", "line": 39, "range": {"start_line": 39, "start_character": 85, "end_line": 39, "end_character": 109}, "updated": "2020-04-15 07:24:02.000000000", "message": "dito", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}, {"author": {"_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, "change_message_id": "c09cb33e39f131291729d882b93ab6be5d8b630f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4d9ff002", "line": 39, "range": {"start_line": 39, "start_character": 85, "end_line": 39, "end_character": 109}, "in_reply_to": "3f4c43b2_b2736f15", "updated": "2020-04-15 08:46:55.000000000", "message": "+1", "commit_id": "6a27fb296413b9d72e369e4f03a0dbedea599fc5"}]}}, "openstack%2Freleases~master~I6683e9375712e9587fb1c1ceb32c5097dc3cc3cb": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:16:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 09:22:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 1, "date": "2020-04-20 05:51:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Freleases~master~I6c6eb2297159bd9cc6675d3ec86c71ed2f7b79e9": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-04-20 09:13:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 09:22:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Freleases~master~I2b6d654f3f8e9a4370ea9c6ec9f62c5a54480d43": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:09:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 09:20:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"deliverables/ussuri/manila-ui.yaml": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "1e345d9f0910ad429d0527ac6ff4cd0bd4083d59", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4d26a5b9", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 19}, "updated": "2020-04-17 08:30:57.000000000", "message": "Hello,\n\nIn this release you dropped:\n- the support of python2.7 (3cd2fec)\n- the support of django 1.11 (dcf276d)\n\nSo I think you should release a major version (3.0.0) to highlight the break of the backward compat.", "commit_id": "917281046c7ee1aeb48b4dd9d871ab5e99f0cba8"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "92adca43be22a581250e4822470718a18b2ad7d7", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_163773e5", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 19}, "in_reply_to": "3f4c43b2_139dd058", "updated": "2020-04-18 22:31:18.000000000", "message": "Done now, thanks, Herv\u00e9", "commit_id": "917281046c7ee1aeb48b4dd9d871ab5e99f0cba8"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0d6e551706d02f7f3bca8fbee077691351f40e53", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_139dd058", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 19}, "in_reply_to": "3f4c43b2_4d26a5b9", "updated": "2020-04-17 18:33:55.000000000", "message": "Ack, makes sense. Will do - there's a cleanup patch Andreas Jaegar just proposed: https://review.opendev.org/#/c/720797/ to remove the vestiges of the python2.7 support; we'll merge that and I'll update this.", "commit_id": "917281046c7ee1aeb48b4dd9d871ab5e99f0cba8"}]}}, "openstack%2Freno~master~I8ca155bda0939524a4b5d940ac719655fde9fc92": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 09:28:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-04-19 12:18:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"reno/tests/test_config.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a8816c269e3314950bfd3113c3ae97195bf75bf1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f489d5b", "line": 27, "updated": "2020-04-19 11:59:44.000000000", "message": "pep8: E303 too many blank lines (3)", "commit_id": "7f63bcd5d050dc95d413f694b49595607ac40ca1"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I4ac4c441fea15b94151db1368cd4d32f2907d721": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~master~Ifb4decb2cf6023dcf026998c7515f850a4aee201": {"owner_id": 29071, "owner_name": "norman shen", "owner_email": "yshxxsjt715@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17386, "name": "Steve Noyes", "email": "steve.noyes@oracle.com", "username": "ssn1ssn"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1561, "name": "Russell Bryant", "email": "rbryant@redhat.com", "username": "russellb"}, {"value": -1, "date": "2020-04-19 15:02:33.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/compute/manager.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "b1e25c4096529f9f2346f748537ddff7cf5e4513", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_7246c0c2", "line": 7730, "range": {"start_line": 7726, "start_character": 0, "end_line": 7730, "end_character": 72}, "updated": "2020-04-19 15:02:33.000000000", "message": "Is this the actual issue here?", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "3294da73c8128e223232e394ddb2dc7bea32504e", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_328a78be", "line": 7730, "range": {"start_line": 7726, "start_character": 0, "end_line": 7730, "end_character": 72}, "in_reply_to": "3f4c43b2_7246c0c2", "updated": "2020-04-19 15:28:31.000000000", "message": "To answer my own question, no this isn't an issue, as the comment suggests when the connector is provided c-api will also call attachment_update for us.\n\nhttps://github.com/openstack/cinder/blob/99c09bddceca754b550955db7e6786686316d525/cinder/volume/api.py#L2171-L2177", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "3294da73c8128e223232e394ddb2dc7bea32504e", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_929b8c16", "line": 7788, "range": {"start_line": 7783, "start_character": 0, "end_line": 7788, "end_character": 70}, "updated": "2020-04-19 15:28:31.000000000", "message": "https://github.com/openstack/cinder/blob/99c09bddceca754b550955db7e6786686316d525/cinder/api/v3/attachments.py#L273-L292 \n\n^ If this isn't setting the volume to in-use then is there something wrong with c-api?", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, "change_message_id": "27fc91caaf61f2f9933d6c06392ad52bfc4a6d46", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_fb1f4b58", "line": 7788, "range": {"start_line": 7783, "start_character": 0, "end_line": 7788, "end_character": 70}, "in_reply_to": "3f4c43b2_52546421", "updated": "2020-04-20 01:11:11.000000000", "message": "then, I think it's better to remove it? I personally thought connection_info is pretty confusing...", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "bd9c9628b0db26f1b39320cc9a7ebbf742121dc3", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_52546421", "line": 7788, "range": {"start_line": 7783, "start_character": 0, "end_line": 7788, "end_character": 70}, "in_reply_to": "3f4c43b2_929b8c16", "updated": "2020-04-19 15:39:05.000000000", "message": "Ah sorry it's because bdm['connection_info'] isn't updated and the status field within the dict is still attaching.\n\nI don't think this is a valid issue tbh, we shouldn't be using the connection_info to track the status of the volume or it's attachments.", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "a10ae7c61a84bcae8585f327469e8e904cdb163e", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_0c5abc81", "line": 7788, "range": {"start_line": 7783, "start_character": 0, "end_line": 7788, "end_character": 70}, "in_reply_to": "3f4c43b2_fb1f4b58", "updated": "2020-04-20 07:20:20.000000000", "message": "Yeah, I can't see any use of this on the Nova side, assuming it's not used on the Cinder side we should remove it there.\n\nWhich volume backend are you using?", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "b1e25c4096529f9f2346f748537ddff7cf5e4513", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_b215e89e", "line": 7797, "range": {"start_line": 7797, "start_character": 0, "end_line": 7797, "end_character": 59}, "updated": "2020-04-19 15:02:33.000000000", "message": "Nope, we shouldn't be touching the state within the conncection_info like this.", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "3294da73c8128e223232e394ddb2dc7bea32504e", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_729080ee", "line": 7797, "range": {"start_line": 7797, "start_character": 0, "end_line": 7797, "end_character": 59}, "in_reply_to": "3f4c43b2_b215e89e", "updated": "2020-04-19 15:28:31.000000000", "message": "Additionally you shouldn't be relying on the status within the connection_info. I wonder why it's even stashed there tbh.", "commit_id": "2cb59f5d427c919c8012b72461c8442260ed836a"}]}}, "openstack%2Fneutron-vpnaas~master~Ie827780a950cf66030ee1a688674e66ca7f3479c": {"owner_id": 12860, "owner_name": "Dongcan Ye", "owner_email": "yedongcan@yeah.net", "labels": [{"value": 0, "_account_id": 12860, "name": "Dongcan Ye", "email": "yedongcan@yeah.net", "username": "yedongcan"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}, {"value": 2, "date": "2020-04-20 08:27:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-04-15 12:26:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-16 01:55:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15905, "name": "Cao Xuan Hoang", "email": "xuanhoangqb@gmail.com", "username": "hoangcx"}], "comments": {}}, "openstack%2Ftripleo-ci~master~I4684bce801b6af5fa416116424c339f73e6560d8": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29775, "name": "Sandeep Yadav", "email": "sandyada@redhat.com", "username": "sandeepyadav93"}, {"value": 2, "date": "2020-04-19 19:20:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "date": "2020-04-19 19:20:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": -1, "date": "2020-04-20 07:05:15.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"zuul.d/build-image.yaml": [{"author": {"_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, "change_message_id": "28d80ee46490830b9a34023d9cf0a1dc42169dab", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_925ba852", "line": 91, "range": {"start_line": 82, "start_character": 4, "end_line": 91, "end_character": 25}, "updated": "2020-04-17 08:25:01.000000000", "message": "https://opendev.org/openstack/tripleo-ci/src/branch/master/zuul.d/build-image.yaml#L9 tripleo-buildimage-overcloud-full-centos-7 is already defined for stable branches. We donot need to re-duplicate it. Zuul will automatically checkout stable/train branch for projects where this job is running and test it. Earlier it was not running, https://review.opendev.org/#/c/720575/ will enable c7 job for image build.", "commit_id": "cb6dda1f4cbbc451131d4770ddae179d78acf140"}]}}, "openstack%2Fos-ken~master~Ic6a9406023ae3a44a1d177e605859ac7eb276007": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 01:40:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-04-20 08:49:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fos-ken~stable%2Fussuri~I22fb09e2621ade9e269c6970155b62ca0cc31a5c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 08:55:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-11 20:06:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fos-ken~master~Ifb209347ec1748e143d1e93a5da8f40596cd0e39": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 01:41:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-04-20 08:48:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fosprofiler~master~I09e9c6970147ce1fe2880f1a2716268f69039c44": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"osprofiler/tests/unit/cmd/test_shell.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b9081e7e003cb3826fb0b58108b48937218440dc", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_013f2887", "line": 22, "updated": "2020-04-20 04:47:34.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "669483cea00ca36581c26b457eee9cb0b87c1402"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_42dbeb7a", "line": 22, "updated": "2020-04-20 08:58:00.000000000", "message": "This is a stdlib library and should be grouped above with json, os and sys", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/drivers/test_loginsight.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_82e1732d", "line": 19, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/drivers/test_redis_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b9081e7e003cb3826fb0b58108b48937218440dc", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_414c9041", "line": 18, "updated": "2020-04-20 04:47:34.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "669483cea00ca36581c26b457eee9cb0b87c1402"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e2d3175f", "line": 18, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_initializer.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b9081e7e003cb3826fb0b58108b48937218440dc", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21498430", "line": 14, "updated": "2020-04-20 04:47:34.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "669483cea00ca36581c26b457eee9cb0b87c1402"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_c2d89b7c", "line": 14, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_opts.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b9081e7e003cb3826fb0b58108b48937218440dc", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1431c12", "line": 17, "updated": "2020-04-20 04:47:34.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.fixture)", "commit_id": "669483cea00ca36581c26b457eee9cb0b87c1402"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_22ca1fa0", "line": 17, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_profiler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b9081e7e003cb3826fb0b58108b48937218440dc", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_815218dd", "line": 22, "updated": "2020-04-20 04:47:34.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "669483cea00ca36581c26b457eee9cb0b87c1402"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_02cf23b0", "line": 22, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_sqlalchemy.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_42c48b91", "line": 18, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto (just remove the newline above this)", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_utils.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a2bd8f03", "line": 21, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto (remove the newline)", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}], "osprofiler/tests/unit/test_web.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "74034dd6f1f33b627a4d36048407a1a9060a71c1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_82ba1307", "line": 16, "updated": "2020-04-20 08:58:00.000000000", "message": "ditto (insert a newline below this)", "commit_id": "ca9bfd8d5572134ea6117a6227f57deb81238c9c"}]}}, "openstack%2Fnova~stable%2Ftrain~I93e27d907a237ae16b6b4c7202ad157b067aa30e": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-20 09:05:14.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-01-15 10:00:48.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fos-ken~master~I8783d496616a77c3ec6d70c3295f3a17de0e7e80": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 01:40:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-04-20 08:49:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fcinder~master~Ia26fa9763efd329d0be62e2c418322056f5b086d": {"owner_id": 29620, "owner_name": "hjy", "owner_email": "821328772@qq.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-08 17:21:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": -1, "date": "2020-04-14 08:32:38.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29627, "name": "MacroSAN Volume CI", "email": "466367416@qq.com", "username": "hjy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29620, "name": "hjy", "email": "821328772@qq.com", "username": "lol"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/tests/unit/test_macrosan_drivers.py": [{"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "ff5da3af7f2d09d007119a22bc50d38e211230dd", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_40707273", "line": 825, "range": {"start_line": 825, "start_character": 8, "end_line": 825, "end_character": 68}, "updated": "2020-04-14 08:39:11.000000000", "message": "no assertions? no mocks?\nhow are you confirming this worked?", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "ff5da3af7f2d09d007119a22bc50d38e211230dd", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_002dca42", "line": 1102, "range": {"start_line": 1101, "start_character": 0, "end_line": 1102, "end_character": 68}, "updated": "2020-04-14 08:39:11.000000000", "message": "same", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}], "cinder/volume/drivers/macrosan/devop_client.py": [{"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_5f4a1255", "line": 490, "range": {"start_line": 490, "start_character": 41, "end_line": 490, "end_character": 44}, "updated": "2020-04-14 08:32:38.000000000", "message": "put is generally used for updating data and the method description says get initiator mapped port, could you explain this change?", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_3f47464e", "line": 514, "range": {"start_line": 514, "start_character": 41, "end_line": 514, "end_character": 44}, "updated": "2020-04-14 08:32:38.000000000", "message": "same", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_bff7d6f5", "line": 804, "range": {"start_line": 792, "start_character": 0, "end_line": 804, "end_character": 74}, "updated": "2020-04-14 08:32:38.000000000", "message": "i think most of the methods are self explanatory but would've been great if they had a docstring (like other methods) to specify the operation performed\nEg:\nhere cg_snapshot_enabled and enable_cg_snapshot seems like doing the same thing until we see method='get' and method='put'\nwe could've specified the GET and UPDATE operation in the docstring (but that's just my opinion).", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}], "cinder/volume/drivers/macrosan/driver.py": [{"author": {"_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, "change_message_id": "abf31fce1ab2b068c9a96ad5246ee6af1372f2a2", "unresolved": false, "patch_set": 2, "id": "df33271e_e951b764", "line": 77, "updated": "2020-03-23 12:21:36.000000000", "message": "driver is missing version and history.\n\nFor example,\nhttps://github.com/openstack/cinder/blob/master/cinder/volume/drivers/solidfire.py#L198-L228", "commit_id": "367ffbdca12b03d5db916a37d386f19d9c854080"}, {"author": {"_account_id": 29620, "name": "hjy", "email": "821328772@qq.com", "username": "lol"}, "change_message_id": "a3ec167e8a316e7355b952c3c2e2f4559436c55c", "unresolved": false, "patch_set": 2, "id": "df33271e_ec1377b7", "line": 77, "in_reply_to": "df33271e_e951b764", "updated": "2020-03-24 03:52:37.000000000", "message": "This file contains drivers for the iscsi and fc protocols. The specific version history is below.", "commit_id": "367ffbdca12b03d5db916a37d386f19d9c854080"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_df98e26b", "line": 109, "range": {"start_line": 109, "start_character": 34, "end_line": 109, "end_character": 69}, "updated": "2020-04-14 08:32:38.000000000", "message": "there isn't any delimeter separating the two fields, is it expected in this format?", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_7fe1ced0", "line": 376, "range": {"start_line": 376, "start_character": 31, "end_line": 376, "end_character": 57}, "updated": "2020-04-14 08:32:38.000000000", "message": "Maybe, 'Failed to enable replication:' but it's okay if it's understandable", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_df34624d", "line": 415, "range": {"start_line": 415, "start_character": 8, "end_line": 415, "end_character": 25}, "updated": "2020-04-14 08:32:38.000000000", "message": "which exception are we expecting here? KeyError\nif yes, we can rewrite this as,\nif volume.get('nvf_type'):\n    params['nvf_type'] = volume['nvf_type']\nelse:\n    <the code in exception block>", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_bfa3564f", "line": 422, "range": {"start_line": 421, "start_character": 0, "end_line": 422, "end_character": 45}, "updated": "2020-04-14 08:32:38.000000000", "message": "this doesn't seem needed as the default is already 'normal'", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_9f13fab8", "line": 425, "range": {"start_line": 425, "start_character": 8, "end_line": 425, "end_character": 41}, "updated": "2020-04-14 08:32:38.000000000", "message": "from the latest code, this condition will never occur.\nan untyped volume will be assigned the __DEFAULT__ volume type and will never have None type\n(and if it still does in any scenario, kindly let me know)", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_ffadde31", "line": 478, "range": {"start_line": 478, "start_character": 16, "end_line": 478, "end_character": 45}, "updated": "2020-04-14 08:32:38.000000000", "message": "is the nvf_type new way of knowing volume specifications?\nIf yes, there seems redundancy with these parameters (if not used anywhere else)\nparams['sdas'], params['replication_enabled'], params['replication_mode'] == 'async'", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_3f2bc694", "line": 604, "range": {"start_line": 604, "start_character": 17, "end_line": 604, "end_character": 35}, "updated": "2020-04-14 08:32:38.000000000", "message": "would be good to replace the dictionary reference with object referencing.\nCan be done in a separate refactoring patch.", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_7a7d5ce6", "line": 988, "range": {"start_line": 988, "start_character": 23, "end_line": 988, "end_character": 35}, "updated": "2020-04-14 08:32:38.000000000", "message": "will this key always exist?", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_9aef8886", "line": 1228, "range": {"start_line": 1228, "start_character": 12, "end_line": 1228, "end_character": 64}, "updated": "2020-04-14 08:32:38.000000000", "message": "we can remove this", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "0205892ead7c6e1a69f09f0944309d2202fd726a", "unresolved": false, "patch_set": 6, "id": "df33271e_0c280832", "line": 1231, "range": {"start_line": 1231, "start_character": 10, "end_line": 1231, "end_character": 53}, "updated": "2020-04-08 17:21:41.000000000", "message": "Should remove commented out code please.", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_000e6a33", "line": 1428, "range": {"start_line": 1428, "start_character": 12, "end_line": 1428, "end_character": 26}, "updated": "2020-04-14 08:32:38.000000000", "message": "i can't see this list used anywhere", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_5f77b23b", "line": 1586, "range": {"start_line": 1583, "start_character": 0, "end_line": 1586, "end_character": 42}, "updated": "2020-04-14 08:32:38.000000000", "message": "the initiator information can be directly fetched from os_brick, i don't see any reason of this method here.\n(also can't find this used anywhere)", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}], "releasenotes/notes/macrosan_driver_unsupported-b25f7a3b8270fa61.yaml": [{"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "98a3f59e9412518e5b1f26cbf6dd5bdea14789c3", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_4094f28b", "line": 1, "updated": "2020-04-14 08:32:38.000000000", "message": "We would need a new releasenote stating all the features that are supported now in the MacroSAN driver.", "commit_id": "535dd78748ee71c89b5bd37dd688bfddefc34fad"}]}}, "x%2Ftobiko~master~I789fcf0b638804dad74484e8b5f842965eac055f": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-20 05:37:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 31291, "name": "Eduardo Olivares", "email": "eolivare@redhat.com", "username": "eolivare"}, {"value": 2, "date": "2020-04-20 07:36:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-20 07:55:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {"tobiko/tests/faults/ha/cloud_disruptions.py": [{"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "f52c1b1a524112009d71a473cb6f16bb3d93ac2c", "unresolved": false, "patch_set": 3, "id": "df33271e_3c16ba56", "line": 22, "range": {"start_line": 22, "start_character": 0, "end_line": 22, "end_character": 65}, "updated": "2020-04-09 21:51:58.000000000", "message": "Hey :)\n\nyou can use topology.list_openstack_node_groups()\nto make this less static for instance if you had networker nodes: \n\n(undercloud) [stack@undercloud-0 ~]$ openstack server list -c Name -f value |paste -s\ncontroller-2\tcontroller-1\tcontroller-0\tcompute-1\tcompute-0\tdatabase-1\tdatabase-0\tdatabase-2\tnetworker-0\tnetworker-1\tmessaging-2\tmessaging-1\tmessaging-0\n\nIn [1]: from tobiko.openstack import topology \n   ...:                                                                                    \n\nIn [2]: topology.list_openstack_node_groups()                                              \n\n\nOut[2]: \n['undercloud',\n 'overcloud',\n 'controller',\n 'compute',\n 'database',\n 'networker',\n 'messaging']\n\n\nIn [3]: non_controlplane_groups = ['undercloud','compute','overcloud']                     \n\nIn [4]: controlplane_groups = [group for group in topology.list_openstack_node_groups() if \n   ...: group not in non_controlplane_groups]                                              \n\nIn [5]: controlplane_groups                                                                \nOut[5]: ['controller', 'database', 'networker', 'messaging']", "commit_id": "7a66a366b0b4eedc4d5365a29719055ff7e2f413"}, {"author": {"_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, "change_message_id": "5d60df61bdfe6e7b0767194e2ed8e2a0f2facf3d", "unresolved": false, "patch_set": 3, "id": "7f423b7e_adcb4970", "line": 22, "range": {"start_line": 22, "start_character": 0, "end_line": 22, "end_character": 65}, "in_reply_to": "df33271e_3c16ba56", "updated": "2020-04-11 07:24:46.000000000", "message": "Heya Pini,\n\nI think we should see what kind of groups we need in our osp tests and maybe create functions to return those nodes.\nAgree that, now that we have ovn we probably also want networker in there. Best if we can come up with some nice names.\nSay topology.list_control_plane_groups() or something like that?", "commit_id": "7a66a366b0b4eedc4d5365a29719055ff7e2f413"}]}}, "openstack%2Fkolla~master~Id4955dc547748ec5bf620fd106115a63ab3a6495": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 1, "date": "2019-02-07 11:47:28.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23717, "name": "Surya Prakash Singh", "email": "singh.surya64mnnit@gmail.com", "username": "SuryaPrakash"}, {"value": 1, "date": "2019-02-09 19:22:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23942, "name": "Matt Kucia", "email": "maciej@kucia.net", "username": "maciejkucia"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~Ide8cba32a0ea14086714094291f1a8866b669491": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fironic-python-agent~master~Idda0a78f63d5bc3e8c9e56e042630c8d28db2162": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:01:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:27:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~Ie208581d7ead1a1596e97f41bd87dcb5fd34b658": {"owner_id": 27822, "owner_name": "pengyuesheng", "owner_email": "pengyuesheng@gohighsec.com", "labels": [{"value": -1, "date": "2020-01-22 01:42:50.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": -1, "date": "2020-01-12 10:26:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {"setup.cfg": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "1fcd54d47d063002703910b266478f092e925366", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0ae37fa2", "line": 9, "updated": "2020-01-12 10:26:00.000000000", "message": "I'm not sure if we can do that in this repo. This repo is branchless and it has to be run for branches up to Rocky, where python 2.7 is still used (and that will not be changed for sure). For Queens we run tagged version of neutron-tempest-plugin, so this is fine at least.\n\nI would like Nate and Ghanshyam to take a look at it before we will move on with that.", "commit_id": "7358b2f633d73e6b72c9aa36cbd36074b5d82f08"}], "tox.ini": [{"author": {"_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, "change_message_id": "12440def9d89dc6f464c8ed68131999fa29d866e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_68f7c98d", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 20}, "updated": "2020-01-08 19:14:23.000000000", "message": "Better to use python-requires in setup.cfg instead. See here: https://review.opendev.org/#/c/701409/1/setup.cfg", "commit_id": "c0ef291516bc6e76c1893e85c207c947c87005c0"}]}}, "openstack%2Fbifrost~master~I22eb2dc7935b529301c3608ac81d6b60998014fb": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:57:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:05:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fsushy-cli~master~I1eb9f8744a93c3388de32cb705b0f6efbeb22556": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 10:06:36.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:22:49.000000000", "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fvirtualbmc~master~I2cdb74a8d3ce88c3b6d7b4f84b0aa0a990753ce5": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 10:06:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-20 08:19:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Ftacker~master~Ie95dc3b9a3e0d4a4df028d63c15afbf112f0db21": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"tacker/tests/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_41e810e1", "line": 29, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/api/test_v2_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_c12f003d", "line": 18, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/api/v1/test_vim.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_010d68e7", "line": 18, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, six)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/api/v2/test_api_v2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_61eb8cdb", "line": 19, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e12afc29", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/common/test_config.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_21f7c4d5", "line": 19, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/common/test_csar_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e1115c06", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, os)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/conductor/test_conductor_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_21e5040a", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, os)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/nfvo/drivers/vim/test_kubernetes_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_21206448", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/nfvo/drivers/vim/test_openstack_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_01dba84e", "line": 18, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/nfvo/test_nfvo_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_01260869", "line": 19, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, os)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/objects/test_vnf_package.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_81197823", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/test_alarm_receiver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_c106e0ce", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/test_context.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_4175b063", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_context.context)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_4123f056", "line": 20, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, six)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/test_wsgi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_6168ac86", "line": 21, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/tests/test_post_mortem_debug.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_c1d42023", "line": 19, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, six.moves)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/infra_drivers/openstack/test_openstack.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_81ee98ea", "line": 18, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, os)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/monitor_drivers/http_ping/test_http_ping.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a1d91458", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, six.moves.urllib.error)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/monitor_drivers/ping/test_ping.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_810058ad", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/monitor_drivers/zabbix/test_zabbix.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e1df9c37", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, tacker.vnfm.monitor_drivers.zabbix.zabbix)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/policy_actions/autoscaling/test_autoscaling.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_6116ecf3", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/policy_actions/log/test_log.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_c1bd40d9", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/policy_actions/respawn/test_respawn.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_2172247c", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/policy_actions/vdu_autoheal/test_vdu_autoheal.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a1347494", "line": 18, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/test_monitor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_41fad0bc", "line": 16, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/test_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_816b3883", "line": 20, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfm/test_vim_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_61fd4cb0", "line": 14, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, sqlalchemy.orm.exc)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}], "tacker/tests/unit/vnfpkgm/test_controller.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ae28f48102b69bc4d5bef731b09dfd864b2efb6b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a10bd4d3", "line": 17, "updated": "2020-04-20 04:49:13.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "d82efbc1d7953cc161c149ce3b74fc55a753fddb"}]}}, "openstack%2Ftrove~master~I7a281868b9579987fb9308badb9acab86d73f1bc": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"trove/tests/api/instances_resize.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_367545cc", "line": 17, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, novaclient.exceptions.badrequest)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/api/mgmt/instances_actions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96a9b925", "line": 16, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, novaclient.v2.servers.server)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/api/common/test_extensions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b66955fa", "line": 17, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/backup/test_backupagent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d664e124", "line": 17, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/common/test_crypto_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f66f5df9", "line": 18, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/guestagent/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_967ed9ac", "line": 16, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/guestagent/test_backups.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_767b4dbd", "line": 16, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/guestagent/test_couchbase_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76a6ad55", "line": 20, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.default)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/hacking/test_check.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5678d1c2", "line": 14, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, pycodestyle)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/taskmanager/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d64d019b", "line": 18, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.mock)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}], "trove/tests/unittests/trove_testtools.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "7fbaa2d1cb7d53c0a62b4e4b01ae37c7c5cfb93c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_166be9f0", "line": 18, "updated": "2020-04-20 05:24:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "c59b7867d9bc9bbdee3bc8a31fe4c4cd1cc9a4be"}]}}, "openstack%2Fmagnum~master~I17b7573f35796a5d4eede1e00bff310cc0583ddb": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"magnum/tests/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86906eef", "line": 21, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6c8b623", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, time)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_065a9e81", "line": 23, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/test_root.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_468ae6be", "line": 15, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_bay.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4605c645", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_baymodel.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_069d7e09", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_certificate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86e22e9f", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_cluster.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6ecd290", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_cluster_template.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06e8de79", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_types.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6f1d66d", "line": 18, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/controllers/v1/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e685f2d0", "line": 18, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/test_attr_validator.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26d99af2", "line": 18, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, novaclient.exceptions)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/test_hooks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0681fec3", "line": 19, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/test_servicegroup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26023a3e", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/api/test_validation.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a67f6ade", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.reload_module)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/cmd/test_db_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6f64a62", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/cert_manager/test_barbican.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_466e662f", "line": 21, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/cert_manager/test_cert_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6c48af6", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.fixture)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/cert_manager/test_local.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_864d0ec6", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/test_clients.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86fb4e45", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, neutronclient.v2_0.client)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/test_keystone.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a69bea15", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.fixture)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/test_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6bf165f", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/test_urlfetch.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6cdaa32", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2687dab7", "line": 23, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/common/x509/test_sign.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6a17248", "line": 22, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/common/test_trust_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66f8c248", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/test_cluster_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_664a82ac", "line": 21, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/test_k8s_cluster_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e65e9274", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/test_mesos_cluster_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06b61e8b", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/test_nodegroup_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6d332d4", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/handlers/test_swarm_cluster_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6680a1d", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/tasks/test_heat_tasks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06cf3e29", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, taskflow.engines)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/test_monitors.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66df22d6", "line": 19, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conductor/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46dca6e3", "line": 16, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/conf/test_conf.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6639641", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/drivers/test_heat_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46578659", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/drivers/test_template_definition.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6671e20c", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, neutronclient.common.exceptions)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_cluster.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_266b5a1e", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_cluster_template.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46b30699", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_federation.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c696f6f0", "line": 14, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_nodegroup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6ba126c", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_objects.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2654fa52", "line": 19, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_versionedobjects.exception)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/objects/test_x509keypair.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_668d62d2", "line": 17, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}], "magnum/tests/unit/test_hacking.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "06c3c60f32971e055526741a1a89bd61dedf96ac", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8674eeff", "line": 18, "updated": "2020-04-20 03:56:09.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, pycodestyle)", "commit_id": "228553e8679fff96d8cd9a9690c85144a96b31bb"}]}}, "openstack%2Fsenlin~master~Ib8a9bc92db1545c754d12a659762f1cce06669a7": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"senlin/tests/unit/api/common/test_wsgi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c62c3604", "line": 17, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/api/middleware/test_middleware_filters.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06e57edc", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_middleware.ssl)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/api/openstack/test_versions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06b0dedc", "line": 15, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/api/openstack/v1/test_clusters.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46d2e601", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/cmd/test_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66a722a9", "line": 13, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/cmd/test_engine.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86c34e38", "line": 13, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/cmd/test_health_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a61acac8", "line": 13, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_cluster_policy_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c690b646", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.utils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_node_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6b4d2d3", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.utils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_policy_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e61052ab", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.utils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_profile_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46fb0678", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.utils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_receiver_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26cfda56", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.utils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_sqlalchemy_types.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26ca3a4d", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/db/test_sqlalchemy_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26f87a79", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_462946e4", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_heat_v1.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86d86e1e", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_keystone_v3.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_464026a6", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_neutron_v2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a60c8aa5", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_nova_v2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_060c5e92", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, openstack.exceptions)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/drivers/test_sdk.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e69b3263", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, openstack.connection)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/actions/test_action_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6be4ab1", "line": 17, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/receivers/test_message.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06973e3c", "line": 15, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, socket)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/test_cluster.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66c0c22b", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/test_event.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6071682", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/test_health_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a695aa35", "line": 17, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/test_node.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8646aebf", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/engine/test_service.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6def60f", "line": 15, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/events/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46cdc664", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/events/test_database.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26a19a95", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/events/test_message.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86f18e98", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_action.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c615569e", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86aa2e6e", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_versionedobjects.base)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_event.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6e3ead8", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_fields.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06fe1e6a", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_health_registry.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66ee02b5", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_node.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6643a2b0", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_notification.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0633be63", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6e972b7", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_profile.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46a4a6a6", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/objects/test_receiver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6b9d6cc", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/profiles/test_nova_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66d562e5", "line": 16, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/test_common_messaging.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e602126f", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/test_common_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e637b24c", "line": 18, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/test_conf.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6312a5d", "line": 13, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslotest.base)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}], "senlin/tests/unit/test_hacking.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "cba2ade5c8c3f0be54b7bf68f0e94b5366238506", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_263d1a2b", "line": 14, "updated": "2020-04-20 03:52:46.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, pycodestyle)", "commit_id": "9500ae9ca5ac08f2daca22dcd261d35c61ab7267"}]}}, "openstack%2Fmanila~master~If8f9617fc35bfd084794f6bfcd80b1ca55c5edae": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}], "comments": {"manila/test.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1a260ae", "line": 29, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.lockutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/openstack/test_wsgi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_814698bf", "line": 15, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/test_extensions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1addc9b", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/test_versions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41d13023", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v1/test_scheduler_stats.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6199cc77", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v1/test_security_service.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1b4bcd3", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.urllib.parse)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v1/test_share_snapshots.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e19b1c63", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v1/test_share_types_extra_specs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a190f44b", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.strutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v1/test_shares.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61eeecb4", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_messages.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01fe086a", "line": 16, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_quota_class_sets.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61726c4b", "line": 25, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_quota_sets.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61c0ac2b", "line": 23, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_services.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21cea481", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_group_snapshots.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0133a863", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_group_type_specs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41a490a6", "line": 15, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.strutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_group_types.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8175f834", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_groups.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01b448f1", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_instances.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61c42c60", "line": 15, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_networks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1b83ce6", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.exception)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_replicas.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1867c13", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_snapshot_instances.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c18b801c", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_snapshots.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4196504e", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_share_types.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1a754bd", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/api/v2/test_shares.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01828800", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/cmd/test_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_412930e4", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/data/test_rpcapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41fbf077", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/db/migrations/alembic/test_migration.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1be34b1", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.test_base)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/db/sqlalchemy/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_414010a6", "line": 24, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, random)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/fake_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0197283c", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/network/linux/test_interface.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81f17898", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/network/neutron/test_neutron_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01a9e88e", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, neutronclient.common.exceptions)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/scheduler/drivers/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a10c74a5", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/scheduler/weighers/test_pool.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_417f7014", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/common/enas/fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81c7b864", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.units)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/common/enas/test_connector.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81c33838", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/common/enas/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1e3d4d8", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, ssl)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/common/enas/utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21f86479", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/isilon/test_isilon.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21ca244d", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/powermax/test_connection.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_213d042b", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/powermax/test_object_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1b9c0cc", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/unity/__init__.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_819cd86a", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, sys)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/unity/res_mock.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21cfc456", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/unity/test_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61438cb0", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.units)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/unity/test_connection.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21a18495", "line": 19, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.units)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/unity/utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c190a046", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/plugins/vnx/test_connection.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41d2d001", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/dell_emc/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01e568dc", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, stevedore.extension)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/hitachi/hnas/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e102fc6e", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/hitachi/hnas/test_ssh.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1dee00f", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/nexenta/ns4/test_nexenta_nas.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81d8581e", "line": 19, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/nexenta/ns5/test_jsonrpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01b0c8dc", "line": 26, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, requests)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/nexenta/ns5/test_nexenta_nas.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a131145d", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/quobyte/test_jsonrpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1070082", "line": 23, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/quobyte/test_quobyte.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1e95cb7", "line": 17, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/veritas/test_veritas_isa.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2193445d", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/windows/test_service_instance.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a11ab4c8", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/drivers/windows/test_winrm_helper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41cdb064", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/test_access.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_217ce41d", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, random)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81aa186e", "line": 22, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.propertymock)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/test_drivers_private_data.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1103cab", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/share/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c12c2004", "line": 23, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.lockutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_coordination.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61d54ce5", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, tooz.coordination)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_hacking.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1959435", "line": 21, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, pycodestyle)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1379c4c", "line": 20, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.importutils)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_quota.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c115409e", "line": 18, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_service.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61a70ca9", "line": 26, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}], "manila/tests/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d6b1a37568887bb180dcbed028e17b7bfb9de299", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_010c4892", "line": 23, "updated": "2020-04-20 04:49:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "9d673f9e54897eb93d5e5cca51bd79c53c668686"}]}}, "openstack%2Fneutron~master~I37fab65f1b574d4830153601b78ea504bbc7c81b": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}], "comments": {"neutron/tests/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9bf265f", "line": 30, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9c45af6", "line": 30, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09b62e8b", "line": 31, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.manager)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9bae26b", "line": 31, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l2/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0933ce63", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e937824c", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_494036a6", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_293dea2a", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l2/extensions/test_ovs_agent_qos_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc4e146e", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ac53c816", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/extensions/test_gateway_ip_qos_extension.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4c3de4c2", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2c3a18cb", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/framework.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_897ebeac", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_697b72bd", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/test_dvr_router.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0c7c7c70", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ec803049", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/test_ha_router.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49fb1678", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29f84a79", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/test_keepalived_state_change.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9328610", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import eventlet", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9373aff", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09390ef1", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e93dc2dd", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/test_legacy_router.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4c14c444", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2c117853", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/functional/agent/l3/test_namespace_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89a99e25", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69a6d255", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/openvswitch_firewall/test_rules.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9c8c623", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9cd7a32", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_bridge_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_891fdeb5", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.netutils)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_691c12c1", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_daemon.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_492956e4", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.exceptions)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29268a16", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_dhcp.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4c420440", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2c3fb8b4", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_external_process.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0c559cfa", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.fixture)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ec595035", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_interface.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49615605", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_295e8a43", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_ip_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89051e17", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6902520d", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_iptables_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0c6e3cc8", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ec72f0ac", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4c6b24b6", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2c6858b7", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_l3_tc_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09cf4e29", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9d302d4", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_tc_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89d87e1e", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69d532e5", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_496e762f", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, six)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_296b2a1e", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/linux/test_xenapi_root_helper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_090c6e92", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e91022ab", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/metadata/test_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc00d404", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ac058813", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/metadata/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_492676d0", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29232abf", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/windows/test_ip_lib.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89e23e9f", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netifaces)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69dff2d5", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/agent/windows/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c99606f1", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from eventlet", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a99bba15", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_099d8e09", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.exceptions)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9a14248", "line": 22, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/common/ovn/test_hash_ring_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc9c54c2", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_aca108fb", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test__utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8c336cf6", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6c30a0e9", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_db_base_plugin_v2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4c9964c2", "line": 23, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import eventlet", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2c969894", "line": 23, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8c8fec73", "line": 24, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6c8c207f", "line": 24, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_dvr_mac_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9644625", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a969faf9", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_extraroute_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0912ae62", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9166255", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_ipam_pluggable_backend.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_497836c3", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2975eacb", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_l3_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89c35e38", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69c0922b", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_l3_dvr_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8974feff", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6971b20c", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_ovn_hash_ring_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_490f9636", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_290cca3f", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_portsecurity_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49579659", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.port_security)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2954ca52", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_portsecurity_db_common.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89907eef", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.port_security)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_698d32d2", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_provisioning_blocks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_894d1ec6", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_694a52ac", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_rbac_db_mixin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8cb6cc3d", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6cb3804e", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/db/test_securitygroups_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4905d645", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29020a3e", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/extensions/test_expose_port_forwarding_in_fip.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8957de26", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.dns)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69541222", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/extensions/test_flavors.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89f19e98", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69eed2b4", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c92c4604", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a931fa5c", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/extensions/test_l3.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49d2f601", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29cfaa56", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/extensions/test_quotasv2_detail.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9f1e66d", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9f61a62", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/fake_resources.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9de0610", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.l3)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9e3bad8", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/notifiers/test_ironic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09810ec4", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import eventlet", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e985c2d0", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/objects/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c94d669b", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a9529a39", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09446e73", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9482288", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/objects/test_network_segment_range.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_096bcef0", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e96f82f9", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/objects/test_ports.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4cb04444", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2cadf8e8", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/objects/test_subnet.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8c488c5c", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6c454043", "line": 14, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/objects/test_trunk.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc7734a0", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.exceptions)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ac7c6883", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/agent/test_capabilities.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8c1a4c6c", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6c170047", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/l2pop/rpc_manager/test_l2population_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8c61acd6", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6c5ee012", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/linuxbridge/agent/test_arp_protect.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc85745c", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ac8aa866", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/linuxbridge/agent/test_linuxbridge_neutron_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4cde846d", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2cdb387c", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/macvtap/agent/test_macvtap_neutron_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c915669e", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.agent.topics)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a91a9ac8", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/extension_drivers/test_qos_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c97a86ef", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a97f3ade", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/agent/test_sriov_nic_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_498af6be", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2987aab7", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/mech_sriov/mech_driver/test_mech_sriov_nic_switch.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8946bebf", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_694372b0", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/openflow/native/ovs_bridge_test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0ca3dc01", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.importutils)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_eca7900a", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/ovs_test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0cf11c02", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.importutils)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ecf5d0ee", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/test_ovs_neutron_agent.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09e58edc", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9e942b7", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/plugins/ml2/drivers/openvswitch/agent/test_ovs_tunnel.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0c20fc9a", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ec24b0b1", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/scheduler/test_dhcp_agent_scheduler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c91ba67e", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a920daad", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/scheduler/test_l3_agent_scheduler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_095aae81", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.l3_ext_ha_mode)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e95e6274", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/scheduler/test_l3_ovn_scheduler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49b31699", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron.tests.base)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29b04a8a", "line": 18, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/logapi/test_logging_plugin.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c963a641", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.context)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a968da1c", "line": 17, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/trunk/drivers/linuxbridge/agent/test_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09e8ee79", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.callbacks.events)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9eca290", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/trunk/drivers/linuxbridge/agent/test_trunk_plumber.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49dcb6e3", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_29d96af2", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/trunk/drivers/openvswitch/agent/test_trunk_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ccea940d", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_acef481c", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/trunk/drivers/ovn/test_trunk_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0c075c1a", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ec0b1021", "line": 16, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/services/trunk/rpc/test_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_89fb5e45", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.definitions.portbindings)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_69f89248", "line": 15, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c9072682", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a90c5aa5", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_09fe2e6a", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.plugins.constants)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e902e26e", "line": 20, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_cc29f48a", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.api.attributes)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ac2e288f", "line": 19, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}], "neutron/tests/unit/test_wsgi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_892cfeac", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: H306  imports not in alphabetical order (unittest.mock, neutron_lib.db.api)", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aea2991408b9114fdc62ec3421debac9e89f262", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6929b299", "line": 21, "updated": "2020-04-20 06:30:34.000000000", "message": "pep8: I201 Missing newline before sections or imports.", "commit_id": "2327719c444b84d1f4e44348d1bf16646488f397"}]}}, "openstack%2Fdesignate~master~I6140ef843303dc15bdaeba343263bb8615d51473": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-manilaclient~master~I9b46f67791d1f7e7a8ee2b77bd5976faf02a56fb": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"manilaclient/tests/unit/common/test_httpclient.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6485288", "line": 15, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, re)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/osc/osc_fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8657ce26", "line": 17, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/osc/v2/fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6376aff", "line": 17, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, random)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/test_api_versions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46614605", "line": 17, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/test_shell.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6327610", "line": 19, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_265eba43", "line": 17, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, requests)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}], "manilaclient/tests/unit/v2/test_shell.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "852ca1395ed2a4308bc5f609546c409f95093a98", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66544222", "line": 22, "updated": "2020-04-20 04:03:50.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.strutils)", "commit_id": "9b0c34f3e67052e3265b2b896b84a7db5c5c4f05"}]}}, "openstack%2Fproject-config~master~Ia3714f7d6919b8cb4a0317abd0e927a716ea86a6": {"owner_id": 935, "owner_name": "James Page", "owner_email": "james.page@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:36:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}, {"value": 2, "date": "2020-04-17 08:18:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Frpm-packaging~stable%2Fstein~Idf3f75f3885f36fa2a77dec19922ebc4c8350882": {"owner_id": 26584, "owner_name": "hou le", "owner_email": "houl7@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 09:08:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 2, "date": "2020-04-20 07:45:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 1, "date": "2020-03-21 11:00:45.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-21 11:00:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Frpm-packaging~master~I4b5e019c2426461743a93dd0ea8def9e20c44143": {"owner_id": 7102, "owner_name": "Thomas Bechtold", "owner_email": "thomas.bechtold@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 08:01:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fproject-config~master~Icb5026ba4dfe7867fffd6bd5b06eee71acf4bce4": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:36:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-04-18 19:22:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 07:29:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Fproject-config~master~I48eb721bffafe2404a332192976848dba2ca80cc": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:26:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-04-20 07:09:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fmagnum~master~I5d1cf238511951ac4a1849ca66b74dc747865391": {"owner_id": 29425, "owner_name": "Diogo Guerra", "owner_email": "diogo.filipe.tomas.guerra@cern.ch", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 21:29:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 2, "date": "2020-04-17 13:21:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 0, "_account_id": 29425, "name": "Diogo Guerra", "email": "diogo.filipe.tomas.guerra@cern.ch", "username": "dioguerra"}, {"value": 0, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "1bf7cdc809ac212cc1882cad32031ba4cc11574f", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_82e7d712", "line": 7, "range": {"start_line": 7, "start_character": 6, "end_line": 7, "end_character": 47}, "updated": "2020-04-17 10:28:18.000000000", "message": "nit: This is more fitting of the commit description, we should at least mention the helm_client_tag. E.g. Introduce helm_client_tag label.", "commit_id": "4d77d4db9f122721251dd64060a48ca0b0201fd1"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "dd9650f35270a248ec5e6d84d75aadae977115f7", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_6c02600d", "line": 7, "range": {"start_line": 7, "start_character": 37, "end_line": 7, "end_character": 38}, "updated": "2020-04-20 07:39:04.000000000", "message": "For future reference, titles do not have punctuation.\n\neg:\n\nCOVID-19 spreads across all continents.", "commit_id": "06659759f1213df23f1d456503b1dd2ea8e90963"}]}}, "openstack%2Fwatcher~master~I78ac7a38fd1766c10a510949160b8d6cfade008c": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {"watcher/tests/api/test_hooks.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1059413", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/applier/test_rpcapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6130ace9", "line": 21, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e10b1c21", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/cmd/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e172fcac", "line": 23, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/cmd/test_applier.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_015568fa", "line": 23, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/cmd/test_db_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_811a186c", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/cmd/test_decision_engine.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21118453", "line": 23, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/common/test_cinder_helper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_213fc4b4", "line": 17, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, time)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/common/test_clients.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8148585c", "line": 25, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, monascaclient.client)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/conf/test_list_opts.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c17700a0", "line": 19, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/cluster/test_nova_cdmc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1595c35", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_resource_classes)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/datasources/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_216864b7", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/datasources/test_gnocchi_helper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0107281a", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/datasources/test_monasca_helper.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e124bcb1", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/loading/test_collector_loader.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_813338f6", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, stevedore.driver)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/loading/test_default_strategy_loader.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4142d03f", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, stevedore.extension)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/loading/test_goal_loader.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0120c89a", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, stevedore.extension)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/messaging/test_data_model_endpoint.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41149044", "line": 17, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/model/notification/test_cinder_notifications.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c129c08a", "line": 21, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/model/notification/test_notifications.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_416bf0b5", "line": 22, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/model/notification/test_nova_notifications.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c14ee06d", "line": 23, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/model/test_model.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a12e348f", "line": 20, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/decision_engine/test_rpcapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_016e08c8", "line": 18, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_413db0c2", "line": 14, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, requests)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/notifications/test_action_notification.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61170c47", "line": 17, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/notifications/test_action_plan_notification.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61454c43", "line": 17, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/notifications/test_audit_notification.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a17c7483", "line": 17, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/notifications/test_service_notifications.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_213a24cb", "line": 21, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}], "watcher/tests/objects/test_objects.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "14e32cfb9b8e754ba765c8e00ea31619d8de3cf2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a153d416", "line": 21, "updated": "2020-04-20 04:10:41.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_versionedobjects.base)", "commit_id": "6d38631a38473709747257cbcdb7702336fbcc61"}]}}, "openstack%2Fpython-pankoclient~master~Ib2a1770771096707f70e60d5ab1374e997f519eb": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:17:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftempest~master~I0058851ee5ae724be72a2edf65af09636078cba9": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"tempest/tests/api/compute/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36f705d6", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_960099ad", "line": 30, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76fd0db0", "line": 31, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d62fc13c", "line": 37, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b634b594", "line": 41, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16264969", "line": 43, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f62abd29", "line": 47, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5623b156", "line": 51, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3620a548", "line": 52, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9619b923", "line": 53, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7616adf3", "line": 55, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6d4e122", "line": 56, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6d95558", "line": 65, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16dbe94e", "line": 71, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6df5d37", "line": 77, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56e8d1e0", "line": 80, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36e5450a", "line": 81, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96eed9ea", "line": 82, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76eb4ddb", "line": 84, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6bd01d9", "line": 85, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6c2f557", "line": 92, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16b489f1", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6b8fde5", "line": 107, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56d1f122", "line": 108, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36cee581", "line": 109, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96c7f964", "line": 111, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76c4ed5f", "line": 118, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6a221ae", "line": 120, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6a795bd", "line": 128, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16a9298f", "line": 142, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6ad9d9b", "line": 159, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5696114e", "line": 160, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3693855d", "line": 162, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_969c196b", "line": 171, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76998d77", "line": 177, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_568a91be", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_368705b8", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslotest.base)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_969099ef", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_768d0dd2", "line": 58, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/cmd/test_account_generator.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_412650d0", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e13ddcdd", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_212344bf", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_config.cfg)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_812cd8ac", "line": 273, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6129cc99", "line": 274, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c11b807e", "line": 276, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a120f4ad", "line": 303, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01128862", "line": 304, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1167c55", "line": 306, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/cmd/test_cleanup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61542c22", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1326010", "line": 30, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a13754ff", "line": 31, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0139e8f0", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/cmd/test_run.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f610fdaa", "line": 23, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_160c8992", "line": 23, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5629f1e3", "line": 24, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, six)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3626e516", "line": 49, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_961ff9b5", "line": 55, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_761cedc0", "line": 61, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d67a21ef", "line": 68, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_168129c4", "line": 318, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b67f95de", "line": 318, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6859dd0", "line": 319, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_366b851e", "line": 339, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_566e112f", "line": 339, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96741900", "line": 340, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76718d0c", "line": 347, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b668351d", "line": 354, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6634141", "line": 354, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_165ac981", "line": 355, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f65e3d74", "line": 362, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36542553", "line": 369, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56573159", "line": 369, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_964d39c6", "line": 370, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_764a2dac", "line": 377, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6c86123", "line": 382, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16cf6929", "line": 385, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6cdd532", "line": 385, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6d3ddd3", "line": 386, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56dc51e3", "line": 393, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36d9c5f2", "line": 399, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76dfcdd5", "line": 402, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96e2599f", "line": 402, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6f1816d", "line": 403, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6f67562", "line": 410, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16e8097a", "line": 414, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56057145", "line": 417, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6ec7d90", "line": 417, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3602653e", "line": 418, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96fb7945", "line": 425, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76f86d48", "line": 431, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b69b1516", "line": 436, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d696a1f0", "line": 436, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_169da909", "line": 437, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6a11d48", "line": 444, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/cmd/test_verify_tempest_config.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93a9cb25", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33b0b78a", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73a6bf55", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d364f324", "line": 91, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b36967fa", "line": 105, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_136bfbf0", "line": 119, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f36f6ff9", "line": 144, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5378e3c2", "line": 149, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_337557cc", "line": 152, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_937eebac", "line": 158, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_737b5fbd", "line": 161, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d34d139b", "line": 165, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b352073a", "line": 173, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13449b73", "line": 174, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3480f88", "line": 181, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53610305", "line": 189, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_335ef743", "line": 190, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93570b27", "line": 197, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7354ff21", "line": 205, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3323310", "line": 206, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b337a7ff", "line": 213, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13393bf1", "line": 221, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f33dafdd", "line": 222, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_532623d0", "line": 233, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_332397bf", "line": 234, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_932c2bad", "line": 237, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73299f99", "line": 249, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d31b537e", "line": 250, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b32047ae", "line": 253, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1312db62", "line": 268, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3164f55", "line": 269, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_530f4336", "line": 274, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_330c3740", "line": 288, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93054b17", "line": 289, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73023f0d", "line": 294, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6006104", "line": 306, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b605d513", "line": 307, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1607691a", "line": 332, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f60bdd20", "line": 333, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56145144", "line": 351, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3611c553", "line": 352, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_961a596c", "line": 371, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7617cd46", "line": 372, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d629818a", "line": 398, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b62e758f", "line": 399, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1620099b", "line": 417, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6247db1", "line": 418, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_563d71c2", "line": 436, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_363a65cb", "line": 437, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_963379f6", "line": 462, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76306de9", "line": 463, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d64ea16d", "line": 481, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6531517", "line": 482, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1655a9fa", "line": 502, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6591d35", "line": 503, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5642913f", "line": 528, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_363f05b5", "line": 529, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9648995c", "line": 547, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76450d43", "line": 548, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d677c19f", "line": 593, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b67cb583", "line": 611, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_166e49c8", "line": 619, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/common/test_compute.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73c4ff5f", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93c70b65", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before from six.moves.urllib", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3a233ae", "line": 27, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3a7a7bd", "line": 48, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13a93b8f", "line": 49, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3adaf9b", "line": 55, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5396234e", "line": 56, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3393975d", "line": 68, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_939c2b6b", "line": 69, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73999f77", "line": 94, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d38b531c", "line": 95, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/common/test_credentials_factory.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4105b045", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2102243e", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_config.cfg)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81fb3845", "line": 71, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61f8ac48", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c196e0f0", "line": 99, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a19bd415", "line": 120, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_019d6809", "line": 121, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1a15c48", "line": 150, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_418ad0be", "line": 151, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2187c4b7", "line": 172, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_819058ef", "line": 192, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_618d4cd2", "line": 200, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1bf005f", "line": 216, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1c474f6", "line": 220, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01b6088b", "line": 227, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1bafc6b", "line": 242, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41b3f098", "line": 262, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/common/test_waiters.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13b01bdd", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3b48fd3", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_utils.fixture.uuidsentinel)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53cd8364", "line": 31, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33ca774d", "line": 67, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93c38b38", "line": 73, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73c07f2b", "line": 83, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3deb30f", "line": 84, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3e327d9", "line": 88, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13e5bbdc", "line": 97, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3e92fb7", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53d2a301", "line": 106, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33cf1757", "line": 116, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93d8ab1e", "line": 117, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73d51fe5", "line": 121, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d307d381", "line": 130, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b30cc7a5", "line": 131, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13fe5b6a", "line": 150, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f302cf6e", "line": 151, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53fbc377", "line": 160, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33f8b779", "line": 163, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93f1cb98", "line": 167, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73eebfb4", "line": 176, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d32cf303", "line": 179, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b331675d", "line": 183, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1333fb63", "line": 191, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5340e3a5", "line": 195, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3376f4c", "line": 195, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_333d572b", "line": 196, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9346ebbf", "line": 196, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73435fb0", "line": 197, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d315139e", "line": 197, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b31a07c9", "line": 199, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_130c9b92", "line": 203, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3100fab", "line": 208, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_532903e4", "line": 214, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3326f716", "line": 215, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_931f0bb6", "line": 218, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_731cffc0", "line": 222, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d37a33ef", "line": 227, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b37fa7de", "line": 233, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13813bc4", "line": 234, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f385afd0", "line": 241, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_536e232f", "line": 243, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_336b971e", "line": 252, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93742b00", "line": 253, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73719f0c", "line": 254, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3635341", "line": 257, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b368471d", "line": 260, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_135adb81", "line": 272, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f35e4f74", "line": 274, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/common/utils/test_net_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3a167fb", "line": 13, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13a3fb01", "line": 33, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/cli/test_execute.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53e8e3e0", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33e5570a", "line": 25, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93eeebea", "line": 47, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73eb5fdb", "line": 69, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3bd13d9", "line": 87, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3c20758", "line": 95, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13b49bf1", "line": 112, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3b80fe6", "line": 129, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53d10323", "line": 137, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33cef781", "line": 145, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/test_cred_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3a76f0a", "line": 14, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53b0e343", "line": 23, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33ad57e9", "line": 24, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93b6eb3d", "line": 25, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73b35f4e", "line": 26, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d385135c", "line": 50, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b38a0767", "line": 51, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_137c9b70", "line": 52, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3800f49", "line": 53, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_539903c2", "line": 54, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/test_dynamic_creds.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_167c8970", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b68af566", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f680fd48", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_config.cfg)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5699f1c1", "line": 179, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3696e594", "line": 193, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_968ff973", "line": 200, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_768ced7e", "line": 204, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6ea210d", "line": 208, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6ef951c", "line": 215, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16f12902", "line": 222, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6f59dee", "line": 226, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56de116d", "line": 243, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36db857c", "line": 280, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96e4193e", "line": 294, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76e18d2a", "line": 304, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6d3415f", "line": 307, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6d8357b", "line": 310, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16cac99f", "line": 325, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6ce3db2", "line": 353, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56c73197", "line": 399, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36c42591", "line": 401, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96bd3904", "line": 403, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76ba2d0a", "line": 409, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d63861a1", "line": 414, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b63dd590", "line": 466, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_163f6987", "line": 494, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f643dd11", "line": 522, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_564c5141", "line": 539, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3649c530", "line": 542, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_965259dd", "line": 545, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_764fcd33", "line": 560, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d66181ab", "line": 580, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b66675c0", "line": 600, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_165809f8", "line": 659, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f65c7dee", "line": 662, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56757163", "line": 664, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3672657c", "line": 669, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_966b7983", "line": 669, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/test_preprov_creds.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6dea10f", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6e315d9", "line": 20, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, six)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16e5a9dc", "line": 148, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6e91db7", "line": 148, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36cf0557", "line": 161, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56d29101", "line": 161, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96d8991e", "line": 170, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76d50de5", "line": 181, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d607c181", "line": 181, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b60cb5a5", "line": 190, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16fe496a", "line": 200, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f602bd6e", "line": 200, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56fbb177", "line": 205, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36f8a579", "line": 221, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96f1b998", "line": 221, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76eeadb4", "line": 226, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d62ce103", "line": 228, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b631555d", "line": 247, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1633e963", "line": 342, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/test_profiler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3396f794", "line": 13, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_938f0b74", "line": 14, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, testtools)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_738cff7e", "line": 25, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3ea330d", "line": 26, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3efa71c", "line": 51, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/test_validation_resources.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76a7cda8", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96aa596e", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6b981cc", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, testtools)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6be75b1", "line": 105, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16b009dd", "line": 134, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6b47dd3", "line": 299, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56cd7164", "line": 323, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36ca654d", "line": 324, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/utils/linux/test_remote_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3320b748", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9319cb23", "line": 32, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7316bff3", "line": 39, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3d4f322", "line": 45, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3d96758", "line": 46, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13dbfb4e", "line": 57, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3df6f37", "line": 58, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/common/utils/test_test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1697693c", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f69bdd62", "line": 78, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56a451a6", "line": 149, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36a1c595", "line": 204, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/compute/test_base_compute_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93e42b3e", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73e19f2a", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3d3535f", "line": 46, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3d8477b", "line": 55, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13cadb9f", "line": 169, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3ce4fb2", "line": 203, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/compute/test_servers_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73dfdfd5", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3f1936d", "line": 208, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3f68762", "line": 945, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13e81b7a", "line": 946, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3ec8f90", "line": 950, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53058345", "line": 951, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3302773e", "line": 964, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93fb8b45", "line": 965, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73f87f48", "line": 969, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d396b3f0", "line": 970, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b39b2716", "line": 984, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_139dbb09", "line": 985, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3a12f48", "line": 994, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_538aa3be", "line": 995, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_338717b8", "line": 999, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9390abef", "line": 1000, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_738d1fd2", "line": 1014, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3bfd35e", "line": 1015, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3c4c7f6", "line": 1019, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13b65b8b", "line": 1020, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3bacf6b", "line": 1035, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53b3c398", "line": 1036, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/compute/test_services_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_21b0648a", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_81a97825", "line": 78, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61a6ec55", "line": 174, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c1642025", "line": 175, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a16914fa", "line": 179, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_016ba8f0", "line": 180, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e16f9cf9", "line": 184, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_417810c3", "line": 185, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_217504cc", "line": 190, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_817e98ac", "line": 191, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_617b8cbd", "line": 197, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c14d409b", "line": 198, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a152b439", "line": 202, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01444873", "line": 203, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1483c88", "line": 207, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_41613005", "line": 208, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_215ea443", "line": 212, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8157b826", "line": 213, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/identity/v2/test_token_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6375d4c", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5640d1a5", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_363d452b", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9646d9bf", "line": 61, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76434db0", "line": 86, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d615019e", "line": 90, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b61af5c8", "line": 102, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/identity/v3/test_token_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d68b411c", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b690354c", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1682c900", "line": 36, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6863d13", "line": 63, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_567f3114", "line": 104, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_367c251e", "line": 135, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96753935", "line": 140, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76722d4b", "line": 151, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/network/test_base_network_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33f717d6", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9300abad", "line": 32, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73fd1fb0", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d32fd33c", "line": 52, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b334c794", "line": 68, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13265b69", "line": 82, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/network/test_security_group_rules_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a1f63462", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_01e8c879", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e1ecbc90", "line": 90, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/network/test_security_groups_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13f13b02", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3f5afee", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53de236d", "line": 99, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33db977c", "line": 130, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/object_storage/test_object_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76686d86", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d606a1ce", "line": 34, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b60b15d4", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_160da9e7", "line": 42, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6111d06", "line": 56, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56fa91bc", "line": 88, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/test_clients.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13cf7b29", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3cde732", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: I100 Import statements are in the wrong order. from unittest should be before import fixtures", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3d3efd3", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, six)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53dc63e3", "line": 135, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33d9d7f2", "line": 153, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93e26b9f", "line": 173, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/volume/v3/test_services_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53574359", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33543753", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_934d4bc6", "line": 102, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_734a3fac", "line": 124, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3c87323", "line": 147, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/volume/v3/test_snapshot_manage_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d6906146", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b695d535", "line": 66, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/volume/v3/test_transfers_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f672bdac", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_566bb1b5", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_serialization.jsonutils)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3668a5b7", "line": 66, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9661b9d6", "line": 87, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/services/volume/v3/test_volume_manage_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96c37938", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76c06d2b", "line": 94, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/test_decorators.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_765ead12", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d69ce1c1", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, six)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b6a155fb", "line": 220, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_16a3e901", "line": 241, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f6a75d0a", "line": 245, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_56b0d143", "line": 259, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_36ad45e9", "line": 263, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_96b6d93d", "line": 273, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_76b34d4e", "line": 277, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d685015c", "line": 292, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/lib/test_ssh.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_410f7036", "line": 17, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_210ce43f", "line": 18, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, six)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8105f816", "line": 32, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_61026c0d", "line": 33, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3007304", "line": 35, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b305e713", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13077b1a", "line": 42, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f30bef20", "line": 50, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53146344", "line": 61, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3311d753", "line": 69, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_931a6b6c", "line": 70, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7317df46", "line": 86, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d329938a", "line": 91, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13201b9b", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b32e878f", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3248fb1", "line": 100, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_533d83c2", "line": 101, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_333a77cb", "line": 115, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93338bf6", "line": 116, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73307fe9", "line": 130, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d34eb36d", "line": 137, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3532717", "line": 163, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1355bbfa", "line": 171, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3592f35", "line": 189, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5342a33f", "line": 226, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_333f17b5", "line": 227, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9348ab5c", "line": 228, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73451f43", "line": 229, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d377d39f", "line": 246, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b37cc783", "line": 250, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_136e5bc8", "line": 262, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f372cfac", "line": 266, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_536bc3b5", "line": 287, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3368b7b7", "line": 288, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9361cbd6", "line": 289, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_735ebf12", "line": 298, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d39cf3c1", "line": 299, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/test_base_test.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53c74397", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33c43791", "line": 16, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_config.cfg)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93bd4b04", "line": 38, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73ba3f0a", "line": 39, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d33873a1", "line": 40, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b33de790", "line": 42, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_133f7b87", "line": 43, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f343ef11", "line": 54, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_534c6341", "line": 55, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3349d730", "line": 56, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93526bdd", "line": 57, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_734fdf33", "line": 58, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d36193ab", "line": 59, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b36687c0", "line": 64, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13581bf8", "line": 65, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f35c8fee", "line": 81, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53758363", "line": 82, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3372777c", "line": 83, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_936b8b83", "line": 86, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73687f86", "line": 87, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d306b3ce", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b30b27d4", "line": 99, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_130dbbe7", "line": 100, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3112f06", "line": 103, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53faa3bc", "line": 104, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/test_imports.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f32acf29", "line": 15, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5323c356", "line": 27, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}], "tempest/tests/test_test.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b390474c", "line": 19, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F401 'unittest.moc' imported but unused", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1382db00", "line": 20, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.moc, oslo_config.cfg)", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f3864f13", "line": 83, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_537f4314", "line": 92, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_337c371e", "line": 98, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93754b35", "line": 123, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73723f4b", "line": 145, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3907346", "line": 147, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b395e735", "line": 251, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_13977b3c", "line": 252, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f39bef62", "line": 280, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_53a463a6", "line": 282, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_33a1d795", "line": 283, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_93aa6b6e", "line": 382, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_73a7dfa8", "line": 397, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d3b993cc", "line": 438, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "ab648dcd9c8253532f3efc66bb429918e53218b4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b3be87b1", "line": 492, "updated": "2020-04-20 05:19:42.000000000", "message": "pep8: F821 undefined name 'mock'", "commit_id": "d9211c44dc26ec86f6aa4c40ba1f10d5e56c81a3"}]}}, "openstack%2Fmurano~master~Id266a937b37507a1cef05ac34e33a80265581ad1": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 07:10:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fceilometermiddleware~master~I64f6f5df4d82faef205e5019be5a41c1b1f1f1fa": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 06:08:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpanko~master~I92f240b2b2fbb8a0a7ac188ff9bed8b0d11209b3": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 06:10:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmistral~master~I6a4524c3e0458747646995615535e85cde2e155f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 20:47:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 2, "date": "2020-04-20 05:47:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}], "comments": {}}, "openstack%2Fpython-mistralclient~master~Ia6c5910a2e37d5f53e194f4cefdf57dae4dde5b2": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 19:20:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 2, "date": "2020-04-20 05:44:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}], "comments": {}}, "openstack%2Ftacker-specs~master~I0c9f7ae65a8e1c1d7fec77e3958c54324213158b": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 19644, "name": "Yan Xing an", "email": "yanxingan@cmss.chinamobile.com", "username": "yanxingan"}, {"value": 2, "date": "2020-04-14 13:28:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "_account_id": 16511, "name": "Bob Haddleton", "email": "bob.haddleton@nokia.com", "username": "bobh"}, {"value": 0, "_account_id": 2874, "name": "yong sheng gong", "email": "gong.yongsheng@99cloud.net", "username": "gongysh"}, {"value": 1, "date": "2020-04-14 09:46:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-20 06:13:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 0, "_account_id": 13380, "name": "Sridhar Ramaswamy", "email": "srics.r@gmail.com", "username": "srics-r"}], "comments": {}}, "openstack%2Fnova-specs~master~If2a5ec0e1c08d3a5d86f5cf1ba597611b3139774": {"owner_id": 11604, "owner_name": "sean mooney", "owner_email": "smooney@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23488, "name": "Helena", "email": "helena.mcgough@intel.com", "username": "hfm"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18051, "name": "David Shaughnessy", "email": "david.shaughnessy@intel.com", "username": "davidsha"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26490, "name": "Jason SUN", "email": "sunjia@inspur.com", "username": "sunjia"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": -1, "date": "2019-07-02 22:55:02.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30192, "name": "Tony Su", "email": "tao.su@intel.com", "username": "tsu5"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30001, "name": "Ivens Zambrano", "email": "ivens.zambrano@intel.com", "username": "IvensZambrano"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "16f71f5158e461e6fc250798d603b8639221d751", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_5b7708a1", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 26}, "updated": "2019-07-02 13:39:45.000000000", "message": "Can you reformat this when you have time?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}], "specs/train/approved/libvirt-pqos.rst": [{"author": {"_account_id": 18051, "name": "David Shaughnessy", "email": "david.shaughnessy@intel.com", "username": "davidsha"}, "change_message_id": "0a3ea4855f93c848f2f6620553e48cfdfdde3144", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_8582d5c7", "line": 11, "range": {"start_line": 11, "start_character": 7, "end_line": 11, "end_character": 15}, "updated": "2019-06-04 16:06:02.000000000", "message": "I think this should be \"real time\" or \"real-time\".\nI don't think it's meant to be one word.\nBut this is a nit.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_449a9614", "line": 11, "range": {"start_line": 11, "start_character": 7, "end_line": 11, "end_character": 15}, "in_reply_to": "9fb8cfa7_8582d5c7", "updated": "2019-06-17 09:33:50.000000000", "message": "Done", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_3ccc7b88", "line": 13, "range": {"start_line": 13, "start_character": 42, "end_line": 13, "end_character": 45}, "updated": "2019-06-03 08:49:05.000000000", "message": "Enhanced Platform Awareness?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "c36dce444f4eedd9079691f25f032ab3657f837b", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_27945b44", "line": 13, "range": {"start_line": 13, "start_character": 42, "end_line": 13, "end_character": 45}, "in_reply_to": "9fb8cfa7_3ccc7b88", "updated": "2019-06-04 14:11:20.000000000", "message": "yes", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 18051, "name": "David Shaughnessy", "email": "david.shaughnessy@intel.com", "username": "davidsha"}, "change_message_id": "0a3ea4855f93c848f2f6620553e48cfdfdde3144", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_65f6c192", "line": 27, "range": {"start_line": 27, "start_character": 33, "end_line": 27, "end_character": 38}, "updated": "2019-06-04 16:06:02.000000000", "message": "The noisy", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_8e2d51ff", "line": 55, "range": {"start_line": 52, "start_character": 73, "end_line": 55, "end_character": 11}, "updated": "2019-05-31 11:02:05.000000000", "message": "So the discussion of more details of memory bandwidth limits will be kicked off later, right?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_3153646d", "line": 55, "range": {"start_line": 52, "start_character": 73, "end_line": 55, "end_character": 11}, "in_reply_to": "bfb3d3c7_8e2d51ff", "updated": "2019-05-31 12:34:33.000000000", "message": "well this spec contains the details need for the implementation of memory bandwidth limit too.\nthe intent of this is that if we only have time to land one of the two feature we complete cache allocation first since we have at least 1 customer asking for that but we have 0 customer asking for memory bandwith limts yet but its a closely related feature and is trivial to add. since we expect that to be there next request once cache allocation is implemeted i think we should also support it now rather then wait.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_1ca2d79b", "line": 66, "range": {"start_line": 66, "start_character": 0, "end_line": 66, "end_character": 1}, "updated": "2019-06-03 08:49:05.000000000", "message": "D", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_fcc10330", "line": 90, "range": {"start_line": 90, "start_character": 70, "end_line": 90, "end_character": 77}, "updated": "2019-06-03 08:49:05.000000000", "message": "supports", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 18051, "name": "David Shaughnessy", "email": "david.shaughnessy@intel.com", "username": "davidsha"}, "change_message_id": "0a3ea4855f93c848f2f6620553e48cfdfdde3144", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_800f232d", "line": 91, "range": {"start_line": 91, "start_character": 64, "end_line": 91, "end_character": 66}, "updated": "2019-06-04 16:06:02.000000000", "message": "in", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 18051, "name": "David Shaughnessy", "email": "david.shaughnessy@intel.com", "username": "davidsha"}, "change_message_id": "0a3ea4855f93c848f2f6620553e48cfdfdde3144", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_60122f5b", "line": 91, "range": {"start_line": 91, "start_character": 50, "end_line": 91, "end_character": 52}, "updated": "2019-06-04 16:06:02.000000000", "message": "on", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_9cdc8719", "line": 93, "range": {"start_line": 93, "start_character": 55, "end_line": 93, "end_character": 63}, "updated": "2019-06-03 08:49:05.000000000", "message": "instances", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_ce9ca96b", "line": 127, "range": {"start_line": 127, "start_character": 4, "end_line": 127, "end_character": 24}, "updated": "2019-05-31 11:02:05.000000000", "message": "'hw:numa_cache' represents the total cache ways of the instance, that is, each NUMA node in this case will have 2 cache ways. \nDoes 'hw:numa_bandwidth' means each NUMA node of the instance will be reserved 5% memory bandwidth?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_71eb1c77", "line": 127, "range": {"start_line": 127, "start_character": 4, "end_line": 127, "end_character": 24}, "in_reply_to": "bfb3d3c7_ce9ca96b", "updated": "2019-05-31 12:34:33.000000000", "message": "i was thinking of defineing it that it would not be devided but since all the other hw:numa_* values are deived by hw:numa_nodes to determin the amount per numa node its better to be consitent so ill update this to 20 to be consitent.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_2ea0e58f", "line": 152, "range": {"start_line": 151, "start_character": 63, "end_line": 152, "end_character": 73}, "updated": "2019-05-31 11:02:05.000000000", "message": "Who introduced the limitation of 'the minimum allocation size of cache if specified is two cacheways per NUMA node'? \nHardware, kernel, libvirt or introduced by this spec?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "c36dce444f4eedd9079691f25f032ab3657f837b", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_7b9f3e50", "line": 152, "range": {"start_line": 151, "start_character": 63, "end_line": 152, "end_character": 73}, "in_reply_to": "9fb8cfa7_99e81917", "updated": "2019-06-04 14:11:20.000000000", "message": "@huachang\nright as i said above in my previous respoce we will use the value from libvirt however we will need to call this out in doucmentation so that operator can understand how to correctly create flavors.\n\n@alex\nright so libvirt does not allows us to directly set the cat mask which is unfortunate as it really is not a good map to hardware. that means that we cannoth deal with fragmentation in nova.\n\nthe only approach i can think of to address the fragmentation would be to limit the min and max unit to be the same value in placement as such each vm would only be able to consume 1 allocation of the minimum available and there for we should not have to deal with fragmentation.\n\nthat is a fairly severe restiction but since we cannot select which cacheways to assign as we would with cpu pinning there is no other way to achive this via the api presented via libvirt.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_d4b6763e", "line": 152, "range": {"start_line": 151, "start_character": 63, "end_line": 152, "end_character": 73}, "in_reply_to": "bfb3d3c7_2ea0e58f", "updated": "2019-05-31 12:34:33.000000000", "message": "hardware.\ni added this specificaly due to this assertion\nhttps://github.com/intel/intel-cmt-cat/wiki/FAQ#how-fine-grained-can-the-cache-assignment-be-for-each-cos\n\nits seams to match the only examlple libvirt xml i could find with the min allcoation specified also\n\n    <cache>\n      <bank id='0' level='3' type='both' size='15' unit='MiB' cpus='0-5'>\n        <control granularity='768' min='1536' unit='KiB' type='both' maxAllocs='4'/>\n      </bank>\n      <bank id='1' level='3' type='both' size='15' unit='MiB' cpus='6-11'>\n        <control granularity='768' min='1536' unit='KiB' type='both' maxAllocs='4'/>\n      </bank>\n</cache>\n\nhttps://github.com/libvirt/libvirt/blob/0ec6343a069b21178d4580688a8380dbb6d76620/tests/vircaps2xmldata/vircaps-x86_64-resctrl.xml#L44-L52", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "3a5815da9d09ea02d34b99bde6ebe395d4b0b4b2", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_99e81917", "line": 152, "range": {"start_line": 151, "start_character": 63, "end_line": 152, "end_character": 73}, "in_reply_to": "bfb3d3c7_d4b6763e", "updated": "2019-06-03 07:37:55.000000000", "message": "@Sean,\n\nThe minimum CAT allocation size is not always 2 adjacent cache-ways, this value depends on the implementation of CPU architecture. For example, my BDW-E5-2699v4 machine, the libvirt capabilities output is: (no existence of 'min' in <bank> element means the minimal allocation unit is the value of 'granularity'.)\n\n'''\n    <cache>\n      <bank id='0' level='3' type='both' size='55' unit='MiB' cpus='0-21,44-65'>\n        <control granularity='2816' unit='KiB' type='both' maxAllocs='16'/>\n      </bank>\n      <bank id='1' level='3' type='both' size='55' unit='MiB' cpus='22-43,66-87'>\n        <control granularity='2816' unit='KiB' type='both' maxAllocs='16'/>\n      </bank>\n    </cache>\n''\n\nThe minimal cache allocating size is determined by the property value of 'min' of <cache>/<bank> element, *IF* 'min' exists. Otherwise, the minimum allocation is the value of property 'granularity'.\n\nWe should not impose a limitation the cache allocation unit is size of two granularity, this value is really hardware implemtation dependent.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "e54333c6a2324db875e337eabe82224dbf1973c4", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_1af65c91", "line": 152, "range": {"start_line": 151, "start_character": 63, "end_line": 152, "end_character": 73}, "in_reply_to": "bfb3d3c7_d4b6763e", "updated": "2019-06-03 02:58:24.000000000", "message": "@Sean, there also have fragmentation issue. I confirm with Huaqiang, the libvirt doesn't resolve the fragmentation issue.\n\nSo If that is true, we have to deal with that in the Nova. one of way is that we can only allow allocating the fixed size cache, just like vpmem.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_ae0b758b", "line": 158, "range": {"start_line": 157, "start_character": 37, "end_line": 158, "end_character": 34}, "updated": "2019-05-31 11:02:05.000000000", "message": "For Intel CPU with CAT&CDP, the CDP could be enabled/disable at the mounting stage:\n # mount -t resctrl resctrl [-o cdp] /sys/fs/resctrl\n\nRelated doc:\nhttps://www.kernel.org/doc/Documentation/x86/resctrl_ui.txt", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_74cd4ab5", "line": 158, "range": {"start_line": 157, "start_character": 37, "end_line": 158, "end_character": 34}, "in_reply_to": "bfb3d3c7_ae0b758b", "updated": "2019-05-31 12:34:33.000000000", "message": "ah you are correct i will update this although we do not expect(intend to support) this to change at runtime while so from the perspective of this spec it will either be enabled or disabled.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_f1c2ac52", "line": 180, "range": {"start_line": 180, "start_character": 19, "end_line": 180, "end_character": 45}, "updated": "2019-05-31 11:02:05.000000000", "message": "+1\nSince we are seeking a way to improve performance, this limitation is reasonable.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "e54333c6a2324db875e337eabe82224dbf1973c4", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_13cc0f88", "line": 180, "range": {"start_line": 180, "start_character": 19, "end_line": 180, "end_character": 45}, "in_reply_to": "bfb3d3c7_f1c2ac52", "updated": "2019-06-03 02:58:24.000000000", "message": "+1 too, yes, it only makes sense for the dedicated instance.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_eef64d5d", "line": 200, "range": {"start_line": 200, "start_character": 64, "end_line": 200, "end_character": 76}, "updated": "2019-05-31 11:02:05.000000000", "message": "'cache region' is a little confusing, I think you mean the last level sharing cache that CAT is working on, right?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_b40bc28b", "line": 200, "range": {"start_line": 200, "start_character": 64, "end_line": 200, "end_character": 76}, "in_reply_to": "bfb3d3c7_eef64d5d", "updated": "2019-05-31 12:34:33.000000000", "message": "not quite.\ni am refering to the cache id of the l3 cache segment.\n\non all existing hardware at least up to cascadelake the cache region id of the l3 cache on a specific cpu package\ni dont have cascade lake cpus to had so this is an example form an ivybridge system\n\n[sean@workstation ~]$ cat /sys/bus/cpu/devices/cpu47/cache/index3/id \n1\n ls -al /sys/bus/cpu/devices/cpu47/node1\nlrwxrwxrwx 1 root root 0 May 31 12:34 /sys/bus/cpu/devices/cpu47/node1 -> ../../node/node1\n\nif you are on haswell or later and enable cluster on die\nsuch that each meory contoler/home agent on the physical cpu package works as an independt numa node then the l3 cache is similarly reported as 2 seperate cache regions so \n\nso while on my stytem the cache region id matches teh phyical\n_package_id that is not always the case.\n\n[sean@workstation ~]$ cat /sys/bus/cpu/devices/cpu47/cache/index3/id \n1\n[sean@workstation ~]$ cat /sys/bus/cpu/devices/cpu47/topology/physical_package_id\n1\n\nthe cache region id however always matches on the numa node on all shiping hardware.\n\nhowever since the intel silocon folk i was working with inisisted that they wanted to keep the flexablity to change this if needed at some point in the future i have tried to use cache region where it matters to refer to the cache id rather then numa node.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_eea40d4d", "line": 202, "range": {"start_line": 201, "start_character": 53, "end_line": 202, "end_character": 34}, "updated": "2019-05-31 11:02:05.000000000", "message": "Not clear. What kind of '1:1' mapping?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "3a5815da9d09ea02d34b99bde6ebe395d4b0b4b2", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_792c4547", "line": 202, "range": {"start_line": 201, "start_character": 53, "end_line": 202, "end_character": 34}, "in_reply_to": "bfb3d3c7_74b30aea", "updated": "2019-06-03 07:37:55.000000000", "message": "OK", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_74b30aea", "line": 202, "range": {"start_line": 201, "start_character": 53, "end_line": 202, "end_character": 34}, "in_reply_to": "bfb3d3c7_eea40d4d", "updated": "2019-05-31 12:34:33.000000000", "message": "see answer above.\n\nthe resouce providers wont technically correspond to NUMA nodes but in practice it always does at least today so\n\nill update this slightly.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_ce058915", "line": 229, "range": {"start_line": 229, "start_character": 10, "end_line": 229, "end_character": 73}, "updated": "2019-05-31 11:02:05.000000000", "message": "Disagree.\nThe number of cacheway for Intel latest CPU should be a fixed number and regardless of the number of core number as I know.\nFor example, the E5-2600v4(Broadwell) has 20 cache ways, and Skylake-SP & Casladelake-SP has 11 cacheways.\n\nThe total number of processor cache ways is indicated by kernel '/sys/fs/resctrl/info/L3/cbm_mask'", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_b4cc2235", "line": 229, "range": {"start_line": 229, "start_character": 10, "end_line": 229, "end_character": 73}, "in_reply_to": "bfb3d3c7_ce058915", "updated": "2019-05-31 12:34:33.000000000", "message": "ok ill remove this its not really relevent i was just trying to provide context for peopel. it will not affect openstack one way or another as we will just be using the values from libvirt.\n\n   <cache>\n      <bank id='0' level='3' type='both' size='33' unit='MiB' cpus='0'>\n        <control granularity='3' unit='MiB' type='both' maxAllocs='16'/>\n      </bank>\n</cache>", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_5107f818", "line": 231, "range": {"start_line": 230, "start_character": 0, "end_line": 231, "end_character": 51}, "updated": "2019-05-31 11:02:05.000000000", "message": "Seems E5-2600v4, Skylake-SP and Cascadelake-SP are not working in this way.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "632b892d700b1945c682a67905b82ace76e1c010", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_57e8487a", "line": 231, "range": {"start_line": 230, "start_character": 0, "end_line": 231, "end_character": 51}, "in_reply_to": "bfb3d3c7_14416ea9", "updated": "2019-05-31 12:53:12.000000000", "message": "actuly this is a better quote form the same section\n\n\"When CDP is enabled, the existing mask space for CAT-only operation is split. As an example if the system supports 16 CAT-only COS, when CDP is enabled the same MSR interfaces are used, however half of the masks correspond to code, half correspond to data, and the effective number of COS is reduced by half. Code/Data masks are defined per-COS and interleaved in the MSR space as described in subsequent sections\"\n\nso you are right the numer of cacheways does not change but the granularity of how we generate masks does.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_14416ea9", "line": 231, "range": {"start_line": 230, "start_character": 0, "end_line": 231, "end_character": 51}, "in_reply_to": "bfb3d3c7_5107f818", "updated": "2019-05-31 12:34:33.000000000", "message": "that should have said enabled.\n\nagain this the number of cache ways of each type will be reported in libvirt like this\n\n    <cache>\n      <bank id='0' level='3' type='both' size='15' unit='MiB' cpus='0-5'>\n        <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n        <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n      </bank>\n      <bank id='1' level='3' type='both' size='15' unit='MiB' cpus='6-11'>\n        <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n        <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n      </bank>\n</cache>\n\nso we will actully be useing the values form libvirt when reporting the inventory\n\nhttps://github.com/libvirt/libvirt/blob/0ec6343a069b21178d4580688a8380dbb6d76620/tests/vircaps2xmldata/vircaps-x86_64-resctrl-cdp.xml\n\nill just replace this with explit examples rather then trying to simplfy with a generaliation that when you enable\ncode and data priortisation you get an equal numabe of code and data cache segments that are half the size of the partitioned cacheways.\n\ni was basing it on the intel archtecture guide\nhttps://software.intel.com/sites/default/files/managed/39/c5/325462-sdm-vol-1-2abcd-3abcd.pdf#G55.133315\n\n\"An example of the operating mode of CDP is shown in Figure 17-29. Shown at the top are traditional CAT usage models where capacity masks map 1:1 with a COS number to enable control over the cache space which a given COS (and thus applications, threads or VMs) may occupy. Shown at the bottom are example mask configurations where CDP is enabled, and each COS number maps 1:2 to two masks, one for code and one for data. This enables code and data to be either overlapped or isolated to varying degrees either globally or on a per-COS basis, depending on application and system needs\"\n\n\ni guess i could have missread that and the number of cacheways does not change but rather the granlarity of what infomation can be sotred in each cacheway has jsut been increased.\n\nso you still have 20 cache ways but for each cos policy\nyou can state if a cache way can be written to to store instruction or data.\n\nill carify this in the next version", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_b152f411", "line": 234, "range": {"start_line": 233, "start_character": 33, "end_line": 234, "end_character": 4}, "updated": "2019-05-31 11:02:05.000000000", "message": "Current Intel CPUs do not have such kind of limitation. Is this introduced by AMD CPUs?\nYou can assign only one cache way to the instance, and following 'schemata' is valid:\n\n[root@c200 p0]# echo \"L3:0=1;1=1\" >schemata \n[root@c200 p0]# cat schemata \n    L3:0=00001;1=00001\n[root@c200 p0]# pwd\n/sys/fs/resctrl/p0", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_71a6bc11", "line": 234, "range": {"start_line": 234, "start_character": 9, "end_line": 234, "end_character": 51}, "updated": "2019-05-31 11:02:05.000000000", "message": "This information should be gotten through parsing kernel interface '/sys/fs/resctrl/info/L3/min_cbm_bits', instead of hard coded here.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_d4a99623", "line": 234, "range": {"start_line": 233, "start_character": 33, "end_line": 234, "end_character": 4}, "in_reply_to": "bfb3d3c7_b152f411", "updated": "2019-05-31 12:34:33.000000000", "message": "no this information should be gotten by parsing the libvirt capability xml which actually parses resctrul filesystem under the hood.\n\nwhen we create the inventories of cache ways in placemetn we can the reported minium allcoation size and granualrity\nas the min allocation and set size respectivly.\n\nthe limitation of need a min of 2 cacheways was coming form the intel cmt tool faq but if that is incorrect ill just remove that limitation form the spec. that makes life a lost simpeler.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "3a5815da9d09ea02d34b99bde6ebe395d4b0b4b2", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f969158b", "line": 234, "range": {"start_line": 233, "start_character": 33, "end_line": 234, "end_character": 4}, "in_reply_to": "bfb3d3c7_d4a99623", "updated": "2019-06-03 07:37:55.000000000", "message": "As I replied in above comment, the minimum cacheways exists, but not always be 2 cacheways. \n\nWe still consider there is the constrain of the minimum cacheways (more precisely, the cache allocation size). The minimum cache allocation size is given by the value 'min' of <cache>/<bank> (of result of command 'virsh capabilities').\n\nIf 'min' does not appear in <cache>/</bank> section, then the minimum allocation size is size of \"granularity\".", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "756ea5ed3d4ddf38ab5d8bb0e4ba7b07650b776c", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_9107b0ca", "line": 241, "range": {"start_line": 240, "start_character": 0, "end_line": 241, "end_character": 26}, "updated": "2019-05-31 11:02:05.000000000", "message": "Do we need two 'COS' resource class? Kernel only export the minimal value of cache_closid and mba_closid, the interface '/sys/fs/resctrl/info/L3/num_closids'.\n\nOnce MBA and CAT are all enabled, the closid value will likly be 8.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5b865474f58dccb3c80c7f1ef5d1b6cbab23af2f", "unresolved": false, "patch_set": 1, "id": "bfb3d3c7_97eb2011", "line": 241, "range": {"start_line": 240, "start_character": 0, "end_line": 241, "end_character": 26}, "in_reply_to": "bfb3d3c7_9107b0ca", "updated": "2019-05-31 12:34:33.000000000", "message": "yes we shoudl keep them seperate.\n\nlibvirt report them septeratly\n\nhttps://github.com/libvirt/libvirt/blob/76be4f5ddac608873378e5bc43eb12731f7ddcf2/tests/vircaps2xmldata/vircaps-x86_64-resctrl.xml#L44-L66\n\nso we shoudl track them seperatly here too.\n\nif the COS is a shared resouce that means that libvirt is incorrectly reporting this.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "3a5815da9d09ea02d34b99bde6ebe395d4b0b4b2", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_79d0c551", "line": 241, "range": {"start_line": 240, "start_character": 0, "end_line": 241, "end_character": 26}, "in_reply_to": "bfb3d3c7_97eb2011", "updated": "2019-06-03 07:37:55.000000000", "message": "After reading the SDM and the libvirt/kernel implementation. \nNow I agree that we should keep these two CLOSes.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_dcaaff17", "line": 263, "range": {"start_line": 261, "start_character": 50, "end_line": 263, "end_character": 21}, "updated": "2019-06-03 08:49:05.000000000", "message": "As above we can reword this to use the output from Libvirt.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_5efd7e38", "line": 263, "range": {"start_line": 261, "start_character": 50, "end_line": 263, "end_character": 21}, "in_reply_to": "9fb8cfa7_dcaaff17", "updated": "2019-06-17 09:33:50.000000000", "message": "im just going to remove this", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_bc670b26", "line": 268, "range": {"start_line": 266, "start_character": 47, "end_line": 268, "end_character": 8}, "updated": "2019-06-03 08:49:05.000000000", "message": "As above.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_7c7193e0", "line": 273, "range": {"start_line": 271, "start_character": 47, "end_line": 273, "end_character": 8}, "updated": "2019-06-03 08:49:05.000000000", "message": "As above.", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_bc506b34", "line": 334, "range": {"start_line": 334, "start_character": 29, "end_line": 334, "end_character": 36}, "updated": "2019-06-03 08:49:05.000000000", "message": "enforced", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_be003a36", "line": 334, "range": {"start_line": 334, "start_character": 29, "end_line": 334, "end_character": 36}, "in_reply_to": "9fb8cfa7_bc506b34", "updated": "2019-06-17 09:33:50.000000000", "message": "Done", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e9a3d10287abf73c32c390b09fe080a61f8abe02", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_9c19e789", "line": 424, "range": {"start_line": 421, "start_character": 0, "end_line": 424, "end_character": 14}, "updated": "2019-06-03 08:49:05.000000000", "message": "I assume Libvirt would let us know if these dependencies aren't met on a compute host?", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_7e7de2af", "line": 424, "range": {"start_line": 421, "start_character": 0, "end_line": 424, "end_character": 14}, "in_reply_to": "9fb8cfa7_9c19e789", "updated": "2019-06-17 09:33:50.000000000", "message": "libvirt supports detecting the amount of cache in older version but effectively if the control element is not present\nthen the dependencies are not met.\n\n    <cache>\n        <bank id='0' level='3' type='both' size='33' unit='MiB' cpus='0'>\n            <control granularity='3' unit='MiB' type='both' maxAllocs='16'/>\n        </bank>\n    </cache>\n\n\nif code and data priortisation are enabled then teh contol element will be  of type data and code\n\n    <cache>\n        <bank id='0' level='3' type='both' size='15' unit='MiB' cpus='0-5'>\n            <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n            <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n        </bank>\n        <bank id='1' level='3' type='both' size='15' unit='MiB' cpus='6-11'>\n            <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n            <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n        </bank>\n    </cache>", "commit_id": "35adfd8722070a56d1c1541afd94e6d145566b0e"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_97b4f483", "line": 29, "range": {"start_line": 29, "start_character": 0, "end_line": 29, "end_character": 9}, "updated": "2019-06-24 18:33:01.000000000", "message": "workloads' (plural possessive)", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7d010d06", "line": 29, "range": {"start_line": 29, "start_character": 0, "end_line": 29, "end_character": 9}, "in_reply_to": "9fb8cfa7_97b4f483", "updated": "2019-06-25 21:26:26.000000000", "message": "or i can make it singular", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "30666f1382d9c8c48ffdac703d00f0b7bc210f7b", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_682e2893", "line": 35, "range": {"start_line": 35, "start_character": 69, "end_line": 35, "end_character": 73}, "updated": "2019-06-25 21:32:19.000000000", "message": "i might change this use case to not refer to the same host.\ni would like to be able to definitely support this cache confined and non cache confined instance in the same cloud without the need for host aggregates or special filter configuration.\n\nsupporting it on the same host is possible but rely on behaviour in libvirt that I'm not sure i want to rely on.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_378c28d6", "line": 36, "range": {"start_line": 36, "start_character": 61, "end_line": 36, "end_character": 74}, "updated": "2019-06-24 18:33:01.000000000", "message": "Well... \"predictable\" might be a better word choice.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_5819b777", "line": 36, "range": {"start_line": 36, "start_character": 61, "end_line": 36, "end_character": 74}, "in_reply_to": "9fb8cfa7_378c28d6", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b7b9f879", "line": 59, "range": {"start_line": 59, "start_character": 60, "end_line": 59, "end_character": 69}, "updated": "2019-06-24 18:33:01.000000000", "message": "director", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_382e4392", "line": 59, "range": {"start_line": 59, "start_character": 60, "end_line": 59, "end_character": 69}, "in_reply_to": "9fb8cfa7_b7b9f879", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_57b2fc95", "line": 65, "range": {"start_line": 65, "start_character": 14, "end_line": 65, "end_character": 23}, "updated": "2019-06-24 18:33:01.000000000", "message": "\"cacheways\" needs to be defined somewhere in this document.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_17a8041e", "line": 69, "range": {"start_line": 68, "start_character": 60, "end_line": 69, "end_character": 28}, "updated": "2019-06-24 18:33:01.000000000", "message": "eh?\n\n[Later] Okay, this depends on definition provided later for \"class of service\"", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_976954f9", "line": 78, "range": {"start_line": 78, "start_character": 9, "end_line": 78, "end_character": 13}, "updated": "2019-06-24 18:33:01.000000000", "message": "number?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_4b16d54b", "line": 78, "range": {"start_line": 78, "start_character": 9, "end_line": 78, "end_character": 13}, "in_reply_to": "9fb8cfa7_976954f9", "updated": "2019-06-25 21:26:26.000000000", "message": "yes", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "923269cfa780c894dba4017a6e1081e3ae52d5a9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_e1c3aa89", "line": 85, "range": {"start_line": 85, "start_character": 23, "end_line": 85, "end_character": 24}, "updated": "2019-06-17 09:18:09.000000000", "message": "'0' is not a valid value for this case.\nMy understanding of 'reserved_cacheways' is shared by all other Linux processes including kernel. '0' means no cacheway  is reserved for a 'resctrl' allocation specific for non-VM processes. You should at least reserve one cache-way per node for non-VM processes.\n\nTests:\n\n[root@c200 resctrl]# echo \"L3:0=0000f;1=00001\" > schemata #<- OK\n[root@c200 resctrl]# echo \"L3:0=0000f;1=00000\" > schemata #<- Failed\nbash: echo: write error: Invalid argument", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "dadcb05c6f2f8f0f4989b5f9bfc039ac39eb1ea9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_015b5e54", "line": 85, "range": {"start_line": 85, "start_character": 23, "end_line": 85, "end_character": 24}, "in_reply_to": "9fb8cfa7_8198ae1b", "updated": "2019-06-19 23:05:50.000000000", "message": "OK", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_8198ae1b", "line": 85, "range": {"start_line": 85, "start_character": 23, "end_line": 85, "end_character": 24}, "in_reply_to": "9fb8cfa7_e1c3aa89", "updated": "2019-06-17 09:33:50.000000000", "message": "0 is a valid value if i have reserved cacheways on onther numa nodes for the kernel to use.\n\nif i am using the isolcpu kernel option or i use systemd to partition the cpus that OS servcies can run at i can ensure that kenels and userspace process that are not vms never get schduled to as specific numa node/cpu socket.\n\nsetting reserved_cacheways will not program the reservation via resctrl so even if all 0 is not valid to program it will not be an issue. \n\nyou are right that in general you should probaly reserve 1 cacheway per numa node for the host but only if you alos resevce at least 1 core per numa node for the host.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b715784b", "line": 93, "range": {"start_line": 93, "start_character": 28, "end_line": 93, "end_character": 38}, "updated": "2019-06-24 18:33:01.000000000", "message": "waitwait, L36 implies you want to be able to mix", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_ebd2295c", "line": 93, "range": {"start_line": 93, "start_character": 28, "end_line": 93, "end_character": 38}, "in_reply_to": "9fb8cfa7_b715784b", "updated": "2019-06-25 21:26:26.000000000", "message": "technically we could support mixing but not with the api provided by libvirt. i initially planned to support passing a\nmask of what cache-ways can be used for dedicated cache and second for shared cache similar to what we will be doing for cpu pinning however libvit does not allow use to chose the cache allocations. \n\nwe can still support this use case if we choose as any instance without explicit cache allocation will use the default system cache-ways. \n\nim in two minds if we should allow this as it assumes you have correctly configured the system cache allocation.\n\nsince that is technically required for this feature to work\n(libvirt assume the cache not in use by it cgroup is available for use by vms.) \ni guess its safe to assume that and i can remove this statement.\n\ni was starting to be more conservative when i found libvirt does not provide the level of control i wanted.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9a1e595d", "line": 101, "range": {"start_line": 101, "start_character": 31, "end_line": 101, "end_character": 39}, "updated": "2019-06-24 18:33:01.000000000", "message": "Let's use \"assign\" here to disambiguate from what Placement does.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_58045718", "line": 101, "range": {"start_line": 101, "start_character": 31, "end_line": 101, "end_character": 39}, "in_reply_to": "9fb8cfa7_9a1e595d", "updated": "2019-06-25 21:26:26.000000000", "message": "i will reluctantly change this. we usually reserve assign for when we are assign a specific resource such as a specific cpu or pci device to an instance. in this case we are not assigning a cache way as we do not have that level of control and in stead we are allocating a reservation form that amount of cacheways available.\n\ni was trying to disambiguate between instructing libvirt to  allocate cacheways vs direct assignment of specific cacheways to an instance but i am ok with changing to disambiuguate between nova and placement.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1a3269f3", "line": 107, "range": {"start_line": 107, "start_character": 36, "end_line": 107, "end_character": 42}, "updated": "2019-06-24 18:33:01.000000000", "message": "enabled in", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_5a6a21b3", "line": 122, "range": {"start_line": 122, "start_character": 41, "end_line": 122, "end_character": 61}, "updated": "2019-06-24 18:33:01.000000000", "message": "e...", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7aacc5ec", "line": 126, "range": {"start_line": 126, "start_character": 12, "end_line": 126, "end_character": 17}, "updated": "2019-06-24 18:33:01.000000000", "message": "this should probably be spelled cacheways", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_527af3f0", "line": 126, "range": {"start_line": 126, "start_character": 12, "end_line": 126, "end_character": 17}, "in_reply_to": "9fb8cfa7_7aacc5ec", "updated": "2019-06-25 21:26:26.000000000", "message": "i am okk with doing that for the resurce class name im not conviced it a go desgin for the extra spec unless you expeact to support somthing like hw:numa_cache_mb at some point in the future.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9a7ad974", "line": 127, "range": {"start_line": 127, "start_character": 22, "end_line": 127, "end_character": 24}, "updated": "2019-06-24 18:33:01.000000000", "message": "...w\n\nImplicit division of a *percentage* feels really weird to me. I get that we implicitly divide discrete units evenly, but is there a precedent for what we do with percentages?\n\nI'm saying, IMO whatever number is specified here should be the percentage we take out of *each* NUMA node. So if you want 10% each, you put 10 here.\n\nAlso, it should be made clear that we're talking about *memory* bandwidth here (\"hw:numa_mem_bandwidth\")\n\nAlso, the units should be manifested somewhere, either in the value (\"20%\") or the key (\"hw:numa_mem_bandwidth_percent\")", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_803cac2f", "line": 127, "range": {"start_line": 127, "start_character": 22, "end_line": 127, "end_character": 24}, "in_reply_to": "9fb8cfa7_9a7ad974", "updated": "2019-06-25 21:26:26.000000000", "message": "ya i had that in the first version and it was pointed out it was not the same as the other resource where we implicitly divide.\n\nim happy to go back to not dividing because initially i felt it was more intuitive too.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7ac3658a", "line": 159, "range": {"start_line": 158, "start_character": 52, "end_line": 159, "end_character": 78}, "updated": "2019-06-24 18:33:01.000000000", "message": "nts: come back to this\n\n[Later] So yeah, it's implied (though never made clear) that compute will report the cache as *either* a unified cache (``L3_CACHE`` is spelled ``L3_UNIFIED_CACHE`` later in the document) or as ``L3_DATA_CACHE`` plus ``L3_CODE_CACHE``. I think this is kind of broken, because it means the flavor has to request its cache in one form or the other; and then will only be able to land on a host that happens to be exposing it in the same fashion.\n\nI'm not sure what the right answer is here. Are hosts that are capable of partitioning also capable of *not* partitioning? If so, the simplest thing to start with might be to simply expose unified cache for everyone.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_0b053d11", "line": 159, "range": {"start_line": 158, "start_character": 52, "end_line": 159, "end_character": 78}, "in_reply_to": "9fb8cfa7_7ac3658a", "updated": "2019-06-25 21:26:26.000000000", "message": "host that are capably of code and data priortisation/partionioning can be configured either way.\nnot all host that are capable of CAT suppor CDP.\n\nwhen configured for CDP while you can request just \nL3_DATA_CACHE or just L3_CODE_CACHE cache  or you can request both however that required specifying the cache can be used expcitly for code and cache in two bit mask intest of just one.\n\nat the hardware level when cdp is enabled the bit mast form two COS are combied to allow a seperate policy to be specifed for code or data. so requesting l3 unified cache allocation on a host with CDP enabled should be an error.\n\nyou are right that by having  L3_UNIFIED_CACHE and have (``L3_DATA_CACHE`` plus ``L3_CODE_CACHE``) we will need to partition our host and have two different flavours for CDP enabled or CDP disabled. unless we deicide to declare CDP out of scope and not support it initially i think we have to treat them separately and have different resource classes and flavours.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1aed89ef", "line": 200, "range": {"start_line": 199, "start_character": 0, "end_line": 200, "end_character": 7}, "updated": "2019-06-24 18:33:01.000000000", "message": "How does this help us (versus splitting per NUMA node) if we have no way of ensuring which package the cpu and memory come from?\n\nEven splitting per NUMA node makes zero sense until we have proper NUMA modeling of cpu/memory.\n\nWe should not try to \"anticipate\" NUMA modeling piecemeal like this.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_c3f7fc8a", "line": 200, "range": {"start_line": 199, "start_character": 0, "end_line": 200, "end_character": 7}, "in_reply_to": "9fb8cfa7_1aed89ef", "updated": "2019-06-25 21:26:26.000000000", "message": "this is not anticipating numa modelling.\n\nnuma support is required for this feature to proceed but numa suport in nova does not require numa support in placement. since i am requiring cpu pinning for this feature it means that all instance will have a numa topology.\n\nin the libvirt xml we map a cache policy to specific virtual cpus which are pinned to a specific cache regions. \nlibvirt does not allow us to specify the mask within that region but we can spcify the amount of cache within a region to allocate.\n\nWhen we define an instance domain we can map specific set of guest cpu to a host cache region.\n\nfor example for a vm with 4 cores and 2 numa nodes we can map vm core 0 and 1 to host cache region 0 and vm core 2 and 3 to cache region 1.\n\n  <cachetune vcpus='0-1'>\n      <cache id='0' level='3' type='both' size='3' unit='MiB'/>\n    </cachetune>\n\n    <cachetune vcpus='2-3'> \n<cache id='1' level='3' type='both' size='3' unit='MiB'/>\n    </cachetune>\n\nfrom the virsh capablity infomation libvirt  will report the invetorys of the caceh per cache region and the mapping of each cache region to the phyical cores on the host\n\n   <cache>\n        <bank id='0' level='3' type='both' size='15' unit='MiB' cpus='0-5'>\n            <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n            <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n        </bank>\n        <bank id='1' level='3' type='both' size='15' unit='MiB' cpus='6-11'>\n            <control granularity='768' unit='KiB' type='code' maxAllocs='8'/>\n            <control granularity='768' unit='KiB' type='data' maxAllocs='8'/>\n        </bank>\n    </cache>\n\n\nso since we are pinning the cores and all pinned instance are numa affiend we can ensure the cache region we allocate from is affinites tot he same numa node as the cpus we pin too.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fa0af5cf", "line": 203, "range": {"start_line": 203, "start_character": 50, "end_line": 203, "end_character": 59}, "updated": "2019-06-24 18:33:01.000000000", "message": "instances", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9e9877c0", "line": 203, "range": {"start_line": 203, "start_character": 50, "end_line": 203, "end_character": 59}, "in_reply_to": "9fb8cfa7_fa0af5cf", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_faa675c1", "line": 210, "range": {"start_line": 210, "start_character": 39, "end_line": 210, "end_character": 46}, "updated": "2019-06-24 18:33:01.000000000", "message": "physical", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_ba10fd01", "line": 210, "range": {"start_line": 210, "start_character": 53, "end_line": 210, "end_character": 59}, "updated": "2019-06-24 18:33:01.000000000", "message": "segment", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_5e8e7f79", "line": 210, "range": {"start_line": 210, "start_character": 53, "end_line": 210, "end_character": 59}, "in_reply_to": "9fb8cfa7_ba10fd01", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7e8b4367", "line": 210, "range": {"start_line": 210, "start_character": 39, "end_line": 210, "end_character": 46}, "in_reply_to": "9fb8cfa7_faa675c1", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7af605da", "line": 212, "range": {"start_line": 212, "start_character": 10, "end_line": 212, "end_character": 17}, "updated": "2019-06-24 18:33:01.000000000", "message": "common?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9aa739bd", "line": 212, "range": {"start_line": 212, "start_character": 55, "end_line": 212, "end_character": 62}, "updated": "2019-06-24 18:33:01.000000000", "message": "physical", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9eddd771", "line": 212, "range": {"start_line": 212, "start_character": 10, "end_line": 212, "end_character": 17}, "in_reply_to": "9fb8cfa7_7af605da", "updated": "2019-06-25 21:26:26.000000000", "message": "yes :)\nthis is why happens when i use a spell checker to fix some things", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_da2e1142", "line": 215, "range": {"start_line": 215, "start_character": 43, "end_line": 215, "end_character": 50}, "updated": "2019-06-24 18:33:01.000000000", "message": "physical", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_beda1b75", "line": 215, "range": {"start_line": 215, "start_character": 43, "end_line": 215, "end_character": 50}, "in_reply_to": "9fb8cfa7_da2e1142", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_5a222154", "line": 218, "range": {"start_line": 218, "start_character": 61, "end_line": 218, "end_character": 70}, "updated": "2019-06-24 18:33:01.000000000", "message": "controller", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_ba29dd37", "line": 218, "range": {"start_line": 218, "start_character": 4, "end_line": 218, "end_character": 13}, "updated": "2019-06-24 18:33:01.000000000", "message": "partitioned", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_52de7311", "line": 218, "range": {"start_line": 218, "start_character": 61, "end_line": 218, "end_character": 70}, "in_reply_to": "9fb8cfa7_5a222154", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_72e377da", "line": 218, "range": {"start_line": 218, "start_character": 4, "end_line": 218, "end_character": 13}, "in_reply_to": "9fb8cfa7_ba29dd37", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_baac7d9f", "line": 225, "range": {"start_line": 224, "start_character": 0, "end_line": 225, "end_character": 34}, "updated": "2019-06-24 18:33:01.000000000", "message": "as above", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_de56efce", "line": 225, "range": {"start_line": 224, "start_character": 0, "end_line": 225, "end_character": 34}, "in_reply_to": "9fb8cfa7_baac7d9f", "updated": "2019-06-25 21:26:26.000000000", "message": "this tends to be compatible with placement numa support without depending on it which is why i  have specified it like this.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_da8a9119", "line": 237, "range": {"start_line": 237, "start_character": 40, "end_line": 237, "end_character": 48}, "updated": "2019-06-24 18:33:01.000000000", "message": "without", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7aa04591", "line": 238, "range": {"start_line": 238, "start_character": 44, "end_line": 238, "end_character": 75}, "updated": "2019-06-24 18:33:01.000000000", "message": "The described approach doesn't simplify any aspect of adopting NUMA modeling/affinity via placement in the future, no matter what form that takes. (Same argument at [1].)\n\n[1] https://review.opendev.org/#/c/601596/14/specs/train/approved/virtual-persistent-memory.rst@137", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7e982374", "line": 238, "range": {"start_line": 238, "start_character": 44, "end_line": 238, "end_character": 75}, "in_reply_to": "9fb8cfa7_7aa04591", "updated": "2019-06-25 21:26:26.000000000", "message": "that limitation is not listed in the api doc for placement.\nthis still simplfiles numa affinity in nova until we can model it in placemenbt as it allow us to map the placment allocation to the host_numa cell by haveing 1 placemetn RP per cache region which we use the host_numa_cell object to correlate with a numa node.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_da2b71e8", "line": 245, "range": {"start_line": 243, "start_character": 0, "end_line": 245, "end_character": 22}, "updated": "2019-06-24 18:33:01.000000000", "message": "I don't understand: are these three separate kinds of resources, or is \"unified cache\" a combination of \"data cache\" and \"code cache\" where the host will report it one way or the other?\n\n[Later] See above (L159)", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_f2f7678a", "line": 245, "range": {"start_line": 243, "start_character": 0, "end_line": 245, "end_character": 22}, "in_reply_to": "9fb8cfa7_da2b71e8", "updated": "2019-06-25 21:26:26.000000000", "message": "it is but if the host is configured with CDP so that it repors data cache adn code cache seperate we cannot request an allocation of unified cache and vice versa", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7ace055b", "line": 247, "range": {"start_line": 247, "start_character": 4, "end_line": 247, "end_character": 61}, "updated": "2019-06-24 18:33:01.000000000", "message": "Following convention, the unit should be included in the resource class name. ``L3_DATA_CACHE_WAY`` or similar.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b2424faa", "line": 247, "range": {"start_line": 247, "start_character": 4, "end_line": 247, "end_character": 61}, "in_reply_to": "9fb8cfa7_7ace055b", "updated": "2019-06-25 21:26:26.000000000", "message": "im not sure we have full established that convention but sure we could do that but. its longer then i would like but ill update.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fa0bd58a", "line": 249, "range": {"start_line": 249, "start_character": 31, "end_line": 249, "end_character": 34}, "updated": "2019-06-24 18:33:01.000000000", "message": "the", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "bd54f5a686c825bbb4b1aa66ecd67e7c461eb0fa", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_41d4f6bd", "line": 251, "range": {"start_line": 251, "start_character": 35, "end_line": 251, "end_character": 39}, "updated": "2019-06-17 09:35:54.000000000", "message": "s/form/from/", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "bd54f5a686c825bbb4b1aa66ecd67e7c461eb0fa", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_81666e29", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 26}, "updated": "2019-06-17 09:35:54.000000000", "message": "Should these two resource trackers be the value parsed from libvirt XML minus one? The default 'resctrl' folder, which is '/sys/fs/resctrl' will occupy one COS, both cache COS and memBW COS, if they are both supported by hardware.\n\n\nTake an example, only for the case of cache COS and memBW COS is similar. If CAT is supported and the hardware determined cache COS is 16, then the available COS to be allocated for VMs is 15.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bdcc93caeeb44ce03dcb7fc758bc618b0f685e85", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_bcc4f560", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 26}, "in_reply_to": "9fb8cfa7_81666e29", "updated": "2019-06-19 13:38:04.000000000", "message": "im not sure. if that is the case then libvirt should be reporting that.\n\ni think we can leave this to the implementation to determine.\n\nwe shoudl always report the capastiy as 16 but we can set the reserved value to 1 if we determin that is need.\n\nfor the CACHE_COS value we would key it off the reserved_cacheways config value.\n\ne.g. we would only", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_bddeb73b", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 26}, "in_reply_to": "9fb8cfa7_bcc4f560", "updated": "2019-06-24 18:33:01.000000000", "message": "These need units.\n\nBut I don't understand from the description what they should be.\n\nAre these the ones that will have percentages? Or is it \"number of policies\"?\n\nAnd is a \"policy\" kind of like the slot/context concept we wound up with for SEV? So like max_unit=1, it just costs us once to enable the thing for a guest, but we can only do that for a limited number of guests?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_529673f2", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 26}, "in_reply_to": "9fb8cfa7_bddeb73b", "updated": "2019-06-25 21:26:26.000000000", "message": "the unit is a COS policy.\nso its a dimensionless number and shoudl not have a unit in the resouce class name.\n\nits like VCPU and PCPU they have no units.\n\nyes a COS policy is a hardware resouce like the sev encrption context. \n\n\ntechnically i does not need to have a max_unit=1 and infact placment should not enforce that. it would be valid to have multiple COS polices for the same vm even if it only has 1 numa node but we wont require more then 1 allocation per inventory for a single instance based on what is enebled in this spec.\n\nmore advanced usecases could require that but i don't intend to support those in nova in train.\n\nif cache allocation was combinding with intels speed select technology then there are cases where we might want to future enhance this but im trying to keep this topic as simple as posible as its inherit compleity is already high.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "bd54f5a686c825bbb4b1aa66ecd67e7c461eb0fa", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_21e8e27a", "line": 261, "range": {"start_line": 261, "start_character": 3, "end_line": 261, "end_character": 12}, "updated": "2019-06-17 09:35:54.000000000", "message": "Not understanding. What kind of 'order'?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "bdcc93caeeb44ce03dcb7fc758bc618b0f685e85", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fc6eed94", "line": 261, "range": {"start_line": 261, "start_character": 3, "end_line": 261, "end_character": 12}, "in_reply_to": "9fb8cfa7_21e8e27a", "updated": "2019-06-19 13:38:04.000000000", "message": "the phrase \"the order of\" refers to an approximant size that is within one order of magnitude fo the value.\n\nwhat im saying above is there is a high probability that between 8-16 or a moderate probability that there is between 4-7 or 17-32 and a lower probability that is <4 or >32.\n\nso my intent is to express simply that while this value will depend on hardware its much more likely to be close to 10  then 100 or 1000.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_bd29d737", "line": 302, "range": {"start_line": 302, "start_character": 32, "end_line": 302, "end_character": 38}, "updated": "2019-06-24 18:33:01.000000000", "message": "policies", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9d241362", "line": 302, "range": {"start_line": 302, "start_character": 42, "end_line": 302, "end_character": 50}, "updated": "2019-06-24 18:33:01.000000000", "message": "specified", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9547f54c", "line": 302, "range": {"start_line": 302, "start_character": 42, "end_line": 302, "end_character": 50}, "in_reply_to": "9fb8cfa7_9d241362", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_55773da1", "line": 302, "range": {"start_line": 302, "start_character": 32, "end_line": 302, "end_character": 38}, "in_reply_to": "9fb8cfa7_bd29d737", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fa1995d6", "line": 303, "range": {"start_line": 303, "start_character": 68, "end_line": 303, "end_character": 74}, "updated": "2019-06-24 18:33:01.000000000", "message": "control", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3a42cdac", "line": 303, "range": {"start_line": 303, "start_character": 55, "end_line": 303, "end_character": 60}, "updated": "2019-06-24 18:33:01.000000000", "message": "field", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_757cc182", "line": 303, "range": {"start_line": 303, "start_character": 55, "end_line": 303, "end_character": 60}, "in_reply_to": "9fb8cfa7_3a42cdac", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_156d45cb", "line": 303, "range": {"start_line": 303, "start_character": 68, "end_line": 303, "end_character": 74}, "in_reply_to": "9fb8cfa7_fa1995d6", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9a0ad976", "line": 304, "range": {"start_line": 304, "start_character": 55, "end_line": 304, "end_character": 64}, "updated": "2019-06-24 18:33:01.000000000", "message": "attribute", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3572c9ae", "line": 304, "range": {"start_line": 304, "start_character": 55, "end_line": 304, "end_character": 64}, "in_reply_to": "9fb8cfa7_9a0ad976", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7a25a508", "line": 307, "range": {"start_line": 307, "start_character": 13, "end_line": 307, "end_character": 18}, "updated": "2019-06-24 18:33:01.000000000", "message": "field", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_d56a4db1", "line": 307, "range": {"start_line": 307, "start_character": 13, "end_line": 307, "end_character": 18}, "in_reply_to": "9fb8cfa7_7a25a508", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "923269cfa780c894dba4017a6e1081e3ae52d5a9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_56bcba6b", "line": 309, "range": {"start_line": 309, "start_character": 24, "end_line": 309, "end_character": 32}, "updated": "2019-06-17 09:18:09.000000000", "message": "s/capasity/capacity/", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_da7931fc", "line": 310, "range": {"start_line": 310, "start_character": 49, "end_line": 310, "end_character": 53}, "updated": "2019-06-24 18:33:01.000000000", "message": "from", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_559c1dbf", "line": 310, "range": {"start_line": 310, "start_character": 49, "end_line": 310, "end_character": 53}, "in_reply_to": "9fb8cfa7_da7931fc", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_ba847dd4", "line": 312, "range": {"start_line": 312, "start_character": 11, "end_line": 312, "end_character": 17}, "updated": "2019-06-24 18:33:01.000000000", "message": "control", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_75a121f8", "line": 312, "range": {"start_line": 312, "start_character": 11, "end_line": 312, "end_character": 17}, "in_reply_to": "9fb8cfa7_ba847dd4", "updated": "2019-06-25 21:26:26.000000000", "message": "Done", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3a496db6", "line": 317, "range": {"start_line": 315, "start_character": 32, "end_line": 317, "end_character": 36}, "updated": "2019-06-24 18:33:01.000000000", "message": "So what's the `total`? The `allocation_ratio`? I guess I'm asking: can you \"overallocate\" this thing?\n\nAlso: I thought the unit for cache was \"ways\", but this is implying something more like \"percentage\".", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1a734918", "line": 317, "range": {"start_line": 317, "start_character": 43, "end_line": 317, "end_character": 49}, "updated": "2019-06-24 18:33:01.000000000", "message": "minimum", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b5e0f927", "line": 317, "range": {"start_line": 315, "start_character": 32, "end_line": 317, "end_character": 36}, "in_reply_to": "9fb8cfa7_3a496db6", "updated": "2019-06-25 21:26:26.000000000", "message": "i meant to delete this. that is form the initial draft before i validated that the hardware does not support minimum bandwidth allocation and only support a max bandwidth limit.\n\nthere will be no inventory for memory bandwidth i will remove this.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_baa0fd43", "line": 319, "range": {"start_line": 319, "start_character": 3, "end_line": 319, "end_character": 7}, "updated": "2019-06-24 18:33:01.000000000", "message": "nit, overuse of .. note:: makes this kind of unreadable. Does everything need to be a .. note::?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_75c2815b", "line": 319, "range": {"start_line": 319, "start_character": 3, "end_line": 319, "end_character": 7}, "in_reply_to": "9fb8cfa7_baa0fd43", "updated": "2019-06-25 21:26:26.000000000", "message": "i marked this as a note as it is background context that i am adding so that people not familiar with the hardware technology can follow the spec and to document some of my reasoning for my choices. the section in the notes should not be required to implement the feature and all of them could in theory be removed as they are elaborating on way the proposed change can be use.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "923269cfa780c894dba4017a6e1081e3ae52d5a9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_166ba2f1", "line": 325, "range": {"start_line": 325, "start_character": 36, "end_line": 325, "end_character": 42}, "updated": "2019-06-17 09:18:09.000000000", "message": "achieve", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_9acdf931", "line": 325, "range": {"start_line": 325, "start_character": 60, "end_line": 325, "end_character": 67}, "updated": "2019-06-24 18:33:01.000000000", "message": "restrict", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_daf0516a", "line": 327, "range": {"start_line": 327, "start_character": 13, "end_line": 327, "end_character": 22}, "updated": "2019-06-24 18:33:01.000000000", "message": "restrictive?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1ae1099c", "line": 328, "range": {"start_line": 328, "start_character": 8, "end_line": 328, "end_character": 14}, "updated": "2019-06-24 18:33:01.000000000", "message": "creates", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_faf51558", "line": 329, "range": {"start_line": 329, "start_character": 34, "end_line": 329, "end_character": 45}, "updated": "2019-06-24 18:33:01.000000000", "message": "granularity", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7d391fd5", "line": 397, "range": {"start_line": 397, "start_character": 46, "end_line": 397, "end_character": 70}, "updated": "2019-06-24 18:33:01.000000000", "message": "Use root_required [1][2] instead.\n\n[1] https://docs.openstack.org/placement/latest/specs/train/approved/2005575-nested-magic-1.html#root-required\n[2] https://review.opendev.org/#/c/665492/", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_959b7571", "line": 397, "range": {"start_line": 397, "start_character": 46, "end_line": 397, "end_character": 70}, "in_reply_to": "9fb8cfa7_7d391fd5", "updated": "2019-06-25 21:26:26.000000000", "message": "i guess its too late to say i don't like that paramater name.\n\nroot_requried implies that you cant negate due to the previous exsiting usage for required and forbiding traits.\n\nroot_traits would have been better IMO.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3d2f2789", "line": 402, "range": {"start_line": 402, "start_character": 0, "end_line": 402, "end_character": 10}, "updated": "2019-06-24 18:33:01.000000000", "message": "partitioned", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fd52ef12", "line": 403, "updated": "2019-06-24 18:33:01.000000000", "message": "again this controverts L36 (or I'm missing the boat)", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_f5019139", "line": 403, "in_reply_to": "9fb8cfa7_fd52ef12", "updated": "2019-06-25 21:26:26.000000000", "message": "i had to change the design when i determined that we could not pass a mask to libvirt.\n\nlibvirt implicitly looks at the cache allocation mask that the libvirt daemon is running under and only spawn allocates vms to the  remainder of the cache not used libvirt and its process group.\n\nTechnically we could rely on this undocumented behaviour and libvirt would allow us to correctly have instance that request cache allocation with those that don't on the same host.\n\nHowever i'm not sure i am comfortable with that,\non later reflection i was leaning towards not allowing mixing cache confined instance with non cache confined instances on the same host.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3d440747", "line": 415, "range": {"start_line": 415, "start_character": 31, "end_line": 415, "end_character": 38}, "updated": "2019-06-24 18:33:01.000000000", "message": "resource", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1db58332", "line": 439, "updated": "2019-06-24 18:33:01.000000000", "message": "Otherwise the new extra specs will be ignored? cause an error?", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7537e100", "line": 439, "in_reply_to": "9fb8cfa7_1db58332", "updated": "2019-06-25 21:26:26.000000000", "message": "The extra specs would be ignored.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_7d959f86", "line": 440, "updated": "2019-06-24 18:33:01.000000000", "message": "As noted elsewhere, we should address whether the raw placement-ese syntax will be allowed, or whether the \"native\" syntax proposed above is the only supported mechanism.\n\nMy preference is for the latter: we should implement a hard check to forbid the former.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b5a55949", "line": 440, "in_reply_to": "9fb8cfa7_7d959f86", "updated": "2019-06-25 21:26:26.000000000", "message": "personally i would prefer to forbid using resource: in general.\n\ni had intended to only allow the new extra_specs. i will clarify this.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ff6ddb283df7ea7cda4382edb24517250faa3fdc", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_fdee6f20", "line": 460, "updated": "2019-06-24 18:33:01.000000000", "message": "links to the various specs mentioned in this section", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5bbe91098a754f63913c9c2eccfeddfb8c4aad95", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_35164957", "line": 460, "in_reply_to": "9fb8cfa7_fdee6f20", "updated": "2019-06-25 21:26:26.000000000", "message": "ill try and update this section in the next revsion but ill push what i currently have", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "923269cfa780c894dba4017a6e1081e3ae52d5a9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_d622eaba", "line": 550, "range": {"start_line": 549, "start_character": 34, "end_line": 550, "end_character": 18}, "updated": "2019-06-17 09:18:09.000000000", "message": "I think you have forgotten to change this.\n\nYou have already explained these two phrases in the notes of cache capability XML section, maybe you could remove this paragraph.", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6e0f035b8a625734d3e3d9c5555dc2ddf20d3cd7", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_a19052ef", "line": 550, "range": {"start_line": 549, "start_character": 34, "end_line": 550, "end_character": 18}, "in_reply_to": "9fb8cfa7_d622eaba", "updated": "2019-06-17 09:33:50.000000000", "message": "ya your right i forgot to remove this\nill drop this note", "commit_id": "4cee220ab3beafa0147ae5f6dc422fc09ba54c74"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "3df58643ffc3f4aa6fc8511000cd3e16802a5dbd", "unresolved": false, "patch_set": 4, "id": "9fb8cfa7_70635d1b", "line": 68, "range": {"start_line": 68, "start_character": 0, "end_line": 68, "end_character": 41}, "updated": "2019-07-02 16:07:29.000000000", "message": "devise a logical set of valid cache entries?", "commit_id": "bdaddc96b8966b1c8ffb01c5be70415f5c4233ed"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "3ad9d8d1653d31211a0563d192ed3d946b660767", "unresolved": false, "patch_set": 4, "id": "9fb8cfa7_9bf01b94", "line": 68, "range": {"start_line": 68, "start_character": 0, "end_line": 68, "end_character": 41}, "in_reply_to": "9fb8cfa7_70635d1b", "updated": "2019-07-02 17:24:18.000000000", "message": "fixed in later version", "commit_id": "bdaddc96b8966b1c8ffb01c5be70415f5c4233ed"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "3df58643ffc3f4aa6fc8511000cd3e16802a5dbd", "unresolved": false, "patch_set": 4, "id": "9fb8cfa7_8b2d8496", "line": 69, "range": {"start_line": 69, "start_character": 68, "end_line": 69, "end_character": 75}, "updated": "2019-07-02 16:07:29.000000000", "message": "restrict", "commit_id": "bdaddc96b8966b1c8ffb01c5be70415f5c4233ed"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "3ad9d8d1653d31211a0563d192ed3d946b660767", "unresolved": false, "patch_set": 4, "id": "9fb8cfa7_fbf3579e", "line": 69, "range": {"start_line": 69, "start_character": 68, "end_line": 69, "end_character": 75}, "in_reply_to": "9fb8cfa7_8b2d8496", "updated": "2019-07-02 17:24:18.000000000", "message": "Done", "commit_id": "bdaddc96b8966b1c8ffb01c5be70415f5c4233ed"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "16f71f5158e461e6fc250798d603b8639221d751", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_7b03ec0d", "line": 20, "range": {"start_line": 20, "start_character": 34, "end_line": 20, "end_character": 75}, "updated": "2019-07-02 13:39:45.000000000", "message": "Is it worth stating clearly that ultimately the issue of noisy neighbours is addressed here by ensuring allocated and non-allocated instances don't end up on the same host?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "16f71f5158e461e6fc250798d603b8639221d751", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_a01e15b8", "line": 69, "range": {"start_line": 69, "start_character": 0, "end_line": 69, "end_character": 6}, "updated": "2019-07-02 13:39:45.000000000", "message": "provide?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ebf07905850536bba4b0a2510dc99ca5aa0051f", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_0aaffb7d", "line": 69, "range": {"start_line": 69, "start_character": 0, "end_line": 69, "end_character": 6}, "in_reply_to": "9fb8cfa7_a01e15b8", "updated": "2019-07-02 15:25:28.000000000", "message": "yes", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_6a90fc43", "line": 130, "range": {"start_line": 130, "start_character": 0, "end_line": 130, "end_character": 28}, "updated": "2019-07-02 11:22:58.000000000", "message": "so an equal split between the nodes.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_e022cd51", "line": 130, "range": {"start_line": 130, "start_character": 0, "end_line": 130, "end_character": 28}, "in_reply_to": "9fb8cfa7_6a90fc43", "updated": "2019-07-02 13:03:55.000000000", "message": "yes the same way as cpus or ram.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_2a96843f", "line": 131, "range": {"start_line": 130, "start_character": 35, "end_line": 131, "end_character": 16}, "updated": "2019-07-02 11:22:58.000000000", "message": "10% of the memory bandwidth of each NUMA nodes?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_8032f1a5", "line": 131, "range": {"start_line": 130, "start_character": 35, "end_line": 131, "end_character": 16}, "in_reply_to": "9fb8cfa7_2a96843f", "updated": "2019-07-02 13:03:55.000000000", "message": "yes this has chagne back and forth\n\nerric pointed out that deviding a percentage by the number of numa nodes felt weird so in this version i removed that behavior so its X% per numa node rather then X/N % where N is the number or numa nodes.\n\nill clarify in the next version", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_caeb28a1", "line": 169, "range": {"start_line": 168, "start_character": 5, "end_line": 169, "end_character": 50}, "updated": "2019-07-02 11:22:58.000000000", "message": "But then what is the meaning of the following?\n    hw:numa_bandwidth.0=10\n    hw:numa_bandwidth.1=30\n\nIs it 10% + 30% of the whole host bandwidth? And no enforcement that only 10% is used by virtual numa 0?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_0ac86052", "line": 169, "range": {"start_line": 169, "start_character": 15, "end_line": 169, "end_character": 22}, "updated": "2019-07-02 11:22:58.000000000", "message": "divided", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_c5bd5bb1", "line": 169, "range": {"start_line": 168, "start_character": 5, "end_line": 169, "end_character": 50}, "in_reply_to": "9fb8cfa7_caeb28a1", "updated": "2019-07-02 13:03:55.000000000", "message": "it means 10% limit on memory bandwidth of the host numa node corresponidn to virutal numa node0 + 30% of host numa node bandwidth for the host numa node corresponidnt to virtual numa node 1\n\n\nwe map each virtual numa node to a sperate host numa node\nso when you say\n\nhw:numa_bandwidth.0=10\nhw:numa_bandwidth.1=30\n\nwe are saying that the acess to memory attached to virtual numa node 0 will be limited to using at most 10% of the host numa node the get mapped too. in parallel to that we also enforfce a max memory bandwith limit on virtual numa node 1 where   acess to memory on virtual numa node 1 is limited to 30% of the host numa nodes bandwidth.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_8a2f70f4", "line": 177, "range": {"start_line": 175, "start_character": 20, "end_line": 177, "end_character": 36}, "updated": "2019-07-02 11:22:58.000000000", "message": "Can we simply say out of scope of this spec instead?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_053b7337", "line": 177, "range": {"start_line": 175, "start_character": 20, "end_line": 177, "end_character": 36}, "in_reply_to": "9fb8cfa7_8a2f70f4", "updated": "2019-07-02 13:03:55.000000000", "message": "sure im fine with doing this in the flavor only. ill update", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_8a18d0d2", "line": 235, "range": {"start_line": 234, "start_character": 40, "end_line": 235, "end_character": 34}, "updated": "2019-07-02 11:22:58.000000000", "message": "So just to be sure. Is this memory controller RP in 1:1 relationship to the NUMA RP but it is a different RP to avoid dependency to the NUMA in placement spec?", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_05ae132d", "line": 235, "range": {"start_line": 234, "start_character": 40, "end_line": 235, "end_character": 34}, "in_reply_to": "9fb8cfa7_8a18d0d2", "updated": "2019-07-02 13:03:55.000000000", "message": "yes a Numa node is really just a slang term for a memroy controler + the resouces that have phyical memory that is managed by that memory contoler.\n\nit is a sperate RP to have no dependency on the NUMA in placement spec but the intent that we will just reshape the invetory/allocations onto the numa node RP whenever that gets created.\n\nby tracking it as separate RPs from the start we wont have issue with incorrect accounting from a numa affinity perspective.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f663d0887473fd27dff94f7bd620a6a06160d530", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_629fca01", "line": 237, "updated": "2019-07-02 06:34:13.000000000", "message": "I guess you also need to extend the InstanceNumaCell object to store the request.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_050a9324", "line": 237, "in_reply_to": "9fb8cfa7_629fca01", "updated": "2019-07-02 13:03:55.000000000", "message": "im not sure if i do.\n\nwe dont need to actully assing specifc cacheway to the guest so the isntace numa toployg likely does not need to be modifyed. the request for the resouces will be in the request spec and the the rest will be stored in the placmenet allocation.\n\nthere may be a reason to store it in the instnace numa toplogy but i dont know what that is thinking about it quickly.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f663d0887473fd27dff94f7bd620a6a06160d530", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_0205ae45", "line": 255, "updated": "2019-07-02 06:34:13.000000000", "message": "Sean, I'm still stuck on the fragmental issue. Do we want to the virt driver raise exception when facing fragmental issue, then asking the scheduler to do a rescheduling? and expecting the libvirt resolve that problem in the future.\n\nOr we should use fixed size in the nova. This will lose some flexible.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_a019357a", "line": 255, "in_reply_to": "9fb8cfa7_0205ae45", "updated": "2019-07-02 13:03:55.000000000", "message": "the intent is to use a fixed size per host and manage it by chanign the step size in placement.\n\nso fragmentation will be avoided the same way as it was in the vpmem spec.\n\nin this case im not adding a config option to set this and am instead saying use the placement api directly to manage this but we could have a config for this if perople prefer.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "ed462c3bf201a4065ddb4693924b18bd01fdc85b", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_bb42bfaa", "line": 255, "in_reply_to": "9fb8cfa7_101f2a5c", "updated": "2019-07-02 17:26:15.000000000", "message": "yes we could use providers.yaml if its implemented this cycle. im not opposed to that but i don't want to make it a requirement.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "3df58643ffc3f4aa6fc8511000cd3e16802a5dbd", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_101f2a5c", "line": 255, "in_reply_to": "9fb8cfa7_4a8c132e", "updated": "2019-07-02 16:07:29.000000000", "message": "Or providers.yaml...", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ebf07905850536bba4b0a2510dc99ca5aa0051f", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_4a8c132e", "line": 255, "in_reply_to": "9fb8cfa7_a019357a", "updated": "2019-07-02 15:25:28.000000000", "message": "we discussed this some more on irc.\n\nto avoid fragmentation we need the step_size min_allocation and max allocation to all be equal to each other we also said a new config option for this rather then relying only on peole using the placement api is better so ill add that.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_aa4cb4c7", "line": 315, "range": {"start_line": 315, "start_character": 15, "end_line": 315, "end_character": 25}, "updated": "2019-07-02 11:22:58.000000000", "message": "nit:allocation", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e152c52e78ee5d4d4485ebe4b6c35aca83563fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_6af1dc6a", "line": 346, "updated": "2019-07-02 11:22:58.000000000", "message": "+1", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f663d0887473fd27dff94f7bd620a6a06160d530", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_8263de41", "line": 448, "range": {"start_line": 444, "start_character": 0, "end_line": 448, "end_character": 57}, "updated": "2019-07-02 06:34:13.000000000", "message": "I'm not sure we need this option. We can enable it all the times. Why people want to disable it, if the user doesn't request cache, it won't do anything.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7aeeed6e8309c21ee770d8a184e7a68c741062c1", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_c04c6940", "line": 448, "range": {"start_line": 444, "start_character": 0, "end_line": 448, "end_character": 57}, "in_reply_to": "9fb8cfa7_8263de41", "updated": "2019-07-02 13:03:55.000000000", "message": "if that is what people prefer then i can remvoe.\nall the other prefilters have config options i think.\n\ni originally did not have the per host\ncache_allocation_support, memory_bandwidth_limiting config options in an earlier draft of this before i pushed it up to gerrit. in that version this was needed for upgrades but in its current form this is not needed.\n\n\nthere is still one open question on if we should support mixing cache affined/memory limited guest with those without cache/memory alloction on the same host. if we decide not to support mixing on the same host in train, which i think i would prefer at least for the initial release, if people dont request cache or memory bandwidth the prefilter would add a forbiden trait to the request.\n\nif we allow mixing on the same host and rely on the undocuemnted behavior in libvirt that actully will do the right thing then the prefilter would do nothing if you dont request cache allocation or memory limits.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "16f71f5158e461e6fc250798d603b8639221d751", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_5b294887", "line": 501, "range": {"start_line": 501, "start_character": 2, "end_line": 501, "end_character": 16}, "updated": "2019-07-02 13:39:45.000000000", "message": "As discussed downstream I'm happy to help with this for what remains of Train.", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ebf07905850536bba4b0a2510dc99ca5aa0051f", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_8a9beb71", "line": 501, "range": {"start_line": 501, "start_character": 2, "end_line": 501, "end_character": 16}, "in_reply_to": "9fb8cfa7_5b294887", "updated": "2019-07-02 15:25:28.000000000", "message": "yep ill add you in the next version", "commit_id": "e292a1c95527f0dc5d5a6b2990cc14de73277605"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_1022c502", "line": 86, "range": {"start_line": 86, "start_character": 11, "end_line": 86, "end_character": 17}, "updated": "2019-07-02 22:55:02.000000000", "message": "control", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_308029c0", "line": 93, "updated": "2019-07-02 22:55:02.000000000", "message": "nts: where's the fourth one (allocation size)?", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_7328ebed", "line": 93, "in_reply_to": "9fb8cfa7_308029c0", "updated": "2019-07-03 00:57:06.000000000", "message": "on its in it in the Other deployer impact section below but ya i should provide an example here", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_b073b916", "line": 102, "range": {"start_line": 100, "start_character": 9, "end_line": 102, "end_character": 37}, "updated": "2019-07-02 22:55:02.000000000", "message": "This is not needed. Use forbidden aggregates if you want to isolate.\n\n[Later] or make isolation optional in the request filter for this -- see below.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 30001, "name": "Ivens Zambrano", "email": "ivens.zambrano@intel.com", "username": "IvensZambrano"}, "change_message_id": "78a6cd619d33b60ba95fee447850c667c05be1c6", "unresolved": false, "patch_set": 7, "id": "7faddb67_20243dc6", "line": 123, "range": {"start_line": 123, "start_character": 4, "end_line": 123, "end_character": 71}, "updated": "2019-07-05 19:39:06.000000000", "message": "Reference to spec https://review.opendev.org/#/c/612497/ may be needed here or with a pointer to the references section", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41084019e45193cc55326b251e77d501a700ef2b", "unresolved": false, "patch_set": 7, "id": "7faddb67_1fb291e7", "line": 123, "range": {"start_line": 123, "start_character": 4, "end_line": 123, "end_character": 71}, "in_reply_to": "7faddb67_20243dc6", "updated": "2019-07-09 18:57:01.000000000", "message": "well the intent was not to have a depency on that but i can add it as a referece.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f1680bd367cf31e1266a3a401cd512f52856d96f", "unresolved": false, "patch_set": 7, "id": "7faddb67_31033945", "line": 136, "updated": "2019-07-05 06:18:22.000000000", "message": "nit, hw:cpu_policy=dedicated", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f1680bd367cf31e1266a3a401cd512f52856d96f", "unresolved": false, "patch_set": 7, "id": "7faddb67_51003535", "line": 148, "updated": "2019-07-05 06:18:22.000000000", "message": "nit, hw:cpu_policy=dedicated", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_d0f74d59", "line": 177, "range": {"start_line": 176, "start_character": 4, "end_line": 177, "end_character": 78}, "updated": "2019-07-02 22:55:02.000000000", "message": "This still makes me uncomfortable. Guests that don't care about CDP will only be able to land on hosts that don't expose it. Is that acceptable?\n\nDo we have a real use case for CDP? Could we maybe support only the unified version for the first pass?", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41084019e45193cc55326b251e77d501a700ef2b", "unresolved": false, "patch_set": 7, "id": "7faddb67_9f48c1cc", "line": 177, "range": {"start_line": 176, "start_character": 4, "end_line": 177, "end_character": 78}, "in_reply_to": "7faddb67_ca822750", "updated": "2019-07-09 18:57:01.000000000", "message": "if you enable CDP you cant request cache allocation of unifed cache but you can run worklaods that dont request any cache allocation at all yes.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 30001, "name": "Ivens Zambrano", "email": "ivens.zambrano@intel.com", "username": "IvensZambrano"}, "change_message_id": "78a6cd619d33b60ba95fee447850c667c05be1c6", "unresolved": false, "patch_set": 7, "id": "7faddb67_ca822750", "line": 177, "range": {"start_line": 176, "start_character": 4, "end_line": 177, "end_character": 78}, "in_reply_to": "9fb8cfa7_b34c23c9", "updated": "2019-07-05 19:39:06.000000000", "message": "In tat case you may not need to prevent non CDP workloads to land on that node, they won't use, it will be a waste, but the workload will be able to work as if it was on a non CDP node. right?", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_b34c23c9", "line": 177, "range": {"start_line": 176, "start_character": 4, "end_line": 177, "end_character": 78}, "in_reply_to": "9fb8cfa7_d0f74d59", "updated": "2019-07-03 00:57:06.000000000", "message": "well there are two ways to control it\nfirst you have to enable cdp in the bios or using the runtime sysfs parameter. unless you opt into enabling it on the host it will present a unified cache.\n\nsecond you will have to also enable cat reporting in the nova.conf on the compute node. \n\nso you have to opt in twice for us to block you booting instance that dont care about cdp on a host that supports it.\n\nto your second question, the donwstream freature reqquest does not mention CDP at all. its just requestion support of CAT/RDT for a vRAN usecase so for V1 i.e. in train \ni think basic CAT support wihtout CDP would be ok if you would prefer to defer CDP.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_90c9d526", "line": 179, "range": {"start_line": 179, "start_character": 30, "end_line": 179, "end_character": 35}, "updated": "2019-07-02 22:55:02.000000000", "message": "number", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_306a69ed", "line": 220, "range": {"start_line": 219, "start_character": 46, "end_line": 220, "end_character": 6}, "updated": "2019-07-02 22:55:02.000000000", "message": "Still no. This does no good until CPUs are modeled under NUMA RPs.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41084019e45193cc55326b251e77d501a700ef2b", "unresolved": false, "patch_set": 7, "id": "7faddb67_ffc69549", "line": 220, "range": {"start_line": 219, "start_character": 46, "end_line": 220, "end_character": 6}, "in_reply_to": "7faddb67_b42dd747", "updated": "2019-07-09 18:57:01.000000000", "message": "right we will need to do cache aware numa pinning which i would like to do this cycle if we proceed with this spec and make it depen ont the placment nested magic spec.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_73ed4b8d", "line": 220, "range": {"start_line": 219, "start_character": 46, "end_line": 220, "end_character": 6}, "in_reply_to": "9fb8cfa7_306a69ed", "updated": "2019-07-03 00:57:06.000000000", "message": "cache regions may not align with numa node in all cases.\nthe do today but i was told but intels silicon team to not depend on that. i also think on the amd with ther ccx sub modules and a sperate io die we will have a non liniar mapping of cache regions to numa nodes so even with cpus modeled per numa node we may  or may not want the cache inventires to be on a numa node and might still want to keep them as seperate nested inventories.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f1680bd367cf31e1266a3a401cd512f52856d96f", "unresolved": false, "patch_set": 7, "id": "7faddb67_b42dd747", "line": 220, "range": {"start_line": 219, "start_character": 46, "end_line": 220, "end_character": 6}, "in_reply_to": "9fb8cfa7_73ed4b8d", "updated": "2019-07-05 06:18:22.000000000", "message": "actually, if we have mulitple caches region for one numa node in the future, then if nova doesn't aware the cpu pinning based on the cache region, it is meanless also.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_3043496f", "line": 241, "range": {"start_line": 238, "start_character": 75, "end_line": 241, "end_character": 11}, "updated": "2019-07-02 22:55:02.000000000", "message": "Yup, great idea - for later, when there's a reason to track them separately. Otherwise you're just adding complexity for no benefit.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_e60f3b2d", "line": 241, "range": {"start_line": 238, "start_character": 75, "end_line": 241, "end_character": 11}, "in_reply_to": "9fb8cfa7_3043496f", "updated": "2019-07-03 00:57:06.000000000", "message": "well i pretty sure we need this for AMD's ZEN 2 based  Rome server chips that were detailed at compute tex last year are are expect later this year. i know the destop version are launching on july 7th im not sure if the launch date other then Q2 2019 has been annouched for the rome chips.\n\nif you look at the process that was shown at compute text last month https://images.anandtech.com/doci/14525/amd_rome-678_678x452.png\n\nyou will see that the is a singel large die in the midel and 8 smaller dies.\n\nthe central die is the io die which has the memory controlers and pci controlers and other cpu supproted perfiferals.\n\nhttps://www.semiaccurate.com/assets/uploads/2018/11/AMD_Rome_layout.jpg\n\nthe 8 smaller dies are the CCXs or  core complexs\n\nhttps://image-private.slidesharecdn.com/nexthorizongamingtechdaygeneralsessionmarkpapermaster-190619185900/95/slide-12-1024.jpg?hdnea=acl=/nexthorizongamingtechdaygeneralsessionmarkpapermaster-190619185900/95/slide-12-1024.jpg*~exp=1562111281~hmac=019dfbc7e93304e4760e12677f6569f34596d6d5c41b530f8c48f11f335449bf&cb=1560971064\n\neach ccx has a 4  cpu cores each of which has a dedicated l1 and l2 cache and  there is an l3 cache that is shared. \n\nhttps://www.techpowerup.com/img/9hHbdiSLzqzOCNgx.jpg\n\nhttps://images.anandtech.com/doci/14525/Mike_Clark-Next_Horizon_Gaming-CPU_Architecture_06092019-page-010.jpg\n\nto use cache form a different ccx i belive the core has to communicate via the io die as i dont think ccx's can communicate directly so there will be higher latency.\n\nwhile intel has similar featrures  with its mesh architecture intel has 1 memory controler per l3 cahce region but i dont think that will be the case for amd and i dont think we shoudl assume intel wont change that in the futrue if they determin there is a better way to do it.\n\non the previous generation of amd eypc cpus\n\nhttps://www.servethehome.com/wp-content/uploads/2017/08/AMD-EPYC-Infinity-Fabric-Topology-Mapping.jpg\n\nthe io  and memory contolers are distibuted to each of the 4 dies so each die was a numa node and l3 cache region with an infintiy fabric interconnect between the dies.\nif you squint a little it s similar to what intel used to do before it move to the purley architecture.\n\nso im trying to make sure we can supprot zen2 when it launches.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_130def34", "line": 245, "range": {"start_line": 244, "start_character": 36, "end_line": 245, "end_character": 33}, "updated": "2019-07-02 22:55:02.000000000", "message": "Okay, *really* no.\n\nFor a minute as I read below I was thinking there might actually be merit in using nested providers if the COS policy needs to be consumed from the same provider (or subtree) as the cache. But having it be in a separate RP that's not tied to the corresponding cache in any way? That makes no sense.\n\nThe only way I could possibly be on board with using nested providers right now (rather than waiting until the VCPU/PCPU/MEMORY_MB is also split) is if you had one RP per NUMA node that housed all the cache and COS inventories for that whole NUMA node. That would let you ensure *part of* the affinity model directly by putting the cache and corresponding COS in the same request group.\n\nA future reshape would split the cache regions into children *of the NUMA node RP*, but only once the placement-side affinity magic is supported.\n\nBut again, I feel pretty strongly that we shouldn't be trying to use nested providers at all at this stage.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_4643a714", "line": 245, "range": {"start_line": 244, "start_character": 36, "end_line": 245, "end_character": 33}, "in_reply_to": "9fb8cfa7_130def34", "updated": "2019-07-03 00:57:06.000000000", "message": "well the cache and the cache CoS inventories would be in the same RP the memory would be in a seperate RP.\n\nthe memory RP really is a numa node but the cache region RP are not. see my answer above related to the upcoming z2 base amd eypc cpus.\n\ni shoudl proably say that cache allocation should always be form the local cache region and define that as cache affinity\n\nand use the term \"numa affinity\" only for affinity to the memory controller.\n\nif you think we will land the placement support for numa soon enough to use it for this feature in train im happy to say we will use that for the memory bandiwt rp.\n\ni think we will end up wanted to model cpu inventores and cpu cache inventories in the same RP which will be child RP of the numa node RP that contains hugepage memory and the 4k memroy e.g. MEMORY_MB that is not numa ffined will like stay on the root compute node RP.\n\nthat is jsut a guess but i think we will need a 3 level tree to model this correctly in placmenet assuming we dont jsut do the nuam and cache affintiy checks in nova.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_105ac54f", "line": 265, "range": {"start_line": 263, "start_character": 0, "end_line": 265, "end_character": 26}, "updated": "2019-07-02 22:55:02.000000000", "message": "These don't match L177", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_665d8beb", "line": 265, "range": {"start_line": 263, "start_character": 0, "end_line": 265, "end_character": 26}, "in_reply_to": "9fb8cfa7_105ac54f", "updated": "2019-07-03 00:57:06.000000000", "message": "your right i update this to *cache_way as you asked but i missed updating 177 ill fix that in the next version.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_702ea1ac", "line": 273, "range": {"start_line": 273, "start_character": 35, "end_line": 273, "end_character": 42}, "updated": "2019-07-02 22:55:02.000000000", "message": "above,", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_303829ed", "line": 273, "range": {"start_line": 273, "start_character": 68, "end_line": 273, "end_character": 73}, "updated": "2019-07-02 22:55:02.000000000", "message": "classes", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_d028ad98", "line": 284, "range": {"start_line": 284, "start_character": 12, "end_line": 284, "end_character": 20}, "updated": "2019-07-02 22:55:02.000000000", "message": "Not really, they track \"number of policies\". As such, IMO we should suffix with _POLICY\n\n CACHE_COS_POLICY\n MEMORY_BANDWIDTH_COS_POLICY", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_662b4b33", "line": 284, "range": {"start_line": 284, "start_character": 12, "end_line": 284, "end_character": 20}, "in_reply_to": "9fb8cfa7_d028ad98", "updated": "2019-07-03 00:57:06.000000000", "message": "ok i can add a policy sufix", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 30001, "name": "Ivens Zambrano", "email": "ivens.zambrano@intel.com", "username": "IvensZambrano"}, "change_message_id": "78a6cd619d33b60ba95fee447850c667c05be1c6", "unresolved": false, "patch_set": 7, "id": "7faddb67_33c9f677", "line": 294, "range": {"start_line": 287, "start_character": 0, "end_line": 294, "end_character": 12}, "updated": "2019-07-05 19:39:06.000000000", "message": "where are these policies stored?? is part of the nova node artifacts?", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41084019e45193cc55326b251e77d501a700ef2b", "unresolved": false, "patch_set": 7, "id": "7faddb67_9fda0115", "line": 294, "range": {"start_line": 287, "start_character": 0, "end_line": 294, "end_character": 12}, "in_reply_to": "7faddb67_33c9f677", "updated": "2019-07-09 18:57:01.000000000", "message": "this is coming for libvirt and it is derived direclty form the info reported in sysfs which comes form the bios/hardwared confiuration.\n\nso this is all configured out of band of nova/libvirt at the os/bios/uefi level we are just using the data that is reported.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_53592733", "line": 354, "updated": "2019-07-02 22:55:02.000000000", "message": "nit: I found this (since L287) confusing to read as it seems to jump back and forth between the cache and memory bandwidth. It might read better if you introduced the XML for cache, then described the cache aspects; then introduced the XML for memory bandwidth and described that.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_2625535d", "line": 354, "in_reply_to": "9fb8cfa7_53592733", "updated": "2019-07-03 00:57:06.000000000", "message": "am ill address the other comments and then ill think about re re organising this to describe them serialy as you suggest.\n\nill need to take a step back and think about how to do that so it will take more time then the other changes.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_133bafc8", "line": 392, "range": {"start_line": 392, "start_character": 35, "end_line": 392, "end_character": 42}, "updated": "2019-07-02 22:55:02.000000000", "message": "contain", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_53ce07b5", "line": 398, "updated": "2019-07-02 22:55:02.000000000", "message": "These should be named like compute capabilities (COMPUTE_*). But see below.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_061ccf11", "line": 398, "in_reply_to": "9fb8cfa7_53ce07b5", "updated": "2019-07-03 00:57:06.000000000", "message": "im not sure about that as COMPUTE_* is used for virtualisation capablites not hardware capablites but i haven't read below yet so im not 100% against changing them to the compute namespace.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_537287af", "line": 421, "range": {"start_line": 421, "start_character": 28, "end_line": 421, "end_character": 34}, "updated": "2019-07-02 22:55:02.000000000", "message": "depends", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_b360a3d1", "line": 432, "range": {"start_line": 432, "start_character": 36, "end_line": 432, "end_character": 45}, "updated": "2019-07-02 22:55:02.000000000", "message": "Specifying", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_d35d1716", "line": 433, "range": {"start_line": 433, "start_character": 4, "end_line": 433, "end_character": 62}, "updated": "2019-07-02 22:55:02.000000000", "message": "++\n\nbut\n\nthat means you need to check for that explicitly and generate an error, which we don't have a precedent for", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_93eb1f11", "line": 458, "range": {"start_line": 457, "start_character": 17, "end_line": 458, "end_character": 47}, "updated": "2019-07-02 22:55:02.000000000", "message": "As above, not on board with this. Means I can't land my normal NUMA-y VM on a host that exposes these resources. It should be up to the operator whether they want to isolate to that degree.\n\nI could be convinced that this could be controlled by (yet) another conf option. I grasp that it would be convenient to do it in the same request filter, since it's going to be written anyway.\n\nAlso, you imply that each trait will be controlled independently. So if I ask for cache but not membw, I will *only* land on hosts with ``cache_allocation_support=True`` && ``memory_bandwidth_limiting=False``? If I didn't think we were isolating too granularly already, this would definitely push me over the edge.\n\nHow about this:\n- A single trait (e.g. COMPUTE_NUMA_PQOS) which gets flipped on if *either* ``cache_allocation_support`` or ``memory_bandwidth_limiting`` is true.\n- A scheduler conf option ``pqos_isolate_hosts=$bool``.\n- Iff ``pqos_isolate_hosts=True``, the request filter can add root_required=!COMPUTE_NUMA_PQOS whenever *none* of the five resource classes is requested.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_b36ae37e", "line": 458, "range": {"start_line": 458, "start_character": 57, "end_line": 458, "end_character": 77}, "updated": "2019-07-02 22:55:02.000000000", "message": "This isn't necessary; the resource requests are sufficient to ensure we land on a viable host.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_e6e3bb05", "line": 458, "range": {"start_line": 457, "start_character": 17, "end_line": 458, "end_character": 47}, "in_reply_to": "9fb8cfa7_93eb1f11", "updated": "2019-07-03 00:57:06.000000000", "message": "well part of the reason for not leaving it up to the operator is how many operators shot them selves in the foot and still do when we left it up to them to isolate host properly fo cpus pinnign and hugepages.\n\nthat said i did brefly discuss should the isolation be configuratble with lee earlier today so i can see having a config option for that.\n\nalex was suggesting removing the option for enabling or disabling the prefilter and always enabling it which prometed the question instead of haveing a config option to enable or disable the prefilter perhaps the config option should enable or disable isoaltion.\n\nso we would replace the one on line 505", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_46b887e4", "line": 458, "range": {"start_line": 458, "start_character": 57, "end_line": 458, "end_character": 77}, "in_reply_to": "9fb8cfa7_b36ae37e", "updated": "2019-07-03 00:57:06.000000000", "message": "yes the trait was for the anti affintiy.\n\nto prevent instance that dont request the resouce form landing on it if we choose to isolate them.\n\nwe can use aggreates for that but i think that is much more error prone and is more of a burden on operators.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_330cb3eb", "line": 470, "updated": "2019-07-02 22:55:02.000000000", "message": "IMO these should be named in some way that helps me understand they're related, like prefixing with ``pqos_``.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_932d5fff", "line": 470, "in_reply_to": "9fb8cfa7_330cb3eb", "updated": "2019-07-03 00:57:06.000000000", "message": "ya that is a good idea.\nill add that in the next version.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2ba0460b5d691a38583c80cbbb2bcd27a73d2d6b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_13f3afe9", "line": 505, "range": {"start_line": 505, "start_character": 19, "end_line": 505, "end_character": 28}, "updated": "2019-07-02 22:55:02.000000000", "message": "<dan_hat>prefiltering</dan_hat>", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "5a12be37ab369d57fdc79aefc7a633a94de32108", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_06ca8f6d", "line": 505, "range": {"start_line": 505, "start_character": 19, "end_line": 505, "end_character": 28}, "in_reply_to": "9fb8cfa7_13f3afe9", "updated": "2019-07-03 00:57:06.000000000", "message": "sure ill change this.\n\nbut maybe this shoudl be pqos_host_isolation instead?\n\ni would prefer to default to True in that case but since you still have to opt into report the pqos resources by seeting the compute node config options but im ok to defualting to false and just documenting the pros and cons of either approach. this is somthing we would likely change in a deployment tool as we validate this feature in production but initially i was trying to be somewhat conservative with what we allow by default with the view to relax that over time.", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "f1680bd367cf31e1266a3a401cd512f52856d96f", "unresolved": false, "patch_set": 7, "id": "7faddb67_f41a6f15", "line": 507, "updated": "2019-07-05 06:18:22.000000000", "message": "Just want to see what other people's opinion on the extra specs discovering problem...", "commit_id": "7cc67b359cb05666fc2bd91320ba29f3e7f3a408"}]}}, "openstack%2Ftacker-specs~master~I20f04fb08602f8d743efd483c9079b19740759c4": {"owner_id": 1011, "owner_name": "Tushar Patil", "owner_email": "tushar.vitthal.patil@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-08 07:34:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27180, "name": "Keiko Kuriu", "email": "kuriu.keiko@gmail.com", "username": "keiko-k"}, {"value": 2, "date": "2020-04-07 14:43:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "_account_id": 30650, "name": "nitin uikey", "email": "nitin.uikey@nttdata.com", "username": "nitin.uikey"}, {"value": 2, "date": "2020-04-20 06:13:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 1, "date": "2020-04-10 04:02:23.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 1, "date": "2020-04-13 12:44:55.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 17255, "name": "Toshiaki Takahashi", "email": "ts-takahashi@nec.com", "username": "takahashi_ts"}, {"value": 1, "date": "2020-04-13 01:09:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"specs/ussuri/etsi-nfv-sol-rest-api-for-VNF-deployment.rst": [{"author": {"_account_id": 17255, "name": "Toshiaki Takahashi", "email": "ts-takahashi@nec.com", "username": "takahashi_ts"}, "change_message_id": "2e322c044416920d7c85348e4e79aec2def9c36e", "unresolved": false, "patch_set": 1, "id": "df33271e_6020104b", "line": 751, "range": {"start_line": 751, "start_character": 50, "end_line": 751, "end_character": 58}, "updated": "2020-04-05 17:28:12.000000000", "message": "What does adding `GRACEFUL` and remaining \"only forceful termination will be supported\" mean?\nWhat happens when GRACEFUL is requested?\n\nIn my understanding, patch for terminate includes process for GRACEFUL.\nhttps://review.opendev.org/#/c/707805", "commit_id": "fba3e0bad651a8dcf10b8f4fb15c677c09d0c1f3"}]}}, "openstack%2Fglance~master~Iad92971425c383010c0f7df0a4c32c327d4ea336": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-04-20 06:15:45.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"glance/tests/functional/db/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fbce2b2b", "line": 23, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.exception)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/api/test_cmd.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7bfb3b46", "line": 16, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/async_/flows/plugins/test_image_conversion.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9bcd6733", "line": 18, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/async_/flows/plugins/test_inject_image_metadata.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5bf8ff47", "line": 17, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/async_/flows/test_convert.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1b54b752", "line": 18, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/async_/flows/test_import.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bb9663ef", "line": 18, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/async_/flows/test_web_download.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1bd957f2", "line": 17, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_dbec0f91", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.lockutils)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/common/scripts/image_import/test_main.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9bf60763", "line": 17, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.urllib)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/common/scripts/test_scripts_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7be21ba2", "line": 17, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.urllib)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/common/test_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5b8d9fd1", "line": 17, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.http_client)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/common/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7b4dfbc2", "line": 19, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, tempfile)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/common/test_wsgi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_dbd36fd4", "line": 27, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_db.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bbf1436e", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_domain.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bbc82322", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_domain_proxy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fb9c6b0f", "line": 19, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.range)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_glance_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7b905bee", "line": 18, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.exception)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_glance_replicator.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1b02f73d", "line": 24, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5b4abfab", "line": 20, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.stringio)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_notifier.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_dba1af48", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3b8a53be", "line": 28, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_quota.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1b8797b7", "line": 19, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/test_scrubber.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fbe74bab", "line": 20, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.patch)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3b57f35a", "line": 20, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/v2/test_image_data_resource.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3b053347", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/v2/test_images_resource.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9b9ba716", "line": 25, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/unit/v2/test_tasks_resource.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5bdf5fd5", "line": 21, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}], "glance/tests/utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94d6d599e6417785bdde68b0ab9c2af2ee8c7171", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3bdc13e3", "line": 31, "updated": "2020-04-20 03:15:47.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "108cefdb7b6643efaa2a27ce544521db7e8c3d53"}]}}, "openstack%2Fpython-swiftclient~master~Ib9fe754b700bceb164ba0f596cbcc6d864ccbadc": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 02:06:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 1, "date": "2020-04-19 12:38:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"setup.cfg": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "7acc56e115be3cbb5d668777fd53f61f346a1366", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_afbd85d9", "line": 18, "range": {"start_line": 17, "start_character": 0, "end_line": 18, "end_character": 41}, "updated": "2020-04-19 12:38:12.000000000", "message": "Still compat with py2?", "commit_id": "bb3888e73e8bcbdc2340309a85a5f57a0c5bccf0"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "1ed86fad8be17951c89e5336f49e84d9a68bd47e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6f9c1d6a", "line": 18, "range": {"start_line": 17, "start_character": 0, "end_line": 18, "end_character": 41}, "in_reply_to": "3f4c43b2_afbd85d9", "updated": "2020-04-19 12:43:05.000000000", "message": "Yes, swift still support Py2", "commit_id": "bb3888e73e8bcbdc2340309a85a5f57a0c5bccf0"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "7acc56e115be3cbb5d668777fd53f61f346a1366", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4feb21db", "line": 47, "range": {"start_line": 42, "start_character": 0, "end_line": 47, "end_character": 21}, "updated": "2020-04-19 12:38:12.000000000", "message": "Could be dropped too, not?", "commit_id": "bb3888e73e8bcbdc2340309a85a5f57a0c5bccf0"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "1ed86fad8be17951c89e5336f49e84d9a68bd47e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4f996177", "line": 47, "range": {"start_line": 42, "start_character": 0, "end_line": 47, "end_character": 21}, "in_reply_to": "3f4c43b2_4feb21db", "updated": "2020-04-19 12:43:05.000000000", "message": "the wheel is needed for support py2 and 3, the pbr section looks ok", "commit_id": "bb3888e73e8bcbdc2340309a85a5f57a0c5bccf0"}]}}, "openstack%2Fsolum~master~I3bd764213089a79dd56259f99da2e4634499f5ff": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:55:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpython-muranoclient~master~I96f66e103313c5ba4eb9cc04ed1e813ab3fb0532": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:53:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano-pkg-check~master~Iee2ca363966243826134c1b5f5c9762d4b53662f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:55:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"muranopkgcheck/tests/test_yaml_validator.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8d50b6a0ef97cea70c759f17052f3c381521850c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_65e0c397", "line": 16, "updated": "2020-04-18 17:13:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "1fa0f6e5b863a73184ccfaeec06b614084274352"}]}}, "openstack%2Fvirtualbmc~master~I436eab174b823c1e0e028529fed9009cc38776bc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 05:51:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:02:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {"virtualbmc/tests/unit/test_vbmc.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "5b760ffc979138056cefa55a18ca5c691040b06f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_55e1ee29", "line": 17, "updated": "2020-04-19 17:02:30.000000000", "message": "needs to go before libvirt, I wonder why the pep8 job doesn't complain", "commit_id": "0947b53bdf1a6ca72a05765e997372eda2ca294b"}, {"author": {"_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, "change_message_id": "aaa6667984caac3c6a9a15429cbc43713b07749f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3b0ff337", "line": 17, "in_reply_to": "3f4c43b2_55e1ee29", "updated": "2020-04-20 03:39:00.000000000", "message": "https://review.opendev.org/721162 will fix it.", "commit_id": "0947b53bdf1a6ca72a05765e997372eda2ca294b"}]}}, "openstack%2Fmurano-dashboard~master~Ib6d77162e66e0258fdb311a08967cbae6ae7a117": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-04-20 05:55:17.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"muranodashboard/tests/unit/catalog/test_views.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06073e1a", "line": 17, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/categories/test_views.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e624d2b1", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/common/test_net.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e60b3221", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/common/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66172247", "line": 21, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/dynamic_ui/test_fields.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26119a53", "line": 21, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/dynamic_ui/test_forms.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4614a644", "line": 17, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/dynamic_ui/test_services.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86334ef6", "line": 19, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, semantic_version)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/dynamic_ui/test_yaql_functions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a62e4a8f", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, re)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/environments/test_forms.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6630c2e9", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/environments/test_tables.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c629d68a", "line": 18, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/environments/test_tabs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_463dc6c2", "line": 17, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/environments/test_views.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0620de9a", "line": 20, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, sys)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/images/test_forms.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c64ef66d", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/images/test_views.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_861a2e6c", "line": 17, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/packages/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_263a3acb", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.py3)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}], "muranodashboard/tests/unit/packages/test_tables.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d84695fbbb3d2a0499226df4b07cb81fcbf791f1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a653ea16", "line": 16, "updated": "2020-04-20 03:42:17.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "9162f27a1995e2d44cf94f65f8e402c981c6fc6b"}]}}, "openstack%2Fmurano-agent~master~Id3f972d96209f1ddeacd28342a4eb1838390caca": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-04-20 05:54:39.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"muranoagent/tests/unit/executors/test_chef.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "78ddb523a2a17d63709e07f79fba51a69427545c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9b7f27df", "line": 18, "updated": "2020-04-20 03:10:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, mock.any)", "commit_id": "a5ec71650d92f28c459306df0de2106d66bfa62f"}], "muranoagent/tests/unit/test_app.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "78ddb523a2a17d63709e07f79fba51a69427545c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fb80ebc1", "line": 17, "updated": "2020-04-20 03:10:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, ssl)", "commit_id": "a5ec71650d92f28c459306df0de2106d66bfa62f"}], "muranoagent/tests/unit/test_files_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "78ddb523a2a17d63709e07f79fba51a69427545c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bb7ae3ed", "line": 16, "updated": "2020-04-20 03:10:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os.path)", "commit_id": "a5ec71650d92f28c459306df0de2106d66bfa62f"}]}}, "openstack%2Fpython-solumclient~master~I35d6f1207b57ea40809f78785c69a13c2943e1bc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:53:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano-agent~master~I24daffca6667325bd7710e02e0b6a057935e9ac9": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:53:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "x%2Fvmware-nsxlib~master~I53a747563382ca37d0a4bcbdd1045ae12048d77b": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 05:47:40.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmistral-extra~master~I8547aec13aa28fecf75f957e1f2ca7f5c56628ea": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 19:19:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 2, "date": "2020-04-20 05:42:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}], "comments": {}}, "openstack%2Fkolla~master~Idaaee886ceb6cf29494369e771f8ec453550e3f9": {"owner_id": 18575, "owner_name": "Saravanan KR", "owner_email": "krsacme@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": -1, "date": "2020-01-30 10:11:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31108, "name": "Gowrishankar", "email": "gmuthukr@redhat.com", "username": "gmuthukr"}], "comments": {"kolla/image/build.py": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "56210e4de35aa36744fdde4011957515a931632e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b362e2a6", "line": 157, "range": {"start_line": 157, "start_character": 8, "end_line": 157, "end_character": 34}, "updated": "2020-01-30 09:28:13.000000000", "message": "should go to debian+binary", "commit_id": "f6c3b25d6af960f7c21f35518df41a68e63773fd"}, {"author": {"_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, "change_message_id": "731fdf3d0a99aa5248c87f3517db1a9e3de85eab", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b3a0a238", "line": 157, "range": {"start_line": 157, "start_character": 8, "end_line": 157, "end_character": 34}, "in_reply_to": "3fa7e38b_b362e2a6", "updated": "2020-01-30 10:07:49.000000000", "message": "Done", "commit_id": "f6c3b25d6af960f7c21f35518df41a68e63773fd"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "56210e4de35aa36744fdde4011957515a931632e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_73022abc", "line": 165, "range": {"start_line": 165, "start_character": 9, "end_line": 165, "end_character": 32}, "updated": "2020-01-30 09:28:13.000000000", "message": "ditto for ubuntu", "commit_id": "f6c3b25d6af960f7c21f35518df41a68e63773fd"}, {"author": {"_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, "change_message_id": "731fdf3d0a99aa5248c87f3517db1a9e3de85eab", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_535b6e60", "line": 165, "range": {"start_line": 165, "start_character": 9, "end_line": 165, "end_character": 32}, "in_reply_to": "3fa7e38b_73022abc", "updated": "2020-01-30 10:07:49.000000000", "message": "Done", "commit_id": "f6c3b25d6af960f7c21f35518df41a68e63773fd"}]}}, "openstack%2Ftripleo-ci~master~I0264d1c3d56995ed5dec6342a5f235936e807fe3": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-14 07:43:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-04-14 06:46:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"roles/build-containers/tasks/pre.yaml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "cf12d2178379caac64707baa5db1e746629907db", "unresolved": false, "patch_set": 9, "id": "df33271e_1c0b9a8d", "line": 85, "range": {"start_line": 85, "start_character": 16, "end_line": 85, "end_character": 35}, "updated": "2020-04-03 06:18:19.000000000", "message": "switch to tripleo_image_serve as this is removed with https://review.opendev.org/#/c/703477/", "commit_id": "f4243cbcacaac49f88c7760a6cc0ae100d321c1e"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "e735a182876db98aedcda7b08570880274c4f37f", "unresolved": false, "patch_set": 12, "id": "df33271e_b9e358a4", "line": 73, "range": {"start_line": 73, "start_character": 33, "end_line": 73, "end_character": 44}, "updated": "2020-04-07 06:40:13.000000000", "message": "why not say explicitly say when centos?", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "0375131dfb0999b4b5de22582b3ac69779b5e365", "unresolved": false, "patch_set": 12, "id": "df33271e_26cc12bb", "line": 73, "range": {"start_line": 73, "start_character": 33, "end_line": 73, "end_character": 44}, "in_reply_to": "df33271e_b9e358a4", "updated": "2020-04-08 15:21:30.000000000", "message": "I tried to use similar condition from L9.", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "3287e77932a95a9d64bf126c28eb7060073100e8", "unresolved": false, "patch_set": 12, "id": "df33271e_d94f3c90", "line": 90, "range": {"start_line": 89, "start_character": 38, "end_line": 90, "end_character": 19}, "updated": "2020-04-07 06:47:24.000000000", "message": "looks good at https://ee771230d40e7b2547ad-f6d9d58f0487401586e66f66be7f6106.ssl.cf1.rackcdn.com/713439/12/check/tripleo-build-containers-centos-8/1f2883a/job-output.txt\n\n2020-04-06 16:04:01.953545 | TASK [build-containers : Enable ports for httpd]\n2020-04-06 16:04:09.287145 | primary | changed\n2020-04-06 16:04:09.427247 | \n2020-04-06 16:04:09.428255 | TASK [build-containers : Setup Listen on default port for serving repo files]\n2020-04-06 16:04:12.840273 | primary | changed\n2020-04-06 16:04:12.919393 | \n2020-04-06 16:04:12.919655 | TASK [Configure tripleo registry]\n2020-04-06 16:04:13.107599 | primary | ok", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "e3eed440dd4c947a1147dd41c5e421ef376d276a", "unresolved": false, "patch_set": 12, "id": "df33271e_f75ea4e7", "line": 93, "range": {"start_line": 93, "start_character": 45, "end_line": 93, "end_character": 63}, "updated": "2020-04-06 07:13:18.000000000", "message": "where is that defined please\n\n[edit]: perhaps you meant container_registry_port?  i see that in molecule scenario legacy_vars but not sure.. is it something you pass in?", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "e735a182876db98aedcda7b08570880274c4f37f", "unresolved": false, "patch_set": 12, "id": "df33271e_19d524ba", "line": 93, "range": {"start_line": 93, "start_character": 45, "end_line": 93, "end_character": 63}, "in_reply_to": "df33271e_c6292ff3", "updated": "2020-04-07 06:40:13.000000000", "message": "ah thanks... i was looking for it in the tripleo_image_serve role  ...", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "0422fbb0c95e6e499b3064f1d2d4fd57afa174d6", "unresolved": false, "patch_set": 12, "id": "df33271e_c6292ff3", "line": 93, "range": {"start_line": 93, "start_character": 45, "end_line": 93, "end_character": 63}, "in_reply_to": "df33271e_f75ea4e7", "updated": "2020-04-06 08:49:42.000000000", "message": "it is role variable https://opendev.org/openstack/tripleo-ci/src/branch/master/roles/build-containers/defaults/main.yaml#L1", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "102f8f731ae0a93046f78600dfc342b562c59e2c", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_0181e8c3", "line": 91, "range": {"start_line": 91, "start_character": 16, "end_line": 91, "end_character": 35}, "updated": "2020-04-20 04:57:30.000000000", "message": "proposed https://review.opendev.org/#/c/721165/ to handle it for train.", "commit_id": "ff3327c4d3f44fec4a5592f2946118f2157f2108"}], "zuul.d/base.yaml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "0375131dfb0999b4b5de22582b3ac69779b5e365", "unresolved": false, "patch_set": 12, "id": "df33271e_06446e1a", "line": 400, "range": {"start_line": 400, "start_character": 7, "end_line": 400, "end_character": 33}, "updated": "2020-04-08 15:21:30.000000000", "message": "this can be cleaned up if stable/stein gets deleted for tripleo-ansible https://review.opendev.org/#/c/718468/. Will wait for some time and update the patch.", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "8d21333c4ce2e3828575445ed55dd315370f9627", "unresolved": false, "patch_set": 12, "id": "3f4c43b2_f1688022", "line": 400, "range": {"start_line": 400, "start_character": 7, "end_line": 400, "end_character": 33}, "in_reply_to": "df33271e_06446e1a", "updated": "2020-04-13 14:39:58.000000000", "message": "deleted now, i will revise the patch now.", "commit_id": "6a630c13a05c624c1a710571f9b9c9abe5ad0f4f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "c65e5948240313b9807fab7f18875ca14d11a3e4", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_7fc0ae51", "line": 423, "updated": "2020-04-14 06:46:38.000000000", "message": "we should probably use yaml anchors for roles/required-projects here since they are the same for these two ^^ base jobs\n\nbut that belongs in its own review probably", "commit_id": "ff3327c4d3f44fec4a5592f2946118f2157f2108"}], "zuul.d/build-containers.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3b241298050abf27ee2a03e32658c4e7c2edd25f", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1f3604e9", "line": 21, "range": {"start_line": 5, "start_character": 2, "end_line": 21, "end_character": 0}, "updated": "2020-03-17 13:13:17.000000000", "message": "expected a dictionary for dictionary value @ data['check']", "commit_id": "ef59ba836acf6a963d7113000ada8c4819a466de"}], "zuul.d/layout.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "3b241298050abf27ee2a03e32658c4e7c2edd25f", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ff3a08cb", "line": 9, "range": {"start_line": 7, "start_character": 2, "end_line": 9, "end_character": 0}, "updated": "2020-03-17 13:13:17.000000000", "message": "The project template \"tripleo-ci-build-containers-jobs\" was not found.", "commit_id": "ef59ba836acf6a963d7113000ada8c4819a466de"}]}}, "openstack%2Ftripleo-common~master~I671b337cef6097e408e23ae7ae6c9cf0ecc3724d": {"owner_id": 18575, "owner_name": "Saravanan KR", "owner_email": "krsacme@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}], "comments": {}}, "starlingx%2Fansible-playbooks~master~I58c5a6ae2a1a9e83bf01eb38a8f6ecf8acd80fee": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "starlingx%2Fstx-puppet~master~I23ae948f19fc10ebd9390306dfa91f041618356e": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": -1, "date": "2020-04-13 18:55:32.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "date": "2020-04-13 19:03:35.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"puppet-manifests/src/modules/platform/templates/armada.yaml.erb": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "eef5a88de97e39631251d3501ce3e701b280eaf4", "unresolved": false, "patch_set": 2, "id": "df33271e_53ccfb33", "line": 9, "updated": "2020-04-02 18:54:49.000000000", "message": "Since this apiversion is deprecated as of 1.17, can we just use v1\n\nSee info on the commit that deprecated it here\nhttps://github.com/kubernetes/kubernetes/pull/84758", "commit_id": "4d53aec22a42ef1c37a04f9ea095f5063247ba46"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "91db19ee09976a058ecbad5dbb1c17090ad44813", "unresolved": false, "patch_set": 2, "id": "df33271e_22363a04", "line": 9, "in_reply_to": "df33271e_53ccfb33", "updated": "2020-04-03 01:09:10.000000000", "message": "Done", "commit_id": "4d53aec22a42ef1c37a04f9ea095f5063247ba46"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "e15388161aad1b4dbefb617a335c04761f3760ff", "unresolved": false, "patch_set": 3, "id": "df33271e_c53118ef", "line": 75, "updated": "2020-04-06 18:46:13.000000000", "message": "My only question would be about this tag.\nDoes it make sense to override this value somehow, like a variable for the erb?\nDoes this value need to be aligned with any other changes, or is this the only place where this image is used?", "commit_id": "bbc6a8f8d4b9811d9f8f3ae49c5cecdb6c1356e0"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "d709e2a89149fdc3baeb455ccd2b048a372956c5", "unresolved": false, "patch_set": 3, "id": "df33271e_2da9c6de", "line": 75, "in_reply_to": "df33271e_c53118ef", "updated": "2020-04-07 00:38:18.000000000", "message": "It is the only place where this image is used now.\nBefore this patch, it was defined in below, and only used in kube_app.py once.\nhttps://opendev.org/starlingx/config/src/branch/master/sysinv/sysinv/sysinv/sysinv/common/image_versions.py#L13\n\nPlease refer to https://review.opendev.org/714849\n\nIt could be changed to variable, but it seems there is no difference.", "commit_id": "bbc6a8f8d4b9811d9f8f3ae49c5cecdb6c1356e0"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "a30203caeadc4a04794e52bf135b5cc37bf7e81e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_231e1aba", "line": 81, "range": {"start_line": 81, "start_character": 31, "end_line": 81, "end_character": 110}, "updated": "2020-04-13 18:55:32.000000000", "message": "Can we avoid having this hardcoded here?", "commit_id": "8f78e996404ea4740e76cc21d05db2a9e023495a"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "b6285bbc257d7416d78cb10af24adb2c038d037c", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_03dafee7", "line": 81, "range": {"start_line": 81, "start_character": 31, "end_line": 81, "end_character": 110}, "in_reply_to": "3f4c43b2_231e1aba", "updated": "2020-04-13 19:03:07.000000000", "message": "The existing mechanism allows for kubernetes upgrade by updating and restarting sysinv. How would we do an upgrade of armada now? We'd presumably need to trigger a runtime manifest update to reapply this template?", "commit_id": "8f78e996404ea4740e76cc21d05db2a9e023495a"}]}}, "starlingx%2Fconfig~master~I74088ee4f2edfa37d4d8a7a73e032fa81543fb48": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-15 12:15:45.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": -1, "date": "2020-04-13 19:09:29.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "d9a57eb7355ef738abebfbe6206ef533e4a69135", "unresolved": false, "patch_set": 7, "id": "df33271e_c0659c47", "line": 29, "updated": "2020-04-05 18:18:29.000000000", "message": "Which appliation was this verified with?  Please confirm application test with the stx-monitor application.", "commit_id": "99308bcc47191c4e7ba1c9a5c6f6135fd4286725"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "6df29172af402b472f1503b2b3379ed7e85b0076", "unresolved": false, "patch_set": 7, "id": "df33271e_2326f7b8", "line": 29, "in_reply_to": "df33271e_c0659c47", "updated": "2020-04-07 02:43:39.000000000", "message": "Done", "commit_id": "99308bcc47191c4e7ba1c9a5c6f6135fd4286725"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "e6382cb8c6aab10e292fe5ee77b008137f826e67", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_e3ad5232", "line": 30, "updated": "2020-04-13 19:09:29.000000000", "message": "Per my comment on the stx-puppet update https://review.opendev.org/714848\n\nThis appears to break the kubernetes upgrade support as described in this spec:\nhttps://opendev.org/starlingx/specs/src/branch/master/doc/source/specs/stx-4.0/approved/containerization-2006781-kubernetes-upgrades.rst", "commit_id": "b2c0321d78c7e1968dc0f90487d9c6f620657006"}], "sysinv/sysinv/sysinv/sysinv/conductor/kube_app.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "d9a57eb7355ef738abebfbe6206ef533e4a69135", "unresolved": false, "patch_set": 4, "id": "df33271e_9f054617", "line": 1479, "range": {"start_line": 1479, "start_character": 56, "end_line": 1479, "end_character": 69}, "updated": "2020-04-05 18:18:29.000000000", "message": "reference common/kubernetes.py NAMESPACE_KUBE_SYSTEM", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "6df29172af402b472f1503b2b3379ed7e85b0076", "unresolved": false, "patch_set": 4, "id": "df33271e_032773b8", "line": 1479, "range": {"start_line": 1479, "start_character": 56, "end_line": 1479, "end_character": 69}, "in_reply_to": "df33271e_9f054617", "updated": "2020-04-07 02:43:39.000000000", "message": "Done", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "d9a57eb7355ef738abebfbe6206ef533e4a69135", "unresolved": false, "patch_set": 4, "id": "df33271e_3f20799b", "line": 2876, "updated": "2020-04-05 18:18:29.000000000", "message": "is \"--\" required before the rm command?", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "6df29172af402b472f1503b2b3379ed7e85b0076", "unresolved": false, "patch_set": 4, "id": "df33271e_e32b6f7f", "line": 2876, "in_reply_to": "df33271e_3f20799b", "updated": "2020-04-07 02:43:39.000000000", "message": "Done", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "d9a57eb7355ef738abebfbe6206ef533e4a69135", "unresolved": false, "patch_set": 4, "id": "df33271e_7f420140", "line": 2921, "range": {"start_line": 2919, "start_character": 43, "end_line": 2921, "end_character": 65}, "updated": "2020-04-05 18:18:29.000000000", "message": "This kubectl exec pattern is repeated in several instances and can be put in its own constant/function.", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "6df29172af402b472f1503b2b3379ed7e85b0076", "unresolved": false, "patch_set": 4, "id": "df33271e_43217b9f", "line": 2921, "range": {"start_line": 2919, "start_character": 43, "end_line": 2921, "end_character": 65}, "in_reply_to": "df33271e_7f420140", "updated": "2020-04-07 02:43:39.000000000", "message": "Done", "commit_id": "fb34a8785a927699df4fbced06a4816dcb03aa4e"}]}}, "opendev%2Fsandbox~master~I8ac9cd80ee6c60838227dd8934793755a1364c4e": {"owner_id": 30905, "owner_name": "Harshavardhan Metla", "owner_email": "harshavardhan.metla@tcs.com", "labels": [{"value": -1, "date": "2020-04-17 12:25:57.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 18044, "name": "Abhishek Mahajan", "email": "abhishek.mahajan5@tcs.com", "username": "mahajan-abhishek"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30905, "name": "Harshavardhan Metla", "email": "harshavardhan.metla@tcs.com", "username": "harsha24"}, {"value": 1, "date": "2020-04-17 13:50:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30907, "name": "Triveni Gurram", "email": "triveni.gurram@tcs.com", "username": "triveni"}], "comments": {"dummy_file.txt": [{"author": {"_account_id": 18044, "name": "Abhishek Mahajan", "email": "abhishek.mahajan5@tcs.com", "username": "mahajan-abhishek"}, "change_message_id": "4268ce4baa75522f8ce781f6f9f67b54f0fa89e0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_58d81e7e", "side": "PARENT", "updated": "2020-04-17 12:25:57.000000000", "message": "Write description in commit msg what you fixed", "commit_id": "2c5e0f85578ece9e1064cc75b41dd84725212169"}]}}, "starlingx%2Finteg~master~Ifea6d78c1403183c6fcb2a27719beb91f6ef5e15": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28652, "name": "Jim Somerville", "email": "jim.somerville@windriver.com", "username": "jsomervi"}, {"value": -1, "date": "2020-04-13 18:18:01.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Fnova~master~Ifee3f8a1adb18e11057c423336569f7c38f80b68": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-20 04:00:19.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"nova/test.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_066e1ec8", "line": 39, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_cache.core)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/fixtures.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46de666d", "line": 32, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, neutronclient.common.exceptions)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/functional/test_report_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06ca9e9f", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_resource_classes)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/api/openstack/compute/test_admin_password.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_464ca641", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/api/openstack/compute/test_disk_config.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_866b4e83", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/api/openstack/compute/test_images.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_466b06b6", "line": 24, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.urllib.parse)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/api/openstack/compute/test_simple_tenant_usage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26207a48", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_policy.policy)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_compute.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26ad1ae9", "line": 30, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, neutronclient.common.exceptions)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_compute_mgr.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_661602f4", "line": 27, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_host_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6b852e6", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_instance_list.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46d14623", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_keypairs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46b02644", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_multi_cell_list.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6bd56d9", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_resource_tracker.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26499a30", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_resource_classes)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_rpcapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a68aca66", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_shelve.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6a276ae", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/compute/test_virtapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66ba820a", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_traits)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/conductor/tasks/test_cross_cell_migrate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26ceba81", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging.exceptions)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/conductor/tasks/test_live_migrate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6a7b20a", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/conductor/tasks/test_migrate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c661d6ab", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/conductor/test_conductor.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_067c5e70", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.exception)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/image/test_glance.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26c4fa90", "line": 28, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/notifications/objects/test_instance.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86eeaeea", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/notifications/objects/test_service.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06a9fe8e", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.timeutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/notifications/test_base.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26723a7c", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/objects/test_instance_action.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6dfb237", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/objects/test_instance_mapping.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6433212", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.uuidutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/objects/test_migration.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c69c36c2", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/objects/test_service.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4675c663", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_admin_actions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6d80a7b", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_admin_password.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e67212ad", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_assisted_volume_snapshots.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6117206", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_console_output.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26935a5d", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_create_backup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26db5a7c", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_deferred_delete.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_664f2234", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_evacuate.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66e1e22a", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_flavor_access.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86bd0e04", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_flavor_extra_specs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26e51a0a", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_flavor_manage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6c2ca57", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_pause_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06f1fe01", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, nova.policies.pause_server)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_server_diagnostics.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26f7dad5", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_server_external_events.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6d92a58", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_server_tags.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6adf29b", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_suspend_server.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86618ed6", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/policies/test_volumes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86c7ce64", "line": 15, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/privsep/test_idmapshift.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46e826e1", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.stringio)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/privsep/test_libvirt.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86006ead", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/privsep/test_path.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0658def7", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/privsep/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_869cee6a", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_filter_scheduler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4696664e", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_filters.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a60bead3", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_host_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6a12afb", "line": 24, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_serialization.jsonutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_manager.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66b3a24e", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_request_filter.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6ef6a1c", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_traits)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/test_rpcapi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6ce92b2", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/scheduler/weights/test_weights_affinity.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06b45ef1", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, nova.objects)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/servicegroup/test_db_servicegroup.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6805249", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_availability_zones.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86522edd", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_conf.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c606f6ce", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_configdrive2.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_060d7ee7", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_context.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6ea760d", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_context.context)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_crypto.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_668c427f", "line": 24, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_exception.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a63daa90", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_fixtures.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6a76abd", "line": 22, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_metadata.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e65cd2ee", "line": 33, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_notifications.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6348a94", "line": 22, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_policy.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66c44260", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_policy.policy)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_quota.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06dbbe4e", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_db.sqlalchemy.enginefacade)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_rpc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2696ba94", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_messaging)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_test.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86198e23", "line": 24, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_log.log)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46230657", "line": 27, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/disk/mount/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06261e69", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_service.fixture)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/disk/mount/test_nbd.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86b6ae3d", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/disk/test_api.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_86e4ee3d", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/hyperv/test_pathutils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c638b6a1", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.builtins)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/hyperv/test_serialconsolehandler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6668c286", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, nova.exception)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/hyperv/test_serialconsoleops.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66fd62b0", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six.moves.builtins)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/test_blockinfo.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_66eba2db", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/test_imagebackend.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e62a122a", "line": 26, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.lockutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/test_migration.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c685565c", "line": 21, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/test_utils.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6d3965f", "line": 22, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_traits)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_disco.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c6d43623", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_brick.initiator.connector)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_drbd.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a67c8a83", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_brick.initiator.connector)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_hgst.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e6f5f2ee", "line": 17, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_brick.initiator.connector)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_iscsi.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c67716a0", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_brick.exception)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_net.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46c78697", "line": 14, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, nova.conf)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_nfs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_46fae6bc", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_volume.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_26687ab7", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/libvirt/volume/test_vzstorage.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_469946c2", "line": 16, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, os_brick.initiator.connector)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/test_hardware.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06a3be01", "line": 20, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, testtools)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/test_images.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_868fce73", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_concurrency.processutils)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/test_virt.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a6664ac0", "line": 19, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, six)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/test_virt_drivers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_665e0213", "line": 22, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, netaddr)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/virt/vmwareapi/test_imagecache.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c62f163d", "line": 18, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_config.cfg)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}], "nova/tests/unit/volume/test_cinder.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d3c923918ab5fca18f973bceedd4f1b5f48b2049", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_063f3e87", "line": 23, "updated": "2020-04-20 03:46:30.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, oslo_utils.fixture.uuidsentinel)", "commit_id": "4bab9438fd1466de24c7e4d32ae500815089811f"}]}}, "openstack%2Fpuppet-tripleo~master~Iba83cc7b360b9ee399142ce979aeb08b75a86a35": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-07 13:36:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-08 18:28:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-13 02:50:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 19234, "name": "Alexey Stupnikov", "email": "aleksey.stupnikov@gmail.com", "username": "astupnikov"}], "comments": {}}, "openstack%2Fironic-inspector~master~Ic67f09a223ae2d0cb460771a10a4122307afa05b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 03:03:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:01:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {"ironic_inspector/test/functional.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a0d63926", "line": 24, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_common_ironic.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_00b72df8", "line": 16, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_main.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_60ec31f3", "line": 17, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_node_cache.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_80f17dd0", "line": 19, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_plugins_local_link_connection.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_40e77513", "line": 15, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'from openstack import exceptions' and in a different group.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_20e22902", "line": 15, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'from openstack import exceptions' is identified as Third Party.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_plugins_rules.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c0bc25de", "line": 18, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'from openstack import exceptions' and in a different group.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a0bf59ce", "line": 18, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'from openstack import exceptions' is identified as Third Party.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}], "ironic_inspector/test/unit/test_pxe_filter.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_00de0d3e", "line": 16, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'from eventlet import semaphore' and in a different group.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "efb68866905432b38213419fc539fe4c95dd8bc0", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e0e041fd", "line": 16, "updated": "2020-04-18 17:56:26.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'from eventlet import semaphore' is identified as Third Party.", "commit_id": "8548bad7b84c34b878ad1f685c52a9310f128a2e"}]}}, "openstack%2Fironic-lib~master~I94daf175305b5fd31380088e27ecec2083f89e59": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 03:11:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:01:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {"ironic_lib/tests/test_disk_partitioner.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "278745f45a43f51684f89487f2d00d0d7e3f108d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e517b350", "line": 17, "updated": "2020-04-18 17:35:20.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'from testtools.matchers import HasLength' and in a different group.", "commit_id": "dc8138929f456fde667684bd3d7801efe3f25c69"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "278745f45a43f51684f89487f2d00d0d7e3f108d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_450e673b", "line": 17, "updated": "2020-04-18 17:35:20.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'from testtools.matchers import HasLength' is identified as Third Party.", "commit_id": "dc8138929f456fde667684bd3d7801efe3f25c69"}]}}, "opendev%2Fci-sandbox~master~I024acafff1099e53dc1cf9993e2094342475ed9a": {"owner_id": 28403, "owner_name": "Naoki Saito", "owner_email": "nasaito@nec.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 31535, "name": "NEC CinderCI test", "email": "s-takeda@nec.com", "username": "nec-cinder-ci-test"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~I243eccbc6ee412cf1ff29979dd0fdcc4d577d3c8": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 03:35:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}, "openstack%2Fironic~master~I9d96214a9fb64700307b11d39e012de80f7425e3": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": -1, "date": "2020-04-20 03:06:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}], "comments": {}}, "openstack%2Fironic-inspector~master~I0aa551415beebb6a26e908fe591b0ff92cf097ae": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": -1, "date": "2020-04-20 03:04:39.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}], "comments": {}}, "openstack%2Fsushy~master~Ide81a721c5a0f14250250fa82925bf300ba72c31": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 03:15:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:03:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fbifrost~master~I219e2386aa957de3aafca7d76f3d0923e5fef1a9": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-20 03:13:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:56:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fvirtualbmc~master~I8426e378d1dfd40ba5312b10db2b04a540b65823": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-20 03:06:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}], "comments": {"virtualbmc/tests/unit/cmd/test_vbmc.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "46624e2b12cd1ed6ad105409e2a4efcd82a2650f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_db108fab", "line": 19, "updated": "2020-04-20 03:07:38.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, sys)", "commit_id": "d24c82dbb4f76e3e6f84a0263120aa2ee9ec7dc1"}]}}, "openstack%2Fhorizon~master~Ib8ca0fcfe339cb68d6a157a00cbc2d34854ef4c5": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-14 16:08:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 2, "date": "2020-04-15 12:59:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "d59af889f432b42ba3b4ffbe068bdcc977590af3", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8a1bb019", "line": 13, "updated": "2020-04-14 12:54:45.000000000", "message": "This is needed since function-exists function is supported by pyScss", "commit_id": "9e7b42e464e022fa120f1d41fae44de285a8fba8"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "827dc6acf991a51097c8552cd52707d66c3460dc", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_76ed69ee", "line": 11, "range": {"start_line": 11, "start_character": 24, "end_line": 11, "end_character": 37}, "updated": "2020-04-14 15:05:04.000000000", "message": "append-selector?", "commit_id": "1a7fe74e837f4c5e65d4d7220a22bd1c655123e9"}]}}, "openstack%2Ftacker~master~I6d60e87b48a6703362dcd30975f300f524f8ca7a": {"owner_id": 31577, "owner_name": "Ajay Parja", "owner_email": "ajay.parja@nttdata.com", "labels": [{"value": 2, "date": "2020-04-14 13:35:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "_account_id": 26463, "name": "Niraj Singh", "email": "niraj.singh@nttdata.com", "username": "nirajsingh"}, {"value": 0, "_account_id": 31577, "name": "Ajay Parja", "email": "ajay.parja@nttdata.com", "username": "ajay-parja"}, {"value": 2, "date": "2020-04-20 01:52:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 0, "_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, {"value": 0, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 1, "date": "2020-04-14 00:40:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 0, "_account_id": 31648, "name": "Prashant Bhole", "email": "prashant.bhole@nttdata.com", "username": "pbhole"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"api-ref/source/v1/vnf_packages.inc": [{"author": {"_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, "change_message_id": "330a8c607c967d20723ef94d87fa4468d64dcdce", "unresolved": false, "patch_set": 5, "id": "df33271e_b93c53e1", "line": 283, "range": {"start_line": 283, "start_character": 23, "end_line": 283, "end_character": 38}, "updated": "2020-04-02 12:15:43.000000000", "message": "\"oprationalState\" or \"userDefineData\"", "commit_id": "309706b41ebbc0ad4c492669641a632ce221c15b"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "945f9c2bf451cbec547aa4879575fed55ab4180f", "unresolved": false, "patch_set": 5, "id": "df33271e_b03d6fc5", "line": 283, "range": {"start_line": 283, "start_character": 23, "end_line": 283, "end_character": 38}, "in_reply_to": "df33271e_b93c53e1", "updated": "2020-04-03 09:07:46.000000000", "message": "Done", "commit_id": "309706b41ebbc0ad4c492669641a632ce221c15b"}], "tacker/api/views/vnf_packages.py": [{"author": {"_account_id": 31648, "name": "Prashant Bhole", "email": "prashant.bhole@nttdata.com", "username": "pbhole"}, "change_message_id": "8d20d4da5a0a483d5d6052c7ae303de34f4e8044", "unresolved": false, "patch_set": 3, "id": "df33271e_a6a12cfb", "line": 102, "range": {"start_line": 102, "start_character": 15, "end_line": 102, "end_character": 37}, "updated": "2020-03-30 01:53:45.000000000", "message": "old_key may not be present in new_user_data. We need to check it before accessing.", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}, {"author": {"_account_id": 31577, "name": "Ajay Parja", "email": "ajay.parja@nttdata.com", "username": "ajay-parja"}, "change_message_id": "29f0648516006f5d896c6a4a18a80739ba49e44f", "unresolved": false, "patch_set": 3, "id": "df33271e_1c1d8473", "line": 102, "range": {"start_line": 102, "start_character": 15, "end_line": 102, "end_character": 37}, "in_reply_to": "df33271e_a6a12cfb", "updated": "2020-04-01 16:08:41.000000000", "message": "fixed the code in patch https://review.opendev.org/#/c/705891/5", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}], "tacker/api/vnfpkgm/v1/controller.py": [{"author": {"_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, "change_message_id": "330a8c607c967d20723ef94d87fa4468d64dcdce", "unresolved": false, "patch_set": 3, "id": "df33271e_faa2adfb", "line": 263, "range": {"start_line": 263, "start_character": 18, "end_line": 263, "end_character": 65}, "updated": "2020-04-02 12:15:43.000000000", "message": "Why don't you simply do like below?\n\n  if vnf_package.user_data.get(key) == value:", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "945f9c2bf451cbec547aa4879575fed55ab4180f", "unresolved": false, "patch_set": 3, "id": "df33271e_ff0068ad", "line": 263, "range": {"start_line": 263, "start_character": 18, "end_line": 263, "end_character": 65}, "in_reply_to": "df33271e_faa2adfb", "updated": "2020-04-03 09:07:46.000000000", "message": "Done", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}, {"author": {"_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, "change_message_id": "330a8c607c967d20723ef94d87fa4468d64dcdce", "unresolved": false, "patch_set": 3, "id": "df33271e_3a99b5c3", "line": 272, "range": {"start_line": 272, "start_character": 12, "end_line": 272, "end_character": 45}, "updated": "2020-04-02 12:15:43.000000000", "message": "In the below case, does this work fine?\n\n  vnf_package.user_data = {k1:v1, k2:v2}\n  user_data = {k1:v1, k2:v3}\n\nThe expected result is:\n\n  vnf_package.user_data = {k1:v1, k2:v3}\n\nbut here, it will be\n\n  vnf_package.user_data = {k2:v3}", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}, {"author": {"_account_id": 29236, "name": "Shubham Potale", "email": "Shubham.Potale@nttdata.com", "username": "shubham.potale"}, "change_message_id": "945f9c2bf451cbec547aa4879575fed55ab4180f", "unresolved": false, "patch_set": 3, "id": "df33271e_923dd3bc", "line": 272, "range": {"start_line": 272, "start_character": 12, "end_line": 272, "end_character": 45}, "in_reply_to": "df33271e_3a99b5c3", "updated": "2020-04-03 09:07:46.000000000", "message": "Jo San, Kindly go through below link, After execution of save method old key values remain in the user data.  \n\nhttp://paste.openstack.org/show/791574/", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}, {"author": {"_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, "change_message_id": "347998ab9089b55d1c89f05fbe04a1a857d5ee86", "unresolved": false, "patch_set": 3, "id": "df33271e_eafd3bb2", "line": 272, "range": {"start_line": 272, "start_character": 12, "end_line": 272, "end_character": 45}, "in_reply_to": "df33271e_923dd3bc", "updated": "2020-04-03 14:24:51.000000000", "message": "make sense.", "commit_id": "f6f8c0b2b5ac41ffae41b9962400da304509771f"}]}}, "openstack%2Fwatcher-tempest-plugin~master~I509b9f2aa1f390f632fbfd90a66a5ec3c57b274a": {"owner_id": 21692, "owner_name": "licanwei", "owner_email": "li.canwei2@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-20 01:55:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fvalidations-libs~master~I93b35cd1619e2c2b4a3b1294171dddf56033e94f": {"owner_id": 16515, "owner_name": "mbu", "owner_email": "mat.bultel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 08:26:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-04-16 08:26:04.000000000", "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, {"value": 0, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {"validations_libs/tests/test_utils.py": [{"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "9a85236ea9a27681a539608032399284e54a220b", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_3aff54ab", "line": 145, "updated": "2020-04-14 07:43:22.000000000", "message": "and here, add a failure test that catch the raise as described in the other comment", "commit_id": "2c3b2ea2363a0b6ef35d0f506bd4703e65f507e7"}], "validations_libs/utils.py": [{"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "9a85236ea9a27681a539608032399284e54a220b", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_7a643cba", "line": 126, "updated": "2020-04-14 07:43:22.000000000", "message": "I think you should validate the \"format\" value. Something like:\nif format not in ['json', 'yaml']:\n  raise\n\nElse we might end with some weird things.", "commit_id": "2c3b2ea2363a0b6ef35d0f506bd4703e65f507e7"}]}}, "openstack%2Fmurano~master~I55cbf3c09aaf60918d5b97b0e8621b47016d0333": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 01:58:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftacker~master~I2da2acf256bec307b606c5a152c0d47af24ad525": {"owner_id": 30650, "owner_name": "nitin uikey", "owner_email": "nitin.uikey@nttdata.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27180, "name": "Keiko Kuriu", "email": "kuriu.keiko@gmail.com", "username": "keiko-k"}, {"value": 2, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 26463, "name": "Niraj Singh", "email": "niraj.singh@nttdata.com", "username": "nirajsingh"}, {"value": 0, "_account_id": 31577, "name": "Ajay Parja", "email": "ajay.parja@nttdata.com", "username": "ajay-parja"}, {"value": 2, "date": "2020-04-20 01:53:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, "change_message_id": "1d59c6818fbafc40be562d0f56cfc6077f126b12", "unresolved": false, "patch_set": 11, "id": "df33271e_cb7fcb63", "line": 7, "updated": "2020-04-01 19:23:05.000000000", "message": "I think you should follow the guide line. https://wiki.openstack.org/wiki/GitCommitMessages#Summary_of_Git_commit_message_structure", "commit_id": "f74f09e650632f625a467d513c4211f1a45a7d6a"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "bfbd3c4acc7cb856fb9a16e6c6bce94dc6c24fe7", "unresolved": false, "patch_set": 11, "id": "df33271e_ae71a7aa", "line": 7, "in_reply_to": "df33271e_cb7fcb63", "updated": "2020-04-02 10:42:41.000000000", "message": "Done", "commit_id": "f74f09e650632f625a467d513c4211f1a45a7d6a"}, {"author": {"_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, "change_message_id": "1d59c6818fbafc40be562d0f56cfc6077f126b12", "unresolved": false, "patch_set": 11, "id": "df33271e_eb58cffa", "line": 10, "updated": "2020-04-01 19:23:05.000000000", "message": "It seems needed to add an url of [1].", "commit_id": "f74f09e650632f625a467d513c4211f1a45a7d6a"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "bfbd3c4acc7cb856fb9a16e6c6bce94dc6c24fe7", "unresolved": false, "patch_set": 11, "id": "df33271e_0e6c13cc", "line": 10, "in_reply_to": "df33271e_eb58cffa", "updated": "2020-04-02 10:42:41.000000000", "message": "Done", "commit_id": "f74f09e650632f625a467d513c4211f1a45a7d6a"}], "tacker/common/exceptions.py": [{"author": {"_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, "change_message_id": "114deef0deafb3eba44c57140009dcb37ebae446", "unresolved": false, "patch_set": 6, "id": "1fa4df85_b778a78f", "line": 211, "updated": "2020-03-10 09:17:31.000000000", "message": "[nit comment]I think \"Vnf package with vnfd id %(vnfd_id)s already exists.\" is better.", "commit_id": "710423d8d03c2a0721c093b9ad411af736e96740"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "b52f21c93ea0e00047aadb648e4bfac55b14933b", "unresolved": false, "patch_set": 6, "id": "df33271e_5239c2d4", "line": 211, "in_reply_to": "1fa4df85_b778a78f", "updated": "2020-04-01 09:19:12.000000000", "message": "Fixed in PS 11.", "commit_id": "710423d8d03c2a0721c093b9ad411af736e96740"}]}}, "openstack%2Ftacker~master~I237f263df7eb41c0ca768869a8e5ce25637f13ca": {"owner_id": 30650, "owner_name": "nitin uikey", "owner_email": "nitin.uikey@nttdata.com", "labels": [{"value": 2, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27180, "name": "Keiko Kuriu", "email": "kuriu.keiko@gmail.com", "username": "keiko-k"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26463, "name": "Niraj Singh", "email": "niraj.singh@nttdata.com", "username": "nirajsingh"}, {"value": 0, "_account_id": 31577, "name": "Ajay Parja", "email": "ajay.parja@nttdata.com", "username": "ajay-parja"}, {"value": 2, "date": "2020-04-20 01:52:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}, {"value": 1, "date": "2020-04-14 00:45:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"etc/tacker/api-paste.ini": [{"author": {"_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, "change_message_id": "a03713397e4cf1d6effb21e0993fabfbc603ffc8", "unresolved": false, "patch_set": 9, "id": "1fa4df85_dca6a8c1", "line": 21, "updated": "2020-03-10 08:48:04.000000000", "message": "I understand you are following an existing implementation(tackerapi_v1_0, vnfpkgmapi_v1), but do you need \"extensions\"?", "commit_id": "68a0cfde0ee65692db64c33475efd16364aa3f94"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "49de1fb81db662e088832e1962e28e9f5439bf83", "unresolved": false, "patch_set": 9, "id": "1fa4df85_97a6cb0e", "line": 21, "in_reply_to": "1fa4df85_dca6a8c1", "updated": "2020-03-10 09:01:21.000000000", "message": "Not required. \n\nIn fact, we can also remove it from line #16 in a separate patch. I will push a separate patch to remove extensions from vnfpkgmapi_v1.", "commit_id": "68a0cfde0ee65692db64c33475efd16364aa3f94"}, {"author": {"_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, "change_message_id": "f0375c2fb4f59cfa211b7ae148dafa382e2808ec", "unresolved": false, "patch_set": 11, "id": "1fa4df85_23e62f46", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 74}, "updated": "2020-03-19 00:58:41.000000000", "message": "It seems that devstack installation failed in 'tacker-functional-devstack-multinode-python3'.\nIs the fix of patch set 11 affecting?\n\ncontroller/logs/devstacklog.txt\n2020-03-18 14:36:22.535 | ERROR: Invalid requirement: 'gnocchi[redis,,keystone]'", "commit_id": "94b2610fb10f27ea76d7fe0a77215d229112fb63"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "a9c009c6cd2f55f1c8bc93cee20fd44cbbd560cf", "unresolved": false, "patch_set": 11, "id": "df33271e_dc88e020", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 74}, "in_reply_to": "1fa4df85_23e62f46", "updated": "2020-03-24 12:11:03.000000000", "message": "It seems like removing extension is causing this problem but it's not clear from the error logs. \n\nIf I run tacker-server without extensions, it's working fine though.\n\nIf I compare the logs with PS 10, it's missing mysql in PS 11:-\n\n PS 10:gnocchi[redis,mysql,keystone] - devstack passing \n PS 11:gnocchi[redis,,keystone] - devstack failing\n\nI will revert back my changes to see if it's still giving the same problem.", "commit_id": "94b2610fb10f27ea76d7fe0a77215d229112fb63"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "8a37088203b41f664650444bdf9287ab98b34a91", "unresolved": false, "patch_set": 11, "id": "df33271e_b21bee70", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 74}, "in_reply_to": "df33271e_d3cddd85", "updated": "2020-04-01 09:17:53.000000000", "message": "In PS14, I have removed extensions from vnflcm_v1", "commit_id": "94b2610fb10f27ea76d7fe0a77215d229112fb63"}, {"author": {"_account_id": 31072, "name": "Hiroo Kitamura", "email": "hiroo.kitamura@ntt-at.co.jp", "username": "Hiroo.Kitamura"}, "change_message_id": "5e8aa4dcdc2d01fd74a1fbe21cb83f4067df211d", "unresolved": false, "patch_set": 11, "id": "df33271e_f2347b95", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 74}, "in_reply_to": "df33271e_dc88e020", "updated": "2020-03-31 00:28:09.000000000", "message": "The devstack error persists, and the patch does not appear to be directly related to this error.\nBecause the same error seem to occur in the zuul results of other patches.\nIs it right?\nAlso, can you identify the cause?", "commit_id": "94b2610fb10f27ea76d7fe0a77215d229112fb63"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "b171ce3a999cc462a6b2d920dc854c9c155d82e4", "unresolved": false, "patch_set": 11, "id": "df33271e_d3cddd85", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 74}, "in_reply_to": "df33271e_f2347b95", "updated": "2020-04-01 02:34:38.000000000", "message": "You are right. I have noticed devstack is failing with same reason for patch :https://review.opendev.org/#/c/715460\n\nSo I will make sure the extension is removed from vnflcm_v1.", "commit_id": "94b2610fb10f27ea76d7fe0a77215d229112fb63"}]}}, "openstack%2Fmurano~master~I36cde6010e287b5b071a2291180c0e14df2e3667": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:50:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano~master~I53368580d7a2d1923688be80899c97c57aafffad": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"murano/tests/unit/api/cmd/test_test_runner.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "b137a2f885c49722fcadc89c72ac97568f1b38b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9181d592", "line": 93, "updated": "2020-04-18 04:01:05.000000000", "message": "pep8: E999 SyntaxError: invalid syntax", "commit_id": "bb3e5ba3d88787feb2d0e77e7ef96d0296d6695f"}]}}, "openstack%2Fmurano~master~I88d5b21c24780223196ff3bb7c629f404c343f14": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano~master~Ib10d9e191ec93e55a0982d29de9a62a7b5d1894f": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"murano/engine/package_loader.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5f36d07c5e2d0ee764fcdeab846780cdc040afd3", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_b402ff07", "line": 162, "updated": "2020-04-18 04:46:13.000000000", "message": "pep8: F821 undefined name 'reraise'", "commit_id": "0a2784e629cb1f7619f6cda62fead08e57fd07d0"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5f36d07c5e2d0ee764fcdeab846780cdc040afd3", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_140ad31f", "line": 272, "updated": "2020-04-18 04:46:13.000000000", "message": "pep8: F821 undefined name 'reraise'", "commit_id": "0a2784e629cb1f7619f6cda62fead08e57fd07d0"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5f36d07c5e2d0ee764fcdeab846780cdc040afd3", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_f40c873c", "line": 297, "updated": "2020-04-18 04:46:13.000000000", "message": "pep8: F821 undefined name 'reraise'", "commit_id": "0a2784e629cb1f7619f6cda62fead08e57fd07d0"}]}}, "openstack%2Fmurano~master~Ibc5a314beab903d4cd8d0bd693d8c9c134858c69": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano~master~I5b33362ccd7065c5c2890d1f1a2cb1082a29a8c2": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano~master~Iac776e29eb63421577cb928692f2945200f32b1d": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {"murano/dsl/helpers.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "09695cfee9253c37289971f3ba5a1c2004669504", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_51b2ad95", "line": 424, "updated": "2020-04-18 03:52:39.000000000", "message": "pep8: F821 undefined name 'reduce'", "commit_id": "cd540b0f13147afeabc76a73fa929555a69b37bd"}]}}, "openstack%2Fvitrage~master~I4b70b6adbfef1f431bf367e3ee1e385604e38f9a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 18:28:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fmurano~master~Iac6e4e4c1dde1b661dd3e9a0055cea6f9f11817d": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:49:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fmurano~master~Iafee5f81a3c3e7930232f17c2d3c0f30764e3b47": {"owner_id": 14107, "owner_name": "zhurong", "owner_email": "aaronzhu1121@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-20 00:48:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftripleo-common~master~I0056fdbe3d9807e6baf4a1645a632ab9eb1b2668": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 1, "date": "2020-04-15 05:12:24.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 1, "date": "2020-04-15 14:01:48.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-04-13 14:07:26.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I770c23540e41f6731979abc49bdda030634bbd07": {"owner_id": 22076, "owner_name": "Kevin Zhao", "owner_email": "kevin.zhao@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-14 07:02:03.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": -1, "date": "2020-04-16 09:34:59.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "264fc2a3045865b718634f2178567e1af744be56", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9f05ba7d", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 33}, "updated": "2020-04-14 07:02:03.000000000", "message": "nova: allow to configure nums_pcie_ports\n\nnova: make num_pcie_ports configurable\n\nChoose something more readable", "commit_id": "3eac3c760d1d60a8bf16ec312c12e233bc539e78"}, {"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "264fc2a3045865b718634f2178567e1af744be56", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_fff5de84", "line": 12, "range": {"start_line": 9, "start_character": 0, "end_line": 12, "end_character": 100}, "updated": "2020-04-14 07:02:03.000000000", "message": "In Kolla deployed Octavia when we need to mount more NICs to the vm we are hit with out of PCIe slots error:\n\nattaching network adapter failed.: libvirt.libvirtError: internal error: No more available PCI slots", "commit_id": "3eac3c760d1d60a8bf16ec312c12e233bc539e78"}], "ansible/roles/nova-cell/defaults/main.yml": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "264fc2a3045865b718634f2178567e1af744be56", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_5ff3329f", "line": 196, "range": {"start_line": 196, "start_character": 0, "end_line": 196, "end_character": 29}, "updated": "2020-04-14 07:02:03.000000000", "message": "you do not use this one", "commit_id": "3eac3c760d1d60a8bf16ec312c12e233bc539e78"}]}}, "openstack%2Fheat~stable%2Ftrain~I9d38716b236b0782f0d09097b7a0f615fe5be041": {"owner_id": 6484, "owner_name": "Feilong Wang", "owner_email": "hustemb@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Fpuppet-keystone~stable%2Frocky~I507d1b736dbbb147c67b9d399c033703b432b16d": {"owner_id": 25613, "owner_name": "Keigo Noha", "owner_email": "knoha@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25613, "name": "Keigo Noha", "email": "knoha@redhat.com", "username": "knoha"}, {"value": 2, "date": "2020-04-08 18:27:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-06 12:09:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}], "comments": {}}, "openstack%2Fcoverage2sql~master~Ie02405c3b89b8d5f338191b7d8e58853186b4938": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 23:27:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}], "comments": {}}, "opendev%2Fglean~master~Iad0c3a80fdb76086876be801e6c604ef2ed8f0f5": {"owner_id": 4162, "owner_name": "Paul Belanger", "owner_email": "pabelanger@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2016-11-30 15:49:24.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2017-06-17 14:03:07.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"glean/cmd.py": [{"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "b1355789601cc0bce66d7e09fe8fa836f9ae350a", "unresolved": false, "patch_set": 1, "id": "9a89bdaa_84709641", "line": 207, "range": {"start_line": 207, "start_character": 43, "end_line": 207, "end_character": 46}, "updated": "2016-09-08 16:23:50.000000000", "message": "this should be the netmask converted to cidr", "commit_id": "d622746eca61a0b8615ca00b0ece2453f7303fa6"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "3eea3ee9de40ef0029d72b3233cf9ce5e8add1ca", "unresolved": false, "patch_set": 3, "id": "9a89bdaa_974fe169", "line": 218, "updated": "2016-09-08 18:07:46.000000000", "message": "routes need to handle static routes\n\n    for route in interface['routes']:\n        if (route['network'] == '::' and\n                route['netmask'] == '::'):\n            routes.append('default via {gw}'.format(\n                name=name,\n                gw=route['gateway']\n            ))\n        else:\n            # add remaining static routes\n            routes.append('{net}/{mask} via {gw}'.format(\n                net=route['network'],\n                mask=utils.ipv6_netmask_length(route['netmask']),\n                gw=route['gateway']\n            ))", "commit_id": "8cfadc19ee2f4620a59cf4a68c71f4805485f33e"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "a7e5005bf246500fe7b81a70d2aaea5fa6328eb6", "unresolved": false, "patch_set": 15, "id": "7a8ec9b2_0b21949f", "line": 228, "updated": "2016-09-14 23:51:18.000000000", "message": "Why do we not call _enable_gentoo_interface in this case? we do it for manual and dhcp interface but not these (which I think are config drive network info configured).", "commit_id": "64af98b71eb381d488bd2334430bcbead50724c4"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "a48b31341103ae5e88f9e702a2dd3b6720a2f5f9", "unresolved": false, "patch_set": 15, "id": "7a8ec9b2_3fdccae3", "line": 228, "in_reply_to": "7a8ec9b2_0b21949f", "updated": "2016-09-15 03:32:29.000000000", "message": "I think it should be called for dhcp, static, vlan, bridge and bonds.  I'm not sure about manual, my first thought when I hear about a manual interface is that it's configured, but not up.", "commit_id": "64af98b71eb381d488bd2334430bcbead50724c4"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "a7e5005bf246500fe7b81a70d2aaea5fa6328eb6", "unresolved": false, "patch_set": 15, "id": "7a8ec9b2_39730de9", "line": 238, "updated": "2016-09-14 23:51:18.000000000", "message": "Its too bad we can't represent the mask with ipv4 this way too eg 10.0.0.0/24.", "commit_id": "64af98b71eb381d488bd2334430bcbead50724c4"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "a48b31341103ae5e88f9e702a2dd3b6720a2f5f9", "unresolved": false, "patch_set": 15, "id": "7a8ec9b2_7f4f32bd", "line": 238, "in_reply_to": "7a8ec9b2_39730de9", "updated": "2016-09-15 03:32:29.000000000", "message": "IPv4 is preferred to be cidr as well", "commit_id": "64af98b71eb381d488bd2334430bcbead50724c4"}], "glean/tests/fixtures/rax-iad/mnt/config/openstack/latest/vendor_data.json": [{"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "51644dcbc0a281fbbecd0f46ab5de419168ec43e", "unresolved": false, "patch_set": 7, "id": "9a89bdaa_88ffbba9", "line": 42, "range": {"start_line": 42, "start_character": 24, "end_line": 42, "end_character": 38}, "updated": "2016-09-08 21:20:04.000000000", "message": "should be fd30::", "commit_id": "0b91757f69a2b56188a6848a17473c1fd20376bc"}], "glean/tests/fixtures/test/rax-iad.debian.network.out": [{"author": {"_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, "change_message_id": "7991bdb773cc4693ac23d1a99d784d30ef615991", "unresolved": false, "patch_set": 7, "id": "9a89bdaa_a31d8774", "line": 19, "updated": "2016-09-08 20:04:32.000000000", "message": "need to confirm this is valid", "commit_id": "0b91757f69a2b56188a6848a17473c1fd20376bc"}], "glean/tests/fixtures/test/rax-iad.gentoo.network.out": [{"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "882b5419affb033ced24eef62b3eaf3620eec598", "unresolved": false, "patch_set": 7, "id": "9a89bdaa_65fb8248", "line": 11, "updated": "2016-09-08 21:07:28.000000000", "message": "sorry, one more thing (small)\n\nfd30:0000:0000::/48 via fe80::f001\"\nnot\nfd30:0000:0000/48 via fe80::f001\"", "commit_id": "0b91757f69a2b56188a6848a17473c1fd20376bc"}]}}, "opendev%2Fglean~master~I1a75cf6185d6bc42e77721368ca6930f7ef3f793": {"owner_id": 8745, "owner_name": "Lars Kellogg-Stedman", "owner_email": "lars@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2018-11-21 22:43:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 8745, "name": "Lars Kellogg-Stedman", "email": "lars@redhat.com", "username": "lars"}, {"value": 1, "date": "2018-11-21 18:56:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 1, "date": "2019-08-30 20:47:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}, {"value": 2, "date": "2020-04-19 20:51:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "opendev%2Fglean~master~I644e0b50cfb7bb00a108160b99c0c1359d6a9dd4": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 02:56:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-04-19 20:50:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "0c5706128f29f88a454f5826cf5d4fef0abc39d0", "unresolved": false, "patch_set": 5, "id": "df33271e_037813f6", "line": 13, "range": {"start_line": 9, "start_character": 0, "end_line": 13, "end_character": 79}, "updated": "2020-04-07 03:56:50.000000000", "message": "I feel like we've been here before ...\n\nWhere is this filenotfounderror actually coming from?\n\n[1] was put in to write over the symlink to nowhere.  that tracks back to [2] and involved bug [3]\n\nIIRC the problem was systemd would start and put this symlink in, and NetworkManager/dhclient/etc would then not put nameservers in there.\n\nPresumably gentoo is *not* writing out a /etc/resolv.conf, and this is the same thing as described in that old bug?\n\nI'm pretty sure that Rackspace is the only place that does *not* configure this from dhcp; i.e. glean has to write it out from configdrive data.\n\nI feel like this is re-introducing the original bug; if there's no /etc/resolv.conf there, systemd creates a broken symlink, with this change glean will not write out the /etc/resolv.conf file, and NetworkManager/dhclient will break?  \n\n[1] https://opendev.org/opendev/glean/src/branch/master/glean/cmd.py#L1095\n[2] https://review.opendev.org/#/c/257173/\n[3] https://bugzilla.redhat.com/show_bug.cgi?id=1197204", "commit_id": "7f7f86eb5e6e5b948cc1e7866f7cede08067130a"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "d75293ef170e31eb894c993b7512d014f30b896f", "unresolved": false, "patch_set": 5, "id": "df33271e_1e0d0a37", "line": 13, "updated": "2020-04-07 04:25:35.000000000", "message": "Right now...\n1. glean tries to write a file to /etc/resolv.conf\n2. /etc/resolv.conf is a symlink to /run/systemd/resolve/stub-resolv.conf\n3. /run/systemd/resolve/stub-resolv.conf does not exist because glean runs before systemd-resolved starts\n4. glean fails to write to a file that does not exist\n\nThe behavior is because the python file writing doesn't seem to like writing to dangling symlinks (or more likely the direcory the symlink file points to doesn't even exist yet.\n\nThe goal is to run a pure systemd/networkd/resolved system without dhclient/networkmanager/etc.  currently that is not possible\n\nCorrect, gentoo stage3 does not provide /etc/resolv.conf.  The instruction in our manual says to copy it from the installer system into the chroot.  since that's not really possible via dib, glean needs to manage the file, which is fine if it exists...\n\n/me doesn't work for rackspace anymore :P\n\ncorrect, if the file does not exist it won't write to it, maybe I should wrap the path.exists in a is_symlink?", "commit_id": "7f7f86eb5e6e5b948cc1e7866f7cede08067130a"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "3a9e6154ab5675e8fd05760e9d234b0df15c8c6b", "unresolved": false, "patch_set": 5, "id": "df33271e_befcde3e", "line": 13, "in_reply_to": "df33271e_1e0d0a37", "updated": "2020-04-07 05:14:40.000000000", "message": "> 4. glean fails to write to a file that does not exist\n\nSo that should be exactly what [1] tries to fix up.  Can we first determine why that hasn't worked?\n\n---\n\nperhaps we should assume\n\n1) dangling /etc/resolv.conf symlink == systemd-resolved system; we should copy any configdrive nameserver data into /etc/systemd/resolved.conf, and /etc/resolv.conf will come online later?\n\n2) ergo, a non-systemd-resolved image *must* provide a stub /etc/resolv.conf in the image?  if the image doesn't, well then systemd is going to create the link for you, see 1), and there's not much glean can do about it (it can't tell the difference between you wanting systemd to do that and it doing it by accident?)\n\nIn that case, we should also drop [1]?\n\n[1] https://opendev.org/opendev/glean/src/branch/master/glean/cmd.py#L1095", "commit_id": "7f7f86eb5e6e5b948cc1e7866f7cede08067130a"}], "glean/cmd.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1ffb6623a77a40c4fa11fe38c1e2876a2dc85a0e", "unresolved": false, "patch_set": 4, "id": "df33271e_e36721ea", "line": 952, "updated": "2020-04-03 19:57:31.000000000", "message": "pep8: E501 line too long (80 > 79 characters)", "commit_id": "65127a5873b4a72c2aa15886f91e11e25df8c0ab"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "0c5706128f29f88a454f5826cf5d4fef0abc39d0", "unresolved": false, "patch_set": 5, "id": "df33271e_e3652f47", "line": 958, "updated": "2020-04-07 03:56:50.000000000", "message": "so i guess this works *if* you have /etc/systemd/resolved.conf and things get configured here.\n\nBut the original problem was for systems *without* this; now we would not write out configdrive nameserver configuration into /etc/resolv.conf for them anywhere?", "commit_id": "7f7f86eb5e6e5b948cc1e7866f7cede08067130a"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "02ee41c662d0804993feca4fb423e6fe9c1dd72b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_e057cf01", "line": 956, "updated": "2020-04-16 03:40:57.000000000", "message": "looks like I missed a debug", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "de231334225e100ab2507a31f7c89079a47a35e1", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_a51af979", "line": 956, "updated": "2020-04-16 03:25:43.000000000", "message": "remove this one as it's covered by the statements below", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "02ee41c662d0804993feca4fb423e6fe9c1dd72b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_c05a9328", "line": 964, "updated": "2020-04-16 03:40:57.000000000", "message": "Ya, this one is odd, if I set == 0 or is 0 it fails.", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "de231334225e100ab2507a31f7c89079a47a35e1", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_e5140151", "line": 964, "updated": "2020-04-16 03:25:43.000000000", "message": "it's weird to != 0 then compare this to True; i feel like choose if it's a bool or an int", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "02ee41c662d0804993feca4fb423e6fe9c1dd72b", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_2041b73a", "line": 968, "updated": "2020-04-16 03:40:57.000000000", "message": "resolvconf will write a lowercase option for DNS if this is not set.", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "7ab87c2dc9e1ed9f460f5f8716d241801030a815", "unresolved": false, "patch_set": 9, "id": "3f4c43b2_a0ff87ff", "line": 968, "updated": "2020-04-16 03:28:39.000000000", "message": "what's this bit?", "commit_id": "d43e9d4c8af43ee7f40596264a933b02c8014913"}]}}, "openstack%2Fcinder~master~Ia26993f8c352d539fa8834d368a9c39109d6485d": {"owner_id": 23601, "owner_name": "michael", "owner_email": "Michael.Mcaleer@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 19:11:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 26561, "name": "liu tracy", "email": "Tracy.Liu@emc.com"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-04-16 14:47:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13425, "name": "Simon Dodsley", "email": "simon@purestorage.com", "username": "sdodsley"}], "comments": {}}, "x%2Fnetworking-mlnx~master~Idcfc4d07f2a73b556ebfdedd0d083e7bbc5e5682": {"owner_id": 12171, "owner_name": "Moshe Levi", "owner_email": "moshele@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, {"value": 2, "date": "2020-04-19 18:59:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22948, "name": "Hamdy Khader", "email": "hamdyk@mellanox.com", "username": "hamdyk"}], "comments": {"networking_mlnx/plugins/ml2/drivers/sdn/sdn_mech_driver.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c77b6f3800777b85c8dce6b4c3d56e3588014e5c", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e503ac0e", "line": 168, "updated": "2020-04-12 09:08:23.000000000", "message": "pep8: F841 local variable 'fabric_type' is assigned to but never used", "commit_id": "226cf58d93e5124834d784666ae6e06d90e1e498"}]}}, "openstack%2Fkolla~master~I9dfcfcb25dd9621770ab4d16d630ad1b2ff6b15c": {"owner_id": 28022, "owner_name": "Bharat Kunwar", "owner_email": "brtknr@bath.edu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-12-16 08:34:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}], "comments": {}}, "openstack%2Fdiskimage-builder~master~I3e583467347fec3a6d41380f9fffa865aa7c7586": {"owner_id": 28022, "owner_name": "Bharat Kunwar", "owner_email": "brtknr@bath.edu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6133, "name": "yolanda.robla", "email": "yroblamo@redhat.com", "username": "yolanda.robla"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}], "comments": {"diskimage_builder/elements/package-installs/bin/package-installs-squash": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "4bba5f52c6fefa86df8dd393c628c0daa02a6853", "unresolved": false, "patch_set": 3, "id": "bf659307_5d338062", "line": 90, "updated": "2018-04-04 00:12:25.000000000", "message": "did you mean to leave this in?", "commit_id": "217f74792dc7ab2c884137bbe14fb8faffa5d0a8"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "68a0228797fa2eaaf93a158a995622a02e2e80f4", "unresolved": false, "patch_set": 3, "id": "bf659307_d315383e", "line": 90, "in_reply_to": "bf659307_5d338062", "updated": "2018-04-09 09:02:42.000000000", "message": "Yes,  i think its useful to know which packages are being omitted and why in debug mode. It took me a long time to figure out why python3-pyYAML was not being installed...", "commit_id": "217f74792dc7ab2c884137bbe14fb8faffa5d0a8"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "9ab9de541c307e6f1daaf68d175fb7453a519286", "unresolved": false, "patch_set": 4, "id": "9f6a8fd7_8f4a1b7e", "line": 98, "updated": "2018-04-16 13:17:21.000000000", "message": "These last three are a little confusing as they reference the valid_* variables, but do not include this in the name.", "commit_id": "d03940faebfc64342b28b60824e43d8e75accc05"}]}}, "openstack%2Ftripleo-common~stable%2Ftrain~I908b2af6acce25dfb115463f9d04b0e14c7cba33": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 2, "date": "2020-04-16 07:17:08.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-14 21:08:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-04-14 16:31:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {}}, "openstack%2Fzun~master~I89425273ad2092f5394f20c7cdecde14877b1a01": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-19 17:20:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fironic-python-agent~master~I5fdb2a02ee83c692d46cbe28266fcae033bec6f6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:01:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fcinder~master~I9dadf0f11e45e2f1bbbce15494d707b9071104bc": {"owner_id": 24, "owner_name": "Chuck Short", "owner_email": "charles.short@windriver.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15296, "name": "Brocade Openstack CI", "email": "Brocade-Openstack-CI@Brocade.com", "username": "Brocade-Openstack-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-07-01 15:38:47.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24863, "name": "Veritas Access CI", "email": "DL-VTAS-ENG-SDIO-Access-Opensource@veritas.com", "username": "vtas-access-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24, "name": "Chuck Short", "email": "charles.short@windriver.com", "username": "zulcss"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24496, "name": "DataCore CI", "email": "michael.latchmansingh@datacore.com", "username": "datacore-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25648, "name": "wang yong", "email": "yongwc@foxmail.com", "username": "wangyong"}], "comments": {}}, "openstack%2Fsushy-cli~master~Iedf8af50765945e26ac69d4f1b441d88960e3a61": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:02:40.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "openstack%2Fmetalsmith~master~I97af946c244559513689c1ea9ac2d736d55dbe0f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 17:00:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {"metalsmith/test/test_scheduler.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "26153d64a41d9f22c1db6268e2c16ab95397619e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_255b5b54", "line": 17, "updated": "2020-04-18 17:29:32.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'import testtools' and in a different group.", "commit_id": "06f6978e9cdde73d1a56709557c1aa3bfbf101fc"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "26153d64a41d9f22c1db6268e2c16ab95397619e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_855a2f4c", "line": 17, "updated": "2020-04-18 17:29:32.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'import testtools' is identified as Third Party.", "commit_id": "06f6978e9cdde73d1a56709557c1aa3bfbf101fc"}], "metalsmith/test/test_sources.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "26153d64a41d9f22c1db6268e2c16ab95397619e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6555631d", "line": 17, "updated": "2020-04-18 17:29:32.000000000", "message": "pep8: I100 Import statements are in the wrong order. 'from unittest import mock' should be before 'import testtools' and in a different group.", "commit_id": "06f6978e9cdde73d1a56709557c1aa3bfbf101fc"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "26153d64a41d9f22c1db6268e2c16ab95397619e", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c531d70d", "line": 17, "updated": "2020-04-18 17:29:32.000000000", "message": "pep8: I201 Missing newline between import groups. 'from unittest import mock' is identified as Stdlib and 'import testtools' is identified as Third Party.", "commit_id": "06f6978e9cdde73d1a56709557c1aa3bfbf101fc"}]}}, "openstack%2Fcinder~master~I46d125c4ef06cac1260c92ef3e5b78ea2e845be4": {"owner_id": 25648, "owner_name": "wang yong", "owner_email": "yongwc@foxmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13144, "name": "Oracle ZFSSA CI", "username": "oracle-zfssa-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25648, "name": "wang yong", "email": "yongwc@foxmail.com", "username": "wangyong"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fzun-tempest-plugin~master~I3d2e0459ba4aedf21c01d7725fe5ab266f9f4da3": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-19 12:36:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-19 15:55:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpython-freezerclient~master~I5b053a2c5ad1adaed9d3c6072ea7493ab4b8c1ca": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-19 14:00:55.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}], "comments": {"freezerclient/tests/unit/test_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c060a5a8", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2046a922", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client_actions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_005badf6", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client_backups.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_404bf529", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client_clients.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8055fdc8", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client_jobs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e05de1e9", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v1/test_client_sessions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a03ab994", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a063d9b0", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client_actions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6050b1d5", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client_backups.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_00428d10", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client_clients.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_40749568", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client_jobs.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c03705b0", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}], "freezerclient/tests/unit/v2/test_client_sessions.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "03f11bf09748c7342861a6b6707c37642c17813f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e044c11d", "line": 16, "updated": "2020-04-18 17:50:57.000000000", "message": "pep8: H306: imports not in alphabetical order (unittest.mock, unittest)", "commit_id": "145801cede0d99409b43c6ce05b828cb1ef968da"}]}}, "openstack%2Foctavia~master~Ie1b53f5175bf3c827090650d0229579b0a33e7f2": {"owner_id": 10273, "owner_name": "Adam Harwell", "owner_email": "flux.adam@gmail.com", "labels": [{"value": 0, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:43:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 2, "date": "2020-04-19 13:32:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2245, "name": "Jacky Hu", "email": "hudayou@hotmail.com", "username": "hudayou"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, {"value": 1, "date": "2020-04-16 08:24:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7249, "name": "Ann Taraday", "email": "akamyshnikova@mirantis.com", "username": "AKamyshnikova"}], "comments": {"octavia/common/config.py": [{"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "ab8218f400cc72482957427c4dac0dc95bcf5b69", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c79ad1c3", "line": 809, "updated": "2020-04-14 12:01:57.000000000", "message": "shouldn't we remove that line?", "commit_id": "5d21ecb79478c92afff188ea17935d5ed0944a0b"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "6b1686d47e2995773287033079f042e5bf04f3e1", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_71ec3729", "line": 809, "in_reply_to": "3f4c43b2_313dabbb", "updated": "2020-04-15 20:09:42.000000000", "message": "err yes, thought i did this", "commit_id": "5d21ecb79478c92afff188ea17935d5ed0944a0b"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "e6727e5e43bdd8419cd52b464ea7ee43fb3c4b86", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_313dabbb", "line": 809, "in_reply_to": "3f4c43b2_c79ad1c3", "updated": "2020-04-14 15:34:17.000000000", "message": "+1", "commit_id": "5d21ecb79478c92afff188ea17935d5ed0944a0b"}]}}, "openstack%2Fnova~master~I3886fb1b98a78ac73283de692d564d81ae74e589": {"owner_id": 7634, "owner_name": "Takashi Natsume", "owner_email": "takanattie@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 16:57:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 15:04:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fkeystoneauth~master~Ia506af26cca82e96f157bc777521fd82d39a74f5": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-02 16:38:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-04-19 13:54:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fkolla~master~Ia9feac726a60250215b1bc78bf90dc68ac6f956a": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-04-19 11:08:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 2, "date": "2020-04-17 13:37:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fmasakari-specs~master~I3e97d60bd490e42c1ae29da356db59caa6994311": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8716, "name": "Sampath Priyankara", "email": "sam47priya@gmail.com", "username": "sampath"}, {"value": 0, "_account_id": 8988, "name": "Rikimaru Honjo", "email": "honjo.rikimaru@ntt-tx.co.jp", "username": "rikimaru.honjo", "inactive": true}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 3085, "name": "Tushar Patil", "inactive": true}, {"value": 0, "_account_id": 2394, "name": "Adam Spiers", "email": "aspiers@suse.com", "username": "adam.spiers"}, {"value": 0, "_account_id": 12950, "name": "Yukinori Sagara", "email": "yukinori.sagara@gmail.com", "username": "sagara"}, {"value": 0, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, {"value": 1, "date": "2020-04-18 19:52:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, {"value": 2, "date": "2020-04-19 13:11:40.000000000", "_account_id": 25267, "name": "NTT system-fault-ci masakari-integration-ci", "email": "masakari.integration.test@gmail.com", "username": "masakari-integration-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmonasca-common~master~If1bd950d159a583d912d13e73113dae7f577e8eb": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26141, "name": "Adrian Czarnecki", "email": "adrian.czarnecki@ts.fujitsu.com", "username": "czarneckia"}, {"value": 0, "_account_id": 28062, "name": "Martin Chacon Piza", "email": "martin@chaconpiza.com", "username": "martinchacon"}, {"value": 2, "date": "2020-04-15 12:30:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 1, "date": "2020-04-14 10:03:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14123, "name": "Stefano Canepa", "email": "sc@linux.it", "username": "sc"}, {"value": 0, "_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}, {"value": 0, "_account_id": 10311, "name": "Joseph Davis", "email": "joseph.davis@suse.com", "username": "joadavis"}, {"value": 0, "_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"setup.cfg": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "1c27772cf6e479f5348dce723b5c034dcefa2273", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_49c25d87", "line": 27, "range": {"start_line": 26, "start_character": 0, "end_line": 27, "end_character": 28}, "updated": "2020-04-14 10:03:57.000000000", "message": "I think it could be dropped", "commit_id": "070bd04aea0aa5732e96a7fc7ead2855183c6143"}]}}, "openstack%2Fpython-tripleoclient~master~I6f6be59efcaefbd351efa779075c881948663db9": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-03-30 18:39:47.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": -1, "date": "2020-03-30 18:37:44.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftempest-horizon~master~Ifd530546bfb5ae25e01e72a0e3c02f963d9d04d2": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 11:33:01.000000000", "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-08 10:46:32.000000000", "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Ftempest-horizon~master~Ie915a93b824331407a48affcbd31076d6a7cccfa": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 11:33:14.000000000", "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-03-30 04:25:39.000000000", "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Ftempest-horizon~master~I60c6e64e771f4e6bd3482a4d6a2a37228dde98b9": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 11:33:40.000000000", "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 2, "date": "2020-03-30 06:22:24.000000000", "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {"setup.cfg": [{"author": {"_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}, "change_message_id": "49c29f585fe74554ac5ff79a271701e4c5ff868d", "unresolved": false, "patch_set": 1, "id": "df33271e_da4d249b", "line": 20, "range": {"start_line": 16, "start_character": 4, "end_line": 20, "end_character": 41}, "updated": "2020-03-30 06:22:24.000000000", "message": "It is a good chance to remove all these lines as these are no longer used.", "commit_id": "9453185734a6eebc0366a1712dfd54c033dfb95d"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "cc5534e8ad573fddc9f1f793880bdf1238f22ee1", "unresolved": false, "patch_set": 1, "id": "df33271e_e94f4d68", "line": 20, "range": {"start_line": 16, "start_character": 4, "end_line": 20, "end_character": 41}, "in_reply_to": "df33271e_ae61fed5", "updated": "2020-04-01 06:35:36.000000000", "message": "https://review.opendev.org/716489 addresses the comment.", "commit_id": "9453185734a6eebc0366a1712dfd54c033dfb95d"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "462893fd4a944498603cf19136d0a4dabaec3883", "unresolved": false, "patch_set": 1, "id": "df33271e_ae61fed5", "line": 20, "range": {"start_line": 16, "start_character": 4, "end_line": 20, "end_character": 41}, "in_reply_to": "df33271e_da4d249b", "updated": "2020-03-30 09:43:16.000000000", "message": "It is not related to \"drop sphinx document\" apparently, so it is not a good idea to do this in this commit. The child commit might be related.", "commit_id": "9453185734a6eebc0366a1712dfd54c033dfb95d"}]}}, "openstack%2Fmanila~master~Ida3480fd1b9cab8eeb9ad002cce7200d89e01cb6": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 12:21:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 22:36:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"doc/source/contributor/contributing.rst": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "64677f8640490e9d059e0ffae42447a3ba3b31c8", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_674babaf", "line": 44, "range": {"start_line": 44, "start_character": 0, "end_line": 44, "end_character": 21}, "updated": "2020-04-18 13:16:32.000000000", "message": "manila-tempest-plugin", "commit_id": "f7a684c7549bc3d7eeb61b98b70d4ae4850d20f7"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "7a725a490f3c46a7fbb1e470d953323d71594149", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_7b08622b", "line": 44, "range": {"start_line": 44, "start_character": 0, "end_line": 44, "end_character": 21}, "in_reply_to": "3f4c43b2_674babaf", "updated": "2020-04-18 22:30:32.000000000", "message": "Nice catch, thanks. Done", "commit_id": "f7a684c7549bc3d7eeb61b98b70d4ae4850d20f7"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "64677f8640490e9d059e0ffae42447a3ba3b31c8", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_07b90779", "line": 208, "range": {"start_line": 208, "start_character": 31, "end_line": 208, "end_character": 45}, "updated": "2020-04-18 13:16:32.000000000", "message": "sounds redundant", "commit_id": "f7a684c7549bc3d7eeb61b98b70d4ae4850d20f7"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "7a725a490f3c46a7fbb1e470d953323d71594149", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_36138f5e", "line": 208, "range": {"start_line": 208, "start_character": 31, "end_line": 208, "end_character": 45}, "in_reply_to": "3f4c43b2_07b90779", "updated": "2020-04-18 22:30:32.000000000", "message": "Done", "commit_id": "f7a684c7549bc3d7eeb61b98b70d4ae4850d20f7"}], "doc/source/contributor/project-team-lead.rst": [{"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "c24ed353bb9b851df4e41bccfcb0a4d9f91c3ff6", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_23ad3788", "line": 15, "range": {"start_line": 14, "start_character": 0, "end_line": 15, "end_character": 30}, "updated": "2020-04-16 15:41:31.000000000", "message": "Wow, I wish I had this document when I served!", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "c24ed353bb9b851df4e41bccfcb0a4d9f91c3ff6", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_e394ef46", "line": 79, "range": {"start_line": 79, "start_character": 65, "end_line": 79, "end_character": 73}, "updated": "2020-04-16 15:41:31.000000000", "message": "prelude", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ecaac20bcd54ddb4d0c70a69deb4581735b4904", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a65cb57e", "line": 79, "range": {"start_line": 79, "start_character": 65, "end_line": 79, "end_character": 73}, "in_reply_to": "3f4c43b2_a68315cc", "updated": "2020-04-16 16:24:14.000000000", "message": "Kidding, Done :)", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fba0ca45a643b295e76e943dd5d5a9c194586c4b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_a68315cc", "line": 79, "range": {"start_line": 79, "start_character": 65, "end_line": 79, "end_character": 73}, "in_reply_to": "3f4c43b2_e394ef46", "updated": "2020-04-16 16:23:14.000000000", "message": "it's predule too!", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "c24ed353bb9b851df4e41bccfcb0a4d9f91c3ff6", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_638a9f1b", "line": 100, "range": {"start_line": 100, "start_character": 53, "end_line": 100, "end_character": 63}, "updated": "2020-04-16 15:41:31.000000000", "message": "prelude", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ecaac20bcd54ddb4d0c70a69deb4581735b4904", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_865ff970", "line": 100, "range": {"start_line": 100, "start_character": 53, "end_line": 100, "end_character": 63}, "in_reply_to": "3f4c43b2_638a9f1b", "updated": "2020-04-16 16:24:14.000000000", "message": "Done", "commit_id": "4ff6ddd133b9d9031fb8aebb109fe2de832a2ba8"}]}}, "openstack%2Fheat-dashboard~master~I27db1ac7f816f0f53b7ab0a10b48bf4c3c365a65": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "openstack%2Fvitrage-tempest-plugin~master~I91b3d395f980f9aa55e4c6134b821efec4450643": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 08:37:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fswift~feature%2Flosf~I3ee31df1f346f11e125bc621d6ab08a14ba219a5": {"owner_id": 13852, "owner_name": "Romain LE DISEZ", "owner_email": "romain.le-disez@corp.ovh.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 00:00:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}], "comments": {}}, "openstack%2Fmagnum~master~I6c6599cdee61f508bd2a5e4c454da3125a256753": {"owner_id": 20498, "owner_name": "Spyros Trigazis", "owner_email": "strigazi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 136, "name": "Tim Bell", "email": "tim.bell@cern.ch", "username": "tim-bell"}, {"value": 2, "date": "2020-02-24 20:47:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 2, "date": "2020-02-21 15:05:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 0, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}], "comments": {"magnum/drivers/common/templates/kubernetes/fragments/install-cri.sh": [{"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "05574c0c124b332615bb0f5130bea24b1e630d21", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_86a646bf", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "updated": "2020-02-20 15:21:19.000000000", "message": "Where is this defined?", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "169573d49856401f98a92ef9f05ae6d55732dcee", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_bb0fdb88", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 54}, "updated": "2020-02-20 14:47:07.000000000", "message": "what is this?", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "46239cc21239f36b0f70f992e5cddd26538d24c3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a6e8227e", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_06433699", "updated": "2020-02-20 15:35:45.000000000", "message": "We can do it in one go, for consistency, with a kitchen knife patch, touching all files. Actually, we don't need it. I will drop it.", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "3aedcff45f0868956a9a953bd4278dfdc064405e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_667b0af3", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_26c43242", "updated": "2020-02-20 15:32:40.000000000", "message": "Hmm the documentation says $heat_outputs_path.output but the example says  $heat_outputs_path.result. Which one is it? Does this mean we should use this pattern in all other scripts?", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "f987d2659c16e73033b928c7e95a609b61039e1c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_06433699", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_667b0af3", "updated": "2020-02-20 15:34:15.000000000", "message": "Just wondering because we don't do this anywhere else.", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "f08962371b58851cab14877cc585759965959a70", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_26c43242", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_86a646bf", "updated": "2020-02-20 15:24:25.000000000", "message": "https://docs.openstack.org/heat/train/template_guide/software_deployment.html#configuring-with-scripts", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "74ca36d5198b22c1cde429d28f22fc9585e53dab", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_663eaae4", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_a65b425f", "updated": "2020-02-20 15:41:17.000000000", "message": "It is better to not touch all our files. Let's avoid it.", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "83cdde64c4a8085bb3df8aeb27252bb916918829", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a65b425f", "line": 6, "range": {"start_line": 6, "start_character": 30, "end_line": 6, "end_character": 47}, "in_reply_to": "3fa7e38b_a6e8227e", "updated": "2020-02-20 15:40:00.000000000", "message": "Yes, that might be better otherwise we are doing different things to generate output in different places.", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "6c4b231fb39fd5a8bdf554cd2a6c2114f1605249", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2690b297", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 54}, "in_reply_to": "3fa7e38b_bb0fdb88", "updated": "2020-02-20 15:09:23.000000000", "message": "Posts data to the result output of the software config. This is a selected output from us. see the output of the nested stack.", "commit_id": "679d224208061bd79c838de07e37c40e75a48cba"}, {"author": {"_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, "change_message_id": "cf870d9db976132c123b2dfc246fde478a8110c2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_0110004c", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 15}, "updated": "2020-02-20 15:46:17.000000000", "message": "space", "commit_id": "a0e2c7ab9c94b78f09f1347fe35980dc28608bb9"}]}}, "openstack%2Fopenstack-helm-infra~master~I548b441d6c712fd63fdf7dacb475683533a001ca": {"owner_id": 29131, "owner_name": "diwakar thyagaraj", "owner_email": "diwakar.chitoor.thyagaraj@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 00:13:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 2, "date": "2020-04-19 00:13:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 0, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {"ingress/templates/deployment-ingress.yaml": [{"author": {"_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, "change_message_id": "6905e456c9513d417403bc64e3cc4f3a7dad3426", "unresolved": false, "patch_set": 12, "id": "3f4c43b2_78287ae1", "side": "PARENT", "line": 183, "range": {"start_line": 183, "start_character": 85, "end_line": 183, "end_character": 98}, "updated": "2020-04-17 12:49:06.000000000", "message": "why is this not required?", "commit_id": "34d54f2812b7d54431d548cff08fe8da7f838124"}], "zuul.d/project.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "cf9ad29c06af220a8096ef825f22bb4a3ce78b01", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_fbacbd8d", "line": 65, "range": {"start_line": 65, "start_character": 10, "end_line": 65, "end_character": 39}, "updated": "2020-04-14 19:52:08.000000000", "message": "it is already defined here", "commit_id": "fe832af0f109dbe0a6fa02163cca25af46997ff2"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "6a970e6f22ba548a40e8aaf6df70cdd12654cf8b", "unresolved": false, "patch_set": 7, "id": "3f4c43b2_06e2f0d5", "line": 68, "range": {"start_line": 16, "start_character": 2, "end_line": 68, "end_character": 0}, "updated": "2020-04-14 20:26:59.000000000", "message": "Job check experimental not defined", "commit_id": "14041d278250f7c9e78aebeac356d18d9f526d4f"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "aae4773afe9b098be2e51f93cc40f47dd33ddcfe", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_863ba036", "line": 68, "range": {"start_line": 16, "start_character": 2, "end_line": 68, "end_character": 0}, "updated": "2020-04-14 20:29:25.000000000", "message": "Job experimental not defined", "commit_id": "90ffde6f7e561c9443aece1785e8a23ad0d65559"}]}}, "openstack%2Fnova~stable%2Ftrain~Idec2d31cbba497dc4b20912f3388ad2341951d23": {"owner_id": 30523, "owner_name": "Dincer Celik", "owner_email": "hello@dincercelik.com", "labels": [{"value": 0, "_account_id": 28332, "name": "Alexandre arents", "email": "alexandre.arents@corp.ovh.com", "username": "aarents"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 01:55:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20223, "name": "zhaolihui", "email": "zhaolh@awcloud.com", "username": "zhaolihui"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-04-16 15:40:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:02:30.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 1, "date": "2020-04-18 22:28:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~I6a28757f4a0bf5d47214f4ed548cf5c73d302e3f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-27 19:05:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-04-19 01:44:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I869c0ff6873e85a5898d0f3a43556c3f3ecdb4fa": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-19 01:26:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmagnum~stable%2Ftrain~Ib64efe7ecbe9a24e86fa9d9a35a4d90c0e8bbf2e": {"owner_id": 20498, "owner_name": "Spyros Trigazis", "owner_email": "strigazi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 00:24:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 2, "date": "2020-04-17 11:35:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}], "comments": {}}, "openstack%2Fmagnum~master~I027629d02a798f510e00e098a45a04e8f78b844e": {"owner_id": 28022, "owner_name": "Bharat Kunwar", "owner_email": "brtknr@bath.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 00:24:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 2, "date": "2020-04-17 13:19:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "dbd0bf7f36e745082f28a1e9013f440e7eaa6382", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_13295789", "line": 9, "range": {"start_line": 9, "start_character": 18, "end_line": 9, "end_character": 19}, "updated": "2020-04-17 13:11:31.000000000", "message": "2", "commit_id": "8d62108f058fa8194f343d169e90845b09015821"}], "doc/source/user/index.rst": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "dbd0bf7f36e745082f28a1e9013f440e7eaa6382", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_733c1bbf", "line": 1247, "range": {"start_line": 1247, "start_character": 24, "end_line": 1247, "end_character": 25}, "updated": "2020-04-17 13:11:31.000000000", "message": "2", "commit_id": "8d62108f058fa8194f343d169e90845b09015821"}], "magnum/drivers/k8s_fedora_coreos_v1/templates/kubecluster.yaml": [{"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "dbd0bf7f36e745082f28a1e9013f440e7eaa6382", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_33745399", "line": 452, "range": {"start_line": 452, "start_character": 19, "end_line": 452, "end_character": 20}, "updated": "2020-04-17 13:11:31.000000000", "message": "2", "commit_id": "8d62108f058fa8194f343d169e90845b09015821"}, {"author": {"_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, "change_message_id": "dbd0bf7f36e745082f28a1e9013f440e7eaa6382", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_936a87b0", "line": 502, "range": {"start_line": 502, "start_character": 19, "end_line": 502, "end_character": 20}, "updated": "2020-04-17 13:11:31.000000000", "message": "2", "commit_id": "8d62108f058fa8194f343d169e90845b09015821"}]}}, "openstack%2Fmanila-ui~master~I447296c28c39104d858ac2f34c5faf0021d7ea61": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I5b2e90549c8ca4f6b1c91b0879470a2cee59bf59": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-18 23:18:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-masakariclient~master~If3a760ea142023791d44350d4603b329b4396f6b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 00:12:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {}}, "openstack%2Fmasakari-monitors~master~Ie5ee60235bafc1e7b3461dee29b83fb62125178e": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-19 00:11:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {}}, "airship%2Fpromenade~master~I58a27f8d20a12f6acee541dc089ee7125e04dc8a": {"owner_id": 29131, "owner_name": "diwakar thyagaraj", "owner_email": "diwakar.chitoor.thyagaraj@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "318922d54ebbaaa832e76705863f593dc9dde116", "unresolved": false, "patch_set": 9, "id": "1fa4df85_2f4b6eb0", "line": 44, "range": {"start_line": 13, "start_character": 2, "end_line": 44, "end_character": 0}, "updated": "2020-03-02 22:54:11.000000000", "message": "Job airship-promenade-genesis-gate not defined", "commit_id": "b0c4dbe82001bd57f678569727dfc885534f5aec"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "318922d54ebbaaa832e76705863f593dc9dde116", "unresolved": false, "patch_set": 9, "id": "1fa4df85_6f516662", "line": 66, "range": {"start_line": 56, "start_character": 2, "end_line": 66, "end_character": 0}, "updated": "2020-03-02 22:54:11.000000000", "message": "The job \"airship-promenade-genesis-gate\" exceeds tenant max-job-\ntimeout 10800.", "commit_id": "b0c4dbe82001bd57f678569727dfc885534f5aec"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "318922d54ebbaaa832e76705863f593dc9dde116", "unresolved": false, "patch_set": 9, "id": "1fa4df85_0f50f25c", "line": 76, "range": {"start_line": 67, "start_character": 2, "end_line": 76, "end_character": 0}, "updated": "2020-03-02 22:54:11.000000000", "message": "The job \"airship-promenade-genesis-containerd-gate\" exceeds tenant\nmax-job-timeout 10800.", "commit_id": "b0c4dbe82001bd57f678569727dfc885534f5aec"}]}}, "vexxhost%2Fopenstack-operator~master~I0776875ed24c8c8681fe4efd334a7e911c0ae4ce": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 2, "date": "2020-04-18 23:17:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fzun-tempest-plugin~master~I78f534c6464231059806c008de278f4a13e8fc31": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 23:13:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fmasakari~master~Ia6927351f591be0c57fd73515b2542a0af35f82b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25267, "name": "NTT system-fault-ci masakari-integration-ci", "email": "masakari.integration.test@gmail.com", "username": "masakari-integration-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 23:44:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {}}, "openstack%2Fhorizon~stable%2Fussuri~I80736b108f5ae9a36c0e756bf386468879be3293": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 23:19:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "starlingx%2Fspecs~master~Ib7f62e1cfc3585219c52892130b76b583e603a7f": {"owner_id": 8768, "owner_name": "Chris Friesen", "owner_email": "chris.friesen@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-08 12:32:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-04-15 20:44:41.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 2, "date": "2020-04-07 21:31:17.000000000", "_account_id": 9557, "name": "Ian Jolliffe", "email": "ian.jolliffe@windriver.com", "username": "ijolliffe"}, {"value": 1, "date": "2020-04-07 22:02:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 2, "date": "2020-04-08 23:15:10.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "_account_id": 28675, "name": "Teresa Ho", "email": "teresa.ho@windriver.com", "username": "tho"}], "comments": {"doc/source/specs/stx-4.0/approved/starlingx-2006740-fpga-update-orchestration.rst": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_312ad92b", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 9}, "updated": "2020-03-20 14:02:42.000000000", "message": "Do we want to mention use cases for updating images on a single host or on a single subcloud?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_1ac90358", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 9}, "in_reply_to": "1fa4df85_312ad92b", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_ba7fbea9", "line": 68, "range": {"start_line": 66, "start_character": 0, "end_line": 68, "end_character": 52}, "updated": "2020-03-17 20:32:39.000000000", "message": "Should this use case also call out the 'host recovery' aspect following an aborted operation.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_f5a88078", "line": 78, "range": {"start_line": 78, "start_character": 16, "end_line": 78, "end_character": 21}, "updated": "2020-03-20 18:47:27.000000000", "message": "'install or write' to align with terminology above", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_fa337f60", "line": 78, "range": {"start_line": 78, "start_character": 16, "end_line": 78, "end_character": 21}, "in_reply_to": "df33271e_f5a88078", "updated": "2020-04-01 23:09:59.000000000", "message": "changed to use \"written to the hardware\" instead of \"installed\"", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_d5ca9c4d", "line": 86, "updated": "2020-03-20 18:47:27.000000000", "message": "It should also be possible to perform the writing of the device images without the DC/VIM automatically driving and directly via sysinv-api", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_5a426bac", "line": 86, "in_reply_to": "df33271e_d5ca9c4d", "updated": "2020-04-01 23:09:59.000000000", "message": "will mention this explicitly", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 2, "id": "df33271e_d002aa3e", "line": 94, "range": {"start_line": 93, "start_character": 31, "end_line": 94, "end_character": 9}, "updated": "2020-04-02 14:12:43.000000000", "message": "Reset or is a reboot sufficient ? Reset implies (to me) through BMC.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_5a480a86", "line": 105, "range": {"start_line": 105, "start_character": 68, "end_line": 105, "end_character": 69}, "updated": "2020-03-17 20:32:39.000000000", "message": "EOL space. There are more below.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_1a5d8346", "line": 105, "range": {"start_line": 105, "start_character": 68, "end_line": 105, "end_character": 69}, "in_reply_to": "1fa4df85_5a480a86", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_4a4b8786", "line": 131, "range": {"start_line": 131, "start_character": 75, "end_line": 131, "end_character": 79}, "updated": "2020-03-20 18:47:27.000000000", "message": "nit: OPAE", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_fa39bff1", "line": 131, "range": {"start_line": 131, "start_character": 75, "end_line": 131, "end_character": 79}, "in_reply_to": "df33271e_4a4b8786", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_0a2e9fa4", "line": 140, "range": {"start_line": 140, "start_character": 25, "end_line": 140, "end_character": 32}, "updated": "2020-03-20 18:47:27.000000000", "message": "regarding: trigger - consider control initiation by sysinv-conductor as it needs to be aware of and control fpga state changes.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_9a1fd36a", "line": 140, "range": {"start_line": 140, "start_character": 25, "end_line": 140, "end_character": 32}, "in_reply_to": "df33271e_0a2e9fa4", "updated": "2020-04-01 23:09:59.000000000", "message": "makes sense.  updated.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_b5cc3862", "line": 174, "range": {"start_line": 174, "start_character": 52, "end_line": 174, "end_character": 63}, "updated": "2020-03-20 18:47:27.000000000", "message": "Alternatively", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 2, "id": "df33271e_76a64c11", "line": 174, "range": {"start_line": 174, "start_character": 52, "end_line": 174, "end_character": 63}, "in_reply_to": "df33271e_b5cc3862", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_8fe1612d", "line": 229, "range": {"start_line": 227, "start_character": 68, "end_line": 229, "end_character": 37}, "updated": "2020-03-17 20:32:39.000000000", "message": "So in this (in-progress) case the delete will be a queued operation ? Is that complexity worth it ? Why not just reject the delete till current operations are complete or abort is finished.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_3db16148", "line": 229, "range": {"start_line": 227, "start_character": 68, "end_line": 229, "end_character": 37}, "in_reply_to": "1fa4df85_8fe1612d", "updated": "2020-04-01 23:09:59.000000000", "message": "It'll not be queued...if the admin does \"system device-image-remove\" then sysinv-api can just mark the image as deactivated in the DB.  If the FPGA agent is already writing the image to the hardware, it would just continue to do so.\n\nFor the \"system device-image-delete\" operation above, sysinv-api or sysinv-conductor would remove the image from the local image vault.  But again, if the FPGA agent on a worker node is already writing the image to the hardware (with the image copied to a temporary staging location) the image deletion would not affect the in-progress image write.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_2fb86dc6", "line": 246, "range": {"start_line": 246, "start_character": 19, "end_line": 246, "end_character": 78}, "updated": "2020-03-17 20:32:39.000000000", "message": "So the decision is to upgrade only unlocked hosts. This will be reflected in the VIM's fpga upgrade creation strategy for each subcloud.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_950db492", "line": 246, "range": {"start_line": 246, "start_character": 64, "end_line": 246, "end_character": 78}, "updated": "2020-03-20 18:47:27.000000000", "message": "would we also allow updating image devices on locked-online hosts?  e.g. when a new host is first brought online; in such a scenario, host-unlock could then be blocked until the image update is complete (or force would be required).", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 2, "id": "df33271e_767f6c65", "line": 246, "range": {"start_line": 246, "start_character": 64, "end_line": 246, "end_character": 78}, "in_reply_to": "df33271e_102ed2a4", "updated": "2020-04-02 22:47:39.000000000", "message": "Yes, a host can unlock with the factor image...it just won't be able to actually run traffic through the FPGA.  So sysinv will detect the problem and trigger a re-flash of the FPGA, then a lock/unlock of the host.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 2, "id": "df33271e_102ed2a4", "line": 246, "range": {"start_line": 246, "start_character": 64, "end_line": 246, "end_character": 78}, "in_reply_to": "df33271e_950db492", "updated": "2020-04-02 14:12:43.000000000", "message": "Can a host unlock successfully with the (factory) default image ?\n\nIf 'no' then we absolutely need to support fw upgrading locked hosts. \nIf 'yes' then I recommend we stick with only unlocked hosts, at least for the first release.\n\nDebug of a failed unlock after an fpga upgrade would bring the fpga upgrade (just performed) into question.\n\nIts a simpler implementation of the strategy to support unlock only.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_1d957d87", "line": 246, "range": {"start_line": 246, "start_character": 64, "end_line": 246, "end_character": 78}, "in_reply_to": "df33271e_950db492", "updated": "2020-04-01 23:09:59.000000000", "message": "We agreed in discussions that we would not update device images for locked hosts.  The expectation is that the host is locked for a reason, and we do not want to keep it locked for ~40min while the image update is in progress.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_517af5f0", "line": 261, "range": {"start_line": 261, "start_character": 1, "end_line": 261, "end_character": 5}, "updated": "2020-03-20 14:02:42.000000000", "message": "It would be clearer to say:\nThe implementation of this...", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_fdf1b902", "line": 261, "range": {"start_line": 261, "start_character": 1, "end_line": 261, "end_character": 5}, "in_reply_to": "1fa4df85_517af5f0", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 2, "id": "df33271e_965830fa", "line": 261, "range": {"start_line": 261, "start_character": 1, "end_line": 261, "end_character": 5}, "in_reply_to": "df33271e_3ad4b1e8", "updated": "2020-04-02 22:47:39.000000000", "message": "whoops, done now.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 2, "id": "df33271e_3ad4b1e8", "line": 261, "range": {"start_line": 261, "start_character": 1, "end_line": 261, "end_character": 5}, "in_reply_to": "df33271e_fdf1b902", "updated": "2020-04-02 13:40:18.000000000", "message": "I think you missed this one.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b27602d8", "line": 307, "range": {"start_line": 307, "start_character": 0, "end_line": 307, "end_character": 30}, "updated": "2020-03-17 20:32:39.000000000", "message": "If fw upgrade can only be performed on an unlocked host then only the lock command needs to be blocked.\n\nIf fw upgrade can occur on both locked and unlocked hosts then  the additional reset and power-off commands should also be blocked if the hosts's BMC is provisioned.\n\nWhat about 'swact' command handling in the AIO DX ? Should 'swacting' to an inactive controller that is being fpga upgraded be permitted.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_35cb081f", "line": 307, "range": {"start_line": 307, "start_character": 0, "end_line": 307, "end_character": 30}, "in_reply_to": "1fa4df85_b27602d8", "updated": "2020-03-20 18:47:27.000000000", "message": "As swact will likely abort the fw upgrade, manual swact should be prevented.  However, sm may still initiate an uncontrolled swact in which case abort/failed case would need to be handled.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 2, "id": "df33271e_568ce834", "line": 307, "range": {"start_line": 307, "start_character": 0, "end_line": 307, "end_character": 30}, "in_reply_to": "df33271e_1007f21e", "updated": "2020-04-02 22:47:39.000000000", "message": "The most likely scenarios would be for the FPGA agent to fail to download the new device image to a local cache location, or for the FPGA agent to fail to contact sysinv-conductor after the device image has been written to the hardware.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 2, "id": "df33271e_1007f21e", "line": 307, "range": {"start_line": 307, "start_character": 0, "end_line": 307, "end_character": 30}, "in_reply_to": "df33271e_35cb081f", "updated": "2020-04-02 14:12:43.000000000", "message": "I don't think we could host off the swact for the abort to complete, since it must wait for the current operation to complete first. So the abort/failed will have to be from the other side, correct ?\n\nIs this just database cleanup ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_e68126c5", "line": 307, "range": {"start_line": 307, "start_character": 0, "end_line": 307, "end_character": 30}, "in_reply_to": "df33271e_35cb081f", "updated": "2020-04-01 23:09:59.000000000", "message": "updated", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_321a127d", "line": 320, "range": {"start_line": 320, "start_character": 60, "end_line": 320, "end_character": 79}, "updated": "2020-03-17 20:32:39.000000000", "message": "Both quotes and astrix required here.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_667516fa", "line": 320, "range": {"start_line": 320, "start_character": 60, "end_line": 320, "end_character": 79}, "in_reply_to": "1fa4df85_321a127d", "updated": "2020-04-01 23:09:59.000000000", "message": "quotes removed", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_157340b3", "line": 336, "range": {"start_line": 336, "start_character": 0, "end_line": 336, "end_character": 36}, "updated": "2020-03-17 20:32:39.000000000", "message": "This is the VIM's CLI.\n\nI interpret this as being manually executed on the subcloud itself.\n\nWhat should the VIM on the SystemController do if it receives this command or should the command not be presented in the tool when running on the SystemController ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_71cdb12f", "line": 336, "range": {"start_line": 336, "start_character": 0, "end_line": 336, "end_character": 36}, "in_reply_to": "1fa4df85_157340b3", "updated": "2020-03-20 14:02:42.000000000", "message": "I think we leave the command on the system controller in case we do support firmware there in the future. Since there will be no devices on the system controller, the command would not create a strategy.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_669196f1", "line": 336, "range": {"start_line": 336, "start_character": 0, "end_line": 336, "end_character": 36}, "in_reply_to": "1fa4df85_71cdb12f", "updated": "2020-04-01 23:09:59.000000000", "message": "Would it make more sense to just pass it through to RegionOne and then use the generic code to create an empty strategy because sysinv says that there are no supported devices in the RegionOne?\n\nOr if we're not going to create a strategy should it return an error back to the user?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 2, "id": "df33271e_d6d2b8ff", "line": 336, "range": {"start_line": 336, "start_character": 0, "end_line": 336, "end_character": 36}, "in_reply_to": "df33271e_3a1b11ca", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 2, "id": "df33271e_3a1b11ca", "line": 336, "range": {"start_line": 336, "start_character": 0, "end_line": 336, "end_character": 36}, "in_reply_to": "df33271e_669196f1", "updated": "2020-04-02 13:40:18.000000000", "message": "I think we line up with the equivalent behaviour for a patch strategy creation when there are no patches to be applied. In that case, the build fails with the reason:\nno software patches found\n\nWe should do the same.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_f18681b9", "line": 365, "range": {"start_line": 365, "start_character": 24, "end_line": 365, "end_character": 69}, "updated": "2020-03-20 14:02:42.000000000", "message": "I think the show just shows the current state from the VIM's DB - it doesn't need to query sysinv.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_46a57246", "line": 365, "range": {"start_line": 365, "start_character": 24, "end_line": 365, "end_character": 69}, "in_reply_to": "1fa4df85_f18681b9", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b18c89d7", "line": 376, "range": {"start_line": 376, "start_character": 1, "end_line": 376, "end_character": 5}, "updated": "2020-03-20 14:02:42.000000000", "message": "The implementation of this...", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_86681af5", "line": 376, "range": {"start_line": 376, "start_character": 1, "end_line": 376, "end_character": 5}, "in_reply_to": "1fa4df85_b18c89d7", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d10ee539", "line": 426, "range": {"start_line": 424, "start_character": 0, "end_line": 426, "end_character": 24}, "updated": "2020-03-20 14:02:42.000000000", "message": "I thought a zone was going to be a geographical area and we were going to limit the number of subclouds in a zone that would be upgraded in parallel. If a zone is really a set of subclouds that can be upgraded in parallel as described here, then we should rename it to something like \"subcloud set\" or \"subcloud group\". The word zone implies an area, which would not be the case in the usage described here.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_4653b239", "line": 426, "range": {"start_line": 424, "start_character": 0, "end_line": 426, "end_character": 24}, "in_reply_to": "1fa4df85_d10ee539", "updated": "2020-04-01 23:09:59.000000000", "message": "Updated to reflect our discussion.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d8395d3f", "line": 443, "range": {"start_line": 442, "start_character": 47, "end_line": 443, "end_character": 32}, "updated": "2020-03-17 20:32:39.000000000", "message": "Question needs to be answered prior to approval.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_86365a02", "line": 443, "range": {"start_line": 442, "start_character": 47, "end_line": 443, "end_character": 32}, "in_reply_to": "1fa4df85_a4168948", "updated": "2020-04-01 23:09:59.000000000", "message": "Updated to reflect this.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_a4168948", "line": 443, "range": {"start_line": 442, "start_character": 47, "end_line": 443, "end_character": 32}, "in_reply_to": "1fa4df85_d8395d3f", "updated": "2020-03-20 14:02:42.000000000", "message": "My view is to keep this in line with the existing dcmanager orchestration code, which would mean we would just allow two options:\n1. all subclouds\n2. a single subcloud\nExtending to support specifying one or more subclouds or one or more zones could be a future enhancement.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_185ff572", "line": 447, "range": {"start_line": 445, "start_character": 53, "end_line": 447, "end_character": 57}, "updated": "2020-03-17 20:32:39.000000000", "message": "How likely is this given typical usage of image create -> apply -> 'unknown' -> <time> -> fw-upgrade-strategy create ... before next audit.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_f13f2284", "line": 447, "range": {"start_line": 445, "start_character": 53, "end_line": 447, "end_character": 57}, "in_reply_to": "1fa4df85_185ff572", "updated": "2020-04-01 23:09:59.000000000", "message": "Would we maybe want to kick off a new audit when sysinv notifies dcmanager that it's done an \"image apply\"?\n\nThe alternative would seem to be that we'd need to tell the admin user to wait for multiple minutes after doing the \"apply\" waiting for the audit to run.\n\nOr maybe we could have the admin user explicitly tell dcmanager to do a new audit once all the new images have been applied?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d8fe3d37", "line": 450, "range": {"start_line": 450, "start_character": 0, "end_line": 450, "end_character": 1}, "updated": "2020-03-17 20:32:39.000000000", "message": "The dcmanager tool does not start with a capital 'D'.\nApplies to all instances in spec.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_1171e676", "line": 450, "range": {"start_line": 450, "start_character": 0, "end_line": 450, "end_character": 1}, "in_reply_to": "1fa4df85_d8fe3d37", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_58980d1a", "line": 465, "range": {"start_line": 465, "start_character": 0, "end_line": 465, "end_character": 3}, "updated": "2020-03-17 20:32:39.000000000", "message": "What is this at the start of the line ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_716cb29b", "line": 465, "range": {"start_line": 465, "start_character": 0, "end_line": 465, "end_character": 3}, "in_reply_to": "1fa4df85_58980d1a", "updated": "2020-04-01 23:09:59.000000000", "message": "copy/paste error.  fixed.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_e3d58eb8", "line": 497, "range": {"start_line": 496, "start_character": 50, "end_line": 497, "end_character": 27}, "updated": "2020-03-17 20:32:39.000000000", "message": "The VIM will reject a 'strategy delete' request while such strategy exists and not in the completed state.\n\nWhat if the VIM gets an invalid delete ?\n\nIs there the need for a force delete or should the VIM trigger an abort for all in progress hosts and then proceed with the delete after all the aborts complete ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_c46aa5b1", "line": 497, "range": {"start_line": 496, "start_character": 50, "end_line": 497, "end_character": 27}, "in_reply_to": "1fa4df85_e3d58eb8", "updated": "2020-03-20 14:02:42.000000000", "message": "I believe the VIM will reject an invalid delete. I think that is the correct behaviour. The dcmanager will not allow the delete unless all the subcloud strategies are completed/failed/aborted, so it will not ask the VIM to delete an in-progress strategy.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_04a2fdfc", "line": 545, "range": {"start_line": 544, "start_character": 35, "end_line": 545, "end_character": 39}, "updated": "2020-03-20 14:02:42.000000000", "message": "I would disallow it.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_f19d620a", "line": 545, "range": {"start_line": 544, "start_character": 35, "end_line": 545, "end_character": 39}, "in_reply_to": "1fa4df85_04a2fdfc", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_63667e2c", "line": 571, "range": {"start_line": 570, "start_character": 0, "end_line": 571, "end_character": 8}, "updated": "2020-03-17 20:32:39.000000000", "message": "The hostwd (Host Watchdog) on AIO SX will self reboot on 'watchdog-timeout' or 'pmon-quorum-process-failure'. Does maintenance need to make the host watchdog not self reset for either of these cases ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_e34f5368", "line": 571, "range": {"start_line": 570, "start_character": 0, "end_line": 571, "end_character": 8}, "in_reply_to": "1fa4df85_63667e2c", "updated": "2020-04-01 23:09:59.000000000", "message": "As discussed, the sysinv FPGA agent will disable the hostwd daemon while a device image update is in progress, then re-enable it after.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "1078371c23eddd91a0ac961ebc82f21dfc93f4d2", "unresolved": false, "patch_set": 2, "id": "df33271e_35678828", "line": 641, "range": {"start_line": 640, "start_character": 54, "end_line": 641, "end_character": 21}, "updated": "2020-03-20 18:47:27.000000000", "message": "Interface with containers could also be mentioned earlier in the the Subcloud Sysinv section.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_4c8c71d6", "line": 641, "range": {"start_line": 640, "start_character": 54, "end_line": 641, "end_character": 21}, "in_reply_to": "df33271e_35678828", "updated": "2020-04-01 23:09:59.000000000", "message": "I actually did mention the use of a Docker image, but I can be more explicit about the use of privileged containers.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_f13e81b6", "line": 718, "range": {"start_line": 716, "start_character": 0, "end_line": 718, "end_character": 42}, "updated": "2020-03-20 14:02:42.000000000", "message": "These don't come out right in the generated document.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_406715ea", "line": 718, "range": {"start_line": 716, "start_character": 0, "end_line": 718, "end_character": 42}, "in_reply_to": "1fa4df85_f13e81b6", "updated": "2020-04-01 23:09:59.000000000", "message": "good catch, fixed", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_04c99daa", "line": 724, "range": {"start_line": 724, "start_character": 17, "end_line": 724, "end_character": 34}, "updated": "2020-03-20 14:02:42.000000000", "message": "sysinv-conductor", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_a06261d6", "line": 724, "range": {"start_line": 724, "start_character": 17, "end_line": 724, "end_character": 34}, "in_reply_to": "1fa4df85_04c99daa", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "19287ee032146f08d5231688234fef67b274490b", "unresolved": false, "patch_set": 2, "id": "1fa4df85_643df18d", "line": 745, "range": {"start_line": 743, "start_character": 0, "end_line": 745, "end_character": 57}, "updated": "2020-03-20 14:02:42.000000000", "message": "We don't have a tempest environment that I am aware of. This should instead mention that unit tests will be added for new/modified code and will be executed by tox, which is already supported for dcmanager, sysinv and VIM.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_c03cc594", "line": 745, "range": {"start_line": 743, "start_character": 0, "end_line": 745, "end_character": 57}, "in_reply_to": "1fa4df85_643df18d", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, "change_message_id": "2bd52323ebde0e6ad811005e78fa399e9b44c92e", "unresolved": false, "patch_set": 2, "id": "1fa4df85_0339dc3d", "line": 747, "range": {"start_line": 747, "start_character": 19, "end_line": 747, "end_character": 20}, "updated": "2020-03-17 00:14:14.000000000", "message": "Unfinished ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_80b91d16", "line": 747, "range": {"start_line": 747, "start_character": 19, "end_line": 747, "end_character": 20}, "in_reply_to": "1fa4df85_0339dc3d", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, "change_message_id": "2bd52323ebde0e6ad811005e78fa399e9b44c92e", "unresolved": false, "patch_set": 2, "id": "1fa4df85_6313f0b9", "line": 751, "range": {"start_line": 751, "start_character": 37, "end_line": 751, "end_character": 39}, "updated": "2020-03-17 00:14:14.000000000", "message": "update", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_20401107", "line": 751, "range": {"start_line": 751, "start_character": 37, "end_line": 751, "end_character": 39}, "in_reply_to": "1fa4df85_6313f0b9", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "be18e098332654258cb30f41cdfaf9273bfde01c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_5e02350b", "line": 754, "range": {"start_line": 754, "start_character": 0, "end_line": 754, "end_character": 20}, "updated": "2020-03-17 20:32:39.000000000", "message": "VIM API documentation needs to be updated with new APIs", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_a05381e1", "line": 754, "range": {"start_line": 754, "start_character": 0, "end_line": 754, "end_character": 20}, "in_reply_to": "1fa4df85_5e02350b", "updated": "2020-04-01 23:09:59.000000000", "message": "Done", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, "change_message_id": "2bd52323ebde0e6ad811005e78fa399e9b44c92e", "unresolved": false, "patch_set": 2, "id": "1fa4df85_03223c02", "line": 757, "range": {"start_line": 757, "start_character": 35, "end_line": 757, "end_character": 40}, "updated": "2020-03-17 00:14:14.000000000", "message": "These the right docs ?", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "b857fa579d9421fb5f0bcde00f705e1068b9741a", "unresolved": false, "patch_set": 2, "id": "df33271e_80ed9db8", "line": 757, "range": {"start_line": 757, "start_character": 35, "end_line": 757, "end_character": 40}, "in_reply_to": "1fa4df85_03223c02", "updated": "2020-04-01 23:09:59.000000000", "message": "I think so, but I'll check.", "commit_id": "9eec248aa10b759462b0be6648dcf5ee52f59520"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 3, "id": "df33271e_dab025e0", "line": 59, "range": {"start_line": 59, "start_character": 23, "end_line": 59, "end_character": 31}, "updated": "2020-04-02 13:40:18.000000000", "message": "I think this should be \"all\".", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_76012c6a", "line": 59, "range": {"start_line": 59, "start_character": 23, "end_line": 59, "end_character": 31}, "in_reply_to": "df33271e_dab025e0", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "29be6d22fb7c9d3f76c1e16cd977f0a7b5ca2f5d", "unresolved": false, "patch_set": 3, "id": "df33271e_648cdb35", "line": 94, "range": {"start_line": 94, "start_character": 5, "end_line": 94, "end_character": 34}, "updated": "2020-04-02 15:25:14.000000000", "message": "Will this direct fpga update via sysinv API also be possible in a non-distributed-cloud environment?", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_b6f6148e", "line": 94, "range": {"start_line": 94, "start_character": 5, "end_line": 94, "end_character": 34}, "in_reply_to": "df33271e_648cdb35", "updated": "2020-04-02 22:47:39.000000000", "message": "Yes, see first paragraph in this section.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "29be6d22fb7c9d3f76c1e16cd977f0a7b5ca2f5d", "unresolved": false, "patch_set": 3, "id": "df33271e_24581354", "line": 141, "range": {"start_line": 141, "start_character": 41, "end_line": 141, "end_character": 57}, "updated": "2020-04-02 15:25:14.000000000", "message": "Upgrades consideration for fpga agent to consider messaging to a release N controller that does not handle the N+1 fpga agent messages.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_f9008d04", "line": 141, "range": {"start_line": 141, "start_character": 41, "end_line": 141, "end_character": 57}, "in_reply_to": "df33271e_24581354", "updated": "2020-04-02 22:47:39.000000000", "message": "As per discussion this shouldn't be an issue under normal circumstances.  Only on the \"abort upgrade\" scenario with AIO-DX could we end up with the active controller running load N while the other controller is running load N+1.  In that case the FPGA agent would experience RPC timeouts trying to talk to the controller, so in-progress operations would fail to register completion.  Once we swact back to the upgraded controller things should get sorted out.\n\nI've added some notes to this effect later in this section.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 3, "id": "df33271e_9adfbd0b", "line": 156, "updated": "2020-04-02 13:40:18.000000000", "message": "Overlength line.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_34a68aac", "line": 156, "range": {"start_line": 156, "start_character": 1, "end_line": 156, "end_character": 156}, "updated": "2020-04-02 14:12:43.000000000", "message": "long line\n\nSo the upgrade in this case is automatic at the sysinv-fpga-agent level ?\nWhat resets the hardware on completion ?\n\nThat alarm will block upgrade orchestration strategy create in the VIM for that host/group.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_fc8a3b61", "line": 156, "range": {"start_line": 156, "start_character": 1, "end_line": 156, "end_character": 156}, "in_reply_to": "df33271e_34a68aac", "updated": "2020-04-02 22:47:39.000000000", "message": "Based on John's earlier comment, it'll actually be automatic at the sysinv-conductor level, and sysinv-conductor will trigger the hardware lock/unlock on completion.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_3cee6321", "line": 156, "in_reply_to": "df33271e_9adfbd0b", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "6229ea21b33591e93df11d64fb780cd84f83667f", "unresolved": false, "patch_set": 3, "id": "df33271e_4174129d", "line": 156, "range": {"start_line": 156, "start_character": 1, "end_line": 156, "end_character": 156}, "in_reply_to": "df33271e_fc8a3b61", "updated": "2020-04-03 12:34:51.000000000", "message": "just to clarify, the host-lock/unlock administrative commands are externally driven from sysinv's perspective i.e. either from admin or external orchestrator such as VIM.  i.e. sysinv does not autonomously lock/unlock.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_4ed7364c", "line": 400, "range": {"start_line": 400, "start_character": 6, "end_line": 400, "end_character": 8}, "updated": "2020-04-02 14:12:43.000000000", "message": "What is the '--' here like this for ?", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_5c39a7a1", "line": 400, "range": {"start_line": 400, "start_character": 6, "end_line": 400, "end_character": 8}, "in_reply_to": "df33271e_4ed7364c", "updated": "2020-04-02 22:47:39.000000000", "message": "replaced with semicolon", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_8e42de0d", "line": 405, "range": {"start_line": 404, "start_character": 0, "end_line": 405, "end_character": 18}, "updated": "2020-04-02 14:12:43.000000000", "message": "This is good to know but should not be part of the spec.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_9c3faf85", "line": 405, "range": {"start_line": 404, "start_character": 0, "end_line": 405, "end_character": 18}, "in_reply_to": "df33271e_8e42de0d", "updated": "2020-04-02 22:47:39.000000000", "message": "I think it's useful to call it out as \"would be nice\" but not strictly necessary.  Think of it as a stretch goal for the spec. :)", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_4ec1f653", "line": 522, "range": {"start_line": 522, "start_character": 0, "end_line": 522, "end_character": 70}, "updated": "2020-04-02 14:12:43.000000000", "message": "Good to know but should not be in the spec.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 3, "id": "df33271e_1a58cd85", "line": 605, "updated": "2020-04-02 13:40:18.000000000", "message": "Overlength line", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_fc4d1b3b", "line": 605, "in_reply_to": "df33271e_1a58cd85", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_eedc4ae5", "line": 660, "range": {"start_line": 658, "start_character": 1, "end_line": 660, "end_character": 28}, "updated": "2020-04-02 14:12:43.000000000", "message": "The existing sw_updates table will be used just like it is used for both patching and sw upgrade. \n\nThere is no need to introduce a new table. The existing table is generic with upgrade specific info stored as a long json key:value pair string rather than individual db fields.\n\nRecommend removing this line altogether.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_3c65c3b5", "line": 660, "range": {"start_line": 658, "start_character": 1, "end_line": 660, "end_character": 28}, "in_reply_to": "df33271e_eedc4ae5", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "29be6d22fb7c9d3f76c1e16cd977f0a7b5ca2f5d", "unresolved": false, "patch_set": 3, "id": "df33271e_c43b2735", "line": 665, "updated": "2020-04-02 15:25:14.000000000", "message": "Upgrades consideration for the modified or new tables is required in order to support platform upgrades i.e. the database migration scripts must be able to create the tables on an upgrade, and populate with reasonable default data if required.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_7c362b53", "line": 665, "in_reply_to": "df33271e_c43b2735", "updated": "2020-04-02 22:47:39.000000000", "message": "Agreed...I think that's a basic implementation assumption though.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_2eaab217", "line": 713, "range": {"start_line": 712, "start_character": 0, "end_line": 713, "end_character": 57}, "updated": "2020-04-02 14:12:43.000000000", "message": "Since we are only supporting fw upgrade of unlocked hosts there is no need to block unlock and reboot as the existing code prevents rebooting an unlocked host and unlock an already unlocked host.", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_5ca367b2", "line": 713, "range": {"start_line": 712, "start_character": 0, "end_line": 713, "end_character": 57}, "in_reply_to": "df33271e_2eaab217", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1e42eb5c958c76fa26d0a2d0f32feb23b2d276c6", "unresolved": false, "patch_set": 3, "id": "df33271e_f9eb8474", "line": 779, "range": {"start_line": 779, "start_character": 78, "end_line": 779, "end_character": 101}, "updated": "2020-04-02 14:12:43.000000000", "message": "Line length", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "671e60a077e3f3f0821a4cd821900713fa5e273f", "unresolved": false, "patch_set": 3, "id": "df33271e_9ac97d27", "line": 779, "updated": "2020-04-02 13:40:18.000000000", "message": "Overlength line", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9648d10862df83dc4611160e6f3282f77dbc1a12", "unresolved": false, "patch_set": 3, "id": "df33271e_dc4017a8", "line": 779, "range": {"start_line": 779, "start_character": 78, "end_line": 779, "end_character": 101}, "in_reply_to": "df33271e_f9eb8474", "updated": "2020-04-02 22:47:39.000000000", "message": "Done", "commit_id": "45c41f51dcc6cb26d7962be308d8e5cb54e74f0d"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "7d7917e015b4f912f9e62ff5a9a439d33b9f63e7", "unresolved": false, "patch_set": 4, "id": "df33271e_4066c32b", "line": 189, "range": {"start_line": 189, "start_character": 20, "end_line": 189, "end_character": 26}, "updated": "2020-04-15 20:44:41.000000000", "message": "should this be \"upload\" rather than create? I know it might be a nit, but we have system-application-upload", "commit_id": "3ca9d129cf4d32e478505c050939fc379ce9399a"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "7d7917e015b4f912f9e62ff5a9a439d33b9f63e7", "unresolved": false, "patch_set": 6, "id": "df33271e_bdd4ad48", "line": 300, "range": {"start_line": 300, "start_character": 52, "end_line": 300, "end_character": 54}, "updated": "2020-04-15 20:44:41.000000000", "message": "White space nit", "commit_id": "461a39760b13a1a8784763e67883c9858cb4fd8e"}]}}, "openstack%2Fhorizon~master~I80736b108f5ae9a36c0e756bf386468879be3293": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 06:11:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-18 21:16:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-04-18 10:03:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28032, "name": "Oleksiy Petrenko", "email": "opetrenko@mirantis.com", "username": "enacero"}], "comments": {}}, "openstack%2Fnova~stable%2Fstein~I617fd59de327de05a198f12b75a381f21945afb0": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-20 12:06:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:05:47.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fstein~Ic1c3d35749fbdc7f5b6f6ec1e16b8fcf37c10de8": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-18 15:42:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 2, "date": "2020-04-18 16:05:31.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fqinling~master~I0425e8d85decf9106a533639bba1f5a4a7dc5b21": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-18 22:31:26.000000000", "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~I900f74d482fc87da5b1b5ec9db2ad5aefcfcfe7a": {"owner_id": 23598, "owner_name": "Zhong Luyao", "owner_email": "luyao.zhong@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-25 09:51:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 16:04:43.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "6ec23cf4aa328cef3d905d14b820a895896ba001", "unresolved": false, "patch_set": 2, "id": "df33271e_d93bbc99", "line": 19, "range": {"start_line": 19, "start_character": 30, "end_line": 19, "end_character": 70}, "updated": "2020-03-25 09:51:59.000000000", "message": "responsible for conflict in live_migrate.py", "commit_id": "b08d59ac7b21909046faee6c8f8fd50866befc76"}, {"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "6ec23cf4aa328cef3d905d14b820a895896ba001", "unresolved": false, "patch_set": 2, "id": "df33271e_1946c424", "line": 20, "range": {"start_line": 20, "start_character": 8, "end_line": 20, "end_character": 48}, "updated": "2020-03-25 09:51:59.000000000", "message": "test_live_migrate.py", "commit_id": "b08d59ac7b21909046faee6c8f8fd50866befc76"}]}}, "openstack%2Fdevstack~master~Icfc717b4932be050a169fc00dae720d29a6497f7": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 2, "date": "2020-03-19 00:50:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-03 16:04:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}], "comments": {"lib/tempest": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "d60f09e6513a065cce60f8ce6131ff2ecba8f2f0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_69ecf3bb", "line": 574, "range": {"start_line": 572, "start_character": 0, "end_line": 574, "end_character": 77}, "updated": "2020-01-01 12:34:09.000000000", "message": "and QEMU for the gate..", "commit_id": "a5f20692e68aa19c1c3f7177e22ef1296cd635aa"}]}}, "openstack%2Fpython-qinlingclient~master~I77ea9a745ae998a6670b4f75a8dcdb22f3b6af69": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 2, "date": "2020-04-18 22:30:58.000000000", "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I48c651113533d3ee25d1ae32eac1778264837c99": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2020-04-13 23:35:22.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I914d9ac1f0d422fcf81e55289f599061863bf371": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I7087ccb44935cd4cce863e58322b1b111afe0191": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}], "comments": {"config/samples/dns_v1_designate.yaml": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "224eb5794c0747ec29b49489d789cf6a8eee61c2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_2360dace", "line": 37, "range": {"start_line": 1, "start_character": 0, "end_line": 37, "end_character": 0}, "updated": "2020-04-13 18:30:06.000000000", "message": "please remove commented things here as this goes in the docs\n\ni say drop the first secret and keep the second one, and add some examples of values instead of xxx :)", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}], "controllers/designate_controller.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "224eb5794c0747ec29b49489d789cf6a8eee61c2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c37db66f", "line": 76, "range": {"start_line": 63, "start_character": 0, "end_line": 76, "end_character": 2}, "updated": "2020-04-13 18:30:06.000000000", "message": "can you refactor the code to lookup the secret inside openstackutils.DesignateClient for example so that we don't have to retrieve the secret other places?", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}, {"author": {"_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}, "change_message_id": "a3c930b86190b54b016eecd8ee033577de6e412d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_98667851", "line": 76, "range": {"start_line": 63, "start_character": 0, "end_line": 76, "end_character": 2}, "in_reply_to": "3f4c43b2_c37db66f", "updated": "2020-04-13 21:43:29.000000000", "message": "well, gotchat!\nBut refactor the code to the openstackutils package is not good, I think.\nAnyway, I made a function in the controller directly. :)\nNot sure the best place.", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}], "controllers/zone_controller.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "224eb5794c0747ec29b49489d789cf6a8eee61c2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_03979e92", "line": 82, "range": {"start_line": 69, "start_character": 0, "end_line": 82, "end_character": 2}, "updated": "2020-04-13 18:30:06.000000000", "message": "and once you refactor, we don't need to repeat this here", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}], "utils/openstackutils/designate.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "224eb5794c0747ec29b49489d789cf6a8eee61c2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_a3450a1a", "line": 225, "range": {"start_line": 222, "start_character": 0, "end_line": 225, "end_character": 2}, "updated": "2020-04-13 18:30:06.000000000", "message": "an idea...\n\nwhy don't you unmarshal to AuthOptions directly?\n\nhttps://github.com/gophercloud/gophercloud/blob/master/auth_options.go#L30-L96", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}, {"author": {"_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}, "change_message_id": "a3c930b86190b54b016eecd8ee033577de6e412d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_58735016", "line": 225, "range": {"start_line": 222, "start_character": 0, "end_line": 225, "end_character": 2}, "in_reply_to": "3f4c43b2_a3450a1a", "updated": "2020-04-13 21:43:29.000000000", "message": "some fields are provided by cloud provider so ignored using \"-\" struct tag.", "commit_id": "df99919ab01f1b607a7adb9dfc839b77f5076f8c"}]}}, "vexxhost%2Fopenstack-operator~master~Idc427ad344cb11445ad4c926dee0ce123872d81f": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I49115d87909733eacea57bdfff617e0980290bdf": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fheat-translator~master~I7a7b0090139a72a06ec98d22e27e015307c3aec3": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 22:06:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16511, "name": "Bob Haddleton", "email": "bob.haddleton@nokia.com", "username": "bobh"}], "comments": {"translator/osc/v1/tests/fakes.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d9abeb9991b775b2d17640fef61bd76e17f0e053", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_4013f55c", "line": 18, "updated": "2020-04-18 17:36:42.000000000", "message": "pep8: E303 too many blank lines (3)", "commit_id": "d3be23bf3c4d836e914234ff91790ad253c5e5b7"}]}}, "vexxhost%2Fopenstack-operator~master~If85f1ebd07c01d8ab6a9c9bd904ac099af2f491a": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-14 18:15:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}], "comments": {"controllers/rabbitmq_controller.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "a2812df14fcf48da0d93ef5f9365bc48f77a2923", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_350594c3", "line": 102, "range": {"start_line": 100, "start_character": 0, "end_line": 102, "end_character": 3}, "updated": "2020-04-14 18:15:56.000000000", "message": "you re-introduced the bug again...", "commit_id": "ff8b85db5c6ef6f198ba040b0a595df02b90bd48"}]}}, "vexxhost%2Fopenstack-operator~master~I5482f27b418b5f101066b3a9d247fc9b534e1312": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-14 19:13:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}], "comments": {"controllers/rabbitmq_controller.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "79ab4b3b283613b2b7d2c7433c95cb1159604978", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_58bb37e1", "line": 222, "range": {"start_line": 215, "start_character": 0, "end_line": 222, "end_character": 3}, "updated": "2020-04-14 19:13:56.000000000", "message": "you reintroduced a bug here", "commit_id": "991403cfb778287716b266078868945e1edcec4a"}]}}, "vexxhost%2Fopenstack-operator~master~Ib711689b4bbd4e5d7f468304ea01e336544de3f5": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-15 21:50:02.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}], "comments": {"controllers/mcrouter_controller.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "cb8efb478f35738d5febecd3665791504ff8e393", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_54f48986", "line": 256, "range": {"start_line": 256, "start_character": 2, "end_line": 256, "end_character": 77}, "updated": "2020-04-15 21:50:02.000000000", "message": "why isn't the code doing Build(mcrouter, r.Scheme) ?", "commit_id": "9c5ee55d3d651bb77a322d5e1d3847fed07721db"}]}}, "vexxhost%2Fopenstack-operator~master~I5141cc1d6a453ecce4bef34583baba86ec18982b": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "vexxhost%2Fopenstack-operator~master~I9d5d4b72eaac01e9d8ad1d5e0d6f05f5f407b27e": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 21:01:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}], "comments": {}}, "openstack%2Fpython-vitrageclient~master~I564357caf5982a0db9be01c77e9e8c42bee932d6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 21:31:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}], "comments": {}}, "openstack%2Fceilometer-powervm~master~I95b6e3f46d9f641b9d12163f351c61de967bb7b4": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fec2-api~master~Iadefcc287b8557723a9bebc816080cf65636686b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 17:15:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}], "comments": {}}, "openstack%2Fopenstack-zuul-jobs~master~Ib44e719ca341e1a9f8a0080f92032d752519f3a4": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-18 19:16:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "date": "2020-04-17 15:47:59.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"zuul.d/project-templates.yaml": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "cd91a3c3c535db034cb00f7fdeb8c482e7936c8b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_ff1474a2", "line": 1145, "updated": "2020-04-17 09:43:51.000000000", "message": "I don't think we should drop the above as long as the -nonvoting variant is being used. People expect to be able to just drop the suffix to make a job voting.", "commit_id": "03dd16d2ccc074eac6192050b6e0fa5756239db9"}]}}, "opendev%2Fsystem-config~master~I99f7f284088f0d241a8490d01cccdf782bdd45d2": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 18:05:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "opendev%2Fsystem-config~master~I326cc99dc239e11db418bf601bb1c0bc3cda80a0": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fopenstack-helm~master~I1fcd5b49cb2af4c76ed32b332f83ca8fa783a3c6": {"owner_id": 18250, "owner_name": "Roy Tang", "owner_email": "roy.s.tang@att.com", "labels": [{"value": 1, "date": "2020-04-18 16:01:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29132, "name": "Krishna Venkata", "email": "kvenkata986@gmail.com", "username": "kvenkata986"}, {"value": 2, "date": "2020-04-18 16:41:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18250, "name": "Roy Tang", "email": "roy.s.tang@att.com", "username": "rt7380"}, {"value": 1, "date": "2020-04-18 16:11:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22214, "name": "Sushil", "email": "sushil.shiva@outlook.com", "username": "ssushilt"}, {"value": 0, "_account_id": 18256, "name": "Hemachandra Reddy", "email": "hemachandra.reddy@att.com", "username": "hr858f"}, {"value": 1, "date": "2020-04-18 15:17:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16881, "name": "Munish", "email": "mm6021@att.com", "username": "munish.mehan@att.com"}, {"value": 2, "date": "2020-04-18 16:19:26.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "x%2Fpackstack~master~I8eda9cf6a71f8b10e939d9addacd93783a5425bb": {"owner_id": 13294, "owner_name": "Javier Pe\u00f1a", "owner_email": "jpena@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16312, "name": "Alfredo Moralejo", "email": "amoralej@redhat.com", "username": "amoralej"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-04-18 16:41:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9061, "name": "David Moreau Simard", "email": "moi@dmsimard.com", "username": "dmsimard"}], "comments": {}}, "openstack%2Fnova-powervm~master~Ia263b4d74d1340535230ae5d7bc212fab0173b9d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fdesignate~master~I49c16f266cfacce368876d0a144907738da16eec": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fceilometer-powervm~master~Iae8eb826e4cf91303fabe757ba26288c91352140": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fcastellan~master~I2923cbb2be271826a1009266fe89a9bec1c91597": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fblazar~master~Icf681dd29c34fe3b82c2b6fdac507a8138392f21": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fbifrost~master~Iaf998ab030c970cd49f1dfc2827ab7ee9dcaa5a1": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fceilometermiddleware~master~Ic1e2455e6a7cd068d6c410a73823e2e0b76a062f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "opendev%2Fsandbox~master~I73598a91bf69275d0620ab53c9a86c3d8709e02b": {"owner_id": 31867, "owner_name": "alitoghroli", "owner_email": "alitoghroliam@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}], "comments": {}}, "openstack%2Fnova-specs~master~Iff32702fb4b372fac2a37c19d685e89928d7cb4d": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 2, "date": "2020-04-14 07:58:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 2, "date": "2020-04-18 16:29:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}], "comments": {}}, "openstack%2Fnova~master~I680f12a77793c90dcd62c90f490199810dbc9bcd": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-monascaclient~stable%2Fussuri~I5f8067ed3aaf9641bd09b3639b7e873b3dbcc6d9": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 15:22:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}], "comments": {}}, "openstack%2Fpython-monascaclient~master~I8cd7e6034509da7ea4cba4092e373f10eb774160": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 15:23:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}], "comments": {}}, "openstack%2Fpython-monascaclient~stable%2Fussuri~I35ddd5316d1f80eaed745d9d8f2693bd4969e068": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 15:22:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}], "comments": {}}, "openstack%2Fpython-monascaclient~master~I9ae8645ced6ce6ef8bc2cdb67731160a5b5cc576": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 15:21:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~Ic00c80fb89d08c19d97dad9de4061cac892ad7fb": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 01:50:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20223, "name": "zhaolihui", "email": "zhaolh@awcloud.com", "username": "zhaolihui"}, {"value": 2, "date": "2020-04-18 13:04:32.000000000", "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 1, "date": "2020-04-16 11:52:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 2, "date": "2020-04-16 11:52:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 11:52:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Freleases~master~Ibf0d6a7450a5c8024c2a00a92c2722072f028e9a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-18 14:26:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-18 14:59:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fmanila~master~Ib76c8df7a435ba72cd0cffd7081d455fff02be0f": {"owner_id": 29539, "owner_name": "zhangqing", "owner_email": "zhangqing_yewu@cmss.chinamobile.com", "labels": [{"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 15:33:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-18 13:19:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-04-16 15:32:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 29539, "name": "zhangqing", "email": "zhangqing_yewu@cmss.chinamobile.com", "username": "zhangqing"}], "comments": {}}, "openstack%2Fcharm-mysql-innodb-cluster~master~Ie2b2ad2856cbe1d830f1b7e674a2fb867d81de12": {"owner_id": 20805, "owner_name": "David Ames", "owner_email": "david@davam.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 22:36:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 0, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 2, "date": "2020-04-18 13:05:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Ftempest~master~I0680fe4a6590aa3c4887d338a02b04fabfcdbb11": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-12 10:16:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-04-12 10:16:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-12 10:16:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 1, "date": "2020-04-13 01:19:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-04-12 10:16:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}], "comments": {}}, "openstack%2Fnova~master~Ie74fe87b1bb8ca398ddefd98140d6e0ffa232064": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11347, "name": "Rui Zang", "email": "rui.zang@yandex.com", "username": "rzang"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~Ib0cbbff69585c1649b872d99709c1d7afd2ad846": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/compute/api.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bf21d47291848455b42048ca568f595bda07c804", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_45676826", "line": 5277, "updated": "2019-10-30 20:35:20.000000000", "message": "This looks OK on the surface but I wonder about the behavior in a case where all results were cell failures. Before this patch, I think we'd bubble that error up from here but with this, we would raise ComputeHostNotFound if all cells returned failures and at least one had an exception [other than ComputeHostNotFound] example: a DBError.\n\nSo I'm wondering if we should have some logic after this that goes through the results if all were failures and raises the first encountered exception that is not ComputeHostNotFound else raise CellTimeout? Do we normally expose CellTimeout? (later) Looks like we do raise it out of get_minimum_version_all_cells in nova/objects/service.py but I'm not sure whether we handle that at the API layer. It doesn't look like it from a quick look at nova/api/openstack/compute/server_groups.py where get_minimum_version_all_cells is called.\n\nI'm thinking of a case where ComputeHostNotFound misleads someone when the actual problem was that all cells timed out.", "commit_id": "74e9b6778fa60ec37598a93f88edf1c48f9a1fef"}]}}, "openstack%2Fnova~master~I7649d9b1d8deab207961b98028f6bccdb0a9af64": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/compute/manager.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "42410e61cd4d3c0f45d3e379016d8cb0803dccad", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5c3aace5", "line": 6465, "updated": "2019-11-05 02:38:15.000000000", "message": "I likely need lyarwood and mdbooth's help here.", "commit_id": "3c8d5f1775e7ea5a131c12b12dae9ef350fb577c"}]}}, "openstack%2Fpuppet-openstack-integration~master~I7a819f718be43dfc5df8943363467328c1712c12": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-14 13:24:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fnova~master~I0660fbd6fbc0b0a8bb4198d8870d93725eb1e5d9": {"owner_id": 4690, "owner_name": "melanie witt", "owner_email": "melwittt@gmail.com", "labels": [{"value": 2, "date": "2020-04-13 00:33:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-04-17 14:38:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 1, "date": "2020-04-18 07:28:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/functional/test_policy.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a37fa4d38795456a136e0eb609c7c623cc1dc89f", "unresolved": false, "patch_set": 1, "id": "df33271e_89937da3", "line": 129, "range": {"start_line": 127, "start_character": 0, "end_line": 129, "end_character": 28}, "updated": "2020-03-26 23:47:48.000000000", "message": "+1.\n NOTE to reviewer- overwrite=False flag will keep host_status policy as admin only which is default so that we can verify host_status field presence in the response.", "commit_id": "02d79c592164e9e365336659c32bae7e504b0185"}]}}, "openstack%2Fpython-monascaclient~master~Icc18bffa04806235583459721f8cb8e36a247f05": {"owner_id": 17669, "owner_name": "Doug Szumski", "owner_email": "doug@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-14 10:12:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 1, "date": "2020-01-08 00:19:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 10311, "name": "Joseph Davis", "email": "joseph.davis@suse.com", "username": "joadavis"}], "comments": {}}, "openstack%2Fpython-monascaclient~master~I0256e9a8c3dacaf8bc6066b00daefaa993460a2d": {"owner_id": 17669, "owner_name": "Doug Szumski", "owner_email": "doug@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 12:40:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 0, "_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}, {"value": 0, "_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}], "comments": {"monascaclient/v2_0/shell.py": [{"author": {"_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, "change_message_id": "ec6b4e4c6fbf7e7bd650d84968977c4562e0b6b2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4602f23f", "line": 564, "updated": "2019-12-12 09:54:11.000000000", "message": "Please update the help message.", "commit_id": "613eecd78a0e358dac79f9a95a6c052a5530a482"}, {"author": {"_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}, "change_message_id": "10316fc44ccf23847b7c7e0cd1f28bcc34b3d1fb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8c5ae47f", "line": 564, "in_reply_to": "3fa7e38b_4602f23f", "updated": "2019-12-19 10:11:28.000000000", "message": "Oops, thanks for spotting that.", "commit_id": "613eecd78a0e358dac79f9a95a6c052a5530a482"}, {"author": {"_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, "change_message_id": "ec6b4e4c6fbf7e7bd650d84968977c4562e0b6b2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_06f87a47", "line": 690, "updated": "2019-12-12 09:54:11.000000000", "message": "Please update the help message.", "commit_id": "613eecd78a0e358dac79f9a95a6c052a5530a482"}, {"author": {"_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, "change_message_id": "ec6b4e4c6fbf7e7bd650d84968977c4562e0b6b2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_46b0b28b", "line": 717, "updated": "2019-12-12 09:54:11.000000000", "message": "Please update the help message.", "commit_id": "613eecd78a0e358dac79f9a95a6c052a5530a482"}]}}, "openstack%2Fheat~master~I20da1309e4d65707130fe517f013d3ed625bf94c": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-16 14:34:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I8b4caad1501dd895e12cb1b4f45e3c71f0b5ff62": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-04-17 18:55:40.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "5dd082022f9ef227f4c95daf7f26ede11fb1898f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_439218a0", "line": 12, "updated": "2020-04-15 15:58:51.000000000", "message": "Technically this isn't correct. As long as the backing file (created by dd) is created in a host prep task, the puppet-tripleo code doesn't need to know the size of the file, and the puppet parameter won't need to be overridden by hiera.", "commit_id": "ba93ddb38ccef559d0a0fe8911b277b2390de27c"}, {"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "01ee67895a411a1a1000a4b96f5f3911ca9d53d4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_ceb64ffb", "line": 12, "in_reply_to": "3f4c43b2_439218a0", "updated": "2020-04-15 16:52:37.000000000", "message": "Do you mean about this Depends-on ?\n\nI think I get your point, but I would prefer to keep this depends on because it's still confusing to have puppet module get inconsistent about loaded class.", "commit_id": "ba93ddb38ccef559d0a0fe8911b277b2390de27c"}], "deployment/cinder/cinder-volume-container-puppet.yaml": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "31ca4b334d1404417d263e003badaf4f157aeaab", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e36404e8", "line": 98, "range": {"start_line": 95, "start_character": 0, "end_line": 98, "end_character": 16}, "updated": "2020-04-15 15:56:34.000000000", "message": "These lines be deleted, but I also took care of this in my own patch, https://review.opendev.org/720232", "commit_id": "ba93ddb38ccef559d0a0fe8911b277b2390de27c"}, {"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "01ee67895a411a1a1000a4b96f5f3911ca9d53d4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8e0567c5", "line": 98, "range": {"start_line": 95, "start_character": 0, "end_line": 98, "end_character": 16}, "in_reply_to": "3f4c43b2_e36404e8", "updated": "2020-04-15 16:52:37.000000000", "message": "Done", "commit_id": "ba93ddb38ccef559d0a0fe8911b277b2390de27c"}]}}, "openstack%2Fmonasca-api~master~Ife3d2c9795a9dc406c2927cc9a077dda01c183c6": {"owner_id": 28062, "owner_name": "Martin Chacon Piza", "owner_email": "martin@chaconpiza.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26141, "name": "Adrian Czarnecki", "email": "adrian.czarnecki@ts.fujitsu.com", "username": "czarneckia"}, {"value": 0, "_account_id": 28062, "name": "Martin Chacon Piza", "email": "martin@chaconpiza.com", "username": "martinchacon"}, {"value": 2, "date": "2020-04-18 10:25:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~Ia9860107c35e543a05775596076873ea950b7400": {"owner_id": 7130, "owner_name": "David Hill", "owner_email": "davidchill@hotmail.com", "labels": [{"value": 2, "date": "2020-04-18 07:09:10.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7130, "name": "David Hill", "email": "davidchill@hotmail.com", "username": "dhill"}, {"value": 2, "date": "2020-04-17 18:52:01.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcharm-ceph-rbd-mirror~master~I334836712f92d0d4862cb046a7bb3607c57d78ec": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2019-08-26 19:59:00.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari-monitors~master~Ie11dab09e568c8546fd7d009afad5b518acecd16": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-dynamic-routing~master~Ib13ff4eed7832fcb2a6f235850ef526bcf30074e": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}], "comments": {}}, "openstack%2Fcharm-masakari~master~I42f472b4aa74484026a0287e95a04ba2c316a07c": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari~master~Iada4a3b40e628bb232286b846c7313d7f4d1bc22": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-09-03 16:15:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "x%2Fcharm-ovn-chassis~stable%2F19.10~Ia27fd7f2a823cac780d72e08f8c3fc54c7f9401c": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcharm-neutron-dynamic-routing~master~I5c802d22f70c8ce1c1e33e87dc6b217c67b07c87": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-nova-cell-controller~master~I514c802c216bcfc6284efd3fa245fe47936a1266": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-api~master~Iba69046afee0b156a555d4cbe2f989a198666b31": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "x%2Fcharm-ovn-dedicated-chassis~stable%2F19.10~Ib133c805151cf66c5316df38c33ea6d20a38fa2b": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-barbican-vault~stable%2F19.10~I39d761dfbe1500f06abd617dd97eced671971b7d": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari-monitors~master~I563fef86b53d2228497fd8952bdf3a7b8ee3e570": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari~master~Iabeacb68d0fe3447165e7306f3c23c5a9104bc18": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 2, "date": "2020-03-25 10:40:54.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 2, "date": "2020-03-16 09:07:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}], "comments": {}}, "openstack%2Fcharm-masakari-monitors~master~Iddde515ffa7a1626e098bcc98247726e4dbc2fe6": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I4f3d38ea70d48589be3e1b7f5eea96c358b44560": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 2, "date": "2020-04-14 11:29:49.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-13 06:00:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcharm-ceph-fs~master~I564726e7dab98cd79b38808cdd40ab6462ceac52": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-octavia-dashboard~master~Ia1b62fd57b84df40e3779e5dc05bac207c641598": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari~stable%2F19.07~I1b04065ca9767c3d5f57558e2683949550e2aad7": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari-monitors~stable%2F19.07~Ida8723d83cae5e9dc6570dd971fccda75071ac10": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-octavia-diskimage-retrofit~master~I02894fc4d07f32961491004a0550bc2d54c188ca": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-masakari-monitors~master~Id81b699c544cc572c511e1a233e24048d201d420": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-07-17 19:51:11.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-octavia-diskimage-retrofit~master~I0962229bf65c46696421ec7f9db9e98c36108a69": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-ceph-osd~master~If185d6d004865793f42d2ad9ae6bf0da55e511df": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-ceph-radosgw~master~I33cbe9b36f10cfde340b79107aebf8beda6ed4e9": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-openstack-dashboard~master~I076c9eb74ef1e73aea99301f6db4ab041c9cd789": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-gnocchi~master~If366098f3eea95cec9b530c21a121b4a01321bc2": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-openvswitch~master~Ib11914a098977c861b8b41f23f40966ed0ef543d": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fwatcher~master~I7bf782ac1aa2ff404bef180d9ff37ffcfb29001a": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:26:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fwatcher~master~Id952d00e689c1077d741c742175be06778af6ec1": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:25:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fwatcher~master~I27b341cb8f48313bd2aad6b7996cd9cbbad94217": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:26:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fwatcher~master~I3026b5d3eb20f71d4218873646c69d8328db054d": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:26:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fwatcher~master~I92535c69f7055a7431ff14d3b9722149950e7f91": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:25:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fwatcher~master~I2738db925d650af5921b77d0315ec0a8d4ee985b": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-18 02:25:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fpuppet-cinder~master~Idaa1c767e8cab645567b920dc9d377abf509ec54": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-16 08:22:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 18:56:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcloudkitty~master~I052944e5881bb86b5a90c5e918713ea6395ed934": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcloudkitty~master~Ia429de5d9e4b7d3ad46b00d539b3dd194e7acc8f": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcloudkitty~master~Icaf25e3cb3fc5fde9be6be5790ba5b6889acffa9": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcloudkitty~master~I43c3c01d5e95d74098115cf402123b7066036366": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I20445402dd7397a817566f8fa9ec244a41982351": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-04-14 10:50:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I35db3bd8270f662768304fbe0147c3b04cf23574": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-08 14:22:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-09 20:53:02.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 1926, "name": "Derek Higgins", "email": "derekh@redhat.com", "username": "derekh"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~I821e09c36ef9e2ba652f871eda3dd780822dd895": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-13 13:57:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-13 15:28:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-13 02:50:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-novaclient~stable%2Fussuri~I0e3bdf426c1716fd996e64e386136440d30dd0ce": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-18 05:23:45.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 2, "date": "2020-04-18 05:23:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-18 05:23:45.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 2, "date": "2020-04-18 05:23:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-18 05:23:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I0a7467909b94e064b6741e639d80c97dea7bef52": {"owner_id": 10379, "owner_name": "Rajini Karthik", "owner_email": "rrajini@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 1, "date": "2020-04-01 19:14:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, {"value": 2, "date": "2020-04-02 23:49:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-04-09 20:46:39.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}], "comments": {}}, "openstack%2Fpython-muranoclient~stable%2Fussuri~I975a5b354ab6644181333d25eafb7341a95240bb": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-14 11:09:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-13 10:39:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-muranoclient~stable%2Fussuri~I4f66a0dc229aa8389c6dbf2d8c1253ff079bd33c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-14 11:15:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-04-11 20:05:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-common~master~Ic78df6a98b7f0c796ec9e112f572c9b50cba396b": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:09:26.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-17 17:12:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Fkuryr-kubernetes~master~Id72273247e382935f7c70afaffc475c90ed4b3b7": {"owner_id": 31835, "owner_name": "xujingsong", "owner_email": "xjsisnice@gmail.com", "labels": [{"value": 1, "date": "2020-04-15 11:02:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24604, "name": "Danil Golov", "email": "d.golov@samsung.com", "username": "d.golov"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 09:11:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 31835, "name": "xujingsong", "email": "xjsisnice@gmail.com", "username": "xieyanker"}, {"value": 2, "date": "2020-04-16 11:37:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "openstack%2Ftripleo-ci~master~I4c3bf7f5be524d18cff7de531752373578872fd3": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29775, "name": "Sandeep Yadav", "email": "sandyada@redhat.com", "username": "sandeepyadav93"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-04-17 16:38:44.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 1, "date": "2020-04-17 16:38:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~I7cbc462b2ff99b7b0d3ff58fda1b52ccf85fc86d": {"owner_id": 19234, "owner_name": "Alexey Stupnikov", "owner_email": "aleksey.stupnikov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 12:28:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 2, "date": "2020-04-16 10:37:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-17 18:53:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I4429ed2d45661ea82ae38a7050abb2b229953c9c": {"owner_id": 10379, "owner_name": "Rajini Karthik", "owner_email": "rrajini@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 1, "date": "2020-04-14 19:53:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, {"value": 2, "date": "2020-04-14 14:06:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-04-16 19:41:04.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 1, "date": "2020-04-16 15:20:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "7917a8dff54a9c01db71044574751a5aa56fe272", "unresolved": false, "patch_set": 6, "id": "df33271e_495d9945", "line": 9, "range": {"start_line": 9, "start_character": 43, "end_line": 9, "end_character": 44}, "updated": "2020-04-01 07:35:04.000000000", "message": "Should be N uppercase", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "96641db7ef499bbc5cc7ee953402ee20c3b96fae", "unresolved": false, "patch_set": 6, "id": "df33271e_f50a7bcf", "line": 9, "range": {"start_line": 9, "start_character": 43, "end_line": 9, "end_character": 44}, "in_reply_to": "df33271e_495d9945", "updated": "2020-04-01 12:52:25.000000000", "message": "Grammatically, perhaps, but lowercase is quite prevalent in a lot of the code and commit messages.", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "120ad61b26b04163d080edc6834daa40544b28f5", "unresolved": false, "patch_set": 6, "id": "df33271e_81af6d28", "line": 9, "range": {"start_line": 9, "start_character": 43, "end_line": 9, "end_character": 44}, "in_reply_to": "df33271e_55836704", "updated": "2020-04-01 15:36:37.000000000", "message": "Done", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "0d4f194704389f06fe7b4ecc40c7a83b4a810c81", "unresolved": false, "patch_set": 6, "id": "df33271e_55836704", "line": 9, "range": {"start_line": 9, "start_character": 43, "end_line": 9, "end_character": 44}, "in_reply_to": "df33271e_f50a7bcf", "updated": "2020-04-01 12:56:43.000000000", "message": "Done", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}], "ci/environments/scenario000-standalone.yaml": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "cb436ec6cf620d799020cf6dd98ff6890befc668", "unresolved": false, "patch_set": 4, "id": "df33271e_ecd2095c", "line": 33, "updated": "2020-03-27 17:20:08.000000000", "message": "I don't see why these cinder backend templates appear in this file. It shouldn't be necessary because they already default to OS::Heat::None.\n\nI just submitted https://review.opendev.org/715487 to try and clean this up.", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_678a4f6a", "line": 33, "in_reply_to": "df33271e_ecd2095c", "updated": "2020-03-31 21:20:23.000000000", "message": "Done", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_04bc74b9", "line": 35, "range": {"start_line": 35, "start_character": 0, "end_line": 35, "end_character": 69}, "updated": "2020-03-27 02:03:20.000000000", "message": "should we remove vMAX entry?", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "cb436ec6cf620d799020cf6dd98ff6890befc668", "unresolved": false, "patch_set": 4, "id": "df33271e_ec37a9af", "line": 35, "range": {"start_line": 35, "start_character": 0, "end_line": 35, "end_character": 69}, "in_reply_to": "df33271e_04bc74b9", "updated": "2020-03-27 17:20:08.000000000", "message": "You might want to do the vmax deprecation in a separate patch if the goal is to backport the powermax stuff. Separate patches would help, because you cannot backport a patch that deprecates something.", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_a780d747", "line": 35, "range": {"start_line": 35, "start_character": 0, "end_line": 35, "end_character": 69}, "in_reply_to": "df33271e_ec37a9af", "updated": "2020-03-31 21:20:23.000000000", "message": "ok", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_44b67cdb", "line": 38, "range": {"start_line": 38, "start_character": 0, "end_line": 38, "end_character": 60}, "updated": "2020-03-27 02:03:20.000000000", "message": "should this be removed since PS series is deprecated in Ussuri?\nOr is it still needed for some reason to handle upgrade of older version to Ussuri?", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_e795bf88", "line": 38, "range": {"start_line": 38, "start_character": 0, "end_line": 38, "end_character": 60}, "in_reply_to": "df33271e_2ccd11b8", "updated": "2020-03-31 21:20:23.000000000", "message": "ok", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "cb436ec6cf620d799020cf6dd98ff6890befc668", "unresolved": false, "patch_set": 4, "id": "df33271e_2ccd11b8", "line": 38, "range": {"start_line": 38, "start_character": 0, "end_line": 38, "end_character": 60}, "in_reply_to": "df33271e_44b67cdb", "updated": "2020-03-27 17:20:08.000000000", "message": "Either way, it should be done in a separate patch.", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "deployment/cinder/cinder-backend-dellemc-powermax-puppet.yaml": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "4835f00717b714a2207325bc84fedec18a4b7f6f", "unresolved": false, "patch_set": 3, "id": "1fa4df85_f36eeac7", "line": 42, "updated": "2020-03-13 19:24:44.000000000", "message": "-1: Needs a constraint on the allowed values.", "commit_id": "71ca90d776ff051705713551b67b6043691e64c5"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "33e216e8b6b7d769313c0edb186bfae50fe9c6e9", "unresolved": false, "patch_set": 3, "id": "df33271e_ba920a9e", "line": 42, "in_reply_to": "1fa4df85_f36eeac7", "updated": "2020-03-26 17:34:21.000000000", "message": "Done", "commit_id": "71ca90d776ff051705713551b67b6043691e64c5"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "7917a8dff54a9c01db71044574751a5aa56fe272", "unresolved": false, "patch_set": 6, "id": "df33271e_89016109", "line": 17, "range": {"start_line": 17, "start_character": 33, "end_line": 17, "end_character": 34}, "updated": "2020-04-01 07:35:04.000000000", "message": "Should be a M uppercase", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "120ad61b26b04163d080edc6834daa40544b28f5", "unresolved": false, "patch_set": 6, "id": "df33271e_41ec458e", "line": 17, "range": {"start_line": 17, "start_character": 33, "end_line": 17, "end_character": 34}, "in_reply_to": "df33271e_89016109", "updated": "2020-04-01 15:36:37.000000000", "message": "Done", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "7917a8dff54a9c01db71044574751a5aa56fe272", "unresolved": false, "patch_set": 6, "id": "df33271e_c91fe969", "line": 91, "range": {"start_line": 91, "start_character": 42, "end_line": 91, "end_character": 65}, "updated": "2020-04-01 07:35:04.000000000", "message": "Dell EMC Storage Center? That's Dell EMC PowerMax rather.", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "120ad61b26b04163d080edc6834daa40544b28f5", "unresolved": false, "patch_set": 6, "id": "df33271e_61e9897e", "line": 91, "range": {"start_line": 91, "start_character": 42, "end_line": 91, "end_character": 65}, "in_reply_to": "df33271e_b5fc73b5", "updated": "2020-04-01 15:36:37.000000000", "message": "Done", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "96641db7ef499bbc5cc7ee953402ee20c3b96fae", "unresolved": false, "patch_set": 6, "id": "df33271e_b5fc73b5", "line": 91, "range": {"start_line": 91, "start_character": 42, "end_line": 91, "end_character": 65}, "in_reply_to": "df33271e_c91fe969", "updated": "2020-04-01 12:52:25.000000000", "message": "ack, this should be fixed.", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}], "deployment/cinder/cinder-backend-dellemc-vmax-iscsi-puppet.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "ff5bbaaa53955cf7529e61957b94e8a5faa54d44", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1ecacf4e", "line": 19, "range": {"start_line": 19, "start_character": 56, "end_line": 19, "end_character": 59}, "updated": "2020-03-11 22:51:29.000000000", "message": "extra character at the end of the line", "commit_id": "45c05fbb2ed6745d36f1acbc02960bf4c7530213"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "03bd97dbf8e23a5390940bd41710f8bb27fe234e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_03a7cf51", "line": 19, "range": {"start_line": 19, "start_character": 56, "end_line": 19, "end_character": 59}, "in_reply_to": "1fa4df85_1ecacf4e", "updated": "2020-03-12 16:54:47.000000000", "message": "Done", "commit_id": "45c05fbb2ed6745d36f1acbc02960bf4c7530213"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "ff5bbaaa53955cf7529e61957b94e8a5faa54d44", "unresolved": false, "patch_set": 1, "id": "1fa4df85_dec3d737", "line": 20, "range": {"start_line": 20, "start_character": 35, "end_line": 20, "end_character": 40}, "updated": "2020-03-11 22:51:29.000000000", "message": "ditto", "commit_id": "45c05fbb2ed6745d36f1acbc02960bf4c7530213"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "03bd97dbf8e23a5390940bd41710f8bb27fe234e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a3611b14", "line": 20, "range": {"start_line": 20, "start_character": 35, "end_line": 20, "end_character": 40}, "in_reply_to": "1fa4df85_dec3d737", "updated": "2020-03-12 16:54:47.000000000", "message": "Done", "commit_id": "45c05fbb2ed6745d36f1acbc02960bf4c7530213"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "cb436ec6cf620d799020cf6dd98ff6890befc668", "unresolved": false, "patch_set": 4, "id": "df33271e_cc874561", "line": 18, "updated": "2020-03-27 17:20:08.000000000", "message": "This is good, but you should also add a parameter_group that lists all the VMAX parameters as being deprecated. That will flag them whenever anyone deploys this template.\n\nSee [1] for an example. The description can mention then entire template is deprecated (not just the individual parameters).\n\n[1] https://opendev.org/openstack/tripleo-heat-templates/src/branch/master/deployment/ceph-ansible/ceph-base.yaml#L326", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_673d2f8e", "line": 18, "in_reply_to": "df33271e_cc874561", "updated": "2020-03-31 21:20:23.000000000", "message": "Yes, will submit  a separate patch", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "environments/cinder-dellemc-powermax-config.yaml": [{"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "336dbb0c389cd68b775b4a4acd093ed6e2a46d80", "unresolved": false, "patch_set": 4, "id": "df33271e_93bd4704", "line": 2, "updated": "2020-03-30 08:55:25.000000000", "message": "Missing a period", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_e4f77d8a", "line": 2, "in_reply_to": "df33271e_93bd4704", "updated": "2020-03-31 21:20:23.000000000", "message": "Done", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "794f93c79998db2ec7bbff8a7d4fcd390163899a", "unresolved": false, "patch_set": 7, "id": "df33271e_85d92723", "line": 2, "range": {"start_line": 2, "start_character": 23, "end_line": 2, "end_character": 24}, "updated": "2020-04-02 07:54:50.000000000", "message": "Uppercase", "commit_id": "e0306decd55f03da747cf178baa94c5b0cc1276d"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "4b1308e1004ec23dcc6367925fb3cf073182f994", "unresolved": false, "patch_set": 7, "id": "df33271e_c7e32904", "line": 2, "range": {"start_line": 2, "start_character": 23, "end_line": 2, "end_character": 24}, "in_reply_to": "df33271e_85d92723", "updated": "2020-04-02 15:35:31.000000000", "message": "Done", "commit_id": "e0306decd55f03da747cf178baa94c5b0cc1276d"}], "environments/cinder-dellemc-vmax-iscsi-config.yaml": [{"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "336dbb0c389cd68b775b4a4acd093ed6e2a46d80", "unresolved": false, "patch_set": 4, "id": "df33271e_734fe333", "line": 3, "updated": "2020-03-30 08:55:25.000000000", "message": "extra word before Template. Should be \"This template\"", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_e73e5fb6", "line": 3, "in_reply_to": "df33271e_734fe333", "updated": "2020-03-31 21:20:23.000000000", "message": "Done", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "environments/undercloud/undercloud-minion.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_849ec451", "line": 58, "range": {"start_line": 58, "start_character": 0, "end_line": 58, "end_character": 70}, "updated": "2020-03-27 02:03:20.000000000", "message": "should we remove VMAX entry? There is no vMAX driver in Ussuri.", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_24b9b8cb", "line": 61, "range": {"start_line": 61, "start_character": 0, "end_line": 61, "end_character": 60}, "updated": "2020-03-27 02:03:20.000000000", "message": "this should be removed also, but probably separate patch.\nPS series is deprecated.", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "overcloud-resource-registry-puppet.j2.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_e4c6b048", "line": 276, "range": {"start_line": 276, "start_character": 0, "end_line": 276, "end_character": 60}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_84c7e445", "line": 280, "range": {"start_line": 280, "start_character": 0, "end_line": 280, "end_character": 70}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "releasenotes/notes/powermax-driver-d428e372280c44e6.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_04e114d1", "line": 5, "range": {"start_line": 5, "start_character": 4, "end_line": 5, "end_character": 17}, "updated": "2020-03-27 02:03:20.000000000", "message": "and support deploying one or multiple", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "5e4593210379a48328288a4e0c004adac53eda02", "unresolved": false, "patch_set": 4, "id": "df33271e_a77297ab", "line": 5, "range": {"start_line": 5, "start_character": 4, "end_line": 5, "end_character": 17}, "in_reply_to": "df33271e_04e114d1", "updated": "2020-03-31 21:20:23.000000000", "message": "Done", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "7917a8dff54a9c01db71044574751a5aa56fe272", "unresolved": false, "patch_set": 6, "id": "df33271e_8c168f48", "line": 5, "range": {"start_line": 4, "start_character": 46, "end_line": 5, "end_character": 41}, "updated": "2020-04-01 07:35:04.000000000", "message": "and support deploying one or multiple", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "96641db7ef499bbc5cc7ee953402ee20c3b96fae", "unresolved": false, "patch_set": 6, "id": "df33271e_9524cf5f", "line": 5, "range": {"start_line": 4, "start_character": 46, "end_line": 5, "end_character": 41}, "in_reply_to": "df33271e_8c168f48", "updated": "2020-04-01 12:52:25.000000000", "message": "ack, remove duplicate \"and\"", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "120ad61b26b04163d080edc6834daa40544b28f5", "unresolved": false, "patch_set": 6, "id": "df33271e_e1fc793f", "line": 5, "range": {"start_line": 4, "start_character": 46, "end_line": 5, "end_character": 41}, "in_reply_to": "df33271e_9524cf5f", "updated": "2020-04-01 15:36:37.000000000", "message": "Done", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}], "roles/Controller.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_64e8e0b3", "line": 60, "range": {"start_line": 60, "start_character": 0, "end_line": 60, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_44eb1caf", "line": 64, "range": {"start_line": 64, "start_character": 0, "end_line": 64, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "roles/ControllerNoCeph.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_84cc0462", "line": 52, "range": {"start_line": 52, "start_character": 0, "end_line": 52, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_a4d148fe", "line": 56, "range": {"start_line": 56, "start_character": 0, "end_line": 56, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "roles/ControllerNovaStandalone.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_c4d60cf2", "line": 45, "range": {"start_line": 45, "start_character": 0, "end_line": 45, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_e4db5018", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "roles/ControllerStorageDashboard.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_040ab488", "line": 61, "range": {"start_line": 61, "start_character": 0, "end_line": 61, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_2407f884", "line": 65, "range": {"start_line": 65, "start_character": 0, "end_line": 65, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "roles/ControllerStorageNfs.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_84f52486", "line": 62, "range": {"start_line": 62, "start_character": 0, "end_line": 62, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_4404bc7b", "line": 66, "range": {"start_line": 66, "start_character": 1, "end_line": 66, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "roles/Standalone.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_c4ef2cae", "line": 54, "range": {"start_line": 54, "start_character": 0, "end_line": 54, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_242c1801", "line": 57, "range": {"start_line": 57, "start_character": 0, "end_line": 57, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto.\nNot sure why in different role yaml they are in different order", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 31779, "name": "Jean Pierre Roquesalane", "display_name": "happystacker", "email": "jeanpierre.roquesalane@dell.com", "username": "happystacker"}, "change_message_id": "7917a8dff54a9c01db71044574751a5aa56fe272", "unresolved": false, "patch_set": 6, "id": "df33271e_ac3433df", "line": 58, "range": {"start_line": 57, "start_character": 3, "end_line": 58, "end_character": 48}, "updated": "2020-04-01 07:35:04.000000000", "message": "don't know why these two appear in a different order that the other roles description.", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, "change_message_id": "120ad61b26b04163d080edc6834daa40544b28f5", "unresolved": false, "patch_set": 6, "id": "df33271e_41a1e545", "line": 58, "range": {"start_line": 57, "start_character": 3, "end_line": 58, "end_character": 48}, "in_reply_to": "df33271e_35cea3b3", "updated": "2020-04-01 15:36:37.000000000", "message": "This is not part of powermax patch. Leaving it there for now", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "96641db7ef499bbc5cc7ee953402ee20c3b96fae", "unresolved": false, "patch_set": 6, "id": "df33271e_35cea3b3", "line": 58, "range": {"start_line": 57, "start_character": 3, "end_line": 58, "end_character": 48}, "in_reply_to": "df33271e_ac3433df", "updated": "2020-04-01 12:52:25.000000000", "message": "The order doesn't matter. Many people try to keep lists like this alphabetically ordered, but this isn't a universally followed rule.", "commit_id": "d8f128392836dd251992ea6c730b632c174a8366"}], "roles_data.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_44395c3f", "line": 63, "range": {"start_line": 63, "start_character": 0, "end_line": 63, "end_character": 48}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_042f54f6", "line": 67, "range": {"start_line": 67, "start_character": 0, "end_line": 67, "end_character": 58}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}], "sample-env-generator/undercloud-minion.yaml": [{"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_a43f8823", "line": 83, "range": {"start_line": 83, "start_character": 0, "end_line": 83, "end_character": 74}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}, {"author": {"_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, "change_message_id": "3f972f6f453bff5a736970ca1577c3e4c328c4ea", "unresolved": false, "patch_set": 4, "id": "df33271e_843a4431", "line": 86, "range": {"start_line": 86, "start_character": 1, "end_line": 86, "end_character": 64}, "updated": "2020-03-27 02:03:20.000000000", "message": "ditto", "commit_id": "0f979dd9f0bbdfcb5af5c605112a5d389a104357"}]}}, "openstack%2Fpuppet-tripleo~master~I0204b6985de71441e0f63f21cfda24d55fd340e5": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-14 13:42:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-14 13:42:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Ftrain~Ie00144d821c920973df4495997c0ce376b7d916b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 21:29:32.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fvalidations-libs~master~Ie61b380762c911d120076d50551b4661f1ef1526": {"owner_id": 16515, "owner_name": "mbu", "owner_email": "mat.bultel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 08:24:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 2, "date": "2020-04-16 14:41:11.000000000", "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, {"value": 0, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Ia0302d1d55dcb8333d7db9713822075d32cd852a": {"owner_id": 21129, "owner_name": "Alan Bishop", "owner_email": "abishop@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 12:54:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-17 11:02:48.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/cinder/cinder-common-container-puppet.yaml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "e5eed8e8b4a93b6795cd5fd505a5dc2acb9ebf7c", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_911463a2", "line": 118, "updated": "2020-04-15 20:40:40.000000000", "message": "please add a \"when: cinder_lvm_loopback_device is defined\"\n\nso in check mode it won't puke with undefined variable (in check mode, commands don't actually run so there is no stdout)", "commit_id": "292a10fbdd19f61698553aae7eca39684d1fddff"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "0b31d0fc36bcb10647b2bcb53c5a596151170a6f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_7431c5a2", "line": 118, "in_reply_to": "3f4c43b2_116df331", "updated": "2020-04-15 21:34:48.000000000", "message": "yes exactly, when: cinder_lvm_dev is defined", "commit_id": "292a10fbdd19f61698553aae7eca39684d1fddff"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "3f8b3d01a7103c8fe78e41809493a99352e7caee", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_8f3a7e95", "line": 118, "in_reply_to": "3f4c43b2_7431c5a2", "updated": "2020-04-15 22:24:16.000000000", "message": "I think the default() will also work, and that seems cleaner if the goal is getting check mode to pass. I could add more constraints such as when: (cinder_lvm_dev|length) > 0, but then I'd want to refactor to put stuff inside a block, and then I'm changing more than seems necessary.", "commit_id": "292a10fbdd19f61698553aae7eca39684d1fddff"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "2030ea2fabf80178932c40d6b9a0daa7e4b81b2f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_116df331", "line": 118, "in_reply_to": "3f4c43b2_911463a2", "updated": "2020-04-15 20:44:11.000000000", "message": "Hmm, I see, so then do I need to do something to prevent subsequent problems where {{ cinder_lvm_dev }} is referenced?", "commit_id": "292a10fbdd19f61698553aae7eca39684d1fddff"}], "deployment/cinder/cinder-volume-container-puppet.yaml": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "d2342aff862a2a60f3016ebdc22f55f7e44a9502", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_1a6343b3", "side": "PARENT", "line": 95, "updated": "2020-04-16 10:25:04.000000000", "message": "can we just remove it w/o being deprecated firstly?", "commit_id": "f85caaf411c4b8d9db39350862d6d52f734f559b"}, {"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "7af1f0787e01c202cd22ee5d7fc006f23819ec60", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_2066d02a", "side": "PARENT", "line": 95, "in_reply_to": "3f4c43b2_1a6343b3", "updated": "2020-04-16 12:53:58.000000000", "message": "It's still in use in the other file, and is just being removed in this file.", "commit_id": "f85caaf411c4b8d9db39350862d6d52f734f559b"}]}}, "openstack%2Ftripleo-heat-templates~master~If4b9c38e8cd2c531cbc984f6f79fb79111204b25": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 07:06:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-04-16 07:06:52.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-16 07:06:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 1, "date": "2020-04-16 07:06:52.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 1, "date": "2020-04-16 07:06:52.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "3ebaa667a614d3274c2104911b430d4bfad31bdc", "unresolved": false, "patch_set": 2, "id": "1fa4df85_44e6de46", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 6}, "updated": "2020-03-18 14:41:02.000000000", "message": "To the best of my knowledge, we don't send SIGHUP to haproxy. The haproxy config per network stays the same throughout its life cycle.", "commit_id": "8611c655db10ad50099310bfb94961e97558e730"}], "deployment/ovn/ovn-metadata-container-puppet.yaml": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "c63cf072331fe7e9de90336878292a5ba1ab0b48", "unresolved": false, "patch_set": 2, "id": "1fa4df85_a2dc6774", "line": 286, "updated": "2020-03-18 12:04:47.000000000", "message": "AFAIK, the command will be wrapped with the outer bash, see https://review.opendev.org/#/c/693442/18/tripleo_ansible/roles/tripleo-systemd-wrapper/templates/service_command.j2,unified. We probably need to use exec on that wrapping layer instead?", "commit_id": "8611c655db10ad50099310bfb94961e97558e730"}]}}, "openstack%2Fpuppet-tripleo~master~I13b02af166d7767799be99a0fb52066b00637a01": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 2, "date": "2020-04-15 08:11:39.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-04-14 16:35:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-04-14 21:34:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~I4270b398366e90206adffe32f812632b50df615b": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 12:12:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~I985d0d192ef3accf7fdd31503348de80713fded4": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 12:25:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~I4833418c68f866a216d837e624199159ace7f696": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 12:26:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 2, "date": "2020-04-17 11:19:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11082, "name": "Kamil Sambor", "email": "ksambor@redhat.com", "username": "ksambor"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"manifests/profile/pacemaker/ovn_dbs_bundle.pp": [{"author": {"_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, "change_message_id": "5a2c7e0a1b2a8022d0f5377eed70f1df6fd0da13", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d8d54e45", "line": 90, "range": {"start_line": 90, "start_character": 14, "end_line": 90, "end_character": 16}, "updated": "2020-04-17 12:26:35.000000000", "message": "please remove this when you respin.", "commit_id": "67e9708b2060500ddfdf3705e9e406c66d2c27fd"}]}}, "openstack%2Ftripleo-upgrade~stable%2Ftrain~I0fc4f7ef907093af4ba26393a1d59a7fe215a5ee": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 10:09:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-04-16 11:51:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}, "change_message_id": "403b02cfff04d01e8caeff9700ac2b2ad9149b75", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_756d3803", "line": 15, "range": {"start_line": 15, "start_character": 11, "end_line": 15, "end_character": 47}, "updated": "2020-04-16 11:59:50.000000000", "message": "ansible gives us whichever comes first lexically, so filters from tripleo_inventory.py in tripleo-ansible (when it exists) take precedence over tripleo_upgrade.py from this role", "commit_id": "5414c064051519b0e2c4329995b6a4f919f2badd"}]}}, "openstack%2Ftripleo-ci~master~I8e1ab268f266c2e7ebfceb722e03276a22ccea27": {"owner_id": 30750, "owner_name": "amolkahat", "owner_email": "amolkahat@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30750, "name": "amolkahat", "display_name": "Amol Kahat", "email": "amolkahat@gmail.com", "username": "amolkahat"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-13 11:59:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-14 07:03:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "a42a66de25f7638b433f928050b5303e3d33290a", "unresolved": false, "patch_set": 3, "id": "df33271e_84421baa", "line": 8, "range": {"start_line": 7, "start_character": 0, "end_line": 8, "end_character": 55}, "updated": "2020-04-09 10:33:38.000000000", "message": "For next commits: please have a empty line between commit header and body", "commit_id": "fb9341734cebc5b06e3b53fb262c772a5d4fb990"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "9a03f44f1b1d77d544762d562eabc9778f5a159f", "unresolved": false, "patch_set": 3, "id": "df33271e_53bc48db", "line": 12, "range": {"start_line": 12, "start_character": 17, "end_line": 12, "end_character": 26}, "updated": "2020-04-10 06:51:38.000000000", "message": "looks like that hasn't run for a few days ... would be great to point to where that was removed from the layout if you have it http://zuul.openstack.org/builds?job_name=tripleo-ci-centos-7-scenario012-standalone", "commit_id": "fb9341734cebc5b06e3b53fb262c772a5d4fb990"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "7eaa45e18241daad4048803c09d9950da099c82a", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_5c8eb227", "line": 13, "range": {"start_line": 12, "start_character": 31, "end_line": 13, "end_character": 28}, "updated": "2020-04-13 07:40:42.000000000", "message": "as commented on v3 my main problem is this is not \"removing it from the ci \" it already happened apparently ... looks like 2020-04-03 was the last one http://zuul.openstack.org/builds?job_name=tripleo-ci-centos-7-scenario012-standalone\n\nI think the entire second sentence can be removed. \n\n'moves $job to deprecated. $job was removed from layout in [1] and hasn't been running for days now'\n\nor something similar ^^", "commit_id": "ed1bacc04dc285710daeed0c381ccb48187de719"}]}}, "openstack%2Fpuppet-tripleo~master~Icd8730aa4d47bb1059321014d5e8b2c5c323976a": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-15 15:04:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-04-15 15:05:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 1, "date": "2020-04-15 15:52:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-04-17 18:55:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 1, "date": "2020-04-15 18:33:19.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {"manifests/profile/base/cinder/volume/iscsi.pp": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "7d8a0ff93c0400fb5b66dd557c374d209470267a", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_3d1c4b11", "line": 55, "updated": "2020-04-15 14:48:42.000000000", "message": "This should also be removed (and clean up the tht file that sets the corresponding hiera data)", "commit_id": "3e8fc5f2bd65b3b3b60559bf845fbf1789d02ef2"}, {"author": {"_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, "change_message_id": "a8deb680a2bd710d4a2462d87b6430437ecd0938", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_dd78c72c", "line": 55, "in_reply_to": "3f4c43b2_3d1c4b11", "updated": "2020-04-15 14:52:23.000000000", "message": "Done", "commit_id": "3e8fc5f2bd65b3b3b60559bf845fbf1789d02ef2"}]}}, "openstack%2Fpython-novaclient~stable%2Fussuri~Icdc0f86f5fb6221a0e11ecbece3130814ce7481e": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-14 07:30:26.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 2, "date": "2020-04-14 11:07:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-14 07:41:52.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 2, "date": "2020-04-11 20:01:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-04-11 23:47:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I6f4a69ec442c3e768feb7bd74c7d610aa9d4aa67": {"owner_id": 18511, "owner_name": "Brian Wickersham", "owner_email": "bkw86@bellsouth.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 03:26:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 1, "date": "2020-04-16 21:05:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17119, "name": "Dmitrii Kabanov", "email": "dmitrii.kabanov@att.com", "username": "dk370c"}, {"value": 0, "_account_id": 18511, "name": "Brian Wickersham", "email": "bkw86@bellsouth.net", "username": "bw6938"}, {"value": 2, "date": "2020-04-17 18:07:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 1, "date": "2020-04-16 18:58:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, {"value": 1, "date": "2020-04-16 18:46:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29974, "name": "Stephen Taylor", "email": "stephen.taylor.1@att.com", "username": "st053q"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~I9c5df364bca666bbc32fb10b100a38f78888088a": {"owner_id": 29632, "owner_name": "Carlos Eduardo", "owner_email": "ces.eduardo98@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30407, "name": "haixin", "email": "haix09@chinatelecom.cn", "username": "haixin"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-18 00:20:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-04-17 23:56:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"manila_tempest_tests/tests/api/admin/test_quotas.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f76db927b6b58407e487c94150fb1b109d592242", "unresolved": false, "patch_set": 4, "id": "df33271e_c6f29de3", "line": 29, "range": {"start_line": 29, "start_character": 4, "end_line": 29, "end_character": 18}, "updated": "2020-04-07 23:26:30.000000000", "message": "SHARE_REPLICA_QUOTAS", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_0b5cd449", "line": 29, "range": {"start_line": 29, "start_character": 4, "end_line": 29, "end_character": 18}, "in_reply_to": "df33271e_c6f29de3", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f76db927b6b58407e487c94150fb1b109d592242", "unresolved": false, "patch_set": 4, "id": "df33271e_260269b5", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 14}, "updated": "2020-04-07 23:26:30.000000000", "message": "SHARE_REPLICA_QUOTAS", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_6b591859", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 14}, "in_reply_to": "df33271e_260269b5", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}], "manila_tempest_tests/tests/api/admin/test_quotas_negative.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e72401addc84f484a1357e54efd8bbed9f10ebb9", "unresolved": false, "patch_set": 4, "id": "df33271e_a65959ff", "line": 29, "range": {"start_line": 29, "start_character": 4, "end_line": 29, "end_character": 18}, "updated": "2020-04-07 23:24:50.000000000", "message": "SHARE_REPLICA_QUOTAS", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_eb3a48e5", "line": 29, "range": {"start_line": 29, "start_character": 4, "end_line": 29, "end_character": 18}, "in_reply_to": "df33271e_a65959ff", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e72401addc84f484a1357e54efd8bbed9f10ebb9", "unresolved": false, "patch_set": 4, "id": "df33271e_665f51e5", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 27}, "updated": "2020-04-07 23:24:50.000000000", "message": "SHARE_REPLICA_QUOTAS_MICROVERSION", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_0b2174b5", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 27}, "in_reply_to": "df33271e_665f51e5", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "be9ff9326196beac846d9aab5aa3bf2ed21c66e8", "unresolved": false, "patch_set": 4, "id": "df33271e_a9ff6a65", "line": 426, "range": {"start_line": 426, "start_character": 25, "end_line": 426, "end_character": 26}, "updated": "2020-04-08 00:50:00.000000000", "message": "This could be a good place to add a test for extend share with replicas and hit quota limit.", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_950f482d", "line": 426, "range": {"start_line": 426, "start_character": 25, "end_line": 426, "end_character": 26}, "in_reply_to": "df33271e_a9ff6a65", "updated": "2020-04-14 18:07:02.000000000", "message": "Surely... Done :)", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "2935ebb54e822c73cae860123b8912df47271fd6", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_ccedc9f0", "line": 465, "range": {"start_line": 465, "start_character": 21, "end_line": 465, "end_character": 40}, "updated": "2020-04-14 22:17:10.000000000", "message": "int(self.share1['size'])", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a698b7a56dc9fd2b96de720b5a7157ad4661cb3e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_27b8c6c6", "line": 465, "range": {"start_line": 465, "start_character": 21, "end_line": 465, "end_character": 40}, "in_reply_to": "3f4c43b2_ccedc9f0", "updated": "2020-04-14 23:53:13.000000000", "message": "Done", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}], "manila_tempest_tests/tests/api/test_quotas.py": [{"author": {"_account_id": 30407, "name": "haixin", "email": "haix09@chinatelecom.cn", "username": "haixin"}, "change_message_id": "d9ae2f25c8e1b87ce4f055c758d5ff04e7b7aef2", "unresolved": false, "patch_set": 2, "id": "df33271e_d4012707", "line": 97, "range": {"start_line": 97, "start_character": 33, "end_line": 97, "end_character": 35}, "updated": "2020-04-02 02:42:49.000000000", "message": "i think here should use 'is_microversion_ge',This means that the feature is compatible with later versions.", "commit_id": "b14d3c1abb9849b6bfadc6048fc631b5f48b27ad"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "28fb5d927aec4f7d0202ceee952ff5f5088752ce", "unresolved": false, "patch_set": 2, "id": "df33271e_751742a5", "line": 97, "range": {"start_line": 97, "start_character": 33, "end_line": 97, "end_character": 35}, "in_reply_to": "df33271e_d4012707", "updated": "2020-04-04 13:37:29.000000000", "message": "Oh, good find, haixin. Thanks for pointing this out. Done.", "commit_id": "b14d3c1abb9849b6bfadc6048fc631b5f48b27ad"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fa4bc0dc63986db6c82968e0378e6b67e23a3f7a", "unresolved": false, "patch_set": 3, "id": "df33271e_b0451373", "line": 111, "range": {"start_line": 111, "start_character": 34, "end_line": 111, "end_character": 35}, "updated": "2020-04-07 22:05:32.000000000", "message": "2", "commit_id": "d790c3d99edeb106b817c94960da3e82fb681707"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "d9a41f4a0f2cebd191e411c40303e45e1bf72f97", "unresolved": false, "patch_set": 3, "id": "df33271e_068c857d", "line": 111, "range": {"start_line": 111, "start_character": 34, "end_line": 111, "end_character": 35}, "in_reply_to": "df33271e_b0451373", "updated": "2020-04-07 23:14:17.000000000", "message": "Done", "commit_id": "d790c3d99edeb106b817c94960da3e82fb681707"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e72401addc84f484a1357e54efd8bbed9f10ebb9", "unresolved": false, "patch_set": 4, "id": "df33271e_26bf09fc", "line": 113, "range": {"start_line": 111, "start_character": 0, "end_line": 113, "end_character": 77}, "updated": "2020-04-07 23:24:50.000000000", "message": "Actually, I wasn't thinking.. \n\nWhat's the rationale in testing for these keys in 2.40 and 2.49?", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_eb136865", "line": 113, "range": {"start_line": 111, "start_character": 0, "end_line": 113, "end_character": 77}, "in_reply_to": "df33271e_26bf09fc", "updated": "2020-04-14 18:07:02.000000000", "message": "Yep, there is no need to test for both of them, just added randomly. Keeping only \"2.52\" makes more sense. Ty", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "2935ebb54e822c73cae860123b8912df47271fd6", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_0c0a11d1", "line": 111, "range": {"start_line": 111, "start_character": 4, "end_line": 111, "end_character": 21}, "updated": "2020-04-14 22:17:10.000000000", "message": "No need for ddt, just add this inline in the test", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a698b7a56dc9fd2b96de720b5a7157ad4661cb3e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_e79ede61", "line": 111, "range": {"start_line": 111, "start_character": 4, "end_line": 111, "end_character": 21}, "in_reply_to": "3f4c43b2_0c0a11d1", "updated": "2020-04-14 23:53:13.000000000", "message": "Done", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "2935ebb54e822c73cae860123b8912df47271fd6", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_acf83dc4", "line": 114, "range": {"start_line": 114, "start_character": 8, "end_line": 114, "end_character": 55}, "updated": "2020-04-14 22:17:10.000000000", "message": "\"test_quota_detail_2_52_no_share_replica_quotas\" perhaps?", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a698b7a56dc9fd2b96de720b5a7157ad4661cb3e", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_078f8a2a", "line": 114, "range": {"start_line": 114, "start_character": 8, "end_line": 114, "end_character": 55}, "in_reply_to": "3f4c43b2_acf83dc4", "updated": "2020-04-14 23:53:13.000000000", "message": "Sounds better. Ty.", "commit_id": "975607386236801a5313a88d0d9e5f24ebad70b4"}], "manila_tempest_tests/tests/api/test_replication_negative.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e72401addc84f484a1357e54efd8bbed9f10ebb9", "unresolved": false, "patch_set": 4, "id": "df33271e_46396da1", "line": 29, "range": {"start_line": 29, "start_character": 0, "end_line": 29, "end_character": 27}, "updated": "2020-04-07 23:24:50.000000000", "message": "This isn't being used..", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_0b0a1425", "line": 29, "range": {"start_line": 29, "start_character": 0, "end_line": 29, "end_character": 27}, "in_reply_to": "df33271e_46396da1", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}], "manila_tempest_tests/utils.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e72401addc84f484a1357e54efd8bbed9f10ebb9", "unresolved": false, "patch_set": 4, "id": "df33271e_e649a132", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 27}, "updated": "2020-04-07 23:24:50.000000000", "message": "SHARE_REPLICA_QUOTAS_MICROVERSION", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "31a373de822898e218c4b5c29e495474e339f14c", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_4b041c18", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 27}, "in_reply_to": "df33271e_e649a132", "updated": "2020-04-14 18:07:02.000000000", "message": "Done", "commit_id": "b84fdcd821b86a7974e2a4752e6e6b6418d6b33b"}]}}, "starlingx%2Fha~master~I2f43fd9b8c7e0f54ddca05e2ad0e86d9d4bcb874": {"owner_id": 28466, "owner_name": "Bin Qian", "owner_email": "bin.qian@windriver.com", "labels": {}, "comments": {}}, "openstack%2Fkeystone~master~I5a75eac3926ac01565019afbb223df8bf599a69f": {"owner_id": 27621, "owner_name": "Vishakha Agarwal", "owner_email": "agarwalvishakha18@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 03:25:17.000000000", "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-04-17 17:56:32.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "022c2f9cd8747640cf9a3bb5b4e309c4c399f73d", "unresolved": false, "patch_set": 2, "id": "df33271e_dced53b8", "line": 7, "updated": "2020-04-07 20:54:54.000000000", "message": "Would be good to be more specific about what you're updating and why. I recommend undoing the change in proposing-features.rst and making this all about the python2 removal, and write the commit message about that.", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "b04c26081784478413eee1b5832163aced9ae705", "unresolved": false, "patch_set": 2, "id": "df33271e_4645d614", "line": 7, "in_reply_to": "df33271e_dced53b8", "updated": "2020-04-08 15:21:05.000000000", "message": "Done", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "022c2f9cd8747640cf9a3bb5b4e309c4c399f73d", "unresolved": false, "patch_set": 2, "id": "df33271e_1c2a1b7d", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 21}, "updated": "2020-04-07 20:54:54.000000000", "message": "Not sure why this needed a bug report, my perspective is most bug reports should be pointing out specific things that need to be fixed or added. This was already tracked in the roadmap.", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "b04c26081784478413eee1b5832163aced9ae705", "unresolved": false, "patch_set": 2, "id": "df33271e_a654a2cb", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 21}, "in_reply_to": "df33271e_1c2a1b7d", "updated": "2020-04-08 15:21:05.000000000", "message": "Done", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}], "doc/source/contributor/proposing-features.rst": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "022c2f9cd8747640cf9a3bb5b4e309c4c399f73d", "unresolved": false, "patch_set": 2, "id": "df33271e_bcadefeb", "line": 69, "range": {"start_line": 69, "start_character": 64, "end_line": 69, "end_character": 75}, "updated": "2020-04-07 20:54:54.000000000", "message": "I don't think this needs to be changed, this is just an example. The example shows the format, i.e. that the directory is lowercase and named after the release code name.", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "b04c26081784478413eee1b5832163aced9ae705", "unresolved": false, "patch_set": 2, "id": "df33271e_864fde32", "line": 69, "range": {"start_line": 69, "start_character": 64, "end_line": 69, "end_character": 75}, "in_reply_to": "df33271e_bcadefeb", "updated": "2020-04-08 15:21:05.000000000", "message": "Done", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}], "doc/source/contributor/set-up-keystone.rst": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "022c2f9cd8747640cf9a3bb5b4e309c4c399f73d", "unresolved": false, "patch_set": 2, "id": "df33271e_5c802347", "line": 29, "range": {"start_line": 29, "start_character": 10, "end_line": 29, "end_character": 13}, "updated": "2020-04-07 20:54:54.000000000", "message": "I think we're doing 3.6 now", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}, {"author": {"_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, "change_message_id": "b04c26081784478413eee1b5832163aced9ae705", "unresolved": false, "patch_set": 2, "id": "df33271e_e65fcae2", "line": 29, "range": {"start_line": 29, "start_character": 10, "end_line": 29, "end_character": 13}, "in_reply_to": "df33271e_5c802347", "updated": "2020-04-08 15:21:05.000000000", "message": "Done", "commit_id": "78e9e3b7b681800b60c9244fdaa1a9e7e7571861"}]}}, "openstack%2Fopenstack-helm-images~master~If861ba14de00966ec4fe0b12001902755bf94338": {"owner_id": 30582, "owner_name": "RADHIKA PAI", "owner_email": "rp592h@att.com", "labels": [{"value": 2, "date": "2020-04-18 03:25:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-15 22:16:52.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23917, "name": "Unnikrishnan K", "email": "uk369h@att.com", "username": "ukk1985"}, {"value": 2, "date": "2020-04-15 22:19:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "openstack%2Ftempest~master~I99a6df0a2c02e19efaf484fcd97b875887f08d8e": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-04-17 15:23:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 2, "date": "2020-04-18 02:05:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"doc/source/tempest_and_plugins_compatible_version_policy.rst": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "0a1aed6bc8007f998755084f5d8685b8820562cb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_95e0af98", "line": 24, "range": {"start_line": 24, "start_character": 43, "end_line": 24, "end_character": 49}, "updated": "2020-04-17 12:00:47.000000000", "message": "master", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3023d08f8aca653eb1e06e9e8fd64dcf3db5c043", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_24824b50", "line": 24, "range": {"start_line": 24, "start_character": 43, "end_line": 24, "end_character": 49}, "in_reply_to": "3f4c43b2_95e0af98", "updated": "2020-04-17 15:03:40.000000000", "message": "Done", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "0a1aed6bc8007f998755084f5d8685b8820562cb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f5f0136a", "line": 32, "range": {"start_line": 32, "start_character": 11, "end_line": 32, "end_character": 20}, "updated": "2020-04-17 12:00:47.000000000", "message": "branchless", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "c2778f0453c6f54c87738b297b2e06f1e1c4d70b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e9bb1ec1", "line": 32, "range": {"start_line": 32, "start_character": 31, "end_line": 32, "end_character": 38}, "updated": "2020-04-17 14:40:41.000000000", "message": "nit: explained", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "0a1aed6bc8007f998755084f5d8685b8820562cb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_35eb9b79", "line": 32, "range": {"start_line": 32, "start_character": 65, "end_line": 32, "end_character": 72}, "updated": "2020-04-17 12:00:47.000000000", "message": "versions", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3023d08f8aca653eb1e06e9e8fd64dcf3db5c043", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c492879e", "line": 32, "range": {"start_line": 32, "start_character": 31, "end_line": 32, "end_character": 38}, "in_reply_to": "3f4c43b2_e9bb1ec1", "updated": "2020-04-17 15:03:40.000000000", "message": "Done", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "c2778f0453c6f54c87738b297b2e06f1e1c4d70b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_0915aa9c", "line": 46, "updated": "2020-04-17 14:40:41.000000000", "message": "Do you intend to write a static (or dynamic) list of the supported versions on the releases websites?\n\nJust curious, as the table might be clearer with examples (not that it's not clear).", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3023d08f8aca653eb1e06e9e8fd64dcf3db5c043", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e4d50345", "line": 46, "in_reply_to": "3f4c43b2_0915aa9c", "updated": "2020-04-17 15:03:40.000000000", "message": "First supported version is there in release site but it will great if we can add the Last compatible which is nothing but *-em version.\n\nOnce we have those tag available then we can see how we show these on site.", "commit_id": "6264c2d8e7a90edeb029a45758968eb7f4b92a85"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "1d8727a76b7f2e341fedbc14c43ec6cd23084ded", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_6479f32d", "line": 5, "range": {"start_line": 5, "start_character": 47, "end_line": 5, "end_character": 51}, "updated": "2020-04-17 15:21:55.000000000", "message": "cases", "commit_id": "0a1384f8605e2f0e9f9eda2b99f30f00088bb060"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "1d8727a76b7f2e341fedbc14c43ec6cd23084ded", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_042c6f00", "line": 34, "range": {"start_line": 34, "start_character": 50, "end_line": 34, "end_character": 52}, "updated": "2020-04-17 15:21:55.000000000", "message": "in the / within ?", "commit_id": "0a1384f8605e2f0e9f9eda2b99f30f00088bb060"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "1d8727a76b7f2e341fedbc14c43ec6cd23084ded", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_04074f84", "line": 37, "range": {"start_line": 37, "start_character": 33, "end_line": 37, "end_character": 42}, "updated": "2020-04-17 15:21:55.000000000", "message": "OpenStack", "commit_id": "0a1384f8605e2f0e9f9eda2b99f30f00088bb060"}, {"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "9f4ae969d78003f5c6e906066cfbc1bd44a082af", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_71fec9ae", "line": 45, "range": {"start_line": 36, "start_character": 0, "end_line": 45, "end_character": 87}, "updated": "2020-04-18 02:05:58.000000000", "message": "These indentations make a bit weird rendering on the HTML page. But it's kind of nitpicks.", "commit_id": "235c26445763ffae04a3cbde7e1f13b426dbf27c"}]}}, "openstack%2Fneutron~master~I8fa7176d1d9667c6b5cc95af0e31210d0f1c3662": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-04-16 20:10:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-04-16 20:10:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 1, "date": "2020-04-16 20:10:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-04-16 20:10:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 1, "date": "2020-04-16 20:10:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {}}, "openstack%2Fswift~master~I99d94eb3211ddc337b986f086aac5a4740696ed5": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 01:30:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}], "comments": {}}, "openstack%2Fswift~feature%2Flosf~I5063cef634e2de80934c75aebed5707b1683d5d5": {"owner_id": 25251, "owner_name": "Alexandre L\u00e9cuyer", "owner_email": "alexandre.lecuyer@corp.ovh.com", "labels": [{"value": 0, "_account_id": 13852, "name": "Romain LE DISEZ", "email": "romain.le-disez@corp.ovh.com", "username": "rledisez"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 00:01:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}], "comments": {}}, "openstack%2Ftempest~master~I9840ea976d290a8fd22d8c3bae17db9ed42f629a": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 2, "date": "2020-04-17 07:48:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-04-17 22:40:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {}}, "openstack%2Ftempest~master~I27738221d04df119d6b8ce988a44f78043b1a459": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-15 16:02:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 23:14:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {}}, "openstack%2Ftempest~master~I355bc829e7c0f01613fc907a6bf9e03b785ba3ea": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 2, "date": "2020-04-15 16:02:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-14 08:32:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-17 22:57:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {}}, "openstack%2Ftempest~master~I072bd2c86a7f50559e9e452dda3e1669fad3be00": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 2, "date": "2020-04-17 05:24:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-04-17 22:48:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "4930e9c483056226ca8dc585c552dad119979f29", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_871d2c11", "line": 19, "updated": "2020-04-17 05:24:41.000000000", "message": "heh, I see.", "commit_id": "c16883ff34cc143b35c5b02d1aa113d49488ec99"}], "tempest/api/identity/v3/test_catalog.py": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "4930e9c483056226ca8dc585c552dad119979f29", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_272ff83f", "line": 36, "range": {"start_line": 36, "start_character": 26, "end_line": 36, "end_character": 67}, "updated": "2020-04-17 05:24:41.000000000", "message": "This can be separated into a different patch because I feel this is a kind of refactoring which is a different topic.", "commit_id": "c16883ff34cc143b35c5b02d1aa113d49488ec99"}, {"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "7f18a41151670591ef0b4f74d716279a7912b6a1", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_87ffec32", "line": 36, "range": {"start_line": 36, "start_character": 26, "end_line": 36, "end_character": 67}, "in_reply_to": "3f4c43b2_272ff83f", "updated": "2020-04-17 06:33:06.000000000", "message": "Yes, I know it's not good to do this in this patch, I just can't help shortening the code when I happen to see them:)", "commit_id": "c16883ff34cc143b35c5b02d1aa113d49488ec99"}]}}, "openstack%2Fwatcher-tempest-plugin~master~Ia856c26e9ee8181909367e9f299c6e78e7c4d7ff": {"owner_id": 21692, "owner_name": "licanwei", "owner_email": "li.canwei2@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 02:09:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}], "comments": {}}, "openstack%2Ftempest~master~I3d1634fab5826928a45bd47c18aba6fc32021075": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-17 07:46:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-04-17 22:34:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}], "comments": {"tempest/api/compute/admin/test_services_negative.py": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "aa46b11f38698bf45609ef2679d444cfcedd310f", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_06e5b4a8", "line": 23, "updated": "2020-04-16 06:54:00.000000000", "message": "nit: unnecessary whitespace", "commit_id": "15605412cbb522ca4f71d4cb023e76d299f12ab6"}, {"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "94bfa0b9f6b8ee78e18802c4fd11487134869cd4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_866d4406", "line": 23, "in_reply_to": "3f4c43b2_06e5b4a8", "updated": "2020-04-16 07:02:45.000000000", "message": "Thanks, done", "commit_id": "15605412cbb522ca4f71d4cb023e76d299f12ab6"}]}}, "openstack%2Fcoverage2sql~master~Ib70fcdc751a1e84d3160558361a76bbd328f4625": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 02:07:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~Ifaf00b7a5e895a5b79f268dbdcaa3ef20b21ea68": {"owner_id": 6413, "owner_name": "Victoria Martinez de la Cruz", "owner_email": "victoria@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-18 00:45:53.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fpython-pankoclient~master~Ib3ea77c973a9592710a9d75c76c443881f1a4bc1": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-18 01:13:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I4634447762aad20f2c450fe4bb7f0803d13efec2": {"owner_id": 6796, "owner_name": "Giulio Fidente", "owner_email": "gfidente@redhat.com", "labels": [{"value": 0, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-15 15:49:36.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-16 09:03:32.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 2, "date": "2020-04-15 15:58:43.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/swift/external-swift-proxy-baremetal-puppet.yaml": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "214583dbecf6dabc7878f0d686cf29ee48c8f1a2", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_485a374f", "line": 100, "updated": "2020-04-15 15:50:46.000000000", "message": "it looks like the backport was halfway there already, not sure why", "commit_id": "19f6f42a5d61b338205ec560fe31715c74d9513d"}]}}, "openstack%2Fmanila-ui~master~Ibe4423cf3893981128addbf4fa31ba9003a7e968": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-04-17 22:26:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-17 23:59:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fcinder~master~If5448c8399a5097f6fb2b546d1452ecee2975b54": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19852, "name": "ITRI DISCO CI", "email": "itri_cinder@itri.org.tw", "username": "disco.ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14208, "name": "Cisco CI", "email": "ml2.ci@cisco.com", "username": "cisco_ml2_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15296, "name": "Brocade Openstack CI", "email": "Brocade-Openstack-CI@Brocade.com", "username": "Brocade-Openstack-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17565, "name": "IBM GPFS CI", "email": "imanilac@in.ibm.com", "username": "ibmmanilaci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24863, "name": "Veritas Access CI", "email": "DL-VTAS-ENG-SDIO-Access-Opensource@veritas.com", "username": "vtas-access-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12822, "name": "ProphetStor CI", "email": "prophetstor.ci@prophetstor.com", "username": "prophetstor.ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13628, "name": "Huawei Volume CI", "username": "huawei-volume-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31416, "name": "wuqiongdan", "email": "wuqiongdan@szsandstone.com", "username": "wuqiongdan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24502, "name": "Veritas HyperScale CI", "email": "DL-VTAS-ENG-SDIO-HyperScale-Opensource@veritas.com", "username": "veritas-hyperscale-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~Ibfd62c0f983e975ea6977d7fcffa6e7de210a60b": {"owner_id": 29965, "owner_name": "wuweijie", "owner_email": "wuweijie@bjtengling.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29965, "name": "wuweijie", "email": "wuweijie@bjtengling.com", "username": "wuweijie"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-04-03 16:28:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15296, "name": "Brocade Openstack CI", "email": "Brocade-Openstack-CI@Brocade.com", "username": "Brocade-Openstack-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": -1, "date": "2019-02-25 04:03:39.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24863, "name": "Veritas Access CI", "email": "DL-VTAS-ENG-SDIO-Access-Opensource@veritas.com", "username": "vtas-access-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": -1, "date": "2019-05-02 21:29:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24496, "name": "DataCore CI", "email": "michael.latchmansingh@datacore.com", "username": "datacore-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"cinder/volume/drivers/tengling/rest_client.py": [{"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_57b0c98b", "line": 1, "updated": "2019-02-25 04:03:39.000000000", "message": "apache license header[1] required in each file\n[1] https://github.com/openstack/cinder/blob/master/cinder/volume/drivers/lvm.py#L1-L11", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_f7321d0f", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 52}, "updated": "2019-02-25 04:03:39.000000000", "message": "imports should be in alphabetical order", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_f74d3d99", "line": 65, "range": {"start_line": 65, "start_character": 15, "end_line": 65, "end_character": 26}, "updated": "2019-02-25 04:03:39.000000000", "message": "if url is None\nor\nif not url", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_b76ed5fd", "line": 97, "range": {"start_line": 97, "start_character": 29, "end_line": 97, "end_character": 30}, "updated": "2019-02-25 04:03:39.000000000", "message": "space required after colon in every {key: value} definition", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, "change_message_id": "8a3ffa301e4459d7178c399c62da7cf51f6b39cc", "unresolved": false, "patch_set": 1, "id": "dfbec78f_7e51950e", "line": 101, "range": {"start_line": 101, "start_character": 20, "end_line": 101, "end_character": 38}, "updated": "2019-05-02 21:29:09.000000000", "message": "What is this?\n\nProbably needs a comment explaining what is happening here.", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_9744f175", "line": 103, "range": {"start_line": 103, "start_character": 0, "end_line": 103, "end_character": 88}, "updated": "2019-02-25 04:03:39.000000000", "message": "wrap lines in <80 characters", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_17aa4118", "line": 149, "range": {"start_line": 149, "start_character": 0, "end_line": 149, "end_character": 12}, "updated": "2019-02-25 04:03:39.000000000", "message": "remove all spaces in blank lines", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}, {"author": {"_account_id": 29965, "name": "wuweijie", "email": "wuweijie@bjtengling.com", "username": "wuweijie"}, "change_message_id": "92ce9e24b2378980a099862954f22e8ff3f9895c", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_cbf5dbcc", "line": 149, "range": {"start_line": 149, "start_character": 0, "end_line": 149, "end_character": 12}, "in_reply_to": "9fdfeff1_17aa4118", "updated": "2019-05-04 03:01:26.000000000", "message": "Done", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}], "cinder/volume/drivers/tengling/tengling_driver.py": [{"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "de2d89d21f68207dd017f1ce5bc494ec869d55cf", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_f71bfd7c", "line": 34, "updated": "2019-02-25 04:03:39.000000000", "message": "use @interface.volumedriver definition here\nhttps://github.com/openstack/cinder/blob/master/cinder/volume/drivers/lvm.py#L77", "commit_id": "f8f144ac960efc059d16393123d6e89e0f5aaf3c"}]}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~If4a6f25015374883050c48b7705e8207906118f4": {"owner_id": 11952, "owner_name": "Flavio Fernandes", "owner_email": "flavio@flaviof.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-13 07:58:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 2, "date": "2020-04-13 12:54:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~I6aaa88677dd2bd7ddde40f65ec89ec5b09fc887d": {"owner_id": 29423, "owner_name": "zhouxinyong", "owner_email": "zhouxinyong@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-06-28 16:15:59.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28543, "name": "shupeng", "email": "15050873171@163.com", "username": "Vieri"}, {"value": -1, "date": "2019-06-27 14:03:43.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17499, "name": "Filippo Inzaghi", "email": "zhao.daqing@99cloud.net", "username": "qingszhao"}, {"value": -1, "date": "2019-06-28 16:21:27.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28935, "name": "98k", "email": "18552437190@163.com", "username": "98k"}], "comments": {}}, "openstack%2Fcinder~master~I7dd5fed5b954181d4986ca38942fdc60f190bda2": {"owner_id": 29217, "owner_name": "futaotao", "owner_email": "futaotao@huawei.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": -1, "date": "2020-03-30 19:12:42.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13144, "name": "Oracle ZFSSA CI", "username": "oracle-zfssa-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29217, "name": "futaotao", "email": "futaotao@huawei.com", "username": "doubletao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29627, "name": "MacroSAN Volume CI", "email": "466367416@qq.com", "username": "hjy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "713166b314aaad7d71c3e2a2f3f778e28c08e5f0", "unresolved": false, "patch_set": 1, "id": "7faddb67_4ec14080", "line": 19, "range": {"start_line": 12, "start_character": 0, "end_line": 19, "end_character": 16}, "updated": "2019-07-09 12:30:30.000000000", "message": "These should be broken out into separate patches.", "commit_id": "ec49c3cab7a6aa4ecedd57cc4f7976a4506771d4"}], "cinder/volume/drivers/fusionstorage/dsware.py": [{"author": {"_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, "change_message_id": "00ec05138355d564d1ebb617c07f1bb14b5d26eb", "unresolved": false, "patch_set": 3, "id": "7faddb67_a8ccd3ba", "line": 101, "range": {"start_line": 101, "start_character": 64, "end_line": 101, "end_character": 65}, "updated": "2019-08-05 19:37:02.000000000", "message": "unrelated change", "commit_id": "62749a75e91b100c08104157b74a1899084be8b0"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "190b89a31694c7b6272220700d1830306833d548", "unresolved": false, "patch_set": 3, "id": "7faddb67_395d8946", "line": 303, "updated": "2019-07-19 14:46:33.000000000", "message": "This looks like an unrelated fix?  Might need to be split out into a separate patch.", "commit_id": "62749a75e91b100c08104157b74a1899084be8b0"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "8b475579bd588a927e8b02e5d81722eb66c6cf95", "unresolved": false, "patch_set": 5, "id": "df33271e_0b356e8f", "line": 110, "range": {"start_line": 110, "start_character": 4, "end_line": 110, "end_character": 19}, "updated": "2020-03-30 19:12:42.000000000", "message": "Since you're adding new functionality, don't you want to increment the version number and include version history in a docstring for the class?", "commit_id": "93ba5118d86fb3b01e93f9ef7d4e90b0773bf42d"}]}}, "openstack%2Fmanila-tempest-plugin~master~I51fa672ca5ede786c9d7b79dc8b4bf9d7c853ced": {"owner_id": 30002, "owner_name": "Douglas Viroel", "owner_email": "viroel@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fos-brick~stable%2Ftrain~Id507109df80391699074773f4787f74507c4b882": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 27710, "name": "Cloudbase OSBrick Windows CI", "email": "windows_osbrick_ci@cloudbasesolutions.com", "username": "windows-osbrick-ci"}, {"value": 2, "date": "2020-04-16 14:26:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 2, "date": "2020-04-15 13:53:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~I4f0e1d122de5e3d85130226d3c5491ee884a9268": {"owner_id": 15100, "owner_name": "zhongjun", "owner_email": "jun.zhongjun2@gmail.com", "labels": [{"value": -1, "date": "2018-12-12 02:39:31.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13984, "name": "zhongjun", "username": "zhongjun", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "ab3867481f0e04e5674058080ac957ac3392b62d", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_56f1f795", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 0}, "updated": "2018-07-11 21:40:17.000000000", "message": "Depends-On?", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ccaf3837cc3f1bdb51ee2f2e33acd894b8d656b9", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_39184282", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 0}, "in_reply_to": "5f7c97a3_56f1f795", "updated": "2018-07-19 09:58:50.000000000", "message": "Done", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}], "manila_tempest_tests/config.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "ab3867481f0e04e5674058080ac957ac3392b62d", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_16eb7fa4", "line": 33, "range": {"start_line": 33, "start_character": 15, "end_line": 33, "end_character": 30}, "updated": "2018-07-11 21:40:17.000000000", "message": "microversion has changed in the server patch", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ccaf3837cc3f1bdb51ee2f2e33acd894b8d656b9", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_b95b4e53", "line": 33, "range": {"start_line": 33, "start_character": 15, "end_line": 33, "end_character": 30}, "in_reply_to": "5f7c97a3_16eb7fa4", "updated": "2018-07-19 09:58:50.000000000", "message": "Done", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_8900e96a", "line": 33, "range": {"start_line": 33, "start_character": 25, "end_line": 33, "end_character": 29}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}], "manila_tempest_tests/services/share/v2/json/shares_client.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "91c6c802c7b80efe4157b1a12f00779ee08abf96", "unresolved": false, "patch_set": 5, "id": "5f7c97a3_1cd2bd34", "line": 771, "range": {"start_line": 771, "start_character": 54, "end_line": 771, "end_character": 72}, "updated": "2018-07-23 22:28:21.000000000", "message": "not needed", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}], "manila_tempest_tests/tests/api/test_rules.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "ab3867481f0e04e5674058080ac957ac3392b62d", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_d678a7f8", "updated": "2018-07-11 21:40:17.000000000", "message": "tempest test for update?", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ccaf3837cc3f1bdb51ee2f2e33acd894b8d656b9", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_992396bb", "in_reply_to": "5f7c97a3_d678a7f8", "updated": "2018-07-19 09:58:50.000000000", "message": "Done", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "ab3867481f0e04e5674058080ac957ac3392b62d", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_16405fa2", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 0}, "updated": "2018-07-11 21:40:17.000000000", "message": "validate the priority you set", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ccaf3837cc3f1bdb51ee2f2e33acd894b8d656b9", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_79a7f651", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 0}, "in_reply_to": "5f7c97a3_16405fa2", "updated": "2018-07-19 09:58:50.000000000", "message": "Done", "commit_id": "d5516d5f9d9d19b5f4ba633ea73699e48a3103b7"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_29f51587", "line": 37, "range": {"start_line": 37, "start_character": 55, "end_line": 37, "end_character": 61}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_49fad176", "line": 68, "range": {"start_line": 68, "start_character": 46, "end_line": 68, "end_character": 50}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_e9ee3db6", "line": 495, "range": {"start_line": 495, "start_character": 48, "end_line": 495, "end_character": 53}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_09ecd9bb", "line": 561, "range": {"start_line": 561, "start_character": 47, "end_line": 561, "end_character": 50}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_c9b7c1d1", "line": 655, "range": {"start_line": 655, "start_character": 29, "end_line": 655, "end_character": 31}, "updated": "2018-12-12 02:39:31.000000000", "message": "2.47?", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "74c1062862ad62e72fb0eed533329b2745d6023a", "unresolved": false, "patch_set": 5, "id": "3f79a3b5_69d22d07", "line": 656, "range": {"start_line": 656, "start_character": 27, "end_line": 656, "end_character": 31}, "updated": "2018-12-12 02:39:31.000000000", "message": "above", "commit_id": "00bd36d37a9454a0e8951c236f73d78e20d5986b"}]}}, "openstack%2Fpython-manilaclient~master~Ibfbf122516e1c0a44f74f161060d849a879adaf9": {"owner_id": 15100, "owner_name": "zhongjun", "owner_email": "jun.zhongjun2@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, {"value": -1, "date": "2018-07-25 21:17:05.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, {"value": -1, "date": "2018-12-13 12:21:57.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13984, "name": "zhongjun", "username": "zhongjun", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"manilaclient/api_versions.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e3689148cc0cad73effdbfbb59a988a800a2416e", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_793bc3c8", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 20}, "updated": "2018-07-11 23:15:24.000000000", "message": "server's updated..", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "33c4e153323b16450e6548440927554a261c3d67", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_ca1e6ebb", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 20}, "in_reply_to": "5f7c97a3_793bc3c8", "updated": "2018-07-16 09:28:25.000000000", "message": "Done", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}], "manilaclient/tests/unit/v2/test_shares.py": [{"author": {"_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, "change_message_id": "0e4f232f60de41acb3b3fe966ed5b798a55f603e", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_1038c29d", "line": 52, "range": {"start_line": 52, "start_character": 60, "end_line": 52, "end_character": 67}, "updated": "2018-06-12 12:44:09.000000000", "message": "Need to add testcase when priority is not None.", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "83c7d264f0f2bc12ab23c3bfb86f405a9d7af280", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_0cd52bb7", "line": 52, "range": {"start_line": 52, "start_character": 60, "end_line": 52, "end_character": 67}, "in_reply_to": "5f7c97a3_1038c29d", "updated": "2018-07-05 12:07:12.000000000", "message": "Done", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}], "manilaclient/v2/shares.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e3689148cc0cad73effdbfbb59a988a800a2416e", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_99a6df0d", "line": 514, "range": {"start_line": 514, "start_character": 41, "end_line": 514, "end_character": 42}, "updated": "2018-07-11 23:15:24.000000000", "message": "-", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "33c4e153323b16450e6548440927554a261c3d67", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_6a1ddabc", "line": 514, "range": {"start_line": 514, "start_character": 41, "end_line": 514, "end_character": 42}, "in_reply_to": "5f7c97a3_99a6df0d", "updated": "2018-07-16 09:28:25.000000000", "message": "Done", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}], "manilaclient/v2/shell.py": [{"author": {"_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, "change_message_id": "0e4f232f60de41acb3b3fe966ed5b798a55f603e", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_0d1bc980", "line": 1302, "range": {"start_line": 1302, "start_character": 33, "end_line": 1302, "end_character": 34}, "updated": "2018-06-12 12:44:09.000000000", "message": "Available", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, "change_message_id": "0e4f232f60de41acb3b3fe966ed5b798a55f603e", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_d0532a15", "line": 1302, "range": {"start_line": 1302, "start_character": 53, "end_line": 1302, "end_character": 74}, "updated": "2018-06-12 12:44:09.000000000", "message": "Cinder use 'start_version' can be used to indicate this.", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "83c7d264f0f2bc12ab23c3bfb86f405a9d7af280", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_6c285fed", "line": 1302, "range": {"start_line": 1302, "start_character": 33, "end_line": 1302, "end_character": 34}, "in_reply_to": "5f7c97a3_0d1bc980", "updated": "2018-07-05 12:07:12.000000000", "message": "Done", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a44598628d66bc9ce551bf781294c5579a0c0909", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_79f3c3e9", "line": 1302, "range": {"start_line": 1302, "start_character": 33, "end_line": 1302, "end_character": 34}, "in_reply_to": "5f7c97a3_6c285fed", "updated": "2018-07-11 23:24:35.000000000", "message": "That's a great idea Tommy, do you want to bring that feature to manilaclient? :)", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "83c7d264f0f2bc12ab23c3bfb86f405a9d7af280", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_2f1b396f", "line": 1302, "range": {"start_line": 1302, "start_character": 53, "end_line": 1302, "end_character": 74}, "in_reply_to": "5f7c97a3_d0532a15", "updated": "2018-07-05 12:07:12.000000000", "message": "There still have so many other code about added the microversion in CLI parameter, the better way is to change all of those if we will use 'start_version'.", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, "change_message_id": "0e4f232f60de41acb3b3fe966ed5b798a55f603e", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_109c42be", "line": 1317, "range": {"start_line": 1317, "start_character": 64, "end_line": 1317, "end_character": 68}, "updated": "2018-06-12 12:44:09.000000000", "message": "2.44?", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "83c7d264f0f2bc12ab23c3bfb86f405a9d7af280", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_4ccfa327", "line": 1317, "range": {"start_line": 1317, "start_character": 64, "end_line": 1317, "end_character": 68}, "in_reply_to": "5f7c97a3_109c42be", "updated": "2018-07-05 12:07:12.000000000", "message": "The 2.44 is another feature.", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 23083, "name": "TommyLike", "email": "tommylikehu@gmail.com", "username": "TommyLike"}, "change_message_id": "0e4f232f60de41acb3b3fe966ed5b798a55f603e", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_90ddb271", "line": 1322, "range": {"start_line": 1322, "start_character": 44, "end_line": 1322, "end_character": 57}, "updated": "2018-06-12 12:44:09.000000000", "message": "do we need to valid this parameter whether it's in our expected range (1-200)?", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "83c7d264f0f2bc12ab23c3bfb86f405a9d7af280", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_ecd78fbf", "line": 1322, "range": {"start_line": 1322, "start_character": 44, "end_line": 1322, "end_character": 57}, "in_reply_to": "5f7c97a3_90ddb271", "updated": "2018-07-05 12:07:12.000000000", "message": "Done", "commit_id": "a4f08c50a3e6f8856be45a0eee04c356321c3c41"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e3689148cc0cad73effdbfbb59a988a800a2416e", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_5942873d", "line": 1301, "range": {"start_line": 1301, "start_character": 68, "end_line": 1301, "end_character": 69}, "updated": "2018-07-11 23:15:24.000000000", "message": "Space", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "33c4e153323b16450e6548440927554a261c3d67", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_ea7ecae1", "line": 1301, "range": {"start_line": 1301, "start_character": 68, "end_line": 1301, "end_character": 69}, "in_reply_to": "5f7c97a3_5942873d", "updated": "2018-07-16 09:28:25.000000000", "message": "Done", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e3689148cc0cad73effdbfbb59a988a800a2416e", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_199bafc8", "line": 1317, "range": {"start_line": 1317, "start_character": 12, "end_line": 1317, "end_character": 70}, "updated": "2018-07-11 23:15:24.000000000", "message": "min version is the first parameter. Please fix, and add a test for this condition", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "33c4e153323b16450e6548440927554a261c3d67", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_a3231d06", "line": 1317, "range": {"start_line": 1317, "start_character": 12, "end_line": 1317, "end_character": 70}, "in_reply_to": "5f7c97a3_199bafc8", "updated": "2018-07-16 09:28:25.000000000", "message": "Done", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e3689148cc0cad73effdbfbb59a988a800a2416e", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_79a983dc", "line": 1324, "range": {"start_line": 1324, "start_character": 0, "end_line": 1324, "end_character": 0}, "updated": "2018-07-11 23:15:24.000000000", "message": "No access_update?", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "33c4e153323b16450e6548440927554a261c3d67", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_2ac36208", "line": 1324, "range": {"start_line": 1324, "start_character": 0, "end_line": 1324, "end_character": 0}, "in_reply_to": "5f7c97a3_79a983dc", "updated": "2018-07-16 09:28:25.000000000", "message": "Done", "commit_id": "7fd9c9902bf8935ec8d83b7132168030fe57160e"}]}}, "openstack%2Fmanila~master~I06960f5a59929dd233068ff262dd810194c5a85c": {"owner_id": 15100, "owner_name": "zhongjun", "owner_email": "jun.zhongjun2@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13984, "name": "zhongjun", "username": "zhongjun", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, {"value": -1, "date": "2018-12-13 15:37:31.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24863, "name": "Veritas Access CI", "email": "DL-VTAS-ENG-SDIO-Access-Opensource@veritas.com", "username": "vtas-access-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "3ab3df30dd6c70ae2dcae24861300fe339decee4", "unresolved": false, "patch_set": 28, "id": "3f79a3b5_f3fa83bf", "line": 9, "updated": "2018-12-13 12:05:12.000000000", "message": "Could you elaborate *why* we want this please?\nA commit msg is the perfect place for that.", "commit_id": "16eab0ad63f5819e0411b43332d8308baaccc99d"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "d9e2e186f826a852419d3ae9e2557dc9314077a8", "unresolved": false, "patch_set": 28, "id": "3f79a3b5_53cd7759", "line": 9, "in_reply_to": "3f79a3b5_f3fa83bf", "updated": "2018-12-13 12:20:27.000000000", "message": "Done", "commit_id": "16eab0ad63f5819e0411b43332d8308baaccc99d"}], "manila/api/common.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_c2a8dc8d", "line": 396, "range": {"start_line": 396, "start_character": 22, "end_line": 396, "end_character": 25}, "updated": "2018-06-05 09:50:37.000000000", "message": "Set as a constant in the code (e.g. DEFAULT_ACCESS_PRIORITY) instead of using as a magic number which will be hard to trace in later revisions of the code.", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_840cde42", "line": 396, "range": {"start_line": 396, "start_character": 22, "end_line": 396, "end_character": 25}, "in_reply_to": "5f7c97a3_c2a8dc8d", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_c281bcfd", "line": 403, "range": {"start_line": 403, "start_character": 21, "end_line": 403, "end_character": 70}, "updated": "2018-06-05 09:50:37.000000000", "message": "\"Priority values are only supported in the range 1 ~ 200.\"\nAlso, 1 and 200 should be constants and referred here by string formatting, for easier manipulation in the future.", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_a4079a1d", "line": 403, "range": {"start_line": 403, "start_character": 21, "end_line": 403, "end_character": 70}, "in_reply_to": "5f7c97a3_c281bcfd", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_04e7f710", "line": 400, "range": {"start_line": 398, "start_character": 11, "end_line": 400, "end_character": 50}, "updated": "2018-06-27 00:20:28.000000000", "message": "Hmm, don't you want to be setting the priority to the default when not provided?\n\n\n    access_data['priority'] = int(access_data['priority'] or\n                                   constants.DEFAULT_ACCESS_PRIORITY)\n    access_priority = access_data['priority']\n\n\n    if not (access_priority >= constants.MIN_ACCESS_PRIORITY and\n            access_priority <= constants.MAX_ACCESS_PRIORITY)", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_326c909c", "line": 400, "range": {"start_line": 398, "start_character": 11, "end_line": 400, "end_character": 50}, "in_reply_to": "5f7c97a3_04e7f710", "updated": "2018-06-30 03:29:44.000000000", "message": "This function only check weather the access priority value is\n validate.\n For update access API, they don't want to set the default \npriority value (constants.DEFAULT_ACCESS_PRIORITY).  The \ndefault value should be None if the request API doesn't have\n 'priority'.\nthey just want to check weather the access priority value is \nright if the request API have the 'priority' value.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_84978739", "line": 401, "range": {"start_line": 401, "start_character": 25, "end_line": 401, "end_character": 65}, "updated": "2018-06-27 00:20:28.000000000", "message": "Access rule priority can only be in range:", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_b231800d", "line": 401, "range": {"start_line": 401, "start_character": 25, "end_line": 401, "end_character": 65}, "in_reply_to": "5f7c97a3_84978739", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_04bcd7b2", "line": 409, "range": {"start_line": 406, "start_character": 0, "end_line": 409, "end_character": 63}, "updated": "2018-06-27 00:20:28.000000000", "message": "This is not backwards compatible; you should probably just log a warning... With this change, you're introducing an error message to API versions < 2.45.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_243eb328", "line": 409, "range": {"start_line": 409, "start_character": 0, "end_line": 409, "end_character": 63}, "updated": "2018-06-27 00:20:28.000000000", "message": "When you're done validating, return the access_priority back to the calling method", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_dd43edaf", "line": 409, "range": {"start_line": 406, "start_character": 0, "end_line": 409, "end_character": 63}, "in_reply_to": "5f7c97a3_04bcd7b2", "updated": "2018-06-30 03:29:44.000000000", "message": "If we don't raise error when the request have the 'priority' and the version < 2.45, the user may thought the priority value is work, but the actually the priority value doesn't work. I remember we discussed this in variy's patch and IRC meeting, the conclusion is we should raise the error.\n\nhttps://review.openstack.org/#/c/473464/11/manila/api/v2/quota_sets.py@94", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_5d791d80", "line": 409, "range": {"start_line": 409, "start_character": 0, "end_line": 409, "end_character": 63}, "in_reply_to": "5f7c97a3_243eb328", "updated": "2018-06-30 03:29:44.000000000", "message": "This function only check weather the access priority value is\n validate. above", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d248c45bb4735d70b262233ad4830782376d4b47", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_3b50e45f", "line": 409, "range": {"start_line": 406, "start_character": 0, "end_line": 409, "end_character": 63}, "in_reply_to": "5f7c97a3_dd43edaf", "updated": "2018-07-11 20:48:37.000000000", "message": "The conclusion was not to raise an error arbitrarily per API field. This is supposed to be handled by strict JSON schema validation - which is a parallel effort; if the behavior of the older API is to ignore extra keys, that behavior should be preserved until we can fix the APIs. See the discussion here:\n\n\nhttp://eavesdrop.openstack.org/meetings/manila/2017/manila.2017-07-13-15.00.log.txt", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_dbef7084", "line": 408, "range": {"start_line": 407, "start_character": 11, "end_line": 408, "end_character": 46}, "updated": "2018-07-11 21:37:00.000000000", "message": "double validation? https://review.openstack.org/#/c/572283/3..9/manila/api/v1/shares.py@404", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_1f2b8fea", "line": 408, "range": {"start_line": 407, "start_character": 11, "end_line": 408, "end_character": 46}, "in_reply_to": "5f7c97a3_dbef7084", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}], "manila/api/openstack/api_version_request.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_849d470a", "line": 118, "range": {"start_line": 118, "start_character": 13, "end_line": 118, "end_character": 55}, "updated": "2018-06-27 00:20:28.000000000", "message": "This version also adds an API to update access rules, and an API to list access rules", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_3daa211a", "line": 118, "range": {"start_line": 118, "start_character": 13, "end_line": 118, "end_character": 55}, "in_reply_to": "5f7c97a3_849d470a", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 17, "id": "5f7c97a3_0a74c736", "line": 123, "range": {"start_line": 122, "start_character": 67, "end_line": 123, "end_character": 26}, "updated": "2018-07-24 03:48:38.000000000", "message": "update access rules, and added sorting, filtering and pagination support to the GET /share-access-rules API", "commit_id": "650a54003a7d6545c94e7f6871b3edf1619b2482"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_08b83376", "line": 123, "range": {"start_line": 122, "start_character": 67, "end_line": 123, "end_character": 26}, "updated": "2018-07-24 03:48:38.000000000", "message": "update access rules, and added sorting, filtering and pagination support to the GET /share-access-rules API", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_866ad8e9", "line": 123, "range": {"start_line": 122, "start_character": 67, "end_line": 123, "end_character": 26}, "in_reply_to": "5f7c97a3_08b83376", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/api/openstack/rest_api_version_history.rst": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_2488f3c3", "line": 248, "range": {"start_line": 248, "start_character": 0, "end_line": 248, "end_character": 44}, "updated": "2018-06-27 00:20:28.000000000", "message": "+ new API to update access rules and new API to list access rules", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_f8def768", "line": 248, "range": {"start_line": 248, "start_character": 0, "end_line": 248, "end_character": 44}, "in_reply_to": "5f7c97a3_2488f3c3", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 17, "id": "5f7c97a3_8a8d372b", "line": 255, "range": {"start_line": 254, "start_character": 56, "end_line": 255, "end_character": 15}, "updated": "2018-07-24 03:48:38.000000000", "message": "update access rules, and added sorting, filtering and pagination support to the GET /share-access-rules API", "commit_id": "650a54003a7d6545c94e7f6871b3edf1619b2482"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_c8b1db93", "line": 255, "range": {"start_line": 254, "start_character": 56, "end_line": 255, "end_character": 15}, "updated": "2018-07-24 03:48:38.000000000", "message": "update access rules, and added sorting, filtering and pagination support to the GET /share-access-rules API", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_267184e0", "line": 255, "range": {"start_line": 254, "start_character": 56, "end_line": 255, "end_character": 15}, "in_reply_to": "5f7c97a3_c8b1db93", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/api/v1/shares.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_44cbaf48", "line": 403, "range": {"start_line": 403, "start_character": 0, "end_line": 403, "end_character": 51}, "updated": "2018-06-27 00:20:28.000000000", "message": "move logic to validate_access_priority method and use the constant defined.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_d8721b4b", "line": 403, "range": {"start_line": 403, "start_character": 0, "end_line": 403, "end_character": 51}, "in_reply_to": "5f7c97a3_44cbaf48", "updated": "2018-06-30 03:29:44.000000000", "message": "The different logic have different default value. The default value is 100 in create access API, The default value is None in update access API. It cloud also have the other logic in some thing else, so it cloud be more clear to not add this logic in validate_access_priority.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_d57b4b77", "line": 406, "range": {"start_line": 406, "start_character": 8, "end_line": 406, "end_character": 52}, "updated": "2018-10-11 13:09:30.000000000", "message": "no need to validate if you pop it, you could add this to an else clause above.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_833433fc", "line": 406, "range": {"start_line": 406, "start_character": 8, "end_line": 406, "end_character": 52}, "in_reply_to": "3f79a3b5_d57b4b77", "updated": "2018-10-18 03:09:27.000000000", "message": "Done", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}], "manila/api/v2/router.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_e443dbae", "line": 434, "range": {"start_line": 428, "start_character": 0, "end_line": 434, "end_character": 30}, "updated": "2018-06-27 00:20:28.000000000", "message": "remove?", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_988a6311", "line": 434, "range": {"start_line": 428, "start_character": 0, "end_line": 434, "end_character": 30}, "in_reply_to": "5f7c97a3_e443dbae", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_48a5cb47", "line": 427, "range": {"start_line": 427, "start_character": 20, "end_line": 427, "end_character": 37}, "updated": "2018-07-24 03:48:38.000000000", "message": "nit: double quotes for consistency with above", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_0676c8d6", "line": 427, "range": {"start_line": 427, "start_character": 20, "end_line": 427, "end_character": 37}, "in_reply_to": "5f7c97a3_48a5cb47", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/api/v2/share_accesses.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_9f835256", "line": 41, "range": {"start_line": 40, "start_character": 0, "end_line": 41, "end_character": 36}, "updated": "2018-06-27 00:20:28.000000000", "message": "This needs a new policy under manila/policy", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_4c72cce6", "line": 41, "range": {"start_line": 40, "start_character": 0, "end_line": 41, "end_character": 36}, "in_reply_to": "5f7c97a3_9f835256", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_9f3031a0", "line": 61, "range": {"start_line": 60, "start_character": 0, "end_line": 61, "end_character": 73}, "updated": "2018-06-27 00:20:28.000000000", "message": "You don't actually process the update on the share backend?", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_1b7f1167", "line": 61, "range": {"start_line": 60, "start_character": 0, "end_line": 61, "end_character": 73}, "in_reply_to": "5f7c97a3_9f3031a0", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_df8c6a81", "line": 73, "range": {"start_line": 71, "start_character": 0, "end_line": 73, "end_character": 25}, "updated": "2018-06-27 00:20:28.000000000", "message": "This needs a new default policy under manila/policy/ -> It must use the same default as the older one: \"share:access_get_all\"", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_0c037412", "line": 73, "range": {"start_line": 71, "start_character": 0, "end_line": 73, "end_character": 25}, "in_reply_to": "5f7c97a3_df8c6a81", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_bf7baef1", "line": 80, "range": {"start_line": 79, "start_character": 0, "end_line": 80, "end_character": 54}, "updated": "2018-06-27 00:20:28.000000000", "message": "Pagination should be implemented as well, with `limit` and `offset`..", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_7f6bd6ee", "line": 80, "range": {"start_line": 80, "start_character": 48, "end_line": 80, "end_character": 52}, "updated": "2018-06-27 00:20:28.000000000", "message": "The sort direction should be \"asc\"", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_8c41c466", "line": 80, "range": {"start_line": 80, "start_character": 48, "end_line": 80, "end_character": 52}, "in_reply_to": "5f7c97a3_7f6bd6ee", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_00033512", "line": 80, "range": {"start_line": 79, "start_character": 0, "end_line": 80, "end_character": 54}, "in_reply_to": "5f7c97a3_bf7baef1", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_5fc7fa98", "line": 83, "range": {"start_line": 83, "start_character": 25, "end_line": 83, "end_character": 33}, "updated": "2018-06-27 00:20:28.000000000", "message": "Unless the resource ID is part of the endpoint, NotFound isn't an appropriate response. Replace with BadRequest", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_2f15023e", "line": 83, "range": {"start_line": 83, "start_character": 25, "end_line": 83, "end_character": 33}, "in_reply_to": "5f7c97a3_5fc7fa98", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_ffb5a619", "line": 84, "range": {"start_line": 84, "start_character": 21, "end_line": 84, "end_character": 40}, "updated": "2018-06-27 00:20:28.000000000", "message": "What if share_id is not present in the query?", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_a09fe100", "line": 84, "range": {"start_line": 84, "start_character": 21, "end_line": 84, "end_character": 40}, "in_reply_to": "5f7c97a3_ffb5a619", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "f6104e058d8a0536f3892f74996617a001cd8236", "unresolved": false, "patch_set": 5, "id": "5f7c97a3_106d7ecb", "line": 55, "range": {"start_line": 55, "start_character": 21, "end_line": 55, "end_character": 56}, "updated": "2018-07-18 22:13:58.000000000", "message": "Suggest: \"The 'priority' field is not set.\"", "commit_id": "246f491fd063cb0d01b3ef17a12b0a3cb35cc7d6"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "f6104e058d8a0536f3892f74996617a001cd8236", "unresolved": false, "patch_set": 5, "id": "5f7c97a3_707632a6", "line": 80, "range": {"start_line": 80, "start_character": 24, "end_line": 80, "end_character": 51}, "updated": "2018-07-18 22:13:58.000000000", "message": "\"The 'share id' field is not set.\"", "commit_id": "246f491fd063cb0d01b3ef17a12b0a3cb35cc7d6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_d6d18758", "line": 43, "range": {"start_line": 43, "start_character": 8, "end_line": 43, "end_character": 14}, "updated": "2018-07-11 21:37:00.000000000", "message": "@wsgi.response(202)", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_624c683f", "line": 43, "range": {"start_line": 43, "start_character": 8, "end_line": 43, "end_character": 14}, "in_reply_to": "5f7c97a3_d6d18758", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_36d79b53", "line": 55, "range": {"start_line": 53, "start_character": 0, "end_line": 55, "end_character": 53}, "updated": "2018-07-11 21:37:00.000000000", "message": "The implementation in PS3 was correct, if no updates, just return 200 - what if we add different updatable fields? 'priority' wouldn't always need to be updated then\n\n\nif no fields are updated, you can return webob.Response(status_int=http_client.OK)", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_ff46d37e", "line": 55, "range": {"start_line": 53, "start_character": 0, "end_line": 55, "end_character": 53}, "in_reply_to": "5f7c97a3_36d79b53", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_769f53b3", "line": 95, "range": {"start_line": 95, "start_character": 35, "end_line": 95, "end_character": 50}, "updated": "2018-07-11 21:37:00.000000000", "message": "ID is required to retrieve access rules", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_3f544b22", "line": 95, "range": {"start_line": 95, "start_character": 35, "end_line": 95, "end_character": 50}, "in_reply_to": "5f7c97a3_769f53b3", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_7318bccc", "line": 48, "range": {"start_line": 45, "start_character": 4, "end_line": 48, "end_character": 36}, "updated": "2018-07-24 03:58:57.000000000", "message": "This method is not unit-tested", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_44c25c04", "line": 48, "range": {"start_line": 45, "start_character": 4, "end_line": 48, "end_character": 36}, "in_reply_to": "5f7c97a3_7318bccc", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_c83f9bdd", "line": 59, "range": {"start_line": 56, "start_character": 0, "end_line": 59, "end_character": 60}, "updated": "2018-07-24 03:48:38.000000000", "message": "what is this code meant to do?", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_614aea82", "line": 59, "range": {"start_line": 56, "start_character": 0, "end_line": 59, "end_character": 60}, "in_reply_to": "5f7c97a3_c83f9bdd", "updated": "2018-07-26 08:52:53.000000000", "message": "This means we have to set one of the update parameter in request API. If we don't set any available update parameter, we will just return ok and don't need to go to next step.", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_6850c72d", "line": 99, "range": {"start_line": 99, "start_character": 47, "end_line": 99, "end_character": 58}, "updated": "2018-07-24 03:48:38.000000000", "message": "The default must be None, \"share_id\" is the same for all access rules of a given share, it makes no sense to default to this value.", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_f12fc886", "line": 99, "range": {"start_line": 99, "start_character": 47, "end_line": 99, "end_character": 58}, "in_reply_to": "5f7c97a3_6850c72d", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_d37c30ec", "line": 106, "range": {"start_line": 104, "start_character": 0, "end_line": 106, "end_character": 63}, "updated": "2018-07-24 03:58:57.000000000", "message": "same as line 90?", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_fc16b84a", "line": 106, "range": {"start_line": 104, "start_character": 0, "end_line": 106, "end_character": 63}, "in_reply_to": "5f7c97a3_d37c30ec", "updated": "2018-07-26 08:52:53.000000000", "message": "Code line 90 only check if the 'share_id' exist in search_opts. But it the search_opts value could be {'share_id': None}, so this check if the share_id value is None.", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_b5f80f7e", "line": 49, "range": {"start_line": 49, "start_character": 11, "end_line": 49, "end_character": 17}, "updated": "2018-10-11 13:09:30.000000000", "message": "Update", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_631b1784", "line": 49, "range": {"start_line": 49, "start_character": 11, "end_line": 49, "end_character": 17}, "in_reply_to": "3f79a3b5_b5f80f7e", "updated": "2018-10-18 03:09:27.000000000", "message": "Done", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_f55e8777", "line": 57, "range": {"start_line": 57, "start_character": 15, "end_line": 57, "end_character": 64}, "updated": "2018-10-11 13:09:30.000000000", "message": "you are using \"access_data\", for the loop and for the check, is this correct?  I believe you should use a pre-defined list of fields that should exist", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_23251fc0", "line": 57, "range": {"start_line": 57, "start_character": 15, "end_line": 57, "end_character": 64}, "in_reply_to": "3f79a3b5_f55e8777", "updated": "2018-10-18 03:09:27.000000000", "message": "Yeah, this is weird", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_3043ad42", "line": 64, "range": {"start_line": 64, "start_character": 38, "end_line": 64, "end_character": 51}, "updated": "2018-10-11 13:09:30.000000000", "message": "this is where it starts getting semantically confusing. If you intend to only update the priority, this should be named update_access_priority. I see in share/api.py that you are only using \"{'priority': priority}\" but now we also have all the mechanisms in place to update the access_value, access-type if we want to. I think we should discuss in a weekly meeting whether we intend to be this restrictive (only the priority) or allow other fields to be update, so we can properly name those methods.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_86020108", "line": 64, "range": {"start_line": 64, "start_character": 38, "end_line": 64, "end_character": 51}, "in_reply_to": "3f79a3b5_3043ad42", "updated": "2018-10-18 03:09:27.000000000", "message": "I'd say according to the design scope, we should strict to only update priority first, and we can do other things latter if needed.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "1e509baa446ccf27266c1a6ffb678c2a726b9fe3", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_ed262968", "line": 64, "range": {"start_line": 64, "start_character": 38, "end_line": 64, "end_character": 51}, "in_reply_to": "3f79a3b5_86020108", "updated": "2018-10-18 14:19:28.000000000", "message": "Agreed, this was discussed in the weekly meeting. We will revisit this later for another spec. \n\nhttp://eavesdrop.openstack.org/meetings/manila/2018/manila.2018-10-11-15.01.log.html#l-111", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "1cc5f30abd6a9bcb8f2aa062c38623e311f8b8bf", "unresolved": false, "patch_set": 23, "id": "3f79a3b5_5856c860", "line": 60, "range": {"start_line": 60, "start_character": 25, "end_line": 60, "end_character": 65}, "updated": "2018-10-22 07:16:46.000000000", "message": "Please rephrase this warning message. It should be something like:\n\"Field 'priority' has not been set in request data\"\nmaybe?", "commit_id": "80c19d9390000b51442c58ce5796a752180dfe18"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "bce432ccf7b9de4f41e704e0577a956e16ffa1be", "unresolved": false, "patch_set": 29, "id": "3f79a3b5_8d3e8b25", "line": 106, "updated": "2018-12-13 15:37:31.000000000", "message": "This is already checked in line 92", "commit_id": "74ff39e077af5d2a8ee3b5be64cda15f9124bac5"}], "manila/api/views/share_access_metadata.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_736d1c2e", "updated": "2018-07-24 03:58:57.000000000", "message": "Re-introduced by accident?", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_5f731e50", "in_reply_to": "5f7c97a3_736d1c2e", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/api/views/share_accesses.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_02db3421", "line": 73, "range": {"start_line": 73, "start_character": 42, "end_line": 73, "end_character": 46}, "updated": "2018-06-05 09:50:37.000000000", "message": "Isn't that supposed to be 2.45? Not familiar with that too much, but I'm basing that on your other changes related to micro-versions.", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_18011205", "line": 73, "range": {"start_line": 73, "start_character": 42, "end_line": 73, "end_character": 46}, "in_reply_to": "5f7c97a3_02db3421", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_48014b07", "line": 86, "range": {"start_line": 86, "start_character": 34, "end_line": 86, "end_character": 56}, "updated": "2018-07-24 03:48:38.000000000", "message": "access['priority']", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_fc8b1866", "line": 86, "range": {"start_line": 86, "start_character": 34, "end_line": 86, "end_character": 56}, "in_reply_to": "5f7c97a3_48014b07", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/db/api.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_732c3c93", "line": 437, "range": {"start_line": 437, "start_character": 36, "end_line": 437, "end_character": 69}, "updated": "2018-07-24 03:48:38.000000000", "message": "pass kwargs as kwargs", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_1c87f45d", "line": 437, "range": {"start_line": 437, "start_character": 36, "end_line": 437, "end_character": 69}, "in_reply_to": "5f7c97a3_732c3c93", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/db/migrations/alembic/versions/26326cf8s2d_add_access_priority.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_e2e958b7", "line": 36, "range": {"start_line": 36, "start_character": 70, "end_line": 36, "end_character": 73}, "updated": "2018-06-05 09:50:37.000000000", "message": "If this file was not generated automatically (not sure): the same comment as in api/common.py - please use a constant for this value (the same one).", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_f82696ba", "line": 36, "range": {"start_line": 36, "start_character": 70, "end_line": 36, "end_character": 73}, "in_reply_to": "5f7c97a3_e2e958b7", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_0204947d", "line": 42, "range": {"start_line": 42, "start_character": 67, "end_line": 42, "end_character": 70}, "updated": "2018-06-05 09:50:37.000000000", "message": "Same comment :)", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_b8201e9d", "line": 42, "range": {"start_line": 42, "start_character": 67, "end_line": 42, "end_character": 70}, "in_reply_to": "5f7c97a3_0204947d", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "f6104e058d8a0536f3892f74996617a001cd8236", "unresolved": false, "patch_set": 5, "id": "5f7c97a3_305afaf1", "line": 20, "range": {"start_line": 20, "start_character": 0, "end_line": 20, "end_character": 39}, "updated": "2018-07-18 22:13:58.000000000", "message": "?", "commit_id": "246f491fd063cb0d01b3ef17a12b0a3cb35cc7d6"}], "manila/db/sqlalchemy/api.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_7f0435c6", "line": 2073, "range": {"start_line": 2073, "start_character": 28, "end_line": 2073, "end_character": 32}, "updated": "2018-06-27 00:20:28.000000000", "message": "'asc'", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_20df5167", "line": 2073, "range": {"start_line": 2073, "start_character": 28, "end_line": 2073, "end_character": 32}, "in_reply_to": "5f7c97a3_7f0435c6", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_3f0a3dd0", "line": 2084, "range": {"start_line": 2084, "start_character": 17, "end_line": 2084, "end_character": 30}, "updated": "2018-06-27 00:20:28.000000000", "message": "Invalid sort", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_40c12d81", "line": 2084, "range": {"start_line": 2084, "start_character": 17, "end_line": 2084, "end_character": 30}, "in_reply_to": "5f7c97a3_3f0a3dd0", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_164cdf3d", "line": 2131, "range": {"start_line": 2131, "start_character": 28, "end_line": 2131, "end_character": 36}, "updated": "2018-07-11 21:37:00.000000000", "message": "? the share_id will always be the same, shouldn't we order on 'priority' by default", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_42e12c2b", "line": 2131, "range": {"start_line": 2131, "start_character": 28, "end_line": 2131, "end_character": 36}, "in_reply_to": "5f7c97a3_164cdf3d", "updated": "2018-07-12 05:16:09.000000000", "message": "Because the 'share_id' is the original key for order, the 'priority' is added at version 2.45. So we could just keep the original sort key in db api. We don't have microversion in db api, if we set default value to 'priority', the db test for prior db version will get error when the test use \"share_access_get_all_for_share\" function, because it doesn't have 'priority' in prior db version.", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "1e4efe95b837b1ef06e8a4f8325b82cdb5b7c056", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_ed138964", "line": 2131, "range": {"start_line": 2131, "start_character": 28, "end_line": 2131, "end_character": 36}, "in_reply_to": "5f7c97a3_42e12c2b", "updated": "2018-07-12 05:17:50.000000000", "message": "Sure, but share_id will be the same for all access rules of a share, sorting on that key should do nothing deterministic..", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "97eddbe9220c6aa113c1ea8271147b24b0332266", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_e8837702", "line": 2131, "range": {"start_line": 2131, "start_character": 28, "end_line": 2131, "end_character": 36}, "in_reply_to": "5f7c97a3_ed138964", "updated": "2018-07-12 06:04:50.000000000", "message": "The sort_key value is set to original value \"share_id\", because the default value just use to decide witch attr(attr = getattr(models.ShareAccessMapping, sort_key)) to sort. \nSo even if the same for all access rules of share, I just set default sort_key to \"share_id\" in the beginning.\nIs it OK? Should I set default value in code line 2146 or is there a better way to solve it?\n\n```\nif sort_dir.lower() == 'desc':\n        query = query.order_by(attr.desc())\n    elif sort_dir.lower() == 'asc':\n        query = query.order_by(attr.asc())\n```", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_765433c7", "line": 2148, "range": {"start_line": 2148, "start_character": 17, "end_line": 2148, "end_character": 30}, "updated": "2018-07-11 21:37:00.000000000", "message": "Invalid sort", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_5f26e7cd", "line": 2148, "range": {"start_line": 2148, "start_character": 17, "end_line": 2148, "end_character": 30}, "in_reply_to": "5f7c97a3_765433c7", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_b33734dc", "line": 2128, "range": {"start_line": 2128, "start_character": 15, "end_line": 2128, "end_character": 37}, "updated": "2018-07-24 03:48:38.000000000", "message": "not necessary", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_ff71ca46", "line": 2128, "range": {"start_line": 2128, "start_character": 15, "end_line": 2128, "end_character": 37}, "in_reply_to": "5f7c97a3_b33734dc", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_137068a7", "line": 2160, "range": {"start_line": 2147, "start_character": 0, "end_line": 2160, "end_character": 48}, "updated": "2018-07-24 03:48:38.000000000", "message": "if sort_key is not None:\n  ...", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_f35a8c80", "line": 2160, "range": {"start_line": 2147, "start_character": 0, "end_line": 2160, "end_character": 48}, "in_reply_to": "5f7c97a3_137068a7", "updated": "2018-07-24 03:58:57.000000000", "message": "Also: This section has not been unit-tested", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_1f6da666", "line": 2160, "range": {"start_line": 2147, "start_character": 0, "end_line": 2160, "end_character": 48}, "in_reply_to": "5f7c97a3_137068a7", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_1a71340e", "line": 2160, "range": {"start_line": 2147, "start_character": 0, "end_line": 2160, "end_character": 48}, "in_reply_to": "5f7c97a3_f35a8c80", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_f3cfec25", "line": 2330, "range": {"start_line": 2320, "start_character": 0, "end_line": 2330, "end_character": 27}, "updated": "2018-07-24 03:58:57.000000000", "message": "not unit-tested", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_8129469d", "line": 2330, "range": {"start_line": 2320, "start_character": 0, "end_line": 2330, "end_character": 27}, "in_reply_to": "5f7c97a3_f3cfec25", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "ed06fd0a360bcd9e2a4f28c7888d79ff06fc9d53", "unresolved": false, "patch_set": 20, "id": "5f7c97a3_10557ec2", "line": 2146, "range": {"start_line": 2145, "start_character": 4, "end_line": 2146, "end_character": 28}, "updated": "2018-07-26 07:07:49.000000000", "message": "IMHO maybe it's better to handle the \"simpler\" case where sort_key IS None, and then return query.all(), otherwise (no else required) handle everything that's inside the if. I think it will be somewhat easier to read and maintain. What I mean:\nif sort_key is None:\n    query = ...\n    return query.all()\n\ntry:\n    ....\n.\n.\n.\nquery = ...\nreturn query.all()", "commit_id": "c5949a350cddc800acfd615331461d5af40c4d43"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 20, "id": "5f7c97a3_76294aef", "line": 2146, "range": {"start_line": 2145, "start_character": 4, "end_line": 2146, "end_character": 28}, "in_reply_to": "5f7c97a3_10557ec2", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "c5949a350cddc800acfd615331461d5af40c4d43"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_7047e51f", "line": 2133, "range": {"start_line": 2133, "start_character": 37, "end_line": 2133, "end_character": 48}, "updated": "2018-10-11 13:09:30.000000000", "message": "why are we filtering only based on priority? I don't see much value on this", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_c646b957", "line": 2133, "range": {"start_line": 2133, "start_character": 37, "end_line": 2133, "end_character": 48}, "in_reply_to": "3f79a3b5_7047e51f", "updated": "2018-10-18 03:09:27.000000000", "message": "what do you mean by \"only based on priority\"? share_id will always be in the filters, see line 2131", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "1e509baa446ccf27266c1a6ffb678c2a726b9fe3", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_eddb894b", "line": 2133, "range": {"start_line": 2133, "start_character": 37, "end_line": 2133, "end_character": 48}, "in_reply_to": "3f79a3b5_c646b957", "updated": "2018-10-18 14:19:28.000000000", "message": "We could filter by other fields as well. We discussed this in a weekly meeting and the atendees think it is a good idea if it is not a lot of additional work. See http://eavesdrop.openstack.org/meetings/manila/2018/manila.2018-10-11-15.01.log.html#l-145\n\nA user could filter by access rule value, or by access_type, or by access level.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}], "manila/db/sqlalchemy/models.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_0229f4f0", "line": 555, "range": {"start_line": 555, "start_character": 55, "end_line": 555, "end_character": 58}, "updated": "2018-06-05 09:50:37.000000000", "message": "Same comment about the constant.", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_d8239aa6", "line": 555, "range": {"start_line": 555, "start_character": 55, "end_line": 555, "end_character": 58}, "in_reply_to": "5f7c97a3_0229f4f0", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}], "manila/share/access.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_a2228000", "line": 377, "range": {"start_line": 375, "start_character": 8, "end_line": 377, "end_character": 66}, "updated": "2018-06-05 09:50:37.000000000", "message": "Try to avoid lambdas. operator.itemgetter is a neat solution for this case:\nhttps://docs.python.org/2/library/operator.html#operator.itemgetter\n\n(operator.itemgetter('priority') simply replaces the lambda expression).", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_98668255", "line": 377, "range": {"start_line": 375, "start_character": 8, "end_line": 377, "end_character": 66}, "in_reply_to": "5f7c97a3_a2228000", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_7312fcff", "line": 267, "range": {"start_line": 262, "start_character": 0, "end_line": 267, "end_character": 78}, "updated": "2018-07-24 03:48:38.000000000", "message": "This isn't safe. You're forcing a state change without checking if there are any access rules being applied at the moment;\n\n  \n\nThis means, if there are access rule operations in-flight, you wouldn't care, you'd cause the driver to pick up new rules too - this is the sort of thing we avoided by refactoring the access rules interface.\n\n \n\nRe-applying rules isn't the same as deleting all existing rules (which the code above forces) - you should leave the \"applying\" rules alone, and you shouldn't be setting \"denying\" rules to \"queued_to_apply\" - that will just cause the driver to reapply the rules!", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_bb4fcb8a", "line": 267, "range": {"start_line": 262, "start_character": 0, "end_line": 267, "end_character": 78}, "in_reply_to": "5f7c97a3_53dee0db", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_53dee0db", "line": 267, "range": {"start_line": 262, "start_character": 0, "end_line": 267, "end_character": 78}, "in_reply_to": "5f7c97a3_7312fcff", "updated": "2018-07-24 03:58:57.000000000", "message": "Also, this section was not unit-tested", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_9b544f24", "line": 267, "range": {"start_line": 262, "start_character": 0, "end_line": 267, "end_character": 78}, "in_reply_to": "5f7c97a3_7312fcff", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "6bb1d7aa0e2b0c0d3c1f5b895cbc4fc0840db11b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_705cc54b", "line": 381, "range": {"start_line": 379, "start_character": 8, "end_line": 381, "end_character": 74}, "updated": "2018-10-11 13:09:30.000000000", "message": "I am confused by the fact that you are not handling a standard way to prioritize individual rules vs network rules when they both the same priority. If drivers are going to remove their sorting, this kind of sorting needs to happen here", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "4529583ed164406242e5e0bd447ccbb7395e7151", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_4e88706a", "line": 381, "range": {"start_line": 379, "start_character": 8, "end_line": 381, "end_character": 74}, "in_reply_to": "3f79a3b5_4d715d45", "updated": "2018-10-18 17:52:03.000000000", "message": "According to the meeting discussion (http://eavesdrop.openstack.org/meetings/manila/2018/manila.2018-10-18-15.00.log.html#l-151) we don't want to prevent drivers to further reordering rules when it falls under the case of \"undefined\" behavior. So there is nothing to fix here. =)", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, "change_message_id": "1e509baa446ccf27266c1a6ffb678c2a726b9fe3", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_4d715d45", "line": 381, "range": {"start_line": 379, "start_character": 8, "end_line": 381, "end_character": 74}, "in_reply_to": "3f79a3b5_5c4cb8c8", "updated": "2018-10-18 14:19:28.000000000", "message": "I checked the spec, and it says in case conflicting rules have the same priority, the behavior will be undefined. I think this is ok, but I don't agree with the assumption that the behavior will be \"undefined, as it is today\" if we are proposing that drivers remove their ordering. Drivers that order rules today have deterministic behavior. If this ordering is removed, the behavior in that case will be different than it was and it could break deployments.\n\nI intend to discuss this at today's weekly meeting.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "f183da3b53c7a9d5ffe5c8313892f092654cc79b", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_8669a1c1", "line": 381, "range": {"start_line": 379, "start_character": 8, "end_line": 381, "end_character": 74}, "in_reply_to": "3f79a3b5_705cc54b", "updated": "2018-10-18 03:09:27.000000000", "message": "I will have to spend more time on understanding this", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}, {"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "5bc08918901df7f6378a009d7b325235a14b3dd4", "unresolved": false, "patch_set": 22, "id": "3f79a3b5_5c4cb8c8", "line": 381, "range": {"start_line": 379, "start_character": 8, "end_line": 381, "end_character": 74}, "in_reply_to": "3f79a3b5_8669a1c1", "updated": "2018-10-18 07:12:42.000000000", "message": "...later... Asked Zhong Jun, she said that there was a discussion before and the result was to handle the same priority case latter, so I'm going to leave this as is for now.", "commit_id": "7b50d837d2d9820210d339408adc67266f4ce7a4"}], "manila/share/api.py": [{"author": {"_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, "change_message_id": "44374b7250e92647cf7d3ecdcae6e87cb3d4841a", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_0277b40a", "line": 1601, "range": {"start_line": 1601, "start_character": 49, "end_line": 1601, "end_character": 52}, "updated": "2018-06-05 09:50:37.000000000", "message": "Same comment :)", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "ce3874f0d161879c5aae35d21dd1d1f9298001d9", "unresolved": false, "patch_set": 2, "id": "5f7c97a3_983a02c2", "line": 1601, "range": {"start_line": 1601, "start_character": 49, "end_line": 1601, "end_character": 52}, "in_reply_to": "5f7c97a3_0277b40a", "updated": "2018-06-08 07:38:58.000000000", "message": "Done", "commit_id": "6ffb38f3018225def57c52a76ac506383b05b951"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_76d75324", "line": 1649, "range": {"start_line": 1649, "start_character": 21, "end_line": 1649, "end_character": 55}, "updated": "2018-07-11 21:37:00.000000000", "message": "Access rule updates cannot be performed", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_3f020b0e", "line": 1649, "range": {"start_line": 1649, "start_character": 21, "end_line": 1649, "end_character": 55}, "in_reply_to": "5f7c97a3_76d75324", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_f6c36357", "line": 1658, "range": {"start_line": 1658, "start_character": 0, "end_line": 1658, "end_character": 66}, "updated": "2018-07-11 21:37:00.000000000", "message": "This will invoke update_access in the share manager, but there will be no rules to apply, because the rules could all have \"active\" or \"error\" statuses\n\nhttps://github.com/openstack/manila/blob/a1ba28c/manila/share/access.py#L274", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_ad1cb17b", "line": 1658, "range": {"start_line": 1658, "start_character": 0, "end_line": 1658, "end_character": 66}, "in_reply_to": "5f7c97a3_f6c36357", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "bb89ed34c16de65175305e414dcfcc5970c823dd", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_d3e3d09f", "line": 1662, "range": {"start_line": 1642, "start_character": 0, "end_line": 1662, "end_character": 27}, "updated": "2018-07-24 03:58:57.000000000", "message": "Not unit-tested", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_4771feaa", "line": 1662, "range": {"start_line": 1642, "start_character": 0, "end_line": 1662, "end_character": 27}, "in_reply_to": "5f7c97a3_d3e3d09f", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_f397ec38", "line": 1706, "range": {"start_line": 1706, "start_character": 41, "end_line": 1706, "end_character": 76}, "updated": "2018-07-24 03:48:38.000000000", "message": "pass kwargs as kwargs", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_dc5dfceb", "line": 1706, "range": {"start_line": 1706, "start_character": 41, "end_line": 1706, "end_character": 76}, "in_reply_to": "5f7c97a3_f397ec38", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_338ec426", "line": 1764, "range": {"start_line": 1763, "start_character": 15, "end_line": 1764, "end_character": 61}, "updated": "2018-07-24 03:48:38.000000000", "message": "revert this unrelated change", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_bc5a80f2", "line": 1764, "range": {"start_line": 1763, "start_character": 15, "end_line": 1764, "end_character": 61}, "in_reply_to": "5f7c97a3_338ec426", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "manila/tests/api/v2/test_share_accesses.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_33dc8416", "side": "PARENT", "line": 113, "range": {"start_line": 110, "start_character": 4, "end_line": 113, "end_character": 73}, "updated": "2018-07-24 03:48:38.000000000", "message": "why was this test removed?", "commit_id": "2b389ce1e19402e34dfad135719b5d26e11ff8b8"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_7c22a856", "side": "PARENT", "line": 113, "range": {"start_line": 110, "start_character": 4, "end_line": 113, "end_character": 73}, "in_reply_to": "5f7c97a3_33dc8416", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "2b389ce1e19402e34dfad135719b5d26e11ff8b8"}], "manila/tests/db/migrations/alembic/migrations_data_checks.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_9f9d91bc", "line": 2603, "range": {"start_line": 2603, "start_character": 49, "end_line": 2603, "end_character": 66}, "updated": "2018-06-27 00:20:28.000000000", "message": "Insert another rule with 'deleted' set to the rule_id", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_e02b99e7", "line": 2603, "range": {"start_line": 2603, "start_character": 49, "end_line": 2603, "end_character": 66}, "in_reply_to": "5f7c97a3_9f9d91bc", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_ff6845ba", "line": 2620, "range": {"start_line": 2620, "start_character": 59, "end_line": 2620, "end_character": 67}, "updated": "2018-06-27 00:20:28.000000000", "message": "you need all the rules", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_6037894d", "line": 2620, "range": {"start_line": 2620, "start_character": 59, "end_line": 2620, "end_character": 67}, "in_reply_to": "5f7c97a3_ff6845ba", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_ff3fe5b1", "line": 2622, "range": {"start_line": 2621, "start_character": 0, "end_line": 2622, "end_character": 57}, "updated": "2018-06-27 00:20:28.000000000", "message": "These asserts apply to all rules, not just ones that were inserted in this class, so don't filter by share_id here, filter by deleted not equals to 'False'.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_fffda608", "line": 2622, "range": {"start_line": 2622, "start_character": 35, "end_line": 2622, "end_character": 38}, "updated": "2018-06-27 00:20:28.000000000", "message": "constants.ACCESS_LEVEL_DEFAULT", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_a099216e", "line": 2622, "range": {"start_line": 2621, "start_character": 0, "end_line": 2622, "end_character": 57}, "in_reply_to": "5f7c97a3_ff3fe5b1", "updated": "2018-06-30 03:29:44.000000000", "message": "Done", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_a084c10c", "line": 2622, "range": {"start_line": 2622, "start_character": 35, "end_line": 2622, "end_character": 38}, "in_reply_to": "5f7c97a3_fffda608", "updated": "2018-06-30 03:29:44.000000000", "message": "For the test, we should use the actually number(100)? Because the constants.ACCESS_LEVEL_DEFAULT value could be set to a wrong number.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "961436106a9d25c43f53a81b5142bb322773ca53", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_5f6e19c8", "line": 2645, "range": {"start_line": 2624, "start_character": 0, "end_line": 2645, "end_character": 63}, "updated": "2018-06-27 00:20:28.000000000", "message": "this doesn't test the migration code", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "10e19ac862f34e8180c480473faa83af8e2d5200", "unresolved": false, "patch_set": 3, "id": "5f7c97a3_00fed5ae", "line": 2645, "range": {"start_line": 2624, "start_character": 0, "end_line": 2645, "end_character": 63}, "in_reply_to": "5f7c97a3_5f6e19c8", "updated": "2018-06-30 03:29:44.000000000", "message": "This test weather the new db is fine after migration.", "commit_id": "770e84fb29d3d1b777ec24e665384694d0563aea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_d6b747d7", "line": 2777, "range": {"start_line": 2777, "start_character": 0, "end_line": 2777, "end_character": 28}, "updated": "2018-07-11 21:37:00.000000000", "message": "better create a uuid", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_62146842", "line": 2777, "range": {"start_line": 2777, "start_character": 0, "end_line": 2777, "end_character": 28}, "in_reply_to": "5f7c97a3_d6b747d7", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_369d5b58", "line": 2781, "range": {"start_line": 2781, "start_character": 23, "end_line": 2781, "end_character": 35}, "updated": "2018-07-11 21:37:00.000000000", "message": "reuse uuid created above here", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_2228b083", "line": 2781, "range": {"start_line": 2781, "start_character": 23, "end_line": 2781, "end_character": 35}, "in_reply_to": "5f7c97a3_369d5b58", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_56757732", "line": 2800, "range": {"start_line": 2800, "start_character": 23, "end_line": 2800, "end_character": 30}, "updated": "2018-07-11 21:37:00.000000000", "message": "share_instance_access_data2_id\n\ncorresponding share_access_data has been marked deleted", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_823664e8", "line": 2800, "range": {"start_line": 2800, "start_character": 23, "end_line": 2800, "end_character": 30}, "in_reply_to": "5f7c97a3_56757732", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "b7455c50ceb77a2c57dbc373fd32f5780db082f8", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_b6008b6b", "line": 2841, "range": {"start_line": 2819, "start_character": 0, "end_line": 2841, "end_character": 63}, "updated": "2018-07-11 21:37:00.000000000", "message": "Add a comment above that you're testing that inserts work fine after an upgrade", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "62d95ba6ece96ca883e10f61f8108db0c28d6296", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_622d488e", "line": 2841, "range": {"start_line": 2819, "start_character": 0, "end_line": 2841, "end_character": 63}, "in_reply_to": "5f7c97a3_b6008b6b", "updated": "2018-07-12 05:16:09.000000000", "message": "Done", "commit_id": "519d75dda306333dac07f875aa7079537162f011"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "8ac00c8df3b7882a3539a6c9e92754d5364bcf4f", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_b3f09494", "line": 2871, "range": {"start_line": 2870, "start_character": 8, "end_line": 2871, "end_character": 65}, "updated": "2018-07-24 03:48:38.000000000", "message": "verify that the rules you inserted are still around", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}, {"author": {"_account_id": 15100, "name": "zhongjun", "email": "jun.zhongjun2@gmail.com", "username": "zhongjun2"}, "change_message_id": "357bdab92ed8d186b62a19cb3db8bdcddfc71b3c", "unresolved": false, "patch_set": 19, "id": "5f7c97a3_1ca1343b", "line": 2871, "range": {"start_line": 2870, "start_character": 8, "end_line": 2871, "end_character": 65}, "in_reply_to": "5f7c97a3_b3f09494", "updated": "2018-07-26 08:52:53.000000000", "message": "Done", "commit_id": "33c8afbca34284695346058f14ca90d6e3fa7e52"}], "releasenotes/notes/add-priority-for-access-rule-50df9923ae7f6658.yaml": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "bce432ccf7b9de4f41e704e0577a956e16ffa1be", "unresolved": false, "patch_set": 29, "id": "3f79a3b5_adf587cb", "line": 4, "updated": "2018-12-13 15:37:31.000000000", "message": "typo \"adn\"", "commit_id": "74ff39e077af5d2a8ee3b5be64cda15f9124bac5"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "bce432ccf7b9de4f41e704e0577a956e16ffa1be", "unresolved": false, "patch_set": 29, "id": "3f79a3b5_2dd8974f", "line": 9, "updated": "2018-12-13 15:37:31.000000000", "message": "just curious: How did you come up with 1-200?", "commit_id": "74ff39e077af5d2a8ee3b5be64cda15f9124bac5"}]}}, "opendev%2Fsystem-config~master~I04f225269ac31a4890f692c214e8ffb8878833aa": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 22:58:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 22:59:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~Ib69e21b4645cef71db07595019fac9af77fefaa1": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-04-17 10:09:09.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-04-17 10:09:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-04-17 10:09:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Foctavia~master~I61c7d8d4df54710a92b8c055be84bba29bf3d7e6": {"owner_id": 15309, "owner_name": "zhaobo", "owner_email": "bzhaojyathousandy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:40:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 2, "date": "2020-04-17 09:11:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octavia/api/root_controller.py": [{"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "efabcf3ff090bea92147314d626c5d056f3c991d", "unresolved": false, "patch_set": 14, "id": "bf3833fe_207aaa87", "line": 117, "range": {"start_line": 117, "start_character": 29, "end_line": 117, "end_character": 33}, "updated": "2020-04-10 17:27:08.000000000", "message": "2020", "commit_id": "77750d389bb576fad404463e18715d3dcd75d0fd"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a02ff347f84b3320e03f59e3187e04b425324622", "unresolved": false, "patch_set": 14, "id": "3f4c43b2_838f0022", "line": 117, "range": {"start_line": 117, "start_character": 29, "end_line": 117, "end_character": 33}, "in_reply_to": "bf3833fe_207aaa87", "updated": "2020-04-15 16:12:54.000000000", "message": "whoops :D", "commit_id": "77750d389bb576fad404463e18715d3dcd75d0fd"}], "octavia/api/v2/controllers/health_monitor.py": [{"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "f679a62c75e1366ab2bea38f93bc9728ba87d714", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_9439a5a3", "line": 171, "range": {"start_line": 168, "start_character": 8, "end_line": 171, "end_character": 73}, "updated": "2020-02-03 12:49:24.000000000", "message": "shouldn't we validate that method, url, and expected codes cannot be used for udp and tcp health monitor? and that method, url_path are correctly set for http health monitor?", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "42f37d17fef1231315cb85d8d4be91ee08305688", "unresolved": false, "patch_set": 7, "id": "1fa4df85_fb07f8c8", "line": 171, "range": {"start_line": 168, "start_character": 8, "end_line": 171, "end_character": 73}, "in_reply_to": "3fa7e38b_9439a5a3", "updated": "2020-03-09 13:32:14.000000000", "message": "All of that will actually get checked later on during the normal health check validation. See lines 120-133, which are executed later for ALL requests.", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}, {"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "f679a62c75e1366ab2bea38f93bc9728ba87d714", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_94c44596", "line": 181, "range": {"start_line": 181, "start_character": 17, "end_line": 181, "end_character": 36}, "updated": "2020-02-03 12:49:24.000000000", "message": "no longer true", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "42f37d17fef1231315cb85d8d4be91ee08305688", "unresolved": false, "patch_set": 7, "id": "1fa4df85_7bfb08c0", "line": 181, "range": {"start_line": 181, "start_character": 17, "end_line": 181, "end_character": 36}, "in_reply_to": "3fa7e38b_94c44596", "updated": "2020-03-09 13:32:14.000000000", "message": "kk, redoing this section a bit.", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}, {"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "f679a62c75e1366ab2bea38f93bc9728ba87d714", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_54432d13", "line": 185, "range": {"start_line": 185, "start_character": 24, "end_line": 185, "end_character": 63}, "updated": "2020-02-03 12:49:24.000000000", "message": "same here", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}, {"author": {"_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, "change_message_id": "f679a62c75e1366ab2bea38f93bc9728ba87d714", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7440a905", "line": 194, "range": {"start_line": 194, "start_character": 35, "end_line": 194, "end_character": 61}, "updated": "2020-02-03 12:49:24.000000000", "message": "same", "commit_id": "657d11506d11043143a4e60f3adb0df7b09da6fc"}], "octavia/common/jinja/lvs/jinja_cfg.py": [{"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "cf7e286f92210f214d293b37525214d540b7bbbe", "unresolved": false, "patch_set": 14, "id": "df33271e_508a7e1a", "line": 212, "range": {"start_line": 212, "start_character": 17, "end_line": 212, "end_character": 31}, "updated": "2020-04-10 05:31:54.000000000", "message": "Hmm we don't technically use this...", "commit_id": "77750d389bb576fad404463e18715d3dcd75d0fd"}], "octavia/common/jinja/lvs/templates/macros.j2": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_6694a845", "line": 44, "updated": "2020-03-23 23:49:52.000000000", "message": "What about the optional monitor_address?", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_6e09112b", "line": 44, "in_reply_to": "df33271e_6694a845", "updated": "2020-03-24 18:56:57.000000000", "message": "Done", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_6655c850", "line": 47, "range": {"start_line": 47, "start_character": 43, "end_line": 47, "end_character": 57}, "updated": "2020-03-23 23:49:52.000000000", "message": "Is this really the \"down\" one?", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_c60ad488", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 24}, "updated": "2020-03-23 23:49:52.000000000", "message": "nb_get_retry is deprecated, I think this should be retry.\nhttps://github.com/acassen/keepalived/commit/6754ffcdfa6a43557c5ed5777d4974099e75f6bc", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_6edd9141", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 24}, "in_reply_to": "df33271e_c60ad488", "updated": "2020-03-24 18:56:57.000000000", "message": "So, I'll change it to fall_threshold, but since there's only one variable in keepalived, we're going to get it wrong one way or another. I think fall is more correct though, as this is explicitly for \"retries on failures\".\nFixed the name.", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_9400e836", "line": 48, "updated": "2020-03-24 18:56:57.000000000", "message": "I believe this value is wrong, should mirror `delay` not `timeout`... will test", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_e661d83b", "line": 49, "range": {"start_line": 49, "start_character": 8, "end_line": 49, "end_character": 9}, "updated": "2020-03-23 23:49:52.000000000", "message": "Shouldn't delay_loop be set for our \"delay\" value?", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_8e38d5d3", "line": 49, "range": {"start_line": 49, "start_character": 8, "end_line": 49, "end_character": 9}, "in_reply_to": "df33271e_e661d83b", "updated": "2020-03-24 18:56:57.000000000", "message": "So I think delay_loop is set at a higher level already and doesn't need to be in these...", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_06615c37", "line": 54, "range": {"start_line": 54, "start_character": 33, "end_line": 54, "end_character": 41}, "updated": "2020-03-23 23:49:52.000000000", "message": "What about monitor_address?", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_4e0ecd34", "line": 54, "range": {"start_line": 54, "start_character": 33, "end_line": 54, "end_character": 41}, "in_reply_to": "df33271e_06615c37", "updated": "2020-03-24 18:56:57.000000000", "message": "Done", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "bcfad95e87243770670d2e38b157911ba593aa98", "unresolved": false, "patch_set": 11, "id": "df33271e_46524469", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 9}, "updated": "2020-03-23 23:49:52.000000000", "message": "No retries for TCP?\nLooking at the docs, this should be very similar to the HTTP one.", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "ede564eaef55fde13ad0a25263fd22d08cf55609", "unresolved": false, "patch_set": 11, "id": "3f4c43b2_43db381a", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 9}, "in_reply_to": "3f4c43b2_03a3f09f", "updated": "2020-04-15 16:16:29.000000000", "message": "Ah, yes. I meant that line but referred another one in my comment.", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a02ff347f84b3320e03f59e3187e04b425324622", "unresolved": false, "patch_set": 11, "id": "3f4c43b2_03a3f09f", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 9}, "in_reply_to": "9f3d2ff0_5f26abb9", "updated": "2020-04-15 16:12:54.000000000", "message": "two lines down (retry 3)", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "a238d9829ad45f1319d5888c3be476b6cc1d5d1c", "unresolved": false, "patch_set": 11, "id": "df33271e_aee67915", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 9}, "in_reply_to": "df33271e_46524469", "updated": "2020-03-24 18:56:57.000000000", "message": "Done", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "efabcf3ff090bea92147314d626c5d056f3c991d", "unresolved": false, "patch_set": 11, "id": "9f3d2ff0_5f26abb9", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 9}, "in_reply_to": "df33271e_aee67915", "updated": "2020-04-10 17:27:08.000000000", "message": "Where? Is it delay_ options in https://review.opendev.org/#/c/589180/11/octavia/tests/unit/common/jinja/lvs/test_lvs_jinja_cfg.py@325 ?", "commit_id": "d991f6fe86052266a06fab5a419137a65a866d40"}], "releasenotes/notes/additional-udp-healthcheck-types-2414a5edee9f5110.yaml": [{"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "7516081c1b10a488fd7370cc58fd8be45417c00d", "unresolved": false, "patch_set": 12, "id": "df33271e_fba33cff", "line": 6, "updated": "2020-04-04 22:10:53.000000000", "message": "I have not reviewed this patch thoroughly yet but I wonder if this patch should be split out in two: the fix (so that we can backport) and the new health types.", "commit_id": "3515288ad9226afc395b74e006d73c6c39bc27f0"}, {"author": {"_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, "change_message_id": "b48a73831a9358ff5f3dd83c1be1b9d4272c68ce", "unresolved": false, "patch_set": 12, "id": "df33271e_b25dd316", "line": 6, "in_reply_to": "df33271e_fba33cff", "updated": "2020-04-10 01:03:44.000000000", "message": "That's fair, I'll split it.", "commit_id": "3515288ad9226afc395b74e006d73c6c39bc27f0"}]}}, "opendev%2Fsystem-config~master~I5f5431cac7eb191f2f5443892292ca5a236fe1e6": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 20:36:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-17 20:33:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 20:31:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Freleases~master~I16a3564fd79702446f29f62baa21120d8aea00ac": {"owner_id": 16312, "owner_name": "Alfredo Moralejo", "owner_email": "amoralej@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 11:42:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 17:21:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-04-17 09:28:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 2, "date": "2020-04-17 11:58:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fpromenade~master~Ie56c0a7a344ea78c9f348fbf0e77617399815a7e": {"owner_id": 14178, "owner_name": "Vladimir Maliaev", "owner_email": "vmaliaev@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 17:18:51.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28664, "name": "Ahmad Mahmoudi", "email": "ahmad.mahmoudi@att.com", "username": "ahmad"}, {"value": 1, "date": "2020-04-17 17:13:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 2, "date": "2020-04-17 20:10:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-04-17 17:17:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 1, "date": "2020-04-17 17:16:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "_account_id": 14178, "name": "Vladimir Maliaev", "email": "vmaliaev@mirantis.com", "username": "vmaliaev"}, {"value": 2, "date": "2020-04-17 20:13:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "opendev%2Fsystem-config~master~Ia6ec8da72fee38377760cb27dd7df26fa169760b": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 20:34:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 20:31:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "x%2Fgroup-based-policy~stable%2Fqueens~I23b357c5f5345d0b3daa16e99bfe8613aa23a5b3": {"owner_id": 18065, "owner_name": "Kent Wu", "owner_email": "wu@noironetworks.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:23:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 2, "date": "2020-04-17 19:06:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1689, "name": "Robert Kukura", "email": "rk@theep.net", "username": "rkukura"}, {"value": 0, "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}], "comments": {}}, "openstack%2Fcinder~master~I25715d04791e9c8c681a63954719d48f7b390dcd": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-09 22:30:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-04-09 20:23:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28080, "name": "Akhil Jayakumar", "email": "akjayaku@cisco.com", "username": "akjayaku"}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"HACKING.rst": [{"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "587b754e56d58d349a4c5b99f5eef17798f53949", "unresolved": false, "patch_set": 3, "id": "df33271e_e6f12603", "line": 28, "updated": "2020-04-01 19:55:07.000000000", "message": "add C337 here?", "commit_id": "b56dbad7d693e8eff1a57c5aeb98a0bb755eb067"}]}}, "openstack%2Fhorizon~stable%2Fussuri~I105244ba94059a6149b8c72fd7b2eae4923531f7": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 21:19:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "openstack%2Fhorizon~master~I97f5140020857694b5eda17e8f2c02b9b3066e0c": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 21:20:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "openstack%2Fmanila-ui~master~I84ec7cae5b051bb9c69969d8ccaa28b053914840": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-04-17 21:43:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-04-17 21:46:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-04-17 21:31:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fpuppet-nova~master~Ibfd489e977e8f8f52defecacc00cb8afcd1596a1": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-04-16 08:22:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 18:56:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "airship%2Fimages~master~I435106b2ad15921367174446707179f157df7946": {"owner_id": 31681, "owner_name": "Vamsi Savaram", "owner_email": "vamsi.savaram@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 21:42:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 2, "date": "2020-04-16 09:25:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, "change_message_id": "b89c63841e2b304d7d5c39b50c5d8f91da3766dd", "unresolved": false, "patch_set": 9, "id": "df33271e_242013f7", "line": 7, "range": {"start_line": 7, "start_character": 13, "end_line": 7, "end_character": 22}, "updated": "2020-04-02 15:15:10.000000000", "message": "this PS is for runtime logs, not for container logs", "commit_id": "7cb4153b72d8c58612dcc6690014ab891db7bfdc"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "07794077a5a9077eece37be5948595bbbcbe2958", "unresolved": false, "patch_set": 9, "id": "df33271e_0716b149", "line": 7, "range": {"start_line": 7, "start_character": 13, "end_line": 7, "end_character": 22}, "in_reply_to": "df33271e_242013f7", "updated": "2020-04-02 15:29:22.000000000", "message": "My ask was to collect container logs. So the Subject is correct.\n\n > this PS is for runtime logs, not for container logs", "commit_id": "7cb4153b72d8c58612dcc6690014ab891db7bfdc"}], "gitdiff": [{"author": {"_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, "change_message_id": "a3c082888339599589b8a00a02659a194ae7b9a2", "unresolved": false, "patch_set": 5, "id": "df33271e_51b9ae12", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 1}, "updated": "2020-04-01 20:30:52.000000000", "message": "whitespace", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}, {"author": {"_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, "change_message_id": "a3c082888339599589b8a00a02659a194ae7b9a2", "unresolved": false, "patch_set": 5, "id": "df33271e_913cd693", "line": 11, "range": {"start_line": 11, "start_character": 32, "end_line": 11, "end_character": 33}, "updated": "2020-04-01 20:30:52.000000000", "message": "whitespace", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}], "roles/airship-images-gather-container-logs/tasks/main.yaml": [{"author": {"_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, "change_message_id": "a3c082888339599589b8a00a02659a194ae7b9a2", "unresolved": false, "patch_set": 5, "id": "df33271e_715312e3", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 24}, "updated": "2020-04-01 20:30:52.000000000", "message": "it's better to use shared role between airshipctl and images, don't need duplicates", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "843ed31aeecef296de52e7a71d199c21f8f53816", "unresolved": false, "patch_set": 5, "id": "df33271e_7175d2f9", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 24}, "in_reply_to": "df33271e_715312e3", "updated": "2020-04-01 20:55:10.000000000", "message": "Stas, Can you please provide an example of a shared role between airship projects? I am new to this area, and any help is appreciated.", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}, {"author": {"_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, "change_message_id": "1bdc1d2e8271f0483a604f20cb839e99519ee71d", "unresolved": false, "patch_set": 5, "id": "df33271e_aceb7d10", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 24}, "in_reply_to": "df33271e_7175d2f9", "updated": "2020-04-01 21:07:59.000000000", "message": "Right now we have all roles are under development in airshipctl even shared roles from zuul-airship-roles. When we finish development the plan is to move shared roles to zuul-airship-roles. And as I understand we can use log gathering role from external repo, don't need to create a copy of what is already created. We have airship-gather-runtime-logs in airshipctl.", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}, {"author": {"_account_id": 31681, "name": "Vamsi Savaram", "email": "vamsi.savaram@gmail.com", "username": "vamsisavaram"}, "change_message_id": "9af583c4b1616675a4b3026a8d617d2b0b7e50ac", "unresolved": false, "patch_set": 5, "id": "df33271e_40cd5583", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 24}, "in_reply_to": "df33271e_aceb7d10", "updated": "2020-04-01 22:20:36.000000000", "message": "Ok this is what I have tried: \nPS7: Use airship-gather-runtime-logs role from airshipctl\nPS8: Use airship-gather-logs playbook from airshipctl\nI think, we cannot share the roles from other unstrusted projects.", "commit_id": "105c64bb6d07a768527b682f468b9c8eb8571d80"}]}}, "openstack%2Fhorizon~stable%2Fussuri~Ic6a4fbbd71fa823f08286a5897c2157446a18932": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 21:18:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "openstack%2Fcinder~master~I3c0afece33859552e85cd89626b349b43ebe038a": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:38:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-04-17 18:52:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~I11ad3c12de21fe0522d13f966783cb413b661646": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-16 14:45:58.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-04-16 14:24:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-04-17 18:56:41.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"roles/tripleo_config_generate_ansible/tasks/main.yml": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "edb3c087b3c7fed6b2a89dc05974cf9b5bc83ec0", "unresolved": false, "patch_set": 5, "id": "df33271e_867bfa89", "line": 25, "range": {"start_line": 25, "start_character": 2, "end_line": 25, "end_character": 23}, "updated": "2020-04-01 19:52:02.000000000", "message": "I don't understand how it works with molecule, it should be tripleo.operator.tripleo_shell_script\n\nIf I include role with tasks that don't have FQCN, it doesn't work.", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7160e8f480ae277d26aadbae63963be3707c7029", "unresolved": false, "patch_set": 5, "id": "df33271e_4671f243", "line": 25, "range": {"start_line": 25, "start_character": 2, "end_line": 25, "end_character": 23}, "in_reply_to": "df33271e_867bfa89", "updated": "2020-04-01 20:08:03.000000000", "message": "it doesn't need to be because you use the following in all the playbooks:\n\ncollections:\n - tripleo.operators", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "26ee8edd058f704c2c08cebefbc831f07e6a68ea", "unresolved": false, "patch_set": 5, "id": "df33271e_80abe272", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "updated": "2020-04-01 18:50:57.000000000", "message": "where is it defined?", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "923fda0a3b8860bd16d086d93833fd0e9fe36dcc", "unresolved": false, "patch_set": 5, "id": "df33271e_80491db8", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "in_reply_to": "df33271e_6b479fbd", "updated": "2020-04-01 22:42:23.000000000", "message": "Well, as I see now - it's working because this role is in the same collection as this module. If you try to use \"tripleo_shell_script\" in some external role (even with collections: - tripleo.operator in playbook) it won't find it. It's a known bug in ansible, that I hoped would be solved. :/\n\nFor us it's ok, because we are not going to use these modules outside of operators roles.", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7bd0ec292d1db011b62513d97ddcfbb1e213a8f0", "unresolved": false, "patch_set": 5, "id": "df33271e_4001d537", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "in_reply_to": "df33271e_80491db8", "updated": "2020-04-01 22:45:43.000000000", "message": "My understanding that fully qualified thing was an issue with filters not modules. I wouldn't support trying to include these manually so the collection installation is a must", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "84cbcbf829b9fd7e675f339ee26210652110a939", "unresolved": false, "patch_set": 5, "id": "df33271e_a0f54659", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "in_reply_to": "df33271e_80abe272", "updated": "2020-04-01 18:58:24.000000000", "message": "Seems like it's defined only in roles that have log files.", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7cae2fa6d1a75a243f3fc125de801fc9391d49ae", "unresolved": false, "patch_set": 5, "id": "df33271e_6b479fbd", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "in_reply_to": "df33271e_8be2e3d3", "updated": "2020-04-01 19:33:33.000000000", "message": "oh this one doesn't have it because we always specify the output_dir. If we drop the output dir default we would specify home_dir and it would output there by default. I guess i'll fix this", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "e676798d58149725b9d8747234398c9c59af0314", "unresolved": false, "patch_set": 5, "id": "df33271e_8be2e3d3", "line": 26, "range": {"start_line": 26, "start_character": 14, "end_line": 26, "end_character": 46}, "in_reply_to": "df33271e_a0f54659", "updated": "2020-04-01 19:31:02.000000000", "message": "I think this was an issue for this command actually because it defaults to cwd for output if output dir is not specified. I think this needs to have a home dir to run the command in. I'll need to go look at python client. In general it might not make sense to have the reproducer script for list/show commands but we only have a few of those.", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}], "roles/tripleo_container_image_delete/molecule/default/converge.yml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7160e8f480ae277d26aadbae63963be3707c7029", "unresolved": false, "patch_set": 5, "id": "df33271e_86949a38", "line": 5, "range": {"start_line": 4, "start_character": 0, "end_line": 5, "end_character": 22}, "updated": "2020-04-01 20:08:03.000000000", "message": "This is how it finds tripleo_shell_scripts", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}], "roles/tripleo_overcloud_deploy/tasks/main.yml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7160e8f480ae277d26aadbae63963be3707c7029", "unresolved": false, "patch_set": 5, "id": "df33271e_e6976639", "line": 71, "range": {"start_line": 71, "start_character": 2, "end_line": 71, "end_character": 16}, "updated": "2020-04-01 20:08:03.000000000", "message": "This is also a custom resource in this collection and doesn't need to be fully qualified", "commit_id": "bdc9c190b1916cedbf06260f280a2161fe38b7f6"}]}}, "openstack%2Ftempest~master~I747f3abe179492da063fcaaf1123ffcf6362f966": {"owner_id": 8367, "owner_name": "Arx Cruz", "owner_email": "arxcruz@redhat.com", "labels": [{"value": 2, "date": "2020-04-17 15:32:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-04-17 14:30:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 30760, "name": "Suraj Patil", "email": "surajpatil522@gmail.com", "username": "suraj521"}, {"value": 2, "date": "2020-04-07 17:23:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5690, "name": "Masayuki Igawa", "inactive": true}, {"value": 0, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, {"value": 0, "_account_id": 31239, "name": "Paras Babbar", "email": "pbabbar@redhat.com", "username": "pbabbar"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"releasenotes/notes/add-worker-file-option-d949121a61156968.yaml": [{"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "b1510e57d2d8cbac1f60bcfc2cbc66a3a6ea21ef", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_55eb1610", "line": 4, "updated": "2020-02-20 12:46:36.000000000", "message": "small nit - It should be 'give' instead of 'gave', I guess.", "commit_id": "26c1ed63e8546dc6c0d33ef52e6f9218398724c1"}, {"author": {"_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, "change_message_id": "69951db5c4f3a8b9206f4511bd525f8138ba59e8", "unresolved": false, "patch_set": 5, "id": "1fa4df85_6c300a09", "line": 7, "updated": "2020-02-24 10:08:06.000000000", "message": "TestMinimumBasicScenario is worst possible example. It does not have dedicated classes or multiple test cases.", "commit_id": "928a854f07459661d84754bc0ea01b5d195def0b"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_34964c41", "line": 4, "range": {"start_line": 4, "start_character": 36, "end_line": 4, "end_character": 48}, "updated": "2020-03-04 01:06:28.000000000", "message": "``tempest run``", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_944060a7", "line": 6, "range": {"start_line": 5, "start_character": 29, "end_line": 6, "end_character": 52}, "updated": "2020-03-04 01:06:28.000000000", "message": "to manually configure how the different sets of tests can be grouped to run with the different worker. You can configure tests regex to run under workers. You can also mix manual scheduling with standard one by mentioning concurrency.", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}], "tempest/cmd/run.py": [{"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "586c13d87b9aebd8f084a577f0ccf473ccd50897", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4ce2b79e", "line": 258, "range": {"start_line": 258, "start_character": 54, "end_line": 258, "end_character": 55}, "updated": "2020-02-20 10:23:36.000000000", "message": "maybe underscore instead of dash? just based on the above code.", "commit_id": "dd68bcb4c9ff129c916bd8d62589ddf14429b868"}, {"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "5ea94e6693414725948bdd55696a512299c0dfb9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f5cd625b", "line": 51, "updated": "2020-02-20 13:13:56.000000000", "message": "I think the statement 'You can also ..' if modified something like 'You can ..tests will be executed with the specified concurrency.' will be more informative.\n\nThe example, If explained like 'tempest run with concurrency 3 for tempest.api and use a regex..' seems better, I guess.", "commit_id": "26c1ed63e8546dc6c0d33ef52e6f9218398724c1"}, {"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "5ea94e6693414725948bdd55696a512299c0dfb9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_35321a5d", "line": 52, "updated": "2020-02-20 13:13:56.000000000", "message": "The example says 'concurrency 4' but the below worker-file don't actually have it.", "commit_id": "26c1ed63e8546dc6c0d33ef52e6f9218398724c1"}, {"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "5ea94e6693414725948bdd55696a512299c0dfb9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b5b7eaf7", "line": 55, "updated": "2020-02-20 13:13:56.000000000", "message": "I think specifying the possible formats for worker-file will also be a good thing as far as new user's perspective is considered.", "commit_id": "26c1ed63e8546dc6c0d33ef52e6f9218398724c1"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "a14c046d65d89c5bf5424dec71cc703a87239826", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7b57235b", "line": 54, "range": {"start_line": 52, "start_character": 23, "end_line": 54, "end_character": 16}, "updated": "2020-02-20 14:48:28.000000000", "message": "Maybe something like this?\n\n\"you can setup a tempest run with different concurrences to be used with different regexps.\"", "commit_id": "8c5ec9d9c0b8fef40dc4ed2b3389d775668199b5"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "a14c046d65d89c5bf5424dec71cc703a87239826", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1b370f4f", "line": 54, "range": {"start_line": 54, "start_character": 59, "end_line": 54, "end_character": 60}, "updated": "2020-02-20 14:48:28.000000000", "message": "here needs to be double double dot - :: - otherwise the yaml example is unexpectedly indented.", "commit_id": "8c5ec9d9c0b8fef40dc4ed2b3389d775668199b5"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "a14c046d65d89c5bf5424dec71cc703a87239826", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fb14739b", "line": 54, "range": {"start_line": 54, "start_character": 47, "end_line": 54, "end_character": 53}, "updated": "2020-02-20 14:48:28.000000000", "message": "shown", "commit_id": "8c5ec9d9c0b8fef40dc4ed2b3389d775668199b5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_74b3644e", "line": 50, "range": {"start_line": 50, "start_character": 47, "end_line": 50, "end_character": 51}, "updated": "2020-03-04 01:06:28.000000000", "message": "let", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_f4a7540a", "line": 52, "range": {"start_line": 51, "start_character": 34, "end_line": 52, "end_character": 9}, "updated": "2020-03-04 01:06:28.000000000", "message": "manually schedule the tests run.", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_d48018c2", "line": 64, "range": {"start_line": 56, "start_character": 0, "end_line": 64, "end_character": 20}, "updated": "2020-03-04 01:06:28.000000000", "message": "let's give separate examples of manual scheduling and mix one.\n\n    # YAML Worker file\n    - worker:\n      # you can have more than one regex per worker\n      - tempest.api.*\n      - neutron_tempest_tests\n    - worker:\n      - tempest.scenario.*\n\nThis will run test matching with 'tempest.api.*' and 'neutron_tempest_tests' against worker 1. Run test matching with 'tempest.scenario.*' under worker2.\n\nYou can mix manual scheduling with the standard scheduling mechanisms by concurrency field on a worker. For example:\n    - worker:\n      # you can have more than one regex per worker\n      - tempest.api.*\n      - neutron_tempest_tests\n    - worker:\n      - tempest.scenario.*\n      concurrency: 2\n\nThis will run tests matching with 'tempest.scenario.*' against 2 workers.", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_748cc47e", "line": 66, "range": {"start_line": 66, "start_character": 5, "end_line": 66, "end_character": 25}, "updated": "2020-03-04 01:06:28.000000000", "message": "worker file is passed...", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_94e860e2", "line": 279, "range": {"start_line": 279, "start_character": 34, "end_line": 279, "end_character": 38}, "updated": "2020-03-04 01:06:28.000000000", "message": "Optional Path ...", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "f8e4a8c1f1aea701c0dd00e04c0f64a8ce77bd37", "unresolved": false, "patch_set": 6, "id": "1fa4df85_000f4037", "line": 279, "range": {"start_line": 279, "start_character": 34, "end_line": 279, "end_character": 38}, "in_reply_to": "1fa4df85_94e860e2", "updated": "2020-03-04 17:33:23.000000000", "message": "this we can keep as 'Path' only from tempest perspective", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2b1d20df902558f817c4a1df4fd03076b4e7bf8d", "unresolved": false, "patch_set": 6, "id": "1fa4df85_1439d0a2", "line": 281, "range": {"start_line": 279, "start_character": 57, "end_line": 281, "end_character": 69}, "updated": "2020-03-04 01:06:28.000000000", "message": "'This file contains each worker configuration about test regex and concurrency which will be used to schedule the tests run.'", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "f8e4a8c1f1aea701c0dd00e04c0f64a8ce77bd37", "unresolved": false, "patch_set": 6, "id": "1fa4df85_4011b85c", "line": 281, "range": {"start_line": 279, "start_character": 57, "end_line": 281, "end_character": 69}, "in_reply_to": "1fa4df85_1439d0a2", "updated": "2020-03-04 17:33:23.000000000", "message": "this is not updated yet", "commit_id": "159b56f1adb820a8154c78685192f1f9861eb9d5"}]}}, "openstack%2Fpython-openstackclient~master~Ibd39328c27b68190e2edbf1f52fcea52db3ae791": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-04 14:34:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fdevstack~stable%2Fstein~I4649abe06b5893a5251bfcdd4234abccde6ceda2": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-04-17 07:42:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-04-16 22:15:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Ftempest~master~I8c800f6e280ec6fdf204d344124d994a25d0af19": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 15:08:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 1, "date": "2020-04-14 08:43:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-04-17 09:35:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"tempest/lib/api_schema/response/compute/v2_73/servers.py": [{"author": {"_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, "change_message_id": "1b4b00ca82cb043494df40c439cc3bd4aa1da493", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d9625cd9", "line": 61, "range": {"start_line": 61, "start_character": 0, "end_line": 61, "end_character": 67}, "updated": "2020-01-08 03:36:15.000000000", "message": "This is \"GET /servers/detail\"? so should also be modified?", "commit_id": "316f6d18aa0012e58d2bde425dae71415de1db14"}, {"author": {"_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, "change_message_id": "0bc48fafc70fa2f8e6c1446d39023407ef62a143", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_133416fa", "line": 28, "range": {"start_line": 28, "start_character": 17, "end_line": 28, "end_character": 24}, "updated": "2020-01-13 14:55:54.000000000", "message": "Typo here", "commit_id": "8a8514318a18a072c549d98ea4d58197433e732d"}]}}, "openstack%2Fcinder~master~I24fe5cedea9384d8708d44efb2f70a9cabfab6ca": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 2, "date": "2020-04-17 18:37:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:42:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~I1b51e5e85aa2a928c28e29c54283b6316a56da2a": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-15 17:01:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:50:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 2, "date": "2020-04-17 18:48:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-16 01:14:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20223, "name": "zhaolihui", "email": "zhaolh@awcloud.com", "username": "zhaolihui"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~Icd057da62f490defaf3d983e708cf321257b3bda": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:39:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-04-17 18:45:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsystem-config~master~I587b22f099c6031177e590dbb8dabd8c2ee58295": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 20:30:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 20:42:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fpuppet-glance~stable%2Ftrain~I1dfcb311c10c633788c24484c21277255b60e4e5": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 13:43:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 18:51:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fmistral~master~I6eea5db63070bd60fe2475f1fd34e43f855f6aa2": {"owner_id": 8731, "owner_name": "Renat Akhmerov", "owner_email": "renat.akhmerov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 08:38:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 0, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, {"value": 0, "_account_id": 29124, "name": "Oleg Ovcharuk", "email": "vgvoleg@gmail.com", "username": "vgvoleg"}, {"value": 1, "date": "2020-04-17 19:06:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 2, "date": "2020-04-17 20:51:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21970, "name": "Andras Kovi", "email": "akovi@nokia.com", "username": "andras.kovi"}], "comments": {"doc/source/developer/contributor/contributing.rst": [{"author": {"_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, "change_message_id": "97d901fb038381850ff6b29af81b79a7c26c19da", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f25aec4c", "line": 28, "range": {"start_line": 25, "start_character": 5, "end_line": 28, "end_character": 32}, "updated": "2020-04-17 08:25:45.000000000", "message": "Guys, is it ok to list your names here? The community goal assumes to do that but if you have concerns, please let me know before merging the patch.", "commit_id": "c90472d3e60ce7d26afdc0f1c080a41e104e62e9"}, {"author": {"_account_id": 21970, "name": "Andras Kovi", "email": "akovi@nokia.com", "username": "andras.kovi"}, "change_message_id": "aed0ca234ee0ff76c31f6e2d97e82e377f579771", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_39d6edc4", "line": 28, "range": {"start_line": 25, "start_character": 5, "end_line": 28, "end_character": 32}, "in_reply_to": "3f4c43b2_f25aec4c", "updated": "2020-04-17 20:51:05.000000000", "message": "Thank you Renat!", "commit_id": "c90472d3e60ce7d26afdc0f1c080a41e104e62e9"}]}}, "openstack%2Fpython-octaviaclient~master~I5ca0fb28f6a24207e2b87bce357fc41a010cd052": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 2, "date": "2020-04-17 18:07:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 20:40:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Fos-client-config~master~I55b4938edae85aa8108be62c49f0ac7fc6682997": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 12:06:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-04-17 12:13:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"setup.cfg": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "29f0e86f12fafce1f7da3bafd24186fd882b8706", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_d47a8086", "line": 9, "range": {"start_line": 9, "start_character": 20, "end_line": 9, "end_character": 23}, "updated": "2020-04-14 10:22:56.000000000", "message": "Should be 3.6, not?\nI'm not sure to seen why you moved to 3.5 in previous PS", "commit_id": "286f76019345b5af3fa6dc29e216124f1aa7c015"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "f869f3bd3471b0142126af8e6088999cd00e7396", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_f595b3e5", "line": 20, "updated": "2020-04-17 12:01:46.000000000", "message": "if we really support 3.5, it needs to be added here", "commit_id": "286f76019345b5af3fa6dc29e216124f1aa7c015"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "a6780c6eae4864a42193c345cf1e26a3df94c8cf", "unresolved": false, "patch_set": 3, "id": "3f4c43b2_35b9db79", "line": 20, "in_reply_to": "3f4c43b2_f595b3e5", "updated": "2020-04-17 12:04:05.000000000", "message": "It runs shade 3.5 tests... Ok, let me add it.", "commit_id": "286f76019345b5af3fa6dc29e216124f1aa7c015"}]}}, "opendev%2Fsystem-config~master~I94f69c889c9b4418ef81b3b2ca436ba99696ba72": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:18:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-04-17 15:48:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 12:10:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/host_vars/review01.openstack.org.yaml": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "a2a54266b36a938ca5cdc3bcb6900abf89f7d44a", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_506f4e91", "line": 14, "updated": "2020-04-17 17:18:52.000000000", "message": "I was going to suggest continuing to at least replicaet notes, but apparently GH stopped displaying them in 2014 and I only just now found out: https://github.blog/2010-08-25-git-notes-display/", "commit_id": "69353187123efc71e060d631fa5aa7915b746772"}]}}, "openstack%2Fopenstack-ansible-rabbitmq_server~stable%2Fstein~Ic7492863fa7eecadec07b5da76801fe2530dbec6": {"owner_id": 13095, "owner_name": "Marc Gari\u00e9py", "owner_email": "gariepy.marc@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:49:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-17 20:08:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15993, "name": "Amy Marrich", "display_name": "Amy Marrich (spotz)", "email": "amy@demarco.com", "username": "amarrich"}, {"value": 1, "date": "2020-04-14 18:53:59.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 16011, "name": "James Denton", "email": "james.denton@outlook.com", "username": "busterswt"}, {"value": 0, "_account_id": 13095, "name": "Marc Gari\u00e9py", "email": "gariepy.marc@gmail.com", "username": "mgariepy"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I4e0e1beb733ae1c41d74d488481230026611c6c0": {"owner_id": 7130, "owner_name": "David Hill", "owner_email": "davidchill@hotmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-14 11:38:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7130, "name": "David Hill", "email": "davidchill@hotmail.com", "username": "dhill"}, {"value": 2, "date": "2020-04-14 13:29:10.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/apache/apache-baremetal-puppet.j2.yaml": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "6cb4ae158fa3d79e5659e0deab0e868d46b762fe", "unresolved": false, "patch_set": 1, "id": "df33271e_a3f81549", "line": 12, "range": {"start_line": 12, "start_character": 2, "end_line": 12, "end_character": 25}, "updated": "2020-04-08 14:33:59.000000000", "message": "please keep only this one and make it configuring maxrequestworkers directly? I don't think we should configure both, because maxclients is an alias for maxrequestworkers (at least according to puppetlabs-apache docs)", "commit_id": "8cfeb18fd8ff64c525b2eb9d7d4d127f516711d7"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "f42e225f04463fc18e86f105dcbbc5c12d8dbe18", "unresolved": false, "patch_set": 1, "id": "df33271e_6371edde", "line": 12, "range": {"start_line": 12, "start_character": 2, "end_line": 12, "end_character": 25}, "in_reply_to": "df33271e_a3f81549", "updated": "2020-04-08 14:36:35.000000000", "message": "https://httpd.apache.org/docs/2.4/mod/mpm_common.html \n\nMaxRequestWorkers was called MaxClients before version 2.3.13. The old name is still supported.", "commit_id": "8cfeb18fd8ff64c525b2eb9d7d4d127f516711d7"}]}}, "vexxhost%2Fopenstack-operator~master~Ic9904e8677eacea41ade96502f2dd3c5e37c8a95": {"owner_id": 31746, "owner_name": "Oleksandr Kozachenko", "owner_email": "okozachenko1203@gmail.com", "labels": [{"value": 2, "date": "2020-04-17 19:31:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}], "comments": {"chart/templates/clusterrole.yaml": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_98af51e2", "side": "PARENT", "line": 48, "range": {"start_line": 24, "start_character": 0, "end_line": 48, "end_character": 12}, "updated": "2020-04-16 21:05:02.000000000", "message": "restore this", "commit_id": "737464fd23343fd6502d02747ff879fc9cb95bf2"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_d8b9d92e", "side": "PARENT", "line": 146, "range": {"start_line": 107, "start_character": 0, "end_line": 146, "end_character": 21}, "updated": "2020-04-16 21:05:02.000000000", "message": "restore this", "commit_id": "737464fd23343fd6502d02747ff879fc9cb95bf2"}], "chart/templates/deployment.yaml": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "3212dac810bda792d2e840489469328f3ff77fff", "unresolved": false, "patch_set": 6, "id": "3f4c43b2_2c387f9e", "line": 27, "range": {"start_line": 26, "start_character": 0, "end_line": 27, "end_character": 38}, "updated": "2020-04-17 02:55:28.000000000", "message": "to \"load\" it, please add it here\n\n  - -m\n  - openstack_operator.mcrouter\n\nmake sure to make that list alphabetical", "commit_id": "ef73055f02e98cec31c47ff876ef783590d98b04"}], "config/rbac/role.yaml": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_b8b4cd36", "side": "PARENT", "line": 48, "range": {"start_line": 24, "start_character": 0, "end_line": 48, "end_character": 12}, "updated": "2020-04-16 21:05:02.000000000", "message": "restore this", "commit_id": "737464fd23343fd6502d02747ff879fc9cb95bf2"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_38827d50", "side": "PARENT", "line": 146, "range": {"start_line": 107, "start_character": 0, "end_line": 146, "end_character": 21}, "updated": "2020-04-16 21:05:02.000000000", "message": "restore this", "commit_id": "737464fd23343fd6502d02747ff879fc9cb95bf2"}], "openstack_operator/mcrouter.py": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_58d2e9d3", "line": 22, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0411: standard import \"import json\" should be placed before \"import kopf\" (wrong-import-order)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_7851a562", "line": 34, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0303: Trailing whitespace (trailing-whitespace)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_9856315c", "line": 34, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0303: Trailing whitespace (trailing-whitespace)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_58a66912", "line": 34, "range": {"start_line": 34, "start_character": 7, "end_line": 34, "end_character": 11}, "updated": "2020-04-16 21:05:02.000000000", "message": "remove this extra space", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_d850b960", "line": 35, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0326: Exactly one space required around assignment", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_d8e71940", "line": 35, "range": {"start_line": 35, "start_character": 8, "end_line": 35, "end_character": 9}, "updated": "2020-04-16 21:05:02.000000000", "message": "space around the equal sings", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_b84b2dae", "line": 41, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0330: Wrong continued indentation (remove 1 space).", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_18c86120", "line": 56, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0326: Exactly one space required around assignment", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_f8cad517", "line": 66, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: C0304: Final newline missing (missing-final-newline)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "8d3511d1db1013d85a342c032648a9f2b533a2f9", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_9bdd8b72", "line": 48, "range": {"start_line": 46, "start_character": 0, "end_line": 48, "end_character": 41}, "updated": "2020-04-16 22:11:57.000000000", "message": "i think it will complain that there is no two blank lines, can you move this after the imports above? and make sure there is two lines above it and two lines before it", "commit_id": "3c2414fa20203d7663a3db4aa85a054c4cc3acbe"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "b45c7f9d278c30f96973fccd62e91d5bb6aa4515", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_5bb303eb", "line": 64, "range": {"start_line": 63, "start_character": 0, "end_line": 64, "end_character": 48}, "updated": "2020-04-16 22:39:41.000000000", "message": "this is the one that always changes, so yeah, keep it here.", "commit_id": "2b0d0339c85622c9aaf19c0153ccc63ca1650094"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "b45c7f9d278c30f96973fccd62e91d5bb6aa4515", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_1bb97bcb", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 48}, "updated": "2020-04-16 22:39:41.000000000", "message": "we keep deployment because nodeSelector/tolerations can affect deployment.", "commit_id": "2b0d0339c85622c9aaf19c0153ccc63ca1650094"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "b45c7f9d278c30f96973fccd62e91d5bb6aa4515", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_7b9ebf54", "line": 72, "range": {"start_line": 67, "start_character": 0, "end_line": 72, "end_character": 48}, "updated": "2020-04-16 22:39:41.000000000", "message": "no change in the actual spec would ever trigger a change in svc/podmonitor/prometheusrule, so lets drop it here", "commit_id": "2b0d0339c85622c9aaf19c0153ccc63ca1650094"}], "openstack_operator/objects.py": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_f89e55b6", "line": 29, "range": {"start_line": 25, "start_character": 0, "end_line": 29, "end_character": 34}, "updated": "2020-04-16 21:05:02.000000000", "message": "please reorder those alphabetically", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_3860bd32", "line": 55, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: W0109: Duplicate key 'v1' in dictionary (duplicate-key)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "fd43ccc9acaa8144f2fcd0186ab318b65f88fb95", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_585dc978", "line": 55, "updated": "2020-04-16 21:35:47.000000000", "message": "linters: W0109: Duplicate key 'v1' in dictionary (duplicate-key)", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_b85fad0c", "line": 64, "range": {"start_line": 56, "start_character": 0, "end_line": 64, "end_character": 6}, "updated": "2020-04-16 21:05:02.000000000", "message": "merge all three into a single \"v1\" root, see \"monitoring.coreos.com/v1\" above.", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}], "openstack_operator/templates/mcrouter/configmap.yml.j2": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_18d34162", "line": 21, "range": {"start_line": 21, "start_character": 15, "end_line": 21, "end_character": 25}, "updated": "2020-04-16 21:05:02.000000000", "message": "I think you need to add single quotes around this so that it's uploaded correctly\n\nimagine:\n\n  config.json: {\"foo\": \"bar\"}\n\ninstead when it renders with quotes\n\n  config.json: '{\"foo\": \"bar\"}'", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}], "openstack_operator/templates/mcrouter/prometheusrule.yml.j2": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_78d8857e", "line": 39, "range": {"start_line": 25, "start_character": 0, "end_line": 39, "end_character": 20}, "updated": "2020-04-16 21:05:02.000000000", "message": "please check the repo, i made some new alerts, use thos instead", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "8d3511d1db1013d85a342c032648a9f2b533a2f9", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_db92739e", "line": 30, "range": {"start_line": 30, "start_character": 10, "end_line": 30, "end_character": 21}, "updated": "2020-04-16 22:11:57.000000000", "message": "backend-down", "commit_id": "3c2414fa20203d7663a3db4aa85a054c4cc3acbe"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "8d3511d1db1013d85a342c032648a9f2b533a2f9", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_bb8de77c", "line": 37, "range": {"start_line": 37, "start_character": 43, "end_line": 37, "end_character": 45}, "updated": "2020-04-16 22:11:57.000000000", "message": "can you space those out here?\n\nso\n\n  mcrouter_servers{state='down'} != 0", "commit_id": "3c2414fa20203d7663a3db4aa85a054c4cc3acbe"}], "openstack_operator/templates/mcrouter/service.yaml.j2": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "9d69fada0013a144bfa0dbe9871cc5cbe38c867e", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_18ea210e", "line": 28, "range": {"start_line": 28, "start_character": 0, "end_line": 28, "end_character": 46}, "updated": "2020-04-16 21:05:02.000000000", "message": "too much indentation here", "commit_id": "03ea015c976a609c5b172b8a8747507b6066722a"}]}}, "x%2Fvmware-nsxlib~master~I1e3415379926f07e7b30eeaf44e9bcc7e2a26e9e": {"owner_id": 31672, "owner_name": "Yang Ding", "owner_email": "dingyang@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, {"value": 0, "_account_id": 7018, "name": "Abhishek Raut", "email": "rauta@vmware.com", "username": "abhiraut"}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2020-04-17 20:17:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 2, "date": "2020-04-17 18:38:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"vmware_nsxlib/v3/cluster.py": [{"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "37f6d08f06a681bb1a321eaacc1107fc152a4b10", "unresolved": false, "patch_set": 1, "id": "df33271e_37037575", "line": 672, "range": {"start_line": 672, "start_character": 12, "end_line": 672, "end_character": 20}, "updated": "2020-03-30 23:07:34.000000000", "message": "This will happen for every endpoint, is this ok (in terms of server blacklisting repeated attempts with expired token)?", "commit_id": "ce044f8f73fe19cbf9d0b442b6184307f61ac16e"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "beca0f5ff28f516aead1efc2bf454cb9e57713f2", "unresolved": false, "patch_set": 1, "id": "df33271e_342c7746", "line": 672, "range": {"start_line": 672, "start_character": 12, "end_line": 672, "end_character": 20}, "in_reply_to": "df33271e_37037575", "updated": "2020-04-06 20:52:50.000000000", "message": "If I understand this correctly, with patch7, on a failed API call, we would\n1. The failed endpoint will call new_connection() with refresh=True, and will get the new valid jwt token.\n2. Each endpoint is updated by _reinit_cluster. Each endpoint will get the latest jwt token by invoking new_connection() with refresh=False.\n3. The API call will be retried by the failed endpoint. \n4. In case other endpoints are used later for any reason, they will have the updated jwt token already.\nSo as far as I'm concerned we would only send expired token once. Let me know if it makes sense", "commit_id": "ce044f8f73fe19cbf9d0b442b6184307f61ac16e"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dfcd1cf32539511e45d65759515a98f680340bcc", "unresolved": false, "patch_set": 3, "id": "df33271e_d11d7074", "line": 301, "updated": "2020-04-06 03:40:42.000000000", "message": "lower-constraints:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "63d96ad51bb27c89370b5b8c59efcba55516d88a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dfcd1cf32539511e45d65759515a98f680340bcc", "unresolved": false, "patch_set": 3, "id": "df33271e_3113fc68", "line": 301, "updated": "2020-04-06 03:40:42.000000000", "message": "py36:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "63d96ad51bb27c89370b5b8c59efcba55516d88a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dfcd1cf32539511e45d65759515a98f680340bcc", "unresolved": false, "patch_set": 3, "id": "df33271e_1118787f", "line": 301, "updated": "2020-04-06 03:40:42.000000000", "message": "py37:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "63d96ad51bb27c89370b5b8c59efcba55516d88a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "dfcd1cf32539511e45d65759515a98f680340bcc", "unresolved": false, "patch_set": 3, "id": "df33271e_710c6442", "line": 301, "updated": "2020-04-06 03:40:42.000000000", "message": "py38:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "63d96ad51bb27c89370b5b8c59efcba55516d88a"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "7ec1c7d252d92905aa94fd9163fd225c3c20a1e8", "unresolved": false, "patch_set": 7, "id": "df33271e_2776f1d9", "line": 665, "range": {"start_line": 665, "start_character": 49, "end_line": 665, "end_character": 62}, "updated": "2020-04-07 16:00:38.000000000", "message": "As I understand it, this function will not have a on-time refresh effect, but will be saved as create function for this pool forever. Is that correct?", "commit_id": "9d6bee9a978366c75ce6d5ca3bedb49bdf3dd409"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "8fd94d3994ec2d4bee24cf5deda1bed01e4f5fa7", "unresolved": false, "patch_set": 7, "id": "df33271e_50bbece3", "line": 665, "range": {"start_line": 665, "start_character": 49, "end_line": 665, "end_character": 62}, "in_reply_to": "df33271e_2776f1d9", "updated": "2020-04-07 18:28:39.000000000", "message": "That's true. I can change the other regenerate_pool() occurrences to take refresh=False, so that when the endpoint does need to be regenerated in other cases, it would possess the old create func.", "commit_id": "9d6bee9a978366c75ce6d5ca3bedb49bdf3dd409"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "ffd2e501a315e50d3d6110205085ba9eda39922b", "unresolved": false, "patch_set": 7, "id": "df33271e_5b72edae", "line": 665, "range": {"start_line": 665, "start_character": 49, "end_line": 665, "end_character": 62}, "in_reply_to": "df33271e_50bbece3", "updated": "2020-04-07 18:45:52.000000000", "message": "So when token expires once, all subsequent connections will ask for token to be refreshed. Assuming token expires occasionally, this behavior doesn't seem to be much different from not adding refresh parameter and just always refreshing the token.", "commit_id": "9d6bee9a978366c75ce6d5ca3bedb49bdf3dd409"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "7ec1c7d252d92905aa94fd9163fd225c3c20a1e8", "unresolved": false, "patch_set": 7, "id": "df33271e_47fe9405", "line": 667, "range": {"start_line": 667, "start_character": 17, "end_line": 667, "end_character": 32}, "updated": "2020-04-07 16:00:38.000000000", "message": "I'm not sure this is a safe thing to do from within endpoint loop", "commit_id": "9d6bee9a978366c75ce6d5ca3bedb49bdf3dd409"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "8fd94d3994ec2d4bee24cf5deda1bed01e4f5fa7", "unresolved": false, "patch_set": 7, "id": "df33271e_f0ede0b7", "line": 667, "range": {"start_line": 667, "start_character": 17, "end_line": 667, "end_character": 32}, "in_reply_to": "df33271e_47fe9405", "updated": "2020-04-07 18:28:39.000000000", "message": "What potential risks do you see here? Or there's a better way to get the new header values to the other endpoints?", "commit_id": "9d6bee9a978366c75ce6d5ca3bedb49bdf3dd409"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "587141bf79166141bf84f34c574eeb246dc1e152", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_789e0c64", "line": 76, "range": {"start_line": 76, "start_character": 51, "end_line": 76, "end_character": 65}, "updated": "2020-04-13 21:15:25.000000000", "message": "do we still need this?", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "9ad5193823e3325fd643f0ef25946fff69356462", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_7880cc8c", "line": 76, "range": {"start_line": 76, "start_character": 51, "end_line": 76, "end_character": 65}, "in_reply_to": "3f4c43b2_789e0c64", "updated": "2020-04-13 22:03:22.000000000", "message": "Yes I believe so... the refresh param is used by the dummy conn, and if you look at patch 3 the tests will complain if the method in the base class does not have a refresh parameter (unknown arg will be thrown)", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "26563000c8acfdf8a7ab9cb3dc1fc7d596b6ce41", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_e7e6de44", "line": 385, "range": {"start_line": 385, "start_character": 28, "end_line": 385, "end_character": 41}, "updated": "2020-04-14 23:19:48.000000000", "message": "do we still need this one?", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "26563000c8acfdf8a7ab9cb3dc1fc7d596b6ce41", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_273726b3", "line": 468, "range": {"start_line": 468, "start_character": 8, "end_line": 468, "end_character": 58}, "updated": "2020-04-14 23:19:48.000000000", "message": "sorry I'm a bit confused here - we should call the actual new_connection here, right? Call to _create_conn would just return a function", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "70fbceddaaadfc552e347586981656b6432a9975", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_475fd2e1", "line": 468, "range": {"start_line": 468, "start_character": 8, "end_line": 468, "end_character": 58}, "in_reply_to": "3f4c43b2_273726b3", "updated": "2020-04-14 23:22:16.000000000", "message": "Perhaps it would be cleaner to skip the create_conn and call token_provider.get_token(refresh=refresh) on provider directly?", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "605c3a81a05e9bf6fcd6920f338235e73fea9d3e", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_997dbe1e", "line": 468, "range": {"start_line": 468, "start_character": 8, "end_line": 468, "end_character": 58}, "in_reply_to": "3f4c43b2_475fd2e1", "updated": "2020-04-17 17:48:46.000000000", "message": "updated", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "587141bf79166141bf84f34c574eeb246dc1e152", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_38a2c49b", "line": 667, "range": {"start_line": 667, "start_character": 17, "end_line": 667, "end_character": 33}, "updated": "2020-04-13 21:15:25.000000000", "message": "I think we still need to regenerate the pool, otherwise get_default_headers will not be called for other connections, is this right?", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "9ad5193823e3325fd643f0ef25946fff69356462", "unresolved": false, "patch_set": 8, "id": "3f4c43b2_b84b7485", "line": 667, "range": {"start_line": 667, "start_character": 17, "end_line": 667, "end_character": 33}, "in_reply_to": "3f4c43b2_38a2c49b", "updated": "2020-04-13 22:03:22.000000000", "message": "Good point.. Let me upload another patch", "commit_id": "f9705cdf905aa5c4a3e31fd0da7cc849b3d93f4f"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "3d20c625c8728583a3fe061ba23f00ab8fda5002", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_6d60b702", "line": 234, "range": {"start_line": 234, "start_character": 49, "end_line": 234, "end_character": 62}, "updated": "2020-04-17 16:59:59.000000000", "message": "same here - not needed?", "commit_id": "94503d3f9cd702ff2a4fb6816334be54095566df"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "605c3a81a05e9bf6fcd6920f338235e73fea9d3e", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_10ee6687", "line": 234, "range": {"start_line": 234, "start_character": 49, "end_line": 234, "end_character": 62}, "in_reply_to": "3f4c43b2_6d60b702", "updated": "2020-04-17 17:48:46.000000000", "message": "will remove", "commit_id": "94503d3f9cd702ff2a4fb6816334be54095566df"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "f0ffa6a886667debcff6d320275df4009ec2fdaa", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_ad50ff5e", "line": 370, "range": {"start_line": 370, "start_character": 28, "end_line": 370, "end_character": 41}, "updated": "2020-04-17 16:52:04.000000000", "message": "I don't think we need this part anymore?", "commit_id": "94503d3f9cd702ff2a4fb6816334be54095566df"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "b4893049f2fd576dce66fac9dfd32c5d6e603f41", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_8d03830f", "line": 667, "range": {"start_line": 667, "start_character": 11, "end_line": 667, "end_character": 38}, "updated": "2020-04-17 17:03:19.000000000", "message": "I'm still not confident about this part - we're regenerating endpoints from within endpoint connection generator. I'm not sure its a good idea and I think its safer to pay the price of hitting \"bad credentials\" once per endpoint. What do you think?", "commit_id": "94503d3f9cd702ff2a4fb6816334be54095566df"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "605c3a81a05e9bf6fcd6920f338235e73fea9d3e", "unresolved": false, "patch_set": 13, "id": "3f4c43b2_b0e5f2aa", "line": 667, "range": {"start_line": 667, "start_character": 11, "end_line": 667, "end_character": 38}, "in_reply_to": "3f4c43b2_8d03830f", "updated": "2020-04-17 17:48:46.000000000", "message": "So essentially you think it's safer to remove those two lines? I suppose that should be fine", "commit_id": "94503d3f9cd702ff2a4fb6816334be54095566df"}], "vmware_nsxlib/v3/config.py": [{"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "90499173ed0166445b5f356558905caf41146c2d", "unresolved": false, "patch_set": 1, "id": "df33271e_545e1212", "line": 46, "range": {"start_line": 46, "start_character": 50, "end_line": 46, "end_character": 68}, "updated": "2020-03-29 03:42:53.000000000", "message": "shouldn't this exception also cause retry?", "commit_id": "ce044f8f73fe19cbf9d0b442b6184307f61ac16e"}, {"author": {"_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, "change_message_id": "1a10fdc0f0eb3923d8f566c433822e8ba423f01c", "unresolved": false, "patch_set": 1, "id": "df33271e_577c3971", "line": 46, "range": {"start_line": 46, "start_character": 50, "end_line": 46, "end_character": 68}, "in_reply_to": "df33271e_545e1212", "updated": "2020-03-30 22:47:08.000000000", "message": "Yes. I'm under the impression that this will be returned by L734 in cluster.py and hit the retry wrapper. But maybe adding it to the retriables would make more sense.", "commit_id": "ce044f8f73fe19cbf9d0b442b6184307f61ac16e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "37f6d08f06a681bb1a321eaacc1107fc152a4b10", "unresolved": false, "patch_set": 1, "id": "df33271e_b7d5c5e7", "line": 46, "range": {"start_line": 46, "start_character": 50, "end_line": 46, "end_character": 68}, "in_reply_to": "df33271e_577c3971", "updated": "2020-03-30 23:07:34.000000000", "message": "Looks like it will be raised by L728? We can assume that all regenerate_pool exceptions should be retried in exception config.", "commit_id": "ce044f8f73fe19cbf9d0b442b6184307f61ac16e"}]}}, "x%2Fvmware-nsxlib~master~Ib4aa5eb95069b917c989b1f6dcd3535880b5a038": {"owner_id": 24247, "owner_name": "Anna Khmelnitsky", "owner_email": "akhmelnitsky@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2020-04-17 20:17:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"vmware_nsxlib/v3/config.py": [{"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "64ddf01469333a79a7e00c3d8df07583f1e69470", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_e0ea2f73", "line": 217, "range": {"start_line": 217, "start_character": 27, "end_line": 217, "end_character": 64}, "updated": "2020-04-16 05:24:24.000000000", "message": "the order of the parameters here should be revered", "commit_id": "fe73202b5144f81b7f06cd747eabc05dcd2a2444"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "7f17635d7c13ec722ac33a953e6ed5554b629d12", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_78aa45d2", "line": 217, "range": {"start_line": 217, "start_character": 27, "end_line": 217, "end_character": 64}, "in_reply_to": "3f4c43b2_e0ea2f73", "updated": "2020-04-16 21:02:54.000000000", "message": "Done", "commit_id": "fe73202b5144f81b7f06cd747eabc05dcd2a2444"}]}}, "opendev%2Fsystem-config~master~I5a92bb214b96447008ad570e176adda13c4ca0cb": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 21:08:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-16 21:08:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-common~master~Ic7696a6ba0fc213b59edf87cf9ef2a804ebca94f": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-13 20:54:24.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-14 09:36:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-14 13:26:08.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~I34f4d24849fbfbd7f4a810c748621af7b0150f18": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 08:32:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 18:57:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Fsqlalchemy-migrate~master~I88ab886f0cd21249c1e81f2592e2a0ca1102fce3": {"owner_id": 28456, "owner_name": "Nicola Soranzo", "owner_email": "nicola.soranzo@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~I2244b680eef93f9ff30ffd69c7da0e226a76d427": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 19:20:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 1, "date": "2020-04-15 17:55:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 2, "date": "2020-04-15 16:44:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"gerrit/projects.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "eea593b810734780aa3aa18c737fd7261f69b6e4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_23170cf0", "line": 1673, "range": {"start_line": 1673, "start_character": 1, "end_line": 1673, "end_character": 63}, "updated": "2020-04-15 16:07:46.000000000", "message": "remove the line, it's redundant.", "commit_id": "b681e19fca8b24f48c8020463483103669a71e47"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "e0bb7154f0f47bd68f9b583a913092300d6f00b9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_23ec2cf2", "line": 1673, "range": {"start_line": 1673, "start_character": 1, "end_line": 1673, "end_character": 63}, "in_reply_to": "3f4c43b2_23170cf0", "updated": "2020-04-15 16:08:42.000000000", "message": "Oops, should've realized that.", "commit_id": "b681e19fca8b24f48c8020463483103669a71e47"}]}}, "openstack%2Fkolla-ansible~master~I8158ba66b8b624f6bcb89da9c990a30a68b7187b": {"owner_id": 30408, "owner_name": "Qitao", "owner_email": "qihongtao@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 16:21:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 0, "_account_id": 30408, "name": "Qitao", "email": "qihongtao@inspur.com", "username": "qihongtao"}, {"value": 2, "date": "2020-04-17 17:33:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-04-17 16:15:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 19316, "name": "Eduardo Gonzalez", "email": "dabarren@gmail.com", "username": "egonzalez90"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 0, "_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 22165, "name": "caoyuan", "email": "cao.yingjunz@gmail.com", "username": "caoyuan"}, "change_message_id": "bb1d4a11cedc031c4d1a6061a98546075c2e402c", "unresolved": false, "patch_set": 4, "id": "7f423b7e_adffc932", "line": 12, "range": {"start_line": 9, "start_character": 0, "end_line": 12, "end_character": 65}, "updated": "2020-04-11 08:52:46.000000000", "message": "Depends-on: Id5e143636f9a81e7294b775f3d8b9134bee58054 is need for this changed", "commit_id": "53b07b55d9ff3ee5f1684283efce0409329603ed"}], "ansible/roles/common/templates/conf/filter/01-rewrite-0.12.conf.j2": [{"author": {"_account_id": 19316, "name": "Eduardo Gonzalez", "email": "dabarren@gmail.com", "username": "egonzalez90"}, "change_message_id": "7aaceac872becf3a8696ea586d14b5f4afd21484", "unresolved": false, "patch_set": 3, "id": "df33271e_37ff6c68", "line": 34, "range": {"start_line": 34, "start_character": 74, "end_line": 34, "end_character": 75}, "updated": "2020-04-06 07:28:29.000000000", "message": "double | not required", "commit_id": "7ef397a43a94fd54904b35294963785e8ccb1609"}], "ansible/roles/vitrage/defaults/main.yml": [{"author": {"_account_id": 19316, "name": "Eduardo Gonzalez", "email": "dabarren@gmail.com", "username": "egonzalez90"}, "change_message_id": "7aaceac872becf3a8696ea586d14b5f4afd21484", "unresolved": false, "patch_set": 3, "id": "df33271e_37348c4a", "line": 82, "updated": "2020-04-06 07:28:29.000000000", "message": "there is not vitrage-persistor image in kolla https://github.com/openstack/kolla/tree/master/docker/vitrage", "commit_id": "7ef397a43a94fd54904b35294963785e8ccb1609"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8419fa1fa4b78b5033c85f16a10073986ed7f266", "unresolved": false, "patch_set": 3, "id": "df33271e_e642140f", "line": 82, "in_reply_to": "df33271e_37348c4a", "updated": "2020-04-09 02:36:32.000000000", "message": "Added in https://review.opendev.org/#/c/717891/", "commit_id": "7ef397a43a94fd54904b35294963785e8ccb1609"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "f0ffeacad598401bcb72798f46bac1f59263e445", "unresolved": false, "patch_set": 10, "id": "3f4c43b2_ff2bd4e7", "line": 118, "updated": "2020-04-17 09:40:31.000000000", "message": "- \"{{ '/etc/timezone:/etc/timezone:ro' if kolla_base_distro in ['debian', 'ubuntu'] else '' }}\"", "commit_id": "bb104609cf967a9ca21744e5fcab77b57bc423cf"}]}}, "openstack%2Fkolla-ansible~master~Iacfce48f23dc5887c5f549a70250eee3e4e3f026": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 14:45:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Fkolla~stable%2Ftrain~I4541c3c070ca70a2ee62f2a0e4ac5d70c57ca6e9": {"owner_id": 27614, "owner_name": "ya.wang", "owner_email": "me@littleya.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 09:19:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-04-16 08:34:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "opendev%2Fsystem-config~master~Ia8249a2b84a2ef167ee4ffd66d7a7e7cff8e21fb": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 19:08:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-16 19:08:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~If0d6d8a737a22b85ed38e6c64c11d9df81ef3a9b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 09:47:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-17 10:08:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "openstack%2Fopenstack-ansible-rabbitmq_server~stable%2Frocky~I14ab1d8512f31adeab415ae523474b3b2147e263": {"owner_id": 13095, "owner_name": "Marc Gari\u00e9py", "owner_email": "gariepy.marc@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:48:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-17 16:58:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fopenstack-ansible-rabbitmq_server~stable%2Frocky~I150d2d9f943503847e4a5d6547bfcadb6227e2d7": {"owner_id": 13095, "owner_name": "Marc Gari\u00e9py", "owner_email": "gariepy.marc@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:48:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-04-17 16:58:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 0, "_account_id": 13095, "name": "Marc Gari\u00e9py", "email": "gariepy.marc@gmail.com", "username": "mgariepy"}], "comments": {}}, "starlingx%2Fmetal~master~I53b61ae0831d53d8bfc5f41ac3724f97a51e5d83": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 2, "date": "2020-04-17 15:39:21.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-04-17 18:17:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-04-17 19:04:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, {"value": 1, "date": "2020-04-17 17:18:40.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "d9eb07662e204efa2a8a3a9ced92b8aefb17248d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_c41c4714", "line": 7, "updated": "2020-04-17 15:09:41.000000000", "message": "Per:\nhttps://wiki.openstack.org/wiki/GitCommitMessages#Summary_of_Git_commit_message_structure\n\nFirst line (title line) should be 50 characters max. Try to keep the title brief (but descriptive). More details can be added in description paragraphs.\n\nSomething like:\n\nFilter cert-manager and nginx RPMS\n\nAdd stx-cert-manager-helm and stx-nginx-ingress-controller-helm\nto filter files to avoid installation of these RPMs on storage\nand worker nodes.", "commit_id": "04c461c59562271b99d8e84e14d777bc09001ba0"}]}}, "airship%2Fairshipctl~master~Id507ca50518a103ec7df30b201928bba6f76840e": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 18:20:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-04-17 18:49:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}], "comments": {}}, "openstack%2Foslo.config~master~I2f8067eeb2aec62f098bfbb3770a67f1876ce7a2": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-31 19:59:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-06 13:37:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "x%2Fpyghmi~master~I81cb68805ddaf5c4ae79eafb08fa4c27672945f2": {"owner_id": 7902, "owner_name": "Jarrod Johnson", "owner_email": "jjohnson2@lenovo.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 17:15:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7902, "name": "Jarrod Johnson", "email": "jjohnson2@lenovo.com", "username": "jbjohnso"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Ftrain~Ib714662235929ee732db5e185286c74c4fb44d56": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 08:55:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16312, "name": "Alfredo Moralejo", "email": "amoralej@redhat.com", "username": "amoralej"}, {"value": 2, "date": "2020-04-17 09:25:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-04-17 18:15:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Fcert-manager-armada-app~master~I9761cd97ca758dc57a9fd0edbbfdc987584f7121": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 1, "date": "2020-04-17 15:41:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-04-17 18:11:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31818, "name": "Angie", "email": "yg.jwang1028@gmail.com", "username": "AngieWang"}, {"value": 2, "date": "2020-04-17 18:17:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 2, "date": "2020-04-17 17:18:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_9270cfa7", "line": 8, "updated": "2020-04-16 19:48:17.000000000", "message": "Would prefer a bit more info about what this is.", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/centos/build_srpm.data": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "3de22f89bdde5072d5e9b9dabb02abccdddeda31", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_97144150", "line": 3, "updated": "2020-04-16 19:29:47.000000000", "message": "Initial version can be 0", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}, {"author": {"_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, "change_message_id": "5cfd0021b1311dd112adbfd4c5e9ea4223ab62b8", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_72f6e3fb", "line": 3, "in_reply_to": "3f4c43b2_97144150", "updated": "2020-04-17 18:08:32.000000000", "message": "Done", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/Chart.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1264bfe3", "line": 3, "updated": "2020-04-16 19:48:17.000000000", "message": "Does this string get displayed anywhere in helm?", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/certificaterequests.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f28cb380", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "If you have an opportunity, you might want to consider v1 instead.  It might save some upgrade effort when 1.19 is released.\nhttps://github.com/kubernetes/kubernetes/issues/82022", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/certificates.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52e92718", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "same as previous comment (using v1 instead of v1beta1 if possible)", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/challenges.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_92f3af0a", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "same as my earlier comment", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/clusterissuers.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_d2dc1776", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "same as my earlier comment", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/issuers.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2d7cb4f", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "same as my earlier comment", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}], "stx-cert-manager-helm/stx-cert-manager-helm/helm-charts/certmgr-crds/templates/orders.yaml": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "add17de0abd3cc0dd45748883868861f32e3085d", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52d2c75d", "line": 1, "updated": "2020-04-16 19:48:17.000000000", "message": "same as my earlier comment", "commit_id": "b6b0fe020b0232a48eb89d1116778ea769783c39"}]}}, "starlingx%2Fnginx-ingress-controller-armada-app~master~I42e4dc47d2b65da807edf0ea8b7af93457e027b8": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 1, "date": "2020-04-17 15:42:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-04-17 18:17:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 1, "date": "2020-04-17 18:11:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31818, "name": "Angie", "email": "yg.jwang1028@gmail.com", "username": "AngieWang"}, {"value": 0, "_account_id": 28715, "name": "Jim Gauld", "email": "James.Gauld@windriver.com", "username": "jgauld"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 2, "date": "2020-04-17 17:18:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "263a97aeaf277def72bdd8dfc5d7d32813227c9a", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_172f91a1", "line": 8, "updated": "2020-04-16 19:35:24.000000000", "message": "Is there a bit more you can add to this commit message.\nIts an initial commit, but can more info be provided about what this is, etc..", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}, {"author": {"_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, "change_message_id": "c8f315c95cbd98a4d6c2f30519bbf3086a7dc23b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_1b4dfb99", "line": 8, "in_reply_to": "3f4c43b2_172f91a1", "updated": "2020-04-17 18:06:17.000000000", "message": "Done", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "2a3038307496ae333ccf2aa789f071ac5abe8fef", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_d3788f2b", "line": 7, "updated": "2020-04-17 13:32:20.000000000", "message": "Please see the openstack commit message guidelines:\nhttps://wiki.openstack.org/wiki/GitCommitMessages#Summary_of_Git_commit_message_structure\n\nAdd a line break after the first line, the title. Which should not have a period at the end.\n\nWrap the description at 70 characters (where possible... a URL would be an exception).", "commit_id": "f40a74ba450f5f10fbe873f1a819f994e04356c4"}], "centos_stable_docker_images.inc": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "1dd3ef69294583efa77f840c651610c5628b7ed9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_52280785", "line": 1, "updated": "2020-04-16 19:33:37.000000000", "message": "I don't see any image directives files. I don't think you need this file here. Are you trying to build an image?", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}, {"author": {"_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, "change_message_id": "c8f315c95cbd98a4d6c2f30519bbf3086a7dc23b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_f2b3134c", "line": 1, "in_reply_to": "3f4c43b2_52280785", "updated": "2020-04-17 18:06:17.000000000", "message": "Im not sure what this file does. I copied it from another app -- but I see that it is not included in other apps. Can this be removed then?", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}], "stx-nginx-ingress-controller-helm/centos/build_srpm.data": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "1dd3ef69294583efa77f840c651610c5628b7ed9", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_12367fe7", "line": 10, "updated": "2020-04-16 19:33:37.000000000", "message": "this can be 0", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}, {"author": {"_account_id": 31500, "name": "Sabeel Ansari", "email": "Sabeel.Ansari@windriver.com", "username": "sansari"}, "change_message_id": "c8f315c95cbd98a4d6c2f30519bbf3086a7dc23b", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_b2922b9e", "line": 10, "in_reply_to": "3f4c43b2_12367fe7", "updated": "2020-04-17 18:06:17.000000000", "message": "Done", "commit_id": "701c50fd6c531938d8146810b707cff460600bba"}]}}, "openstack%2Freleases~master~I485468ec07f923ea2419b22aae1a1fe610b7b593": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 14:25:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-04-17 17:17:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-17 14:20:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "jjb%2Fjenkins-job-builder~master~Ie83355705f0526f2984eca0e5f1f80fba8b1ba5f": {"owner_id": 23942, "owner_name": "Matt Kucia", "owner_email": "maciej@kucia.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:04:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13807, "name": "Thanh Ha", "display_name": "zxiiro", "email": "zxiiro@gmail.com", "username": "zxiiro", "status": "On Leave"}, {"value": 2, "date": "2020-04-17 17:35:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}], "comments": {}}, "opendev%2Fsystem-config~master~Ic06c9cf9604402aa8eb4bb79238021c14c5d9563": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 16:46:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": -2, "date": "2020-04-17 17:27:05.000000000", "post_submit": true, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 15:56:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-04-17 15:55:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "d85fc74df098735854e21cce78e286a0c2477185", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_266ee594", "line": 17, "updated": "2020-04-16 16:04:38.000000000", "message": "Revised plan:\n* add zk* to emergency\n* copy data files on each node to a safe place for DR backup\n* make a json data backup: zk-shell localhost:2181 --run-once 'mirror / json://!tmp!zookeeper-backup.json/'\n* manually run a modified playbook to set up the docker infra without starting containers\n* rolling restart; for each node:\n  * stop zk\n  * split data and log files and move them to new locations\n  * remove zk packages\n  * start zk containers\n* remove from emergency; land this change.", "commit_id": "de7cc34c69aa2db7a7a53c7ccb367eccda25205f"}], "playbooks/roles/zookeeper/tasks/main.yaml": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "ef49144e306f559c5e5e2cd6a16c897d96955b41", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_b7785d2b", "line": 22, "updated": "2020-04-16 18:47:06.000000000", "message": "This is going to conflict with clarkb's patch.", "commit_id": "db32aab9c34c964918ac28cb2836787d2e540b95"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "9582b86ef6617e4c280502ab8db258174a834ca0", "unresolved": false, "patch_set": 5, "id": "3f4c43b2_17c67149", "line": 22, "in_reply_to": "3f4c43b2_b7785d2b", "updated": "2020-04-16 18:51:42.000000000", "message": "Could replace with:\n\n  - name: Install docker-compose\n    pip:\n      name: docker-compose\n      state: present\n      executable: pip3\n\nwhich should not be a conflict with the clarkb patch, then we can drop it from here later.", "commit_id": "db32aab9c34c964918ac28cb2836787d2e540b95"}, {"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "a5124d617cf121134b17c59c16ac099667c537c5", "unresolved": false, "patch_set": 7, "id": "3f4c43b2_b2834ba9", "line": 1, "updated": "2020-04-16 20:41:04.000000000", "message": "Nit: gRoup", "commit_id": "5fc7372834708f86c7071dcb850df0a5f0d1182d"}], "playbooks/roles/zookeeper/templates/zoo.cfg.j2": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "46d62b44c60dcef67b4ec60e861873eb721490c0", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_b76e9d93", "line": 15, "updated": "2020-04-16 18:40:20.000000000", "message": "That's the default.", "commit_id": "f92ca5ef8fb0763a28d94e1e0befcd2845ab1201"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "ca86ac91c2933c5b53a5a2180c27b37a536771f7", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_d74a4925", "line": 15, "updated": "2020-04-16 18:39:17.000000000", "message": "We also set snapCount to 10000 on puppet managed zk.", "commit_id": "f92ca5ef8fb0763a28d94e1e0befcd2845ab1201"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "cf946c56382aebfc211f241f89fe4dab368da057", "unresolved": false, "patch_set": 10, "id": "3f4c43b2_78c6ba9c", "line": 27, "range": {"start_line": 27, "start_character": 36, "end_line": 27, "end_character": 54}, "updated": "2020-04-17 12:25:22.000000000", "message": "I think you can use hostvars[host].ansible_default_ipv4.address to get the ip address", "commit_id": "a71b1955a664f00ebf2819ada483f0dc3600825c"}], "playbooks/service-zookeeper.yaml": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "46d62b44c60dcef67b4ec60e861873eb721490c0", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_176e7194", "line": 1, "updated": "2020-04-16 18:40:20.000000000", "message": "Ayup.", "commit_id": "f92ca5ef8fb0763a28d94e1e0befcd2845ab1201"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "ca86ac91c2933c5b53a5a2180c27b37a536771f7", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_f74f8531", "line": 1, "updated": "2020-04-16 18:39:17.000000000", "message": "Should we serialize this play like we do with gitea to prevent all zk's from being restarted at once? We use zk:latest image so we'll be doing restarts occasionally.", "commit_id": "f92ca5ef8fb0763a28d94e1e0befcd2845ab1201"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "56df262317f4f8b90856a36126ad796aa2ad908f", "unresolved": false, "patch_set": 4, "id": "3f4c43b2_3708cdd7", "line": 1, "in_reply_to": "3f4c43b2_f74f8531", "updated": "2020-04-16 18:40:36.000000000", "message": "That sounds like a good idea.", "commit_id": "f92ca5ef8fb0763a28d94e1e0befcd2845ab1201"}]}}, "x%2Ftobiko~master~If4e5a74dcc90b18d060c4f8bf4f0a170d881d9d1": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 13:22:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Fcharm-interface-mysql-router~master~I6ec40bc65f719e1938d9b0ccdb7ad00236f435d0": {"owner_id": 20805, "owner_name": "David Ames", "owner_email": "david@davam.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 0, "_account_id": 12549, "name": "gnuoy", "email": "liam.young@canonical.com", "username": "gnuoy"}, {"value": 0, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 2, "date": "2020-04-17 17:04:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {"unit_tests/test_requires.py": [{"author": {"_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, "change_message_id": "77f685926c107535ccb64095ee24c81c47ee613b", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_632e1f44", "line": 167, "updated": "2020-04-16 15:25:42.000000000", "message": "same nitpick as in a similar review: isn't 90 the value for the timeout instead of the db host?", "commit_id": "43f93e174d5a468365c7b1dcab42313e39d62a8d"}]}}, "openstack%2Fneutron~master~I685c86e19fc1acc29fe048e8f7810006e0bb16a9": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-04-14 09:00:47.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-16 10:07:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-04-14 09:15:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-04-17 11:49:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 1, "date": "2020-04-16 09:51:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"neutron/tests/functional/agent/ovn/metadata/test_metadata_agent.py": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "ca5773bc8bcb627340721a921ea200b1e75fd0d8", "unresolved": false, "patch_set": 2, "id": "df33271e_0ed3cad6", "line": 223, "range": {"start_line": 218, "start_character": 0, "end_line": 223, "end_character": 77}, "updated": "2020-04-09 09:15:36.000000000", "message": "We have pretty much the same in lines 236-242.", "commit_id": "b20c7488c4880c5994a6c4595658072ef234b554"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "e9953fc951b249b4b00ad2ef45a05a7fe43453ae", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_03467424", "line": 223, "range": {"start_line": 218, "start_character": 0, "end_line": 223, "end_character": 77}, "in_reply_to": "df33271e_0ed3cad6", "updated": "2020-04-14 08:55:25.000000000", "message": "Actually is the same. I'll change that.", "commit_id": "b20c7488c4880c5994a6c4595658072ef234b554"}]}}, "openstack%2Fpython-cinderclient~master~I2898616ec6302bb578ddc265d6c6dc02d8415eac": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 15:41:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 1, "date": "2020-04-17 14:36:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-17 14:19:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fcinderlib~master~I8712045752a7a150a3633451246ed992dee35972": {"owner_id": 9535, "owner_name": "Gorka Eguileor", "owner_email": "geguileo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 2, "date": "2020-04-03 12:59:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 13:05:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"releasenotes/notes/fix-mysql-vol-delete-f675778ea150cb9a.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "19f498d979f046e7f891141e33a16dc33559efa9", "unresolved": false, "patch_set": 2, "id": "df33271e_e1ee06b3", "line": 4, "range": {"start_line": 4, "start_character": 8, "end_line": 4, "end_character": 16}, "updated": "2020-04-03 12:59:20.000000000", "message": "Would be nice to link to the launchpad bug, but that's just a bonus.", "commit_id": "cefeef4c7e41bdcc3140cb4ea555187f59e00f7c"}]}}, "openstack%2Fosc-lib~master~I0a8b15e6680f8ef13693fb961b8eb4c729b37dae": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 2, "date": "2020-04-17 09:31:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-04-17 09:29:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-04-17 14:37:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-17 12:12:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "a36f7c791db615dfd2a91d8dbc0702ae63fedbac", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_4d3fc5d5", "line": 23, "updated": "2020-04-17 09:13:46.000000000", "message": "Is Babel really needed?\n\nThe translation jobs in the OpenStack infra installs babel into a dedicated venv using ensure-babel role, so there is no need to have it in a project test-requirements.txt.\nIn addition, osc-lib is not marked as \"translate\" in project-config.\n\nIs there some other reason we need this?", "commit_id": "9c5288682b41fa45ab57378c6f68d436237ed8c4"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "2b4d7823cea3a39eb30158eae02971b8d93d6546", "unresolved": false, "patch_set": 2, "id": "3f4c43b2_5f6f6891", "line": 23, "in_reply_to": "3f4c43b2_4d3fc5d5", "updated": "2020-04-17 09:28:19.000000000", "message": "I just played it safe (mostly because I didn't know how translation jobs work). I'll remove it.", "commit_id": "9c5288682b41fa45ab57378c6f68d436237ed8c4"}]}}, "openstack%2Freleases~master~I71a310527f58fcc70a98d48b31806f33dfeb0251": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-04-17 13:39:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-04-16 13:21:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-04-17 11:55:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deliverables/_independent/tripleo-repos.yaml": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "5a4f72194cd8405f71218697a39866bd70811ef4", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_bbcb3151", "line": 12, "range": {"start_line": 12, "start_character": 14, "end_line": 12, "end_character": 54}, "updated": "2020-04-16 13:21:17.000000000", "message": "LGTM to keep the py27 support as explained in the commit msg", "commit_id": "a1ad3fed73969840ce588c66b265c477a1a75175"}]}}, "airship%2Fpromenade~master~Ic1dc93f6b6290d31bfb224fb42287ad61dc491bb": {"owner_id": 29161, "owner_name": "Rahul Khiyani", "owner_email": "rahul.khiyani@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 1, "date": "2020-04-17 16:37:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "openstack%2Fcinder~stable%2Fqueens~I942d9d8b3976232ae1cf82b698fb27285fbef13a": {"owner_id": 7130, "owner_name": "David Hill", "owner_email": "davidchill@hotmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24230, "name": "NetApp E-Series CI", "email": "ng-openstack-eseries-ci@netapp.com", "username": "netapp-eseries-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 2, "date": "2020-03-23 14:54:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-04-17 12:49:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fshade~master~Iaceea4271459eeb0c5066b2a9304754691c16712": {"owner_id": 22816, "owner_name": "OpenStack Release Bot", "owner_email": "infra-root@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 14:55:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "49338e9ad0f4226ce4318d16689020609ab4ca6c", "unresolved": false, "patch_set": 1, "id": "df33271e_02bf04aa", "line": 244, "range": {"start_line": 217, "start_character": 2, "end_line": 244, "end_character": 0}, "updated": "2020-04-10 14:18:25.000000000", "message": "The project template \"openstack-python3-victoria-jobs\" was not found.", "commit_id": "cf51f172685e8470c6cf935b21304a7ef0831aae"}]}}, "opendev%2Fsystem-config~master~Id4cd17d816c9af023a655bdadeedb9421e51cdca": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-04-17 15:56:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-04-17 16:06:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "9a2869c4bd3382a144f870828c23d8a1c41c53fb", "unresolved": false, "patch_set": 1, "id": "3f4c43b2_6ad1bdfb", "line": 1844, "updated": "2020-04-17 15:56:51.000000000", "message": "This is a change, but should be fine.", "commit_id": "e7878b1ddb1f5921c2c6ab08cf6d8495c76afcaa"}]}}, "x%2Fvmware-nsxlib~master~If4dd5c01e4bc83c9704347c2c7c8638c5ac1d72c": {"owner_id": 24247, "owner_name": "Anna Khmelnitsky", "owner_email": "akhmelnitsky@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, {"value": 0, "_account_id": 31672, "name": "Yang Ding", "email": "dingyang@vmware.com", "username": "dyanngg"}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2020-04-16 13:12:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 31476, "name": "Enhao Cui", "email": "ecui@vmware.com", "username": "ecui"}, {"value": 2, "date": "2020-04-17 16:36:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 2, "date": "2020-04-16 13:12:55.000000000", "_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, {"value": 0, "date": "2020-04-17 00:46:48.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "3a0ad71b296878536358e3b3392665c181e7fb6a", "unresolved": false, "patch_set": 20, "id": "3f4c43b2_59b216e8", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 5}, "updated": "2020-04-15 01:00:42.000000000", "message": "Expose", "commit_id": "3fab44e4fc1fbf4c82fce8d6561f86dbbe37b080"}], "vmware_nsxlib/tests/unit/v3/test_cluster.py": [{"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_ebffe864", "line": 419, "range": {"start_line": 419, "start_character": 37, "end_line": 419, "end_character": 69}, "updated": "2020-04-13 23:12:01.000000000", "message": "This is already in ExceptionConfig.retriables?\nSame for line 441", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_c4e13901", "line": 419, "range": {"start_line": 419, "start_character": 37, "end_line": 419, "end_character": 69}, "in_reply_to": "3f4c43b2_ebffe864", "updated": "2020-04-14 04:14:13.000000000", "message": "Thanks, removed", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_6b9e3864", "line": 425, "updated": "2020-04-13 23:12:01.000000000", "message": "What is the difference between setting max_attempts on line 425 and line 401?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_24e61d18", "line": 425, "in_reply_to": "3f4c43b2_6b9e3864", "updated": "2020-04-14 04:14:13.000000000", "message": "No difference, fixed to avoid confusion", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_cbaf8c92", "line": 426, "range": {"start_line": 426, "start_character": 54, "end_line": 426, "end_character": 59}, "updated": "2020-04-13 23:12:01.000000000", "message": "Is this necessary since False is the default value?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "09248bdc57a17dac24582b606fa860194e47d7ea", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_a4a06da7", "line": 426, "range": {"start_line": 426, "start_character": 54, "end_line": 426, "end_character": 59}, "in_reply_to": "3f4c43b2_04e32107", "updated": "2020-04-14 04:24:03.000000000", "message": "I thought we have 3 endpoints in this test (i.e. line 417)?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "19c968dac78b0b56abf77755d5288f1d0b3e67db", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_a7405637", "line": 426, "range": {"start_line": 426, "start_character": 54, "end_line": 426, "end_character": 59}, "in_reply_to": "3f4c43b2_a4a06da7", "updated": "2020-04-14 23:10:21.000000000", "message": "I'm sorry Shih-Hao, I was having a different test in mind when replying here. Removed.", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_04e32107", "line": 426, "range": {"start_line": 426, "start_character": 54, "end_line": 426, "end_character": 59}, "in_reply_to": "3f4c43b2_cbaf8c92", "updated": "2020-04-14 04:14:13.000000000", "message": "Yes, because this value is overriden for single endpoint", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_ebb1a8e3", "line": 430, "range": {"start_line": 430, "start_character": 47, "end_line": 430, "end_character": 52}, "updated": "2020-04-13 23:12:01.000000000", "message": "I am a little confused here. Where or how do we mock the third manager as UP state?\nSame for next test.", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "09248bdc57a17dac24582b606fa860194e47d7ea", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_c4af7992", "line": 430, "range": {"start_line": 430, "start_character": 47, "end_line": 430, "end_character": 52}, "in_reply_to": "3f4c43b2_64f025cb", "updated": "2020-04-14 04:24:03.000000000", "message": "I thought we only return GREEN when all 3 endpoints are UP (https://review.opendev.org/#/c/709634/15..18/vmware_nsxlib/v3/cluster.py@552)?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "19c968dac78b0b56abf77755d5288f1d0b3e67db", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_e74a5e53", "line": 430, "range": {"start_line": 430, "start_character": 47, "end_line": 430, "end_character": 52}, "in_reply_to": "3f4c43b2_c4af7992", "updated": "2020-04-14 23:10:21.000000000", "message": "You are right, the actual reason here is that CannotConnectToServer does not bring the endpoint down. I've added a comment.", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "99f648d50252e8a60f3358539f7dddf27d2e45f1", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_99977e91", "line": 430, "range": {"start_line": 430, "start_character": 47, "end_line": 430, "end_character": 52}, "in_reply_to": "3f4c43b2_e74a5e53", "updated": "2020-04-15 00:37:33.000000000", "message": "Cool. Thanks!", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_64f025cb", "line": 430, "range": {"start_line": 430, "start_character": 47, "end_line": 430, "end_character": 52}, "in_reply_to": "3f4c43b2_ebb1a8e3", "updated": "2020-04-14 04:14:13.000000000", "message": "We don't, but since there are only 2 retries and 3 endpoints, retries are exhausted before third endpoint is probed", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "99f648d50252e8a60f3358539f7dddf27d2e45f1", "unresolved": false, "patch_set": 19, "id": "3f4c43b2_f9884272", "line": 446, "updated": "2020-04-15 00:37:33.000000000", "message": "Is this still needed since default is False?\nIf needed, please add a comment. Thanks.", "commit_id": "4beacf815df23c14eaa1a3f62b26fa37d45664a4"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "e14aaa967ebb5556aebdb75adc2007697dc4c3bb", "unresolved": false, "patch_set": 19, "id": "3f4c43b2_1e7ea218", "line": 446, "in_reply_to": "3f4c43b2_f9884272", "updated": "2020-04-15 19:34:19.000000000", "message": "Thanks, removed this one as well", "commit_id": "4beacf815df23c14eaa1a3f62b26fa37d45664a4"}], "vmware_nsxlib/v3/client.py": [{"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "5c9fa58493b4654917180e5f7050463fb716931f", "unresolved": false, "patch_set": 2, "id": "1fa4df85_6aee9d89", "side": "PARENT", "line": 343, "range": {"start_line": 343, "start_character": 16, "end_line": 343, "end_character": 37}, "updated": "2020-02-25 00:43:09.000000000", "message": "Which method is responsible for retry upon exception now that it is removed from _rest_call?", "commit_id": "9812774970d191d09c2781da7e661d20e04f6733"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "e9169bee1a174b403dcbaa8b2fd5a38ec97dab63", "unresolved": false, "patch_set": 2, "id": "1fa4df85_71d428be", "side": "PARENT", "line": 343, "range": {"start_line": 343, "start_character": 16, "end_line": 343, "end_character": 37}, "in_reply_to": "1fa4df85_6aee9d89", "updated": "2020-02-27 02:24:55.000000000", "message": "the _proxy method in cluster will retry based on exceptions provided in new config", "commit_id": "9812774970d191d09c2781da7e661d20e04f6733"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "e91e216f7bb52b3b6fa82d97df607a860b6e58b2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_b9037942", "line": 40, "range": {"start_line": 40, "start_character": 11, "end_line": 40, "end_character": 15}, "updated": "2020-02-26 05:41:35.000000000", "message": "Maybe return response.status_code, None here?", "commit_id": "1d7c213063152d5bfa52d4cdbd058dda229cd8cc"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "e9169bee1a174b403dcbaa8b2fd5a38ec97dab63", "unresolved": false, "patch_set": 4, "id": "1fa4df85_715f4872", "line": 40, "range": {"start_line": 40, "start_character": 11, "end_line": 40, "end_character": 15}, "in_reply_to": "1fa4df85_b9037942", "updated": "2020-02-27 02:24:55.000000000", "message": "I refactored this a bit", "commit_id": "1d7c213063152d5bfa52d4cdbd058dda229cd8cc"}, {"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "2956f44c368037caaa60939879e044819e459510", "unresolved": false, "patch_set": 5, "id": "1fa4df85_c0f89a4a", "line": 48, "range": {"start_line": 48, "start_character": 11, "end_line": 48, "end_character": 69}, "updated": "2020-02-28 00:47:31.000000000", "message": "Should we return a dictionary instead so that we do not have to think about indices?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "52120a4d7006e2b853d40bfd73b63568e4eaf4ba", "unresolved": false, "patch_set": 5, "id": "1fa4df85_e757d101", "line": 48, "range": {"start_line": 48, "start_character": 11, "end_line": 48, "end_character": 69}, "in_reply_to": "1fa4df85_c0f89a4a", "updated": "2020-03-02 04:50:20.000000000", "message": "Good idea, done", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "7ba9356536e6b7464e388bdcf5bf60b1b9006fc5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_8b2b9680", "line": 61, "range": {"start_line": 61, "start_character": 17, "end_line": 61, "end_character": 27}, "updated": "2020-02-28 22:15:39.000000000", "message": "or manager=self.nsx_api_managers like on line 345?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "52120a4d7006e2b853d40bfd73b63568e4eaf4ba", "unresolved": false, "patch_set": 5, "id": "1fa4df85_674be158", "line": 61, "range": {"start_line": 61, "start_character": 17, "end_line": 61, "end_character": 27}, "in_reply_to": "1fa4df85_8b2b9680", "updated": "2020-03-02 04:50:20.000000000", "message": "this is not a class method..", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "7ba9356536e6b7464e388bdcf5bf60b1b9006fc5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_0b1d660e", "line": 135, "range": {"start_line": 135, "start_character": 65, "end_line": 135, "end_character": 70}, "updated": "2020-02-28 22:15:39.000000000", "message": "There are several places, like in ncp/nsx/manager/nsx_config.py and ncp/nsx/policy/nsx_config.py, that calls get() directly with default parameters, so this will change their behaviors.\n\nNot sure if it is OK with those places.", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "52120a4d7006e2b853d40bfd73b63568e4eaf4ba", "unresolved": false, "patch_set": 5, "id": "1fa4df85_c765f5e2", "line": 135, "range": {"start_line": 135, "start_character": 65, "end_line": 135, "end_character": 70}, "in_reply_to": "1fa4df85_0b1d660e", "updated": "2020-03-02 04:50:20.000000000", "message": "If the cluster is configured with retry behavior suggested in this patch, then call will be retried regardless of method. I I agree there is a change in behavior - but do you think there is a reason to maintain with_retry flag per method, and not on the global level?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "7ba9356536e6b7464e388bdcf5bf60b1b9006fc5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_ab3532dc", "line": 208, "updated": "2020-02-28 22:15:39.000000000", "message": "or\n    status_code, error_code, related_codes, msg = (\n        get_http_error_details(result))", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}], "vmware_nsxlib/v3/cluster.py": [{"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "80f3e66a5e349e716bcf843e5ee60c9a3d80270f", "unresolved": false, "patch_set": 2, "id": "1fa4df85_9e0d5a39", "line": 577, "updated": "2020-02-25 01:07:51.000000000", "message": "If server busy, I thought we should try another endpoint?\ni.e. if the status is still UP, it could be picked again in the next selection?", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "d4015efb5841ac11a1f125f27e25381a6bd91253", "unresolved": false, "patch_set": 2, "id": "1fa4df85_7324470e", "line": 577, "in_reply_to": "1fa4df85_9e0d5a39", "updated": "2020-02-25 19:53:17.000000000", "message": "It will be picked again after the round robin cycle is complete. This patch does not introduce the \"BUSY\" status.\nI thought first we could experiment with bringing the endpoint DOWN upon \"server busy\", by configuring the down triggers accordingly.", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 31476, "name": "Enhao Cui", "email": "ecui@vmware.com", "username": "ecui"}, "change_message_id": "e61c4d4312414f00bd4f1be3530321194a7fd7ad", "unresolved": false, "patch_set": 2, "id": "1fa4df85_be9a96c2", "line": 693, "range": {"start_line": 693, "start_character": 20, "end_line": 693, "end_character": 58}, "updated": "2020-02-25 01:22:01.000000000", "message": "Is this line needed?", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "d4015efb5841ac11a1f125f27e25381a6bd91253", "unresolved": false, "patch_set": 2, "id": "1fa4df85_132153fc", "line": 693, "range": {"start_line": 693, "start_character": 20, "end_line": 693, "end_character": 58}, "in_reply_to": "1fa4df85_be9a96c2", "updated": "2020-02-25 19:53:17.000000000", "message": "No, will remove, thanks", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "80f3e66a5e349e716bcf843e5ee60c9a3d80270f", "unresolved": false, "patch_set": 2, "id": "1fa4df85_de9f52b2", "line": 703, "updated": "2020-02-25 01:07:51.000000000", "message": "We may never reach here because the exceptions caught here could only be urllib3 or http exceptions.\n\nFor example, a ServerBusy (i.e. a ManagerError) exception is raised after returning the http content back to client.py's _rest_call(), where _validate_result() parses the error_code in the http content and raise ServerBusy if matched. So the code path must be going through line 691, which means it will not processed under line 692. Make sense?", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "d4015efb5841ac11a1f125f27e25381a6bd91253", "unresolved": false, "patch_set": 2, "id": "1fa4df85_338fafcd", "line": 703, "in_reply_to": "1fa4df85_de9f52b2", "updated": "2020-02-25 19:53:17.000000000", "message": "You are right Shih-Hao, I'll refactor this a bit", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "e91e216f7bb52b3b6fa82d97df607a860b6e58b2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_792e61a6", "side": "PARENT", "line": 87, "range": {"start_line": 87, "start_character": 8, "end_line": 87, "end_character": 31}, "updated": "2020-02-26 05:41:35.000000000", "message": "This can be removed now as it is no longer in use", "commit_id": "9812774970d191d09c2781da7e661d20e04f6733"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "e9169bee1a174b403dcbaa8b2fd5a38ec97dab63", "unresolved": false, "patch_set": 4, "id": "1fa4df85_1156145e", "side": "PARENT", "line": 87, "range": {"start_line": 87, "start_character": 8, "end_line": 87, "end_character": 31}, "in_reply_to": "1fa4df85_792e61a6", "updated": "2020-02-27 02:24:55.000000000", "message": "Thanks, done", "commit_id": "9812774970d191d09c2781da7e661d20e04f6733"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "e91e216f7bb52b3b6fa82d97df607a860b6e58b2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_992b1d93", "side": "PARENT", "line": 94, "range": {"start_line": 94, "start_character": 8, "end_line": 94, "end_character": 28}, "updated": "2020-02-26 05:41:35.000000000", "message": "This can be removed now as it is no longer in use", "commit_id": "9812774970d191d09c2781da7e661d20e04f6733"}, {"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "2956f44c368037caaa60939879e044819e459510", "unresolved": false, "patch_set": 5, "id": "1fa4df85_40490a89", "line": 643, "range": {"start_line": 641, "start_character": 8, "end_line": 643, "end_character": 18}, "updated": "2020-02-28 00:47:31.000000000", "message": "nit: not needed", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "2956f44c368037caaa60939879e044819e459510", "unresolved": false, "patch_set": 5, "id": "1fa4df85_c330a4eb", "line": 657, "range": {"start_line": 657, "start_character": 12, "end_line": 657, "end_character": 44}, "updated": "2020-02-28 00:47:31.000000000", "message": "Shouldn't this be the exception we want to retry upon?\n\ndef retry_random_upon_exception(exc, delay=0.5, max_delay=5,\n                                max_attempts=DEFAULT_MAX_ATTEMPTS):\n    return tenacity.retry(reraise=True,\n                        retry=tenacity.retry_if_exception_type(exc),", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "f692d0d9aaf81984c9e71b30f5f31cab3393d49e", "unresolved": false, "patch_set": 5, "id": "1fa4df85_df6de398", "line": 703, "range": {"start_line": 703, "start_character": 37, "end_line": 703, "end_character": 58}, "updated": "2020-02-27 05:50:45.000000000", "message": "Is that the right name for this exception? nothing exceeded yet.", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "2956f44c368037caaa60939879e044819e459510", "unresolved": false, "patch_set": 5, "id": "1fa4df85_e3404038", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "updated": "2020-02-28 00:47:31.000000000", "message": "Not sure if this will be executed. I tried a script and found renacity.RetryError is raised by the function after the last retry attemp is complete.\n\nScript:\nimport tenacity\n@tenacity.retry(retry=tenacity.retry_if_exception_type(AttributeError), stop=tenacity.stop_after_attempt(3))\ndef func():\n        print('Hi')\n        raise AttributeError\n        print('Hello!')\n\nfunc()\n\nOutput:\nroot@sc-rdops-vm06-dhcp-190-51:~# python test.py \nHi\nHi\nHi\nTraceback (most recent call last):\n  File \"test.py\", line 8, in <module>\n    func()\n  File \"/usr/local/lib/python2.7/dist-packages/tenacity/__init__.py\", line 292, in wrapped_f\n    return self.call(f, *args, **kw)\n  File \"/usr/local/lib/python2.7/dist-packages/tenacity/__init__.py\", line 358, in call\n    do = self.iter(retry_state=retry_state)\n  File \"/usr/local/lib/python2.7/dist-packages/tenacity/__init__.py\", line 332, in iter\n    six.raise_from(retry_exc, fut.exception())\n  File \"/usr/local/lib/python2.7/dist-packages/six.py\", line 737, in raise_from\n    raise value\ntenacity.RetryError: RetryError[<Future at 0x7f081f018150 state=finished raised AttributeError>]", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "a3ad52f00e5a76bc17bedc12841c1550b06edc39", "unresolved": false, "patch_set": 5, "id": "1fa4df85_4e3c30e0", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_3397dd3c", "updated": "2020-03-11 00:49:49.000000000", "message": "Thanks, I get your meaning, but is there an elegant way to preserve original exception? The user would want to see what error caused retry to fail. We can start using global vars for this but I'm afraid it will end up being more confusing..", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "bae576e695407f87590938e19b18013376aa3810", "unresolved": false, "patch_set": 5, "id": "1fa4df85_e8ee46eb", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_3a0840d8", "updated": "2020-03-10 22:26:38.000000000", "message": "I think tenacity already exposes ability to customize reraised exception - retry_error_cls\nBut I don't see how it helps here?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "c8893bb9612c4302c63acdb04315848c0131ff0d", "unresolved": false, "patch_set": 5, "id": "1fa4df85_69eb2612", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_4e3c30e0", "updated": "2020-03-11 01:28:27.000000000", "message": "I am guessing the retry_state passed to _log_before_retry or _log_after_retry may have some info about previous or current failure?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "f37eb51d9b28cfd8953091f93efe52b1285c3f56", "unresolved": false, "patch_set": 5, "id": "1fa4df85_3a0840d8", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_592c4a01", "updated": "2020-03-06 16:43:16.000000000", "message": "Yes, we may modify retry_random_upon_exception by taking a new final_exc parameter, which will be raised if the final attempt fail.\n\nFor example (not tested yet), something like\n\ndef retry_random_upon_exception(exc, final_exc, delay=0.5, max_delay=5,\n                                max_attempts=DEFAULT_MAX_ATTEMPTS):\n\n    def raise_final_exc(retry_state):\n        raise final_exc\n\n    return tenacity.retry(reraise=False,\n                          retry_error_callback=raise_final_exc,\n                          retry=tenacity.retry_if_exception_type(exc),\n                          wait=tenacity.wait_random_exponential(\n                              multiplier=delay, max=max_delay),\n                          stop=tenacity.stop_after_attempt(max_attempts),\n                          before=_log_before_retry, after=_log_after_retry", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "dfacf454152f562241431eccae875d82a236b7c9", "unresolved": false, "patch_set": 5, "id": "1fa4df85_5e128764", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_69eb2612", "updated": "2020-03-11 23:36:54.000000000", "message": "Thanks Shih-Hao for your comments on this, I refactored the code to reraise the original exception as is. Definitely better than before :)", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "ed4f8be7be2a49b92f6ac086e6fcdbc9bae480e7", "unresolved": false, "patch_set": 5, "id": "1fa4df85_592c4a01", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_b0e6ff43", "updated": "2020-03-05 01:42:23.000000000", "message": "I couldn't think of better name for the exception (ideas welcome), but added a comment that would hopefully clarify things", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "c7b549d8e53a219dacfb74ea4650f1c14a256fc0", "unresolved": false, "patch_set": 5, "id": "1fa4df85_200e4e8d", "line": 703, "range": {"start_line": 703, "start_character": 37, "end_line": 703, "end_character": 58}, "in_reply_to": "1fa4df85_df6de398", "updated": "2020-02-28 00:12:49.000000000", "message": "I agree it is confusing.. will try to come up with better name", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "b3e8f17ba6fb35b9a94da01c862905d899f766d1", "unresolved": false, "patch_set": 5, "id": "1fa4df85_b0e6ff43", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_e3404038", "updated": "2020-02-28 17:13:56.000000000", "message": "You need to set reraise=True\nThere is a new test test_max_retry_attempts_on_retriable_error that verifies the exception is raised. I agree the name is confusing.", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b26a176a2b0a767155162a43129560b59c017a2a", "unresolved": false, "patch_set": 5, "id": "1fa4df85_3397dd3c", "line": 703, "range": {"start_line": 703, "start_character": 20, "end_line": 703, "end_character": 75}, "in_reply_to": "1fa4df85_e8ee46eb", "updated": "2020-03-10 22:40:14.000000000", "message": "That's cool, so we can use retry_error_cls to raise exceptions.RetryAttemptsExceeded in the end and raise a different exception (say exceptions.XXX) on line 703 during regular iterations.\n\nFor example, line 656 can call an extended retry_random_upon_exception, say retry_random_upon_exception2:\n\n@utils.retry_random_upon_exception2(\n     exceptions.XXX,\n     exceptions.RetryAttemptsExceeded,\n     max_attempts=self.nsxlib_config.max_attempts)\n\nwhere\n\ndef retry_random_upon_exception2(exc, final_exc, delay=0.5, max_delay=5,\n                                 max_attempts=DEFAULT_MAX_ATTEMPTS):\n    return tenacity.retry(reraise=True,\n                          retry_error_cls=final_exc,\n                          retry=tenacity.retry_if_exception_type(exc),\n                          wait=tenacity.wait_random_exponential(\n                              multiplier=delay, max=max_delay),\n                          stop=tenacity.stop_after_attempt(max_attempts),\n                          before=_log_before_retry, after=_log_after_retry)\n\nMake sense?", "commit_id": "697d2c8049eeecedbe38111b25cdfaad233d015c"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "9448a5e26b87b729f036ec5a4b2f09213446fdf4", "unresolved": false, "patch_set": 7, "id": "1fa4df85_191fb25b", "line": 642, "updated": "2020-03-05 00:37:11.000000000", "message": "No directly related to this patch.\n\nI think we can move the checking for pool exhausted into _select_endpoint. Say if another endpoint has free connection, then no need to wait for an exhausted endpoint which is selected because it is UP.\n\nWhat do you think?", "commit_id": "bab34d0d822b6181ce059cad3a3f80f566e90447"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "f41df64664a40a6330741f2a4e9be31d0a99fce9", "unresolved": false, "patch_set": 7, "id": "1fa4df85_99f08293", "line": 642, "in_reply_to": "1fa4df85_191fb25b", "updated": "2020-03-05 01:40:39.000000000", "message": "I think its a good idea, lets address this in follow up patch.", "commit_id": "bab34d0d822b6181ce059cad3a3f80f566e90447"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "f37eb51d9b28cfd8953091f93efe52b1285c3f56", "unresolved": false, "patch_set": 7, "id": "1fa4df85_e7a0d592", "line": 718, "range": {"start_line": 718, "start_character": 69, "end_line": 718, "end_character": 73}, "updated": "2020-03-06 16:43:16.000000000", "message": "I believe \"the last\" is more accurate than \"last\".\nFrom googling, \"last\" is like previous, and \"the last\" is particularly at the end of a series.", "commit_id": "bab34d0d822b6181ce059cad3a3f80f566e90447"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "bae576e695407f87590938e19b18013376aa3810", "unresolved": false, "patch_set": 7, "id": "1fa4df85_08eac2d6", "line": 718, "range": {"start_line": 718, "start_character": 69, "end_line": 718, "end_character": 73}, "in_reply_to": "1fa4df85_e7a0d592", "updated": "2020-03-10 22:26:38.000000000", "message": "Thanks, will fix", "commit_id": "bab34d0d822b6181ce059cad3a3f80f566e90447"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e7f15aea2ece3b681c6575caa3d58f3a31d8c5af", "unresolved": false, "patch_set": 12, "id": "df33271e_9103e80f", "line": 301, "updated": "2020-04-06 03:42:48.000000000", "message": "lower-constraints:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "58442c4d958e5c71a44ef0a72c46b9d7652cc4a1"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e7f15aea2ece3b681c6575caa3d58f3a31d8c5af", "unresolved": false, "patch_set": 12, "id": "df33271e_ecfd3709", "line": 301, "updated": "2020-04-06 03:42:48.000000000", "message": "py36:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "58442c4d958e5c71a44ef0a72c46b9d7652cc4a1"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e7f15aea2ece3b681c6575caa3d58f3a31d8c5af", "unresolved": false, "patch_set": 12, "id": "df33271e_cc02f309", "line": 301, "updated": "2020-04-06 03:42:48.000000000", "message": "py37:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "58442c4d958e5c71a44ef0a72c46b9d7652cc4a1"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "e7f15aea2ece3b681c6575caa3d58f3a31d8c5af", "unresolved": false, "patch_set": 12, "id": "df33271e_2c08bf26", "line": 301, "updated": "2020-04-06 03:42:48.000000000", "message": "py38:  DeprecationWarning: invalid escape sequence \\;", "commit_id": "58442c4d958e5c71a44ef0a72c46b9d7652cc4a1"}], "vmware_nsxlib/v3/config.py": [{"author": {"_account_id": 26303, "name": "Durgesh Rane", "email": "drane@vmware.com", "username": "drane"}, "change_message_id": "3e27f4c90c76e77a3380b23bb3dfd3834ee3fc45", "unresolved": false, "patch_set": 1, "id": "1fa4df85_09c5a43c", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 24}, "updated": "2020-02-25 21:43:08.000000000", "message": "Keeping these methods could be useful if different clients want different behavior?", "commit_id": "9e775de14b79205b1591d880f240cd589945b844"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "d956a3fb63ff846f68a3b3b914b617b55dbe151a", "unresolved": false, "patch_set": 1, "id": "1fa4df85_c9bd4c69", "line": 57, "range": {"start_line": 57, "start_character": 8, "end_line": 57, "end_character": 24}, "in_reply_to": "1fa4df85_09c5a43c", "updated": "2020-02-25 22:02:51.000000000", "message": "I thought it would be easier to create the object and append exceptions directly to members", "commit_id": "9e775de14b79205b1591d880f240cd589945b844"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "80f3e66a5e349e716bcf843e5ee60c9a3d80270f", "unresolved": false, "patch_set": 2, "id": "1fa4df85_eaa7ed4e", "line": 34, "range": {"start_line": 34, "start_character": 50, "end_line": 34, "end_character": 64}, "updated": "2020-02-25 01:07:51.000000000", "message": "ConnectTimeout is inherited from both ConnectionError and Timeout, so I guess line 34 is not needed?", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "aa36db79751d9b8fc352fa7d5dc52fb785486658", "unresolved": false, "patch_set": 2, "id": "1fa4df85_f50a5788", "line": 34, "range": {"start_line": 34, "start_character": 50, "end_line": 34, "end_character": 64}, "in_reply_to": "1fa4df85_eaa7ed4e", "updated": "2020-02-26 02:54:57.000000000", "message": "Done, thanks", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 31476, "name": "Enhao Cui", "email": "ecui@vmware.com", "username": "ecui"}, "change_message_id": "e61c4d4312414f00bd4f1be3530321194a7fd7ad", "unresolved": false, "patch_set": 2, "id": "1fa4df85_fe6c8e9d", "line": 40, "range": {"start_line": 40, "start_character": 41, "end_line": 40, "end_character": 62}, "updated": "2020-02-25 01:22:01.000000000", "message": "Just curious that is this an nsxlib's wrapper for ConnectionError, Timeout and ConnectTimeout? If so where are these exceptions wrapped?", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 31476, "name": "Enhao Cui", "email": "ecui@vmware.com", "username": "ecui"}, "change_message_id": "7d85b3250d43e328f9d4aec3b55ea9e0a720d309", "unresolved": false, "patch_set": 2, "id": "1fa4df85_de18b2d4", "line": 40, "range": {"start_line": 40, "start_character": 41, "end_line": 40, "end_character": 62}, "in_reply_to": "1fa4df85_fe6c8e9d", "updated": "2020-02-25 01:46:23.000000000", "message": "Nvm, just discussed with Shih-Hao offline about this.", "commit_id": "6dc83379061cfe5c29482a46bbf066cc5d609a32"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_784f2cbd", "line": 167, "range": {"start_line": 167, "start_character": 17, "end_line": 167, "end_character": 27}, "updated": "2020-04-13 23:12:01.000000000", "message": "\"exceptions\" could be confusing, since it is not a list of exceptions. How about \"exception_config\"?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_84c0d152", "line": 167, "range": {"start_line": 167, "start_character": 17, "end_line": 167, "end_character": 27}, "in_reply_to": "3f4c43b2_784f2cbd", "updated": "2020-04-14 04:14:13.000000000", "message": "Good point, done", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}], "vmware_nsxlib/v3/utils.py": [{"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "3bb6a566386bfcaf798c3d07b32f618c88c436f5", "unresolved": false, "patch_set": 8, "id": "1fa4df85_321e69bb", "line": 221, "range": {"start_line": 221, "start_character": 48, "end_line": 221, "end_character": 58}, "updated": "2020-03-19 18:42:59.000000000", "message": "function?", "commit_id": "dfa405a7ab88eb62683ba38c0a2fe15a2f7e9cd7"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "3bb6a566386bfcaf798c3d07b32f618c88c436f5", "unresolved": false, "patch_set": 8, "id": "1fa4df85_b01fb106", "line": 224, "updated": "2020-03-19 18:42:59.000000000", "message": "How about adding a unit test for this new method?", "commit_id": "dfa405a7ab88eb62683ba38c0a2fe15a2f7e9cd7"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_58d7d0ee", "line": 222, "range": {"start_line": 222, "start_character": 48, "end_line": 222, "end_character": 58}, "updated": "2020-04-13 23:12:01.000000000", "message": "function?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_44ed29ee", "line": 222, "range": {"start_line": 222, "start_character": 48, "end_line": 222, "end_character": 58}, "in_reply_to": "3f4c43b2_58d7d0ee", "updated": "2020-04-14 04:14:13.000000000", "message": "Done", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 17734, "name": "Shih-Hao Li", "email": "shihli@vmware.com", "username": "shli"}, "change_message_id": "b0ac1ab7adca09e517f452a4a31a0a463ca6e278", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_2b555051", "line": 225, "range": {"start_line": 225, "start_character": 4, "end_line": 225, "end_character": 38}, "updated": "2020-04-13 23:12:01.000000000", "message": "Add a UT for this new decorator like for retry_random_upon_exception in test_utils.py?", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "4ed4bb3b534258a0c5509365201969043f14e97e", "unresolved": false, "patch_set": 15, "id": "3f4c43b2_a4bb4de3", "line": 225, "range": {"start_line": 225, "start_character": 4, "end_line": 225, "end_character": 38}, "in_reply_to": "3f4c43b2_2b555051", "updated": "2020-04-14 04:14:13.000000000", "message": "Done", "commit_id": "d928e26bc0a6dbb63a2e0ca548c0bfb417cd9e3e"}]}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Ic063facf1f5f87c0e3a01803937a620a9b77d4b5": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-04-17 13:34:10.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-04-17 03:47:08.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}], "comments": {}}}