{"openstack%2Fdiskimage-builder~master~I23d13dddde6b9b7dbb15e511cf622beccf11e650": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-03-26 02:20:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnetworking-ovn~master~I3d0a4d01e33edb68af6dcdaf30926e393a26be9c": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10237, "name": "Numan Siddique", "email": "nusiddiq@redhat.com", "username": "numansiddique"}, {"value": -2, "date": "2020-01-03 13:53:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}], "comments": {"networking_ovn/cmd/rebalance_gw_chassis.py": [{"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_182de342", "line": 47, "range": {"start_line": 47, "start_character": 27, "end_line": 47, "end_character": 54}, "updated": "2019-06-04 15:21:53.000000000", "message": "chassis != chassis_name", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_23418a3a", "line": 47, "range": {"start_line": 47, "start_character": 27, "end_line": 47, "end_character": 54}, "in_reply_to": "9fb8cfa7_182de342", "updated": "2019-06-05 13:25:57.000000000", "message": "done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_b84a9724", "line": 50, "range": {"start_line": 50, "start_character": 12, "end_line": 50, "end_character": 23}, "updated": "2019-06-04 15:21:53.000000000", "message": "Would be good to replace this with a named tuple to have a strict definition of the used structure.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_fe4305ae", "line": 50, "range": {"start_line": 50, "start_character": 12, "end_line": 50, "end_character": 23}, "in_reply_to": "9fb8cfa7_b84a9724", "updated": "2019-06-05 13:25:57.000000000", "message": "Done :)", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_15a4ce56", "line": 60, "range": {"start_line": 60, "start_character": 51, "end_line": 60, "end_character": 56}, "updated": "2019-06-04 15:21:53.000000000", "message": "It looks like this is always used", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_c3798e93", "line": 60, "range": {"start_line": 60, "start_character": 51, "end_line": 60, "end_character": 56}, "in_reply_to": "9fb8cfa7_15a4ce56", "updated": "2019-06-05 13:25:57.000000000", "message": "yes, you're right, I removed the default value", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_98ff93a9", "line": 63, "range": {"start_line": 63, "start_character": 18, "end_line": 63, "end_character": 29}, "updated": "2019-06-04 15:21:53.000000000", "message": "cr_lrp_data ?", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_1e6a99b2", "line": 63, "range": {"start_line": 63, "start_character": 18, "end_line": 63, "end_character": 29}, "in_reply_to": "9fb8cfa7_98ff93a9", "updated": "2019-06-05 13:25:57.000000000", "message": "renamed to cl_lrp", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_d8f50bcd", "line": 65, "range": {"start_line": 65, "start_character": 53, "end_line": 65, "end_character": 58}, "updated": "2019-06-04 15:21:53.000000000", "message": "Provnet is always there so you can use cr_lrp_data['provnet']", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_2398aabe", "line": 65, "range": {"start_line": 65, "start_character": 53, "end_line": 65, "end_character": 58}, "in_reply_to": "9fb8cfa7_d8f50bcd", "updated": "2019-06-05 13:25:57.000000000", "message": "done, thx", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_382ea743", "line": 67, "range": {"start_line": 67, "start_character": 38, "end_line": 67, "end_character": 43}, "updated": "2019-06-04 15:21:53.000000000", "message": "ditto", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_43935ea4", "line": 67, "range": {"start_line": 67, "start_character": 38, "end_line": 67, "end_character": 43}, "in_reply_to": "9fb8cfa7_382ea743", "updated": "2019-06-05 13:25:57.000000000", "message": "done, thx", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f80ecfe3", "line": 74, "range": {"start_line": 74, "start_character": 19, "end_line": 74, "end_character": 28}, "updated": "2019-06-04 15:21:53.000000000", "message": "Perhaps remove the get in the line above and catch only KeyError here", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_e391329b", "line": 74, "range": {"start_line": 74, "start_character": 19, "end_line": 74, "end_character": 28}, "in_reply_to": "9fb8cfa7_f80ecfe3", "updated": "2019-06-05 13:25:57.000000000", "message": "done, thx", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_d8cc2b8b", "line": 79, "range": {"start_line": 79, "start_character": 19, "end_line": 79, "end_character": 28}, "updated": "2019-06-04 15:21:53.000000000", "message": "ditto", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_038d667a", "line": 79, "range": {"start_line": 79, "start_character": 19, "end_line": 79, "end_character": 28}, "in_reply_to": "9fb8cfa7_d8cc2b8b", "updated": "2019-06-05 13:25:57.000000000", "message": "done, thx", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_35beb265", "line": 91, "range": {"start_line": 91, "start_character": 18, "end_line": 91, "end_character": 47}, "updated": "2019-06-04 15:21:53.000000000", "message": "Can you use\n\n cr_lrp.replace('cr-lrp-', '')\n\nas you actually don't use any regular expression.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_63f3020c", "line": 91, "range": {"start_line": 91, "start_character": 18, "end_line": 91, "end_character": 47}, "in_reply_to": "9fb8cfa7_35beb265", "updated": "2019-06-05 13:25:57.000000000", "message": "yes, your right, done!", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_587efbe4", "line": 119, "range": {"start_line": 117, "start_character": 30, "end_line": 119, "end_character": 44}, "updated": "2019-06-04 15:21:53.000000000", "message": "A named tuple would make it more readable on L181", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "4cce787896875acdb4a8a0bc9320e54d78cc5104", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_64a54804", "line": 119, "range": {"start_line": 117, "start_character": 30, "end_line": 119, "end_character": 44}, "in_reply_to": "9fb8cfa7_587efbe4", "updated": "2019-06-05 14:20:16.000000000", "message": "done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_d8d98b83", "line": 128, "range": {"start_line": 125, "start_character": 0, "end_line": 128, "end_character": 28}, "updated": "2019-06-04 15:21:53.000000000", "message": "found_chassis = {chassis for chassis, networks in chassis_provnet_mappings.items() if provnet in networks}", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_034b26b0", "line": 128, "range": {"start_line": 125, "start_character": 0, "end_line": 128, "end_character": 28}, "in_reply_to": "9fb8cfa7_d8d98b83", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "723192557fca2f65c7a623f03b8c73d76e69128d", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f55b3a84", "line": 133, "updated": "2019-06-04 14:42:22.000000000", "message": "I wish I could do list comprehension here.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_3e0e7d32", "line": 133, "in_reply_to": "9fb8cfa7_b897f790", "updated": "2019-06-05 13:25:57.000000000", "message": "Done, thanks!", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_b897f790", "line": 133, "in_reply_to": "9fb8cfa7_f55b3a84", "updated": "2019-06-04 15:21:53.000000000", "message": "you can do dict-comprehension:\n\n ports = {port: cr_lrp for port, cr_lrp in gw_ports.items() if cr_lrp.get('provnet') == provnet}", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_b8ae17e5", "line": 142, "range": {"start_line": 142, "start_character": 19, "end_line": 142, "end_character": 23}, "updated": "2019-06-04 15:21:53.000000000", "message": "You don't need this, round with a single parameter returns int", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "333d77e0a5422a53580293850ed3821ab50a7960", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_6db99ae7", "line": 142, "range": {"start_line": 142, "start_character": 19, "end_line": 142, "end_character": 23}, "in_reply_to": "9fb8cfa7_63ab0289", "updated": "2019-06-06 09:26:38.000000000", "message": "Ah, you're right. Python 2 changes type to float despite in Python 2 the result of division is int: master_gw_num is int, chassis_num is int and int / int == int. But the result from round() is float so you need the int there for python 2 compatibility.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_63ab0289", "line": 142, "range": {"start_line": 142, "start_character": 19, "end_line": 142, "end_character": 23}, "in_reply_to": "9fb8cfa7_b8ae17e5", "updated": "2019-06-05 13:25:57.000000000", "message": "Hmm ok, For python2 it returns float with zero at the end so thats ok, changed", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_189e4356", "line": 148, "range": {"start_line": 148, "start_character": 19, "end_line": 148, "end_character": 24}, "updated": "2019-06-04 15:21:53.000000000", "message": "{", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_23dbcaed", "line": 148, "range": {"start_line": 148, "start_character": 19, "end_line": 148, "end_character": 24}, "in_reply_to": "9fb8cfa7_189e4356", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_78ac1f8c", "line": 150, "range": {"start_line": 150, "start_character": 47, "end_line": 150, "end_character": 49}, "updated": "2019-06-04 15:21:53.000000000", "message": "}", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_1e13795e", "line": 150, "range": {"start_line": 150, "start_character": 47, "end_line": 150, "end_character": 49}, "in_reply_to": "9fb8cfa7_78ac1f8c", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_580b5b8d", "line": 156, "range": {"start_line": 155, "start_character": 0, "end_line": 156, "end_character": 18}, "updated": "2019-06-04 15:21:53.000000000", "message": "you don't need this, if it's an empty dict, it won't iterate on L157", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_a3957ae6", "line": 156, "range": {"start_line": 155, "start_character": 0, "end_line": 156, "end_character": 18}, "in_reply_to": "9fb8cfa7_580b5b8d", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_98f0f392", "line": 158, "range": {"start_line": 158, "start_character": 15, "end_line": 158, "end_character": 45}, "updated": "2019-06-04 15:21:53.000000000", "message": "You'd get an exception if data.get() returns None", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "4cce787896875acdb4a8a0bc9320e54d78cc5104", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_04c1ec2e", "line": 158, "range": {"start_line": 158, "start_character": 15, "end_line": 158, "end_character": 45}, "in_reply_to": "9fb8cfa7_98f0f392", "updated": "2019-06-05 14:20:16.000000000", "message": "This should not happen because chassis without cr_lrps should be rebalanced, but anyway I added one if before it.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_381467a0", "line": 168, "range": {"start_line": 168, "start_character": 40, "end_line": 168, "end_character": 52}, "updated": "2019-06-04 15:21:53.000000000", "message": "You'd get an AttributeError if get() returns None", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "4cce787896875acdb4a8a0bc9320e54d78cc5104", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_24faf074", "line": 168, "range": {"start_line": 168, "start_character": 40, "end_line": 168, "end_character": 52}, "in_reply_to": "9fb8cfa7_381467a0", "updated": "2019-06-05 14:20:16.000000000", "message": "Fixed, thanks!", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_78217ffb", "line": 173, "range": {"start_line": 173, "start_character": 22, "end_line": 173, "end_character": 28}, "updated": "2019-06-04 15:21:53.000000000", "message": "cr_lrp['name'].replace()", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_e39292f6", "line": 173, "range": {"start_line": 173, "start_character": 22, "end_line": 173, "end_character": 28}, "in_reply_to": "9fb8cfa7_78217ffb", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_f85b2f84", "line": 187, "range": {"start_line": 185, "start_character": 0, "end_line": 187, "end_character": 56}, "updated": "2019-06-04 15:21:53.000000000", "message": "Why can't we use execute() here when we insert a single command to the transaction?", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "4cce787896875acdb4a8a0bc9320e54d78cc5104", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_e4f058cc", "line": 187, "range": {"start_line": 185, "start_character": 0, "end_line": 187, "end_character": 56}, "in_reply_to": "9fb8cfa7_f85b2f84", "updated": "2019-06-05 14:20:16.000000000", "message": "You're right. This context manager is not needed.", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "e1127ba8ece02fa2b06ae9bce84d79112ccf8f2c", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_9847934c", "line": 222, "range": {"start_line": 222, "start_character": 51, "end_line": 222, "end_character": 52}, "updated": "2019-06-04 15:21:53.000000000", "message": "d", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "17ce6b30fb376dcba4694b290c951fa42505fabe", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_a3f01a69", "line": 222, "range": {"start_line": 222, "start_character": 51, "end_line": 222, "end_character": 52}, "in_reply_to": "9fb8cfa7_9847934c", "updated": "2019-06-05 13:25:57.000000000", "message": "Done", "commit_id": "d65c8bfce812a9a1a7495a571f8f12034556d424"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "754f90719150f97b11bad0200dd7f768237cb115", "unresolved": false, "patch_set": 4, "id": "9fb8cfa7_bee6d643", "line": 42, "range": {"start_line": 40, "start_character": 1, "end_line": 42, "end_character": 71}, "updated": "2019-06-06 11:56:14.000000000", "message": "Need to rewrite this. Its kind complicated to test it with functional tests. I'll base on LRPs data from NB db instead.", "commit_id": "d5c18aa0953253fc3ad0ffbd562399ca398c37fb"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "10f83d8114bb5b2ab2d490cab2dee5204f5fc403", "unresolved": false, "patch_set": 8, "id": "7faddb67_6b70aea6", "line": 51, "range": {"start_line": 51, "start_character": 11, "end_line": 51, "end_character": 59}, "updated": "2019-07-09 11:14:01.000000000", "message": "Needs try-except block", "commit_id": "969321f0cb0259db7917ef21f82d5b99d35e9dfa"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "10f83d8114bb5b2ab2d490cab2dee5204f5fc403", "unresolved": false, "patch_set": 8, "id": "7faddb67_6b22eea6", "line": 90, "updated": "2019-07-09 11:14:01.000000000", "message": "FIX: what if no lp found?", "commit_id": "969321f0cb0259db7917ef21f82d5b99d35e9dfa"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "10f83d8114bb5b2ab2d490cab2dee5204f5fc403", "unresolved": false, "patch_set": 8, "id": "7faddb67_2b3cf6c6", "line": 95, "range": {"start_line": 95, "start_character": 26, "end_line": 95, "end_character": 31}, "updated": "2019-07-09 11:14:01.000000000", "message": "this is potential IndexError generator", "commit_id": "969321f0cb0259db7917ef21f82d5b99d35e9dfa"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "10f83d8114bb5b2ab2d490cab2dee5204f5fc403", "unresolved": false, "patch_set": 8, "id": "7faddb67_0b31faec", "line": 96, "range": {"start_line": 96, "start_character": 30, "end_line": 96, "end_character": 33}, "updated": "2019-07-09 11:14:01.000000000", "message": "ditto", "commit_id": "969321f0cb0259db7917ef21f82d5b99d35e9dfa"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "10f83d8114bb5b2ab2d490cab2dee5204f5fc403", "unresolved": false, "patch_set": 8, "id": "7faddb67_4b3cd2be", "line": 101, "range": {"start_line": 101, "start_character": 26, "end_line": 101, "end_character": 29}, "updated": "2019-07-09 11:14:01.000000000", "message": "ditto", "commit_id": "969321f0cb0259db7917ef21f82d5b99d35e9dfa"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_a020c349", "line": 53, "updated": "2019-07-12 13:13:50.000000000", "message": "Shall we log en error here? Or is it for some specific case. Because in case we lose connection to OVSDB, we won't know what happened as there will be RuntimeError caught and swallowed.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_ba8f7dcb", "line": 53, "in_reply_to": "7faddb67_a020c349", "updated": "2019-07-15 13:02:31.000000000", "message": "Ah, yeah, This silent-catch is not the best idea.\nLemme add some logging here... Done :)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_fe829eff", "line": 284, "range": {"start_line": 282, "start_character": 0, "end_line": 284, "end_character": 14}, "updated": "2019-07-17 14:03:17.000000000", "message": "I don't think we should return None here if we can't connect to the database as it's later passed to the ChassisRebalancer and it will cause AttributeErrors whenever trying to talk to the DB.\n\nI think better is to let it bubble up to the main() function and exit if we can't connect, as there is no point in running the script when we don't have connection to the database.", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_27349792", "line": 284, "range": {"start_line": 282, "start_character": 0, "end_line": 284, "end_character": 14}, "in_reply_to": "7faddb67_fe829eff", "updated": "2019-07-18 12:14:30.000000000", "message": "You're right. It makes no sense to continue in that case. I'm dropping those try-except blocks.", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "d61a857272768fae9a8d55398f6598845cc01351", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_34b65540", "line": 67, "range": {"start_line": 67, "start_character": 18, "end_line": 67, "end_character": 24}, "updated": "2019-09-24 11:09:42.000000000", "message": "TODO(mjozefcz): fix this stupid human error in next PS :)", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_0d1dd961", "line": 67, "range": {"start_line": 67, "start_character": 18, "end_line": 67, "end_character": 24}, "in_reply_to": "3fa7e38b_34b65540", "updated": "2019-11-26 15:26:40.000000000", "message": "Done.", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_d4434112", "line": 90, "range": {"start_line": 75, "start_character": 0, "end_line": 90, "end_character": 14}, "updated": "2019-09-24 11:41:08.000000000", "message": "Can we just do:\n\n found_chassis = collections.defaultdict(lambda: {'cr_lrps_count': 0, 'cr_lrps': []})\n for ...\n     ...\n     found_chassis[chassis_name]['cr_lrps_count'] += 1\n     found_chassis[chassis_name]['cr_lrps'].append(cl_lrp)\n\nalso isn't cr_lrps_count redundant to cr_lrps? len(cr_lrps) == cr_lrps_count, no?", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_6df00d68", "line": 90, "range": {"start_line": 75, "start_character": 0, "end_line": 90, "end_character": 14}, "in_reply_to": "3fa7e38b_748a8dbf", "updated": "2019-11-26 15:26:40.000000000", "message": "done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "a5a04090a24a64e9481fa4c91d9f3ca0441e22f9", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_748a8dbf", "line": 90, "range": {"start_line": 75, "start_character": 0, "end_line": 90, "end_character": 14}, "in_reply_to": "3fa7e38b_d4434112", "updated": "2019-09-24 11:54:43.000000000", "message": "I think the best here would be:\n\n chassis_cr_lrps = collections.defaultdict(list)\n for ...\n     ...\n     chassis_cr_lrps[chassis_name].append(cr_lrp)\n\nand where we need cr_lrps_count call\n\n len(chassis_cr_lrps[chassis_name])", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_b40c85ec", "line": 95, "range": {"start_line": 95, "start_character": 18, "end_line": 95, "end_character": 41}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: lrp[4:] is probably faster and safer if you want to just remove the prefix", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_0d795981", "line": 95, "range": {"start_line": 95, "start_character": 18, "end_line": 95, "end_character": 41}, "in_reply_to": "3fa7e38b_b40c85ec", "updated": "2019-11-26 15:26:40.000000000", "message": "right! done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_7475ad63", "line": 96, "range": {"start_line": 96, "start_character": 8, "end_line": 96, "end_character": 10}, "updated": "2019-09-24 11:41:08.000000000", "message": "shouldn't this be 'pb' ?", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_2da53504", "line": 96, "range": {"start_line": 96, "start_character": 8, "end_line": 96, "end_character": 10}, "in_reply_to": "3fa7e38b_7475ad63", "updated": "2019-11-26 15:26:40.000000000", "message": "Jakub has right as always :) done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_340095ab", "line": 108, "range": {"start_line": 108, "start_character": 54, "end_line": 108, "end_character": 78}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: ditto as L95", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_8de1c92e", "line": 108, "range": {"start_line": 108, "start_character": 54, "end_line": 108, "end_character": 78}, "in_reply_to": "3fa7e38b_340095ab", "updated": "2019-11-26 15:26:40.000000000", "message": "done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_b425655e", "line": 109, "range": {"start_line": 109, "start_character": 27, "end_line": 109, "end_character": 61}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: 'provnet-%s'  % neutron_net", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_edbddd03", "line": 109, "range": {"start_line": 109, "start_character": 27, "end_line": 109, "end_character": 61}, "in_reply_to": "3fa7e38b_b425655e", "updated": "2019-11-26 15:26:40.000000000", "message": "yea :) done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_b4a8058c", "line": 145, "range": {"start_line": 143, "start_character": 0, "end_line": 145, "end_character": 39}, "updated": "2019-09-24 11:41:08.000000000", "message": "Looks like you are always interested only in count of items in the result, so perhaps better would be\n\n return sum(provnet in network for network in chassis_provent_mappings.values())", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_6d4c8d9d", "line": 145, "range": {"start_line": 143, "start_character": 0, "end_line": 145, "end_character": 39}, "in_reply_to": "3fa7e38b_b4a8058c", "updated": "2019-11-26 15:26:40.000000000", "message": "ok, done, but used len instead, sum", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_349c1569", "line": 151, "range": {"start_line": 149, "start_character": 0, "end_line": 151, "end_character": 45}, "updated": "2019-09-24 11:41:08.000000000", "message": "Same as L145:\n\n return sum(cr_lrp.provnet == provnet for cr_lrp in gw_ports.values())", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_4d47517c", "line": 151, "range": {"start_line": 149, "start_character": 0, "end_line": 151, "end_character": 45}, "in_reply_to": "3fa7e38b_349c1569", "updated": "2019-11-26 15:26:40.000000000", "message": "it will not work, sum doesn't work with booleans, I used len", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_34c3b53a", "line": 170, "range": {"start_line": 170, "start_character": 23, "end_line": 170, "end_character": 28}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: cr_lrps will always be there", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_2d41b50b", "line": 170, "range": {"start_line": 170, "start_character": 23, "end_line": 170, "end_character": 28}, "in_reply_to": "3fa7e38b_34c3b53a", "updated": "2019-11-26 15:26:40.000000000", "message": "Done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_b4e485e1", "line": 192, "range": {"start_line": 192, "start_character": 33, "end_line": 192, "end_character": 52}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: ditto about prefix removal", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_cd458118", "line": 192, "range": {"start_line": 192, "start_character": 33, "end_line": 192, "end_character": 52}, "in_reply_to": "3fa7e38b_b4e485e1", "updated": "2019-11-26 15:26:40.000000000", "message": "Done!", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_94cf0955", "line": 216, "range": {"start_line": 216, "start_character": 20, "end_line": 216, "end_character": 42}, "updated": "2019-09-24 11:41:08.000000000", "message": "can_names.append(chassis)", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_8d4f8934", "line": 216, "range": {"start_line": 216, "start_character": 20, "end_line": 216, "end_character": 42}, "in_reply_to": "3fa7e38b_94cf0955", "updated": "2019-11-26 15:26:40.000000000", "message": "done, lol I dunno why I did it this way. TooMuchCoffeeException perhaps", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_74d28d02", "line": 218, "range": {"start_line": 218, "start_character": 24, "end_line": 218, "end_character": 25}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: paren not needed", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_4d299138", "line": 218, "range": {"start_line": 218, "start_character": 24, "end_line": 218, "end_character": 25}, "in_reply_to": "3fa7e38b_74d28d02", "updated": "2019-11-26 15:26:40.000000000", "message": "I need because at the end I do .execute() on it.", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_34d8951c", "line": 224, "updated": "2019-09-24 11:41:08.000000000", "message": "Would be good to log the exception content here for troubleshooting purposes", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_ad136501", "line": 224, "in_reply_to": "3fa7e38b_34d8951c", "updated": "2019-11-26 15:26:40.000000000", "message": "Done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_5472f14a", "line": 256, "range": {"start_line": 256, "start_character": 23, "end_line": 256, "end_character": 28}, "updated": "2019-09-24 11:41:08.000000000", "message": "nit: you don't need get() as cr_lrps_count is always there", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_6dd32d39", "line": 256, "range": {"start_line": 256, "start_character": 23, "end_line": 256, "end_character": 28}, "in_reply_to": "3fa7e38b_5472f14a", "updated": "2019-11-26 15:26:40.000000000", "message": "yes, done", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_74cdad64", "line": 259, "updated": "2019-09-24 11:41:08.000000000", "message": "Don't you need to merge chassis_to_rebalance['cr_lrps'] with data['cr_lrps'] here? This will always contain the latest chassis cr_lrps from the gw_chassis dict.", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "8d2bf26e0fb2c486392e95ea5d2e490e0bc2f72e", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_d486e113", "line": 270, "updated": "2019-09-24 11:41:08.000000000", "message": "you actually don't need it, do you?", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "391f65551c4637e7733a5938a61260ef1b70da43", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_8d99c97b", "line": 270, "in_reply_to": "3fa7e38b_d486e113", "updated": "2019-11-26 15:26:40.000000000", "message": "Yes, I don't need this here. Deleted. Thanks", "commit_id": "46429a38e6c5ef84709d55fb1c7a8012a3219ddc"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "351418b4ab9bc4907a740a7af4cdc9572bf17228", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_d30509c3", "line": 56, "range": {"start_line": 56, "start_character": 20, "end_line": 56, "end_character": 25}, "updated": "2019-11-27 15:56:48.000000000", "message": "nit: Sounds more like a warning message than an error for me. Usually errors should make the script fail where a warning we log the problem and continue the work.", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "c11f0280059698490995aafe2b557403e1f98673", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_773c36c0", "line": 56, "range": {"start_line": 56, "start_character": 20, "end_line": 56, "end_character": 25}, "in_reply_to": "3fa7e38b_d30509c3", "updated": "2019-11-28 09:33:37.000000000", "message": "Ok, ++, I will fix, thx!", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "c2aff108607a0112f719fa361b44fbac306af0d1", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_dfc0b52e", "line": 232, "range": {"start_line": 229, "start_character": 0, "end_line": 232, "end_character": 57}, "updated": "2019-11-27 09:10:43.000000000", "message": "I do not really get this sorry. Why OVNGatewayLeastLoadedScheduler? What if the random scheduler (or some other that we may add later on) is configured instead?", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "351418b4ab9bc4907a740a7af4cdc9572bf17228", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_73ee9522", "line": 232, "range": {"start_line": 229, "start_character": 0, "end_line": 232, "end_character": 57}, "in_reply_to": "3fa7e38b_009a696e", "updated": "2019-11-27 15:56:48.000000000", "message": "Heh so this is just like \"I hope the scheduler code works\" :D\n\n(++ to drop it if u send a new patch-set)", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "fafabaebf47f7da0cfe7c52d05db3d2d3b33e1eb", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_009a696e", "line": 232, "range": {"start_line": 229, "start_character": 0, "end_line": 232, "end_character": 57}, "in_reply_to": "3fa7e38b_dfc0b52e", "updated": "2019-11-27 14:55:17.000000000", "message": "I mean I hope that a rescheduling mechanism will work and re-schedule a gw chassis on new, just added chassis.\n\nThis comment in code was a helper for me and its not necessary now so I'm just dropping it.", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}], "networking_ovn/tests/functional/test_rebalance_gw_chassis.py": [{"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "391909c02d039153412425a8b54eeec1c69adbaa", "unresolved": false, "patch_set": 9, "id": "7faddb67_17c10d81", "line": 21, "updated": "2019-07-10 08:05:24.000000000", "message": "It's recommended to avoid importing objects but rather import the whole module: https://docs.openstack.org/hacking/latest/user/hacking.html#imports", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "40430d79bcd63576515abc3d0ac6b502d31ad488", "unresolved": false, "patch_set": 9, "id": "7faddb67_6d63d01b", "line": 21, "in_reply_to": "7faddb67_17c10d81", "updated": "2019-07-10 15:13:29.000000000", "message": "ack, done, thx!", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "391909c02d039153412425a8b54eeec1c69adbaa", "unresolved": false, "patch_set": 9, "id": "7faddb67_b7bfd9f9", "line": 88, "range": {"start_line": 88, "start_character": 16, "end_line": 88, "end_character": 20}, "updated": "2019-07-10 08:05:24.000000000", "message": "nit: tests", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "40430d79bcd63576515abc3d0ac6b502d31ad488", "unresolved": false, "patch_set": 9, "id": "7faddb67_ade468ad", "line": 88, "range": {"start_line": 88, "start_character": 16, "end_line": 88, "end_character": 20}, "in_reply_to": "7faddb67_b7bfd9f9", "updated": "2019-07-10 15:13:29.000000000", "message": "done", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "391909c02d039153412425a8b54eeec1c69adbaa", "unresolved": false, "patch_set": 9, "id": "7faddb67_f7f8f1c4", "line": 124, "range": {"start_line": 124, "start_character": 16, "end_line": 124, "end_character": 20}, "updated": "2019-07-10 08:05:24.000000000", "message": "nit: tests", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "40430d79bcd63576515abc3d0ac6b502d31ad488", "unresolved": false, "patch_set": 9, "id": "7faddb67_edda60e7", "line": 124, "range": {"start_line": 124, "start_character": 16, "end_line": 124, "end_character": 20}, "in_reply_to": "7faddb67_f7f8f1c4", "updated": "2019-07-10 15:13:29.000000000", "message": "done", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "391909c02d039153412425a8b54eeec1c69adbaa", "unresolved": false, "patch_set": 9, "id": "7faddb67_97317da5", "line": 191, "range": {"start_line": 191, "start_character": 13, "end_line": 191, "end_character": 17}, "updated": "2019-07-10 08:05:24.000000000", "message": "do you want to create two external networks with the same name?", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "40430d79bcd63576515abc3d0ac6b502d31ad488", "unresolved": false, "patch_set": 9, "id": "7faddb67_b7da7914", "line": 191, "range": {"start_line": 191, "start_character": 13, "end_line": 191, "end_character": 17}, "in_reply_to": "7faddb67_97317da5", "updated": "2019-07-10 15:13:29.000000000", "message": "good catch, looks like to much copy-paste", "commit_id": "7ec2784b13d9acc238fa4ffeec7c0dbd5de93dc9"}], "networking_ovn/tests/functional/test_router.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "a70378e80b74e25e05fdb7a7283d851e601a91c0", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_1d2fd5f6", "line": 156, "updated": "2019-06-07 10:56:45.000000000", "message": "https://www.youtube.com/watch?v=DvMh4_ak6r4 sorry", "commit_id": "e59fcfa52c2236abf1f64b0cad2fe3fc2f8d9f12"}], "networking_ovn/tests/unit/cmd/test_rebalance_gw_chassis.py": [{"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_807fc713", "line": 25, "updated": "2019-07-12 13:13:50.000000000", "message": "Looks like get_connections function is not covered :) Would be good to have a test class for it.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_c0b37f09", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 20}, "updated": "2019-07-12 13:13:50.000000000", "message": "The class is imported in the module on L21. It's better to reuse it instead of concatenating strings. When you want to mock a 'foo' method of ChassisRebalancer, you can do:\n\n mock.patch.object(cmd.ChassisRebalancer, 'foo')", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_ddfcb3b6", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 20}, "in_reply_to": "7faddb67_c0b37f09", "updated": "2019-07-15 13:02:31.000000000", "message": "yep, done :) thanks", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_c0da9f49", "line": 34, "range": {"start_line": 33, "start_character": 0, "end_line": 34, "end_character": 30}, "updated": "2019-07-12 13:13:50.000000000", "message": "mock.patch.object(cmd, 'LOG').start()\n\nWhy is it even needed?", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_5d2443af", "line": 34, "range": {"start_line": 33, "start_character": 0, "end_line": 34, "end_character": 30}, "in_reply_to": "7faddb67_c0da9f49", "updated": "2019-07-15 13:02:31.000000000", "message": "Its not, deleting it. Thanks", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_a0e5230b", "line": 39, "range": {"start_line": 39, "start_character": 24, "end_line": 39, "end_character": 50}, "updated": "2019-07-12 13:13:50.000000000", "message": "{'public', 'public2'}", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_1d3a4bcb", "line": 39, "range": {"start_line": 39, "start_character": 24, "end_line": 39, "end_character": 50}, "in_reply_to": "7faddb67_a0e5230b", "updated": "2019-07-15 13:02:31.000000000", "message": "done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_80d10726", "line": 49, "range": {"start_line": 49, "start_character": 60, "end_line": 49, "end_character": 61}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: parenthesis are preferred over backslash", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_9de39bd9", "line": 49, "range": {"start_line": 49, "start_character": 60, "end_line": 49, "end_character": 61}, "in_reply_to": "7faddb67_80d10726", "updated": "2019-07-15 13:02:31.000000000", "message": "Done everywhere. Thanks. I'll remember that :)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_e086bb13", "line": 70, "range": {"start_line": 69, "start_character": 0, "end_line": 70, "end_character": 39}, "updated": "2019-07-12 13:13:50.000000000", "message": "It's a good rule-of-a-thumb to create a test class for function as you likely won't need almost anything from the setUp of this class when testing a standalone function.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_7dd49f20", "line": 70, "range": {"start_line": 69, "start_character": 0, "end_line": 70, "end_character": 39}, "in_reply_to": "7faddb67_e086bb13", "updated": "2019-07-15 13:02:31.000000000", "message": "Ack, moved this to new testclass. Thanks for good practices! Done :)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_008c3734", "line": 75, "range": {"start_line": 75, "start_character": 0, "end_line": 75, "end_character": 47}, "updated": "2019-07-12 13:13:50.000000000", "message": "Unittests must not have any interaction with the system. It's better to mock out function that parses the config file and pass 'foo' instead.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_9dd95b58", "line": 75, "range": {"start_line": 75, "start_character": 0, "end_line": 75, "end_character": 47}, "in_reply_to": "7faddb67_008c3734", "updated": "2019-07-15 13:02:31.000000000", "message": "Ack, you're right. Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_c0961f3f", "line": 84, "range": {"start_line": 84, "start_character": 32, "end_line": 84, "end_character": 42}, "updated": "2019-07-12 13:13:50.000000000", "message": "I don't understand what's the test here. There is no exception handler in start() method.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_1d87abb7", "line": 84, "range": {"start_line": 84, "start_character": 32, "end_line": 84, "end_character": 42}, "in_reply_to": "7faddb67_c0961f3f", "updated": "2019-07-15 13:02:31.000000000", "message": "Yes, you're right. This should test get_avg_per_provnet() were ZeroDivisionError is handled. I'll rename it and modify.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_20e4d3e0", "line": 92, "range": {"start_line": 92, "start_character": 50, "end_line": 92, "end_character": 70}, "updated": "2019-07-12 13:13:50.000000000", "message": "It's better to mock get_chassis_with_master_ports because that's what start() calls.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_e0a54248", "line": 92, "range": {"start_line": 92, "start_character": 50, "end_line": 92, "end_character": 70}, "in_reply_to": "7faddb67_20e4d3e0", "updated": "2019-07-15 13:02:31.000000000", "message": "Done, but to achieve that I added mock on get_avg_per_provnet to be sure it returns not zero.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_60a72ba9", "line": 93, "range": {"start_line": 91, "start_character": 0, "end_line": 93, "end_character": 41}, "updated": "2019-07-12 13:13:50.000000000", "message": "Can you do just?\n\n self.mock_master_ports.return_value = {}\n\nWhy do you need to stop it and mock it back again?", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_804d6e9b", "line": 93, "range": {"start_line": 91, "start_character": 0, "end_line": 93, "end_character": 41}, "in_reply_to": "7faddb67_60a72ba9", "updated": "2019-07-15 13:02:31.000000000", "message": "I wish I could. I tried do so but still return_value is the one defined before start().\n\nCheck this example:\n\nimport mock\n\ndef foo(name_a):\n    name = name_a\n    return name\n\npatcher = mock.patch(__name__ + '.foo', return_value='aga')\npatcher.start()\n\n\n>>> foo()\n'aga'\n>>> foo('tester')\n'aga'\n>>> patcher.return_value='abc'\n>>> foo('tester')\n'aga'\n>>> patcher.stop()\n>>> foo('tester')\n'tester'\n>>> \n\nI don't have any other idea to stop and start new mock.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "c082b931de236dd857523f32fb31a7f6ba8ca9cd", "unresolved": false, "patch_set": 12, "id": "7faddb67_e20bf4d2", "line": 93, "range": {"start_line": 91, "start_character": 0, "end_line": 93, "end_character": 41}, "in_reply_to": "7faddb67_804d6e9b", "updated": "2019-07-16 11:35:22.000000000", "message": "Fixed, thanks for the help on IRC!", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_e0023b6f", "line": 108, "range": {"start_line": 105, "start_character": 0, "end_line": 108, "end_character": 44}, "updated": "2019-07-12 13:13:50.000000000", "message": "ditto about stopping and mocking again", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_60ee4bb5", "line": 124, "range": {"start_line": 121, "start_character": 0, "end_line": 124, "end_character": 44}, "updated": "2019-07-12 13:13:50.000000000", "message": "ditto about stopping and mocking again", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_6043abb0", "line": 132, "range": {"start_line": 132, "start_character": 0, "end_line": 132, "end_character": 34}, "updated": "2019-07-12 13:13:50.000000000", "message": "The behavior is deterministic, isn't it? We should know which data are returned and in what order rebalance is called, no?\n\nAnd if it isn't, you can get the parameters that were used in the call and then use assertItemsEqual on it", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_e316ac49", "line": 132, "range": {"start_line": 132, "start_character": 0, "end_line": 132, "end_character": 34}, "in_reply_to": "7faddb67_6043abb0", "updated": "2019-07-15 13:02:31.000000000", "message": "There is no slight difference between witch LRP will be moved from overloaded GW, at least we don't have LRP bandwidth use parameters so we're blind.\n\nThe 'cr_lrps' list could be retrieved all the time in other order. That's because of get_chassis_with_master_ports() and loop over dict master_ports. Dicts by default are not ordered and I don't feel we need to be strict to any order here.\n\nI'll modify the assert.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_138b336e", "line": 163, "range": {"start_line": 163, "start_character": 69, "end_line": 163, "end_character": 70}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: parens are preferred", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_8029ee8a", "line": 163, "range": {"start_line": 163, "start_character": 69, "end_line": 163, "end_character": 70}, "in_reply_to": "7faddb67_138b336e", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_b3c9ffac", "line": 189, "range": {"start_line": 189, "start_character": 69, "end_line": 189, "end_character": 70}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: ditto", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_a0ef4a1c", "line": 189, "range": {"start_line": 189, "start_character": 69, "end_line": 189, "end_character": 70}, "in_reply_to": "7faddb67_b3c9ffac", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_336bcf85", "line": 201, "range": {"start_line": 200, "start_character": 21, "end_line": 201, "end_character": 50}, "updated": "2019-07-12 13:13:50.000000000", "message": "maybe would be good to refer to it as self.master_ports[0] so it's obvious where it's coming from. This looks like magical data.", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_40a216fe", "line": 201, "range": {"start_line": 200, "start_character": 21, "end_line": 201, "end_character": 50}, "in_reply_to": "7faddb67_336bcf85", "updated": "2019-07-15 13:02:31.000000000", "message": "Ok, done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_33198f21", "line": 239, "range": {"start_line": 239, "start_character": 68, "end_line": 239, "end_character": 69}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: parens", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_fdd16ffc", "line": 239, "range": {"start_line": 239, "start_character": 68, "end_line": 239, "end_character": 69}, "in_reply_to": "7faddb67_33198f21", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_73fb8778", "line": 251, "range": {"start_line": 251, "start_character": 68, "end_line": 251, "end_character": 69}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: ditto", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_1dcfab56", "line": 251, "range": {"start_line": 251, "start_character": 68, "end_line": 251, "end_character": 69}, "in_reply_to": "7faddb67_73fb8778", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_b3325f5d", "line": 266, "range": {"start_line": 266, "start_character": 68, "end_line": 266, "end_character": 69}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: ditto :)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_bdd777ee", "line": 266, "range": {"start_line": 266, "start_character": 68, "end_line": 266, "end_character": 69}, "in_reply_to": "7faddb67_b3325f5d", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_369c1d69", "line": 272, "updated": "2019-07-12 13:13:50.000000000", "message": "I think these cases are missing:\n\n 1. LRP is missing in the DB\n 2. one chassis has not lrp port bound", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_c34cd0c9", "line": 272, "in_reply_to": "7faddb67_369c1d69", "updated": "2019-07-15 13:02:31.000000000", "message": "yes, you're right\n\n1) done\n2) done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_f6d44522", "line": 275, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: ditto :)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_ddd4b3eb", "line": 275, "in_reply_to": "7faddb67_f6d44522", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_f68be51b", "line": 285, "range": {"start_line": 285, "start_character": 19, "end_line": 285, "end_character": 24}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: {", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_7d07bf83", "line": 285, "range": {"start_line": 285, "start_character": 19, "end_line": 285, "end_character": 24}, "in_reply_to": "7faddb67_f68be51b", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_b681edfd", "line": 292, "updated": "2019-07-12 13:13:50.000000000", "message": "maybe reference to self.master_ports would ease reading here", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_e08b0265", "line": 292, "in_reply_to": "7faddb67_b681edfd", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_967cf11f", "line": 306, "range": {"start_line": 306, "start_character": 19, "end_line": 306, "end_character": 24}, "updated": "2019-07-12 13:13:50.000000000", "message": "nit: {", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_9d0cfba5", "line": 306, "range": {"start_line": 306, "start_character": 19, "end_line": 306, "end_character": 24}, "in_reply_to": "7faddb67_967cf11f", "updated": "2019-07-15 13:02:31.000000000", "message": "Done", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_f690c545", "line": 307, "range": {"start_line": 307, "start_character": 19, "end_line": 307, "end_character": 22}, "updated": "2019-07-12 13:13:50.000000000", "message": "Nice, I didn't know that this method exists :) Thanks for teaching me ;)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "6246b2c00612cb8f650d8d257229aff4bf002828", "unresolved": false, "patch_set": 12, "id": "7faddb67_3dfdc76d", "line": 307, "range": {"start_line": 307, "start_character": 19, "end_line": 307, "end_character": 22}, "in_reply_to": "7faddb67_f690c545", "updated": "2019-07-15 13:02:31.000000000", "message": ":)", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_36aadd70", "line": 346, "range": {"start_line": 346, "start_character": 0, "end_line": 346, "end_character": 60}, "updated": "2019-07-12 13:13:50.000000000", "message": "ditto about stop mock and mock again", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "aad68e827911b1cbbd5dfa731b5ce4f9d91904a5", "unresolved": false, "patch_set": 12, "id": "7faddb67_b6afad7b", "line": 377, "updated": "2019-07-12 13:13:50.000000000", "message": "ditto", "commit_id": "b6745848f49ab98a6642f2b0ee1a90aace6dae89"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_9eea8ad5", "line": 28, "range": {"start_line": 27, "start_character": 0, "end_line": 28, "end_character": 47}, "updated": "2019-07-17 14:03:17.000000000", "message": "This is not needed", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_27c2575a", "line": 28, "range": {"start_line": 27, "start_character": 0, "end_line": 28, "end_character": 47}, "in_reply_to": "7faddb67_9eea8ad5", "updated": "2019-07-18 12:14:30.000000000", "message": "Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_bed2e626", "line": 31, "updated": "2019-07-17 14:03:17.000000000", "message": "I think the main thing would be to test that when we can't connect to either DB, None is returned instead. Which makes me think whether it's something we want to do.", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_a7d887ee", "line": 31, "in_reply_to": "7faddb67_bed2e626", "updated": "2019-07-18 12:14:30.000000000", "message": "As per previous file - I'll assert here if exception is raised while trying to connect to not listening db socket.", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_5e317259", "line": 58, "range": {"start_line": 57, "start_character": 56, "end_line": 58, "end_character": 70}, "updated": "2019-07-17 14:03:17.000000000", "message": "mock.patch.object(cmd, 'get_connections'", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_e7ac3fa0", "line": 58, "range": {"start_line": 57, "start_character": 56, "end_line": 58, "end_character": 70}, "in_reply_to": "7faddb67_5e317259", "updated": "2019-07-18 12:14:30.000000000", "message": "Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_decec258", "line": 71, "range": {"start_line": 71, "start_character": 0, "end_line": 71, "end_character": 37}, "updated": "2019-07-17 14:03:17.000000000", "message": "You don't need this, it's done automatically at https://github.com/openstack/networking-ovn/blob/b0924ba60289412bcfa420f06e266b8413a48ffd/networking_ovn/tests/base.py#L48\n\nYou actually don't need this whole method as you can call mock.patch().start() directly", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_be58a687", "line": 107, "range": {"start_line": 105, "start_character": 33, "end_line": 107, "end_character": 53}, "updated": "2019-07-17 14:03:17.000000000", "message": "mock.patch.object(cmd.ChassisRebalancer, 'get_all_master_ports', return_value=self.master_ports).start()", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_c7826300", "line": 107, "range": {"start_line": 105, "start_character": 33, "end_line": 107, "end_character": 53}, "in_reply_to": "7faddb67_be58a687", "updated": "2019-07-18 12:14:30.000000000", "message": "Sorry, I missed that. Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_3eca761a", "line": 119, "updated": "2019-07-17 14:03:17.000000000", "message": "nit: Would be good to have it as a decorator too for consistency", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_87ceab60", "line": 119, "in_reply_to": "7faddb67_3eca761a", "updated": "2019-07-18 12:14:30.000000000", "message": "Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_fecffe25", "line": 130, "updated": "2019-07-17 14:03:17.000000000", "message": "ditto", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_a7c96759", "line": 130, "in_reply_to": "7faddb67_fecffe25", "updated": "2019-07-18 12:14:30.000000000", "message": "Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, "change_message_id": "6fd08696c06f0ee92f43e0e657b56d481dc76bd0", "unresolved": false, "patch_set": 15, "id": "7faddb67_7ee30ea5", "line": 325, "range": {"start_line": 323, "start_character": 0, "end_line": 325, "end_character": 63}, "updated": "2019-07-17 14:03:17.000000000", "message": "This is not needed, is it? mock_master_ports call already returns master_ports", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "5af04059326695ddda8968efbeb806ba74fc29d8", "unresolved": false, "patch_set": 15, "id": "7faddb67_67bfefa9", "line": 325, "range": {"start_line": 323, "start_character": 0, "end_line": 325, "end_character": 63}, "in_reply_to": "7faddb67_7ee30ea5", "updated": "2019-07-18 12:14:30.000000000", "message": "Done", "commit_id": "b5b2494312bdc057380b9ba32f8fc04bbe23fb97"}], "releasenotes/notes/networking-ovn-rebalance-gw-chassis-e4749b9906432840.yaml": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "351418b4ab9bc4907a740a7af4cdc9572bf17228", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_f372854a", "line": 4, "range": {"start_line": 4, "start_character": 67, "end_line": 4, "end_character": 70}, "updated": "2019-11-27 15:56:48.000000000", "message": "Maybe we should be more explicit on release notes and just say \"router ports\" (the neutron name) instead of LRP (logical router ports) which is how we call it internally in core OVN.", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "c11f0280059698490995aafe2b557403e1f98673", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_57dd7adb", "line": 4, "range": {"start_line": 4, "start_character": 67, "end_line": 4, "end_character": 70}, "in_reply_to": "3fa7e38b_f372854a", "updated": "2019-11-28 09:33:37.000000000", "message": "done", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "351418b4ab9bc4907a740a7af4cdc9572bf17228", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_339edd55", "line": 6, "range": {"start_line": 6, "start_character": 4, "end_line": 6, "end_character": 8}, "updated": "2019-11-27 15:56:48.000000000", "message": "data-plane interruptions ?", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "c11f0280059698490995aafe2b557403e1f98673", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_b7e5cea6", "line": 6, "range": {"start_line": 6, "start_character": 4, "end_line": 6, "end_character": 8}, "in_reply_to": "3fa7e38b_339edd55", "updated": "2019-11-28 09:33:37.000000000", "message": "done, and its not only related to N/S traffic, so I dropped the comment.", "commit_id": "d94d1c981276cac4b63c4449ecdcd4293e4e1aad"}]}}, "openstack%2Fnetworking-ovn~master~Ie55161edefbcb96146bcf4ede4db464472c37bf3": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-01-03 13:53:17.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~Iccc47d61ccd3ce57cc1cf218217ec7a84fdc8203": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~Ibbca48f7f04cc46a7878b8c6f68225eabbabc6e7": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 09:32:54.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 1, "date": "2020-01-30 13:55:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-01-30 14:27:02.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6683, "name": "Pavel Sedl\u00e1k", "email": "psedlak@redhat.com", "username": "psedlak"}, {"value": -1, "date": "2020-03-04 07:12:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "f1e320463bfc892a191819c4b4c1dd8898df09c4", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ae1c28c1", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 15}, "updated": "2020-03-04 07:12:04.000000000", "message": "in the undercloud", "commit_id": "11e4f403427cbea5c3e91ea9ff802cdc2f1ff61f"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "f1e320463bfc892a191819c4b4c1dd8898df09c4", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0e81bcc3", "line": 12, "range": {"start_line": 12, "start_character": 9, "end_line": 12, "end_character": 38}, "updated": "2020-03-04 07:12:04.000000000", "message": "but will this test the overcloud deployed heat?", "commit_id": "11e4f403427cbea5c3e91ea9ff802cdc2f1ff61f"}]}}, "openstack%2Fcinder~master~Icdafaf55494b6dd74ec31c3572d7344fcc028166": {"owner_id": 10459, "owner_name": "Luigi Toscano", "owner_email": "ltoscano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:02:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 13144, "name": "Oracle ZFSSA CI", "username": "oracle-zfssa-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "change_message_id": "5bbcc9c41f75d8141fbe08128cb6f9245e7a489d", "unresolved": false, "patch_set": 1, "id": "7faddb67_cc95838a", "line": 182, "range": {"start_line": 177, "start_character": 2, "end_line": 182, "end_character": 0}, "updated": "2019-07-21 20:45:09.000000000", "message": "Job legacy-tempest-dsvm-lvm-multibackend in openstack/cinder is not permitted to shadow job legacy-tempest-dsvm-lvm-multibackend in openstack/openstack-zuul-jobs", "commit_id": "f288b2705f7bb3e083c8c40028657df42de8040d"}]}}, "openstack%2Ftripleo-heat-templates~master~I09d02a008070e066cf9c2f9b7e93824f43e6d985": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 11:42:24.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": -1, "date": "2020-03-25 13:15:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I75b21dc7ec7a2594e5ffa1a26547b6dc4950bba7": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29775, "name": "Sandeep Yadav", "email": "sandyada@redhat.com", "username": "sandeepyadav93"}, {"value": 2, "date": "2020-03-25 18:25:53.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fqueens~I486ebf009cc1fc7d1cf2ce947fdd5c112930d125": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I486ebf009cc1fc7d1cf2ce947fdd5c112930d125": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}], "comments": {}}, "openstack%2Fopenstacksdk~master~I6ae5a63051d512eecb2a603af9d74ec139eb0877": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 2, "date": "2020-03-26 06:04:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 20:29:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-03-25 20:26:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpython-glanceclient~master~I5fadbadf9eee2163ef6d17af2ceb49883151038c": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-02-06 20:18:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 2, "date": "2020-02-10 10:56:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fnova~master~I8e8035dcf508f5215bba9b7575c5c6abfe41da31": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:43:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 0, "_account_id": 136, "name": "Tim Bell", "email": "tim.bell@cern.ch", "username": "tim-bell"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:18:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 12:46:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "48bbf5ed309de8776086252722448fd0dab5045c", "unresolved": false, "patch_set": 6, "id": "1fa4df85_4dcc1661", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 10}, "updated": "2020-03-12 15:37:12.000000000", "message": "I guess this is the crucial thing in virDomainBlockCopy:\n\n  This command is a superset of the older virDomainBlockRebase() when used\n  with the VIR_DOMAIN_BLOCK_REBASE_COPY flag, and offers better control\n  over the destination format, the ability to copy to a destination that\n  is not a local file, and the possibility of additional tuning parameters.\n\nMight be worth reproducing verbatim here. Took me a bit of reading to grasp why virDomainBlockCopy being a superset of virDomainBlockRebase was significant", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_b9493933", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 10}, "in_reply_to": "1fa4df85_4dcc1661", "updated": "2020-03-13 14:58:03.000000000", "message": "Done", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8015006e28385b9c43db2d5d95c71c0446e1b87c", "unresolved": false, "patch_set": 12, "id": "df33271e_10ab4989", "line": 32, "updated": "2020-03-24 15:30:35.000000000", "message": "Is it a bugfix or a small libvirt driver feature? Can we track this change in some existing item?", "commit_id": "9d8141c9c40eb58c6bc04e6188e9ebe313da7ce7"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "11d923be171ce085c26182423b2b91ec41961537", "unresolved": false, "patch_set": 12, "id": "df33271e_5c66792b", "line": 32, "in_reply_to": "df33271e_10ab4989", "updated": "2020-03-25 12:39:54.000000000", "message": "I wasn't going to but if anything I'd classify this as a small bugfix given this isn't something we expose through the API.\n\nI've written up a bug #1868996 and will amend it here now.", "commit_id": "9d8141c9c40eb58c6bc04e6188e9ebe313da7ce7"}], "nova/tests/unit/virt/libvirt/test_driver.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5e8d0d8ae2a9ec76e114d36ba522bca83670a74c", "unresolved": false, "patch_set": 7, "id": "1fa4df85_1c715be1", "line": 18652, "range": {"start_line": 18652, "start_character": 21, "end_line": 18652, "end_character": 24}, "updated": "2020-03-13 15:43:27.000000000", "message": "original", "commit_id": "7259a78bb17884d6f13fbb6b74b6184155dc340a"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "cc10fec1a7019472317b16367db0d1b8fb13de35", "unresolved": false, "patch_set": 6, "id": "1fa4df85_f592574b", "line": 286, "range": {"start_line": 286, "start_character": 0, "end_line": 286, "end_character": 33}, "updated": "2020-03-13 15:00:18.000000000", "message": "Even this might not be sufficient due to a regression affecting versions: libvirt-5.10, libvirt-6.0 and libvirt-6.1. \n\nI wonder if we have to wait for the next libvirt, with the fix for the regressions.  See my exchange with Peter Krempa in this thread:\n\nhttps://www.redhat.com/archives/libvir-list/2020-March/msg00495.html \u2013  \"[PATCH 5/5] qemu: blockcopy: Allow late opening of the backing chain of a shallow copy\"", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "2db9fb4fa979f4f4388858a7cfe1a334fd2d7cac", "unresolved": false, "patch_set": 6, "id": "1fa4df85_d762a7ad", "line": 286, "range": {"start_line": 286, "start_character": 0, "end_line": 286, "end_character": 33}, "in_reply_to": "1fa4df85_7c340fdf", "updated": "2020-03-16 15:00:16.000000000", "message": "Okay, we're not using that flag; but was just noting, in case anything else from that fixed version we might need here.\n\nThat said, 5.10.0 is still not recommended by libvirt folks.  Peter Krempa helpfully reminded that 5.10.0 has a potential image corruption bug if you don't specify the format, so we don't want that.\n\nWhat's recommended:\n\n- libvirt 6.1.0\n- QEMU 4.2\n\nSo we also need MIN_QEMU_BLOCKDEV.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "7e142aaaa50de2d22eec24bd93b88c3c42090a03", "unresolved": false, "patch_set": 6, "id": "1fa4df85_ed6cb49d", "line": 286, "range": {"start_line": 286, "start_character": 0, "end_line": 286, "end_character": 33}, "in_reply_to": "1fa4df85_d762a7ad", "updated": "2020-03-16 15:47:53.000000000", "message": "We've spoken about this downstream and initial I was against doing this given the feature landed earlier.\n\nHowever on reflection given this covers an image corruption bug I'm going to update to force these constraints.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "dd24ff85586835f95edf93273f336fbd8813f5a5", "unresolved": false, "patch_set": 6, "id": "1fa4df85_7c340fdf", "line": 286, "range": {"start_line": 286, "start_character": 0, "end_line": 286, "end_character": 33}, "in_reply_to": "1fa4df85_f592574b", "updated": "2020-03-13 15:03:39.000000000", "message": "This isn't using the VIR_DOMAIN_BLOCK_COPY_SHALLOW flag so I think we should be fine.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "48bbf5ed309de8776086252722448fd0dab5045c", "unresolved": false, "patch_set": 6, "id": "1fa4df85_08312ced", "line": 1770, "range": {"start_line": 1770, "start_character": 8, "end_line": 1770, "end_character": 57}, "updated": "2020-03-12 15:37:12.000000000", "message": "optional and kind of unrelated, but any chance of getting a docstring while you're here? Type hints would be cool too", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_794e61c2", "line": 1770, "range": {"start_line": 1770, "start_character": 8, "end_line": 1770, "end_character": 57}, "in_reply_to": "1fa4df85_08312ced", "updated": "2020-03-13 14:58:03.000000000", "message": "Done", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "5fbcb8a4def22d6552fd95005f2b3d38e7b5cc13", "unresolved": false, "patch_set": 6, "id": "1fa4df85_88b99cea", "line": 1791, "range": {"start_line": 1785, "start_character": 0, "end_line": 1791, "end_character": 56}, "updated": "2020-03-12 15:29:51.000000000", "message": "[Not the problem of this patch, but worth fixing, IMHO.]\n\nA couple of notes:\n\n- The comment by 'rmk' should be extended to note that blockRebase() *and* blockCopy() both have this limitation of \"you need to undefine the guest, do the block{Rebase,Copy}, then re-define it\".\n\n- Also I'd add a TODO item here: in a future patch, we should explore using the new-and-fancy virDomainBackupBegin() API, which does not have the above mentioned limitation of having to temporarily undefine the and later re-define it.  This API is one of the building blocks of the 'incremental backup' work in libvirt; hence the name.  (https://libvirt.org/html/libvirt-libvirt-domain.html#virDomainBackupBegin)\n\nNote though, virDomainBackupBegin() will be a _replacement_ for virDomainBlockCopy().  So if we're not in a big hurry, we could even start exploring virDomainBackupBegin() to begin with.  (I have a personal TODO item for this, and also run this idea past libvirt / QEMU Block Folks.)\n\nBut since you've already done this work, we can go with virDomainBlockCopy() and explore virDomainBackupBegin() as a future work item.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "2db9fb4fa979f4f4388858a7cfe1a334fd2d7cac", "unresolved": false, "patch_set": 6, "id": "1fa4df85_f747a3bb", "line": 1791, "range": {"start_line": 1785, "start_character": 0, "end_line": 1791, "end_character": 56}, "in_reply_to": "1fa4df85_192c0d46", "updated": "2020-03-16 15:00:16.000000000", "message": "tl;dr: let's abandon this blockBackup() route, and just go with blockCopy() as you have it now.\n\nYou're indeed right in that blockBackup() does not allow to pivot.  (Aside: My reference was just a conversation with Eric Blake from some months ago, where he mentioned backupBegin() could be a replacement.  But when I checked this morning with Peter, he suggests _not_ to use it.)\n\nI assumed this would be possible: (a) issue a call to backupBegin(); then (b) call blockJobAbort() with _JOB_ABORT_PIVOT flag.  (To avoid the \"undefine + copy + re-redefine\" dance.)\n\nBut talking to Peter Krempa this morning, the above is \"impossible\" because the image state of backupBegin() is from the point where the backup job has started, and thus switching to that backup will break the guest.\n\nIn summary, two main differences b/n blockCopy() and backupBegin():\n\n- The resulting image created by backupBegin() has a copy up to the point where the backupBegin() call was issued\n- You cannot switch to the copy at the end of the job.  (Even if you _could_, that's not what we want\u2014because of the earlier mentioned reasons.)\n\nSo, let's park this \"make the guest temporarily transient\" thing aside for now, and proceed with blockCopy() usage.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_192c0d46", "line": 1791, "range": {"start_line": 1785, "start_character": 0, "end_line": 1791, "end_character": 56}, "in_reply_to": "1fa4df85_88b99cea", "updated": "2020-03-13 14:58:03.000000000", "message": "I'll update the comment.\n\nI'm not sure about using virDomainBackupBegin here however.\n\nThere's no concept of pivoting to the new disk in that API AFAICT. Can you provide any references to it replacing virDomainBlockCopy in this use case where we copy data from a src disk to dst and then switch to the dst disk.\n\nI get that it would be a replacement in the backup usecase but I can't think how it would be for ours.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "48bbf5ed309de8776086252722448fd0dab5045c", "unresolved": false, "patch_set": 6, "id": "1fa4df85_a874989d", "line": 1812, "range": {"start_line": 1812, "start_character": 16, "end_line": 1812, "end_character": 42}, "updated": "2020-03-12 15:37:12.000000000", "message": "nit:\n\n  new_path = conf.source_path or conf.target_dev\n\n? Also, a comment explaining why we switch would be helpful", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_b920594b", "line": 1812, "range": {"start_line": 1812, "start_character": 16, "end_line": 1812, "end_character": 42}, "in_reply_to": "1fa4df85_a874989d", "updated": "2020-03-13 14:58:03.000000000", "message": "ACK thanks.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "e19314c20e82b96a60dcbf8de705b4520b995e44", "unresolved": false, "patch_set": 8, "id": "1fa4df85_8da18049", "line": 1809, "range": {"start_line": 1809, "start_character": 72, "end_line": 1809, "end_character": 78}, "updated": "2020-03-16 16:37:47.000000000", "message": "Forgot to change to 6.1.0 :)\n\nUltra-nit: \"libvirt\" is always lower-case, except for the obvious case (when it's at the start of a sentence).", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6957fcb47735145380cf202e849b981f82c222b8", "unresolved": false, "patch_set": 8, "id": "1fa4df85_862dd547", "line": 1809, "range": {"start_line": 1809, "start_character": 72, "end_line": 1809, "end_character": 78}, "in_reply_to": "1fa4df85_8da18049", "updated": "2020-03-17 10:42:07.000000000", "message": "Done", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "e19314c20e82b96a60dcbf8de705b4520b995e44", "unresolved": false, "patch_set": 8, "id": "1fa4df85_08025eb5", "line": 1811, "range": {"start_line": 1811, "start_character": 24, "end_line": 1811, "end_character": 45}, "updated": "2020-03-16 16:37:47.000000000", "message": "Also, I'll take it that this check will run on destination, too, to take into account of: destination being remote RBD, but doesn't support '-blockdev'.", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "7fbe54c8f2d999d3f0932c6466216476547096a2", "unresolved": false, "patch_set": 8, "id": "1fa4df85_62f3cf9f", "line": 1811, "range": {"start_line": 1811, "start_character": 24, "end_line": 1811, "end_character": 45}, "in_reply_to": "1fa4df85_0627a514", "updated": "2020-03-18 13:29:50.000000000", "message": "No problem.  The wording in the \"copy to remote disks\" comment made me trip, then maybe that should be rephrased?\n\nBesides that I don't see any big issues here.", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6957fcb47735145380cf202e849b981f82c222b8", "unresolved": false, "patch_set": 8, "id": "1fa4df85_a63011a0", "line": 1811, "range": {"start_line": 1811, "start_character": 24, "end_line": 1811, "end_character": 45}, "in_reply_to": "1fa4df85_08025eb5", "updated": "2020-03-17 10:42:07.000000000", "message": "Done", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "a8b3632a674a41cd39fc4aed416ccb1c8ac13ba9", "unresolved": false, "patch_set": 8, "id": "1fa4df85_0627a514", "line": 1811, "range": {"start_line": 1811, "start_character": 24, "end_line": 1811, "end_character": 45}, "in_reply_to": "1fa4df85_a63011a0", "updated": "2020-03-17 11:06:20.000000000", "message": "Apologies I didn't mean to mark this as Done.\n\nI'm not entirely sure what you mean here, there's no concept of remote hosts when swapping volumes. The check here is just against a single host.", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "e19314c20e82b96a60dcbf8de705b4520b995e44", "unresolved": false, "patch_set": 8, "id": "1fa4df85_ed9114f3", "line": 1816, "range": {"start_line": 1816, "start_character": 68, "end_line": 1816, "end_character": 74}, "updated": "2020-03-16 16:37:47.000000000", "message": "Here, too, 6.1.0.", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6957fcb47735145380cf202e849b981f82c222b8", "unresolved": false, "patch_set": 8, "id": "1fa4df85_4627dd65", "line": 1816, "range": {"start_line": 1816, "start_character": 68, "end_line": 1816, "end_character": 74}, "in_reply_to": "1fa4df85_ed9114f3", "updated": "2020-03-17 10:42:07.000000000", "message": "Done", "commit_id": "4159961a43865908702474fc635c02991b7a49b4"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "4fc23457758391e4217aebf3978eae9d72dff9b1", "unresolved": false, "patch_set": 11, "id": "df33271e_4e738416", "line": 287, "range": {"start_line": 286, "start_character": 0, "end_line": 287, "end_character": 29}, "updated": "2020-03-23 15:12:55.000000000", "message": "Good news:\n\nYes, for libvirt we can lower to 6.0.0, given that we have this[1] merged.  (I also confirmed this w/ upstream libvirt folks.)  So the new constants are:\n\n* MIN_LIBVIRT_BLOCKDEV = 6.0.0\n* MIN_QEMU_BLOCKDEV = 4.2.0  (this was already the case; the 4.3.0 in Lee's patch is just an inadvertent typo)\n\n[1] https://opendev.org/openstack/nova/commit/0cfe9c81e3fe4d \u2013 libvirt: Provide the backing file format when creating qcow2 disks", "commit_id": "b6b8073d4386317f5ffbbb24ec0b5a5f1252b644"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fbd475e8905971f0afa1384690d0c6591cd35823", "unresolved": false, "patch_set": 11, "id": "df33271e_4ea9c479", "line": 287, "range": {"start_line": 286, "start_character": 0, "end_line": 287, "end_character": 29}, "updated": "2020-03-23 15:03:30.000000000", "message": "we might want to drop this to libvirt:6.0 and qemu:4.2\nso that we can test this with ubuntu 20.04 in the future.", "commit_id": "b6b8073d4386317f5ffbbb24ec0b5a5f1252b644"}], "nova/virt/libvirt/guest.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "48bbf5ed309de8776086252722448fd0dab5045c", "unresolved": false, "patch_set": 6, "id": "1fa4df85_0d9a9e6d", "line": 759, "range": {"start_line": 759, "start_character": 61, "end_line": 759, "end_character": 76}, "updated": "2020-03-12 15:37:12.000000000", "message": "...and neither is this. Is this purely here to fully expose this libvirt API? Looking down, I guess we do this elsewhere too but I'm curious", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "48bbf5ed309de8776086252722448fd0dab5045c", "unresolved": false, "patch_set": 6, "id": "1fa4df85_ed9ce26b", "line": 759, "range": {"start_line": 759, "start_character": 29, "end_line": 759, "end_character": 42}, "updated": "2020-03-12 15:37:12.000000000", "message": "This isn't set to non-default values anywhere...", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_b96b791d", "line": 759, "range": {"start_line": 759, "start_character": 29, "end_line": 759, "end_character": 42}, "in_reply_to": "1fa4df85_ed9ce26b", "updated": "2020-03-13 14:58:03.000000000", "message": "Yup just following the apparent practice for the other block calls, I can remove but it's trivial to add these now tbh.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "5fbcb8a4def22d6552fd95005f2b3d38e7b5cc13", "unresolved": false, "patch_set": 6, "id": "1fa4df85_2d3afacc", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "updated": "2020-03-12 15:29:51.000000000", "message": "Since right below is rebase() wrapper, it would be useful to extend the documentation to contrast with it those-who-don't-dwell-on-the-Block-Matters.\n\nIn the expanded version of the docs, I'd consider the below two points:\n\n- \"Nova's copy() is a wrapper method around libvirt's blockCopy() API, just as the rebase() is a wrapper around the blockRebase() API.  blockCopy() is a superset of blockRebase() \u2014 i.e. whatever you had working with blockRebase() still should/will work with blockRebase().\"\n\n- Also I wonder how much of some of blockCopy()'s useful features to be mentioned here in the docstring, as we might want to use some of them.  E.g. the blockCopy() job has two phases: in phase-1, it copies all data from the source, and while in this phase, \"the job can only be canceled to revert to the source disk, with no guarantees about the destination\"; after phase-1 completes, both the source and the destination remain mirrored until a call to blockJobAbort() with the flag _ABORT (means: the destination is a \"faithful copy of that point in time\") or _PIVOT (means: \"pivot over to the new copy on the destination\").\n\nI wonder if we should also add a TODO to deprecate and remove the use of rebase() method in Nova.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "07333f96a6613879acbc2b853fbf2961e9553600", "unresolved": false, "patch_set": 6, "id": "1fa4df85_c3e0d7cf", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "in_reply_to": "1fa4df85_2d3afacc", "updated": "2020-03-12 15:56:23.000000000", "message": "> Since right below is rebase() wrapper, it would be useful to extend\n > the documentation to contrast with it those-who-don't-dwell-on-the-Block-Matters. \n\nMissing a word: \"with it\" --> \"with it for those-who...\"\n\n[...]", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "5cefabb60fc5c6dc193d8028f3bda04663904a21", "unresolved": false, "patch_set": 6, "id": "1fa4df85_59660554", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "in_reply_to": "1fa4df85_2d3afacc", "updated": "2020-03-13 14:58:03.000000000", "message": "We can't deprecate rebase until we also switch _live_snapshot:\n\nhttps://github.com/openstack/nova/blob/e483ca1cd9a5db5856f87fc69ca07c42d2be5def/nova/virt/libvirt/driver.py#L2478\n\nI'm not going to repeat the Libvirt documentation in here as it's going to get stale fast if virDomainBlockCopy changes. I think a reference to the official docs is enough here IMHO.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "7e142aaaa50de2d22eec24bd93b88c3c42090a03", "unresolved": false, "patch_set": 6, "id": "1fa4df85_cd0778c9", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "in_reply_to": "1fa4df85_37da1be9", "updated": "2020-03-16 15:47:53.000000000", "message": "I'm still leaving that to the Libvirt docs.", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "2db9fb4fa979f4f4388858a7cfe1a334fd2d7cac", "unresolved": false, "patch_set": 6, "id": "1fa4df85_37da1be9", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "in_reply_to": "1fa4df85_59660554", "updated": "2020-03-16 15:00:16.000000000", "message": "Oh, right, on switching _live_snapshot(); can be separately tackled.\n\nOn docs: I'm not saying to repeat everything, but having a concise doc-string right there is useful.  Also, most people dwell far away from these Block Layer intricacies :)  (On getting stale: the core semantics of the API won't change, so FWIW, I don't see staleness as an issue.)", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "e19314c20e82b96a60dcbf8de705b4520b995e44", "unresolved": false, "patch_set": 6, "id": "1fa4df85_681c3213", "line": 760, "range": {"start_line": 760, "start_character": 11, "end_line": 760, "end_character": 58}, "in_reply_to": "1fa4df85_cd0778c9", "updated": "2020-03-16 16:37:47.000000000", "message": "I won't block on it, but I don't consider it a good practice.  (Not everyone can parse libvirt docs that way you or other Block-capable person can.)", "commit_id": "60123be880ce3602995fe86ce459ab65c181a24b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8015006e28385b9c43db2d5d95c71c0446e1b87c", "unresolved": false, "patch_set": 12, "id": "df33271e_50d031f8", "line": 773, "updated": "2020-03-24 15:30:35.000000000", "message": "Regarding the flags I rely on the positive review from Kashyap and Stephen.", "commit_id": "9d8141c9c40eb58c6bc04e6188e9ebe313da7ce7"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "4865f06344d827dea77a77884b382c4b2c6338e0", "unresolved": false, "patch_set": 12, "id": "df33271e_bf5a17f0", "line": 773, "in_reply_to": "df33271e_50d031f8", "updated": "2020-03-25 13:12:18.000000000", "message": "Yeah, these flags, and the bitwise-OR do look sane to me, FWIW.  (And it is modelled after rebase() below.)\n\nWriting for myself.  The line: \n\n    flags |= reuse_ext and libvirt.VIR_DOMAIN_BLOCK_COPY_REUSE_EXT or 0\n\nCan be translated as:\n\n    flags = flags | (reuse_ext and VIR_DOMAIN_BLOCK_COPY_REUSE_EXT) or 0\n\nI.e. if 'reuse_ext' is true, it returns the libvirt.VIR_DOMAIN_BLOCK_COPY_REUSE_EXT constant, and so forth.", "commit_id": "9d8141c9c40eb58c6bc04e6188e9ebe313da7ce7"}]}}, "openstack%2Frpm-packaging~stable%2Ftrain~I2f96f4caf867681088f359e8271edbd17df960a6": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 05:48:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~I0c210a830dba710c71e364834a98c098d78ae595": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 22:04:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-03-26 05:32:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fnova~master~I573396116e10cf87f80f1ded55f2cd8f498859e4": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 2, "date": "2020-03-17 11:38:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-18 11:49:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/virt/libvirt/test_driver.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "10652b80ba64e2cfddf0aff3b995ca70544b4510", "unresolved": false, "patch_set": 2, "id": "1fa4df85_4c93d301", "line": 9318, "range": {"start_line": 9318, "start_character": 59, "end_line": 9318, "end_character": 78}, "updated": "2020-03-11 12:05:13.000000000", "message": "this needs to be rebased as we dont have a run_as_root paramater to this function anymore.", "commit_id": "5c5acf7d94ceec9c11f8d5b087d56e0a1c2ca847"}], "nova/virt/libvirt/driver.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "10652b80ba64e2cfddf0aff3b995ca70544b4510", "unresolved": false, "patch_set": 2, "id": "1fa4df85_cc74a3d3", "line": 1960, "range": {"start_line": 1959, "start_character": 15, "end_line": 1960, "end_character": 61}, "updated": "2020-03-11 12:05:13.000000000", "message": "so in the current version this does not take a run_as_root parameter any more.", "commit_id": "5c5acf7d94ceec9c11f8d5b087d56e0a1c2ca847"}]}}, "openstack%2Fironic-tempest-plugin~master~Ibc15cce70c3901f5bea9deb7057da89b38008bb8": {"owner_id": 19604, "owner_name": "ankit", "owner_email": "ankit.dhn31@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-15 10:36:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, {"value": 2, "date": "2020-03-09 02:56:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "x%2Fvmware-nsx~master~I6090aedc7882673fb43abee4027a0da25dd6b37a": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fglance_store~master~I439f6b5af34c685f72c9b4933c7eb0c77cc92e14": {"owner_id": 9542, "owner_name": "Pavlo Shchelokovskyy", "owner_email": "pshchelokovskyy@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8478, "name": "Vladislav Kuzmin", "email": "vkuzmin@mirantis.com", "username": "vkuzmin"}, {"value": 0, "_account_id": 26233, "name": "zengjia", "email": "zengjia@awcloud.com", "username": "zengjia87"}, {"value": 0, "_account_id": 9542, "name": "Pavlo Shchelokovskyy", "email": "pshchelokovskyy@mirantis.com", "username": "pshchelo"}, {"value": 2, "date": "2020-01-28 06:46:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-03-05 15:05:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"glance_store/_drivers/swift/store.py": [{"author": {"_account_id": 9542, "name": "Pavlo Shchelokovskyy", "email": "pshchelokovskyy@mirantis.com", "username": "pshchelo"}, "change_message_id": "e25e491d9eb774d2ffb720bddec9fde528c3c28c", "unresolved": false, "patch_set": 4, "id": "5fc1f717_de00c3ae", "line": 812, "range": {"start_line": 809, "start_character": 5, "end_line": 812, "end_character": 48}, "updated": "2019-03-19 15:47:13.000000000", "message": "this is the same logic as in keystoneauth1/loading/session.py", "commit_id": "b3752722b8fd8c667e44116c6e82aa86e93ae853"}]}}, "x%2Fvmware-nsx~master~I7ce342bd128fdc1999b7fd1daf2f531637b42acc": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:37:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fneutron~stable%2Frocky~Ieded0654d0ad16235ec923b822dcd842bd7735e5": {"owner_id": 9531, "owner_name": "liuyulong", "owner_email": "i@liuyulong.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 2, "date": "2020-03-26 00:20:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-03-25 21:44:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fcyborg~master~I15fd9a430d09b20b55375b374fd7fd96542c6358": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 03:59:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-03-19 03:59:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "334679d95b4e73b872c18165f8efa368b3d2dad8", "unresolved": false, "patch_set": 6, "id": "1fa4df85_44b3b1e9", "line": 7, "range": {"start_line": 7, "start_character": 31, "end_line": 7, "end_character": 35}, "updated": "2020-03-11 04:47:29.000000000", "message": "device profile", "commit_id": "36402e8e4a51991802455e1f21e086f37c1a38ce"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5d2f38e5aec68d7d7ab79840c9b362855514c5f5", "unresolved": false, "patch_set": 6, "id": "1fa4df85_841f696a", "line": 7, "range": {"start_line": 7, "start_character": 31, "end_line": 7, "end_character": 35}, "in_reply_to": "1fa4df85_44b3b1e9", "updated": "2020-03-11 05:52:19.000000000", "message": "Done", "commit_id": "36402e8e4a51991802455e1f21e086f37c1a38ce"}], "cyborg/tests/unit/fake_device_profile.py": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "5340e2821e87523b3687d9e3b87333dcab275cbe", "unresolved": false, "patch_set": 9, "id": "1fa4df85_0c55dbfa", "line": 59, "range": {"start_line": 59, "start_character": 24, "end_line": 59, "end_character": 46}, "updated": "2020-03-11 11:23:35.000000000", "message": "suggest like this: \"description about daas_example_2\"", "commit_id": "58784fe8a40fd11098bcf295820fc4420b09ddb1"}]}}, "openstack%2Fcyborg~master~I42ad7ee7dffa7348e80ccdb35a5d19db6d58c637": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 03:58:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-03-19 03:58:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-03-26 03:25:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "f38ac6dc297ec0b4399fd63ba8d166831eb474c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_fca92423", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 70}, "updated": "2020-03-10 08:39:11.000000000", "message": "the link is invalid, \"No feature specifications match your criteria.\"\nSuggest to use storyboard in other patch. thanks.", "commit_id": "69accc79f6d650e64c13a65dc4d75e6af5e17225"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9ed18b09c4ddc2ec42c7267b1d935c99b9b89f55", "unresolved": false, "patch_set": 3, "id": "1fa4df85_f71a9f6c", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 70}, "in_reply_to": "1fa4df85_fca92423", "updated": "2020-03-10 08:52:12.000000000", "message": "I added this here https://blueprints.launchpad.net/openstack-cyborg/+spec/add-description-field-to-device-profiles, but I dont know why it cannot auto jump ^^", "commit_id": "69accc79f6d650e64c13a65dc4d75e6af5e17225"}], "cyborg/db/sqlalchemy/alembic/versions/60d8ac91fd20_add_description_field_to_dps.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "85d923a24b324a8063db07592e53f9b8e5d42401", "unresolved": false, "patch_set": 2, "id": "1fa4df85_5ce4f80c", "line": 17, "updated": "2020-03-10 07:42:22.000000000", "message": "Just need to use \"cyborg-dbsync upgrade\" add this field in the env.", "commit_id": "e3bfaa6aff4d54017735d9c7a25b602b469b8dbf"}]}}, "zuul%2Fzuul-jobs~master~I67f47686f534efa45b9f6d5993ec638579551dcb": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24468, "name": "Limestone Networks CI", "email": "openstack-ci@limestonenetworks.com", "username": "limestone-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}], "comments": {}}, "openstack%2Fzaqar-tempest-plugin~master~I979c9c94bf5a3662bc9d5f0312b2abb6fa936d7e": {"owner_id": 8846, "owner_name": "Hao Wang", "owner_email": "sxmatch1986@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 03:12:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15054, "name": "wangxiyuan", "email": "wangxiyuan1007@gmail.com", "username": "wangxiyuan"}, {"value": 0, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 15054, "name": "wangxiyuan", "email": "wangxiyuan1007@gmail.com", "username": "wangxiyuan"}, "change_message_id": "29d81b476a8fa7ac84675da4c7cc2d50f796c598", "unresolved": false, "patch_set": 1, "id": "df33271e_1eb7cad7", "line": 7, "updated": "2020-03-25 09:08:52.000000000", "message": "I think you can use `zaqar-tempest-base` as the parent here directly.", "commit_id": "a0d8f82f6c83a08e62b356cc7053b0ffdbc67ac2"}, {"author": {"_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, "change_message_id": "9a3f646ff76bcf243f187717394921c42abfa06f", "unresolved": false, "patch_set": 1, "id": "df33271e_a7f04169", "line": 7, "in_reply_to": "df33271e_1eb7cad7", "updated": "2020-03-26 01:00:43.000000000", "message": "sure will try it.", "commit_id": "a0d8f82f6c83a08e62b356cc7053b0ffdbc67ac2"}]}}, "openstack%2Fcyborg~master~I37817da2a8f7ee2aa2f6dd5b7ab2188c2035cefb": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-11 11:44:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-03-26 03:24:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "19b474b13c36671ef92b6b7ec7caed297afb8da2", "unresolved": false, "patch_set": 3, "id": "1fa4df85_a4d8651d", "line": 7, "range": {"start_line": 7, "start_character": 24, "end_line": 7, "end_character": 26}, "updated": "2020-03-11 04:48:34.000000000", "message": "device profile", "commit_id": "2023c1679fe7b18e77539fe5af4a076a6c494eeb"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "631ca76a2ae48d48184d05acbf485239db66acb4", "unresolved": false, "patch_set": 3, "id": "1fa4df85_64658d1d", "line": 7, "range": {"start_line": 7, "start_character": 24, "end_line": 7, "end_character": 26}, "in_reply_to": "1fa4df85_a4d8651d", "updated": "2020-03-11 05:41:00.000000000", "message": "Done", "commit_id": "2023c1679fe7b18e77539fe5af4a076a6c494eeb"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "8de930bed48cf07f415a62c3ec029fae0bd5b286", "unresolved": false, "patch_set": 4, "id": "1fa4df85_6cec8f29", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 23}, "updated": "2020-03-11 11:28:14.000000000", "message": "The API Response has the created_at filed:\n\nhttps://github.com/openstack/cyborg/blob/master/cyborg/api/controllers/v2/device_profiles.py#L68", "commit_id": "79d290a0185a326e0bc0cc9295fbef571d28735b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "f9b6bbc559d49625abe5253e98476d9c15d60281", "unresolved": false, "patch_set": 4, "id": "1fa4df85_cc1fc307", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 23}, "in_reply_to": "1fa4df85_6cec8f29", "updated": "2020-03-11 11:39:37.000000000", "message": "Thanks chenker, re-word this sentence.", "commit_id": "79d290a0185a326e0bc0cc9295fbef571d28735b"}]}}, "openstack%2Fpanko~master~I05afcd15650f3f98ed57c6c850984b68faf4ae7a": {"owner_id": 30679, "owner_name": "yuanrunsen", "owner_email": "yuanrunsen@unitedstack.com", "labels": [{"value": -1, "date": "2019-12-24 04:19:19.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30679, "name": "yuanrunsen", "email": "yuanrunsen@unitedstack.com", "username": "yuanrunsen"}], "comments": {}}, "openstack%2Fpuppet-rally~master~I40fca3b425c7254e30b0607c243eddf9d95934dd": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:35:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "x%2Fnetworking-zvm~stable%2Fstein~Ic61197432d1f5fa559d08aabba65f0959a319620": {"owner_id": 6062, "owner_name": "jichenjc", "owner_email": "jichenjc@cn.ibm.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-26 02:37:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}], "comments": {}}, "starlingx%2Fha~master~Ief61bcbd973398acce4473c7cd429f03d34b5a98": {"owner_id": 28468, "owner_name": "Tao Liu", "owner_email": "tao.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 18:38:37.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 1, "date": "2020-03-25 18:07:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 2, "date": "2020-03-26 02:08:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}], "comments": {}}, "openstack%2Fkolla-ansible~master~Ie8efa509953d5efa5c3073c9b550be051a7f4f9b": {"owner_id": 31506, "owner_name": "Lin PeiWen", "owner_email": "591171850@qq.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-03-25 09:21:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 1, "date": "2020-03-25 10:30:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-25 09:59:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 31506, "name": "Lin PeiWen", "email": "591171850@qq.com", "username": "LinPeiWen"}], "comments": {}}, "openstack%2Fpython-dracclient~stable%2Fqueens~I10f4a44660e70f0cd8efd0ca9e8e96cb46751a61": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:37:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 2, "date": "2020-03-26 01:40:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_horizon~master~I9a2f1920611ca8ad2b2f2cdb625281132b968ec2": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:06:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-25 20:06:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15993, "name": "Amy Marrich", "display_name": "Amy Marrich (spotz)", "email": "amy@demarco.com", "username": "amarrich"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 1, "date": "2020-03-25 20:06:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23922, "name": "Magnus Bergman", "email": "mb@citynetwork.se", "username": "magnusbe"}], "comments": {}}, "openstack%2Fnova~master~I83e82a8e7d92c09c64848d17b327acce34f52efa": {"owner_id": 23598, "owner_name": "Zhong Luyao", "owner_email": "luyao.zhong@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-03-25 10:30:58.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_59d7acc0", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 7}, "updated": "2020-03-25 10:30:58.000000000", "message": "If this is a bugfix can you write up a bug report with a full description of the issue at hand here?", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_3f81e790", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 7}, "in_reply_to": "df33271e_59d7acc0", "updated": "2020-03-25 15:11:45.000000000", "message": "According to your comments, I look into the code again, it might not be a bug I think, just some confusing codes which need refactoring.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_f9bde068", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 29}, "updated": "2020-03-25 10:30:58.000000000", "message": "As the name suggests that's used on the destination after a failure not the source.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_9c73e1b1", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 29}, "in_reply_to": "df33271e_f9bde068", "updated": "2020-03-25 15:11:45.000000000", "message": "I mean this rpc call is sent out from source host, sorry I didn't make it clear.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_f94b2084", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 35}, "updated": "2020-03-25 10:30:58.000000000", "message": "I agree this needs to be cleaned up but I don't think defaulting do_cleanup to True is the way to do this.\n\nWe are duplicating logic in cleanup that's also present in other parts of the migration path.\n\nI'd rather see a set live_migration_cleanup_source|destination methods that explicitly cleanup things given if the instance path or disks are shared.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_ada82ddb", "line": 20, "range": {"start_line": 18, "start_character": 0, "end_line": 20, "end_character": 35}, "in_reply_to": "df33271e_f94b2084", "updated": "2020-03-25 15:11:45.000000000", "message": "yes there are duplicating logic, if set do_cleanup to True (I go into some code pathes)\nfor a), those duplicating logic might be called, like volume disconnection, but I think it will not break anything(exception will be captured and print some logs)\nfor b), those duplicating logic will not be called again, since we have several params like 'destroy_vifs' to control if we need unplug vifs and 'block_device_info' to control volume disconnection.\n\nif set do_cleanup to False, a) will not be called, _rollback_live_migration is lack of some logic like free_pci_device_claims_for_instance[1] which a) has. I'm not sure if this can be called a bug.\n\nYour suggestion is reasonable, we should put other cleanup tasks inside another separate method but not make them into such chaos or confusing or unreadable. \n\nThis change/refactor must be huge~~~, and need many tests.\n\n[1]https://github.com/openstack/nova/blob/f454e1dec9580abf4605e071bdd678a40f492a49/nova/compute/manager.py#L8785", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}], "doc/notification_samples/instance-live_migration_post-end.json": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_d9f45c5e", "line": 8, "range": {"start_line": 6, "start_character": 0, "end_line": 8, "end_character": 44}, "updated": "2020-03-25 10:30:58.000000000", "message": "Why are we changing this?", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_0d74b967", "line": 8, "range": {"start_line": 6, "start_character": 0, "end_line": 8, "end_character": 44}, "in_reply_to": "df33271e_d9f45c5e", "updated": "2020-03-25 15:11:45.000000000", "message": "We will get different results when setting do_cleanup to True/False. Obviously, current functional test don't go to here[1] since do_cleanup is False. instance.host is updated to dest host when post_live_migration_at_destination[2], so refresh instance will get the instance from db, ortherwise from memory cache.\n\n[1]https://github.com/openstack/nova/blob/f454e1dec9580abf4605e071bdd678a40f492a49/nova/compute/manager.py#L8372\n[2]https://github.com/openstack/nova/blob/f454e1dec9580abf4605e071bdd678a40f492a49/nova/compute/manager.py#L8350", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}], "nova/compute/manager.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_b9fd183c", "line": 8191, "range": {"start_line": 8190, "start_character": 0, "end_line": 8191, "end_character": 29}, "updated": "2020-03-25 10:30:58.000000000", "message": "I don't follow this logic, in both cases where this is used by the libvirt driver libvirtd itself will destroy the domains for us. Either on the source after a successful migration or on the destination after a failure.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}], "nova/tests/functional/notification_sample_tests/test_instance.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_f994c0ea", "line": 214, "range": {"start_line": 212, "start_character": 0, "end_line": 214, "end_character": 72}, "updated": "2020-03-25 10:30:58.000000000", "message": "Why are we changing this?", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_edcb5547", "line": 214, "range": {"start_line": 212, "start_character": 0, "end_line": 214, "end_character": 72}, "in_reply_to": "df33271e_f994c0ea", "updated": "2020-03-25 15:11:45.000000000", "message": "if settting do_cleanup always True, it will invoke rollback_live_migration_at_destination.", "commit_id": "a5aa4dbf4140389d1e02eb4bb010504142604f94"}], "nova/virt/fake.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "9980f53698704cb35a113e04cdeee75760e9e57a", "unresolved": false, "patch_set": 3, "id": "df33271e_5924cc0d", "side": "PARENT", "line": 325, "range": {"start_line": 323, "start_character": 0, "end_line": 325, "end_character": 70}, "updated": "2020-03-25 10:30:58.000000000", "message": "This is a valid check during post live migration FWIW.\n\nIn both cases where this is used libvirtd has already removed the domain for us in this case so we shouldn't find instance.uuid in self.instances.", "commit_id": "f454e1dec9580abf4605e071bdd678a40f492a49"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "711461143996e9a7fe916652623dce69a31674bd", "unresolved": false, "patch_set": 3, "id": "df33271e_2d1d3dbd", "side": "PARENT", "line": 325, "range": {"start_line": 323, "start_character": 0, "end_line": 325, "end_character": 70}, "in_reply_to": "df33271e_5924cc0d", "updated": "2020-03-25 15:11:45.000000000", "message": "This is a fake driver, not a real libvirt. So instance will still be there.", "commit_id": "f454e1dec9580abf4605e071bdd678a40f492a49"}]}}, "openstack%2Fpuppet-octavia~master~I792d9d13257e910d6285896e77af4b80c0425a2a": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:08:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 1, "date": "2020-03-25 21:21:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 1, "date": "2020-03-25 08:30:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I603623511e4061e782a65d53a3118d211ea6e708": {"owner_id": 4571, "owner_name": "Steve Baker", "owner_email": "sbaker@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:19:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-03-25 20:55:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I163e530cf79d534b84ea92fdca43aa8c36932ca1": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-03-25 23:09:59.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}, "x%2Fnetworking-zvm~stable%2Fstein~I37997b86928d3b399ce6b2c15d57dd0168bd5996": {"owner_id": 9725, "owner_name": "Dong Ma", "owner_email": "winterma.dong@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9725, "name": "Dong Ma", "email": "winterma.dong@gmail.com", "username": "larainema"}, {"value": 2, "date": "2020-03-26 01:07:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "_account_id": 5930, "name": "Huang Rui", "email": "bjhuangr@cn.ibm.com", "username": "bjhuangr"}], "comments": {}}, "openstack%2Fpython-dracclient~stable%2Fstein~I10f4a44660e70f0cd8efd0ca9e8e96cb46751a61": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:39:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 2, "date": "2020-03-26 01:11:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}], "comments": {}}, "openstack%2Fswift~master~I1de895d4571f7464be920345881789d47659729f": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-03-09 16:42:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {}}, "openstack%2Fneutron~master~Ib1ef0763496aa536ba80f1c34c64d8a6c313fd0b": {"owner_id": 13995, "owner_name": "Nate Johnston", "owner_email": "nate.johnston@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 15:59:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-03-25 15:51:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-03-25 15:50:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "ea43b336b1815b0e9ef2abe9bbcb44279f72f51a", "unresolved": false, "patch_set": 1, "id": "1fa4df85_3008b82a", "line": 12, "updated": "2020-03-02 14:32:55.000000000", "message": "Unfortunatelly I think it's still needed and I think that I may have some clue what may be wrong with it. IMO problem is that iptables rules modifications may somehow interfere between 2 tests and that may cause some problems. But to confirm that I think that indeed it would be good to maybe mark this test as stable now and get some fresh data to debug it.", "commit_id": "f9af5356006831e0ac4db4a3fc575a437e1667a4"}], "neutron/tests/fullstack/test_securitygroup.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "21b65d6ed0213a4ccca066083901e7e763bba81e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_5b31d5eb", "line": 21, "updated": "2020-03-02 14:35:08.000000000", "message": "I think You will need to remove this import too as it's probably not used anymore in this file", "commit_id": "f9af5356006831e0ac4db4a3fc575a437e1667a4"}, {"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "0ab5efefba8bd8dee54e00d99a48392eb1b1f917", "unresolved": false, "patch_set": 1, "id": "1fa4df85_d25cb5ee", "line": 21, "in_reply_to": "1fa4df85_5b31d5eb", "updated": "2020-03-03 14:25:51.000000000", "message": "Done.  Will this fix be needed in https://review.opendev.org/#/c/710964/ as well?", "commit_id": "f9af5356006831e0ac4db4a3fc575a437e1667a4"}, {"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "7b2b00072df5c81395085da570f8091175b58d37", "unresolved": false, "patch_set": 4, "id": "1fa4df85_8e4cccc8", "line": 102, "range": {"start_line": 98, "start_character": 0, "end_line": 102, "end_character": 30}, "updated": "2020-03-20 12:54:28.000000000", "message": "All of the errors seen in these test runs were in the linuxbridge-iptables scenario here.  As I said in the revised commit message, I think it's better to drop this and get the benefit of the other two scenarios, rather than not get any.", "commit_id": "aed9d7c57fe78c6574e692719a3e28371b494b84"}]}}, "openstack%2Fswift~master~I48ebbb38427612a52c36078586af7b9780b5ea37": {"owner_id": 9625, "owner_name": "Thiago da Silva", "owner_email": "thiagodasilva@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-20 06:00:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 0, "_account_id": 9625, "name": "Thiago da Silva", "email": "thiagodasilva@gmail.com", "username": "thiago"}], "comments": {"doc/saio/swift/proxy-server.conf": [{"author": {"_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, "change_message_id": "e1b0ae72f7fe6ac3a676a59bee9136330453297c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_75bf6779", "line": 12, "updated": "2020-01-30 18:01:48.000000000", "message": "Did you want it in the pipeline?\n\nAre there other middlewares we include here that we don't put in the pipeline?", "commit_id": "cea6dd91e4929b9c262923b3b594894f7501c4f8"}]}}, "openstack%2Fneutron~stable%2Ftrain~I953062d9ee8ee5ee9a9f07aff4a8222ac63ed525": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-17 16:18:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-03-25 21:42:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/objects/network_segment_range.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "834322312efae9d029af6656bdfbdb71d1a785ad", "unresolved": false, "patch_set": 5, "id": "1fa4df85_777df36c", "line": 22, "range": {"start_line": 22, "start_character": 0, "end_line": 22, "end_character": 40}, "updated": "2020-03-16 14:06:41.000000000", "message": "So that file should be listed in conflicts (or similar section to point changes to clean cherry-pick)", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f83a3e6f4059f5fa9a29fa3c5466d4c88fde97e5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_6d8204cb", "line": 22, "range": {"start_line": 22, "start_character": 0, "end_line": 22, "end_character": 40}, "in_reply_to": "1fa4df85_777df36c", "updated": "2020-03-16 16:18:45.000000000", "message": "Done", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}], "neutron/objects/plugins/ml2/base.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "834322312efae9d029af6656bdfbdb71d1a785ad", "unresolved": false, "patch_set": 5, "id": "1fa4df85_579237a1", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 10}, "updated": "2020-03-16 14:06:41.000000000", "message": "same for here (import and decorator at L43)", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f83a3e6f4059f5fa9a29fa3c5466d4c88fde97e5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_2d6c0c35", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 10}, "in_reply_to": "1fa4df85_579237a1", "updated": "2020-03-16 16:18:45.000000000", "message": "Done", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}], "neutron/objects/plugins/ml2/vlanallocation.py": [{"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "834322312efae9d029af6656bdfbdb71d1a785ad", "unresolved": false, "patch_set": 5, "id": "1fa4df85_17459f43", "line": 41, "updated": "2020-03-16 14:06:41.000000000", "message": "This whole block comes from I8568e2277e157754aaff87a059a40e34e6a43e2b which looks like backportable? If possible, I would prefer both backports", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f83a3e6f4059f5fa9a29fa3c5466d4c88fde97e5", "unresolved": false, "patch_set": 5, "id": "1fa4df85_ad623c15", "line": 41, "in_reply_to": "1fa4df85_17459f43", "updated": "2020-03-16 16:18:45.000000000", "message": "You are right, my fault.\n\nhttps://review.opendev.org/#/c/713281/", "commit_id": "72936ffcbae7f4d508f62b5fbad6ff1a1e06fe86"}]}}, "openstack%2Fneutron~master~Ie2d26f3820269271e7280b19f3206dd11aa99037": {"owner_id": 9531, "owner_name": "liuyulong", "owner_email": "i@liuyulong.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-03-24 23:39:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}, {"value": 1, "date": "2020-03-25 09:08:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 1, "date": "2020-03-25 08:59:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-03-25 21:24:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fneutron~stable%2Fstein~Iad7434f6d75e067feba31882a6417368b1915294": {"owner_id": 21798, "owner_name": "Bernard Cafarelli", "owner_email": "bcafarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, {"value": 1, "date": "2020-03-25 09:43:18.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-03-24 20:07:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 14:01:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "46810cfde4b5029dcc13b0dd983d587c0357c9d8", "unresolved": false, "patch_set": 3, "id": "df33271e_628d9430", "line": 19, "updated": "2020-03-25 14:01:25.000000000", "message": "I wonder why there is no info that this is cherry-pick from train commit but that's so nitty nit that it's better to go without it and unblock gate ASAP :)", "commit_id": "f1ef0d23374917a6f7067ac1b98d355f9c97f747"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "0af269ab12ccc177403dedbfa2919162c7a42925", "unresolved": false, "patch_set": 3, "id": "df33271e_67c6394b", "line": 19, "in_reply_to": "df33271e_628d9430", "updated": "2020-03-26 00:43:46.000000000", "message": "Yes, I went the \"separate changes\" way for this set (same as similar change in older branches, and it is kind of branch-specific).", "commit_id": "f1ef0d23374917a6f7067ac1b98d355f9c97f747"}]}}, "zuul%2Fzuul~master~I24ddff86b8962c902c3e541a72e8810c163cb0c9": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 23:21:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-03-25 19:25:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_horizon~master~I59fd6bd2e9557e8806e74bae8980ce322dcc748c": {"owner_id": 28008, "owner_name": "Guilherme", "owner_email": "gsteinmuller@vexxhost.com", "labels": [{"value": 2, "date": "2020-03-25 16:06:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}, {"value": 2, "date": "2020-03-25 16:06:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "starlingx%2Fconfig-files~master~I3bae661348718df00f7b50ba15931281a744d473": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 23:54:58.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-03-25 23:49:19.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Fopenstacksdk~stable%2Ftrain~I7c4591c582aad9f0bdf50ffe69cd072370768567": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 21:06:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "d4a85f0f04cc2993ff3b0188f17dcbc5320f6f8d", "unresolved": false, "patch_set": 1, "id": "df33271e_169e8553", "line": 35, "updated": "2020-03-25 21:04:33.000000000", "message": "This comment is now stale.", "commit_id": "f2bdf3887a55a215f89cfdb60d6dc852f4a713e4"}]}}, "openstack%2Frally-openstack~master~I1f301455dc32c78270ed0411c6a79a5f2c68e827": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 22:31:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I9bac918fcde80e6a2336bc3cf1e6972512298118": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-03-25 21:11:09.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Frally-openstack~master~Ibc652d95ef9fe862e6b67a55e9b22fb5333825dc": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:02:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_horizon~master~If6e3b48b68e0018e0122d76bf49dfbe569ce96ce": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 2, "date": "2020-03-25 20:43:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:10:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}], "comments": {}}, "openstack%2Fneutron~master~Ifeb1ed8a4eac1d2c34a2d1d306a41708d80b4110": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-20 14:52:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-03-24 11:51:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "zuul%2Fzuul-jobs~master~Iaefe9bea2c1a10d440ef75df3acd71fdd9a4157e": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-20 02:16:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 1, "date": "2020-03-20 02:16:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30637, "name": "Jan Kubovy", "email": "jan.kubovy@bmw.de", "username": "kubovy"}, {"value": 2, "date": "2020-03-20 02:16:04.000000000", "_account_id": 7069, "name": "Joshua Hesketh", "email": "josh@nitrotech.org", "username": "jhesketh"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-03-20 02:16:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/upload-logs-swift/library/test_zuul_swift_upload.py": [{"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "be86a107a24c4c46d5e6ae01acd0c81d98c9ed1e", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_881c3b14", "line": 97, "updated": "2019-10-19 09:38:57.000000000", "message": "Instead of putting those characters into a python script, would you mind using escape sequences instead? This would avoid eventual problems when editing this file.", "commit_id": "c3b305a59ccdc1e342234a3be4fb2df96a4aa52c"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "3024b4108fc1f18cdc0ddc62d7da7ad7a7bf91eb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_29dbb721", "line": 97, "in_reply_to": "3fa7e38b_881c3b14", "updated": "2019-10-22 02:57:10.000000000", "message": "sure, although i think most editors can handle it with the \"coding\" bit above?", "commit_id": "c3b305a59ccdc1e342234a3be4fb2df96a4aa52c"}]}}, "zuul%2Fzuul-jobs~master~I98c80f657f38c5e1ed5f28e5d36988a3429ad1f8": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7069, "name": "Joshua Hesketh", "email": "josh@nitrotech.org", "username": "jhesketh"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-23 21:04:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-20 05:30:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/upload-logs-swift/library/zuul_swift_upload.py": [{"author": {"_account_id": 7069, "name": "Joshua Hesketh", "email": "josh@nitrotech.org", "username": "jhesketh"}, "change_message_id": "ea701a9fdfc5d9b01ffd122c6383541c762a4578", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_15e5bc0a", "line": 668, "updated": "2018-08-17 07:25:54.000000000", "message": "If you want the download script to be listed in the files we'll need to make_indexes() after it is generated.\n\nAlternatively I think we should add the link to the downloader script elsewhere from the file list (eg in the footer). Ideally the index page could be a template itself, but that can happen at another step.", "commit_id": "e23ff5f9024aa922351e6e3ec7ae8b0f80b70d04"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "469c145663d09b9d2395681206c1d5b006f3c259", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_7bf661fc", "line": 668, "in_reply_to": "3f79a3b5_15e5bc0a", "updated": "2018-08-17 08:18:45.000000000", "message": "Would it actually be a problem to create the Uploader(), and then make the indexes?  i feel like it might be like this for the dry run mode ...", "commit_id": "e23ff5f9024aa922351e6e3ec7ae8b0f80b70d04"}]}}, "openstack%2Fcharm-rabbitmq-server~master~Ia239b7c2f0ed2383e220cf0fa4ade443149a3b32": {"owner_id": 20870, "owner_name": "Alex Kavanagh", "owner_email": "alex.kavanagh@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 18:12:20.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 2, "date": "2020-03-25 22:42:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {"hooks/rabbit_utils.py": [{"author": {"_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, "change_message_id": "1993de34d47faa5615f32e56483ee0801b825c12", "unresolved": false, "patch_set": 2, "id": "df33271e_894bcb85", "line": 220, "updated": "2020-03-23 12:32:57.000000000", "message": "copy-paste leftover, you don't want this line here, right?", "commit_id": "f83c1cb53d6de7da3b2dd997c0671a8e11aa4696"}, {"author": {"_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}, "change_message_id": "a3330681c3cb19d23a04a96be202e3fe652efbba", "unresolved": false, "patch_set": 2, "id": "df33271e_2447464e", "line": 220, "in_reply_to": "df33271e_894bcb85", "updated": "2020-03-23 12:39:31.000000000", "message": "Yes, that's a copy-paste error.  Good catch :)", "commit_id": "f83c1cb53d6de7da3b2dd997c0671a8e11aa4696"}]}}, "openstack%2Fopenstacksdk~master~I4e6485b936b6b7303b6463cbacd3bf98746fc5e1": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-24 18:28:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 21:00:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 1, "date": "2020-03-24 18:30:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"openstack/config/vendors/rackspace.json": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "a35cceab7f8735daddfe6f7eda6723bda81ba27f", "unresolved": false, "patch_set": 3, "id": "df33271e_d6b9bde9", "line": 22, "updated": "2020-03-25 21:00:14.000000000", "message": "might it be clearer here to have {projectid} on the end of this URL, and then subsitute that out in the python file?  the whole thing is black magic, but it seems this would be slightly *less* magic for anyone reading this file.\n\nbut then again, if it's actually substituting in a different way than {region_name}, that's confusing too...", "commit_id": "c6c69fc474ad103ba162f551d27347b3786f9a25"}]}}, "openstack%2Fopenstack-helm-infra~master~I6ec404f281e201023fa974601d7083f4ce3cfd30": {"owner_id": 18511, "owner_name": "Brian Wickersham", "owner_email": "bkw86@bellsouth.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 21:25:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17119, "name": "Dmitrii Kabanov", "email": "dmitrii.kabanov@att.com", "username": "dk370c"}, {"value": 0, "_account_id": 18511, "name": "Brian Wickersham", "email": "bkw86@bellsouth.net", "username": "bw6938"}, {"value": 2, "date": "2020-03-25 20:47:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 1, "date": "2020-03-25 20:52:14.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, {"value": 0, "_account_id": 29974, "name": "Stephen Taylor", "email": "stephen.taylor.1@att.com", "username": "st053q"}, {"value": 2, "date": "2020-03-25 20:49:47.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {"ceph-client/templates/bin/pool/_init.sh.tpl": [{"author": {"_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, "change_message_id": "a1ef499380df132beda09a314e0e811fbea07b01", "unresolved": false, "patch_set": 1, "id": "df33271e_b85fc870", "line": 88, "range": {"start_line": 88, "start_character": 2, "end_line": 88, "end_character": 26}, "updated": "2020-03-25 19:37:15.000000000", "message": "simply read this value only when non nautilus based deployments otherwise lets make it as a small value .", "commit_id": "490b33013eca21a2fc630fc7a934e8c3731b416d"}, {"author": {"_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, "change_message_id": "77e839cef1ef5d76bb1be85018e8c742f85867ef", "unresolved": false, "patch_set": 1, "id": "df33271e_5822fc01", "line": 161, "range": {"start_line": 158, "start_character": 1, "end_line": 161, "end_character": 25}, "updated": "2020-03-25 19:34:38.000000000", "message": "can we do this only  on  nautilus based deployments ?", "commit_id": "490b33013eca21a2fc630fc7a934e8c3731b416d"}, {"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "ad3c2ccfddcee27071cb31eb6fe06e6da664e577", "unresolved": false, "patch_set": 2, "id": "df33271e_9650d50c", "line": 158, "range": {"start_line": 158, "start_character": 96, "end_line": 158, "end_character": 97}, "updated": "2020-03-25 20:40:17.000000000", "message": "Whitespace", "commit_id": "7007a1b822171217f18d7d9e3bd9cd48ac6ea0b9"}, {"author": {"_account_id": 18511, "name": "Brian Wickersham", "email": "bkw86@bellsouth.net", "username": "bw6938"}, "change_message_id": "533a9035013bf0d9785e86990643d54b27b58544", "unresolved": false, "patch_set": 2, "id": "df33271e_b6d2395b", "line": 158, "range": {"start_line": 158, "start_character": 96, "end_line": 158, "end_character": 97}, "in_reply_to": "df33271e_9650d50c", "updated": "2020-03-25 20:49:06.000000000", "message": "fixed", "commit_id": "7007a1b822171217f18d7d9e3bd9cd48ac6ea0b9"}]}}, "starlingx%2Finteg~master~I10e6625f2718033169ce51bc18ecb9cc27232cc0": {"owner_id": 31199, "owner_name": "Paul-Ionut Vaduva", "owner_email": "Paul.Vaduva@windriver.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31199, "name": "Paul-Ionut Vaduva", "email": "Paul.Vaduva@windriver.com", "username": "paulvaduva"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 1, "date": "2020-03-25 06:51:22.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28747, "name": "Ovidiu Poncea", "email": "ovidiu.poncea@outlook.com", "username": "ovidiu.poncea"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, {"value": -1, "date": "2020-03-25 10:56:39.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28747, "name": "Ovidiu Poncea", "email": "ovidiu.poncea@outlook.com", "username": "ovidiu.poncea"}, "change_message_id": "41bc8f1ffecf5112722408d3705755c05ef3cc35", "unresolved": false, "patch_set": 1, "id": "df33271e_087950fb", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 20}, "updated": "2020-03-25 06:51:22.000000000", "message": "Use Closes-bug here. The first commit was partial. This last one is the fix that will close the issue for good.", "commit_id": "ccaafde496eb8993a771e866a3a6c05f8a207184"}]}}, "openstack%2Fnova~master~Iee0766269d61948ad701911e8b0e5e24d3d6eb04": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-22 01:31:40.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, {"value": 0, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23640, "name": "wangjiedong", "email": "jeeryopenstack@126.com", "username": "jeery"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 1, "date": "2020-03-24 03:06:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 1, "date": "2020-03-23 13:42:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, {"value": 0, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 2, "date": "2020-03-22 01:31:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 6062, "name": "jichenjc", "email": "jichenjc@cn.ibm.com", "username": "jichenjc"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-03-23 17:27:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 2218, "name": "Adam Young", "email": "adam@younglogic.com", "username": "ayoung"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-22 01:31:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29745, "name": "Dustin Cowles", "email": "cowlesd@gmail.com", "username": "dustinc", "status": "inactive"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "352c7a601ef853f507aec94d83e2c1807278fa08", "unresolved": false, "patch_set": 6, "id": "9fdfeff1_457c531e", "line": 20, "range": {"start_line": 19, "start_character": 0, "end_line": 20, "end_character": 47}, "updated": "2019-01-30 15:17:50.000000000", "message": "This is merged and released. Remove.", "commit_id": "52982976a50082c669d7504e245f5b9d2c4fd5e3"}, {"author": {"_account_id": 1063, "name": "Ed Leafe", "email": "ed@leafe.com", "username": "ed-leafe"}, "change_message_id": "87f7b829d43844fb7fcce8dcad8ce91f69f40cd6", "unresolved": false, "patch_set": 9, "id": "9fdfeff1_69759f63", "line": 20, "range": {"start_line": 19, "start_character": 0, "end_line": 20, "end_character": 47}, "updated": "2019-02-14 23:34:48.000000000", "message": "Eric's comment in PS6 still applies", "commit_id": "ea1d09d2377515e0cd23c12d8fca81c66b6e1693"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "5a099016cc961c7134988ccf6b9b36dc3e5eb9fe", "unresolved": false, "patch_set": 24, "id": "7faddb67_b6f84249", "line": 14, "range": {"start_line": 14, "start_character": 9, "end_line": 14, "end_character": 20}, "updated": "2019-07-09 22:36:21.000000000", "message": "this is no longer true (though IMO it should be)", "commit_id": "2b0aee75a846c378b7230662cb165eaf5b63ec4a"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "ba40b00a3b4367bcae13d044035d4b9f51f873bc", "unresolved": false, "patch_set": 24, "id": "7faddb67_2d7a83f0", "line": 14, "range": {"start_line": 14, "start_character": 9, "end_line": 14, "end_character": 20}, "in_reply_to": "7faddb67_b6f84249", "updated": "2019-07-31 05:20:03.000000000", "message": "Done", "commit_id": "2b0aee75a846c378b7230662cb165eaf5b63ec4a"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "5a099016cc961c7134988ccf6b9b36dc3e5eb9fe", "unresolved": false, "patch_set": 24, "id": "7faddb67_56954ee3", "line": 15, "updated": "2019-07-09 22:36:21.000000000", "message": "maybe worth mentioning we're using user auth + service auth.", "commit_id": "2b0aee75a846c378b7230662cb165eaf5b63ec4a"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "ba40b00a3b4367bcae13d044035d4b9f51f873bc", "unresolved": false, "patch_set": 24, "id": "7faddb67_ed7f8bdc", "line": 15, "in_reply_to": "7faddb67_56954ee3", "updated": "2019-07-31 05:20:03.000000000", "message": "Done", "commit_id": "2b0aee75a846c378b7230662cb165eaf5b63ec4a"}], "lower-constraints.txt": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cb063d8e4a9d262f36914182c29054ab4aa9c307", "unresolved": false, "patch_set": 26, "id": "7faddb67_f010b75b", "line": 70, "updated": "2019-07-31 17:52:19.000000000", "message": "This is the cause of your merge conflict now.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d27ca0d07825775195e69cff0e9234b242ef7eba", "unresolved": false, "patch_set": 26, "id": "7faddb67_0f4be92a", "line": 70, "in_reply_to": "7faddb67_f010b75b", "updated": "2019-08-01 04:14:28.000000000", "message": "Done", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}], "nova/accelerator/cyborg.py": [{"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "843802a770d21d833ef7e0b5d1247c081aa97d07", "unresolved": false, "patch_set": 16, "id": "9fdfeff1_22aea580", "line": 24, "updated": "2019-03-01 16:54:52.000000000", "message": "why is this a singleton? is there a reason why a lock is needed? why not just have the virt driver (or compute manager) instantiate a cyborg client when it needs one?", "commit_id": "0ce35105a28d4779aad428adb13e50aafa431e37"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "27d7998adfaf815a13eb11b7409bf581d116ed23", "unresolved": false, "patch_set": 16, "id": "9fdfeff1_72323612", "line": 24, "in_reply_to": "9fdfeff1_22aea580", "updated": "2019-03-01 21:08:28.000000000", "message": "Could, though I don't see why that's preferred. It would be holding its own adapter/session, which seems unnecessary. And if we ever *do* decide to keep state, we have to track down all the instances and unwind them like we did recently for SchedulerReportClient.", "commit_id": "0ce35105a28d4779aad428adb13e50aafa431e37"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "051aebfeaea5043078ac2d3781301452f2e7c9a7", "unresolved": false, "patch_set": 19, "id": "bfb3d3c7_40a252b0", "line": 22, "updated": "2019-05-22 22:51:20.000000000", "message": "Since we're going to do user auth for nova-to-cyborg calls, and since there's the potential for some calls (like binding aka programming) to run long, this constructor should\n- take a context\n- use service_auth.get_auth_plugin(context) to get a service-token-wrapped auth\n- pass that auth explicitly into get_ksa_adapter via the ksa_auth kwarg.", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "30bb0a562f688caec55d41deeb0db6b3d4147e46", "unresolved": false, "patch_set": 19, "id": "7faddb67_960e8de3", "line": 22, "in_reply_to": "bfb3d3c7_40a252b0", "updated": "2019-07-08 03:34:41.000000000", "message": "Done", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cb063d8e4a9d262f36914182c29054ab4aa9c307", "unresolved": false, "patch_set": 26, "id": "7faddb67_9a040117", "line": 1, "updated": "2019-07-31 17:52:19.000000000", "message": "I think you can remove this unless you have specific legal guidelines for contributing upstream that require this.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d27ca0d07825775195e69cff0e9234b242ef7eba", "unresolved": false, "patch_set": 26, "id": "7faddb67_cf5071d8", "line": 1, "in_reply_to": "7faddb67_9a040117", "updated": "2019-08-01 04:14:28.000000000", "message": "I have been advised to include the copyright notice.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b5a6209eec0ddbe39a674fdd89829a97bc9a7b87", "unresolved": false, "patch_set": 27, "id": "7faddb67_c6705343", "line": 31, "range": {"start_line": 31, "start_character": 29, "end_line": 31, "end_character": 44}, "updated": "2019-08-01 14:22:24.000000000", "message": "Now that SDK base support is merged, let's use get_sdk_adapter [1] instead.\n\nSince cyborg is using user auth, this will entail adding a ksa_auth kwarg to get_sdk_adapter that passes through to _get_auth_and_session [2].\n\nOtherwise all the plumbing should be in place to make this seamless.\n\n[1] https://opendev.org/openstack/nova/src/commit/877a78a63b13dc6599aed7c152b26b25501a52e8/nova/utils.py#L1237\n[2] https://opendev.org/openstack/nova/src/commit/877a78a63b13dc6599aed7c152b26b25501a52e8/nova/utils.py#L1176", "commit_id": "514414e75a82c1cf9684d6ae134b32e12cc54e11"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "1e45bc8a2cadd68400d0657013771afce34b43b9", "unresolved": false, "patch_set": 27, "id": "7faddb67_eb899774", "line": 31, "range": {"start_line": 31, "start_character": 29, "end_line": 31, "end_character": 44}, "in_reply_to": "7faddb67_c6705343", "updated": "2019-08-01 15:43:48.000000000", "message": "Since this is conceptually independent of the purpose of the patch series, can we do this after the series has merged? Trying to ensure this patch set gets merged well before the Train-3 deadline.", "commit_id": "514414e75a82c1cf9684d6ae134b32e12cc54e11"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c21451a10ebc481024f6bdfaec2c0717a10b90c1", "unresolved": false, "patch_set": 27, "id": "7faddb67_ae3c0de1", "line": 31, "range": {"start_line": 31, "start_character": 29, "end_line": 31, "end_character": 44}, "in_reply_to": "7faddb67_eb899774", "updated": "2019-08-01 17:05:30.000000000", "message": "No, think of it more like a \"rebase\". New things (which this still is) should use sdk.\n\nIt would be like introducing new unit tests using mox. Still works because we haven't finished getting rid of the other things that used it, but we don't want to add to the technical debt.\n\nEspecially since this one is sooo easy, there's no reason to hold it back.", "commit_id": "514414e75a82c1cf9684d6ae134b32e12cc54e11"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "4f9d3f867985c7ea73b018495c4ad7e84d0d6eda", "unresolved": false, "patch_set": 32, "id": "7faddb67_bd5d3717", "line": 31, "range": {"start_line": 31, "start_character": 0, "end_line": 31, "end_character": 74}, "updated": "2019-09-02 08:21:01.000000000", "message": "Hello Eric Fried and Sundar Nadathur, I learned the whole process of patch evolution, because get_ksa_adapter has already be used[1], Now, simply replace \" utils.get_ksa_adapter('accelerator', ksa_auth=auth)\" with \"utils.get_sdk_adapter('accelerator', ksa_auth=auth)\", is it OK? Thanks.\n[1]. https://review.opendev.org/#/c/643664/23", "commit_id": "014f54bd47d938083fbf53707591b48417064482"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c63ca366bec1d197d446ab5c736a34ce31df698b", "unresolved": false, "patch_set": 32, "id": "7faddb67_f4acfd35", "line": 31, "range": {"start_line": 31, "start_character": 0, "end_line": 31, "end_character": 74}, "in_reply_to": "7faddb67_bd5d3717", "updated": "2019-09-04 15:50:51.000000000", "message": "Yes, we definitely want to do that soon, but will first need to make get_sdk_adapter accept a ksa_auth.\n\nSundar and I played with this a few weeks ago and there were still some wrinkles on the SDK side that needed to be ironed out, so we decided to postpone the effort for later.", "commit_id": "014f54bd47d938083fbf53707591b48417064482"}, {"author": {"_account_id": 29745, "name": "Dustin Cowles", "email": "cowlesd@gmail.com", "username": "dustinc", "status": "inactive"}, "change_message_id": "d596870bfdb0e0503d03a88779713c0ede104187", "unresolved": false, "patch_set": 44, "id": "3fa7e38b_2efb6bbf", "line": 14, "updated": "2019-12-27 20:13:21.000000000", "message": "nit: most files have an empty line after the license", "commit_id": "15d9689b1fd51a9ef62c4386f76187d743d56272"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "864d77570415cc0a403dad8b8054678fc0d453b0", "unresolved": false, "patch_set": 44, "id": "3fa7e38b_8e22a653", "line": 14, "in_reply_to": "3fa7e38b_2efb6bbf", "updated": "2020-01-21 02:47:11.000000000", "message": "Done", "commit_id": "15d9689b1fd51a9ef62c4386f76187d743d56272"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bfb8703268d50a7b0fb74b9d23b25129e611577d", "unresolved": false, "patch_set": 49, "id": "3fa7e38b_3453e3e0", "line": 25, "range": {"start_line": 24, "start_character": 0, "end_line": 25, "end_character": 33}, "updated": "2020-02-05 17:35:03.000000000", "message": "Since Jay is no longer here to argue with me, I'm going to insist that the client be made a singleton. get_ksa_adapter() is not free (get_sdk_adapter(), which we should cut over to soon (or even now) is less so), and there's just no reason to do that setup on every API call.", "commit_id": "7ce91e8d4ed290a520e3761d18bd847ff8ab3c49"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "33398ceca2eb969fae411ffc89f279981ccbc248", "unresolved": false, "patch_set": 49, "id": "3fa7e38b_bf3a47c2", "line": 25, "range": {"start_line": 24, "start_character": 0, "end_line": 25, "end_character": 33}, "in_reply_to": "3fa7e38b_3453e3e0", "updated": "2020-02-06 02:26:11.000000000", "message": "Hope this patch merges soon, so that we don't hear ^ s/Jay/Eric/ in a few weeks :). Done.", "commit_id": "7ce91e8d4ed290a520e3761d18bd847ff8ab3c49"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f0da6c83273ba14b175584c6f3d7bd37ffdd2709", "unresolved": false, "patch_set": 51, "id": "1fa4df85_6d83e4cd", "line": 32, "range": {"start_line": 32, "start_character": 10, "end_line": 32, "end_character": 25}, "updated": "2020-02-27 15:55:10.000000000", "message": "so talking to mordred on irc this is the issue.\nwe need to call connect_as(contex) to take the adapter and return a version that uses the current requests cred instead of the cread of the first call that initialised the singleton.\n\nthe reason this appeared to work is that if you are only testing for less the 1 hour (defalt token expirey) or with one tenant then it will work breifly.\n\nim oging to add a follow up patch to verify this now and if it passes we can then squash it into this patch.", "commit_id": "807fec301f48b67a59661c51be0918772860ca41"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7bce78a55caf7a75e7c78a623ad40f9bfad22c1c", "unresolved": false, "patch_set": 51, "id": "1fa4df85_f40241b4", "line": 39, "range": {"start_line": 24, "start_character": 1, "end_line": 39, "end_character": 74}, "updated": "2020-02-27 13:11:03.000000000", "message": "while im not 100% sure i think its highly likely that the fact this is a sigolton is like the reason why we are getting keystone auth error after the service has been running for a period of time.", "commit_id": "807fec301f48b67a59661c51be0918772860ca41"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "3064be5a8c2e0d0ab9628bdb6a6bb44bb0266c5e", "unresolved": false, "patch_set": 51, "id": "1fa4df85_327772a3", "line": 39, "range": {"start_line": 24, "start_character": 1, "end_line": 39, "end_character": 74}, "in_reply_to": "1fa4df85_2a95d240", "updated": "2020-02-28 20:57:06.000000000", "message": "so yes removing the sigleton fixs the auth error\n\nhttps://storage.gra.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_e71/710443/1/check/cyborg-multinode-tempest-full/e715c5e/testr_results.html\n\nhttps://review.opendev.org/#/c/710443/", "commit_id": "807fec301f48b67a59661c51be0918772860ca41"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "95b8b68f581aeb11c5958c8bdf155c43b7555056", "unresolved": false, "patch_set": 51, "id": "1fa4df85_2a95d240", "line": 39, "range": {"start_line": 24, "start_character": 1, "end_line": 39, "end_character": 74}, "in_reply_to": "1fa4df85_aa0542c4", "updated": "2020-02-27 15:05:11.000000000", "message": "IMHO, this is not worth spending time on right now. I'd much rather we just revert to the non-singleton so we can get the functional parts of this patch working and landed and then we can circle back here. I know that the singleton nature of this is supremely important to some people, but it is not to me.", "commit_id": "807fec301f48b67a59661c51be0918772860ca41"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "236100dd33d32a2c7c81c0581f1a9580575cb9f5", "unresolved": false, "patch_set": 51, "id": "1fa4df85_aa0542c4", "line": 39, "range": {"start_line": 24, "start_character": 1, "end_line": 39, "end_character": 74}, "in_reply_to": "1fa4df85_f40241b4", "updated": "2020-02-27 14:59:00.000000000", "message": "Discussing this in IRC a bit [1]. TL;DR:\n- We should still singleton, for reasons previously stated.\n- We need to do something to refresh tokens.\n- It's possible s/ksa/sdk/ will do that for us, so let's try that first.\n- Some actual cyborg support has landed in SDK [2], and we should cut over to that, but later. For now, keep using the REST primitives.\n\n[1] http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-02-27.log.html#t2020-02-27T14:29:41\n[2] https://review.opendev.org/#/c/679914/", "commit_id": "807fec301f48b67a59661c51be0918772860ca41"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "df4a333b36afa1445bcb0ccc39fab7e6814613fb", "unresolved": false, "patch_set": 53, "id": "1fa4df85_b73d3590", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 33}, "updated": "2020-03-06 02:59:07.000000000", "message": "This isn't used by anywhere", "commit_id": "4b11f190cd573b3c9c55b470e1785b01855faf8d"}], "nova/conf/cyborg.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_6e7c2cb5", "line": 23, "range": {"start_line": 22, "start_character": 0, "end_line": 23, "end_character": 23}, "updated": "2019-01-16 16:00:47.000000000", "message": "You'll want to propose a patch to openstack/service-types-authority for this. See the README [1]. You ought to be able to do this any time, independent of the nova series, and get it merged pretty quickly, since cyborg is a thing of its own.\n\nOnce that patch merges, a bot will propose a corresponding patch to openstack/os-service-types.\n\nOnce that goes through, propose a release of os-service-types via the openstack/releases project.\n\nOnce that's released, a bot will propose a patch to the openstack/requirements project bumping the global upper constraint.\n\nOnce that merges, you can bump nova's minimum from within this patch by updating requirements.txt and lower-constraints.txt.\n\nIt's possible this is (at least part of) why get_ksa_adapter isn't finding your service without endpoint_override.\n\n[1] https://github.com/openstack/service-types-authority/blob/master/README.rst", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_eee01cfd", "line": 43, "range": {"start_line": 32, "start_character": 0, "end_line": 43, "end_character": 5}, "updated": "2019-01-16 16:00:47.000000000", "message": "You don't actually need this. By pulling in the opts from ks_loading, you get endpoint_override for free. So to make this \"work\" like you've got it going today, you would switch the 'url' key in your conf to 'endpoint_override' instead.\n\nFiguring out why you need to override the endpoint will be a separate issue. The above (os-service-types mapping) may be part of the problem. Could also have to do with how the service is being set up in the catalog, and/or how the API itself is (not) exposing the version document - those are things that would be solved outside of nova code.", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "352c7a601ef853f507aec94d83e2c1807278fa08", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_97567629", "line": 63, "range": {"start_line": 62, "start_character": 0, "end_line": 63, "end_character": 67}, "updated": "2019-01-30 15:17:50.000000000", "message": "No need to support these for new stuff. [Later] Turns out 'password' is a catch-all, so it's the only one we need.\n\nhttp://eavesdrop.openstack.org/irclogs/%23openstack-keystone/%23openstack-keystone.2019-01-22.log.html#t2019-01-22T19:37:11", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "051aebfeaea5043078ac2d3781301452f2e7c9a7", "unresolved": false, "patch_set": 19, "id": "bfb3d3c7_a0ec6ef3", "line": 34, "updated": "2019-05-22 22:51:20.000000000", "message": "Since we're going to do user auth for nova-to-cyborg ops, add\n\n include_auth=False\n\nhere...", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "30bb0a562f688caec55d41deeb0db6b3d4147e46", "unresolved": false, "patch_set": 19, "id": "7faddb67_b613890d", "line": 34, "in_reply_to": "bfb3d3c7_a0ec6ef3", "updated": "2019-07-08 03:34:41.000000000", "message": "Done", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "051aebfeaea5043078ac2d3781301452f2e7c9a7", "unresolved": false, "patch_set": 19, "id": "bfb3d3c7_40bd72d6", "line": 42, "range": {"start_line": 41, "start_character": 0, "end_line": 42, "end_character": 65}, "updated": "2019-05-22 22:51:20.000000000", "message": "...and remove these.", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "30bb0a562f688caec55d41deeb0db6b3d4147e46", "unresolved": false, "patch_set": 19, "id": "7faddb67_56f815c3", "line": 42, "range": {"start_line": 41, "start_character": 0, "end_line": 42, "end_character": 65}, "in_reply_to": "bfb3d3c7_40bd72d6", "updated": "2019-07-08 03:34:41.000000000", "message": "Done", "commit_id": "a134c6a2f1dfadce4cb1dfbf3e6e9f32d8cabd4e"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cb063d8e4a9d262f36914182c29054ab4aa9c307", "unresolved": false, "patch_set": 26, "id": "7faddb67_7004c718", "line": 1, "updated": "2019-07-31 17:52:19.000000000", "message": "You can remove this I think.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d27ca0d07825775195e69cff0e9234b242ef7eba", "unresolved": false, "patch_set": 26, "id": "7faddb67_ef4d2d3b", "line": 1, "in_reply_to": "7faddb67_7004c718", "updated": "2019-08-01 04:14:28.000000000", "message": "I have been advised not to remove 3rd party copyright notices.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bfb8703268d50a7b0fb74b9d23b25129e611577d", "unresolved": false, "patch_set": 49, "id": "3fa7e38b_b466f3bb", "line": 28, "range": {"start_line": 28, "start_character": 34, "end_line": 28, "end_character": 35}, "updated": "2020-02-05 17:35:03.000000000", "message": "micronit: this could be lowercase", "commit_id": "7ce91e8d4ed290a520e3761d18bd847ff8ab3c49"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "33398ceca2eb969fae411ffc89f279981ccbc248", "unresolved": false, "patch_set": 49, "id": "3fa7e38b_7f44cf48", "line": 28, "range": {"start_line": 28, "start_character": 34, "end_line": 28, "end_character": 35}, "in_reply_to": "3fa7e38b_b466f3bb", "updated": "2020-02-06 02:26:11.000000000", "message": "Done", "commit_id": "7ce91e8d4ed290a520e3761d18bd847ff8ab3c49"}], "nova/tests/unit/accelerator/test_cyborg.py": [{"author": {"_account_id": 15888, "name": "Zhenyu Zheng", "email": "zheng.zhenyu@outlook.com", "username": "Kevin_Zheng"}, "change_message_id": "d926c1bc873079b1d3be7e10caa2a5943ac8a97e", "unresolved": false, "patch_set": 3, "id": "9fdfeff1_b0705b74", "line": 35, "range": {"start_line": 35, "start_character": 48, "end_line": 35, "end_character": 54}, "updated": "2019-01-23 04:35:14.000000000", "message": "should be region_name\nhttps://github.com/openstack/keystoneauth/blob/master/keystoneauth1/adapter.py#L123", "commit_id": "fb8ea400ceb79281c3b5fb9386c3a09d4e45c33d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cb063d8e4a9d262f36914182c29054ab4aa9c307", "unresolved": false, "patch_set": 26, "id": "7faddb67_7a282585", "line": 1, "updated": "2019-07-31 17:52:19.000000000", "message": "same", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d27ca0d07825775195e69cff0e9234b242ef7eba", "unresolved": false, "patch_set": 26, "id": "7faddb67_4f56c1d0", "line": 1, "in_reply_to": "7faddb67_7a282585", "updated": "2019-08-01 04:14:28.000000000", "message": "Same response too.", "commit_id": "6971236c327ed3afa648d38bdcd5301f18d4a330"}, {"author": {"_account_id": 29745, "name": "Dustin Cowles", "email": "cowlesd@gmail.com", "username": "dustinc", "status": "inactive"}, "change_message_id": "631a2c612c0af4b321479e4397393ce282581448", "unresolved": false, "patch_set": 38, "id": "3fa7e38b_2635bd45", "line": 29, "range": {"start_line": 29, "start_character": 20, "end_line": 29, "end_character": 44}, "updated": "2019-11-19 20:21:36.000000000", "message": "It may seem like a non-issue, but I strongly recommend using a reserved domain [1] (example.com) in tests and documentation. This avoids confusion and in this case keeps someone's owned and in-use domain out of the code.\n[1] https://tools.ietf.org/html/rfc2606", "commit_id": "c645497388b302720780d5d351dbb9bdd72542d5"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "761160bb9d9169afa69e2c47f23cc297b1d42659", "unresolved": false, "patch_set": 38, "id": "3fa7e38b_188063f7", "line": 29, "range": {"start_line": 29, "start_character": 20, "end_line": 29, "end_character": 44}, "in_reply_to": "3fa7e38b_2635bd45", "updated": "2019-12-04 09:11:29.000000000", "message": "Done", "commit_id": "c645497388b302720780d5d351dbb9bdd72542d5"}, {"author": {"_account_id": 29745, "name": "Dustin Cowles", "email": "cowlesd@gmail.com", "username": "dustinc", "status": "inactive"}, "change_message_id": "d596870bfdb0e0503d03a88779713c0ede104187", "unresolved": false, "patch_set": 44, "id": "3fa7e38b_4ef827c0", "line": 14, "updated": "2019-12-27 20:13:21.000000000", "message": "nit: here too", "commit_id": "15d9689b1fd51a9ef62c4386f76187d743d56272"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "864d77570415cc0a403dad8b8054678fc0d453b0", "unresolved": false, "patch_set": 44, "id": "3fa7e38b_ae25225d", "line": 14, "in_reply_to": "3fa7e38b_4ef827c0", "updated": "2020-01-21 02:47:11.000000000", "message": "Done", "commit_id": "15d9689b1fd51a9ef62c4386f76187d743d56272"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "81306663a2f976e26c151720243b8b943a8f5184", "unresolved": false, "patch_set": 52, "id": "1fa4df85_aaad1932", "line": 24, "range": {"start_line": 24, "start_character": 8, "end_line": 24, "end_character": 36}, "updated": "2020-03-02 13:01:31.000000000", "message": "as below this is incorrect", "commit_id": "c1ce4661d310ad1ec1e0212c09f6df677a13cd11"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "c2812c5317b39660d3914c7683b6fad17d7b31a0", "unresolved": false, "patch_set": 52, "id": "1fa4df85_d581164c", "line": 24, "range": {"start_line": 24, "start_character": 8, "end_line": 24, "end_character": 36}, "in_reply_to": "1fa4df85_aaad1932", "updated": "2020-03-09 04:12:48.000000000", "message": "Done", "commit_id": "c1ce4661d310ad1ec1e0212c09f6df677a13cd11"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "81306663a2f976e26c151720243b8b943a8f5184", "unresolved": false, "patch_set": 52, "id": "1fa4df85_8a893dcb", "line": 35, "range": {"start_line": 35, "start_character": 9, "end_line": 35, "end_character": 36}, "updated": "2020-03-02 13:01:31.000000000", "message": "this is incorrect.\nwe nolonger have a singleton and even if we did this is not the correct way to force the client to be recreated.\nyou would mock the module property instead. so just delete this line", "commit_id": "c1ce4661d310ad1ec1e0212c09f6df677a13cd11"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "c2812c5317b39660d3914c7683b6fad17d7b31a0", "unresolved": false, "patch_set": 52, "id": "1fa4df85_759862bf", "line": 35, "range": {"start_line": 35, "start_character": 9, "end_line": 35, "end_character": 36}, "in_reply_to": "1fa4df85_8a893dcb", "updated": "2020-03-09 04:12:48.000000000", "message": "Done", "commit_id": "c1ce4661d310ad1ec1e0212c09f6df677a13cd11"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8479536688b77a78f73f731360a38b865957b946", "unresolved": false, "patch_set": 52, "id": "1fa4df85_30ad1888", "line": 35, "range": {"start_line": 35, "start_character": 9, "end_line": 35, "end_character": 36}, "in_reply_to": "1fa4df85_8a893dcb", "updated": "2020-03-02 14:16:35.000000000", "message": "by the way this is a failly minor nit but this is just left over from when we did the singelton.\n\nin my test patch i did not remove this as i wanted to assert the tempest tests would pass with the change and i was not running the unit or funcitonal tests.", "commit_id": "c1ce4661d310ad1ec1e0212c09f6df677a13cd11"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "97e3f66a11b8c05a5d09a42d1be091307353bdbb", "unresolved": false, "patch_set": 56, "id": "df33271e_38cf6a80", "line": 30, "range": {"start_line": 30, "start_character": 19, "end_line": 30, "end_character": 34}, "updated": "2020-03-23 13:42:25.000000000", "message": "micro nit: you could use the module level constant here\nbut this is the same and we wont be changing it form cyborg so its fine.\n\ne.g.\nfrom nova.conf import cyborg as cyborg_conf\nself.flags(group=cyborg_conf.CYBORG_GROUP...)", "commit_id": "c071741d565950ba0a6b43f7b66aad0bdbaf1dff"}], "nova/utils.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_217ab587", "line": 1377, "range": {"start_line": 1377, "start_character": 4, "end_line": 1377, "end_character": 21}, "updated": "2019-01-16 16:00:47.000000000", "message": "I think this should go into whatever module sets up the cyborg client adapter. Which should probably be called nova/accelerator/cyborg.py", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "8b5f2d58463434af4e0a4f72fd211dcb6afef1b0", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_c422d7a4", "line": 1377, "range": {"start_line": 1377, "start_character": 4, "end_line": 1377, "end_character": 21}, "in_reply_to": "bfdaf3ff_217ab587", "updated": "2019-01-16 16:29:57.000000000", "message": "It is being used in the scheduler/manager.py, conductor/manager.py and the libvirt driver.py. So, does this not qualify as a utility function across all 3 modules?", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "cf146e87b60a5401b569a7e5ed4b9246b51906a6", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_64e0cb97", "line": 1377, "range": {"start_line": 1377, "start_character": 4, "end_line": 1377, "end_character": 21}, "in_reply_to": "bfdaf3ff_c422d7a4", "updated": "2019-01-16 16:57:36.000000000", "message": "Those guys can and should do:\n\n from nova.accelerator import cyborg\n\n cyborgclient = cyborg.get_client()\n\n...which should do a singleton thing, because we really don't need more than one connection to the cyborg API.", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_61bbdd0d", "line": 1388, "range": {"start_line": 1385, "start_character": 0, "end_line": 1388, "end_character": 78}, "updated": "2019-01-16 16:00:47.000000000", "message": "Hm, if you're requiring the auth from the context, it's possible you don't want/need to pull in the ksa auth config opts. But I'm not sure you want to do that. I think we use the context when the operation is being done on behalf of the user - like when we're accessing glance. In this case I think we want to make the admin set up real credentials to the cyborg service via the conf, and always use those to authenticate to the service.", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "cf146e87b60a5401b569a7e5ed4b9246b51906a6", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_8477efd4", "line": 1388, "range": {"start_line": 1385, "start_character": 0, "end_line": 1388, "end_character": 78}, "in_reply_to": "bfdaf3ff_61bbdd0d", "updated": "2019-01-16 16:57:36.000000000", "message": "Looking closer, let me amend this (with the caveat that I could still be wrong):\n\nIt's possible we want to use service_auth, which does some kind of magic to keep a long-standing connection alive. But if service_auth.get_auth_plugin(ctxt) doesn't return anything, we shouldn't fail - we should go back to the original auth conf opts.\n\nGah, I really need to refresh my memory on how all of this works so we can get it right.", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_0185315a", "line": 1395, "range": {"start_line": 1395, "start_character": 28, "end_line": 1395, "end_character": 34}, "updated": "2019-01-16 16:00:47.000000000", "message": "this should be 'accelerator' (whatever the official service type name ends up being).", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "77dcaccba80dd1aaf34de9c71fe83a0ad8ce6c71", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_e1e02dfd", "line": 1410, "range": {"start_line": 1397, "start_character": 0, "end_line": 1410, "end_character": 52}, "updated": "2019-01-16 16:00:47.000000000", "message": "I haven't looked at the cyborg client code itself, but generally speaking we've been trying to get away from having such a thing at all. We would rather talk to the API directly through the ksa adapter itself.\n\nWhat ends up happening in a pattern like this is that we go through all the trouble of building up the ksa adapter, just to pull certain fields off of it and pass them to the client constructor, which in turn takes those fields and uses them to create *another* ksa adapter internally through which it communicates with the API.\n\nSince the cyborg API and client code is still fluid at this point, we have the opportunity to do this right. Let's see if we can get 15 minutes with mordred to nail down exactly what \"right\" looks like.\n\nThen this can be the reference for budding services in the future :)", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "cf146e87b60a5401b569a7e5ed4b9246b51906a6", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_4450275e", "line": 1410, "range": {"start_line": 1397, "start_character": 0, "end_line": 1410, "end_character": 52}, "in_reply_to": "bfdaf3ff_6469ab89", "updated": "2019-01-16 16:57:36.000000000", "message": "> I am open to that. I have tried to follow the 'new way' identified\n > here: https://github.com/openstack/nova/blob/master/nova/network/neutronv2/api.py#L191\n > \n > Are you saying here is a newer way than that?\n\nHeh, yes. The \"newest\" way, as Monty says, is to use openstacksdk. But we don't yet have that set up in nova. So the \"newer\" way is to not use client libs, but talk directly to the API through the ksa adapter, which gets built up using the imported conf opts like you're doing elsewhere in this patch.\n\nRather than neutron, use as your model the SchedulerReportClient, which is how nova talks to the placement service. (It should really be called PlacementClient, as Jay has noted [2].)\n\n(NB: be judicious in how closely you follow the SchedulerReportClient - e.g. please ignore the @safe_connect decorator.)\n\n[1] https://review.openstack.org/#/c/628923/\n[2] https://review.openstack.org/#/c/617049/", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "8b5f2d58463434af4e0a4f72fd211dcb6afef1b0", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_6469ab89", "line": 1410, "range": {"start_line": 1397, "start_character": 0, "end_line": 1410, "end_character": 52}, "in_reply_to": "bfdaf3ff_e1e02dfd", "updated": "2019-01-16 16:29:57.000000000", "message": "I am open to that. I have tried to follow the 'new way' identified here: https://github.com/openstack/nova/blob/master/nova/network/neutronv2/api.py#L191 \n\nAre you saying here is a newer way than that?", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "776044a10409336a0f5f50b1ac5043ae95404986", "unresolved": false, "patch_set": 1, "id": "bfdaf3ff_844b6f29", "line": 1410, "range": {"start_line": 1397, "start_character": 0, "end_line": 1410, "end_character": 52}, "in_reply_to": "bfdaf3ff_e1e02dfd", "updated": "2019-01-16 16:26:36.000000000", "message": "I concur. I think the pattern of python-*client libraries existing is a historical mistake we should not repeat.\n\nI'd like to see cyborg support added to openstacksdk - and for the python-cyborgclient repo to be retired (I want the same for all python-*client)\n\nI'd REALLY like to simplify some of nova's code by switching to using the sdk for all of this - but I don't have time yet to do that. In the meantime, I think just using the ksa Adapter directly is completely the right choice.", "commit_id": "4624c4c488a19fe7e2a304d372917b206618482c"}]}}, "starlingx%2Froot~master~Id37f2eaf5bacaad941a7abaf835d3c7204d7ca97": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 22:21:23.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-03-25 19:21:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 1, "date": "2020-03-25 19:21:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28707, "name": "Stefan Dinescu", "email": "stefan.dinescu@windriver.com", "username": "stefan.dinescu"}], "comments": {}}, "opendev%2Fsystem-config~master~I36a41bdcd23df9540183da5a087d364778d60b48": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 21:42:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}], "comments": {}}, "opendev%2Fsystem-config~master~Iba60cf5c7009d57c4910f9e4464aff9231598ad6": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 13:55:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-03-25 19:24:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-23 21:33:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~I541416d737b961c56aa2f584c172528632fd5537": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-24 13:13:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 13:13:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 1, "date": "2020-03-24 13:13:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"openstackclient/image/v2/image.py": [{"author": {"_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, "change_message_id": "01e59a4f1a7171a3db4dcb3c1c060eed39f0f0c1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_7f0e4633", "line": 101, "range": {"start_line": 101, "start_character": 11, "end_line": 101, "end_character": 29}, "updated": "2020-03-13 10:47:56.000000000", "message": "Image client initialized using OpenStack SDK: <openstack.image.v2._proxy.Proxy object at 0x7fdb5067aa90>\nInstantiating identity client: <class 'keystoneclient.v3.client.Client'>\n'Connection' object has no attribute '_is_uuid_like'\nTraceback (most recent call last):\n  File \"/home/punk/.virtualenvs/openstackclient/lib/python3.6/site-packages/cliff/app.py\", line 400, in run_subcommand\n    result = cmd.run(parsed_args)\n  File \"/home/punk/.virtualenvs/openstackclient/lib/python3.6/site-packages/osc_lib/command/command.py\", line 41, in run\n    return super(Command, self).run(parsed_args)\n  File \"/home/punk/.virtualenvs/openstackclient/lib/python3.6/site-packages/cliff/display.py\", line 117, in run\n    column_names, data = self.take_action(parsed_args)\n  File \"/home/punk/.virtualenvs/openstackclient/lib/python3.6/site-packages/openstackclient/image/v2/image.py\", line 163, in take_action\n    if conn._is_uuid_like(parsed_args.project):\nAttributeError: 'Connection' object has no attribute '_is_uuid_like'", "commit_id": "0b7a23a3666245a8c68e2247ef5ec8b49e8a0ce8"}]}}, "openstack%2Fansible-role-redhat-subscription~master~I21462446aeb01bbd280ee9c0cf9ef2bb222425b0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 21:53:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-25 21:54:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}], "comments": {}}, "openstack%2Fironic-python-agent~stable%2Ftrain~I8c0b42bb71b9e26ed7fec8894e21ce7fc06b94a1": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 18:47:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "airship%2Fairshipctl~master~I0df7e58aae886dfa3901815a60853e47c98b5e90": {"owner_id": 22477, "owner_name": "Matt McEuen", "owner_email": "matt.mceuen@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 21:38:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-03-25 21:22:57.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ibe0fd9405fa01c302d87fad6e89817839e7f5b88": {"owner_id": 18002, "owner_name": "John Fulton", "owner_email": "fulton@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:27:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}], "comments": {}}, "opendev%2Fjeepyb~master~Ide54c16fd75b1e06b45a926b771d65575d50ca2e": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:43:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-25 21:00:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"jeepyb/cmd/manage_projects.py": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "c58e0b19ac945d8ef8835d0be37581163dc4bc67", "unresolved": false, "patch_set": 1, "id": "df33271e_b69b59c7", "line": 460, "updated": "2020-03-25 20:43:31.000000000", "message": "Or you could open the file as 'rb'.  Bit more efficient than re-encoding.  But we're certain this file is utf8, so this should be safe.", "commit_id": "80b1e1523682a60fd402b8c1de137f2de1ba888a"}]}}, "openstack%2Fnova~stable%2Fstein~I8af2ad741ca08c3d88efb9aa817c4d1470491a23": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-25 14:32:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 2, "date": "2020-03-25 17:22:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fopenstack-ansible-os_murano~master~I57796a7e6d99fc40af0647b3004fed95ce9f298f": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 2, "date": "2020-03-25 17:12:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:32:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}], "comments": {}}, "openstack%2Fovsdbapp~master~I99181078af46540e2e58feeea161509d62e22045": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 2, "date": "2020-03-25 19:15:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 1, "date": "2020-03-12 14:31:28.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"ovsdbapp/backend/ovs_idl/transaction.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "da0e7fff6355fd5d69ff4f5a7e735d11eb4f7295", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6db0f2de", "line": 77, "range": {"start_line": 77, "start_character": 12, "end_line": 77, "end_character": 21}, "updated": "2020-03-12 14:30:45.000000000", "message": "Unittest?", "commit_id": "8275af1726cb2079afd8f5230377e064221ebcf3"}]}}, "openstack%2Foctavia~stable%2Ftrain~I5dec631d3e66e1dfb6b8741caea89938ee18a7d8": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:51:07.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-03-25 17:24:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10850, "name": "German Eichberger", "email": "german.eichberger@gmail.com", "username": "german"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I7de14456d04370c842b4c35597dca3a628a826a2": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 10980, "name": "Doug Wiegley", "email": "dougwig@parkside.io", "username": "dougw"}, {"value": 2, "date": "2020-03-24 20:11:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:11:17.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-glance~master~I67e5c96a70ae4ebb6934129286516a24c5a22fbf": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-keystone~master~I1753b530a72add191a99e621e422c98cdecda874": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:30:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-aodh~master~Iadbaa88680a15687c1e4af8a28db74a0794531ea": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_mistral~master~Ieca2e8cd7959005f354412eb5a9f17b4363a5853": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 2, "date": "2020-03-25 17:12:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:32:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}], "comments": {}}, "openstack%2Fmanila~stable%2Frocky~I82854d0f9075e6fc7d33c6459d71d7f0d502ff3c": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:13:03.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-03-25 16:50:58.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 1, "date": "2020-03-25 16:16:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "opendev%2Fpuppet-openstackid~master~I27d34b40c1bf04e64340bc245da0f27517a319f3": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:46:39.000000000", "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 1, "date": "2020-03-25 20:46:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openinfra%2Fopenstackid~master~Iba4781f601aaf5a84b2cffb978c5804a6caf51d1": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 20:43:36.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fneutron~master~I47be7c44d2324a09458da6cb97a15aaaa8b9d472": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}], "comments": {}}, "airship%2Fairshipctl~master~I41ff1ea01d5f04d7d987d2308636adfff48016ea": {"owner_id": 7769, "owner_name": "Pentheus", "owner_email": "alan.meadows@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:10:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-03-25 20:40:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}], "comments": {}}, "openstack%2Frpm-packaging~master~I2f96f4caf867681088f359e8271edbd17df960a6": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 14:50:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 2, "date": "2020-03-25 18:35:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}], "comments": {}}, "openstack%2Fironic~master~I3522f4a1c084c9cc2f7565f16ec0c790a1767377": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-10 09:14:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 1, "date": "2020-03-10 10:18:37.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-03-10 09:14:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 2, "date": "2020-03-25 18:40:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fpuppet-sahara~master~Id23196aea00f019936d99bd83d3452c006038604": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:35:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-panko~master~I82efcf730dd2b919bd96ae2d4965df26d98a0b4f": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:34:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-ceilometer~master~I961b21b4951c3ea2779e0765f6e36ae12f3b5b47": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fironic-python-agent-builder~master~I5ec9a0f76e5923d61eae01f2bf48a1015145dceb": {"owner_id": 31258, "owner_name": "Zygimantas Matonis", "owner_email": "zygimantas.matonis@cern.ch", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": -1, "date": "2020-02-20 12:14:43.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31258, "name": "Zygimantas Matonis", "email": "zygimantas.matonis@cern.ch", "username": "gudrutis"}, {"value": -1, "date": "2020-02-20 14:10:34.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {"ironic_python_agent_builder/__init__.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "c3d870eda3c6cc81bcf73c2d1e0f215cab744213", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_52332c13", "line": 59, "updated": "2020-02-20 12:27:54.000000000", "message": "You need to account for the case when ELEMENTS_PATH is empty or missing", "commit_id": "00a63b1252395c1ebf4530efc82541afa03a1fe2"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "c4f4157905e3af22f49c3fa2ac371190470a9bdf", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fb28f37f", "line": 59, "range": {"start_line": 59, "start_character": 68, "end_line": 59, "end_character": 71}, "updated": "2020-02-20 14:10:34.000000000", "message": "please use an alternative to \\ to split the line", "commit_id": "00a63b1252395c1ebf4530efc82541afa03a1fe2"}]}}, "openstack%2Fpuppet-barbican~master~I89aaa943c7af18298fce74e38a60639b8bd15068": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-25 19:08:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-vitrage~master~I046975163cd8f180760feb75dc8625a5fdcfafed": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:38:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-heat~master~Ibd40fed67872c502f54f12c07ebe20fa47089aa5": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "opendev%2Fpuppet-openstack_infra_spec_helper~master~Ibefbf15a9b950783bfd981de41ac62b1352bd2e5": {"owner_id": 5263, "owner_name": "Jeremy Stanley", "owner_email": "fungi@yuggoth.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-25 18:35:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-25 18:37:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpuppet-mistral~master~Ia6d09856e71e42bfa12b91a49735798bfed9818f": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:30:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fopenstack-zuul-jobs~master~I2fdd01217d38bc73d241460359a9ce2e7d6b1687": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:49:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fpuppet-trove~master~I40787084340ec84679d03728c25b5806e56fcefd": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:38:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "starlingx%2Fmonitor-armada-app~master~I8125c3c5b87e081a00907c519e3d513c74031c70": {"owner_id": 28709, "owner_name": "Kevin Smith", "owner_email": "kevin.smith@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31483, "name": "Simon Cousineau", "email": "simon.cousineau@windriver.com", "username": "scousineau"}, {"value": 0, "_account_id": 28709, "name": "Kevin Smith", "email": "kevin.smith@windriver.com", "username": "kevin.smith.wrs"}, {"value": 2, "date": "2020-03-25 19:56:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 2, "date": "2020-03-25 19:14:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"monitor-helm-elastic/files/0006-readiness-probe-enhancements.patch": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "c50313a5788eef36d5cd89b977e6569c8e5e6cb6", "unresolved": false, "patch_set": 1, "id": "df33271e_6d2e25fb", "line": 51, "updated": "2020-03-25 14:53:51.000000000", "message": "Will the data node count also drop into this code path on a host-swact for AIO-DX?", "commit_id": "bdfd8a2abddf046f2ee675fc95b06c974bd00a96"}, {"author": {"_account_id": 28709, "name": "Kevin Smith", "email": "kevin.smith@windriver.com", "username": "kevin.smith.wrs"}, "change_message_id": "794d58178818693c12b75dffcba48daa57c54763", "unresolved": false, "patch_set": 1, "id": "df33271e_cdb81178", "line": 51, "in_reply_to": "df33271e_6d2e25fb", "updated": "2020-03-25 15:09:17.000000000", "message": "For host-swact, pods should stay up (and ready if the pod ws previously ready), so we will stay in the path on line 25, the /tmp/.es_start_file file will still be there and readiness probe will just be checking that the node itself is responding.\n\nIt is potentially an issue that since host-unlock does not wait for ready pods before declaring 'unlocked-enabled', thus allowing a host-swact and host-lock of the just unlocked host, we may still lose data.  Not much we can do about that.", "commit_id": "bdfd8a2abddf046f2ee675fc95b06c974bd00a96"}]}}, "openstack%2Fpuppet-ironic~master~I643456548591f8dc6355fe90734ab35ba2de0706": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-manila~master~I1db44b860fd1f847c90f44583e876b4f8c5b1caa": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:30:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-watcher~master~Idaeca3097df5d7752fcbeecb4216061b1d278924": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:38:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I988d3c9d0564483440ae17203ad88a8049abbea4": {"owner_id": 19779, "owner_name": "Chason Chan", "owner_email": "chason.chan@foxmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-15 20:52:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-01-27 13:26:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {"ansible/roles/glance/defaults/main.yml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "af34bd8ff16518f946c310aeeec0ead7bd959d17", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7997613b", "line": 122, "range": {"start_line": 122, "start_character": 97, "end_line": 122, "end_character": 98}, "updated": "2020-01-13 20:21:21.000000000", "message": "space", "commit_id": "5d9701b11c9fda417e4e56f23302225812a0ed96"}, {"author": {"_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, "change_message_id": "26467683a1729debdb95280dd37577b63b44bb45", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d9f6955f", "line": 122, "range": {"start_line": 122, "start_character": 97, "end_line": 122, "end_character": 98}, "in_reply_to": "3fa7e38b_7997613b", "updated": "2020-01-13 21:20:48.000000000", "message": "Done", "commit_id": "5d9701b11c9fda417e4e56f23302225812a0ed96"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "3e9704a12e3f34a83d872f4f6be80f5e84255db7", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fd4816b5", "line": 12, "range": {"start_line": 12, "start_character": 16, "end_line": 12, "end_character": 20}, "updated": "2020-01-14 08:54:05.000000000", "message": "well, it can be privileged by default but better not (to minimize moves)", "commit_id": "995d645799a1de5347721c8a1f8528c8045733fd"}, {"author": {"_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, "change_message_id": "939b18135532cff7c8874dcf7ec699da7d48cd5e", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3dab0e20", "line": 12, "range": {"start_line": 12, "start_character": 16, "end_line": 12, "end_character": 20}, "in_reply_to": "3fa7e38b_fd4816b5", "updated": "2020-01-14 09:03:14.000000000", "message": "Done", "commit_id": "995d645799a1de5347721c8a1f8528c8045733fd"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "6ff3f931170ed5d805d9ca23d77379b1ac5e794b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f1befdad", "line": 12, "range": {"start_line": 12, "start_character": 28, "end_line": 12, "end_character": 87}, "updated": "2020-01-14 12:15:34.000000000", "message": "just this", "commit_id": "981abccca2e33c318cb9d92379cfa05e0987ad22"}, {"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "8b73d6ada4bfdbc7dae8dfd7020b20ab7317cbe2", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_6ef599cb", "line": 12, "updated": "2020-01-27 12:54:23.000000000", "message": "Can we warn the users somewhere in docs/globals.yml that enabling cinder_backend_iscsi will make the container run in privileged mode?", "commit_id": "fa49b2692de1b38bfdf47e1468296770d5dfff89"}], "ansible/roles/glance/handlers/main.yml": [{"author": {"_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, "change_message_id": "5f1226cd3cc4e4cd0ccc762b63907abce5946393", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d0e66914", "line": 12, "updated": "2020-01-13 17:52:44.000000000", "message": "typo", "commit_id": "2635c9253f785bfe038f70722bf203145646c2a8"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "af34bd8ff16518f946c310aeeec0ead7bd959d17", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5992a54c", "line": 12, "range": {"start_line": 12, "start_character": 28, "end_line": 12, "end_character": 87}, "updated": "2020-01-13 20:21:21.000000000", "message": "just this is enough\nalso best move this to defaults and use as 'service.privileged'", "commit_id": "5d9701b11c9fda417e4e56f23302225812a0ed96"}, {"author": {"_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, "change_message_id": "26467683a1729debdb95280dd37577b63b44bb45", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_39a80920", "line": 12, "range": {"start_line": 12, "start_character": 28, "end_line": 12, "end_character": 87}, "in_reply_to": "3fa7e38b_5992a54c", "updated": "2020-01-13 21:20:48.000000000", "message": "Done", "commit_id": "5d9701b11c9fda417e4e56f23302225812a0ed96"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "68a3b1159b5c05c94004f6266f030bf2f57b25c7", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bdc05efb", "line": 12, "range": {"start_line": 12, "start_character": 41, "end_line": 12, "end_character": 54}, "updated": "2020-01-14 08:54:45.000000000", "message": "no need if set there", "commit_id": "995d645799a1de5347721c8a1f8528c8045733fd"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "6ff3f931170ed5d805d9ca23d77379b1ac5e794b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b1d645f8", "line": 12, "range": {"start_line": 12, "start_character": 41, "end_line": 12, "end_character": 54}, "updated": "2020-01-14 12:15:34.000000000", "message": "not necessary", "commit_id": "981abccca2e33c318cb9d92379cfa05e0987ad22"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "ac0a743dc3377d65d527f60a4cd98cb557d26f28", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_51410a36", "line": 12, "range": {"start_line": 12, "start_character": 41, "end_line": 12, "end_character": 54}, "in_reply_to": "3fa7e38b_4cd3ba64", "updated": "2020-01-14 16:32:27.000000000", "message": "hmm, yeah, we could use a cleanup", "commit_id": "981abccca2e33c318cb9d92379cfa05e0987ad22"}, {"author": {"_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, "change_message_id": "23b83df6ea3a6341c0c37bcbd3eacec8669ac5a0", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_4cd3ba64", "line": 12, "range": {"start_line": 12, "start_character": 41, "end_line": 12, "end_character": 54}, "in_reply_to": "3fa7e38b_b1d645f8", "updated": "2020-01-14 13:11:00.000000000", "message": "I've put it because most of the roles have this. would it worth to clean up all of them with another change?", "commit_id": "981abccca2e33c318cb9d92379cfa05e0987ad22"}], "releasenotes/notes/glance-fix-iscsi-backend-784aca2c2456333c.yaml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "68a3b1159b5c05c94004f6266f030bf2f57b25c7", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9dcfa227", "line": 5, "range": {"start_line": 5, "start_character": 39, "end_line": 5, "end_character": 43}, "updated": "2020-01-14 08:54:45.000000000", "message": "its", "commit_id": "995d645799a1de5347721c8a1f8528c8045733fd"}]}}, "openstack%2Fproject-config~master~I6b1cab9249c292fc782fc0ea77871a41b0a5c2fd": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:06:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-25 19:07:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "starlingx%2Foidc-auth-armada-app~master~I68f431d94168cbe350dc666ca38f19720bb10fcf": {"owner_id": 28675, "owner_name": "Teresa Ho", "owner_email": "teresa.ho@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:27:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 1, "date": "2020-03-25 19:24:37.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {}}, "openstack%2Foctavia~master~Iaef520e5f2a66833228e824ec4fb41f5915169af": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:21:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 1, "date": "2020-03-25 15:32:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10806, "name": "Trevor Vardeman", "email": "tvardema@redhat.com", "username": "tvardeman"}, {"value": 0, "date": "2020-03-23 23:56:15.000000000", "permitted_voting_range": {"min": 0, "max": 1}, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}, {"value": 2, "date": "2020-03-25 17:24:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10850, "name": "German Eichberger", "email": "german.eichberger@gmail.com", "username": "german"}], "comments": {}}, "openstack%2Fpuppet-openstack-cookiecutter~master~Idac3a4f45ef909e07fbc9b6355c6f2bcb11fb548": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:32:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-cloudkitty~master~I9ed5232062a12ba6df12aac5b6e08aa6138df88c": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-freezer~master~Id30db32567d1c0ced302e61ef5b04f40b334c651": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:35.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fopenstacksdk~master~I2baea5f2bea4cd126725f5819eb33712675002be": {"owner_id": 14369, "owner_name": "Mark Chappell", "owner_email": "mchappel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 17:11:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-03-25 18:08:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"releasenotes/notes/added-federation-support-3b65e531e57211f5.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "61827b4a2822e5da3ef864947f66235ec65c8b43", "unresolved": false, "patch_set": 1, "id": "df33271e_2ec5335c", "line": 5, "updated": "2020-03-25 17:11:53.000000000", "message": "Should we call out the actual commands?", "commit_id": "ad170452b3dbb7f44aeac4d6f83cfd81ca819a27"}]}}, "openstack%2Fopenstacksdk~master~I6b60b8ce6f3650adff4732f06b212da787866183": {"owner_id": 14369, "owner_name": "Mark Chappell", "owner_email": "mchappel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:24:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 2, "date": "2020-03-25 18:08:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "a0bcfa8385124cc21e21b599f8a5fc8e335f5ad4", "unresolved": false, "patch_set": 2, "id": "df33271e_1b24200d", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 8}, "updated": "2020-03-23 14:29:30.000000000", "message": "I think this may need to be 'Depends-On'", "commit_id": "7ece1575ff7f77e745ae6521e5606b794bd18e2d"}], "openstack/identity/v3/_proxy.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "e2f05544213f88a2afd4bd21425b1d0e5bf79160", "unresolved": false, "patch_set": 4, "id": "df33271e_9d04a0c8", "line": 1380, "range": {"start_line": 1380, "start_character": 38, "end_line": 1380, "end_character": 54}, "updated": "2020-03-23 18:53:27.000000000", "message": "I found the order of these unintuitive but I see that's the order in the API so this is probably best", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}, {"author": {"_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, "change_message_id": "23b777dda6f2ceea9e6d3aabdd913a4274e3ae79", "unresolved": false, "patch_set": 4, "id": "df33271e_9d19408a", "line": 1380, "range": {"start_line": 1380, "start_character": 38, "end_line": 1380, "end_character": 54}, "in_reply_to": "df33271e_9d04a0c8", "updated": "2020-03-23 19:43:16.000000000", "message": "I also found it unintuative, but the other examples I could find did it this way around:  For example get_application_credential", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "af2500199764b3ef328024d09f4bba32f03cf19a", "unresolved": false, "patch_set": 6, "id": "df33271e_7c76dda6", "line": 1340, "range": {"start_line": 1340, "start_character": 49, "end_line": 1340, "end_character": 57}, "updated": "2020-03-25 11:50:33.000000000", "message": "I'd suggest using consistent naming here: either name_or_id everywhere or protocol", "commit_id": "8e12d07c8c6c5a76c3d2cb5464bdfd8f3ed88f8c"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "af2500199764b3ef328024d09f4bba32f03cf19a", "unresolved": false, "patch_set": 6, "id": "df33271e_dc6449e8", "line": 1345, "range": {"start_line": 1344, "start_character": 23, "end_line": 1345, "end_character": 24}, "updated": "2020-03-25 11:50:33.000000000", "message": "A thought for the future: allow IdentityProvider objects (assuming we have or will have them).\n\nOh, and it can be None, worth documenting it.", "commit_id": "8e12d07c8c6c5a76c3d2cb5464bdfd8f3ed88f8c"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "af2500199764b3ef328024d09f4bba32f03cf19a", "unresolved": false, "patch_set": 6, "id": "df33271e_3cb9f52d", "line": 1358, "updated": "2020-03-25 11:50:33.000000000", "message": "nit: redundant brackets (similarly below)", "commit_id": "8e12d07c8c6c5a76c3d2cb5464bdfd8f3ed88f8c"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "c16247325a4fda0b23ed84b95e3d35b03f54a5bb", "unresolved": false, "patch_set": 7, "id": "df33271e_539f845e", "updated": "2020-03-25 16:24:26.000000000", "message": "This file could use unit tests, I think", "commit_id": "49c3bba90609d28e2d2d86255ff07656c27ca64a"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "c16247325a4fda0b23ed84b95e3d35b03f54a5bb", "unresolved": false, "patch_set": 7, "id": "df33271e_b387f00f", "line": 1373, "updated": "2020-03-25 16:24:26.000000000", "message": "nit: these variables with classes feel redundant to me", "commit_id": "49c3bba90609d28e2d2d86255ff07656c27ca64a"}], "openstack/identity/v3/federation_protocol.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "e2f05544213f88a2afd4bd21425b1d0e5bf79160", "unresolved": false, "patch_set": 4, "id": "df33271e_7dd6fc51", "line": 36, "range": {"start_line": 36, "start_character": 19, "end_line": 36, "end_character": 23}, "updated": "2020-03-23 18:53:27.000000000", "message": "not a role", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}, {"author": {"_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, "change_message_id": "23b777dda6f2ceea9e6d3aabdd913a4274e3ae79", "unresolved": false, "patch_set": 4, "id": "df33271e_3d0f532f", "line": 36, "range": {"start_line": 36, "start_character": 19, "end_line": 36, "end_character": 23}, "in_reply_to": "df33271e_7dd6fc51", "updated": "2020-03-23 19:43:16.000000000", "message": "Will get that fixed.", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "e2f05544213f88a2afd4bd21425b1d0e5bf79160", "unresolved": false, "patch_set": 4, "id": "df33271e_ddcbc8a2", "line": 37, "updated": "2020-03-23 18:53:27.000000000", "message": "I think this needs to be id, not name - trying to use name fails", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}, {"author": {"_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, "change_message_id": "23b777dda6f2ceea9e6d3aabdd913a4274e3ae79", "unresolved": false, "patch_set": 4, "id": "df33271e_fd0deb37", "line": 37, "in_reply_to": "df33271e_ddcbc8a2", "updated": "2020-03-23 19:43:16.000000000", "message": "id=Body(id) gets automatically added, without something like this get returns \"name: None\" with no way to simply exclude name that I could see", "commit_id": "650350a7ff366e85495dfce980ef419bde02d72f"}]}}, "openstack%2Fpuppet-magnum~master~I0d76021c3389a75e2bf7ebfef9faa11d6ffbf617": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:30:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-tacker~master~I75139cc57469827bfa6452883f7d1bd13be48e08": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:36:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-congress~master~Id297ac8406620d6c53216e7c2fd28eaefe685783": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:28.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "airship%2Farmada~master~Icd52c168194808529d3b697a7ae44a06e656659d": {"owner_id": 27715, "owner_name": "Sean Eagan", "owner_email": "seaneagan@microsoft.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "airship%2Farmada~master~I3277323b647283989d31ee2cbd5b589263e9a617": {"owner_id": 27715, "owner_name": "Sean Eagan", "owner_email": "seaneagan@microsoft.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-murano~master~Iead3c6521de9d779845c44d9117b396e3348a8ec": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:30:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-glare~master~Ia6fa74ec2fc0f0e70cb9af111e7a9639322ca902": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:29:41.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "starlingx%2Fdocs~master~Ib329b5e0d26fccead92a6893ede8690c0597212d": {"owner_id": 30859, "owner_name": "M Camp", "owner_email": "mcamp859@hotmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 19:04:06.000000000", "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 2, "date": "2020-03-25 18:48:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 30859, "name": "M Camp", "email": "mcamp859@hotmail.com", "username": "mcamp859"}], "comments": {}}, "openstack%2Fopenstack-ansible~master~I951d76ad47814939072d7f52cfb9f9aa3d0d659a": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:11:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-25 15:24:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15993, "name": "Amy Marrich", "display_name": "Amy Marrich (spotz)", "email": "amy@demarco.com", "username": "amarrich"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I742584e4936fb46fee9006d799c3e520064cf7d7": {"owner_id": 4162, "owner_name": "Paul Belanger", "owner_email": "pabelanger@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 0, "date": "2019-05-06 04:27:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I3e6e904296b2a453762a34e24c082f61dcd03b61": {"owner_id": 6488, "owner_name": "Clint Byrum", "owner_email": "clint@fewbar.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6488, "name": "Clint Byrum", "email": "clint@fewbar.com", "username": "clint-fewbar"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/upload-logs-s3/GPL-3": [{"author": {"_account_id": 6488, "name": "Clint Byrum", "email": "clint@fewbar.com", "username": "clint-fewbar"}, "change_message_id": "bea13c87f48f2d29342dab65598edccf5a189926", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_1713af5d", "line": 1, "updated": "2018-09-07 21:06:29.000000000", "message": "FYI, It's been pointed out that this approach fails for a number of reasons, not the least of which is that you can't just wget all the logs from a run.\n\nSo I've looked into generating the HTML the way the swift one does. I think the better tack to take is actually to extract the index.html generation code from the swift upload module and use it in both.\n\nAlso I found another one that is MIT license, so that should alay any fears of GPLv3 sending potential users running for the hills. But again, I think that's the wrong approach, and as such, I'm marking this as WIP for now.", "commit_id": "7c02a0e4f46545c3a089f9b2731378fbbf6258c8"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "8df16caac721f2bd360f45897aed975b063035eb", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_ae8c2f80", "line": 1, "updated": "2018-09-05 06:34:37.000000000", "message": "I can't really see that we can possibly accept this, especially in a library repo ...", "commit_id": "7c02a0e4f46545c3a089f9b2731378fbbf6258c8"}, {"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "0b89a87b9761907bbf95c9d2d9fa5b95e3d2408c", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_fecaa717", "line": 1, "updated": "2018-09-06 22:20:56.000000000", "message": "Some counterarguments (from someone who is not a lawyer):\n\nhttps://governance.openstack.org/tc/reference/licensing.html states, \"projects run as part of the OpenStack Infrastructure (in order to produce OpenStack software) may be licensed under any OSI-approved license,\" for which GPLv3 most certainly counts (there is also a GPLv3 Ansible plugin in the zuul repo as precedent).\n\nThe requirement for anyone distributing a modified version of the HTML file so licensed to also distribute its source code would be automatically met since there is no separate compiled version.\n\nSince this is simply an HTML file served up to browsers, there's not really any linking going on (in the GPL sense of the term) so this could be deemed \"mere aggregation.\" But in addition, GPLv3 and ASLv2 are generally considered compatible licenses anyway.", "commit_id": "7c02a0e4f46545c3a089f9b2731378fbbf6258c8"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "8cc8411e46479657f044b7837f38a0d084b3873b", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_0488746e", "line": 1, "in_reply_to": "3f79a3b5_fecaa717", "updated": "2018-09-07 00:16:36.000000000", "message": "I understand Zuul, and infra projects in general have the GPL exceptions.  But I think you can draw a hard line between \"Zuul\" and \"jobs run by zuul\" in the same way you can draw a line like \"kernel\" and \"processes\".\n\nOn one hand, this uses the S3 API to generate the listings and so isn't really \"linked\" with the role.  But on the other hand, what's the point of uploading logs if you can't see them -- so this is really an integral part of the role in the same was as if you brought in as a library via requirements.txt.\n\nNot that I really even believe my own argument -- but this is kind of my issue; that by doing this we even open the door for arguments (\"a strange game.  the only winning move is not to play\" :)  From a practical sense, it's going to mean companies wanting to adopt zuul-jobs have another hurdle now of getting extra legal review on it.  What it means for all the other TC repos, which use zuul-jobs implicitly as part of their base jobs, I don't know either.\n\nWe have a policy page now especially for zuul-jobs [1].  So my only hard request would be that if we accept this, it goes along with a little section in there about what our policy is on licenses.\n\n[1] https://zuul-ci.org/docs/zuul-jobs/policy.html", "commit_id": "7c02a0e4f46545c3a089f9b2731378fbbf6258c8"}]}}, "openstack%2Fpython-tripleoclient~master~I9600f8b08391b36eae02a051713967b932fa06d3": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 05:26:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-03-25 05:26:12.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Fopenstack-manuals~master~I0e2c91fceaaefeb2da07ee840832488637870322": {"owner_id": 13252, "owner_name": "Dr. Jens Harbott", "owner_email": "frickler@offenerstapel.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 2, "date": "2020-03-25 17:56:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fironic-python-agent~master~I8c0b42bb71b9e26ed7fec8894e21ce7fc06b94a1": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 17:59:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 19:41:27.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 09:46:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"ironic_python_agent/extensions/image.py": [{"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "73ff0e036e6e6cea70717702b4db87dba617f54f", "unresolved": false, "patch_set": 1, "id": "df33271e_b130b509", "line": 175, "range": {"start_line": 175, "start_character": 53, "end_line": 175, "end_character": 58}, "updated": "2020-03-23 17:09:51.000000000", "message": "nit: system", "commit_id": "34bc637cc020b02362c84b52b3a6d7597f9716f1"}]}}, "openstack%2Freleases~master~I875a54464bb2173c2fc1fc3c8940e2822b7df4be": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:48:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-25 17:02:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I94988da32bdcf2d1a947abecf4faa8cd84a54741": {"owner_id": 18256, "owner_name": "Hemachandra Reddy", "owner_email": "hemachandra.reddy@att.com", "labels": [{"value": 2, "date": "2020-03-25 16:37:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 16:26:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11934, "name": "Scott Grasley", "email": "sg0818@att.com", "username": "grasley"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 18250, "name": "Roy Tang", "email": "roy.s.tang@att.com", "username": "rt7380"}, {"value": 0, "_account_id": 20469, "name": "Tin Lam", "email": "tinlam@gmail.com"}, {"value": 0, "_account_id": 18256, "name": "Hemachandra Reddy", "email": "hemachandra.reddy@att.com", "username": "hr858f"}, {"value": 1, "date": "2020-03-25 16:31:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16881, "name": "Munish", "email": "mm6021@att.com", "username": "munish.mehan@att.com"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}, {"value": 2, "date": "2020-03-25 16:47:27.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "openstack%2Fansible-role-redhat-subscription~master~I64b2dc97c512cecb7f4e6bcfa283733b3f2c1dc8": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:27:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {"tasks/main.yml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "7332ac33b29199857867deac0b7c36753d04ae72", "unresolved": false, "patch_set": 1, "id": "df33271e_1d836fce", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 16}, "updated": "2020-03-23 20:28:50.000000000", "message": "will this always be http?", "commit_id": "9c9da193f57df0810cb9ec541c8a2e722745ce9f"}]}}, "zuul%2Fnodepool~master~I9585db8fe4b4ad6f5b588fb67a7201296c2fc954": {"owner_id": 29671, "owner_name": "Albin Vass", "owner_email": "albin.vass@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-17 22:27:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-03-12 19:44:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6488, "name": "Clint Byrum", "email": "clint@fewbar.com", "username": "clint-fewbar"}, {"value": 0, "_account_id": 3099, "name": "David Shrewsbury", "email": "dshrewsb@redhat.com", "username": "dshrews"}, {"value": 0, "_account_id": 29671, "name": "Albin Vass", "email": "albin.vass@gmail.com", "username": "albin_vass"}, {"value": 0, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-20 12:52:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"nodepool/driver/aws/provider.py": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "f52298e4181c794d60013ec0d15fca0b885dbb23", "unresolved": false, "patch_set": 3, "id": "1fa4df85_a3127bb3", "line": 167, "updated": "2020-03-12 15:58:38.000000000", "message": "Maybe remove the space between tags and .append?", "commit_id": "6614e0d532d6073e1caa408a2e5f723e66fc20ae"}, {"author": {"_account_id": 29671, "name": "Albin Vass", "email": "albin.vass@gmail.com", "username": "albin_vass"}, "change_message_id": "69aeba74e291dc6652405f2e479e6d681c8ae810", "unresolved": false, "patch_set": 3, "id": "1fa4df85_e32cf3ad", "line": 167, "in_reply_to": "1fa4df85_a3127bb3", "updated": "2020-03-12 16:13:59.000000000", "message": "Oops, didn't even know python allowed that", "commit_id": "6614e0d532d6073e1caa408a2e5f723e66fc20ae"}]}}, "openstack%2Fkolla~stable%2Ftrain~I3e12ab51e9f01d383268d75ce72903686564ada6": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:56:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fkolla~stable%2Ftrain~Id67c58580d1eaad86cacc5094ee80a734ac1eb26": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-03-25 15:56:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-03-25 10:48:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "x%2Fpyghmi~master~I5aec979f12fd775bcf8570fde411eaee787ba9c3": {"owner_id": 7902, "owner_name": "Jarrod Johnson", "owner_email": "jjohnson2@lenovo.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:16:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7902, "name": "Jarrod Johnson", "email": "jjohnson2@lenovo.com", "username": "jbjohnso"}], "comments": {}}, "airship%2Fimages~master~Id83f1ec7a71d1db5f34f4bcc826a7c5a7911ede2": {"owner_id": 30847, "owner_name": "Nikolay Fedorov", "owner_email": "nfedorov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30847, "name": "Nikolay Fedorov", "email": "nfedorov@mirantis.com", "username": "nfedorov"}, {"value": 2, "date": "2020-03-25 17:16:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 2, "date": "2020-03-21 10:41:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"debian-isogen/files/build.sh": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "ba3acc4f899d3268bd8b208fc3f6b8c194a879c2", "unresolved": false, "patch_set": 2, "id": "1fa4df85_cb7ac075", "line": 31, "range": {"start_line": 31, "start_character": 0, "end_line": 31, "end_character": 66}, "updated": "2020-03-19 19:34:56.000000000", "message": "we should check the format of net config before converting it to json. I mean if NET_CONFIG is already in json format yq will fail i guess", "commit_id": "c604dbf7bf6c9ebf26fa2e3bf8a01a96e534e117"}]}}, "openstack%2Fopenstack-ansible-os_gnocchi~master~Iefac95507d189b86371026e17465adf15b1bf410": {"owner_id": 28008, "owner_name": "Guilherme", "owner_email": "gsteinmuller@vexxhost.com", "labels": [{"value": 2, "date": "2020-03-25 15:23:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:20:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~I24fad07d3a15c62d4de711a957f19d375862c28d": {"owner_id": 21798, "owner_name": "Bernard Cafarelli", "owner_email": "bcafarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-03-25 09:41:16.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-03-24 20:06:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-25 14:00:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "starlingx%2Fansible-playbooks~master~Ifc236ccbbe4e559987d7ef522902f638062348ca": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:03:15.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-03-24 22:04:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-03-24 22:28:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "starlingx%2Fansible-playbooks~master~I74bc5c53ffcb16c8e3c06cebf20eac296b9ccc65": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 17:02:09.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-03-24 22:04:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-03-24 22:27:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 28439, "name": "Matt Peters", "email": "matt.peters@windriver.com", "username": "mpeters-wrs"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "starlingx%2Fstx-puppet~master~Ic76baa00de4402cbb65c37fe89835b114d424634": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 16:58:11.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 1, "date": "2020-03-20 13:17:46.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-03-25 12:18:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28434, "name": "David Sullivan", "email": "david.sullivan@windriver.com", "username": "dsullivanwr"}], "comments": {}}, "openstack%2Fneutron~stable%2Frocky~I9ec8331bae54d191955a843f9d3f8c5537dc37f6": {"owner_id": 21798, "owner_name": "Bernard Cafarelli", "owner_email": "bcafarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-03-25 09:48:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-03-24 20:06:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-25 14:01:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "bf9738b61bf5a853032f2c4fcbf0f01b6464cdd0", "unresolved": false, "patch_set": 1, "id": "df33271e_22738c4f", "line": 19, "updated": "2020-03-25 14:01:54.000000000", "message": "same comment as for stein patch applies here :)", "commit_id": "f25c5a6c95ad694f68c7f0d31144604156d411a4"}]}}, "openstack%2Fpython-tripleoclient~master~Ib68c6b23f41fa848d82d30dc1d04201c76b2dc97": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 05:26:12.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-25 05:26:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Foctavia~master~I5dec631d3e66e1dfb6b8741caea89938ee18a7d8": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-16 17:44:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-03-16 17:00:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10850, "name": "German Eichberger", "email": "german.eichberger@gmail.com", "username": "german"}], "comments": {"elements/disable-makecache/post-install.d/80-disable-makecache": [{"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "e71d3093a22459d04ec48d621c129f7a84fb59c2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0da7d0a9", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 2}, "updated": "2020-03-16 16:00:04.000000000", "message": "?", "commit_id": "0a9a87a871949c6837f871d90f96bb73ab4857e6"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "b1af0d44abb91f17d0986de5eed35d360be7156b", "unresolved": false, "patch_set": 1, "id": "1fa4df85_28ee3ab4", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 2}, "in_reply_to": "1fa4df85_0da7d0a9", "updated": "2020-03-16 16:53:58.000000000", "message": "lol, opps", "commit_id": "0a9a87a871949c6837f871d90f96bb73ab4857e6"}]}}, "openstack%2Fopenstack-ansible-repo_server~stable%2Fstein~Iaa2e52b26ba89802e06665ebe43fdf18e515abd7": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:19:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-25 11:46:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fmanila~master~I34b77c95aad7ee2b67ba876db8aa64bbc44adb79": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:21:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 14:12:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fmanila~stable%2Fstein~I5f358266739f1c42343d5a0c5ec8109c8fcaac4d": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 18:35:30.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-03-24 18:45:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 1, "date": "2020-03-24 19:03:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fcinder~master~I963ad219c2e3b1c9c5edaa8f7e0d3dea911ecd8e": {"owner_id": 12670, "owner_name": "Helen Walsh", "owner_email": "helen.walsh@emc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 09:28:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-18 23:15:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26561, "name": "liu tracy", "email": "Tracy.Liu@emc.com"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 30165, "name": "Simon O'Donovan", "email": "simon.odonovan@dell.com", "username": "odonos12"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 2, "date": "2020-03-20 13:27:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}], "comments": {"cinder/volume/drivers/dell_emc/powermax/rest.py": [{"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "167a7bb0d8cfa5496a4b62b1d02836b82df80ec9", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fcca3f9f", "line": 1021, "range": {"start_line": 1021, "start_character": 15, "end_line": 1021, "end_character": 29}, "updated": "2020-03-13 15:20:27.000000000", "message": "This is going to be a UUID, right?  (Just checking, because otherwise we could get a false match here.)", "commit_id": "b71598ad8bad480e37677594d47840f51d6dce4c"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "a06c7fb340c4b6fc1538bb92c9d90da32205990e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1d27f966", "line": 1021, "range": {"start_line": 1021, "start_character": 15, "end_line": 1021, "end_character": 29}, "in_reply_to": "1fa4df85_fcca3f9f", "updated": "2020-03-16 21:06:34.000000000", "message": "Yes Brian that is correct.  Thank you", "commit_id": "b71598ad8bad480e37677594d47840f51d6dce4c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "656ccf68eeeed7505fb0ed19edcdac975f08b93f", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d8715de0", "line": 1024, "range": {"start_line": 1024, "start_character": 24, "end_line": 1024, "end_character": 28}, "updated": "2020-03-17 19:39:15.000000000", "message": "This definitely looks like a debug log level, not info", "commit_id": "d982e8f3275965bcaee96ba07f377639a4e315a0"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "97bc871d88eefdad14a17d3a546e24d6154b1c0a", "unresolved": false, "patch_set": 2, "id": "1fa4df85_8d6e3294", "line": 1024, "range": {"start_line": 1024, "start_character": 24, "end_line": 1024, "end_character": 28}, "in_reply_to": "1fa4df85_d8715de0", "updated": "2020-03-18 22:01:45.000000000", "message": "Good point. I will change. Thank you", "commit_id": "d982e8f3275965bcaee96ba07f377639a4e315a0"}]}}, "openstack%2Fovsdbapp~master~I59409f8ec1d8a59f94818abd3e3065c824df7b93": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~I8ad459a6e3a31c6bea386b40dd28e0bffde4751f": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:53:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~If7618a528a88fe92e96c118cd771d904a6f4f13a": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 10:18:45.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 2, "date": "2020-03-25 15:52:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "x%2Fvmware-nsx-tempest-plugin~master~I629ab1247a755e54f36387b1196214e27ee91770": {"owner_id": 28732, "owner_name": "Bharath bhushan Patel", "owner_email": "pbharathbhu@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 15:20:15.000000000", "_account_id": 28451, "name": "Shubham Kadam", "email": "shubhamk@vmware.com", "username": "shubhamk"}], "comments": {}}, "x%2Fvmware-nsx~master~I1150dc5336032c006e21ee91833f8949480abd4a": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:52:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla-ansible~master~Ibecac60d1417269bbe25a280996ca9de6e6d018f": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-03-25 13:59:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-03-25 11:52:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {"ansible/roles/common/defaults/main.yml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "ca3c0cd44600774c41242d86b7ee61294239767b", "unresolved": false, "patch_set": 2, "id": "df33271e_5cd5d942", "line": 11, "range": {"start_line": 11, "start_character": 11, "end_line": 11, "end_character": 14}, "updated": "2020-03-25 11:54:09.000000000", "message": "baremetal?", "commit_id": "89df07e8efda2a284ce357ddd91011e9fc4c5060"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "47fb77b48dac3cd19e962dd6a2a3df65472fe63c", "unresolved": false, "patch_set": 2, "id": "df33271e_fc6cad37", "line": 11, "range": {"start_line": 11, "start_character": 11, "end_line": 11, "end_character": 14}, "in_reply_to": "df33271e_5cd5d942", "updated": "2020-03-25 12:29:41.000000000", "message": "I think all is more accurate, since these services run on all hosts that run any services.", "commit_id": "89df07e8efda2a284ce357ddd91011e9fc4c5060"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "0c5346c3914a88175f0f96de1115a2ec99a77265", "unresolved": false, "patch_set": 2, "id": "df33271e_bf3b37e9", "line": 11, "range": {"start_line": 11, "start_character": 11, "end_line": 11, "end_character": 14}, "in_reply_to": "df33271e_7cbedd65", "updated": "2020-03-25 13:38:48.000000000", "message": "True. This won't result in these containers being deployed on the deployment host though, since it is only used to filter out hosts, not as the host pattern for a play.\n\nThere have been requests to make the common services deployed more explicitly, and maybe we should look at adding separate groups for each of them? Maybe even separate roles.", "commit_id": "89df07e8efda2a284ce357ddd91011e9fc4c5060"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "53cedc05b2b7e862f0cce29332eb46349dfadd13", "unresolved": false, "patch_set": 2, "id": "df33271e_62d6342a", "line": 11, "range": {"start_line": 11, "start_character": 11, "end_line": 11, "end_character": 14}, "in_reply_to": "df33271e_bf3b37e9", "updated": "2020-03-25 13:59:20.000000000", "message": "Yeah, but could be confusing then.\n\nI agree these need some split as their *roles* are certainly different.", "commit_id": "89df07e8efda2a284ce357ddd91011e9fc4c5060"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "ce513e2e26c4d25287828162d3718453c1e218c1", "unresolved": false, "patch_set": 2, "id": "df33271e_7cbedd65", "line": 11, "range": {"start_line": 11, "start_character": 11, "end_line": 11, "end_character": 14}, "in_reply_to": "df33271e_fc6cad37", "updated": "2020-03-25 12:38:08.000000000", "message": "But \"all\" includes \"deployment\"", "commit_id": "89df07e8efda2a284ce357ddd91011e9fc4c5060"}]}}, "openstack%2Fnova~stable%2Fpike~I1942bfa9bd1baf8738d34c287216db7b59000a36": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-25 06:40:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:40:30.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "222a0df231cade486b93464c0fd3ca879f332037", "unresolved": false, "patch_set": 1, "id": "df33271e_752630ba", "line": 21, "range": {"start_line": 21, "start_character": 59, "end_line": 21, "end_character": 61}, "updated": "2020-03-20 17:52:20.000000000", "message": "nit: as", "commit_id": "c00d2a996cdc902c3a145fdae1db1635a6cf97f1"}], "nova/tests/unit/conductor/tasks/test_migrate.py": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "222a0df231cade486b93464c0fd3ca879f332037", "unresolved": false, "patch_set": 1, "id": "df33271e_b50ef82f", "line": 96, "range": {"start_line": 88, "start_character": 0, "end_line": 96, "end_character": 9}, "updated": "2020-03-20 17:52:20.000000000", "message": "Note to self: this test is the very same as the above one (test_execute),except this self.request_spec ...", "commit_id": "c00d2a996cdc902c3a145fdae1db1635a6cf97f1"}, {"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "222a0df231cade486b93464c0fd3ca879f332037", "unresolved": false, "patch_set": 1, "id": "df33271e_352ca898", "line": 107, "range": {"start_line": 100, "start_character": 0, "end_line": 107, "end_character": 9}, "updated": "2020-03-20 17:52:20.000000000", "message": "... and legacy_request_spec added from the original patch in Queens.", "commit_id": "c00d2a996cdc902c3a145fdae1db1635a6cf97f1"}, {"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "222a0df231cade486b93464c0fd3ca879f332037", "unresolved": false, "patch_set": 1, "id": "df33271e_d53a9ccb", "line": 120, "updated": "2020-03-20 17:52:20.000000000", "message": "pep8: ./nova/tests/unit/conductor/tasks/test_migrate.py:120:1: W391 blank line at end of file", "commit_id": "c00d2a996cdc902c3a145fdae1db1635a6cf97f1"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "33b337f4a369c496a8e55fbeabcfedd8200509f0", "unresolved": false, "patch_set": 1, "id": "df33271e_c39e5406", "line": 120, "in_reply_to": "df33271e_d53a9ccb", "updated": "2020-03-23 09:57:42.000000000", "message": "Done", "commit_id": "c00d2a996cdc902c3a145fdae1db1635a6cf97f1"}]}}, "openstack%2Fnova~stable%2Fpike~I5b8fa4233d297722c3af08176901d12887bae3de": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-25 06:40:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:40:14.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "4a2bed131db71f63b1c416c1fd826f8b66f041f0", "unresolved": false, "patch_set": 2, "id": "1fa4df85_3607b91b", "line": 9, "updated": "2020-03-11 17:50:35.000000000", "message": "Conflicts:\n    nova/tests/unit/consoleauth/test_consoleauth.py\n\nNOTE: conflict is due to Iffdd4e251bfa2bac1bfd49498e32b738843709de is only backported till Queens.", "commit_id": "56e54f8988403c8dd0ff2ec65092da041e460b5d"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0a390c6ef08af433124155ade3683cc191d06532", "unresolved": false, "patch_set": 2, "id": "1fa4df85_431dc70d", "line": 9, "in_reply_to": "1fa4df85_3607b91b", "updated": "2020-03-12 15:49:38.000000000", "message": "Done", "commit_id": "56e54f8988403c8dd0ff2ec65092da041e460b5d"}]}}, "openstack%2Fcharm-swift-proxy~master~I50921b098d9143dc29c55b1ea24cddfa4dc7f870": {"owner_id": 21232, "owner_name": "josephillips", "owner_email": "jose.phillips@topmanage.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ci~master~I400291d4752baf055f26b7d66dd96307763748e4": {"owner_id": 8449, "owner_name": "Marios Andreou", "owner_email": "marios@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": -1, "date": "2020-03-25 10:11:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "openstack%2Fcharm-aodh~master~I77c30d046299f453262722061d178e4b1b9fefa0": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 16:59:30.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 2, "date": "2020-03-25 15:15:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 2, "date": "2020-03-25 15:13:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~Ic391500af02a73d81d64a9e9113cca85c9e24390": {"owner_id": 27900, "owner_name": "Artem Goncharov", "owner_email": "artem.goncharov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, {"value": 2, "date": "2020-03-24 13:13:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openinfra%2Fopenstackid~master~I295d38eb1d0a9a611a1cbcec76962f0d33989936": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 14:36:29.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fneutron~master~I4eeff95ad1c87b0ca9b8a04973084cb4e11a06be": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-23 22:49:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-24 19:52:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-20 14:58:08.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-03-24 14:36:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fopenstack-helm-addons~master~I3ea2194cb839c3be2dd89660c43af07778b0b385": {"owner_id": 24999, "owner_name": "Hari", "owner_email": "hosingh000@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:09:16.000000000", "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-03-25 13:41:08.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ic75bbd0a2011925d106816ba88f1bcded405f22e": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10873, "name": "Juan Antonio Osorio Robles", "email": "jaosorior@redhat.com", "username": "ejuaoso"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30921, "name": "Abdallah Yasin", "email": "abdallahyas@mellanox.com", "username": "abdallahyas"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": -1, "date": "2020-03-25 13:38:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "1e1b633db950c049510e278cd0ed86ee4eeeb055", "unresolved": false, "patch_set": 2, "id": "df33271e_0c7a2423", "line": 1, "updated": "2020-03-23 16:37:03.000000000", "message": "would be really nice to add:\nCloses-Bug: #1868588", "commit_id": "c8b27581350f9ba41c6ab6b7659699c5d766260c"}], "tripleo_ansible/roles/tripleo_hosts_entries/tasks/main.yml": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "63a494b04ca3b8fc9b1c75a41ed81a59792d8587", "unresolved": false, "patch_set": 3, "id": "df33271e_0646777d", "side": "PARENT", "line": 34, "range": {"start_line": 34, "start_character": 9, "end_line": 34, "end_character": 55}, "updated": "2020-03-24 10:21:38.000000000", "message": "ditto", "commit_id": "e9c37f5e5599bf34a58c59f6dac621563696be0d"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "63a494b04ca3b8fc9b1c75a41ed81a59792d8587", "unresolved": false, "patch_set": 3, "id": "df33271e_c64bef84", "side": "PARENT", "line": 36, "range": {"start_line": 36, "start_character": 9, "end_line": 36, "end_character": 48}, "updated": "2020-03-24 10:21:38.000000000", "message": "seems unused anymore, drop it?", "commit_id": "e9c37f5e5599bf34a58c59f6dac621563696be0d"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "63a494b04ca3b8fc9b1c75a41ed81a59792d8587", "unresolved": false, "patch_set": 3, "id": "df33271e_265c5b4a", "side": "PARENT", "line": 56, "range": {"start_line": 56, "start_character": 9, "end_line": 56, "end_character": 50}, "updated": "2020-03-24 10:21:38.000000000", "message": "ditto", "commit_id": "e9c37f5e5599bf34a58c59f6dac621563696be0d"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "63a494b04ca3b8fc9b1c75a41ed81a59792d8587", "unresolved": false, "patch_set": 3, "id": "df33271e_c6300f0b", "line": 39, "range": {"start_line": 39, "start_character": 15, "end_line": 39, "end_character": 26}, "updated": "2020-03-24 10:21:38.000000000", "message": "this should be given a default value, and skipped here if empty", "commit_id": "df77fd9f30d2d9074172a7466a760b9948c128f8"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "b4a6784dd0eddce30a157cb368164f5490e38125", "unresolved": false, "patch_set": 3, "id": "df33271e_353d9fbb", "line": 39, "range": {"start_line": 39, "start_character": 15, "end_line": 39, "end_character": 26}, "in_reply_to": "df33271e_5c04d017", "updated": "2020-03-24 14:25:09.000000000", "message": "right, but there should be a safe default for non-faily calls of the module", "commit_id": "df77fd9f30d2d9074172a7466a760b9948c128f8"}, {"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "d4ad6ef39ead942c29b0b6b9e77277d961df638e", "unresolved": false, "patch_set": 3, "id": "df33271e_5c04d017", "line": 39, "range": {"start_line": 39, "start_character": 15, "end_line": 39, "end_character": 26}, "in_reply_to": "df33271e_c6300f0b", "updated": "2020-03-24 12:43:12.000000000", "message": "not sure we'll ever see it empty or \"unset\"... ? Any idea why this would happen? Even the undercloud deploy pushes content there... Minions maybe?", "commit_id": "df77fd9f30d2d9074172a7466a760b9948c128f8"}]}}, "openstack%2Fzun~master~Ie98586bce8fe5e4acdaffa9c3dcb75b157237118": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:17:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Freleases~master~I12c862d7cd840a091e980f32de3178fbabfa5dac": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 10:20:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 2, "date": "2020-03-25 14:13:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Iea45febd03171a7a947960f1700c983538948800": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 10:19:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 2, "date": "2020-03-25 14:13:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Frequirements~master~I111fb609751b8724248a85fe9adf004ae3c4e634": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:38:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-03-25 12:46:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fmanila~stable%2Fstein~I82854d0f9075e6fc7d33c6459d71d7f0d502ff3c": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 10:24:59.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 1, "date": "2020-03-25 11:12:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 1, "date": "2020-03-25 10:37:12.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fnova-specs~master~I52ea7a99856efee48aaf0b1f7a70705c7b24d850": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-14 10:25:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 1, "date": "2020-01-14 10:39:23.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 2, "date": "2020-01-27 13:04:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {"specs/ussuri/approved/action-event-fault-details.rst": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d52f0df3", "line": 22, "range": {"start_line": 22, "start_character": 34, "end_line": 22, "end_character": 61}, "updated": "2019-12-18 16:28:06.000000000", "message": "nit: technically this command takes two args, a server and request ID:\n\nhttps://docs.openstack.org/python-openstackclient/latest/cli/command-objects/server-event.html#server-event-show", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0677b6d3", "line": 22, "range": {"start_line": 22, "start_character": 34, "end_line": 22, "end_character": 61}, "in_reply_to": "3fa7e38b_d52f0df3", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d5cb8d1a", "line": 46, "updated": "2019-12-18 16:28:06.000000000", "message": "I think it's important to note that if the server status is not ERROR but some operation failed, the user cannot get the fault details either because server faults are only shown for servers in ERROR or DELETED status:\n\nhttps://docs.openstack.org/api-guide/compute/faults.html#instance-faults\n\nBut instance actions can be shown for a server in any status (and even for deleted servers since microversion 2.21).", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_616bf4b8", "line": 46, "in_reply_to": "3fa7e38b_d5cb8d1a", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_95fe7537", "line": 51, "range": {"start_line": 50, "start_character": 57, "end_line": 51, "end_character": 26}, "updated": "2019-12-18 16:28:06.000000000", "message": "As mentioned above, if the server status is ERROR then you can get this information via the fault details. The problem is when the server is *not* in ERROR status and you want details about the failure.", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_015a401d", "line": 51, "range": {"start_line": 50, "start_character": 57, "end_line": 51, "end_character": 26}, "in_reply_to": "3fa7e38b_95fe7537", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_95ac3537", "line": 61, "updated": "2019-12-18 16:28:06.000000000", "message": "This is pretty sparse on details. For example, you should explain what the event \"details\" are actually going to be. In my PoC they are the same as the fault.message that the user would see when the server is in ERROR status. For NovaExceptions that would be the actual exception message but for non-NovaExceptions it's just the exception class name:\n\nhttps://github.com/openstack/nova/blob/56fc3f28e48bd9c6faf72d2a8bfdf520cc3e60d0/nova/compute/utils.py#L60", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e1c4c462", "line": 61, "in_reply_to": "3fa7e38b_95ac3537", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_75ff3902", "line": 72, "updated": "2019-12-18 16:28:06.000000000", "message": "It's probably worth noting that nothing is populating that column today even though it exists, and it's a TEXT size column so it should be large enough to hold exception fault messages.", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d3e71b45", "line": 72, "in_reply_to": "3fa7e38b_75ff3902", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3028ef83", "line": 92, "range": {"start_line": 92, "start_character": 23, "end_line": 92, "end_character": 34}, "updated": "2019-12-18 16:28:06.000000000", "message": "As I mentioned above, technically if you use the same utility code to generate the fault message, this would be \"No valid host was found\" because it's a NovaException. If the fault was due to some libvirtError for example, then it would just be the class name, i.e. \"libvirtError\".", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c18d082a", "line": 92, "range": {"start_line": 92, "start_character": 23, "end_line": 92, "end_character": 34}, "in_reply_to": "3fa7e38b_3028ef83", "updated": "2019-12-19 06:08:28.000000000", "message": "That's true.", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_702d078e", "line": 111, "updated": "2019-12-18 16:28:06.000000000", "message": "Clearly there is a chance for a security impact with this change because we could be leaking sensitive information about the deployment to a non-admin end user, but we already do through server faults so this shouldn't be *worse*. Note this bug about faults: https://bugs.launchpad.net/nova/+bug/1851587", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_01a3209d", "line": 111, "in_reply_to": "3fa7e38b_702d078e", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_903be3c7", "line": 136, "updated": "2019-12-18 16:28:06.000000000", "message": "Well, like faults I guess developers have to be careful about what information they put into NovaExceptions which could leak sensitive information to a non-admin end user.", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_132cd391", "line": 136, "in_reply_to": "3fa7e38b_903be3c7", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7608aa3733ac445b29ba67466ee8bfbec15ee297", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4f7953f9", "line": 155, "range": {"start_line": 155, "start_character": 2, "end_line": 155, "end_character": 9}, "updated": "2019-12-18 11:50:24.000000000", "message": "This idea comes from matt, and he was already pushed the PoC codes, I think matt is suitable as the feature liaison.\n\nPoC code:\nhttps://review.opendev.org/#/c/694430/\nhttps://review.opendev.org/#/c/694428/", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_70b0a741", "line": 155, "range": {"start_line": 155, "start_character": 2, "end_line": 155, "end_character": 9}, "in_reply_to": "3fa7e38b_4f7953f9", "updated": "2019-12-18 16:28:06.000000000", "message": "Normally yes I'd be a good person to add here but I'm starting a new job in January which doesn't involve OpenStack so I'm not really going to be around after the holiday break to be helping with this in nova so you'd be better off finding someone else.\n\nNote that this is more for new contributors so if you're comfortable with your abilities to get code changes through nova (which you probably should be by now, you've worked on a few blueprints), you can just put yourself here or another core that is committing to reviewing this.\n\nhttps://specs.openstack.org/openstack/nova-specs/readme.html#feature-liaison-faq", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b3485f62", "line": 155, "range": {"start_line": 155, "start_character": 2, "end_line": 155, "end_character": 9}, "in_reply_to": "3fa7e38b_70b0a741", "updated": "2019-12-19 06:08:28.000000000", "message": "> but I'm starting a new job in January **which doesn't involve OpenStack**\n\nI was shocked to hear the news, and please let me thank you anyway. Your contribution in OpenStack is huge, and I know that whatever you do, you will be outstanding. I believe nova is strong and look forward to your joining again :)", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "f7ad5af4ba9d85bcc746835ff7deabb8bc21eb10", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_70b74723", "line": 160, "updated": "2019-12-18 16:28:06.000000000", "message": "Well, it's a bit more than that - it's adding the field and populating it, and the populating part requires some work:\n\nhttps://review.opendev.org/#/c/694428/1/nova/objects/instance_action.py@201\n\nSpecifically the serialize_args decorator serializes all exceptions so we can't distinguish between stringifying NovaExceptions and non-NovaExceptions. So the serialize_args decorator needs to be smarter. You can see the results of some of that in here too:\n\nhttps://review.opendev.org/#/c/694428/1/nova/tests/unit/objects/test_instance_action.py", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1e8bdb494ec70f8c8b17fb1aabfb0dcb353107fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_73ee6722", "line": 160, "in_reply_to": "3fa7e38b_70b74723", "updated": "2019-12-19 06:08:28.000000000", "message": "Done", "commit_id": "ada252e89bfa4bcb00962ec82315a5b0f604b680"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "18a3f38716a895ed35a9b664d13ed86a94ba55a1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e16ad615", "line": 59, "range": {"start_line": 58, "start_character": 38, "end_line": 59, "end_character": 69}, "updated": "2020-01-10 13:03:00.000000000", "message": "tracebacks could be a security issue so we should never show those to the user. im not sure about other excpetions. there are cases when they are exposed to the user already but im not sure how involved it woudl be to add good user facing messages that would be actionable by a non admin.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "18a3f38716a895ed35a9b664d13ed86a94ba55a1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_81ed228f", "line": 72, "range": {"start_line": 69, "start_character": 0, "end_line": 72, "end_character": 24}, "updated": "2020-01-10 13:03:00.000000000", "message": "alot of the time that would not be something the user could act on and fix.\n\nin principal if the api accepted the request then it was valid and the action should be completed. now there are some error like exceeding quota that the user might be able to respond to but if it was a no valid host error or the action triggered a stack trace im not sure how useful this would be.\n\nthat said yes we could use the fault.message and exception class name for non nova exceptions.\n\nim not realy sure if we should expose non nova messages at all as it would be leaking info about the deployment.\n\nfor example unless told by the operator some way you should not really know what cinder or virt driver backend is being used by the cloud but if we include a ceph or libivrt exception name that kind of tells you. you could find out the cinder backend for the attachmetns and you will normally know the virt driver but in principal that is not the type if info that a tenant is expected to know when using openstack.\n\nin partice they do have to look behind the curtain a bit to know what features they can uses but in principal they are not ment too.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "18a3f38716a895ed35a9b664d13ed86a94ba55a1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_41e3aaa0", "line": 105, "range": {"start_line": 105, "start_character": 9, "end_line": 105, "end_character": 48}, "updated": "2020-01-10 13:03:00.000000000", "message": "right so as a non admin user how woudl i handel a no valid host error?\n\ncan you provide another example where the details filed would provide info that is useful to a non admin? this is potentially leaking capacity information to the tenant which some operator will not like.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "18a3f38716a895ed35a9b664d13ed86a94ba55a1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a1be1e61", "line": 126, "range": {"start_line": 126, "start_character": 47, "end_line": 126, "end_character": 69}, "updated": "2020-01-10 13:03:00.000000000", "message": "ya thats fair. its not better either so im not sure we shoudl add more instance of something we consider to be a bug but its not worse.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "784f73a5abaac55c4675651f957236bb3721cb4a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7e5e71e9", "line": 127, "range": {"start_line": 127, "start_character": 5, "end_line": 127, "end_character": 18}, "updated": "2020-01-13 07:27:36.000000000", "message": "Invalid reference, instead of `bug 1851587`_", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bf1bc2efb0ff9414131bbf5fd2e5a27d8a633d0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ee34f0e2", "line": 128, "updated": "2020-01-13 10:46:35.000000000", "message": "I think we should guard this new feature with a new policy so that the deployer can decide if she wants to expose these faults information to the end user.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "509cd7e799922462c0600e61b4f57c2053ce3d20", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6b6b03f0", "line": 128, "in_reply_to": "3fa7e38b_3fc55091", "updated": "2020-01-14 08:06:48.000000000", "message": "Yes, we can add a new policy when the deployer can decide if she wants to expose these faults information to the end user.\n\nAdd \"os_compute_api:os-extended-instance-actions-attributes\" policy to the instance action's attribute, it's default rule is admin_api. While show the instance action details that we should determine whether policy is allowed.", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4c548630c1f294ba934e066d1337fd7174e91890", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3fc55091", "line": 128, "in_reply_to": "3fa7e38b_ee34f0e2", "updated": "2020-01-13 14:39:57.000000000", "message": "14:25 < brinzhang_> gibi: hi, I am not very clear what did you mean, can you give me more\n                    details about this\nhttps://review.opendev.org/#/c/699669/2/specs/ussuri/approved/action-event-fault-details.rst@128\n\nSo during the review it came up multiple times that having the extra fault information in the response for the end user could leak information about the infrastructure, e.g. what virt driver is used or what cinder backend is used. As the implementation will automatically include some of the internal information of the implementation in the fault (i.e. exception message or exception type name) we cannot really control what kind of information we leak due to further development on nova or the 3rd party libs nova uses. So to give a way to the deployer to decide if she is OK to such potential leak I think we need to make this API change optional per deployment. \n\nThe way to do this is to add a new API policy that defines if \"details\" field of the API response is filled. This is similar how the GET /servers/details returns the \"OS-EXT-SRV-ATTR:host\" field (and other fields) today. By default that field is not returned for the end user just for the admin. However there is an API policy that defines this behavior called \"os_compute_api:os-extended-server-attributes\" this policy by default is \"admin_api\" but a deployer can decide to configure it in the policy.yaml file to \"admin_or_owner\" and this way nova will return such attribute for the owner of the server too. \n\nhttps://docs.openstack.org/nova/latest/configuration/policy.html", "commit_id": "73108e90498218d70f3a5a80842454a3a706a8d4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "af76e023be1106d41cc5684bed4bc20672041f79", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d3618912", "line": 71, "range": {"start_line": 69, "start_character": 0, "end_line": 71, "end_character": 21}, "updated": "2020-01-14 10:39:23.000000000", "message": "ok so it will be admin only by default unless we have a system scoped token or the policy is updated.\n\nya i think that makes sense", "commit_id": "60fb46e3dff6ad1d0f47a748b7de9249919ab533"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "1036937fcfe530a9bb511049478ea9aa60e1b9fe", "unresolved": false, "patch_set": 3, "id": "df33271e_b756c928", "line": 71, "range": {"start_line": 69, "start_character": 0, "end_line": 71, "end_character": 21}, "in_reply_to": "3fa7e38b_d3618912", "updated": "2020-03-25 02:19:47.000000000", "message": "we do have policy which control the 'events' info for non-admin\n\n - https://review.opendev.org/#/c/694430/13/nova/policies/instance_actions.py@52", "commit_id": "60fb46e3dff6ad1d0f47a748b7de9249919ab533"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "bc93457c4013c9133a9faeb32ae94fb26d90f57b", "unresolved": false, "patch_set": 3, "id": "df33271e_424970ce", "line": 71, "range": {"start_line": 69, "start_character": 0, "end_line": 71, "end_character": 21}, "in_reply_to": "df33271e_6d5c6e4b", "updated": "2020-03-25 14:11:27.000000000", "message": "yeah but what is the main differnce of info in 'details' and 'traceback'. I think both are kind of info for admin to debug/fix or take next action.", "commit_id": "60fb46e3dff6ad1d0f47a748b7de9249919ab533"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "127c83ceda5b0b4c89fb0930550781eed6c2a06e", "unresolved": false, "patch_set": 3, "id": "df33271e_6d5c6e4b", "line": 71, "range": {"start_line": 69, "start_character": 0, "end_line": 71, "end_character": 21}, "in_reply_to": "df33271e_b756c928", "updated": "2020-03-25 06:21:08.000000000", "message": "If we want to expose this to the non-admin user by modify the default policy, we cannot only control the 'details' to shown in instance action events.\n\nIf we use the BASE_POLICY_NAME% 'events' policy to limit populate the events 'details', then 'traceback' and 'details' will be on the same level and cannot be treated differently \n\nIf the administrator wants to expose 'details' to the non-admin, sensitive information ('traceback') will also be exposed to non-admin at the same time, this is not what we want.", "commit_id": "60fb46e3dff6ad1d0f47a748b7de9249919ab533"}]}}, "openstack%2Frally-openstack~master~I039ac03048dd9d636a9ffe678d0c473ce43c5457": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I0912add619954f8c74847494ae1bae6bf777f6b0": {"owner_id": 9976, "owner_name": "Ronelle Landy", "owner_email": "rlandy@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 01:20:24.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-03-25 07:06:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "x%2Fnetworking-opencontrail~stable%2Fqueens~I65f4581ee0e4ebad49665475daa8ccde05cff2e8": {"owner_id": 30962, "owner_name": "Wiktor", "owner_email": "wsleczka@juniper.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:45:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29784, "name": "Adrian Szczepa\u0144ski", "email": "aszczepanski@juniper.net", "username": "adrian.szczepanski"}, {"value": 0, "_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}], "comments": {}}, "openstack%2Fcharm-manila-generic~master~I2da00ee7e553edf1eee4cd729b240175ab31f512": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:32:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}], "comments": {}}, "x%2Fnetworking-opencontrail~stable%2Ftrain~I65f4581ee0e4ebad49665475daa8ccde05cff2e8": {"owner_id": 30962, "owner_name": "Wiktor", "owner_email": "wsleczka@juniper.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:44:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29784, "name": "Adrian Szczepa\u0144ski", "email": "aszczepanski@juniper.net", "username": "adrian.szczepanski"}, {"value": 0, "_account_id": 29780, "name": "Krzysztof Gromadzki", "email": "krzysztof.gromadzki@codilime.com", "username": "kgromadzki"}, {"value": 0, "_account_id": 31444, "name": "Micha\u0142 Kowieski", "email": "michal.kowieski@codilime.com", "username": "michal.kowieski"}, {"value": 0, "_account_id": 30962, "name": "Wiktor", "email": "wsleczka@juniper.net", "username": "wiktor.sleczka"}], "comments": {}}, "openstack%2Fcharm-tempest~master~I7f9b189f1d4a36e676d5db1614b5233f79ba8f03": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:32:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}], "comments": {}}, "openstack%2Fcharm-barbican-softhsm~master~I30078347a804d6bbdb672f2a9636055d7cbdf5a2": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:32:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}], "comments": {}}, "openstack%2Fcharm-manila-generic~master~I9748acc9b562c406d213fc12a3e85614b53b93fc": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 10:12:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 2, "date": "2020-03-25 13:33:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {"src/tests/basic_deployment.py": [{"author": {"_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, "change_message_id": "6ccafeb65a141958beb60fe872173d76ae6011af", "unresolved": false, "patch_set": 3, "id": "df33271e_de50c235", "line": 226, "updated": "2020-03-25 09:30:33.000000000", "message": "Shouldn't this take a capital D as well?", "commit_id": "d9f927ef93f5ad9cbef6f191969bd05050942f30"}, {"author": {"_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, "change_message_id": "b8d049bdc2bfdb931a2a5e36b25e808a25b4c5dd", "unresolved": false, "patch_set": 3, "id": "df33271e_9e047a19", "line": 226, "in_reply_to": "df33271e_de50c235", "updated": "2020-03-25 09:38:01.000000000", "message": "Yes, good point.\n\nTBH, the default domain will *always* exist, so the result of the code block will be to look up the already existing one.\n\nBut updating it for consistency would not hurt.", "commit_id": "d9f927ef93f5ad9cbef6f191969bd05050942f30"}]}}, "openstack%2Fcharm-tempest~master~I3e0f8a40c111aa837cc809c3ffd5e0d472118549": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:33:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}], "comments": {}}, "openstack%2Fcharm-barbican-softhsm~master~I8ac1e315f614bd5a820c6ff7f863406f632a56ee": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 09:13:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 2, "date": "2020-03-25 13:33:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}], "comments": {}}, "openstack%2Fkolla~master~I3e12ab51e9f01d383268d75ce72903686564ada6": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 12:51:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 4264, "name": "Matthias Runge", "email": "mrunge@redhat.com", "username": "mrunge"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-03-23 15:34:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-03-25 10:55:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "openstack%2Fcharm-octavia~master~Idc21ab05c20d63a9e6252b16a73cbf970ca770e7": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:32:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "airship%2Fairshipctl~master~Icc6b18b4694a17ab2f8e0bf1112e41a1d18a5b00": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 13:26:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-03-19 16:27:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"pkg/remote/redfish/errors.go": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "150253249f957cc97fa06dde1982c0a08d72255d", "unresolved": false, "patch_set": 2, "id": "1fa4df85_800702ca", "line": 34, "range": {"start_line": 34, "start_character": 21, "end_line": 34, "end_character": 38}, "updated": "2020-03-16 22:10:04.000000000", "message": "nit: I think this gives the impression that there is a configurable timeout value the user can set here. That doesn't appear to be the case.\n\nMore accurately, this might be: \"Maximum retries exceeded\"", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c5218e87e757652fc89cada8a84982f5f6b1783a", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b22fec86", "line": 34, "range": {"start_line": 34, "start_character": 21, "end_line": 34, "end_character": 38}, "in_reply_to": "1fa4df85_800702ca", "updated": "2020-03-17 09:51:20.000000000", "message": "Done", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}], "pkg/remote/redfish/utils.go": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "8752291236666d402191ad28cb7f711f2fe0b39e", "unresolved": false, "patch_set": 2, "id": "1fa4df85_6078c6f7", "line": 88, "updated": "2020-03-16 22:23:56.000000000", "message": "Why not use a c style for loop?\n\nfor retry := 0; retry < SystemActionRetries; retry++ {\n  // loop body\n}\n\nreturn ErrRedfishTimeout", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c5218e87e757652fc89cada8a84982f5f6b1783a", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d23f08b3", "line": 88, "in_reply_to": "1fa4df85_6078c6f7", "updated": "2020-03-17 09:51:20.000000000", "message": "Done. looks like I was a bit obsessed with 'early returns' concept :)", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "b534992beb7b08388164bfa1ff3617c39f76a9db", "unresolved": false, "patch_set": 9, "id": "1fa4df85_0d66b5c2", "line": 18, "range": {"start_line": 18, "start_character": 29, "end_line": 18, "end_character": 31}, "updated": "2020-03-19 14:11:04.000000000", "message": "Q: why was 30 chosen?", "commit_id": "2817df848266ba4ce6e9cab6d59c12cc3eeaa596"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "07694f44e2b23ebe457e08515cb70a4803857bd9", "unresolved": false, "patch_set": 9, "id": "1fa4df85_7cdd986e", "line": 18, "range": {"start_line": 18, "start_character": 29, "end_line": 18, "end_character": 31}, "in_reply_to": "1fa4df85_0d66b5c2", "updated": "2020-03-19 15:26:12.000000000", "message": "there was no particular reason... I think 60 seconds (30*2) should be enough to change node status otherwise I'd consider RedfhishAPI server has some issues. I'm open to any other value though :)", "commit_id": "2817df848266ba4ce6e9cab6d59c12cc3eeaa596"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "b534992beb7b08388164bfa1ff3617c39f76a9db", "unresolved": false, "patch_set": 9, "id": "1fa4df85_8d95c589", "line": 95, "range": {"start_line": 95, "start_character": 21, "end_line": 95, "end_character": 24}, "updated": "2020-03-19 14:11:04.000000000", "message": "capturing this error, but not doing anything with it.  perhaps _ is more appropriate, or if err != nil return it before continuing to line 96 logic", "commit_id": "2817df848266ba4ce6e9cab6d59c12cc3eeaa596"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "07694f44e2b23ebe457e08515cb70a4803857bd9", "unresolved": false, "patch_set": 9, "id": "1fa4df85_fc3748af", "line": 95, "range": {"start_line": 95, "start_character": 21, "end_line": 95, "end_character": 24}, "in_reply_to": "1fa4df85_8d95c589", "updated": "2020-03-19 15:26:12.000000000", "message": "> capturing this error, but not doing anything with it.  perhaps _ is\n > more appropriate, or if err != nil return it before continuing to\n > line 96 logic\n\nAs Ian mentioned 'err' is handled on line 96", "commit_id": "2817df848266ba4ce6e9cab6d59c12cc3eeaa596"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "728206e0e08b8698b7d23ebd317c2b6c2869fb61", "unresolved": false, "patch_set": 9, "id": "1fa4df85_8d7b8526", "line": 95, "range": {"start_line": 95, "start_character": 21, "end_line": 95, "end_character": 24}, "in_reply_to": "1fa4df85_8d95c589", "updated": "2020-03-19 14:17:55.000000000", "message": "err is being passed as an argument to ScreenRedfishError on line 96", "commit_id": "2817df848266ba4ce6e9cab6d59c12cc3eeaa596"}], "pkg/remote/redfish/utils_test.go": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "150253249f957cc97fa06dde1982c0a08d72255d", "unresolved": false, "patch_set": 2, "id": "1fa4df85_40026a71", "line": 193, "range": {"start_line": 193, "start_character": 5, "end_line": 193, "end_character": 53}, "updated": "2020-03-16 22:10:04.000000000", "message": "I think we could probably make this test case a little stricter. For instance, why can't we have the redfish mock return the incorrect power state without error for the number of reboot times and then check that the timeout error is returned?\n\nRight now, it's just asserting one call and not truly exercising the wait functionality.", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c5218e87e757652fc89cada8a84982f5f6b1783a", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d2e5c80b", "line": 193, "range": {"start_line": 193, "start_character": 5, "end_line": 193, "end_character": 53}, "in_reply_to": "1fa4df85_40026a71", "updated": "2020-03-17 09:51:20.000000000", "message": "> I think we could probably make this test case a little stricter.\n > For instance, why can't we have the redfish mock return the\n > incorrect power state without error for the number of reboot times\n > and then check that the timeout error is returned?\n\nNot quite sure that I'm getting the idea. Method Times  ensures that 'ResetSystem' is executed exactly one time and sets return value. RedfishError{} has to be returned since mock library fails to convert nil to interface in this case (looks like a bug...). Anyway RedfishError is not used in RebotSystem function. Therefore onetime execution of ResetSystem is expected.\n\n\n > Right now, it's just asserting one call and not truly exercising\n > the wait functionality.\n\nIt's not really fair statement. Since 'ResetSystem' does not return error 'waitForPowerState' is executed. 'GetSystem' method mock returns ComputerSystem object with power status field == nil which will lead to timeout", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "8ea19c21a360b737d66931ea2984ff4d49f3933c", "unresolved": false, "patch_set": 2, "id": "1fa4df85_ef6c9509", "line": 193, "range": {"start_line": 193, "start_character": 5, "end_line": 193, "end_character": 53}, "in_reply_to": "1fa4df85_d2e5c80b", "updated": "2020-03-17 16:59:10.000000000", "message": "Understood; I think I explained my suggestion poorly. I was advocating for exercising the retries, while referring to the \"wait\" functionality as encapsulating the whole function.\n\nThat is being done in the latest PS, and I think it looks great. Thanks for adding that in.", "commit_id": "d6276019544514827e9ecb5787245d73f8913f2a"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "6dcc6ba8387cc68e4a9c12e384ce34c419d2a87f", "unresolved": false, "patch_set": 4, "id": "1fa4df85_3f40a007", "line": 193, "range": {"start_line": 193, "start_character": 5, "end_line": 193, "end_character": 39}, "updated": "2020-03-17 13:49:31.000000000", "message": "on a second glance, this test isn't really very developer or gate friendly, since it takes a full minute to run.", "commit_id": "e850014df775fc877475cd159c308f2fb0a40b21"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "35e9faf8ac6947010df343fdbd839e583b5e5b5b", "unresolved": false, "patch_set": 4, "id": "1fa4df85_1af4d286", "line": 193, "range": {"start_line": 193, "start_character": 5, "end_line": 193, "end_character": 39}, "in_reply_to": "1fa4df85_3f40a007", "updated": "2020-03-17 14:16:13.000000000", "message": "fair enough", "commit_id": "e850014df775fc877475cd159c308f2fb0a40b21"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "6dcc6ba8387cc68e4a9c12e384ce34c419d2a87f", "unresolved": false, "patch_set": 4, "id": "1fa4df85_df706c0b", "line": 197, "range": {"start_line": 197, "start_character": 1, "end_line": 197, "end_character": 28}, "updated": "2020-03-17 13:49:31.000000000", "message": "A hack to fix the above issue would be to attach the number of retries to this context\n\n\n  ctx := context.WithValue(context.Background(), \"numRetries\", 0)\n\n\nthen in waitForPowerState, check if that key-value pair has been set on the context, and default to SystemActionRetries\n\n\n  totalRetries, ok := ctx.Value(\"numRetries\").(int)\n  if !ok {\n    totalRetries = SystemActionRetries\n  }\n\n  // for loop using totalRetries as the limit", "commit_id": "e850014df775fc877475cd159c308f2fb0a40b21"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "35e9faf8ac6947010df343fdbd839e583b5e5b5b", "unresolved": false, "patch_set": 4, "id": "1fa4df85_daeddab7", "line": 197, "range": {"start_line": 197, "start_character": 1, "end_line": 197, "end_character": 28}, "in_reply_to": "1fa4df85_df706c0b", "updated": "2020-03-17 14:16:13.000000000", "message": "Done. Nice trick!", "commit_id": "e850014df775fc877475cd159c308f2fb0a40b21"}]}}, "airship%2Fairshipctl~master~I31bb6beee96b0d65719b6976caac63e54c65dcd2": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-03-25 13:18:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 7321, "name": "Prakash Ramchandran", "email": "pramchan@yahoo.com", "username": "pramchan"}, {"value": 1, "date": "2020-03-24 21:57:50.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-03-24 19:30:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_75bc4705", "line": 10, "range": {"start_line": 9, "start_character": 0, "end_line": 10, "end_character": 10}, "updated": "2020-03-24 15:33:29.000000000", "message": "This change doesn't add this function anymore, please delete this", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_d536f3b4", "line": 11, "range": {"start_line": 11, "start_character": 10, "end_line": 11, "end_character": 15}, "updated": "2020-03-24 15:33:29.000000000", "message": "Field", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}], "pkg/document/bundle.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "648b59459792db3ca08e45003417f7909d5a4492", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_88f99b50", "line": 188, "range": {"start_line": 188, "start_character": 3, "end_line": 188, "end_character": 51}, "updated": "2020-01-31 19:46:55.000000000", "message": "does not read clearly", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c08960b1d4c8255a279331c6fbfe8005cc606829", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_9ec9c625", "line": 188, "range": {"start_line": 188, "start_character": 3, "end_line": 188, "end_character": 51}, "in_reply_to": "3fa7e38b_88f99b50", "updated": "2020-02-03 11:21:36.000000000", "message": "Done. Rephrased", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "648b59459792db3ca08e45003417f7909d5a4492", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_88d0bbc8", "line": 202, "range": {"start_line": 202, "start_character": 16, "end_line": 202, "end_character": 70}, "updated": "2020-01-31 19:46:55.000000000", "message": "where is the error returned in the event of a no field error?", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c08960b1d4c8255a279331c6fbfe8005cc606829", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5ed34ed5", "line": 202, "range": {"start_line": 202, "start_character": 16, "end_line": 202, "end_character": 70}, "in_reply_to": "3fa7e38b_88d0bbc8", "updated": "2020-02-03 11:21:36.000000000", "message": "Done. in case of NoFieldError we just need to skip the resource since it obviously does not match our filter", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_36806049", "line": 194, "range": {"start_line": 194, "start_character": 55, "end_line": 194, "end_character": 64}, "updated": "2020-02-12 14:56:29.000000000", "message": "resource", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_827f84ba", "line": 194, "range": {"start_line": 194, "start_character": 55, "end_line": 194, "end_character": 64}, "in_reply_to": "3fa7e38b_36806049", "updated": "2020-02-13 09:14:06.000000000", "message": "Done", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1679a47f", "line": 195, "range": {"start_line": 195, "start_character": 3, "end_line": 195, "end_character": 8}, "updated": "2020-02-12 14:56:29.000000000", "message": "Method", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7689f86d", "line": 195, "range": {"start_line": 195, "start_character": 68, "end_line": 195, "end_character": 73}, "updated": "2020-02-12 14:56:29.000000000", "message": "which field? The FilterByFieldValue?", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_228a50bc", "line": 195, "range": {"start_line": 195, "start_character": 3, "end_line": 195, "end_character": 8}, "in_reply_to": "3fa7e38b_1679a47f", "updated": "2020-02-13 09:14:06.000000000", "message": "Done", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_429e6cfa", "line": 195, "range": {"start_line": 195, "start_character": 68, "end_line": 195, "end_character": 73}, "in_reply_to": "3fa7e38b_7689f86d", "updated": "2020-02-13 09:14:06.000000000", "message": "Tried to rephrase and I've added usage example. I hope this make documentation cleaner...", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_16ee841f", "line": 196, "range": {"start_line": 196, "start_character": 29, "end_line": 196, "end_character": 49}, "updated": "2020-02-12 14:56:29.000000000", "message": ", and the comparison function", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_0262b415", "line": 196, "range": {"start_line": 196, "start_character": 29, "end_line": 196, "end_character": 49}, "in_reply_to": "3fa7e38b_16ee841f", "updated": "2020-02-13 09:14:06.000000000", "message": "Done", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_b6d8d07f", "line": 197, "range": {"start_line": 197, "start_character": 39, "end_line": 197, "end_character": 43}, "updated": "2020-02-12 14:56:29.000000000", "message": "comma needed after path", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a2640021", "line": 197, "range": {"start_line": 197, "start_character": 39, "end_line": 197, "end_character": 43}, "in_reply_to": "3fa7e38b_b6d8d07f", "updated": "2020-02-13 09:14:06.000000000", "message": "Done", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "9ac810e302cad2635e110ed0827a006801601eca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f6de480d", "line": 213, "range": {"start_line": 211, "start_character": 0, "end_line": 213, "end_character": 3}, "updated": "2020-02-12 14:56:29.000000000", "message": "I noticed this could be simplified by inverting the checks in this method.\n\nThis conditional is reached when there is no error or the error is a NoFieldError. If this block only exists to skip the conditional on L215 in the event that there is another error, why not remove this and just verify if there was an error at all on L215?\n\nOr, check if there was an error immediately, and append the resource if false. Otherwise, handle the error based on its type.", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "b2ac1690d3db2d319d657381a8a80aa7c23aa673", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_4273cce5", "line": 213, "range": {"start_line": 211, "start_character": 0, "end_line": 213, "end_character": 3}, "in_reply_to": "3fa7e38b_f6de480d", "updated": "2020-02-13 09:14:06.000000000", "message": "Done", "commit_id": "3747bfdd51929073351023eefbaf7f652b40ba63"}, {"author": {"_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, "change_message_id": "b4d30fd44f2176ee22ce3a29e3539544ef1d6b28", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_b882d34f", "line": 55, "updated": "2020-02-14 17:56:29.000000000", "message": "Just a thought: I know the interface makes the return type clear (Bundle vs []Document), but I am wondering if we want to avoid confusion with naming these appropriately and preparing for future methods.  For instance, CloneWithFilter(..), and CloneWithFilterByFieldValue(...) to make room for future functions that may augment the bundle document set in-place, such as PruneFilter(...).  As it stands, its a little confusing when you look at Select(..) vs Filter(..).  One applies the filter to the current bundle and returns the matching document, one returns a new bundle but the naming is ambiguous. Probably they should even align where input types are the same, e.g. CloneWithSelect(..) or rename them both use the word filter.", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "1a762ab84f14f6628cda540f687f140e5189c831", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_5892adae", "line": 55, "in_reply_to": "3fa7e38b_67ceecb7", "updated": "2020-02-17 14:46:51.000000000", "message": "Something like https://review.opendev.org/#/c/708132/", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "296a8b2a89f90e44ec17a3a3ffe095ade269de6b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_67ceecb7", "line": 55, "in_reply_to": "3fa7e38b_b882d34f", "updated": "2020-02-17 11:24:36.000000000", "message": "This makes sense but I think we should update all methods to return Bundle instead of []Document. Therefore  we can use something like\n\nb.GetByAnnotation().GetAllDocuments()\n\nWhat do you think?", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "47e7e2e47080e37af2ec9832588fde8ec814475c", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_acb7fcf7", "line": 197, "range": {"start_line": 197, "start_character": 34, "end_line": 197, "end_character": 44}, "updated": "2020-02-14 15:34:12.000000000", "message": "nit: JSON path,", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "db6b4699144a0ca5a0ff5ffa58a7ab59761066d1", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_0a4e1f6d", "line": 197, "range": {"start_line": 197, "start_character": 34, "end_line": 197, "end_character": 44}, "in_reply_to": "3fa7e38b_acb7fcf7", "updated": "2020-02-17 12:36:54.000000000", "message": "Done", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fe2837f5163de9055c2e5d3da80902b3a2b70b41", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_4cdd283d", "line": 199, "updated": "2020-02-14 15:31:35.000000000", "message": "Maybe we can consider doing our examples similar to this method? https://godoc.org/github.com/fluhus/godoc-tricks#Examples", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "296a8b2a89f90e44ec17a3a3ffe095ade269de6b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_c741e00b", "line": 199, "in_reply_to": "3fa7e38b_4cdd283d", "updated": "2020-02-17 11:24:36.000000000", "message": "This is good idea but im not sure it's going to be really representative for this particular case", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "47e7e2e47080e37af2ec9832588fde8ec814475c", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_ccba78de", "line": 228, "range": {"start_line": 228, "start_character": 37, "end_line": 228, "end_character": 47}, "updated": "2020-02-14 15:34:12.000000000", "message": "nit: containing", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "47e7e2e47080e37af2ec9832588fde8ec814475c", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_ecc0944d", "line": 228, "range": {"start_line": 228, "start_character": 50, "end_line": 228, "end_character": 58}, "updated": "2020-02-14 15:34:12.000000000", "message": "nit: documents", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fe2837f5163de9055c2e5d3da80902b3a2b70b41", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_31ffe335", "line": 228, "range": {"start_line": 228, "start_character": 37, "end_line": 228, "end_character": 58}, "updated": "2020-02-14 15:31:35.000000000", "message": "typo", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "db6b4699144a0ca5a0ff5ffa58a7ab59761066d1", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_ea34e3d9", "line": 228, "range": {"start_line": 228, "start_character": 37, "end_line": 228, "end_character": 58}, "in_reply_to": "3fa7e38b_31ffe335", "updated": "2020-02-17 12:36:54.000000000", "message": "Done", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "db6b4699144a0ca5a0ff5ffa58a7ab59761066d1", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_ca37a7dc", "line": 228, "range": {"start_line": 228, "start_character": 37, "end_line": 228, "end_character": 47}, "in_reply_to": "3fa7e38b_ccba78de", "updated": "2020-02-17 12:36:54.000000000", "message": "Done", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "db6b4699144a0ca5a0ff5ffa58a7ab59761066d1", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_2a53db17", "line": 228, "range": {"start_line": 228, "start_character": 50, "end_line": 228, "end_character": 58}, "in_reply_to": "3fa7e38b_ecc0944d", "updated": "2020-02-17 12:36:54.000000000", "message": "Done", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "47e7e2e47080e37af2ec9832588fde8ec814475c", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_0c42d093", "line": 254, "range": {"start_line": 254, "start_character": 10, "end_line": 254, "end_character": 11}, "updated": "2020-02-14 15:34:12.000000000", "message": "==", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "296a8b2a89f90e44ec17a3a3ffe095ade269de6b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_0738589c", "line": 254, "range": {"start_line": 254, "start_character": 10, "end_line": 254, "end_character": 11}, "in_reply_to": "3fa7e38b_0c42d093", "updated": "2020-02-17 11:24:36.000000000", "message": "no. this is var assignment. the actual condition is err != nil", "commit_id": "a68f84512a7347cd17baaa1208f9bed1cd3cb1c8"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_d55f13e3", "line": 226, "range": {"start_line": 226, "start_character": 31, "end_line": 226, "end_character": 49}, "updated": "2020-03-24 15:33:29.000000000", "message": "GetByFieldValue", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_10b229e7", "line": 262, "range": {"start_line": 253, "start_character": 0, "end_line": 262, "end_character": 3}, "updated": "2020-03-24 15:33:29.000000000", "message": "This flow is confusing. Perhaps the following is more clear:\n\n  val, err := res.GetFieldCalue(path)\n  if err != nil {\n    if errors.As(err, &types.NoFieldError{}) {\n      // this resource doesn't have the specified field - skip it\n      continue\n    } else {\n      return err\n    }\n  }\n\n  if condition(val) {\n    if err = resourceMap.Append(res); err != nil {\n      return nil, err\n    }\n  }\n\nAlso note that there's no need to provide Attributes for the NoFieldError", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}], "pkg/document/bundle_test.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "648b59459792db3ca08e45003417f7909d5a4492", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_48f3a36e", "line": 99, "range": {"start_line": 99, "start_character": 44, "end_line": 99, "end_character": 54}, "updated": "2020-01-31 19:46:55.000000000", "message": "referenced", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "c08960b1d4c8255a279331c6fbfe8005cc606829", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_feed5a8d", "line": 99, "range": {"start_line": 99, "start_character": 44, "end_line": 99, "end_character": 54}, "in_reply_to": "3fa7e38b_48f3a36e", "updated": "2020-02-03 11:21:36.000000000", "message": "Done", "commit_id": "f159210efee7374b49fa3c67bb3deb1d73df0551"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_b00a5d87", "line": 87, "updated": "2020-03-24 15:33:29.000000000", "message": "This test could be improved by verifying that the selected document matches the expected, e.g.\n\n  assert.Equal(t, docs[0].GetKind(), \"BareMetalHost\")\n  assert.Equal(t, docs[0].GetName(), \"master-1\")", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "f4b37c8a72545413df3efd80facd8ec06c93ea07", "unresolved": false, "patch_set": 14, "id": "df33271e_30cdad5d", "line": 94, "range": {"start_line": 94, "start_character": 20, "end_line": 94, "end_character": 71}, "updated": "2020-03-24 15:33:29.000000000", "message": "Redundant - testify will already handle error output", "commit_id": "76678378a0099afe927203e58e6261e66f9cf450"}]}}, "openstack%2Fvalidations-common~master~I6883f718aa3bbc1297a59bdece28ab57993fa459": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:37:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-03-25 13:08:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {}}, "zuul%2Fnodepool~master~Iefbd40ef8f2a2dee84d232de355e369788f0ab2d": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:39:43.000000000", "_account_id": 3099, "name": "David Shrewsbury", "email": "dshrewsb@redhat.com", "username": "dshrews"}, {"value": 2, "date": "2020-03-24 23:24:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-24 23:04:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftrove~master~Idc454000ce7ad95d2c461c87867704eba069bdf4": {"owner_id": 8037, "owner_name": "renminmin", "owner_email": "rmm0811@gmail.com", "labels": [{"value": 2, "date": "2020-03-25 10:29:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8037, "name": "renminmin", "email": "rmm0811@gmail.com", "username": "renminmin"}, {"value": 0, "_account_id": 28695, "name": "Bartosz Zurkowski", "email": "b.zurkowski@samsung.com", "username": "b.zurkowski"}], "comments": {"trove/guestagent/volume.py": [{"author": {"_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, "change_message_id": "e684f1f84db5017141d50778acd69d5cfdce2989", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_a2c5950c", "line": 176, "range": {"start_line": 174, "start_character": 0, "end_line": 176, "end_character": 22}, "updated": "2019-10-02 21:11:47.000000000", "message": "Because there is a new file system type supported, could you please also add the 'choices' attribute for this option[1].\n\n[1]: https://github.com/openstack/trove/blob/cdac6278aff0ad564a881d16368bbdf9be732b99/trove/common/cfg.py#L205", "commit_id": "dbdcca9a01aeac949cbda63bc6888fa203a6bd4c"}, {"author": {"_account_id": 8037, "name": "renminmin", "email": "rmm0811@gmail.com", "username": "renminmin"}, "change_message_id": "685ae0f4b6a8770395e4d1ebed960d772bca768c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8f66a850", "line": 176, "range": {"start_line": 174, "start_character": 0, "end_line": 176, "end_character": 22}, "in_reply_to": "3fa7e38b_a2c5950c", "updated": "2019-10-17 03:03:45.000000000", "message": "Done", "commit_id": "dbdcca9a01aeac949cbda63bc6888fa203a6bd4c"}, {"author": {"_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, "change_message_id": "e684f1f84db5017141d50778acd69d5cfdce2989", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_429e2155", "line": 182, "range": {"start_line": 182, "start_character": 4, "end_line": 182, "end_character": 14}, "updated": "2019-10-02 21:11:47.000000000", "message": "Does this need to be a class variable? How about just define `self.volume_fs` for the object?", "commit_id": "dbdcca9a01aeac949cbda63bc6888fa203a6bd4c"}, {"author": {"_account_id": 8037, "name": "renminmin", "email": "rmm0811@gmail.com", "username": "renminmin"}, "change_message_id": "685ae0f4b6a8770395e4d1ebed960d772bca768c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_ef563c5c", "line": 182, "range": {"start_line": 182, "start_character": 4, "end_line": 182, "end_character": 14}, "in_reply_to": "3fa7e38b_429e2155", "updated": "2019-10-17 03:03:45.000000000", "message": "Done", "commit_id": "dbdcca9a01aeac949cbda63bc6888fa203a6bd4c"}]}}, "x%2Fvmware-nsx~master~I5025dbc881d5849c835d1e69d6025b700aeeb937": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:05:07.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Frally~master~I7b4777fa502f2b9da5770d67947357a02b5f1ad0": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:41:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "starlingx%2Fclients~master~I9b88ad91ee873330a0fd62ec7eb6056dd544a758": {"owner_id": 28707, "owner_name": "Stefan Dinescu", "owner_email": "stefan.dinescu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-03-25 12:40:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 2, "date": "2020-03-25 12:55:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {}}, "openstack%2Freleases~master~If8fc837bc131805041f1e250089cb8a565a13312": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:43:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "starlingx%2Foidc-auth-armada-app~master~I70637996c6f1bd8ee5783febb629c363d92c7c91": {"owner_id": 28675, "owner_name": "Teresa Ho", "owner_email": "teresa.ho@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 12:38:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 1, "date": "2020-03-25 12:31:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~Ifdca5df15d27a938c7b69d8aa4426182d7c200c8": {"owner_id": 9003, "owner_name": "Tom Barron", "owner_email": "tpb@dyncloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30998, "name": "Andre Luiz Beltrami Rocha", "display_name": "Andre Beltrami", "email": "debeltrami@gmail.com", "username": "andrebeltrami"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~I8af2ad741ca08c3d88efb9aa817c4d1470491a23": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-25 09:41:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 2, "date": "2020-03-24 21:55:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "x%2Fvmware-nsx~stable%2Fstein~I1150dc5336032c006e21ee91833f8949480abd4a": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 11:31:32.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ci~master~I1e62cc755fa60e453dea865f436241ecae330771": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, {"value": 2, "date": "2020-03-25 09:19:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "372fb45458389013515e339a517d7e859c489ba2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f4dbafe7", "line": 7, "range": {"start_line": 7, "start_character": 13, "end_line": 7, "end_character": 18}, "updated": "2020-01-24 07:47:10.000000000", "message": "hold on this is an *auto* formatter? so it will pre-commit hook edit my stuffs for me?\n\nmaybe add a link to https://black.readthedocs.io/en/stable/ here", "commit_id": "8b24b6bde4f5ef1325b2871ddeb7ceb3fba2a4ec"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "372fb45458389013515e339a517d7e859c489ba2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_94cd9b30", "line": 10, "range": {"start_line": 10, "start_character": 11, "end_line": 10, "end_character": 18}, "updated": "2020-01-24 07:47:10.000000000", "message": "humands are srsly unreliable, it is known.", "commit_id": "8b24b6bde4f5ef1325b2871ddeb7ceb3fba2a4ec"}], "scripts/emit_releases_file/emit_releases_file.py": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "372fb45458389013515e339a517d7e859c489ba2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_34ff0736", "line": 162, "updated": "2020-01-24 07:47:10.000000000", "message": "on the one hand getting pep8 happy is kind of annoying on python (even though it is always a better looking as result than what you started with). This takes it further, by being even *more* strict.\n\nThe 'saving' grace is, assuming I understood correctly, black will do it/make the changes for you? But then that in itself is a bit weird for me. Conflicted. :/", "commit_id": "8b24b6bde4f5ef1325b2871ddeb7ceb3fba2a4ec"}], "scripts/move_bugs/move_bugs.py": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "e9e5a6f237ad536eeca160456712757637ed1c98", "unresolved": false, "patch_set": 9, "id": "df33271e_c3bf4bf9", "updated": "2020-03-25 07:24:21.000000000", "message": "i see you added more files since my last visit at v5 like this one\n\nquestion is why was black passing before but now it needs this change too?", "commit_id": "f78da2885a43968b9f9f0dd3d5e787078654e865"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "4f121ab4352fdb5f70ba93434b6063925ab8b1c3", "unresolved": false, "patch_set": 9, "id": "df33271e_de660252", "in_reply_to": "df33271e_c3bf4bf9", "updated": "2020-03-25 09:16:57.000000000", "message": "I did not add anything, all changes are done automatically by the linter. Things changes because files where adder or modified between the reviews.\n\nChanges like this need to be reviewed and merged quickly to avoid rework.", "commit_id": "f78da2885a43968b9f9f0dd3d5e787078654e865"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "ae701c26e0a6983b99611c4e6ad44e2006429e01", "unresolved": false, "patch_set": 9, "id": "df33271e_3ed1eece", "in_reply_to": "df33271e_de660252", "updated": "2020-03-25 09:19:29.000000000", "message": "ack thanks for explaining", "commit_id": "f78da2885a43968b9f9f0dd3d5e787078654e865"}]}}, "airship%2Fairshipctl~master~Ie4c9421b9c4b3fe44e20a843f7a3b6551c5a7e6d": {"owner_id": 17583, "owner_name": "Pavel Basov", "owner_email": "pbasov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 17583, "name": "Pavel Basov", "email": "pbasov@mirantis.com", "username": "basov"}, {"value": 1, "date": "2020-03-24 20:24:23.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 30847, "name": "Nikolay Fedorov", "email": "nfedorov@mirantis.com", "username": "nfedorov"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-03-25 12:07:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-03-25 07:33:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "29a9b4d3f165b3167f8ff95b20bd18b6261230a7", "unresolved": false, "patch_set": 1, "id": "df33271e_30248d0d", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 7}, "updated": "2020-03-24 15:43:16.000000000", "message": "Remove this. Closes: is enough", "commit_id": "8242608a6c0096f6af74886badfb19aa653d5687"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "16d32313d1249e2a4a664682a83ca4badaa45a30", "unresolved": false, "patch_set": 1, "id": "df33271e_f0d505bb", "line": 12, "range": {"start_line": 10, "start_character": 0, "end_line": 12, "end_character": 22}, "updated": "2020-03-24 15:42:46.000000000", "message": "These changes are unrelated to #125, please create new issues/changes for them", "commit_id": "8242608a6c0096f6af74886badfb19aa653d5687"}], "pkg/document/selectors.go": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "16d32313d1249e2a4a664682a83ca4badaa45a30", "unresolved": false, "patch_set": 1, "id": "df33271e_f0606535", "side": "PARENT", "line": 102, "range": {"start_line": 102, "start_character": 3, "end_line": 102, "end_character": 24}, "updated": "2020-03-24 15:42:46.000000000", "message": "Go documentation should begin with the name of the thing being documented. Please add this back in", "commit_id": "c803763c2f7629996360604878c007ef9c9c4811"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "29a9b4d3f165b3167f8ff95b20bd18b6261230a7", "unresolved": false, "patch_set": 1, "id": "df33271e_3052cd68", "line": 102, "range": {"start_line": 102, "start_character": 0, "end_line": 102, "end_character": 75}, "updated": "2020-03-24 15:43:16.000000000", "message": "function name should be in the beginning of a doc string i.e\n// NewInintInfraSelector returns ....", "commit_id": "8242608a6c0096f6af74886badfb19aa653d5687"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "be74d7d175cc2373524e8047da38ad1f60923b4a", "unresolved": false, "patch_set": 3, "id": "df33271e_ba1eb3b7", "line": 102, "range": {"start_line": 102, "start_character": 42, "end_line": 102, "end_character": 59}, "updated": "2020-03-24 20:24:23.000000000", "message": "nit: this selector still returns all documents marked with the initinfra selector. We are relying on the document set to have the correct selector rather than doing any additional filtering.", "commit_id": "af90464e668cfcb775aa0ccddcf4035b20a1957b"}], "pkg/k8s/client/client.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "29a9b4d3f165b3167f8ff95b20bd18b6261230a7", "unresolved": false, "patch_set": 1, "id": "df33271e_d0bd6169", "line": 15, "range": {"start_line": 14, "start_character": 0, "end_line": 15, "end_character": 21}, "updated": "2020-03-24 15:43:16.000000000", "message": "nit: adjust comment to reflect that it's subdirectory of airship configuration dir", "commit_id": "8242608a6c0096f6af74886badfb19aa653d5687"}]}}, "openstack%2Foslo.cache~master~Iadad6d2d4643412e4d846a05c3e3eb4a3deecb84": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 18:04:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-03-24 18:04:21.000000000", "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-03-24 18:04:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, "change_message_id": "45abe4916217dcb3a14c22b1290ebe72c05adaf3", "unresolved": false, "patch_set": 7, "id": "1fa4df85_83e7a8ac", "line": 4, "updated": "2020-03-05 16:14:28.000000000", "message": "I assume once we fix this we'll switch it to voting?", "commit_id": "76d14a79bc7a4530b0860241632218212e2c6fc3"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "9b25acb735432e17da4019bb044be7e1dcacdbf9", "unresolved": false, "patch_set": 7, "id": "1fa4df85_32263bd0", "line": 4, "in_reply_to": "1fa4df85_5ece6382", "updated": "2020-03-05 18:04:20.000000000", "message": "Then also to gate.\n\nI did not bother because it adds to gating time and is not thorough enough to justify - it catches the current total break but: since memcached is not critical by itself, services (actually only keystone and nova) might continue to work despite not using memcached (properly).\n\nI believe you generally need more functional testing rather than full tempest.", "commit_id": "76d14a79bc7a4530b0860241632218212e2c6fc3"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "f5d790b16ac78f4b6ba8af90c85af5ddcee20638", "unresolved": false, "patch_set": 7, "id": "1fa4df85_5ece6382", "line": 4, "in_reply_to": "1fa4df85_83e7a8ac", "updated": "2020-03-05 16:44:32.000000000", "message": "Indeed it could be worth", "commit_id": "76d14a79bc7a4530b0860241632218212e2c6fc3"}]}}, "x%2Fvmware-nsx~stable%2Ftrain~I1150dc5336032c006e21ee91833f8949480abd4a": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 11:28:55.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.cache~master~Ia3b8d42435b0eac1c87b866449b08a1d11818986": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-25 10:57:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-25 09:57:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 29222, "name": "Natal Ng\u00e9tal", "email": "hobbestigrou@erakis.eu", "username": "hobbestigrou"}, {"value": 2, "date": "2020-03-24 19:44:54.000000000", "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 8770, "name": "Ken Giusti", "email": "kgiusti@gmail.com", "username": "kgiusti"}, {"value": 0, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 0, "_account_id": 7730, "name": "Sahid Orentino Ferdjaoui", "email": "sahid.ferdjaoui@industrialdiscipline.com", "username": "sahid"}], "comments": {"releasenotes/notes/fix-memcache-pool-backend-b9e6aaab08075d68.yaml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "2be6e5ba30114ee9bc8431ebfea7017c819a05a2", "unresolved": false, "patch_set": 2, "id": "1fa4df85_8bebff10", "line": 5, "range": {"start_line": 5, "start_character": 22, "end_line": 5, "end_character": 24}, "updated": "2020-03-10 17:25:39.000000000", "message": "We", "commit_id": "81936ad148d7186285d3b98ebddcf3b298d84464"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "2be6e5ba30114ee9bc8431ebfea7017c819a05a2", "unresolved": false, "patch_set": 2, "id": "1fa4df85_6bf483f1", "line": 5, "range": {"start_line": 5, "start_character": 63, "end_line": 5, "end_character": 68}, "updated": "2020-03-10 17:25:39.000000000", "message": "based on", "commit_id": "81936ad148d7186285d3b98ebddcf3b298d84464"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "2be6e5ba30114ee9bc8431ebfea7017c819a05a2", "unresolved": false, "patch_set": 2, "id": "1fa4df85_ebdf1363", "line": 7, "range": {"start_line": 5, "start_character": 22, "end_line": 7, "end_character": 18}, "updated": "2020-03-10 17:25:39.000000000", "message": "Not sure if this must be a part of \"fixes\" reno. ;-)", "commit_id": "81936ad148d7186285d3b98ebddcf3b298d84464"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "784da23eb036c9dfb316cc9608f71ee205f534d1", "unresolved": false, "patch_set": 2, "id": "1fa4df85_0bfcef6d", "line": 7, "range": {"start_line": 5, "start_character": 22, "end_line": 7, "end_character": 18}, "in_reply_to": "1fa4df85_0be94fe4", "updated": "2020-03-10 17:39:54.000000000", "message": "Ah, I was misunderstood - I meant that describing the future (as in the highlighted sentence) does not really belong to \"fixing\".", "commit_id": "81936ad148d7186285d3b98ebddcf3b298d84464"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "045c4c1bf49f216882f86e2a8721dbd1a1fc05da", "unresolved": false, "patch_set": 2, "id": "1fa4df85_0be94fe4", "line": 7, "range": {"start_line": 5, "start_character": 22, "end_line": 7, "end_character": 18}, "in_reply_to": "1fa4df85_ebdf1363", "updated": "2020-03-10 17:32:01.000000000", "message": "I was not sure too... we don't purely fix something, but semantically  it \"fix\" something so IMO it looks like the more appropriate section...  \n\nI hesitated to choose \"other\", let's wait for other feeback about the section to use and I will update that if needed.", "commit_id": "81936ad148d7186285d3b98ebddcf3b298d84464"}]}}, "openstack%2Fneutron~master~Ibaec2043a45c52cffba0a5ca376eaa453e62df5a": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-23 23:26:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 2, "date": "2020-03-19 10:41:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-03-24 15:50:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~Ib4f1cfe12bbd1172dcf2b413332f9a1e7fb0d1b0": {"owner_id": 10459, "owner_name": "Luigi Toscano", "owner_email": "ltoscano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-24 15:39:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:39:09.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "zuul%2Fzuul~master~I13122701cb4ec3d15037ae1bf2d8354d61eb40b9": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": -1, "date": "2020-01-17 15:49:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"web/public/zuul-schema.json": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "92c2d2714141867ca88325ae39f3faac6a0174ab", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cf4e7c8f", "updated": "2020-01-17 15:49:46.000000000", "message": "Would it be possible to generate this automatically from the voluptuous validation?  Otherwise, it is very likely to get out of sync.", "commit_id": "2126306602cb412c3567470b3eb1547168701be2"}, {"author": {"_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, "change_message_id": "09f3d966abcaa76c480d9d07084c39a4df219cee", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_457fc468", "in_reply_to": "3fa7e38b_cf4e7c8f", "updated": "2020-01-18 12:03:36.000000000", "message": "Looks like the voluptuous devs rejected this idea [1].\n\nThe alternative they proposed [2] however doesn't really seem to fit our use case as we only have a schema and not a full json data tree from which we could generate the schema. Generating using genson would likely get out of sync as well :(\n\nAn alternative might be to create our own tooling that generates this from the zuul source.\n\n[1] https://github.com/alecthomas/voluptuous/issues/181\n[2] https://pypi.org/project/genson/", "commit_id": "2126306602cb412c3567470b3eb1547168701be2"}]}}, "openstack%2Frequirements~master~I64a50de50f16022cf836de2fbcb3481c038a16d4": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-11 13:11:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": -2, "date": "2020-03-14 16:18:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"global-requirements.txt": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "9e679faa4bcebd812872418918f104003fced2be", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_322cb7fe", "line": 443, "range": {"start_line": 443, "start_character": 4, "end_line": 443, "end_character": 9}, "updated": "2020-02-16 15:48:15.000000000", "message": "I think this can be removed, right? Any version of mox3 should work with python >= 3.6, it only needs to be capped with anything less than that.", "commit_id": "3a4d4985d2a89caf2d9d7cb3edabae1fa8402a7c"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "b672baaccdf7d3d01030becc66ae5d0cf5825557", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_12565b2c", "line": 443, "updated": "2020-02-16 17:24:44.000000000", "message": "ya, should be the same as before, just with the python specifier", "commit_id": "3a4d4985d2a89caf2d9d7cb3edabae1fa8402a7c"}]}}, "openstack%2Fproject-config~master~I86774a954db4d858976c2b155a9cf2c9099486fc": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-10 09:49:50.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-02-10 09:55:53.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"accessbot/channels.yaml": [{"author": {"_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, "change_message_id": "56e241131f7f4e42a09fbd030f18d516fe759a64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6012c000", "line": 133, "updated": "2020-02-10 09:49:50.000000000", "message": "I believe is chkumar", "commit_id": "770f7db06bd17a7041e9754450e680b26e3757ac"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "3bdd6a3f8cdcf7ce4f2ec62f0f813f35aa61a4e0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b048032b", "line": 133, "in_reply_to": "3fa7e38b_6012c000", "updated": "2020-02-10 12:12:48.000000000", "message": "If you check what irc reports, is reports this account name but I will let him confirm/infirm. What you see in roster is not the account list, is nick list.", "commit_id": "770f7db06bd17a7041e9754450e680b26e3757ac"}, {"author": {"_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, "change_message_id": "56e241131f7f4e42a09fbd030f18d516fe759a64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_20ce088f", "line": 134, "updated": "2020-02-10 09:49:50.000000000", "message": "So, panda or gabriele?", "commit_id": "770f7db06bd17a7041e9754450e680b26e3757ac"}]}}, "zuul%2Fzuul-website~master~Ia5d7dfd84889f4a1ba8a405c8fa7a4f5638fc198": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": -2, "date": "2020-01-28 19:48:06.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Iebde955de8f51696cedb30623ad24cb81c0987a5": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-02-02 09:58:40.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 1, "date": "2020-02-03 08:56:43.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": -2, "date": "2020-02-02 11:23:42.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-02 09:58:40.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}], "comments": {}}, "openstack%2Fhorizon~master~Id17ffca6b5e24779433c3f19d009bb2a77f7b901": {"owner_id": 26546, "owner_name": "Marek Ly\u010dka", "owner_email": "marek.lycka@ultimum.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-09-25 02:45:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11880, "name": "Gloria Gu", "email": "gloriafanggu@gmail.com", "username": "gugl"}, {"value": 2, "date": "2019-10-25 10:11:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2019-10-29 13:57:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": -1, "date": "2019-10-29 07:48:53.000000000", "permitted_voting_range": {"min": -1, "max": 2}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}, "change_message_id": "444230cdf6425a94654b5f802cbe73b3a8b69e54", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4c7ed3e3", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 10}, "updated": "2019-10-29 07:48:53.000000000", "message": "nit:\ntypo: it needs to be 'Closes-Bug'", "commit_id": "a11aa7ff62c15d7bf15367106f933ef0ae5d4521"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "ee1fa765a21447d6e04de644fe7fd84afc8f948f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a24f4b33", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 10}, "in_reply_to": "3fa7e38b_4c7ed3e3", "updated": "2019-10-29 13:57:32.000000000", "message": "The lower-case works to link it to the launchpad, so I don't think it is blocking.", "commit_id": "a11aa7ff62c15d7bf15367106f933ef0ae5d4521"}]}}, "starlingx%2Fgovernance~master~I7be99a45f919c72649d67b97894ea8a7401b8ec7": {"owner_id": 970, "owner_name": "Dean Troyer", "owner_email": "dtroyer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 14:26:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 1, "date": "2020-03-18 14:18:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16986, "name": "Shuquan Huang", "email": "huang.shuquan@99cloud.net", "username": "shuquan"}, {"value": 0, "_account_id": 9562, "name": "Ildiko Vancsa", "email": "ildiko.vancsa@gmail.com", "username": "ildikov"}, {"value": 1, "date": "2020-03-18 13:08:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9557, "name": "Ian Jolliffe", "email": "ian.jolliffe@windriver.com", "username": "ijolliffe"}, {"value": 1, "date": "2020-03-18 14:19:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Freleases~master~I82e966b10f94905ca8a36c0575061ddb54708ca1": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-25 10:42:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 22:04:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {"deliverables/ussuri/python-openstackclient.yaml": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "318fddf5d37c4462e0d248d2d2ad4a3497f01974", "unresolved": false, "patch_set": 1, "id": "df33271e_59004c35", "line": 5, "range": {"start_line": 5, "start_character": 6, "end_line": 5, "end_character": 21}, "updated": "2020-03-25 10:42:40.000000000", "message": "shouldn't we update this nowadays? I will submit a patch, and mordred can review it.", "commit_id": "640e0618dba9e70f196755b9e379ddea0ba4dca5"}]}}, "openstack%2Fironic-python-agent~master~If41b4270ab8fb1626979ca17134764e088e3cb65": {"owner_id": 11292, "owner_name": "Arne Wiebalck", "owner_email": "Arne.Wiebalck@cern.ch", "labels": [{"value": 0, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-25 10:33:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-24 09:46:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-03-23 20:08:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~I9e153f86c81ed6d9f8d9682b66d6d5c7f7b25296": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 1, "date": "2020-03-24 18:18:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 18:18:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 1, "date": "2020-03-24 18:18:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-03-24 18:18:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 2, "date": "2020-03-24 18:18:12.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Freleases~master~If9eedc7fd3881c46bfd77d2f87339157c371995d": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 10:22:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {"deliverables/ussuri/horizon.yaml": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "9ee6237991dc1815af5b77637edcde4c4fb02f5c", "unresolved": false, "patch_set": 1, "id": "df33271e_ad47964b", "line": 25, "updated": "2020-03-25 04:53:35.000000000", "message": "I bumped the minor version as it includes a requirement change.", "commit_id": "4f1b99a8984f45ec5b8605fd02588816a90b863c"}]}}, "openstack%2Ftripleo-quickstart-extras~master~I21b52acfd96c0c22aabaaae3cc5822270e307666": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-03-05 18:44:26.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": -1, "date": "2020-03-04 16:48:44.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}], "comments": {"roles/build-images/templates/overcloud-image-build.sh.j2": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "676b23cb798421332efea93495531b46de491e84", "unresolved": false, "patch_set": 2, "id": "1fa4df85_f43d14dd", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 61}, "updated": "2020-03-04 01:33:27.000000000", "message": "given this is being processed by a playbook / role, why not just use the `package` module as a task prior to rendering this template?", "commit_id": "1c6ccaa88e4f20a01a2d23725df5bb1a76a3abf0"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "3d52d32c03b84c38e8ed52856bb5989df9268d54", "unresolved": false, "patch_set": 2, "id": "1fa4df85_dd6b541b", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 61}, "in_reply_to": "1fa4df85_f43d14dd", "updated": "2020-03-04 12:16:32.000000000", "message": "It's supposed to be a \"standalone\" script for building images, so that when it's generated on the host it can be used as is.\nBut most likely we'll get rid off it soon..", "commit_id": "1c6ccaa88e4f20a01a2d23725df5bb1a76a3abf0"}]}}, "openstack%2Ftripleo-ansible~master~I56714c4a8723fe740191cb8cfbef9b802e55c391": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Frocky~I50ea0ba97c79f9c1509e382643b9aecc805862b7": {"owner_id": 30004, "owner_name": "Yedhu Sastri", "owner_email": "yedhusastri@gmail.com", "labels": [{"value": 2, "date": "2020-03-24 15:18:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-02 17:38:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 30004, "name": "Yedhu Sastri", "email": "yedhusastri@gmail.com", "username": "ysastri"}, {"value": 1, "date": "2020-02-19 15:34:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25591, "name": "Chenjun Shen", "email": "chenjun.shen@gmail.com", "username": "cshen"}, {"value": 0, "_account_id": 13095, "name": "Marc Gari\u00e9py", "email": "gariepy.marc@gmail.com", "username": "mgariepy"}, {"value": 1, "date": "2020-03-02 21:15:18.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}], "comments": {}}, "x%2Fnetworking-opencontrail~stable%2Ftrain~I60643011ea46fe9034256ef37e04f23c7b0f1c96": {"owner_id": 30962, "owner_name": "Wiktor", "owner_email": "wsleczka@juniper.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "d26045e86a0f0057f6300e1e08235bc6c448470f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d37da570", "line": 167, "range": {"start_line": 44, "start_character": 2, "end_line": 167, "end_character": 0}, "updated": "2020-02-07 11:10:36.000000000", "message": "Job devstack-tempest-train not defined", "commit_id": "6b1d890ae8b4fee5363208118c6f34ecc0058560"}]}}, "openstack%2Fkuryr-kubernetes~master~Ibf793b78727da40283b6221c6df0da969bf5e829": {"owner_id": 24604, "owner_name": "Danil Golov", "owner_email": "d.golov@samsung.com", "labels": [{"value": 1, "date": "2020-03-25 07:05:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24604, "name": "Danil Golov", "email": "d.golov@samsung.com", "username": "d.golov"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 2, "date": "2020-03-25 08:10:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-03-24 10:29:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 2, "date": "2020-03-24 10:21:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {"releasenotes/notes/remove-physical-device-mapping-15d614b70c68fc73.yaml": [{"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "de37aa8816cd16a9168db2d760070cb0b5c35593", "unresolved": false, "patch_set": 2, "id": "df33271e_83756c9b", "line": 6, "range": {"start_line": 6, "start_character": 4, "end_line": 6, "end_character": 12}, "updated": "2020-03-23 09:13:17.000000000", "message": "function", "commit_id": "5293d4321c1aa68ebf8d6f145590e69b4f05a0da"}, {"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "de37aa8816cd16a9168db2d760070cb0b5c35593", "unresolved": false, "patch_set": 2, "id": "df33271e_83e8cc16", "line": 7, "range": {"start_line": 7, "start_character": 23, "end_line": 7, "end_character": 44}, "updated": "2020-03-23 09:13:17.000000000", "message": "It's good to mention this is a config option that is being removed", "commit_id": "5293d4321c1aa68ebf8d6f145590e69b4f05a0da"}, {"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "5fadefa956b5713e096aa0b56c8f5f90969a020f", "unresolved": false, "patch_set": 3, "id": "df33271e_aebdf069", "line": 7, "range": {"start_line": 7, "start_character": 45, "end_line": 7, "end_character": 55}, "updated": "2020-03-23 15:18:13.000000000", "message": "I guess this can be removed?", "commit_id": "fcd91bb87ab82ca9eb7e47787897d169cf1c178f"}, {"author": {"_account_id": 24604, "name": "Danil Golov", "email": "d.golov@samsung.com", "username": "d.golov"}, "change_message_id": "ddd1d873f0c578dd98fd2880a431527b53762392", "unresolved": false, "patch_set": 3, "id": "df33271e_26945b8b", "line": 7, "range": {"start_line": 7, "start_character": 45, "end_line": 7, "end_character": 55}, "in_reply_to": "df33271e_aebdf069", "updated": "2020-03-24 09:11:52.000000000", "message": "Done", "commit_id": "fcd91bb87ab82ca9eb7e47787897d169cf1c178f"}]}}, "openstack%2Fkuryr-kubernetes~master~Ia98311a4afc840b3db87f02555a45e9e639ce742": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 08:09:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-03-24 15:59:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}], "comments": {}}, "openstack%2Fcyborg-specs~master~I3c30864d41255d61325d2820a1697ebd8d197bed": {"owner_id": 29423, "owner_name": "zhouxinyong", "owner_email": "zhouxinyong@inspur.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-01-22 09:42:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26297, "name": "pippo", "email": "1211099771@qq.com", "username": "huang.zhiping"}, {"value": -1, "date": "2020-03-13 12:32:35.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}], "comments": {}}, "openstack%2Fpuppet-octavia~master~Id74ef39ff303c9abf8118df203970cd871ed974a": {"owner_id": 11952, "owner_name": "Flavio Fernandes", "owner_email": "flavio@flaviof.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 1, "date": "2020-03-20 15:14:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-03-20 15:22:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 11082, "name": "Kamil Sambor", "email": "ksambor@redhat.com", "username": "ksambor"}, {"value": 1, "date": "2020-03-20 12:55:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, {"value": 2, "date": "2020-03-20 22:16:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"manifests/provider/ovn.pp": [{"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "edfbd69a5e68ea132a120ab56c79f4a0f16560d7", "unresolved": false, "patch_set": 3, "id": "1fa4df85_bd78062b", "line": 33, "updated": "2020-03-18 13:19:57.000000000", "message": "Where th", "commit_id": "3221095e95d58c8992623d00436e7066ed8fc6fe"}, {"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "c51f527f1f521996d3de6a138b294627a50829b9", "unresolved": false, "patch_set": 3, "id": "1fa4df85_01bc58da", "line": 33, "in_reply_to": "1fa4df85_bd39e63f", "updated": "2020-03-18 14:00:52.000000000", "message": "Done", "commit_id": "3221095e95d58c8992623d00436e7066ed8fc6fe"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "27aa7f35873d47269fa9a4df3a5ec82986dfffce", "unresolved": false, "patch_set": 3, "id": "1fa4df85_bd39e63f", "line": 33, "in_reply_to": "1fa4df85_bd78062b", "updated": "2020-03-18 13:28:06.000000000", "message": "I'm not sure this will work like we want because octavia::api::ovn_nb_connection is default $::os_service_default. I think this might result in the $::os_service_default always being the result here until we undef the api placed variable. Maybe something like this:\n\nif $::octavia::api::ovn_nb_connection and !is_service_default($::octavia::api::ovn_nb_connection) {\n   $ovn_nb_connection_real = $::octavia::api::ovn_nb_connection\n} else {\n   $ovn_nb_connection_real = $ovn_nb_connection\n}", "commit_id": "3221095e95d58c8992623d00436e7066ed8fc6fe"}]}}, "openstack%2Fdevstack-plugin-ceph~master~I01fea878fe1965768b1e569e7d9a672c88185fb7": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~Ie441f831bcd0835ae8e1cd082005640b65b7393a": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-25 00:12:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}, {"value": 2, "date": "2020-03-17 19:57:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}], "comments": {}}, "x%2Fvmware-nsx-tempest-plugin~master~Id0395db4b9e9d307acc736326fca84ba35d2e711": {"owner_id": 31191, "owner_name": "Datta Kumbhar", "owner_email": "dkumbhar@vmware.com", "labels": [{"value": 2, "date": "2020-03-25 08:32:15.000000000", "_account_id": 28732, "name": "Bharath bhushan Patel", "email": "pbharathbhu@vmware.com", "username": "pbharathbhu"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28451, "name": "Shubham Kadam", "email": "shubhamk@vmware.com", "username": "shubhamk"}], "comments": {}}, "openstack%2Ftripleo-quickstart-extras~master~I5e8c304ee423238200ed029f1d677652d392ce11": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 21:18:00.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-03-25 04:30:16.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-03-24 21:16:50.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"roles/standalone/tasks/main.yml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "5d4b0f3071660c11e38cdc0ebbbe57bf2caba145", "unresolved": false, "patch_set": 9, "id": "1fa4df85_a741d93b", "line": 173, "range": {"start_line": 173, "start_character": 17, "end_line": 173, "end_character": 27}, "updated": "2020-03-02 04:49:45.000000000", "message": "need to use released branches here as 'master' keeps on changing and when ussuri get released this will become false.", "commit_id": "8ff8282e8427c0917504ed692ce9bee9cf268990"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "fcacfe688a1ea572ea11b6ad175c0044e031d48c", "unresolved": false, "patch_set": 9, "id": "1fa4df85_f2f0d169", "line": 173, "range": {"start_line": 173, "start_character": 17, "end_line": 173, "end_character": 27}, "in_reply_to": "1fa4df85_a741d93b", "updated": "2020-03-19 17:23:09.000000000", "message": "Done", "commit_id": "8ff8282e8427c0917504ed692ce9bee9cf268990"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "5d4b0f3071660c11e38cdc0ebbbe57bf2caba145", "unresolved": false, "patch_set": 9, "id": "1fa4df85_e77031a8", "line": 195, "range": {"start_line": 195, "start_character": 22, "end_line": 195, "end_character": 33}, "updated": "2020-03-02 04:49:45.000000000", "message": "same", "commit_id": "8ff8282e8427c0917504ed692ce9bee9cf268990"}]}}, "openstack%2Fmasakari~master~Ib32378e49976eeb068b21f0fce44a90189edd3f1": {"owner_id": 31027, "owner_name": "MaAoyu", "owner_email": "523354092@qq.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25267, "name": "NTT system-fault-ci masakari-integration-ci", "email": "masakari.integration.test@gmail.com", "username": "masakari-integration-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-common~master~I2d887aa3140ed75345464280062e0740d0618ce3": {"owner_id": 31027, "owner_name": "MaAoyu", "owner_email": "523354092@qq.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foctavia~master~I2f680a00be695c3828166e6803882765af79b79e": {"owner_id": 7249, "owner_name": "Ann Taraday", "owner_email": "akamyshnikova@mirantis.com", "labels": [{"value": 2, "date": "2020-03-24 23:26:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 01:54:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2245, "name": "Jacky Hu", "email": "hudayou@hotmail.com", "username": "hudayou"}], "comments": {}}, "x%2Fvmware-nsxlib~stable%2Fstein~I7093fbf70a76a7560c9174b209259f167b21f74f": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 07:45:09.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~master~I7a626544d8221dc0eeb5672986ca897ce4718be8": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-02 02:00:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-03-02 02:00:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-02 02:00:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-03-02 02:00:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 2, "date": "2020-03-02 13:58:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29745, "name": "Dustin Cowles", "email": "cowlesd@gmail.com", "username": "dustinc", "status": "inactive"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"api-ref/source/parameters.yaml": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_95ff1e33", "line": 2690, "range": {"start_line": 2690, "start_character": 10, "end_line": 2690, "end_character": 29}, "updated": "2020-03-02 13:58:06.000000000", "message": "... (ARQ) ...\n\n(You're using the ARQ acronym elsewhere, so should be consistent.)", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}], "nova/api/openstack/api_version_request.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_d5d4b6bf", "line": 223, "range": {"start_line": 223, "start_character": 54, "end_line": 223, "end_character": 56}, "updated": "2020-03-02 13:58:06.000000000", "message": "to the", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_7504e24a", "line": 226, "updated": "2020-03-02 13:58:06.000000000", "message": "period", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}], "nova/api/openstack/compute/rest_api_version_history.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5197566c738466f493a589bd6e2893a3ed86d353", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a968b5bb", "line": 1087, "range": {"start_line": 1087, "start_character": 5, "end_line": 1087, "end_character": 33}, "updated": "2019-12-28 06:09:15.000000000", "message": "Can Nova trigger this \"event\" proactively?", "commit_id": "3aad2c0f47b974e12a58742300c47f1a0457ca86"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "652d0dc0629c70de89b68c50dabf2bf9d2125767", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_52548cc6", "line": 1087, "range": {"start_line": 1087, "start_character": 5, "end_line": 1087, "end_character": 33}, "in_reply_to": "3fa7e38b_33335264", "updated": "2020-01-16 00:30:58.000000000", "message": "yeah, I know.", "commit_id": "3aad2c0f47b974e12a58742300c47f1a0457ca86"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "5089591e1120c6003a657e43260b718cf7dfc44d", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_33335264", "line": 1087, "range": {"start_line": 1087, "start_character": 5, "end_line": 1087, "end_character": 33}, "in_reply_to": "3fa7e38b_7bd031f5", "updated": "2020-01-15 14:48:59.000000000", "message": "+1", "commit_id": "3aad2c0f47b974e12a58742300c47f1a0457ca86"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "ca339d2b5f3a291d2eae4614fd363e174d28f4c0", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7bd031f5", "line": 1087, "range": {"start_line": 1087, "start_character": 5, "end_line": 1087, "end_character": 33}, "in_reply_to": "3fa7e38b_a968b5bb", "updated": "2020-01-02 15:52:12.000000000", "message": "> Can Nova trigger this \"event\" proactively?\n\nI'm not sure what this means. This API is for external service events, meaning events sent by non-nova services (i.e. cyborg in this case). It could be sent by a service other than cyborg, but in practice it will always be from that. Further, this should always happen, even if nova isn't ready or waiting for it, so I think the statement in the code here is correct.", "commit_id": "3aad2c0f47b974e12a58742300c47f1a0457ca86"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_95adde32", "line": 1087, "range": {"start_line": 1087, "start_character": 41, "end_line": 1087, "end_character": 43}, "updated": "2020-03-02 13:58:06.000000000", "message": "to the", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_d57036df", "line": 1089, "range": {"start_line": 1089, "start_character": 14, "end_line": 1089, "end_character": 39}, "updated": "2020-03-02 13:58:06.000000000", "message": "yeah, like this", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}], "nova/api/openstack/compute/schemas/server_external_events.py": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "efb889118bc4029225139a3cb7e2866bb1f368ec", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_87e0c899", "line": 36, "updated": "2019-11-05 16:25:30.000000000", "message": "Again, you cannot change this defined schema version.", "commit_id": "0fa159aa71ef7d10987f6154e8518c5bb260fc74"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "7ed09e862aa922066642b81406b41ce199a2ef35", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0560e20c", "line": 35, "updated": "2019-12-04 14:46:56.000000000", "message": "Please don't make this unrelated change. I definitely prefer the trailing comma, but don't intermix it with the functional change.", "commit_id": "31d243a196954d662f7ce6b6d208dce094258e76"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d8e315302f1657da1e89da3226606ff22ea35beb", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_56c1ae4d", "line": 35, "in_reply_to": "3fa7e38b_0560e20c", "updated": "2019-12-13 05:54:49.000000000", "message": "Done", "commit_id": "31d243a196954d662f7ce6b6d208dce094258e76"}], "nova/objects/external_event.py": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "411cc1f2e24ec5774967ecff985e8205097d5a83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_298c7033", "line": 36, "range": {"start_line": 35, "start_character": 59, "end_line": 36, "end_character": 43}, "updated": "2019-12-11 21:16:21.000000000", "message": "Sounds from the discussion like this is an incorrect use of the tag field. Setting a tag implies that the event is one of potentially many for the instance, and tag is the multiplexing key. For a neutron event, it's the port because ... you can have multiple ports and you need to know which one the event pertains to.\n\nHaving one \"everything is done for all accelerators for this instance\" event seems like a terrible design choice to me, but if that's what we're going for, tag should be unset in the event to avoid confusion.", "commit_id": "e3fe46126905a8b50a7f0a6cc08f3a5108e1defe"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "5bb0422b65ee7796b27403d2c7d7428b65fa59fa", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_a959405b", "line": 36, "range": {"start_line": 35, "start_character": 59, "end_line": 36, "end_character": 44}, "updated": "2019-12-11 22:02:28.000000000", "message": "After much discussion, I see that this is only ever going to be one thing, and that this event is intended to be a single monolithic \"all build-time binding stuff is done\". That doesn't match with how any of our other events work, and doesn't leave us a granular future where we use this event to handle things like post-build attach.\n\nSo, I want this to change to match the other events, which means calling this accelerator-request-bound, and tag being the uuid of that ARQ.", "commit_id": "b0eaea47b842c9dfe98f539b9af1c9d5829048fd"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d8e315302f1657da1e89da3226606ff22ea35beb", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_bbb96dcb", "line": 36, "range": {"start_line": 35, "start_character": 59, "end_line": 36, "end_character": 44}, "in_reply_to": "3fa7e38b_a959405b", "updated": "2019-12-13 05:54:49.000000000", "message": "Done", "commit_id": "b0eaea47b842c9dfe98f539b9af1c9d5829048fd"}], "nova/tests/unit/api/openstack/compute/test_server_external_events.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7cee973578fccb61401a4bac3198152f7cdbfddb", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_b4957033", "line": 279, "updated": "2020-01-21 06:31:47.000000000", "message": "Ignore my comments in PS8, this unit test complete the test with this event, we don't need the functional test, another, this used fot external service events.", "commit_id": "ea8d95cb2bd0b68ea49af150767b3351dfb9a056"}], "releasenotes/notes/accelerator-requests-6c9a6fef77ab776a.yaml": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_95207eb2", "line": 7, "range": {"start_line": 7, "start_character": 24, "end_line": 7, "end_character": 43}, "updated": "2020-03-02 13:58:06.000000000", "message": "... (ARQ) ...", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "e1cd06d7f81ce228ad4c1afc2f4d5cb89678ffe3", "unresolved": false, "patch_set": 17, "id": "df33271e_637abf24", "line": 7, "range": {"start_line": 7, "start_character": 24, "end_line": 7, "end_character": 43}, "in_reply_to": "1fa4df85_95207eb2", "updated": "2020-03-25 07:51:32.000000000", "message": "Done", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ba433dd9936c92decb270f984ab6d951e109c15d", "unresolved": false, "patch_set": 17, "id": "1fa4df85_b5149a4f", "line": 10, "range": {"start_line": 10, "start_character": 4, "end_line": 10, "end_character": 5}, "updated": "2020-03-02 13:58:06.000000000", "message": "not sure this needs to be a one-element bullet list, could just be inline.", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "e1cd06d7f81ce228ad4c1afc2f4d5cb89678ffe3", "unresolved": false, "patch_set": 17, "id": "df33271e_c3774b3a", "line": 10, "range": {"start_line": 10, "start_character": 4, "end_line": 10, "end_character": 5}, "in_reply_to": "1fa4df85_b5149a4f", "updated": "2020-03-25 07:51:32.000000000", "message": "Done", "commit_id": "c6365f1b55cdbc33452fe3b40d3a7039f53f631c"}]}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~Id6dd29650951855d13498a7206f6d1dde7db7864": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-03-24 10:14:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-03-24 23:51:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {}}, "openstack%2Fcyborg-specs~master~If0081c1c6d1c8415d209c81a0f46c72889a2d457": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": -1, "date": "2020-01-15 03:21:38.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 17813, "name": "wangzhh", "email": "wangzhengh@chinatelecom.cn", "username": "wangzhh"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23168, "name": "Yumeng Bao", "username": "Yumeng", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20722, "name": "Yikun Jiang", "email": "yikunkero@gmail.com", "username": "yikunkero"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22899, "name": "coco-Gao", "email": "419546439@qq.com", "username": "Coco"}], "comments": {"specs/stein/approved/instance-ops.rst": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b827390178792f59c39efe83a7ecbc1a465e960c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_b6c7073e", "line": 86, "range": {"start_line": 86, "start_character": 24, "end_line": 86, "end_character": 70}, "updated": "2018-10-19 13:17:18.000000000", "message": "today rebuild does not call the scheduler so we cannot allocate new cyborg device RPs during rebuild but need to use the original ones.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "a68ac3b7c987c2986956458eeb4aaf3441d1499d", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_d76f775e", "line": 86, "range": {"start_line": 86, "start_character": 24, "end_line": 86, "end_character": 70}, "in_reply_to": "3f79a3b5_7e434112", "updated": "2018-10-29 09:17:51.000000000", "message": "I think nova just checks that the new image fits to the current host and allocation with the new image. But it does it without calling the scheduler and placement. \nThis might need to be enhanced for due to cyborg.\n\nhttps://github.com/openstack/nova/blob/88db2f9c0a0c2ef9cdf15b94893fbc574a0f028a/nova/conductor/manager.py#L1005", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "44bc3a8097a022fef5dd2b82a24654f0a055d9c3", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_7e434112", "line": 86, "range": {"start_line": 86, "start_character": 24, "end_line": 86, "end_character": 70}, "in_reply_to": "3f79a3b5_b6c7073e", "updated": "2018-10-27 04:02:17.000000000", "message": "Hmm, the new image may have image traits that may affect placement, right? How is that handled if the scheduler is not invoked?\n\nIf the old RPs stay the same, then Cyborg is not called to create or bind VARs. However, a change of image means the image properties may change. So how can Cyborg take the new image properties into account? This is a problem.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b827390178792f59c39efe83a7ecbc1a465e960c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_763f2f22", "line": 112, "range": {"start_line": 111, "start_character": 12, "end_line": 112, "end_character": 12}, "updated": "2018-10-19 13:17:18.000000000", "message": "Or in other words evacuate always calls the scheduler (except force=True) so it can be handled in the same way a new boot, so nova needs to create VARs and needs to bind them on the new host. (VARs on the old host cannot be unbind as the old host cannot be accessed)", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "a68ac3b7c987c2986956458eeb4aaf3441d1499d", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_57912744", "line": 112, "range": {"start_line": 111, "start_character": 12, "end_line": 112, "end_character": 12}, "in_reply_to": "3f79a3b5_611de10e", "updated": "2018-10-29 09:17:51.000000000", "message": "I might be mistaken with my previous comment. Nova can unbind the var from the failed host but cannot unplug it. Overall I don't see this as a problem.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "44bc3a8097a022fef5dd2b82a24654f0a055d9c3", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_611de10e", "line": 112, "range": {"start_line": 111, "start_character": 12, "end_line": 112, "end_character": 12}, "in_reply_to": "3f79a3b5_763f2f22", "updated": "2018-10-27 04:02:17.000000000", "message": "In this case, Nova should unbind and delete the VARs in the failed host.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b827390178792f59c39efe83a7ecbc1a465e960c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_9621ab00", "line": 116, "updated": "2018-10-19 13:17:18.000000000", "message": "As the image can change during the rescue we need to define what happen with the cyborg specific information coming from the original and the new image", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "44bc3a8097a022fef5dd2b82a24654f0a055d9c3", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_e1d81125", "line": 116, "in_reply_to": "3f79a3b5_9621ab00", "updated": "2018-10-27 04:02:17.000000000", "message": "This is the same problem as the rebuild case. However, one would imagine that rescue images would not need special accelerator properties. So we could just leave the original accelerator resources intact (no unbinding) and re-attach them after unrescue.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "a68ac3b7c987c2986956458eeb4aaf3441d1499d", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_d7a457a6", "line": 116, "in_reply_to": "3f79a3b5_e1d81125", "updated": "2018-10-29 09:17:51.000000000", "message": "Your suggestions make sense to me.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b827390178792f59c39efe83a7ecbc1a465e960c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_96668b56", "line": 141, "updated": "2018-10-19 13:17:18.000000000", "message": "Good list of possible operations. Thanks", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b827390178792f59c39efe83a7ecbc1a465e960c", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_56a6b3ae", "line": 165, "range": {"start_line": 165, "start_character": 60, "end_line": 165, "end_character": 78}, "updated": "2018-10-19 13:17:18.000000000", "message": "Nova already sends instance notifications for instance state transitions. By default those contain the flavor extra_specs therefore the device_profile name.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "44bc3a8097a022fef5dd2b82a24654f0a055d9c3", "unresolved": false, "patch_set": 2, "id": "3f79a3b5_f3a1caa9", "line": 165, "range": {"start_line": 165, "start_character": 60, "end_line": 165, "end_character": 78}, "in_reply_to": "3f79a3b5_56a6b3ae", "updated": "2018-10-27 04:02:17.000000000", "message": "OK. Will drop.", "commit_id": "3f5e34f13ac515d7fb34ba4b6fcd18323f7edc0f"}, {"author": {"_account_id": 17813, "name": "wangzhh", "email": "wangzhengh@chinatelecom.cn", "username": "wangzhh"}, "change_message_id": "13f56d942bf6a49e0ffa36198f5b6163d024387b", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_3e1c3d12", "line": 21, "updated": "2019-06-20 01:56:43.000000000", "message": "ARQ is acc req or acc record?", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_95ab0e74", "line": 21, "in_reply_to": "9fb8cfa7_3e1c3d12", "updated": "2019-07-03 22:06:30.000000000", "message": "Done", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b8872ebd38d6ee1b809557bdb9e796bad2d1b031", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_a10944dd", "line": 61, "range": {"start_line": 61, "start_character": 22, "end_line": 61, "end_character": 29}, "updated": "2019-07-01 21:14:47.000000000", "message": "this should perhaps be spelled \"spawned\" to disambiguate from \"restarted\" below.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_55b7d6d9", "line": 61, "range": {"start_line": 61, "start_character": 22, "end_line": 61, "end_character": 29}, "in_reply_to": "9fb8cfa7_a10944dd", "updated": "2019-07-03 22:06:30.000000000", "message": "Done", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_831e5a0a", "line": 76, "range": {"start_line": 76, "start_character": 55, "end_line": 76, "end_character": 64}, "updated": "2019-06-03 21:34:43.000000000", "message": "destruction", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_f5ccc262", "line": 76, "range": {"start_line": 76, "start_character": 55, "end_line": 76, "end_character": 64}, "in_reply_to": "9fb8cfa7_01fa90bb", "updated": "2019-07-03 22:06:30.000000000", "message": "Some folks in [1] already started doing that [2][3].\n\n[2] https://en.wiktionary.org/wiki/destroyal\n[3] https://journals.openedition.org/jso/812?file=1", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_95d9ce23", "line": 76, "range": {"start_line": 76, "start_character": 55, "end_line": 76, "end_character": 64}, "in_reply_to": "9fb8cfa7_831e5a0a", "updated": "2019-07-03 22:06:30.000000000", "message": "Done", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b8872ebd38d6ee1b809557bdb9e796bad2d1b031", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_01fa90bb", "line": 76, "range": {"start_line": 76, "start_character": 55, "end_line": 76, "end_character": 64}, "in_reply_to": "9fb8cfa7_831e5a0a", "updated": "2019-07-01 21:14:47.000000000", "message": "I like \"destroyal\". We [1] are going to use that from now on.\n\n[1] the English-speaking world.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_63e6c619", "line": 83, "range": {"start_line": 81, "start_character": 33, "end_line": 83, "end_character": 17}, "updated": "2019-06-03 21:34:43.000000000", "message": "This isn't really true. I'm assuming you're referring to a SOFT_DELETED server (which is based on configuration in nova and not a default behavior), but even then when restoring a soft-deleted server it doesn't go through the scheduler, we just reset some state so the nova-compute service hosting that instance doesn't reap it after a certain time.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_b5d64af1", "line": 83, "range": {"start_line": 81, "start_character": 33, "end_line": 83, "end_character": 17}, "in_reply_to": "9fb8cfa7_63e6c619", "updated": "2019-07-03 22:06:30.000000000", "message": "Done", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_f59e0253", "line": 83, "range": {"start_line": 81, "start_character": 33, "end_line": 83, "end_character": 17}, "in_reply_to": "9fb8cfa7_63e6c619", "updated": "2019-07-03 22:06:30.000000000", "message": "If that is the case", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_83e3ba05", "line": 90, "range": {"start_line": 88, "start_character": 11, "end_line": 90, "end_character": 7}, "updated": "2019-06-03 21:34:43.000000000", "message": "Rebuild never reschedules to another node. Do you mean evacuate here?", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d1d7290ff98b3c0f007d8b0b8f44873548c8fd44", "unresolved": false, "patch_set": 3, "id": "7faddb67_8609addd", "line": 90, "range": {"start_line": 88, "start_character": 11, "end_line": 90, "end_character": 7}, "in_reply_to": "7faddb67_8485305c", "updated": "2019-08-07 01:01:03.000000000", "message": "There is a comment in nova/conductor/manager.py, in rebuild_instance(), which says:\n# 1. rebuild - the instance.host is passed to rebuild on the\n#       same host and bypass the scheduler *unless* a new image was specified\n\nThis sounds like, if a new image is specified, apparently the scheduler is invoked and it could be rescheduled to a different host. Other comments in that method, however,clarify that a rebuild is always to the same host.\n\nUnfortunately, I don't have a multi-node setup to confirm any of this.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "7853fc2899ff630aa708d30c9850df6c73c8f37f", "unresolved": false, "patch_set": 3, "id": "7faddb67_8485305c", "line": 90, "range": {"start_line": 88, "start_character": 11, "end_line": 90, "end_character": 7}, "in_reply_to": "7faddb67_f5f5a284", "updated": "2019-08-06 16:18:25.000000000", "message": "That link no longer means anything since it wasn't using a tag or commit hash to make the link permanent so I don't know what this was about anymore.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 17813, "name": "wangzhh", "email": "wangzhengh@chinatelecom.cn", "username": "wangzhh"}, "change_message_id": "13f56d942bf6a49e0ffa36198f5b6163d024387b", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_de1ac115", "line": 90, "range": {"start_line": 88, "start_character": 11, "end_line": 90, "end_character": 7}, "in_reply_to": "9fb8cfa7_83e3ba05", "updated": "2019-06-20 01:56:43.000000000", "message": "https://github.com/openstack/nova/blob/master/nova/conductor/manager.py#L990\nPlz look at the comment, I think it is probably.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "7d2925d77601641ae76547b9d6719c0cfe5007c5", "unresolved": false, "patch_set": 3, "id": "7faddb67_f5f5a284", "line": 90, "range": {"start_line": 88, "start_character": 11, "end_line": 90, "end_character": 7}, "in_reply_to": "9fb8cfa7_de1ac115", "updated": "2019-07-03 22:06:30.000000000", "message": "What wangzhh said.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_a3b59ef0", "line": 98, "range": {"start_line": 97, "start_character": 14, "end_line": 98, "end_character": 70}, "updated": "2019-06-03 21:34:43.000000000", "message": "I would expect this to happen before the resize is confirmed so the user can verify the devices attached to the server (this would happen during the finish_resize step in the compute manager).", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_c3af7292", "line": 139, "updated": "2019-06-03 21:34:43.000000000", "message": "Live migration with SR-IOV ports is probably a similar problem and was only recently supported:\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/train/approved/libvirt-neutron-sriov-livemigration.html", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9aba58b92038501643e1d7fe1286e3a2c563f891", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_239e8e63", "line": 233, "range": {"start_line": 231, "start_character": 0, "end_line": 233, "end_character": 42}, "updated": "2019-06-03 21:34:43.000000000", "message": "Remove this templating.", "commit_id": "a52a205dc7400feb011488a45bc5bf44658c770d"}], "specs/train/approved/instance-ops.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f999f4ce", "line": 1, "updated": "2020-01-15 03:21:38.000000000", "message": "This spec need to move to the ussuri directory, I saw it was in train now.\n\nAlthough the interaction spec [1] in nova was incorporated in the Train version, as the version iterations, Cyborg did not complete this operation, I think this should be migrated to the latest version to discuss.\n\n[1] http://specs.openstack.org/openstack/nova-specs/specs/ussuri/approved/nova-cyborg-interaction.html", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1942d0ad", "line": 67, "range": {"start_line": 67, "start_character": 56, "end_line": 67, "end_character": 57}, "updated": "2020-01-15 03:21:38.000000000", "message": "redundant white space", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_393f8c23", "line": 68, "range": {"start_line": 68, "start_character": 46, "end_line": 68, "end_character": 47}, "updated": "2020-01-15 03:21:38.000000000", "message": "redundant white space", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_b482a1fe", "line": 91, "range": {"start_line": 89, "start_character": 11, "end_line": 91, "end_character": 7}, "updated": "2020-01-15 03:21:38.000000000", "message": "In PS3, Matt ponit this [1], the **Rebuild** never reschedules to another node, I think you can move this to the **evacuate** action, on line112\n\nIf you wrote *this* here, it's confusing.\n\n[1]https://review.opendev.org/#/c/605237/3/specs/stein/approved/instance-ops.rst@88", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1416154c", "line": 96, "updated": "2020-01-15 03:21:38.000000000", "message": "+1, agree with this deal, while the server is resizing, we should check the ARQ before confirmed or reverted, and then determinate to do detached/unbound (then attached to the new server) or revert.", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f45ed9e6", "line": 135, "range": {"start_line": 135, "start_character": 24, "end_line": 135, "end_character": 25}, "updated": "2020-01-15 03:21:38.000000000", "message": "redundant white space", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_d4fe3db4", "line": 140, "updated": "2020-01-15 03:21:38.000000000", "message": "Yes, today carrying instances of PCI devices does not support live migration.", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "797a78aa99e9537adc4ac7cefa2e10ce06a21ad4", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_b83d8f2a", "line": 140, "in_reply_to": "3fa7e38b_9af46f57", "updated": "2020-01-17 05:20:06.000000000", "message": "Only networking devices can benefit from this. \n\nNon-networking accelerators -- GPUs, AI chips, etc. -- supported by Cyborg today cannot benefit from these.", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cca2fb05ea8ebe4eb5a470c29b269a222e69600c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9af46f57", "line": 140, "in_reply_to": "3fa7e38b_d4fe3db4", "updated": "2020-01-15 05:52:21.000000000", "message": "Sorry, not all PCI instance cannot do live migration, there is a new feature for live migration with SR-IOV ports.\n\n[1]https://specs.openstack.org/openstack/nova-specs/specs/train/approved/libvirt-neutron-sriov-livemigration.html\nhttps://review.opendev.org/#/q/topic:bp/libvirt-neutron-sriov-livemigration+status:merged", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_74dd093e", "line": 222, "range": {"start_line": 222, "start_character": 4, "end_line": 222, "end_character": 43}, "updated": "2020-01-15 03:21:38.000000000", "message": "nit: This commit was merged, and we can use it's valid link instead of the gerrit link. http://specs.openstack.org/openstack/nova-specs/specs/ussuri/approved/nova-cyborg-interaction.html", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "368388b62291a745bebdd37097ef9bab86e4c218", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1415b5e6", "line": 242, "updated": "2020-01-15 03:21:38.000000000", "message": "* - Ussuri\n     - Introduced", "commit_id": "7ecc32d08209b1bc3331da616a1f5aab4f0f65aa"}]}}, "openstack%2Fcharms.ceph~master~I2bcf1208d75d8cdda4e3892b3e48c85eaf5db8d1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 07:03:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "639d86cad70b501049876787c0b9c58c3ad4be6a", "unresolved": false, "patch_set": 3, "id": "df33271e_ed999e1f", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 50}, "updated": "2020-03-25 06:12:36.000000000", "message": "cycle in dependency, remove", "commit_id": "e4562d94739a5cddec5e0d3e65b8b9c9b6de6f6d"}]}}, "openstack%2Fopenstacksdk~master~I7f0ea852fd03ecca64e0387e5019335a4664aba6": {"owner_id": 14369, "owner_name": "Mark Chappell", "owner_email": "mchappel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 05:49:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, {"value": 1, "date": "2020-03-24 22:19:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 2, "date": "2020-03-24 23:05:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "6bb055f81e1258eefb13b98dd508ba961290ab3d", "unresolved": false, "patch_set": 2, "id": "df33271e_db88f820", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 8}, "updated": "2020-03-23 14:22:20.000000000", "message": "I think this may need to be 'Depends-On'", "commit_id": "39758682040b678ddb5eaa38b5e590d197fb1fdd"}], "openstack/identity/v3/identity_provider.py": [{"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "50a7691cda8280bcc70e1895ee3da39b7fa2961c", "unresolved": false, "patch_set": 3, "id": "df33271e_c2a3e54e", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 38}, "updated": "2020-03-23 18:30:42.000000000", "message": "not sure how widespread this is but maybe not including the ID in the body should be the general case for when the create method is PUT, or maybe always? it's kind of a weird quirk of this API that it allows you to set the ID explicitly", "commit_id": "8f7ec9221af954748f9b0d5af3cf18475eac0493"}, {"author": {"_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, "change_message_id": "bc56409906a6f8981b2f98061a988e27639a0c03", "unresolved": false, "patch_set": 3, "id": "df33271e_fda96bdf", "line": 28, "range": {"start_line": 28, "start_character": 4, "end_line": 28, "end_character": 38}, "in_reply_to": "df33271e_c2a3e54e", "updated": "2020-03-23 19:48:04.000000000", "message": "What I found interesting was that the API docs explicitly talk about not sending ID when create_method = 'POST' (giving it as an example that throws a 400).\n\nI didn't want to switch the default behaviour since it's explicitly tested for and neither mordred nor I could see why it would be that way, which left us worried about some weird side effect...", "commit_id": "8f7ec9221af954748f9b0d5af3cf18475eac0493"}]}}, "openstack%2Fcharm-ironic~master~I533f383c7289759c71cf5a4096b38c9bd7c9ac0a": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:59:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "2b26839a63e20ef15b7f8883b243731ff27becf7", "unresolved": false, "patch_set": 4, "id": "df33271e_6d00ee35", "line": 21, "range": {"start_line": 20, "start_character": 0, "end_line": 21, "end_character": 50}, "updated": "2020-03-25 06:11:02.000000000", "message": "cyclic dependency, remove", "commit_id": "a617c312d64c5fa6bd40b8f6bcce0534569486a5"}]}}, "openstack%2Fcharm-ceilometer-agent~master~I56b983c6d551951d3a6267ff31f700cd235ab179": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:55:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-designate~master~I5f2985c1c0c80bc76b579fa24fb3b5d945c74da1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:55:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-openvswitch~master~I9afb0498829f66393d973dffb41f566fde52873c": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:55:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-placement~master~I7ada79d96139b46d4299e8c6f0e3854ea5ca3d88": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:55:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-neutron-plugin-api-subordinate~master~Ia09eea20e0c425da01f1d02dd3915bcb2da8b245": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:56:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-mysql-innodb-cluster~master~Ic5e89b32fdfebdf581430f4735bc059ff53d5e91": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:55:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-nova-compute~master~I32d62e7721e8250c237cede6f284da3fe8367b33": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:44:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-bgp~master~I860b169528a7130a6c755ad494f6b3db08ea6aee": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:48:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-keystone-admin~master~Ic70ddd43786d056c35917caad6518a193d3586dd": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:47:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-bind-rndc~master~I5b119106f5f1eb41077959fe21d3ce090e70614c": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:48:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-api-plugin-ovn~master~I969abef9daddf6f8fe61cfcd140e1d5f9b2e35b1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:48:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-mysql-router~master~I57c68805947d9e49d03d07d0b0ad6331d2135cdf": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:48:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-ceph-mds~master~Iea382a3ec4564d3bf00d16dda281673bc10cb33b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:47:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-nova-cell-controller~master~I81b0b89339bc91cfbb6a3938aa7125fcb93d7ae3": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:48:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-neutron-dynamic-routing~master~If4e76bcac38ff994486816366d78787a9ac4f5b5": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:38:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-layer-openstack-api~master~Id04e5bae7f096a5b02225e9def1d7d25731b057e": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:38:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-layer-openstack-principle~master~I6549595dff4219b831680624315e36e95fccf2d2": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:38:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~I7f1254f882486514cd29a52bf05ebf5a972da490": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-25 05:48:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 00:06:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Fcharm-swift-proxy~master~Ica00040bb29cc880b2397344197fde9e99d5e5c4": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:29:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-keystone-ldap~master~I12d37f8f1dd21cc3a52fe607a0e255b6d4955197": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:26:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~Id75617b1a723bd310c86b3e6ea45b274652b9d9b": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-25 05:47:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 00:03:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Fcharm-manila~master~I762fbd376f7ba12fcfa4ce7c5af401d78243971f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:27:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-layer-openstack~master~Iff776d6f2cc57d7c37021e7e6966e65a96f1ba9e": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:26:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-manila-ganesha~master~Ib2edf88f22fbc4eb75e6414b51e88ed00d78cc7d": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:27:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-pacemaker-remote~master~I164c6ffa1f6186884db2697ac951424638fdf50f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:28:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-layer-ceph~master~I13072d7372cfd4afa893bc252a22ca9daaadb73d": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:26:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fopenstack-ansible-repo_server~master~Iaa2e52b26ba89802e06665ebe43fdf18e515abd7": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-18 09:11:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-17 17:57:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 1, "date": "2020-03-16 16:18:13.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}], "comments": {}}, "openstack%2Fcharm-interface-keystone~master~Ibfafcda16b5c59b7afc63ceb5e7c0f4fad08c7a4": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:24:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-rabbitmq~master~I46cff2dc02fb16db35d01fe6454ee67732d8def5": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:25:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-layer-ceph-base~master~I6c752f6302d0340dbecf2cb7fe4e2169139ea041": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:26:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-openstack-ha~master~I15b86d5a0fe5ccb5ea8a57d547fe350b3a024369": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:25:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-keystone-domain-backend~master~Iebfc4ed12032f5b400ce8e7112f9d429285c5d36": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:24:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-gnocchi~master~I63d6e2cc5c7aaea30437a04f44ecfef0e2de89ee": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:24:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fcharm-interface-keystone-credentials~master~Ib21e51e6ab020747e069dc854dcc1d42be382637": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:24:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fpuppet-nova~stable%2Ftrain~Ibbb06d45141630d667c3412632ef587b5edf7f71": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}], "comments": {}}, "openstack%2Fcharm-interface-designate~master~Ia1a1ff878701283ecaec43aa5069d1b90a6b2c8f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:23:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "x%2Fvmware-nsx-tempest-plugin~master~Ib7de3d77fc5a22d945f970221d1dc9e3eb2e148d": {"owner_id": 31191, "owner_name": "Datta Kumbhar", "owner_email": "dkumbhar@vmware.com", "labels": [{"value": 0, "_account_id": 28732, "name": "Bharath bhushan Patel", "email": "pbharathbhu@vmware.com", "username": "pbharathbhu"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 06:11:18.000000000", "_account_id": 28451, "name": "Shubham Kadam", "email": "shubhamk@vmware.com", "username": "shubhamk"}], "comments": {}}, "x%2Fvmware-nsx-tempest-plugin~master~I426e684ac80e53e79733d6453d05ca63d217abc8": {"owner_id": 28732, "owner_name": "Bharath bhushan Patel", "owner_email": "pbharathbhu@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31191, "name": "Datta Kumbhar", "email": "dkumbhar@vmware.com", "username": "dkumbhar"}, {"value": 2, "date": "2020-03-25 06:10:05.000000000", "_account_id": 28451, "name": "Shubham Kadam", "email": "shubhamk@vmware.com", "username": "shubhamk"}, {"value": 0, "_account_id": 28099, "name": "Deepika Khairnar", "email": "dkhairnar@vmware.com", "username": "dkhairnar"}], "comments": {}}, "openstack%2Fzaqar-tempest-plugin~master~I6f37c55f7bba8b0bc7b1ce15636e12fb6d3c15ea": {"owner_id": 8846, "owner_name": "Hao Wang", "owner_email": "sxmatch1986@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 03:36:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15054, "name": "wangxiyuan", "email": "wangxiyuan1007@gmail.com", "username": "wangxiyuan"}, {"value": 2, "date": "2020-03-25 04:25:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4f70291b24195aa38a9b2667482144f591d45354", "unresolved": false, "patch_set": 1, "id": "df33271e_2c99df6d", "line": 6, "range": {"start_line": 1, "start_character": 2, "end_line": 6, "end_character": 0}, "updated": "2020-03-24 03:33:14.000000000", "message": "Job zaqar-tempest-mongodb in openstack/zaqar-tempest-plugin is not permitted to shadow job zaqar-tempest-mongodb in openstack/zaqar", "commit_id": "b98f01bfec9941b751fd43a6280fef7ed18f773d"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4f70291b24195aa38a9b2667482144f591d45354", "unresolved": false, "patch_set": 1, "id": "df33271e_0c9e9b55", "line": 12, "range": {"start_line": 7, "start_character": 2, "end_line": 12, "end_character": 0}, "updated": "2020-03-24 03:33:14.000000000", "message": "Job zaqar-tempest-redis in openstack/zaqar-tempest-plugin is not permitted to shadow job zaqar-tempest-redis in openstack/zaqar", "commit_id": "b98f01bfec9941b751fd43a6280fef7ed18f773d"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4f70291b24195aa38a9b2667482144f591d45354", "unresolved": false, "patch_set": 1, "id": "df33271e_6ca2c79c", "line": 18, "range": {"start_line": 13, "start_character": 2, "end_line": 18, "end_character": 0}, "updated": "2020-03-24 03:33:14.000000000", "message": "Job zaqar-tempest-swift in openstack/zaqar-tempest-plugin is not permitted to shadow job zaqar-tempest-swift in openstack/zaqar", "commit_id": "b98f01bfec9941b751fd43a6280fef7ed18f773d"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "343f093af5643ecafdd6d451fd9bc763c3dd439d", "unresolved": false, "patch_set": 5, "id": "df33271e_ed9fdeb1", "line": 14, "range": {"start_line": 13, "start_character": 1, "end_line": 14, "end_character": 68}, "updated": "2020-03-25 04:59:43.000000000", "message": "copy shouldn't have needed, u can use those jobs as parent here.", "commit_id": "7d009cd2ff1db4870d2592c459150e263593f29e"}, {"author": {"_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, "change_message_id": "d41f1d11c7e935142dc44b8220ce23d44f9b337c", "unresolved": false, "patch_set": 5, "id": "df33271e_ada8361f", "line": 14, "range": {"start_line": 13, "start_character": 1, "end_line": 14, "end_character": 68}, "in_reply_to": "df33271e_ed9fdeb1", "updated": "2020-03-25 06:16:32.000000000", "message": "ok, will check it.", "commit_id": "7d009cd2ff1db4870d2592c459150e263593f29e"}]}}, "x%2Fvmware-nsxlib~stable%2Ftrain~I7093fbf70a76a7560c9174b209259f167b21f74f": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 05:11:38.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila~stable%2Fstein~I34b77c95aad7ee2b67ba876db8aa64bbc44adb79": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Frocky~I53547b5468ebfb535a7bcee7248a0ee1a30b445b": {"owner_id": 31506, "owner_name": "Lin PeiWen", "owner_email": "591171850@qq.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "x%2Fvmware-nsx-tempest-plugin~master~I887b4c1515e462162fccc12ba1731bc25bb05271": {"owner_id": 31191, "owner_name": "Datta Kumbhar", "owner_email": "dkumbhar@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 04:50:37.000000000", "_account_id": 28451, "name": "Shubham Kadam", "email": "shubhamk@vmware.com", "username": "shubhamk"}], "comments": {}}, "x%2Fvmware-nsxlib~master~I7093fbf70a76a7560c9174b209259f167b21f74f": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:12:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 0, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fadjutant~stable%2Ftrain~I1d88434b7cf9a7ec9be8136270de456a5a1fe131": {"owner_id": 10420, "owner_name": "Adrian Turjak", "owner_email": "devs+openstack@uncaught-exceptions.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 04:12:35.000000000", "_account_id": 10420, "name": "Adrian Turjak", "email": "devs+openstack@uncaught-exceptions.com", "username": "adriant"}], "comments": {}}, "openstack%2Fnova~stable%2Ftrain~I77ebada015f6522a300be4fa043fb8676458402b": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-03-17 12:39:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 21:27:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fcinder~stable%2Fstein~I1198c0d07a925d64a4e77b80f4bc22764bfa2f11": {"owner_id": 30428, "owner_name": "Xuchu Jiang", "owner_email": "jiangxuchu@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 09:34:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 2, "date": "2020-03-24 21:23:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-18 14:34:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-octavia~master~Id1bd4753a876cd7c41461fb28789f7c6f8679b3f": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": -1, "date": "2020-03-10 13:11:11.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "9170ca7a3264b8413c07b2b0e3d00ad36898da8e", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ec1bfbc6", "line": 8, "updated": "2020-03-04 20:51:46.000000000", "message": "I don't think the standard standalone covers octavia", "commit_id": "b11ce4963980c92de41c88473d58c853c767175e"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "e1e7c960777ff0b145d957c01564abc294241951", "unresolved": false, "patch_set": 2, "id": "1fa4df85_11dd06df", "line": 7, "updated": "2020-03-10 13:11:11.000000000", "message": "I think this job needs to be added to the check and gate queues. As it is now, we are just defining the job.", "commit_id": "a5366008a7f0dc8acc875776d3671e1de91f7222"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "e1e7c960777ff0b145d957c01564abc294241951", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b1f51259", "line": 16, "range": {"start_line": 16, "start_character": 8, "end_line": 16, "end_character": 30}, "updated": "2020-03-10 13:11:11.000000000", "message": "Why overriding the test whitelist? I think the job should run at least one Octavia tempest scenario test.", "commit_id": "a5366008a7f0dc8acc875776d3671e1de91f7222"}]}}, "openstack%2Fneutron~master~Ib46a9936512a89f84aa14b1e18a11028222d7077": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": -1, "date": "2020-03-10 22:07:21.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-03-10 15:55:44.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16615, "name": "abregman", "email": "abregman@redhat.com", "username": "abregman"}], "comments": {}}, "openstack%2Ftripleo-ci~master~I6425a0b934f2e89d1a40ef82ca046041f3a224f9": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftricircle~master~Ifa4fc23527da38e56f0fd8dac23100be29780e33": {"owner_id": 28071, "owner_name": "chzhang8", "owner_email": "zhangchi@szzt.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 01:04:06.000000000", "_account_id": 28071, "name": "chzhang8", "email": "zhangchi@szzt.com.cn", "username": "chzhang"}], "comments": {}}, "starlingx%2Fopenstack-armada-app~master~I34e92afe291c4b7f31f53f1b974ad5fdc47b9560": {"owner_id": 28570, "owner_name": "zhipeng liu", "owner_email": "zhipengs.liu@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28570, "name": "zhipeng liu", "email": "zhipengs.liu@intel.com", "username": "zhipengl"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 2, "date": "2020-03-24 20:33:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 1, "date": "2020-03-23 15:16:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28917, "name": "Joseph Richard", "email": "joseph.richard@windriver.com", "username": "jrichard"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 2, "date": "2020-03-24 15:23:02.000000000", "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"openstack-helm-infra/files/0010-Fix-rabbitmq-could-not-bind-port-to-ipv6-address-iss.patch": [{"author": {"_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}, "change_message_id": "69af07260ec8c3608f1950c6118b7f454c6ceb07", "unresolved": false, "patch_set": 5, "id": "df33271e_d089e126", "line": 90, "range": {"start_line": 90, "start_character": 3, "end_line": 90, "end_character": 21}, "updated": "2020-03-24 15:23:02.000000000", "message": "nit: This works but it's a bit weird to me to put this under \"manifests\" section as items here usually control the creation of a k8s resource. It's better to move this out of manifests.", "commit_id": "530933f9c2d6eb762a40a323bf11520b68fb29db"}, {"author": {"_account_id": 28570, "name": "zhipeng liu", "email": "zhipengs.liu@intel.com", "username": "zhipengl"}, "change_message_id": "433f6dedb72a87fcffcd569a1f50ed53985bb7d4", "unresolved": false, "patch_set": 5, "id": "df33271e_178a151a", "line": 90, "range": {"start_line": 90, "start_character": 3, "end_line": 90, "end_character": 21}, "in_reply_to": "df33271e_d089e126", "updated": "2020-03-25 01:51:07.000000000", "message": "Thanks Angie,\nI will see the comment from upstream as well.\nMay be we can move it to network section later.", "commit_id": "530933f9c2d6eb762a40a323bf11520b68fb29db"}]}}, "vexxhost%2Fopenstack-operator~master~Ibc39f9b9e3e21b18fb255ba2a67d2d8ba3b5c585": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 00:45:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}], "comments": {"builders/container.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_ebf3539d", "line": 14, "range": {"start_line": 14, "start_character": 1, "end_line": 14, "end_character": 11}, "updated": "2020-03-24 16:56:17.000000000", "message": "let's call this securityContext", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_0b0b178e", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 32}, "updated": "2020-03-24 16:56:17.000000000", "message": "let's remove this, we have to provide this", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_6b00e368", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 25}, "updated": "2020-03-24 16:56:17.000000000", "message": "and drop this too", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_8bf6078f", "line": 40, "range": {"start_line": 40, "start_character": 3, "end_line": 40, "end_character": 13}, "updated": "2020-03-24 16:56:17.000000000", "message": "SecuityContext", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_abf94b81", "line": 41, "range": {"start_line": 41, "start_character": 27, "end_line": 41, "end_character": 37}, "updated": "2020-03-24 16:56:17.000000000", "message": "let's rename this to SecurityContext", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_0b303756", "line": 58, "range": {"start_line": 46, "start_character": 0, "end_line": 58, "end_character": 4}, "updated": "2020-03-24 16:56:17.000000000", "message": "this is not needed anymore :)", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_eb4873cd", "line": 152, "range": {"start_line": 152, "start_character": 0, "end_line": 152, "end_character": 40}, "updated": "2020-03-24 16:56:17.000000000", "message": "i would add\n\n  if securityContext == nil {\n    return corev1.Container{}, errors.new(\"missing security context\")\n  }", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}, "change_message_id": "9a0b37cd52044b09e5cf9e2ac4a1d6c9b3338ea3", "unresolved": false, "patch_set": 4, "id": "df33271e_4b723fe7", "line": 152, "range": {"start_line": 152, "start_character": 0, "end_line": 152, "end_character": 40}, "in_reply_to": "df33271e_eb4873cd", "updated": "2020-03-24 17:05:52.000000000", "message": "Well, but the securityContext is the optional field.\nSo I think we can use the initial value.\nHow about your opinion?", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "1d6e25bd5eee835285c7378fa758091fb2d2b13e", "unresolved": false, "patch_set": 8, "id": "df33271e_7100d668", "line": 40, "range": {"start_line": 40, "start_character": 3, "end_line": 40, "end_character": 13}, "updated": "2020-03-24 18:03:38.000000000", "message": "same here", "commit_id": "4f060d2c1aa290c2ffc062eea79eb8e296388570"}, {"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "1d6e25bd5eee835285c7378fa758091fb2d2b13e", "unresolved": false, "patch_set": 8, "id": "df33271e_110b4a8e", "line": 41, "range": {"start_line": 41, "start_character": 27, "end_line": 41, "end_character": 37}, "updated": "2020-03-24 18:03:38.000000000", "message": "can we use SecurityContext here?", "commit_id": "4f060d2c1aa290c2ffc062eea79eb8e296388570"}], "builders/pod_spec.go": [{"author": {"_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, "change_message_id": "6b83e537e8d7b440d7728b64638322e5f9ef4f72", "unresolved": false, "patch_set": 4, "id": "df33271e_abd02bf9", "line": 24, "range": {"start_line": 22, "start_character": 0, "end_line": 24, "end_character": 7}, "updated": "2020-03-24 16:56:17.000000000", "message": "lets remove this now", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}], "builders/security_context.go": [{"author": {"_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}, "change_message_id": "e8553dcd7f25538d4c3827046688f0c959bf262f", "unresolved": false, "patch_set": 4, "id": "df33271e_4b835f54", "line": 15, "range": {"start_line": 15, "start_character": 1, "end_line": 15, "end_character": 45}, "updated": "2020-03-24 16:42:59.000000000", "message": "I think we can use the default values here", "commit_id": "fed56d47d6d1ad0410ba67ae58ed19c4f034b475"}], "controllers/mcrouter_controller.go": [{"author": {"_account_id": 31746, "name": "Oleksandr Kozachenko", "email": "okozachenko1203@gmail.com", "username": "okozachenko"}, "change_message_id": "39c4497b7677dedae8b28cf928515744b6b3cf5e", "unresolved": false, "patch_set": 10, "id": "df33271e_1a623f3f", "line": 94, "range": {"start_line": 94, "start_character": 9, "end_line": 94, "end_character": 35}, "updated": "2020-03-24 20:27:41.000000000", "message": "volumemount was missed before :)", "commit_id": "fabbd146235a93228c94eee62461dcb316747637"}]}}, "openstack%2Fpython-dracclient~stable%2Fqueens~I4cea95659db11747b1c8708e1dbe7cac53c0eaf9": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:29:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 0, "_account_id": 8068, "name": "David Paterson", "email": "davpat2112@gmail.com", "username": "davpat2112"}, {"value": 2, "date": "2020-03-25 01:31:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}, {"value": 0, "_account_id": 29863, "name": "Monica Pardhi", "email": "mpardhi1991@gmail.com", "username": "mpardhi"}], "comments": {}}, "openstack%2Fpython-dracclient~stable%2Fstein~I4cea95659db11747b1c8708e1dbe7cac53c0eaf9": {"owner_id": 10250, "owner_name": "Christopher Dearborn", "owner_email": "Christopher.Dearborn@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8068, "name": "David Paterson", "email": "davpat2112@gmail.com", "username": "davpat2112"}, {"value": 2, "date": "2020-03-24 15:49:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, {"value": 2, "date": "2020-03-25 01:14:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23847, "name": "Richard G. Pioso", "email": "richard.pioso@dell.com", "username": "richard.pioso"}, {"value": 0, "_account_id": 29863, "name": "Monica Pardhi", "email": "mpardhi1991@gmail.com", "username": "mpardhi"}], "comments": {}}, "opendev%2Fjeepyb~master~Ief0b091b716e3ea6224c0ac374a6066f0270bebc": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-25 00:17:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-24 23:53:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fhorizon~master~Ia9e1e807591d4428f585177f521d4cb9d463b917": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-03-24 15:47:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, {"value": 2, "date": "2020-03-24 10:39:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 2, "date": "2020-03-24 15:50:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "214ac3c037c5ee593ca735cc45bcee847eb19f4e", "unresolved": false, "patch_set": 4, "id": "df33271e_bdf4035d", "line": 10, "range": {"start_line": 10, "start_character": 27, "end_line": 10, "end_character": 31}, "updated": "2020-03-24 01:02:03.000000000", "message": "-> which", "commit_id": "ee5c1105d29591cfee94276720ca729f1224860e"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "4432550f3743995f9339d26a9c0dd6481447ed3a", "unresolved": false, "patch_set": 4, "id": "df33271e_69bc7405", "line": 10, "range": {"start_line": 10, "start_character": 27, "end_line": 10, "end_character": 31}, "in_reply_to": "df33271e_bdf4035d", "updated": "2020-03-24 10:39:33.000000000", "message": "Done", "commit_id": "ee5c1105d29591cfee94276720ca729f1224860e"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "36dbff4ca2d7a2ca3ec352bf30f4dad6c4272621", "unresolved": false, "patch_set": 4, "id": "df33271e_b176ec05", "line": 19, "updated": "2020-03-24 01:36:23.000000000", "message": "bug 1771559 reported this issue. Let's add it as a bug reference.", "commit_id": "ee5c1105d29591cfee94276720ca729f1224860e"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "4432550f3743995f9339d26a9c0dd6481447ed3a", "unresolved": false, "patch_set": 4, "id": "df33271e_89bf38fa", "line": 19, "in_reply_to": "df33271e_b176ec05", "updated": "2020-03-24 10:39:33.000000000", "message": "Done", "commit_id": "ee5c1105d29591cfee94276720ca729f1224860e"}], "requirements.txt": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "a1ae613f77f6484253187cf51f97ffc2a7b53541", "unresolved": false, "patch_set": 3, "id": "df33271e_5147a94c", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 14}, "updated": "2020-03-23 15:28:33.000000000", "message": "How about this? django-pyscss2 requires pyscss2, so I wonder we need django-pyscss, but django-pyscss2 has some more fixes.", "commit_id": "0fbd41b5d958d9bb5800df72d6242e91beaf40e0"}, {"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "cb1121f4a2c85c94fe092ff0831e9a1379e6c397", "unresolved": false, "patch_set": 3, "id": "df33271e_fd932ca2", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 14}, "in_reply_to": "df33271e_5147a94c", "updated": "2020-03-23 18:44:03.000000000", "message": "My fail. Will fix it right now", "commit_id": "0fbd41b5d958d9bb5800df72d6242e91beaf40e0"}]}}, "openstack%2Fnova~stable%2Fpike~I9fa1d509a3de405d6246fb8670612c65c10cc93b": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:10:52.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-21 20:23:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/compute/test_resource_tracker.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4733c26060c98d8240b138274c74d42ac8769470", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_38ac3f9e", "line": 1117, "updated": "2019-10-23 15:59:33.000000000", "message": "This was removed from the queens version:\n\nhttps://review.opendev.org/#/c/676285/", "commit_id": "0b35abdea559b32f08a34b5b0527c0f597c9c3bc"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4733c26060c98d8240b138274c74d42ac8769470", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b897cf45", "line": 1148, "range": {"start_line": 1148, "start_character": 23, "end_line": 1148, "end_character": 41}, "updated": "2019-10-23 15:59:33.000000000", "message": "change this", "commit_id": "0b35abdea559b32f08a34b5b0527c0f597c9c3bc"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4733c26060c98d8240b138274c74d42ac8769470", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_58881b21", "line": 1188, "updated": "2019-10-23 15:59:33.000000000", "message": "and here", "commit_id": "0b35abdea559b32f08a34b5b0527c0f597c9c3bc"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "4733c26060c98d8240b138274c74d42ac8769470", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_788b971d", "line": 1197, "range": {"start_line": 1197, "start_character": 23, "end_line": 1197, "end_character": 41}, "updated": "2019-10-23 15:59:33.000000000", "message": "and here", "commit_id": "0b35abdea559b32f08a34b5b0527c0f597c9c3bc"}]}}, "openstack%2Ftripleo-common~stable%2Frocky~Ifd28fd60e4bc1218acc24381d13534c227f2877e": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-02 17:31:54.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-01-30 10:30:23.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Ftripleo-upgrade~stable%2Ftrain~I98b232f370a56d2635e49c8be244b16909f12ae8": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:06:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "openstack%2Fneutron~master~I1b95d53f79c2c2b56a119c20017c3bf7fbc8550d": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-03-24 19:53:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-03-24 12:43:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/tests/unit/db/test_db_base_plugin_v2.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "fd92351d42056db61d22e1da663bd2ef766f47b2", "unresolved": false, "patch_set": 1, "id": "df33271e_672686ba", "line": 6511, "range": {"start_line": 6511, "start_character": 12, "end_line": 6511, "end_character": 50}, "updated": "2020-03-20 15:56:34.000000000", "message": "You don't need to nest the same transaction here. The context \"ctx\" session is active since L6505", "commit_id": "32fc70a733369e0b81524d832cb3509a4648704f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e9bb177d31de83f8cbd6796348550dfff3705d08", "unresolved": false, "patch_set": 1, "id": "df33271e_a6886b71", "line": 6511, "range": {"start_line": 6511, "start_character": 12, "end_line": 6511, "end_character": 50}, "in_reply_to": "df33271e_672686ba", "updated": "2020-03-24 10:31:23.000000000", "message": "True. But in fact this nested transaction was kind of needed  because we need to do session.flush() before creating RBAC object for this network later. So I replaced that with flush now.", "commit_id": "32fc70a733369e0b81524d832cb3509a4648704f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "1aa9f9273a7792b16921528b96d4874a50400364", "unresolved": false, "patch_set": 1, "id": "df33271e_6112f6b3", "line": 6559, "updated": "2020-03-20 14:57:43.000000000", "message": "I guess being a unit test this never caused problems :-o", "commit_id": "32fc70a733369e0b81524d832cb3509a4648704f"}, {"author": {"_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, "change_message_id": "477b6731d47d9d497fc641d96f4154cd1890188d", "unresolved": false, "patch_set": 1, "id": "df33271e_e1ef26ae", "line": 6559, "range": {"start_line": 6559, "start_character": 8, "end_line": 6559, "end_character": 45}, "updated": "2020-03-20 14:55:43.000000000", "message": "Should not this be in the object itself? NeutronDbObject.create() has \"with self.db_context_writer(self.obj_context)\" wrap", "commit_id": "32fc70a733369e0b81524d832cb3509a4648704f"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e9bb177d31de83f8cbd6796348550dfff3705d08", "unresolved": false, "patch_set": 1, "id": "df33271e_c6d12f5a", "line": 6559, "in_reply_to": "df33271e_6112f6b3", "updated": "2020-03-24 10:31:23.000000000", "message": "actually, without that I had problems with some UT because FIP object was \"already attached to session '10' and this is '11'\"", "commit_id": "32fc70a733369e0b81524d832cb3509a4648704f"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "a7d01f9d949f5895cff5aff37584cf6f7e793130", "unresolved": false, "patch_set": 2, "id": "df33271e_9f512a12", "line": 6513, "updated": "2020-03-24 12:43:26.000000000", "message": "yeah, much better", "commit_id": "d982a68446ad9b9c432ab2788900993aa21e135a"}]}}, "openstack%2Fopenstacksdk~master~I5855a6faa706adeaf738a797af0048985bffe65f": {"owner_id": 13692, "owner_name": "Roman Dobosz", "owner_email": "gryf73@gmail.com", "labels": [{"value": 0, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 2, "date": "2020-03-24 16:21:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-20 12:53:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 1, "date": "2020-03-20 12:50:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-03-24 23:06:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"releasenotes/notes/add-sg-rules-bulk-f36a3e2326d74867.yaml": [{"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "4a8fcdef03761555031e4879db2acb2199e31aa3", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0ee45cdf", "line": 3, "range": {"start_line": 3, "start_character": 66, "end_line": 3, "end_character": 67}, "updated": "2020-03-20 12:47:05.000000000", "message": "Trailing whitespaces.", "commit_id": "a2419ea561a585ffb60d71c8723ea3e736b10be8"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b43f4aa6ab75e5353a380fa414b6468f26d1eead", "unresolved": false, "patch_set": 1, "id": "1fa4df85_8ef04c93", "line": 3, "range": {"start_line": 3, "start_character": 66, "end_line": 3, "end_character": 67}, "in_reply_to": "1fa4df85_0ee45cdf", "updated": "2020-03-20 12:48:34.000000000", "message": "OHNOES.", "commit_id": "a2419ea561a585ffb60d71c8723ea3e736b10be8"}]}}, "openstack%2Fkolla~stable%2Ftrain~Iec3d51abe50b05f90f764a4058be620cad1f9388": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:05:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-03-24 16:05:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Icef75d5d7ba3b3e0485c2998d2ae5259dd9a1119": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 19:54:38.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-24 15:21:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24245, "name": "Harald Jens\u00e5s", "email": "hjensas@redhat.com", "username": "harald.jensas"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I90180d5caa6cd7873220fcc91570c92ae7a234e5": {"owner_id": 17591, "owner_name": "Steve Wilkerson", "owner_email": "wilkers.steve@gmail.com", "labels": [{"value": 2, "date": "2020-03-24 20:38:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:29:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I0367a657ddf440f0b73c4de5346306f12439db15": {"owner_id": 26343, "owner_name": "Jose Luis Franco", "owner_email": "jfrancoa@redhat.com", "labels": [{"value": 2, "date": "2020-03-24 20:05:55.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-03-24 14:19:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-octaviaclient~master~Ifb5d9fc9d1833d954f4fedd9d8001dd0d5c2a113": {"owner_id": 1131, "owner_name": "Brian Haley", "owner_email": "haleyb.dev@gmail.com", "labels": [{"value": 2, "date": "2020-01-15 00:35:22.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~I6ce78e831b61791b60cbdd35a07cfc7367153d64": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 22:31:21.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-23 16:51:01.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I8e71a1f6df732c352b018472c30c662f1e726aaa": {"owner_id": 21129, "owner_name": "Alan Bishop", "owner_email": "abishop@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-03-23 23:34:27.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-03-23 20:35:19.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {}}, "openstack%2Frally-openstack~master~Id3ba48db92dc92b9be128a50ee4f560e621d1423": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:20:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {".zuul.d/zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "4aaf39370130c26f2f15c9caa95af3544353f9cd", "unresolved": false, "patch_set": 2, "id": "df33271e_3fb0d5f4", "line": 11, "range": {"start_line": 1, "start_character": 2, "end_line": 11, "end_character": 0}, "updated": "2020-03-24 19:25:50.000000000", "message": "Job rally-tox-cover in openstack/rally-openstack is not permitted to shadow job rally-tox-cover in openstack/rally", "commit_id": "e3b01a4dc5549a198d94241a25d0f66ab35c47dc"}]}}, "opendev%2Finfra-specs~master~Iba62d9b22a9d7d4d1e6a6b5887c01a7f003196b4": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 23:02:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 1, "date": "2020-03-24 23:26:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Frally-openstack~master~I8ca443d191f94de88f2c40cf0ebb9c1493bcd785": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 21:09:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "x%2Fvmware-nsxlib~master~I33b4101a0e0c0f4088e10776e126cc495dabd89c": {"owner_id": 24247, "owner_name": "Anna Khmelnitsky", "owner_email": "akhmelnitsky@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-22 06:33:03.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2020-03-24 22:44:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsystem-config~master~I6f139d2b3036ef0ecaddf3a9a225faae3a2b0450": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-03-24 21:55:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-24 22:03:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/templates/clouds/bridge_all_clouds.yaml.j2": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "28e3c977732ff5acfa91b4b269837a2b853d7a81", "unresolved": false, "patch_set": 2, "id": "df33271e_2cd1dfce", "line": 70, "range": {"start_line": 70, "start_character": 43, "end_line": 70, "end_character": 94}, "updated": "2020-03-24 04:14:22.000000000", "message": "I can not see that this (/v2) exists.  What seems to be the case is that you can talk to the v1 API with a subset of V2 commands (https://developer.rackspace.com/docs/cloud-block-storage/v1/general-api-info/cbsv1-methods-vs-cinderv2-methods/)\n\nThe other thing is that the /v1 API requires the project_id after it.\n\nSo this should be\n\n https://dfw.blockstorage.api.rackspacecloud.com/v1/{{ ... projectid }}\n\nHOWEVER I think there are two more bugs\n\n1) the cinderclient doesn't correctly obey --os-endpoint commands\n\n2) openstacksdk is not setup to, or is not correctly passing os-endpoint commands along to the cinderclient as part of volume operations.\n\nI'm unsure how \"block_storage_endpoint_override\" is supposed to be parsed and munged into this variable; I've filed https://storyboard.openstack.org/#!/story/2007459", "commit_id": "d5bb4a4cea66761abf071555a2116254e42b16b8"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "3fadf2bd383e306a257a0ed1367c54c1ec7e7d49", "unresolved": false, "patch_set": 2, "id": "df33271e_ff502d35", "line": 70, "range": {"start_line": 70, "start_character": 43, "end_line": 70, "end_character": 94}, "in_reply_to": "df33271e_2cd1dfce", "updated": "2020-03-24 19:51:48.000000000", "message": "it turns out i am totally wrong about this, and if you query with\n\n import openstack\n openstack.enable_logging(http_debug=False)\n\n c = openstack.connect(cloud='openstackci-rax', region_name='DFW')\n print(c.block_storage.get('https://dfw.blockstorage.api.rackspacecloud.com/').json())\n\nyou see there is a /v2 endpoint.\n\nhowever, i think it still needs the project-id", "commit_id": "d5bb4a4cea66761abf071555a2116254e42b16b8"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "bc16a8067bbeb6d61889144939dbb7c9b2733613", "unresolved": false, "patch_set": 3, "id": "df33271e_ba5193db", "line": 86, "range": {"start_line": 86, "start_character": 114, "end_line": 86, "end_character": 116}, "updated": "2020-03-24 20:07:55.000000000", "message": "This should be clouds.openstackjenkins_rax_project_id there are two accounts and projects in use here.", "commit_id": "d770cf8abdb6f9bef04093bfa7d7397be3982a2d"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "49a4a7ce9a343b67ed445eed4446ec3c33552130", "unresolved": false, "patch_set": 3, "id": "df33271e_dac5773e", "line": 86, "range": {"start_line": 86, "start_character": 114, "end_line": 86, "end_character": 116}, "in_reply_to": "df33271e_ba5193db", "updated": "2020-03-24 20:20:47.000000000", "message": "Indeed!  sorry copy-paste error", "commit_id": "d770cf8abdb6f9bef04093bfa7d7397be3982a2d"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "0412707f824ec6dfdda4dd7ccf49eaf9e90f88a5", "unresolved": false, "patch_set": 4, "id": "df33271e_25be0465", "line": 85, "updated": "2020-03-24 21:33:29.000000000", "message": "Missing\n\n  - name: DFW\n     values:", "commit_id": "308f11c4dfb66cdeeda46b17e8d8f18f3ccbe2b0"}]}}, "opendev%2Fsystem-config~master~Ic6b3ecc62cdfc7c486a912ba4863c7c4c7734e0a": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 19:41:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-24 22:04:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fdiskimage-builder~master~Ie2481ea8a02b7b0720e46fa179f24badf4aa25c5": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-20 06:06:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 21:39:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Frally-openstack~master~I0dc5ebdde39537d42791cf7b9c2e8a0516b996b1": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 19:29:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {".zuul.d/zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a335d929ad0d6fd0913121b06357589fe8671c97", "unresolved": false, "patch_set": 1, "id": "df33271e_5acfb07e", "line": 80, "range": {"start_line": 1, "start_character": 2, "end_line": 80, "end_character": 0}, "updated": "2020-03-24 13:58:55.000000000", "message": "Job rally-tox-cover not defined", "commit_id": "c1b8fb2df92f30c6c794a1e388e320d75923f21c"}]}}, "openstack%2Fmanila~master~I84070b3f96784e934f4f35d8d8f8f45f340b9460": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~Ie58bc904a50da9a5541b8c956953526c45228fb3": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-08-10 03:00:25.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30722, "name": "WooHyung Han", "email": "techhanx@gmail.com", "username": "whhan91"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_ceilometer~master~Ibcfb82f2b34c0f9db299262ed3b200f87953e043": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:34:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 19:10:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28008, "name": "Guilherme", "display_name": "Guilherme Steinm\u00fcller", "email": "gsteinmuller@vexxhost.com", "username": "guilhermesp"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "opendev%2Fsystem-config~master~Ie5c4602741dcdb9cc4e87b9286a8f6b8b7ed7934": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:47:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-24 16:37:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "opendev%2Fpuppet-openstackid~master~I22b14e30738254ebd3e847003f16a4ad3863ed8a": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:47:12.000000000", "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {"templates/vhost.erb": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "17c8336857752a1a27196c21cd087b017a09640b", "unresolved": false, "patch_set": 1, "id": "df33271e_7a526b69", "line": 49, "updated": "2020-03-24 20:28:31.000000000", "message": "2 years! (I've only felt brave enough to set 1 year on my personal domains.) includeSubdomains is probably unwaranted unless you actually expect to have subdomains of the site domain in use for something. I've not tried HSTS preloading yet, but presumably you're planning to submit the site to https://hstspreload.org/ once this takes effect.", "commit_id": "a7c3a754aea5a695a4c78613ce90f62237652a6b"}, {"author": {"_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}, "change_message_id": "07fdba19130faf727f65c924f56e5a3bd507ead6", "unresolved": false, "patch_set": 1, "id": "df33271e_1a1a3f7c", "line": 49, "in_reply_to": "df33271e_1abebf64", "updated": "2020-03-24 20:39:38.000000000", "message": "so reading this \n\nIn order to be accepted to the HSTS preload list through this form, your site must satisfy the following set of requirements:\n\nServe a valid certificate.\nRedirect from HTTP to HTTPS on the same host, if you are listening on port 80.\nServe all subdomains over HTTPS.\nIn particular, you must support HTTPS for the www subdomain if a DNS record for that subdomain exists.\nServe an HSTS header on the base domain for HTTPS requests:\nThe max-age must be at least 31536000 seconds (1 year).\nThe includeSubDomains directive must be specified.\nThe preload directive must be specified.\nIf you are serving an additional redirect from your HTTPS site, that redirect must still have the HSTS header (rather than the page it redirects to).\n\nits seems that after all the includeSubDomains should be added to be able to include this domain at https://hstspreload.org/\n\nregards", "commit_id": "a7c3a754aea5a695a4c78613ce90f62237652a6b"}, {"author": {"_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}, "change_message_id": "cfa7558c42469cba5d56b2641ea702c4ebea77dc", "unresolved": false, "patch_set": 1, "id": "df33271e_1abebf64", "line": 49, "in_reply_to": "df33271e_7a526b69", "updated": "2020-03-24 20:34:21.000000000", "message": "fixed\nregards", "commit_id": "a7c3a754aea5a695a4c78613ce90f62237652a6b"}]}}, "opendev%2Fjeepyb~master~I428b46af2c04867582f170b48c64fc6ff087052c": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:19:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-03-24 20:21:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~Ia99900ece4f1cd29769b22ddaa3965789d719556": {"owner_id": 30547, "owner_name": "Bram Verschueren", "owner_email": "verschueren.bram@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 17:37:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-03-24 19:55:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~Idd6880ba4e8db348ba2c8f994e8a81ab99ef46bc": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 21:17:41.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~Ibb2820add9b2fedaf5a8b1a77babf043f6641724": {"owner_id": 970, "owner_name": "Dean Troyer", "owner_email": "dtroyer@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-03-23 17:36:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-01-14 16:03:08.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-03-24 19:55:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"openstackclient/tests/unit/network/v2/test_subnet.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "c50c4d6d8b6f36fe530f0aa4beb969d5e300b94e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_25bc5a06", "line": 463, "updated": "2020-01-14 02:05:54.000000000", "message": "Would be great to use ddt to cut down on some duplication here. Pretty minor though.", "commit_id": "945776dace11fdee974d9d9f4e5974b3c087e21b"}, {"author": {"_account_id": 970, "name": "Dean Troyer", "email": "dtroyer@gmail.com", "username": "dtroyer"}, "change_message_id": "030f74defdb28341bc323094e4e5af56e2a7f209", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6b59b95a", "line": 463, "in_reply_to": "3fa7e38b_25bc5a06", "updated": "2020-01-14 15:53:04.000000000", "message": "This was copy-paste from the _tag tests below, I kept the structure as-is otherwise, including the bit noted below, which I will fix...", "commit_id": "945776dace11fdee974d9d9f4e5974b3c087e21b"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4fd389de1811dcea8703291ab8dfe75cdb3a1d1f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4256212e", "line": 483, "range": {"start_line": 480, "start_character": 8, "end_line": 483, "end_character": 62}, "updated": "2020-01-14 14:48:52.000000000", "message": "Can't you just add\n\n('dns_publish_fixed_ip', publish_dns),\n\nto the verifylist definition above? Looks much simpler to me.", "commit_id": "945776dace11fdee974d9d9f4e5974b3c087e21b"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "a5043aefefc01592acadb279145440a1ef4002a7", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_28e0a727", "line": 483, "range": {"start_line": 480, "start_character": 8, "end_line": 483, "end_character": 62}, "in_reply_to": "3fa7e38b_4256212e", "updated": "2020-01-14 14:51:33.000000000", "message": "+1", "commit_id": "945776dace11fdee974d9d9f4e5974b3c087e21b"}], "releasenotes/notes/bug-1784879-9b632174d4af853f.yaml": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "40902110b1d776b7ec69b614cdf8d0a567434968", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_16071a21", "line": 4, "updated": "2020-01-13 19:46:47.000000000", "message": "extra ' chars in both these", "commit_id": "43bccd9388d15a2d8fc4cdc92c019f8b6fcc45a5"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "40902110b1d776b7ec69b614cdf8d0a567434968", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_36049619", "line": 8, "updated": "2020-01-13 19:46:47.000000000", "message": "Do we actually need a release note when adding a test?  Also, this speaks as if it's actually adding the option itself, or maybe it was just forgotten in the other change.", "commit_id": "43bccd9388d15a2d8fc4cdc92c019f8b6fcc45a5"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4fd389de1811dcea8703291ab8dfe75cdb3a1d1f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_48416336", "line": 8, "range": {"start_line": 8, "start_character": 46, "end_line": 8, "end_character": 68}, "updated": "2020-01-14 14:48:52.000000000", "message": "Nit: This is actually a neutron bug, LP will still redirect to the correct page, but this looks a bit confusing to me.", "commit_id": "945776dace11fdee974d9d9f4e5974b3c087e21b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "795c66618b79fe21574033491e9270d15b25a4b6", "unresolved": false, "patch_set": 3, "id": "df33271e_277623da", "updated": "2020-03-23 17:36:30.000000000", "message": "In theory, we should probably drop this now since it didn't get in before 5.0.0. However, I'm okay including it since some notice beats no notice, even if it's against the wrong version", "commit_id": "68aa35f35f21476085e25ad2e3da51a1961948e4"}]}}, "opendev%2Fsystem-config~master~Ib4621b38d78fb61311a65dd3878a0a61e799f367": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:21:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-21 16:45:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 1, "date": "2020-03-21 15:49:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "x%2Fgroup-based-policy~master~I7226129135a59d35fa8d76d132163b2241334fed": {"owner_id": 1689, "owner_name": "Robert Kukura", "owner_email": "rk@theep.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:26:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 0, "_account_id": 1689, "name": "Robert Kukura", "email": "rk@theep.net", "username": "rkukura"}, {"value": 0, "_account_id": 490, "name": "Sumit Naiksatam", "email": "sumitnaiksatam@gmail.com", "username": "snaiksat"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2020-03-24 17:54:29.000000000", "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}, {"value": 0, "_account_id": 7987, "name": "Ivar Lazzaro", "email": "ivarlazzaro@gmail.com", "username": "Ivar"}], "comments": {}}, "airship%2Fpegleg~master~I2860d86499291f18f7a98a6b5be0289437c575d3": {"owner_id": 31193, "owner_name": "Blake Dittmer", "owner_email": "blakedittmer@yahoo.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "5fd4ed0203b2915ab94ff321a6dc16d0c432fc11", "unresolved": false, "patch_set": 1, "id": "df33271e_9a248fc8", "line": 60, "range": {"start_line": 55, "start_character": 2, "end_line": 60, "end_character": 0}, "updated": "2020-03-24 20:38:26.000000000", "message": "The nodeset \"pegleg-single-node\" was not found.", "commit_id": "52336fbb12f16ad26d2e5b1678efe0811d5d9aba"}]}}, "openstack%2Fopenstack-ansible~master~I88087e3b4d6a688670e40165f127049956705801": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:17:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-16 13:18:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {"zuul.d/jobs.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "51e7fe840cf15687e68531b5fbef48de78b47dae", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1c20d7f6", "line": 144, "range": {"start_line": 16, "start_character": 2, "end_line": 144, "end_character": 0}, "updated": "2020-03-07 15:55:28.000000000", "message": "Unknown project openstack/networking-calico", "commit_id": "0ad17e8b91da16efb284fb733355925d2f5d7647"}]}}, "openstack%2Fopenstacksdk~master~I50b1020c896d7d8a7d58e62de778bb8c2b6e970e": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 07:53:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-03-23 10:02:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 2, "date": "2020-03-24 13:41:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fcharm-neutron-openvswitch~master~Ie744c1ff4c6651633d12dcd4de28d5e7a3e8646f": {"owner_id": 20870, "owner_name": "Alex Kavanagh", "owner_email": "alex.kavanagh@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:10:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I3a4883bc0c8dfa480ce5fd10ec40f3a9f0cff217": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:03:36.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-18 19:02:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-03-19 08:38:52.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}], "comments": {}}, "openstack%2Fcharm-placement~master~If43d096c6bd5c57d00d92c54bc0ce464ba50bfa1": {"owner_id": 20870, "owner_name": "Alex Kavanagh", "owner_email": "alex.kavanagh@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 20:04:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "x%2Franger-tempest-plugin~master~I948e705a6f107fc0413456b1f21d006f2719920d": {"owner_id": 29585, "owner_name": "Jeremy Houser", "owner_email": "jeremyhouser@protonmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18524, "name": "Hari Singh", "email": "hs571j@att.com", "username": "hs571j"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 19391, "name": "Chi Lo", "email": "cl566n@att.com", "username": "cl566n"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21111, "name": "STEW TY", "email": "punsoca@gmail.com", "username": "stewie925"}, {"value": -2, "date": "2020-03-24 20:08:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29585, "name": "Jeremy Houser", "email": "jeremyhouser@protonmail.com", "username": "jh629g"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22786, "name": "Aaron McLean", "email": "am9518@att.com", "username": "am9518"}], "comments": {}}, "x%2Franger-tempest-plugin~master~Ia5956f446833f3961fc487191ff7578677aeb07e": {"owner_id": 31112, "owner_name": "ansuman bebarta", "owner_email": "ansuman.bebarta@gmail.com", "labels": [{"value": 0, "_account_id": 18524, "name": "Hari Singh", "email": "hs571j@att.com", "username": "hs571j"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19391, "name": "Chi Lo", "email": "cl566n@att.com", "username": "cl566n"}, {"value": 1, "date": "2020-01-14 11:44:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 19519, "name": "Abhishek Jaiswal", "email": "abhishekjaiswal.kol@gmail.com", "username": "aj355y"}, {"value": 1, "date": "2020-01-14 10:54:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31112, "name": "ansuman bebarta", "email": "ansuman.bebarta@gmail.com", "username": "ansumanbebarta"}, {"value": 0, "_account_id": 21111, "name": "STEW TY", "email": "punsoca@gmail.com", "username": "stewie925"}, {"value": 2, "date": "2020-01-20 15:36:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29585, "name": "Jeremy Houser", "email": "jeremyhouser@protonmail.com", "username": "jh629g"}, {"value": 0, "_account_id": 22786, "name": "Aaron McLean", "email": "am9518@att.com", "username": "am9518"}, {"value": 0, "_account_id": 23363, "name": "Pradeep Kumar", "email": "pk5294@att.com", "username": "pradeepkumarks"}], "comments": {}}, "openstack%2Fvirtualbmc~master~I0aaf3c8114de03c8eac00f885928fc4d85d4ac08": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 08:34:51.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 08:53:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-03-24 19:00:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fsushy-tools~master~I15feaa53a505d2464b5d123ec8c670006ea03c61": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 08:34:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 19:00:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fcharm-rabbitmq-server~master~I6b3eee1006b218843b8dab17c5bc64a83ef9c54c": {"owner_id": 19298, "owner_name": "Nicolas Bock", "owner_email": "nicolas.bock@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 19:48:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2424, "name": "Felipe Reyes", "email": "felipe.reyes@canonical.com", "username": "freyes"}, {"value": 1, "date": "2020-03-24 18:34:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 1, "date": "2020-03-24 18:39:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2276, "name": "Jorge Niedbalski", "email": "jorge.niedbalski@canonical.com", "username": "niedbalski"}, {"value": 1, "date": "2020-03-24 18:37:51.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}], "comments": {}}, "openstack%2Fironic~master~I1745d3035439c329a00d59bfe7f0c28473a6c4bb": {"owner_id": 11292, "owner_name": "Arne Wiebalck", "owner_email": "Arne.Wiebalck@cern.ch", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-03-24 09:55:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 2, "date": "2020-03-24 19:19:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"doc/source/admin/retirement.rst": [{"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "fc77dcdfa5235b1255bdc39f4326fdbd446942e4", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fc93f65a", "line": 29, "range": {"start_line": 29, "start_character": 57, "end_line": 29, "end_character": 68}, "updated": "2020-03-17 12:56:11.000000000", "message": "retired", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "ad79401ea2f24ef2b4b0cb52fb5acb2f25139056", "unresolved": false, "patch_set": 1, "id": "1fa4df85_3c13ce68", "line": 29, "range": {"start_line": 29, "start_character": 57, "end_line": 29, "end_character": 68}, "in_reply_to": "1fa4df85_fc93f65a", "updated": "2020-03-17 13:13:26.000000000", "message": "Done", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "f5495dca28cfea8cd47c03b8284d70ff084098b9", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2992b2a0", "line": 46, "updated": "2020-03-17 11:36:46.000000000", "message": "retired-reason?", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "ad79401ea2f24ef2b4b0cb52fb5acb2f25139056", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1c08522b", "line": 46, "in_reply_to": "1fa4df85_2992b2a0", "updated": "2020-03-17 13:13:26.000000000", "message": "Done", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "f5495dca28cfea8cd47c03b8284d70ff084098b9", "unresolved": false, "patch_set": 1, "id": "1fa4df85_c990be98", "line": 62, "updated": "2020-03-17 11:36:46.000000000", "message": "::", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "ad79401ea2f24ef2b4b0cb52fb5acb2f25139056", "unresolved": false, "patch_set": 1, "id": "1fa4df85_5f0b1c23", "line": 62, "in_reply_to": "1fa4df85_c990be98", "updated": "2020-03-17 13:13:26.000000000", "message": "Done", "commit_id": "77c60f4501ce4c804742e1153453d64c0200342b"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "8f4548ee7795e53d9d9b4f3cfe72be99bd1499fa", "unresolved": false, "patch_set": 3, "id": "df33271e_e075409a", "line": 41, "range": {"start_line": 41, "start_character": 5, "end_line": 41, "end_character": 11}, "updated": "2020-03-23 20:49:49.000000000", "message": "I think you mean available?", "commit_id": "5398e56db6747d2fc7d0dded1bbd444759ffe1ad"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "a7abad713052b548918de81ed8d1c77d1d505707", "unresolved": false, "patch_set": 3, "id": "df33271e_2099e86d", "line": 41, "range": {"start_line": 41, "start_character": 5, "end_line": 41, "end_character": 11}, "in_reply_to": "df33271e_e075409a", "updated": "2020-03-23 21:20:04.000000000", "message": "Yes, good catch!", "commit_id": "5398e56db6747d2fc7d0dded1bbd444759ffe1ad"}]}}, "openstack%2Fkolla~stable%2Ftrain~I8cac0ffa5c52b5b6060b8072d7d11c6e8bd9943b": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-03-24 15:03:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {"kolla/common/config.py": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "28e9dc387599eebaad3422a02e2b56b0e1a4e8f5", "unresolved": false, "patch_set": 1, "id": "df33271e_9592abf5", "side": "PARENT", "line": 444, "updated": "2020-03-24 14:58:40.000000000", "message": "well, well, going back?", "commit_id": "2d87de55aa51549de5746539a257f0f035affd0d"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "ef3babef63b0b08292b46240c601db3822017eac", "unresolved": false, "patch_set": 1, "id": "df33271e_b5352ffa", "side": "PARENT", "line": 444, "in_reply_to": "df33271e_9592abf5", "updated": "2020-03-24 15:02:57.000000000", "message": "Oh yeah. Need hrw's patch. https://review.opendev.org/#/c/710229/", "commit_id": "2d87de55aa51549de5746539a257f0f035affd0d"}]}}, "openstack%2Fcyborg~master~Icb2d31eeed64ca935febef2402fcb60ba29cf2e5": {"owner_id": 11604, "owner_name": "sean mooney", "owner_email": "smooney@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-20 14:57:41.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "352c4bce8f1301a3961b0bcafac6732e94daf7b0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fb9eb3f8", "line": 18, "range": {"start_line": 18, "start_character": 17, "end_line": 18, "end_character": 23}, "updated": "2020-02-20 14:57:41.000000000", "message": "single", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "352c4bce8f1301a3961b0bcafac6732e94daf7b0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7b6883f2", "line": 19, "updated": "2020-02-20 14:57:41.000000000", "message": "Maybe this is easier, but why can't we just go based on\n\ndisable_service cyborg-api\ndisable_service cyborg-cond\n\nwhen we're on a compute-only subnode? Isn't that more conventional for devstack?", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "94127b2809b0fe09ff3418d76153e4cb2f1beaed", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0157a0f7", "line": 19, "in_reply_to": "3fa7e38b_7b6883f2", "updated": "2020-02-20 15:51:13.000000000", "message": "yep it is.\n\ni had found that when we added the mode option to networking-ovs-dpdk people made less mistakes but we did not support enable_plugin or disable plugin because it was not normal partic to use that with plugin wehn we wrote it in kilo.\n\nover time that convention has started to be used in plugins too so i guss this is not needed\n\nthis is more a nice to have but config generation changes are neeed\n\nill split this into two patches and we can figure out  if the mode option is desireable later.", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}], "devstack/lib/cyborg": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "352c4bce8f1301a3961b0bcafac6732e94daf7b0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3b6a0bea", "line": 23, "range": {"start_line": 23, "start_character": 11, "end_line": 23, "end_character": 20}, "updated": "2020-02-20 14:57:41.000000000", "message": "renaming", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "f7a57637e59c0cb3b9a6f7c965bbb139e7b82b98", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_21589c56", "line": 158, "updated": "2020-02-20 16:30:20.000000000", "message": "This line is what breaks the default deployment for me, which is storyboard task #38811:\n\nhttps://storyboard.openstack.org/#!/story/2007310\n\nMy thinking is that we probably want to just nuke this line and let the cyborg agent get the host from the oslo.service bit just like nova does by default in devstack. It's not super critical so I guess we'll just leave that open and slide that change in on top of this when it gets closer. Probably best not to mix that functionality change with any of this cleanup.", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}], "devstack/settings": [{"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "a404861927b6cf1ed942f0570bf873b684076efa", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e6b2a105", "line": 39, "range": {"start_line": 24, "start_character": 0, "end_line": 39, "end_character": 4}, "updated": "2020-02-20 08:35:07.000000000", "message": "I like this idea. It simply the deployment. \ncyborg-cond and cyborg-api should always in one node together? \nCan cyborg-cond be separated with cyborg-api?\n\nI have see you also update the guide doc.\nBut seems deployers still can can use the legacy config.\nenable_service or disable_service. \nWill there be some conflict?", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "eff823cd35aeba74c8c7f429ee10669ddf5b30e8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8004ee14", "line": 39, "range": {"start_line": 24, "start_character": 0, "end_line": 39, "end_character": 4}, "in_reply_to": "3fa7e38b_e6b2a105", "updated": "2020-02-20 13:26:06.000000000", "message": "so yes  you could run the api and conductor on different nodes. \n\nregarding if there is a conflict with the legacy way  i dont recall which get precedence. if the local.conf is sourced a second time after this file is loaded the it would take precidence which i think is what you want to happen.\n\ni could add legacy as another option that is the same as all-in-one but onely have it enable the servicves if you have not already enabled or disbled any cyborg services in the local.conf.\n\nif i make legacy the default the behavior would be the same as it was before and you could use enable/disable_serivce\nwithout conflict or you choudl choose to use the slimilar mode options whichever you prefer.", "commit_id": "1a6f266b72c12f8ce1e5688c457a978f5c59f5af"}], "doc/source/contributor/devstack_setup.rst": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "352c4bce8f1301a3961b0bcafac6732e94daf7b0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_bb47db79", "side": "PARENT", "line": 151, "updated": "2020-02-20 14:57:41.000000000", "message": "Yeah, this... isn't this more conventional?", "commit_id": "89ed92a5f2316602bc2b953216e0e25f0e5bb140"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "94127b2809b0fe09ff3418d76153e4cb2f1beaed", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e6513a33", "side": "PARENT", "line": 151, "in_reply_to": "3fa7e38b_bb47db79", "updated": "2020-02-20 15:51:13.000000000", "message": "in a way it has become more common.\nmost plugings dont have multiple ways of installing in my experience \n\nthe mode option is how we handled it in networking-ovs-dpdk.\nhttps://opendev.org/x/networking-ovs-dpdk/src/branch/master/devstack/settings#L69-L78\n\nhowever i dont think normal for the plugins to auto enable the services with a direct call to enabel_plugin the way cyborg currently does.\n\nfor networking-ovn ectra you use enabe_plugin in the local.conf.\n\ni can drop the mode chagne from this patch and jsut keep the other refactoring or i can support and document both.\n\ni had original intended for both to work but i did not test that.", "commit_id": "89ed92a5f2316602bc2b953216e0e25f0e5bb140"}]}}, "openstack%2Fopenstack-helm-infra~master~I6b759beff9fd3166a9868a4d71319836f272bc25": {"owner_id": 29131, "owner_name": "diwakar thyagaraj", "owner_email": "diwakar.chitoor.thyagaraj@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 17:53:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 2, "date": "2020-03-19 17:55:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "07b0a8a21d5af50bc80ba8dc3abff624a2434495", "unresolved": false, "patch_set": 56, "id": "1fa4df85_9a652220", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 5}, "updated": "2020-03-17 14:24:53.000000000", "message": "Is this still a WIP?", "commit_id": "3d822c86371cc43108c6e802215309d33d57c907"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "07b0a8a21d5af50bc80ba8dc3abff624a2434495", "unresolved": false, "patch_set": 56, "id": "1fa4df85_3a6c2e07", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 24}, "updated": "2020-03-17 14:24:53.000000000", "message": "What does this fix?", "commit_id": "3d822c86371cc43108c6e802215309d33d57c907"}], "zuul.d/jobs.yaml": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "b13af7ff67d2bac9b2bd3a54d2d72267c114e545", "unresolved": false, "patch_set": 70, "id": "1fa4df85_0da1d5f8", "side": "PARENT", "line": 143, "range": {"start_line": 143, "start_character": 9, "end_line": 143, "end_character": 72}, "updated": "2020-03-19 14:06:35.000000000", "message": "What's the reason for this change?", "commit_id": "4f30b1361e2b596ce8760fd593f08d4f9a6639fe"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "5c4576a7bc7aa91980d74b504e1c5ca4919776be", "unresolved": false, "patch_set": 70, "id": "1fa4df85_ad0a0176", "side": "PARENT", "line": 143, "range": {"start_line": 143, "start_character": 9, "end_line": 143, "end_character": 72}, "in_reply_to": "1fa4df85_0da1d5f8", "updated": "2020-03-19 14:22:58.000000000", "message": "for fluentbit this script (065-fluentd) dees not deploy it and when i add both daemonset and deployment script, fluentd-logging services is already deployed and was failing.", "commit_id": "4f30b1361e2b596ce8760fd593f08d4f9a6639fe"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "43399d825c0a6837e02023abbd1a39263645caae", "unresolved": false, "patch_set": 70, "id": "1fa4df85_0d7c7581", "side": "PARENT", "line": 345, "range": {"start_line": 321, "start_character": 0, "end_line": 345, "end_character": 60}, "updated": "2020-03-19 14:05:55.000000000", "message": "Surprised this didn't get caught in merge conflict", "commit_id": "4f30b1361e2b596ce8760fd593f08d4f9a6639fe"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "5c4576a7bc7aa91980d74b504e1c5ca4919776be", "unresolved": false, "patch_set": 70, "id": "1fa4df85_cde89db4", "side": "PARENT", "line": 345, "range": {"start_line": 321, "start_character": 0, "end_line": 345, "end_character": 60}, "in_reply_to": "1fa4df85_0d7c7581", "updated": "2020-03-19 14:22:58.000000000", "message": "Yes Same here. Might be last time i did rebase before the previous PS got merged.", "commit_id": "4f30b1361e2b596ce8760fd593f08d4f9a6639fe"}]}}, "openstack%2Fmanila~stable%2Ftrain~I5f358266739f1c42343d5a0c5ec8109c8fcaac4d": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:58:23.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-03-24 18:01:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 1, "date": "2020-03-24 18:01:36.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fopenstack-ansible-repo_server~stable%2Frocky~Iaa2e52b26ba89802e06665ebe43fdf18e515abd7": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-18 09:12:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-17 17:54:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 0, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}], "comments": {}}, "openstack%2Frally~master~Idb9d2a8e86f0cbd5605736885fe01f2e3d2fe399": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 19:03:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Frally-openstack~master~Ic9283c50ae1283056d8ea6ca851d5863da61af22": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 11:42:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Felection~master~Ieab6327d22a44d82e894fe50d24fe5d030284f14": {"owner_id": 5263, "owner_name": "Jeremy Stanley", "owner_email": "fungi@yuggoth.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:34:07.000000000", "_account_id": 2799, "name": "Andy McCrae", "email": "andy.mccrae@googlemail.com", "username": "andrew-mccrae"}, {"value": 2, "date": "2020-03-24 19:05:22.000000000", "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}], "comments": {}}, "x%2Fgroup-based-policy~stable%2Fnewton~I7226129135a59d35fa8d76d132163b2241334fed": {"owner_id": 1689, "owner_name": "Robert Kukura", "owner_email": "rk@theep.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 0, "_account_id": 490, "name": "Sumit Naiksatam", "email": "sumitnaiksatam@gmail.com", "username": "snaiksat"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2020-03-24 18:02:30.000000000", "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}, {"value": 0, "_account_id": 7987, "name": "Ivar Lazzaro", "email": "ivarlazzaro@gmail.com", "username": "Ivar"}], "comments": {}}, "x%2Fgroup-based-policy~stable%2Focata~I7226129135a59d35fa8d76d132163b2241334fed": {"owner_id": 1689, "owner_name": "Robert Kukura", "owner_email": "rk@theep.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:33:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 0, "_account_id": 490, "name": "Sumit Naiksatam", "email": "sumitnaiksatam@gmail.com", "username": "snaiksat"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2020-03-24 18:02:19.000000000", "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}, {"value": 0, "_account_id": 7987, "name": "Ivar Lazzaro", "email": "ivarlazzaro@gmail.com", "username": "Ivar"}], "comments": {}}, "x%2Fgroup-based-policy~stable%2Fpike~I7226129135a59d35fa8d76d132163b2241334fed": {"owner_id": 1689, "owner_name": "Robert Kukura", "owner_email": "rk@theep.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:32:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 0, "_account_id": 490, "name": "Sumit Naiksatam", "email": "sumitnaiksatam@gmail.com", "username": "snaiksat"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2020-03-24 18:02:08.000000000", "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}, {"value": 0, "_account_id": 7987, "name": "Ivar Lazzaro", "email": "ivarlazzaro@gmail.com", "username": "Ivar"}], "comments": {}}, "x%2Fgroup-based-policy~stable%2Fqueens~I7226129135a59d35fa8d76d132163b2241334fed": {"owner_id": 1689, "owner_name": "Robert Kukura", "owner_email": "rk@theep.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:30:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18031, "name": "Thomas Bachman", "email": "tbachman@yahoo.com", "username": "bachmantech"}, {"value": 0, "_account_id": 490, "name": "Sumit Naiksatam", "email": "sumitnaiksatam@gmail.com", "username": "snaiksat"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2020-03-24 18:01:53.000000000", "_account_id": 18065, "name": "Kent Wu", "email": "wu@noironetworks.com", "username": "kentwu"}, {"value": 0, "_account_id": 7987, "name": "Ivar Lazzaro", "email": "ivarlazzaro@gmail.com", "username": "Ivar"}], "comments": {}}, "openstack%2Fopenstacksdk~master~Ia99c77b5e3734f645d97d61920273652bdadae7b": {"owner_id": 14369, "owner_name": "Mark Chappell", "owner_email": "mchappel@redhat.com", "labels": [{"value": 2, "date": "2020-03-24 13:09:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 14:27:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 14369, "name": "Mark Chappell", "email": "mchappel@redhat.com", "username": "tremble"}, {"value": 2, "date": "2020-03-24 13:08:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Frally-openstack~master~I43f98bd80ceb8e8c7bd5e0423d202bfb14823b04": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:13:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "airship%2Fairshipctl~master~I0b82be7fe16943f15f87a570eb724476582b51a6": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 18:47:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-03-24 18:16:56.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-03-24 17:10:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 1, "date": "2020-03-24 18:19:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "7f27ad6158ad97facd2c8d19b2acc67b137c25fb", "unresolved": false, "patch_set": 1, "id": "df33271e_8bd727c0", "line": 7, "range": {"start_line": 7, "start_character": 17, "end_line": 7, "end_character": 27}, "updated": "2020-03-24 17:10:40.000000000", "message": "nit: directory", "commit_id": "ea3c6a626b3388a00cc8e94d828f41c6835f62b4"}]}}, "openstack%2Fopenstack-helm-infra~master~Ib8db7ea2e7034063eefadad74828d0396407275b": {"owner_id": 30777, "owner_name": "Steven Fitzpatrick", "owner_email": "steven@fitzpatrick.wtf", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 27499, "name": "David Smith", "email": "ds3330@att.com", "username": "smithd"}, {"value": 2, "date": "2020-03-24 16:26:34.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, {"value": 2, "date": "2020-03-24 17:48:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "airship%2Fimages~master~Idf07797ca7c2998aaede85e290a330ce3202bf0e": {"owner_id": 7769, "owner_name": "Pentheus", "owner_email": "alan.meadows@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 18:40:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-03-24 18:46:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}], "comments": {}}, "openstack%2Fcharm-rabbitmq-server~master~Ib2e6136d1b22362a56739dbadf2843e38877105a": {"owner_id": 19298, "owner_name": "Nicolas Bock", "owner_email": "nicolas.bock@canonical.com", "labels": {}, "comments": {}}, "openstack%2Fpython-openstackclient~master~Ifddf1ddd5abaa768ab18049c09d18bc269f3a4f5": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-24 17:05:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 16:35:40.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-03-24 15:37:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Freleases~master~I19938bc16629754001f811e4ffe54c555c0833dc": {"owner_id": 6928, "owner_name": "Ben Nemec", "owner_email": "openstack@nemebean.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 18:20:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstack-ansible-tests~stable%2Ftrain~I8738b28eb4f0fef314c751f67c7f361641128544": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-03-24 16:26:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 16:26:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I6897acc5215508e2a9eebd7a4e6d59495cc377ff": {"owner_id": 29131, "owner_name": "diwakar thyagaraj", "owner_email": "diwakar.chitoor.thyagaraj@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": -2, "date": "2020-03-24 18:10:02.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17591, "name": "Steve Wilkerson", "email": "wilkers.steve@gmail.com", "username": "srwilkers"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Ftrain~Ibe561517d44a1108e8223442a71fab36b69c2258": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-16 14:33:12.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fkolla~stable%2Frocky~I606c68b5299e6ce9092dc8639e1e2cac5ed1f1c3": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:10:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-03-24 15:09:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Foslo.serialization~master~I5b6f25b1154b9d655843615ca8402fe4f73e923f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 12:58:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-03-19 10:18:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-03-13 17:04:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {"lower-constraints.txt": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "d8e6b727093f67d4a43a901c58a087f3e7e19ca6", "unresolved": false, "patch_set": 1, "id": "1fa4df85_025b3687", "side": "PARENT", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 12}, "updated": "2020-03-13 17:04:32.000000000", "message": "unrelated: This can probably go too", "commit_id": "909c17a77980ba179328cc8a715b0d510b73cb40"}]}}, "openstack%2Fcinder~master~Ic49a133b5ceb9013b4d53298e58ea2b21838870b": {"owner_id": 23601, "owner_name": "michael", "owner_email": "Michael.Mcaleer@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 09:29:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 12:11:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12032, "name": "Datera CI", "email": "datera-openstack-ci@datera.io", "username": "datera-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26561, "name": "liu tracy", "email": "Tracy.Liu@emc.com"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 30165, "name": "Simon O'Donovan", "email": "simon.odonovan@dell.com", "username": "odonos12"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_replication.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "48d7a0dd9403421e11529ef7ca38aea9fabc5360", "unresolved": false, "patch_set": 6, "id": "1fa4df85_240b4b24", "line": 20, "range": {"start_line": 20, "start_character": 5, "end_line": 20, "end_character": 9}, "updated": "2020-03-06 15:09:16.000000000", "message": "Please do not use the third party mock library. Stick with the unittest.mock modules imported above.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_a0c95159", "line": 20, "range": {"start_line": 20, "start_character": 5, "end_line": 20, "end_character": 9}, "in_reply_to": "1fa4df85_240b4b24", "updated": "2020-03-09 13:03:10.000000000", "message": "No problem I was not aware of the difference thanks for highlighting. This will be addressed in the next patchset.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}], "cinder/tests/unit/volume/drivers/dell_emc/powermax/test_powermax_rest.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "48d7a0dd9403421e11529ef7ca38aea9fabc5360", "unresolved": false, "patch_set": 6, "id": "1fa4df85_e410d350", "line": 20, "updated": "2020-03-06 15:09:16.000000000", "message": "Same as previous file.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_00e065cc", "line": 20, "in_reply_to": "1fa4df85_e410d350", "updated": "2020-03-09 13:03:10.000000000", "message": "Will be fixed in next patchset.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}], "cinder/volume/drivers/dell_emc/powermax/common.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "48d7a0dd9403421e11529ef7ca38aea9fabc5360", "unresolved": false, "patch_set": 6, "id": "1fa4df85_8449df60", "line": 2824, "range": {"start_line": 2824, "start_character": 28, "end_line": 2824, "end_character": 53}, "updated": "2020-03-06 15:09:16.000000000", "message": "Did you mean to pass in exception_message? Otherwise that variable doesn't need to be translated and can be moved directly into the logging call.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_e001896b", "line": 2824, "range": {"start_line": 2824, "start_character": 28, "end_line": 2824, "end_character": 53}, "in_reply_to": "1fa4df85_8449df60", "updated": "2020-03-09 13:03:10.000000000", "message": "Thanks for catching this, the ex message should have been passed in to the raised exception, it will be fixed in the next patch set.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "5a287c4646c1f7675386fbacdad9f76bf170ab87", "unresolved": false, "patch_set": 6, "id": "1fa4df85_bd242a5f", "line": 3620, "range": {"start_line": 3620, "start_character": 16, "end_line": 3620, "end_character": 27}, "updated": "2020-03-06 17:40:29.000000000", "message": "This should be changed to volume", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_a0ce3157", "line": 3620, "range": {"start_line": 3620, "start_character": 16, "end_line": 3620, "end_character": 27}, "in_reply_to": "1fa4df85_782ec092", "updated": "2020-03-09 13:03:10.000000000", "message": "This will be fixed in the next patchset.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "d43759a33ab42717eaf18c647488280156d463b1", "unresolved": false, "patch_set": 6, "id": "1fa4df85_782ec092", "line": 3620, "range": {"start_line": 3620, "start_character": 16, "end_line": 3620, "end_character": 27}, "in_reply_to": "1fa4df85_bd242a5f", "updated": "2020-03-06 17:43:08.000000000", "message": "bad rebase from dependency", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_00cb124a", "line": 1193, "updated": "2020-03-16 22:15:54.000000000", "message": "remove commented code", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_009d5256", "line": 3976, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_e0a11697", "line": 4375, "updated": "2020-03-16 22:15:54.000000000", "message": "remove commented code", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_4086ea15", "line": 5863, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_80914249", "line": 5883, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}], "cinder/volume/drivers/dell_emc/powermax/provision.py": [{"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_20ff2e68", "line": 91, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}], "cinder/volume/drivers/dell_emc/powermax/rest.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "48d7a0dd9403421e11529ef7ca38aea9fabc5360", "unresolved": false, "patch_set": 6, "id": "1fa4df85_c46cb7cf", "line": 941, "range": {"start_line": 941, "start_character": 20, "end_line": 941, "end_character": 21}, "updated": "2020-03-06 15:09:16.000000000", "message": "Mark for translation with _().", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_c0332d61", "line": 941, "range": {"start_line": 941, "start_character": 20, "end_line": 941, "end_character": 21}, "in_reply_to": "1fa4df85_c46cb7cf", "updated": "2020-03-09 13:03:10.000000000", "message": "Thanks for catching, this will be addressed in the next patch set.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_e03d962c", "line": 941, "range": {"start_line": 941, "start_character": 20, "end_line": 941, "end_character": 21}, "updated": "2020-03-16 22:15:54.000000000", "message": "double quotes to be in line with other exceptions", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_6013e6b9", "line": 2262, "updated": "2020-03-16 22:15:54.000000000", "message": "returns and give a return value", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}], "cinder/volume/drivers/dell_emc/powermax/utils.py": [{"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_c01bbac7", "line": 1533, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "22035be29755c4b2e801e15832625163bee3c640", "unresolved": false, "patch_set": 8, "id": "1fa4df85_807b82f2", "line": 1546, "updated": "2020-03-16 22:15:54.000000000", "message": "returns", "commit_id": "487d5a38a5a07ed51480b2c0f6bb0a9d319f3ac4"}], "releasenotes/notes/powermax-srdf-enhancement-56b0a2817c4d310d.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "48d7a0dd9403421e11529ef7ca38aea9fabc5360", "unresolved": false, "patch_set": 6, "id": "1fa4df85_84b79f3a", "line": 4, "updated": "2020-03-06 15:09:16.000000000", "message": "Is this something the deployer needs to know or care about? In other words, does someone reading the release notes preparing to upgrade their deployment need to know this for any reason in order for them to perform the upgrade, or to decide whether to upgrade or not?\n\nThis seems like mostly an internal detail that doesn't need to be called out in a release note to me.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "aa6bf0d10d4823acdb7e28bd84dfaf1a48e69853", "unresolved": false, "patch_set": 6, "id": "1fa4df85_df0a27d0", "line": 4, "in_reply_to": "1fa4df85_0065c545", "updated": "2020-03-09 14:24:38.000000000", "message": "Spoke about this with Helen, im going to change it to mention the two new config options only. It will be addressed in the next patch set.", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}, {"author": {"_account_id": 23601, "name": "michael", "display_name": "michael-mcaleer", "email": "Michael.Mcaleer@dell.com", "username": "michael-mcaleer"}, "change_message_id": "5d74637c1e86e45fd361131edd61c9741a6ffe72", "unresolved": false, "patch_set": 6, "id": "1fa4df85_0065c545", "line": 4, "in_reply_to": "1fa4df85_84b79f3a", "updated": "2020-03-09 13:03:10.000000000", "message": "I put this in as a matter of habit when making substantial changes but you are correct, all of these changes are under the hood. \n\nThere is two new replication specific config options for target_backend in our cinder.conf set up that users should be aware of, would it be worthwhile to change the scope of the message to just address those additions and leave out all the public endpoint change detail?", "commit_id": "fbc52f7f82da6c8159f6c403c50429b748f2be91"}]}}, "openstack%2Fkolla~stable%2Fstein~I9c94d95287ef8956556de5d48b7e88b69457e60f": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:10:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-03-24 15:08:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "zuul%2Fzuul-jobs~master~Ic9525ac2925b6639f58604ca40dc878d20511ff8": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:50:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-23 20:35:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-23 20:12:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I7bd1bb388e1213d8b0caf1453ab35679b04d7186": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-03-24 12:53:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}], "comments": {"tripleo_ansible/ansible_plugins/modules/os_baremetal_provide_node.py": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "58940ed2336ab0770164298254bc29e32e4cb5b6", "unresolved": false, "patch_set": 2, "id": "1fa4df85_e42a6a2a", "line": 336, "range": {"start_line": 334, "start_character": 0, "end_line": 336, "end_character": 72}, "updated": "2020-03-18 14:49:47.000000000", "message": "total nit: while this is technical ok, I like the openstack standard of one import per-line.", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "5af74c032bdaa8003d171e2e6e8aa2c0a9dad1f8", "unresolved": false, "patch_set": 2, "id": "1fa4df85_6d7656db", "line": 336, "range": {"start_line": 334, "start_character": 0, "end_line": 336, "end_character": 72}, "in_reply_to": "1fa4df85_e42a6a2a", "updated": "2020-03-19 12:00:16.000000000", "message": "Done", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "58940ed2336ab0770164298254bc29e32e4cb5b6", "unresolved": false, "patch_set": 2, "id": "1fa4df85_84cff67d", "line": 368, "range": {"start_line": 368, "start_character": 12, "end_line": 368, "end_character": 67}, "updated": "2020-03-18 14:49:47.000000000", "message": "it might be good to make this a set to ensure there are no duplicate entries.", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "5af74c032bdaa8003d171e2e6e8aa2c0a9dad1f8", "unresolved": false, "patch_set": 2, "id": "1fa4df85_cd6f4afa", "line": 368, "range": {"start_line": 368, "start_character": 12, "end_line": 368, "end_character": 67}, "in_reply_to": "1fa4df85_84cff67d", "updated": "2020-03-19 12:00:16.000000000", "message": "Hmm.. actually these are different parameters and UUID can't be same as names, and vice versa. But now I think maybe someone can mix them up and set UUID in name, for example. So better to be safe.", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "58940ed2336ab0770164298254bc29e32e4cb5b6", "unresolved": false, "patch_set": 2, "id": "1fa4df85_a48f922c", "line": 408, "range": {"start_line": 408, "start_character": 0, "end_line": 408, "end_character": 75}, "updated": "2020-03-18 14:49:47.000000000", "message": "nit: this can be moved into under `else:` within this try block.", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "5af74c032bdaa8003d171e2e6e8aa2c0a9dad1f8", "unresolved": false, "patch_set": 2, "id": "1fa4df85_19511bda", "line": 408, "range": {"start_line": 408, "start_character": 0, "end_line": 408, "end_character": 75}, "in_reply_to": "1fa4df85_a48f922c", "updated": "2020-03-19 12:00:16.000000000", "message": "Done", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "58940ed2336ab0770164298254bc29e32e4cb5b6", "unresolved": false, "patch_set": 2, "id": "1fa4df85_248de230", "line": 423, "range": {"start_line": 423, "start_character": 8, "end_line": 423, "end_character": 70}, "updated": "2020-03-18 14:49:47.000000000", "message": "should this return?", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "5af74c032bdaa8003d171e2e6e8aa2c0a9dad1f8", "unresolved": false, "patch_set": 2, "id": "1fa4df85_ad452e72", "line": 423, "range": {"start_line": 423, "start_character": 8, "end_line": 423, "end_character": 70}, "in_reply_to": "1fa4df85_248de230", "updated": "2020-03-19 12:00:16.000000000", "message": "Not sure I understand, it will fail a module run when no nodes are passed in args. Need to pass only \"msg\" to fail_json.", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "3acd796bd0f64c2a003553e36beb6eb69367b965", "unresolved": false, "patch_set": 2, "id": "1fa4df85_67dd0a6f", "line": 423, "range": {"start_line": 423, "start_character": 8, "end_line": 423, "end_character": 70}, "in_reply_to": "1fa4df85_ad452e72", "updated": "2020-03-19 12:59:42.000000000", "message": "++", "commit_id": "a0d82150a38359fad9ce557769483d25e764be8c"}]}}, "openstack%2Frpm-packaging~stable%2Frocky~Iab386afda2ba4d70a2b2070515c82d2b9c413e9e": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:03:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:55:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "opendev%2Fbase-jobs~master~I4feb2a2229dcf0626ec8ee8494ad6801468c1440": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:47:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-24 05:59:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "opendev%2Fsystem-config~master~I01d15046ebebb50aa9ab234924b3375492f63727": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:50:21.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fopenstack-ansible~master~Ic40c0ef8055d8c796bfe4bc811027f640241d689": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 2, "date": "2020-03-24 15:17:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-14 13:17:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fcliff~master~I517c61f24ba6194ff6181e115a3a23adbce3ea53": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 2, "date": "2020-03-24 16:13:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 16:51:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Foslo.upgradecheck~master~I67b86898cb443dc02c6b41a78bfe54f43f8d6c74": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 13:02:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-03-19 10:18:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-03-13 17:04:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fnova~stable%2Fpike~Icd7ab2ca4ddbed92c7e883a63a23245920d961e7": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:40:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 2, "date": "2020-03-24 11:49:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fproject-config~master~If291cb03d2e6f6dfc24685414c640b9a9c944e00": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 17:02:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-24 17:37:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fcharm-ceilometer~master~Ic12f0f83177d01cc646f433fa741b37598fbfa30": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I9bac918fcde80e6a2336bc3cf1e6972512298118": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:10:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-03-23 23:26:32.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~Ib0a6f94a6611b221efbf76f6f25b55c43782546f": {"owner_id": 15554, "owner_name": "Bence Romsics", "owner_email": "bence.romsics@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-20 12:04:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-03-24 12:33:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-03-20 11:32:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-03-23 13:56:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-03-20 11:21:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-03-20 12:36:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fcharm-rabbitmq-server~master~I61b3cbcd0c2e11bba6d6bba4cbcbea90b0ca6b73": {"owner_id": 20870, "owner_name": "Alex Kavanagh", "owner_email": "alex.kavanagh@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 17:01:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31289, "name": "Aurelien Lourot", "email": "aurelien.lourot@gmail.com", "username": "lourot"}, {"value": 0, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}, {"value": 2, "date": "2020-03-24 17:06:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I5a2270130bdf5b9d781f4d81ec25c6ccf12fdc07": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 14:21:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-03-23 14:10:28.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/roles/tripleo_container_manage/tasks/podman/create.yml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "7418284f4b7487015ce3eb21a480df8f66945398", "unresolved": false, "patch_set": 1, "id": "df33271e_1b38a0d1", "line": 90, "updated": "2020-03-23 14:09:18.000000000", "message": "i wonder if I should use failed_when here to avoid false alarms in the logs?", "commit_id": "8fdf2f276f505dbad80391c7e69b8c26fafbd303"}]}}, "openstack%2Fhorizon~master~I396073182ff1e63df12ebb79c3ddd646277ddadf": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:43:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-03-24 15:44:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "openstack%2Fopenstack-ansible-tests~stable%2Frocky~I8738b28eb4f0fef314c751f67c7f361641128544": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 12:29:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 2, "date": "2020-03-24 16:20:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Foslo.context~stable%2Ftrain~If5ebaa3c1859d32cd05f51defe173fc625b21af5": {"owner_id": 6928, "owner_name": "Ben Nemec", "owner_email": "openstack@nemebean.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 14:26:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-03-21 20:51:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Frequirements~master~Ia8b27922f3354d42f62538ddee3ed5044968556d": {"owner_id": 1736, "owner_name": "Ivan Kolodyazhny", "owner_email": "e0ne@e0ne.info", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 06:58:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-03-24 04:17:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 27339, "name": "Michal Arbet", "email": "michal.arbet@ultimum.io", "username": "michalarbet"}, {"value": 2, "date": "2020-03-24 09:42:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-03-24 15:24:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 1, "date": "2020-03-24 06:35:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fopenstack-ansible-repo_build~stable%2Frocky~I4ae6737f1ded4cbb680a380c8c309a0f5bf64723": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:31:27.000000000", "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 14:36:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 1, "date": "2020-03-20 13:19:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}], "comments": {}}, "openstack%2Fopenstack-helm-addons~master~I0d3d51847881fcb68ba182a2a9370869e5040ad4": {"owner_id": 20466, "owner_name": "Tin Lam", "owner_email": "tin@lam.wtf", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:08:48.000000000", "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-03-24 16:08:12.000000000", "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}], "comments": {}}, "inaugust%2Finaugust.com~master~I088168faf67221b4cf87a65e38d04233fb3304a6": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 16:43:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~Idab2b1bd50ae316d9d26f5616174a3421f22b571": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-24 15:31:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frally-openstack~master~I8582ef236917b3a0239f047ed9763134899d2d56": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 11:42:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~I9b04c1bb5a2389201b99815f17d6242baaf856d9": {"owner_id": 30598, "owner_name": "Mihai Plasoianu", "owner_email": "m.plasoianu@vertical.de", "labels": [{"value": 2, "date": "2020-03-24 07:06:46.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17823, "name": "Michele Baldessari", "email": "michele@redhat.com", "username": "mbaldessari"}, {"value": 2, "date": "2020-03-23 23:24:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-03-20 17:58:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "date": "2020-03-22 12:03:58.000000000", "permitted_voting_range": {"min": 0, "max": 1}, "_account_id": 30598, "name": "Mihai Plasoianu", "email": "m.plasoianu@vertical.de", "username": "m1p"}, {"value": 1, "date": "2020-03-23 11:19:31.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, "change_message_id": "c41c9e52e7a8d9bb4d6976cadfc91e24cf624eff", "unresolved": false, "patch_set": 1, "id": "df33271e_d5ad7ceb", "line": 7, "updated": "2020-03-20 18:00:28.000000000", "message": "If this will only be landing in Train, we should add the \"[Train-only]\" tag here.", "commit_id": "91627ee5fcc8abd58830544d1846857e860c11b8"}]}}, "openstack%2Fproject-config~master~Iabf98602c9593c6147d80b3727fc5a8eb0934e5a": {"owner_id": 31500, "owner_name": "Sabeel Ansari", "owner_email": "Sabeel.Ansari@windriver.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {}}, "openstack%2Fneutron~master~Id7712330a24f51f0cfee8d7b3916c05d3501ee3f": {"owner_id": 1131, "owner_name": "Brian Haley", "owner_email": "haleyb.dev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 14:51:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-03-20 10:14:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-03-24 14:47:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Frequirements~master~I96f28c282a4aafd7ba7bd02770cafd7d49c90b0a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fnova~master~I08b2a888b89e0329d9aa22b9ecbb901a2ee42145": {"owner_id": 14070, "owner_name": "Eric Fried", "owner_email": "openstack@fried.cc", "labels": [{"value": 2, "date": "2020-03-24 15:11:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 2, "date": "2020-02-27 16:46:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fneutron~master~Iddc232c4be46192463e1b69298fa56f5aca359c3": {"owner_id": 1131, "owner_name": "Brian Haley", "owner_email": "haleyb.dev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-20 10:16:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-03-24 14:51:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/tests/unit/services/ovn_l3/test_plugin.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "0cdaa6e7690aaac6e14d2c735805615bf8382900", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f502293e", "side": "PARENT", "line": 936, "updated": "2020-03-17 14:54:16.000000000", "message": "I don't actually know why these were added as I didn't see them in the OVN repo.", "commit_id": "df3b15da8f3ee7c492c32d8684c968d0ddc73d53"}]}}, "openstack%2Fkolla-ansible~stable%2Ftrain~I4181654c88554c81940f0d079cf1d64326cdec79": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:03:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-03-24 15:37:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Ibe0fd9405fa01c302d87fad6e89817839e7f5b88": {"owner_id": 18002, "owner_name": "John Fulton", "owner_email": "fulton@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 23:34:42.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-23 20:40:04.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"environments/disable-swift.yaml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "03e7538f61371331ac56092f4d0678c5fca29f6f", "unresolved": false, "patch_set": 1, "id": "df33271e_16924af7", "line": 4, "updated": "2020-03-20 22:12:52.000000000", "message": "There is more than that:\n\nOS::TripleO::Services::SwiftDispersion\nOS::TripleO::Services::ExternalSwiftProxy", "commit_id": "4d1d9407c8840d88b4ca6dc2d5afbc0ad8d6a782"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "6b9d25a4c64be3d4c3fe5eeaa29a1329db2379ee", "unresolved": false, "patch_set": 1, "id": "df33271e_d65e2244", "line": 4, "in_reply_to": "df33271e_16924af7", "updated": "2020-03-20 22:16:48.000000000", "message": "Thanks for pointing that out. I wonder if this same issue applies to the RGW env file:\n\nhttps://opendev.org/openstack/tripleo-heat-templates/src/branch/master/environments/ceph-ansible/ceph-rgw.yaml", "commit_id": "4d1d9407c8840d88b4ca6dc2d5afbc0ad8d6a782"}]}}, "openstack%2Fproject-config~master~Idb16bcf5b581e7dd411506eb69c2324e206f0511": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:56:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-03-24 15:56:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fansible-role-python_venv_build~master~Ib6ecea1eaaf5dfdedf4e683c1ae1b5619dcbabf4": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fnetworking-generic-switch~master~I47c244d5d6ae8998019ca24fc2b05296792bf1f9": {"owner_id": 24828, "owner_name": "Kaifeng Wang", "owner_email": "kaifeng.w@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 2, "date": "2020-03-24 09:18:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 1, "date": "2020-03-24 09:21:52.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 11:32:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~I006051ec0aa7b4c98cc41cda097d085f6eea62c9": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 13:39:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-03-23 14:08:28.000000000", "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Frally~master~I2d2b50dff1a8739bca8714666acc2efc7369e4d8": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 13:49:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "airship%2Fairshipctl~master~Iaece6683931164ccaa213f4f3385de9c077d26b7": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 2, "date": "2020-03-24 13:04:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-03-24 15:47:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 1, "date": "2020-03-24 15:45:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}], "comments": {}}, "airship%2Fairshipctl~master~Ia331ff4875a067045f6f9245daee109126fb1d33": {"owner_id": 28869, "owner_name": "Ian Howell", "owner_email": "ian.howell0@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 12:25:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 2, "date": "2020-03-24 15:48:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}], "comments": {"pkg/k8s/client/client.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "ad008cebab5947488cd79eca699bee2e31b19e00", "unresolved": false, "patch_set": 4, "id": "1fa4df85_5f59dc32", "line": 73, "range": {"start_line": 73, "start_character": 17, "end_line": 73, "end_character": 29}, "updated": "2020-03-17 13:17:44.000000000", "message": "nit: Should not this be SetClientSet (anyway it looks weird :))?", "commit_id": "845b4a4ee77e253065d5c27fbbf705bc65812aad"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ebd8be9317bbde02a771e18736aefc2cff1fd427", "unresolved": false, "patch_set": 4, "id": "1fa4df85_70ef2787", "line": 73, "range": {"start_line": 73, "start_character": 17, "end_line": 73, "end_character": 29}, "in_reply_to": "1fa4df85_5f59dc32", "updated": "2020-03-17 15:32:55.000000000", "message": "yep, good catch", "commit_id": "845b4a4ee77e253065d5c27fbbf705bc65812aad"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "5f530410750703a3eea3c267a2fa86557e435b59", "unresolved": false, "patch_set": 11, "id": "df33271e_3cdaace8", "line": 49, "range": {"start_line": 49, "start_character": 26, "end_line": 49, "end_character": 64}, "updated": "2020-03-24 12:25:52.000000000", "message": "inconsistent capitalization across airshipctl for 'Kubeconfig' / 'KubeConfig'.  submitted [0] as a followup to this to address as it's outside the scope of your change.\n\n[0] https://review.opendev.org/#/c/714618/", "commit_id": "ea9fba727895226658edc832f75ea0bb5dd12c37"}]}}, "starlingx%2Fdistcloud~master~Iedf172c3e9c3c4bdb9b9482dc5d46f072b3ccf61": {"owner_id": 31484, "owner_name": "Jessica Castelino", "owner_email": "jessica.castelino@windriver.com", "labels": [{"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-20 18:51:05.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-03-22 19:12:32.000000000", "_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, {"value": 1, "date": "2020-03-20 21:25:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, {"value": 1, "date": "2020-03-20 20:32:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "217eb4ae050ffa72083f148b0eb61465929a6cc1", "unresolved": false, "patch_set": 3, "id": "1fa4df85_ee3fe184", "line": 12, "range": {"start_line": 7, "start_character": 0, "end_line": 12, "end_character": 12}, "updated": "2020-03-13 20:26:32.000000000", "message": "You will need to update this as the commit will grow to fix several additional problems when the subcloud add fails.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "5b4ec61b420696ffef9d82f3d84e27403167286d", "unresolved": false, "patch_set": 3, "id": "1fa4df85_5d9491e8", "line": 12, "range": {"start_line": 7, "start_character": 0, "end_line": 12, "end_character": 12}, "in_reply_to": "1fa4df85_ee3fe184", "updated": "2020-03-16 21:31:04.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}], "distributedcloud/dcmanager/manager/subcloud_manager.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_287891f6", "line": 118, "range": {"start_line": 118, "start_character": 8, "end_line": 118, "end_character": 27}, "updated": "2020-03-13 19:16:26.000000000", "message": "I would prefer dcorch_populated", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_74b73188", "line": 118, "range": {"start_line": 118, "start_character": 8, "end_line": 118, "end_character": 27}, "in_reply_to": "1fa4df85_287891f6", "updated": "2020-03-16 21:12:48.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_a85ec142", "line": 218, "range": {"start_line": 212, "start_character": 12, "end_line": 218, "end_character": 45}, "updated": "2020-03-13 19:16:26.000000000", "message": "I think the endpoints created here will also need to be deleted.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 3, "id": "1fa4df85_dc495ab7", "line": 218, "range": {"start_line": 212, "start_character": 12, "end_line": 218, "end_character": 45}, "in_reply_to": "1fa4df85_37277b15", "updated": "2020-03-17 13:12:30.000000000", "message": "Interesting - that is a bug in my opinion - the endpoints should not be deleted in a method with that name.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_37277b15", "line": 218, "range": {"start_line": 212, "start_character": 12, "end_line": 218, "end_character": 45}, "in_reply_to": "1fa4df85_a85ec142", "updated": "2020-03-16 21:12:48.000000000", "message": "Aren't endpoints deleted in \"_delete_subcloud_routes\" method?", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 3, "id": "1fa4df85_3a274e67", "line": 218, "range": {"start_line": 212, "start_character": 12, "end_line": 218, "end_character": 45}, "in_reply_to": "1fa4df85_dc495ab7", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_88550520", "line": 226, "range": {"start_line": 226, "start_character": 12, "end_line": 226, "end_character": 47}, "updated": "2020-03-13 19:16:26.000000000", "message": "This should be regenerated.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_6a598afc", "line": 226, "range": {"start_line": 226, "start_character": 12, "end_line": 226, "end_character": 47}, "in_reply_to": "1fa4df85_88550520", "updated": "2020-03-16 21:12:48.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_a80c8142", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "updated": "2020-03-13 19:16:26.000000000", "message": "Tyler can comment on this, but I think we want to remove the subcloud from this file as well. I think this is currently broken as it just appends entries to this file - we probably need to regenerate it each time.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_28df1ad7", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "in_reply_to": "1fa4df85_2ee89914", "updated": "2020-03-16 21:12:48.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "8f4a12a06e05d0c4dd5cceef13eb39da5b7b1c5d", "unresolved": false, "patch_set": 3, "id": "1fa4df85_f3810ac5", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "in_reply_to": "1fa4df85_339a42c5", "updated": "2020-03-13 19:56:49.000000000", "message": "What we have here is a bad design then. If the file can be accessed by multiple writers it should be protected with some kind of lock or there is danger of corruption. Also, having a file on disk that cannot be recovered if it is corrupted is also not good. Is there a reason we need a single file with the inventory? If the file is only used for the bootstrap, couldn't we generate a temp file with just the data for a single subcloud? Then the file could be removed when we are done bootstrapping the subcloud.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, "change_message_id": "46589b42fa0482b4ca6fe6ad9777e4bea4bfc7df", "unresolved": false, "patch_set": 3, "id": "1fa4df85_339a42c5", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "in_reply_to": "1fa4df85_a80c8142", "updated": "2020-03-13 19:32:12.000000000", "message": "Yes, it appends right now, but when reading the inventory ansible will take the latest definition so there's no harm done.  Would be cleaner to remove the entry anyways I suppose.  I don't think we can regenerate every time since the bootstrap ip is not stored anywhere, also this file is read by the deploy step as well, if two subclouds are added right after each other the earlier would fail to deploy if we regenerate with just the latest subcloud", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b4dc1bec8549f3b4855919b1adb9305c9e9f74fb", "unresolved": false, "patch_set": 3, "id": "1fa4df85_2ee89914", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "in_reply_to": "1fa4df85_f36b4aee", "updated": "2020-03-13 20:21:13.000000000", "message": "Thanks Tyler. Jessica - please go ahead and change this into a temporary file for each subcloud. I guess we can store it in the same location and just include the subcloud name in the filename. Change _update_subcloud_inventory to _create_subcloud_inventory and have it create a single file. The file should be deleted at the end of this method (maybe in a finally clause).", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, "change_message_id": "6e6e414c5d8d79d1b16918ec6109546cac280890", "unresolved": false, "patch_set": 3, "id": "1fa4df85_f36b4aee", "line": 264, "range": {"start_line": 264, "start_character": 12, "end_line": 264, "end_character": 43}, "in_reply_to": "1fa4df85_f3810ac5", "updated": "2020-03-13 20:06:01.000000000", "message": "Yes, it could be split into multiple temporary files", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_33fec205", "line": 267, "range": {"start_line": 267, "start_character": 12, "end_line": 267, "end_character": 47}, "updated": "2020-03-13 19:16:26.000000000", "message": "The overrides file also should be deleted.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 3, "id": "1fa4df85_5cd32ad6", "line": 267, "range": {"start_line": 267, "start_character": 12, "end_line": 267, "end_character": 47}, "in_reply_to": "1fa4df85_2d73ac82", "updated": "2020-03-17 13:12:30.000000000", "message": "I'm OK with leaving the file for debugging.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_2d73ac82", "line": 267, "range": {"start_line": 267, "start_character": 12, "end_line": 267, "end_character": 47}, "in_reply_to": "1fa4df85_3336c2b6", "updated": "2020-03-16 21:12:48.000000000", "message": "Kindly let me know if we have to delete this file or not.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, "change_message_id": "46589b42fa0482b4ca6fe6ad9777e4bea4bfc7df", "unresolved": false, "patch_set": 3, "id": "1fa4df85_3336c2b6", "line": 267, "range": {"start_line": 267, "start_character": 12, "end_line": 267, "end_character": 47}, "in_reply_to": "1fa4df85_33fec205", "updated": "2020-03-13 19:32:12.000000000", "message": "If a subcloud fails to add it could be useful to have the file lying around for debugging purposes.  Just a thought", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 3, "id": "1fa4df85_5a2a4a2c", "line": 267, "range": {"start_line": 267, "start_character": 12, "end_line": 267, "end_character": 47}, "in_reply_to": "1fa4df85_5cd32ad6", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_731bda72", "line": 320, "range": {"start_line": 319, "start_character": 12, "end_line": 320, "end_character": 24}, "updated": "2020-03-13 19:16:26.000000000", "message": "As per the above comments, there is a lot of stuff that needs to be cleaned up that was missed as this method was extended. I think the best approach would be to have a common method that would do all the cleanup. That method could start with what we have in the delete method and be extended to add the things that are missing. The delete method would also call this new common method.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_1d985968", "line": 320, "range": {"start_line": 319, "start_character": 12, "end_line": 320, "end_character": 24}, "in_reply_to": "1fa4df85_731bda72", "updated": "2020-03-16 21:12:48.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fa472ce965d90b638279497e7037d586514d8989", "unresolved": false, "patch_set": 3, "id": "1fa4df85_c868dd22", "line": 323, "range": {"start_line": 323, "start_character": 12, "end_line": 323, "end_character": 35}, "updated": "2020-03-13 19:16:26.000000000", "message": "Do this before the db_api.subcloud_destroy.", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "36907b17cfd1bf7226baaa5f2aaf6f3a40d0f6fd", "unresolved": false, "patch_set": 3, "id": "1fa4df85_b9135ab8", "line": 323, "range": {"start_line": 323, "start_character": 12, "end_line": 323, "end_character": 35}, "in_reply_to": "1fa4df85_c868dd22", "updated": "2020-03-16 21:12:48.000000000", "message": "Done", "commit_id": "d12a4935c2cd6ab3c075cba854e041f1bf6d2285"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 5, "id": "1fa4df85_1c67f253", "line": 63, "range": {"start_line": 63, "start_character": 0, "end_line": 63, "end_character": 14}, "updated": "2020-03-17 13:12:30.000000000", "message": "Use INVENTORY_FILE_POSTFIX and change to '_inventory.yml'.", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 5, "id": "1fa4df85_f5f8e97c", "line": 63, "range": {"start_line": 63, "start_character": 0, "end_line": 63, "end_character": 14}, "in_reply_to": "1fa4df85_1c67f253", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 5, "id": "1fa4df85_1cfe1238", "line": 277, "range": {"start_line": 276, "start_character": 26, "end_line": 277, "end_character": 50}, "updated": "2020-03-17 13:12:30.000000000", "message": "Instead of repeating this several times, please set a new ansible_subcloud_inventory_file variable and use it.", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 5, "id": "1fa4df85_15f4a586", "line": 277, "range": {"start_line": 276, "start_character": 26, "end_line": 277, "end_character": 50}, "in_reply_to": "1fa4df85_1cfe1238", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 5, "id": "1fa4df85_1cacd233", "line": 458, "range": {"start_line": 457, "start_character": 38, "end_line": 458, "end_character": 71}, "updated": "2020-03-17 13:12:30.000000000", "message": "Pass the inventory_file into the method as a parameter.", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 5, "id": "1fa4df85_f0c47794", "line": 458, "range": {"start_line": 457, "start_character": 38, "end_line": 458, "end_character": 71}, "in_reply_to": "1fa4df85_1cacd233", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 5, "id": "1fa4df85_1c5a924f", "line": 463, "range": {"start_line": 463, "start_character": 34, "end_line": 463, "end_character": 37}, "updated": "2020-03-17 13:12:30.000000000", "message": "This should be write mode - not append.", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 5, "id": "1fa4df85_d0b93b15", "line": 463, "range": {"start_line": 463, "start_character": 34, "end_line": 463, "end_character": 37}, "in_reply_to": "1fa4df85_1c5a924f", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "b0cb6b44727b4121736aca8d82e644e89b721f17", "unresolved": false, "patch_set": 5, "id": "1fa4df85_5c3d6adb", "line": 478, "range": {"start_line": 478, "start_character": 8, "end_line": 478, "end_character": 22}, "updated": "2020-03-17 13:12:30.000000000", "message": "Pass this to the method as a parameter.", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0f7886b6950c85ef1e1f8a78867893d55979bfc4", "unresolved": false, "patch_set": 5, "id": "1fa4df85_f072377c", "line": 478, "range": {"start_line": 478, "start_character": 8, "end_line": 478, "end_character": 22}, "in_reply_to": "1fa4df85_5c3d6adb", "updated": "2020-03-17 16:06:09.000000000", "message": "Done", "commit_id": "9757033020ede337f4c2f7e9656dd0aea258765f"}], "distributedcloud/dcorch/engine/subcloud.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "a9c09e8a3d0009d8105afef9f6297cd8e803f966", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fbdfc5d3", "line": 65, "updated": "2020-03-11 21:52:33.000000000", "message": "This is an expected error.\n\nThere are 3 tables in dcorch which are populated while adding a subcloud. When subcloud add fails, at least one of the three tables does not have an entry for the subcloud. Thus, when delete is called, at least one of the db calls will fail. Hence, this exception is not logged.", "commit_id": "d252d7da8b5756d08368f63f784edeb9a1ba9e5f"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "839a3ddc22eb90052eef8d7c7e383a9c8cca27ec", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f0d11231", "line": 65, "in_reply_to": "1fa4df85_52d8337e", "updated": "2020-03-12 18:47:05.000000000", "message": "Yes, that makes sense.", "commit_id": "d252d7da8b5756d08368f63f784edeb9a1ba9e5f"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "1ca2f852c32162e9cda059d237abade9e4ccc831", "unresolved": false, "patch_set": 1, "id": "1fa4df85_52d8337e", "line": 65, "in_reply_to": "1fa4df85_fbdfc5d3", "updated": "2020-03-12 13:23:34.000000000", "message": "I don't think this is sufficient because the call to subcloud.delete could raise an exception before cleaning up all three tables. A better place for this particular fix is in Subcloud.create where an exception in db_api.subcloud_create can be caught and then the alarm entry can be cleaned up.\n\nHowever, I think this particular error scenario (failure to add subcloud to one of the dcorch tables) is so unlikely that we probably don't need a fix here.\n\nThe real problem is in the SubcloudManager.add_subcloud method. If that method successfully creates the subcloud in dcorch (with the dcorch_rpc_client.add_subcloud RPC), there is no code to tell the dcorch to delete the subcloud if a subsequent operation fails (e.g. during a playbook apply).", "commit_id": "d252d7da8b5756d08368f63f784edeb9a1ba9e5f"}]}}, "openstack%2Fgovernance~master~Ic00a309e765dcb21d5bc571e396f317fee1d8596": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 14:37:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}], "comments": {}}, "airship%2Fgo-redfish~master~I552b117d4dfcb0836d57bcec3c15d04032a34eb9": {"owner_id": 31514, "owner_name": "Manoj", "owner_email": "manojkumar.alva@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "airship%2Fairshipctl~master~I46380a0fd708c0bc260d355545b27fd007885de6": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 13:50:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 2, "date": "2020-03-24 15:44:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}], "comments": {}}, "openstack%2Fnova-specs~master~I707409ba1cc668bb7e67c16a1eb7e848a5033625": {"owner_id": 14070, "owner_name": "Eric Fried", "owner_email": "openstack@fried.cc", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-18 09:07:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Fopenstack-ansible-repo_build~stable%2Fstein~I3bd6d3d987e32ee11c5f1fcb5c1b4b0fc797e7f9": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 2, "date": "2020-03-24 15:16:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 10:20:59.000000000", "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 1, "date": "2020-03-20 13:20:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}], "comments": {}}, "openstack%2Fproject-config~master~I95edc2c0ae2a523dda59894c4a033ea1ee08845e": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 15:41:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-03-24 14:53:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fopenstack-ansible-repo_build~stable%2Fstein~I4ae6737f1ded4cbb680a380c8c309a0f5bf64723": {"owner_id": 25600, "owner_name": "Ebbex", "owner_email": "openstack@slipsprogrammor.no", "labels": [{"value": 2, "date": "2020-03-24 15:15:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:36:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 1, "date": "2020-03-20 13:20:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25600, "name": "Ebbex", "display_name": "ebbex", "email": "openstack@slipsprogrammor.no", "username": "ebbex"}, {"value": 1, "date": "2020-03-20 19:07:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fmanila-tempest-plugin~master~I8d8063d46284076499d868a5f9b3d13a2a78b5b0": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 19262, "name": "Liron Kuchlani", "email": "lkuchlan@redhat.com", "username": "lkuchlan"}, {"value": 0, "_account_id": 29455, "name": "Jason Grosso", "email": "jgrosso@redhat.com", "username": "jgrosso"}, {"value": 0, "_account_id": 30025, "name": "Vida Haririan", "display_name": "Vida Haririan", "email": "vhariria@redhat.com", "username": "vhari"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:42:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 2, "date": "2020-03-24 14:38:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Ftacker~master~I8e17da2907173eff64411ac57041736e6090760f": {"owner_id": 26222, "owner_name": "Cong Phuoc Hoang", "owner_email": "hoangphuocbk2.07@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26222, "name": "Cong Phuoc Hoang", "email": "hoangphuocbk2.07@gmail.com", "username": "hoangphuoc"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 25701, "name": "Yasufumi Ogawa", "email": "yasufum.o@gmail.com", "username": "yasufum"}], "comments": {}}, "openstack%2Fmanila~master~I5f358266739f1c42343d5a0c5ec8109c8fcaac4d": {"owner_id": 9003, "owner_name": "Tom Barron", "owner_email": "tpb@dyncloud.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30407, "name": "haixin", "email": "haix09@chinatelecom.cn", "username": "haixin"}, {"value": 2, "date": "2020-03-23 17:49:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-03-23 17:27:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13915, "name": "Silvan Kaiser", "email": "silvan@quobyte.com", "username": "kaisers"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 17:35:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"manila/api/v2/share_instance_export_locations.py": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e65243a171ebbf3e36ef25bee24bc05d4dc3c084", "unresolved": false, "patch_set": 4, "id": "1fa4df85_072f768e", "line": 41, "range": {"start_line": 37, "start_character": 12, "end_line": 41, "end_character": 67}, "updated": "2020-03-03 07:41:33.000000000", "message": "While this works, can we use the share instance policy here, instead of that of the share? \n\nSince the resource pertains to the export locations of a share instance... \n\n share_instance = db_api.share_instance_get(context, \n                   share_instance_id, \n                   with_share_data=True)\n if not share_instance['is_public']:\n     policy.check_policy(context, 'share_instance', 'show', share_instance)", "commit_id": "0c5e66700493d6c65de3b50deaca3d00bd8113c4"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "a5714e05c50229f4d3cb8cd39c7ec20cccb7f910", "unresolved": false, "patch_set": 4, "id": "1fa4df85_07a8d68a", "line": 41, "range": {"start_line": 37, "start_character": 12, "end_line": 41, "end_character": 67}, "in_reply_to": "1fa4df85_072f768e", "updated": "2020-03-03 08:27:32.000000000", "message": "Makes sense, not sure why I did that ...", "commit_id": "0c5e66700493d6c65de3b50deaca3d00bd8113c4"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "c1a50c3863b595a295af21856b8f323fa531e84a", "unresolved": false, "patch_set": 4, "id": "1fa4df85_873da62c", "line": 41, "range": {"start_line": 37, "start_character": 12, "end_line": 41, "end_character": 67}, "in_reply_to": "1fa4df85_07a8d68a", "updated": "2020-03-03 10:16:26.000000000", "message": "Ah, share_instance doesn't have 'is_public'.  I could try checking that in the share, but doing the policy check on the share_instance.nce.\nBut probably it makes sense just to check the policy on the share_instance independently of the share and its attributes.", "commit_id": "0c5e66700493d6c65de3b50deaca3d00bd8113c4"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "838ee9a3e6f8c1cfd55eeda453965a74254c1cc1", "unresolved": false, "patch_set": 5, "id": "1fa4df85_a6753bcd", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 47}, "updated": "2020-03-03 17:52:28.000000000", "message": "Thinking out loud about the \"is_public\" attribute check:\n\nIn a cloud where share instances can be listed/viewed by their owners, if there are any \"public\" shares, would we allow those share instances to be retrieved? We currently do not perform *any* ownership check [1], so it's potentially harmful to open up the API policy to allow listing share instances. However, it may be okay for someone to alter the policy to \"show\" a share instance - Users can get the UUIDs of a share instance off of the export location of a share (whether it's their own or is a public share). \n\nSo, i wonder if we need to restrict getting share instance export locations if the share instance belongs to a public share?\n\nWhat do you think?", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "838ee9a3e6f8c1cfd55eeda453965a74254c1cc1", "unresolved": false, "patch_set": 5, "id": "1fa4df85_069d2fbb", "line": 40, "range": {"start_line": 39, "start_character": 12, "end_line": 40, "end_character": 47}, "updated": "2020-03-03 17:52:28.000000000", "message": "This won't work because a share instance object by itself doesn't have \"project_id\". \n\nYou'll need:\n\n  share_instance = db_api.share_instance_get(context, \n                             share_instance_id, \n                             with_share_data=True)", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "a1aac033cb6fd25b8c241189badd7535afbbba7e", "unresolved": false, "patch_set": 5, "id": "1fa4df85_2e303d9f", "line": 40, "range": {"start_line": 39, "start_character": 12, "end_line": 40, "end_character": 47}, "in_reply_to": "1fa4df85_069d2fbb", "updated": "2020-03-03 22:11:29.000000000", "message": "Alright, let's try it that way.", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "a1aac033cb6fd25b8c241189badd7535afbbba7e", "unresolved": false, "patch_set": 5, "id": "1fa4df85_4e35798e", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 47}, "in_reply_to": "1fa4df85_a6753bcd", "updated": "2020-03-03 22:11:29.000000000", "message": "I don't have a strong intuition either way.\n\nDo you think we should only do the policy check on the instance if the corresponding share is not public?  That's the way I was going to write it but then I was trying to just make policy on instances stand on its own ...", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "a1aac033cb6fd25b8c241189badd7535afbbba7e", "unresolved": false, "patch_set": 5, "id": "1fa4df85_cef729d3", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 47}, "in_reply_to": "1fa4df85_a6753bcd", "updated": "2020-03-03 22:11:29.000000000", "message": "I don't have a strong intuition either way.\n\nDo you think we should only do the policy check on the instance if the corresponding share is not public?  That's the way I was going to write it but then I was trying to just make policy on instances stand on its own ...", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "720b7d264b56bc341917d04696f005c088cbefc6", "unresolved": false, "patch_set": 5, "id": "1fa4df85_d98051c2", "line": 40, "range": {"start_line": 40, "start_character": 44, "end_line": 40, "end_character": 47}, "in_reply_to": "1fa4df85_cef729d3", "updated": "2020-03-03 23:59:23.000000000", "message": "The share instance and share are either public or not... Share instances of a non-public share cannot be public themselves. This fix is appropriate for this issue imo \n\nBecause we enforce policy on non-public share export locations, I was wondering if we should do the same for share instances - a check you were doing until patchset 4... If you think that's still useful, we can include it in this fix or I'll open a separate bug....", "commit_id": "6db1850e7f9a6f9fcf760e89f49372ff57d0eb10"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "a4056501210da1b6fcc30e03776174287fe94d4f", "unresolved": false, "patch_set": 7, "id": "1fa4df85_ddf7cf58", "line": 43, "range": {"start_line": 40, "start_character": 12, "end_line": 43, "end_character": 51}, "updated": "2020-03-04 16:41:28.000000000", "message": "The share lookup isn't necessary... Will follow up with a fix.", "commit_id": "c424ca53e0a9efe7e5b2ef10264404d69d0b3fb5"}, {"author": {"_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, "change_message_id": "3ce7569293e2e40217d687e37013d84e754cdef5", "unresolved": false, "patch_set": 7, "id": "1fa4df85_cc8e3f78", "line": 43, "range": {"start_line": 40, "start_character": 12, "end_line": 43, "end_character": 51}, "in_reply_to": "1fa4df85_bd7d33b3", "updated": "2020-03-04 20:21:54.000000000", "message": "#TIL, thanks", "commit_id": "c424ca53e0a9efe7e5b2ef10264404d69d0b3fb5"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "6cbd7894ef09abecb59955f010769a081c7b94f9", "unresolved": false, "patch_set": 7, "id": "1fa4df85_bd7d33b3", "line": 43, "range": {"start_line": 40, "start_character": 12, "end_line": 43, "end_character": 51}, "in_reply_to": "1fa4df85_ddf7cf58", "updated": "2020-03-04 16:43:44.000000000", "message": "When passing \"with_share_data\", the share record is fetched and share properties are set directly onto the share instance - a design consideration to allow shares and share instances to be interoperable for the majority of cases.", "commit_id": "c424ca53e0a9efe7e5b2ef10264404d69d0b3fb5"}]}}, "openstack%2Fmanila~master~Ic7fe8b8dfeaa36cc93bbccab2fdc07b72080d6de": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila-ui~master~Ife521b9aefa58424448d6af0485a88395ce0e809": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-upgrade~master~I98b232f370a56d2635e49c8be244b16909f12ae8": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 09:45:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 2, "date": "2020-03-24 09:30:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "opendev%2Fjeepyb~master~Ib54b5717c2e2051addc2d7208a70b82a66ca8ccb": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 18:36:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-03-23 18:36:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fcinder~stable%2Fqueens~Ic616bbcced22db6eb8c8946dec98aefd84b16c31": {"owner_id": 4523, "owner_name": "Eric Harney", "owner_email": "eharney@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 01:23:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-03-23 21:08:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-23 14:53:48.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 1, "date": "2020-03-23 14:34:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-openstacklib~master~Icac198e59c369c6acb63dc4692b3408995a5481e": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}], "comments": {}}, "openstack%2Fproject-config~master~I52ee1533fea0fcbf68eaee3a73c0e666a284f3c3": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:40:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-03-24 14:43:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fopenstacksdk~master~Ie29d10475e8d1af1beea3cc5b45984f2be9236ef": {"owner_id": 27900, "owner_name": "Artem Goncharov", "owner_email": "artem.goncharov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-03-24 13:09:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"openstack/cloud/openstackcloud.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f2ae7b2f", "line": 796, "range": {"start_line": 796, "start_character": 12, "end_line": 796, "end_character": 50}, "updated": "2020-02-10 17:05:59.000000000", "message": "Could we at least provide a way for the caller to specify an executor, defaulting to the sync one? I'm not sure how well using this will play with greenlet-based projects.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_5fe12597", "line": 796, "range": {"start_line": 796, "start_character": 12, "end_line": 796, "end_character": 50}, "in_reply_to": "3fa7e38b_4e6b20b7", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "d96df9174298bd5930e849ab683c3d0a2292cf6b", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_4e6b20b7", "line": 796, "range": {"start_line": 796, "start_character": 12, "end_line": 796, "end_character": 50}, "in_reply_to": "3fa7e38b_93d13f59", "updated": "2020-02-11 09:31:23.000000000", "message": "bypassing completely. not sure all callers will be fond of having threads created underneath.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "b60820fbc9b604f421b13205d2ec8a01b0e107d6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_93d13f59", "line": 796, "range": {"start_line": 796, "start_character": 12, "end_line": 796, "end_character": 50}, "in_reply_to": "3fa7e38b_f2ae7b2f", "updated": "2020-02-11 08:36:34.000000000", "message": "do you mind passing num_threads=1, or having possibility to bypass usage of ThreadPoolExecutor?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_12b47780", "line": 797, "range": {"start_line": 797, "start_character": 16, "end_line": 797, "end_character": 39}, "updated": "2020-02-10 17:05:59.000000000", "message": "As a bonus, you won't need to support all possible options of all possible executors.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "254208cea787ad0628f7079c67ed4addccdac194", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_557c7621", "line": 809, "range": {"start_line": 808, "start_character": 0, "end_line": 809, "end_character": 57}, "updated": "2020-02-20 13:07:22.000000000", "message": "Why not just allow passing an executor (or None)? This will reduce the amount of code here and will allow people to use custom executors.", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "20d596a146e3d56464596016337094103bd4e845", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_c000a6b3", "line": 809, "range": {"start_line": 808, "start_character": 0, "end_line": 809, "end_character": 57}, "in_reply_to": "3fa7e38b_5565561b", "updated": "2020-02-20 13:44:09.000000000", "message": "You cannot serious call \"reinventing wheel\" calling a constructor with one argument...", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "f27dd8efc58552d92f06c9e7856e12680e29b06f", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_5565561b", "line": 809, "range": {"start_line": 808, "start_character": 0, "end_line": 809, "end_character": 57}, "in_reply_to": "3fa7e38b_557c7621", "updated": "2020-02-20 13:37:29.000000000", "message": "well, I guess this will make situation even worse - nobody knows how to use it and reinvent a wheel or copy paste the same code over and over. I would like SDK to offer function, that can be consumed, and not that it needs additional glue to work. While I can move this to another \"wrapper\" function and have possibility to inject executor here, this will lead to 2 public functions. Is this better?", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "5b8ae51a6fc7a48d29e755a045e2820c64f14352", "unresolved": false, "patch_set": 13, "id": "1fa4df85_25d3d73a", "line": 767, "updated": "2020-02-26 15:16:35.000000000", "message": "In openstack/cloud/_object_store.py we have self.__pool_executor and a TODO about making it possible to do just this. \n\nWhy don't we make it a Connection level parameter. That way we can allow people to set up their Connection correctly when they make it for whatever scenario they are in. Then here we can just use self.__pool_executor and be done with it.\n\nAs absurd as it sounds, maybe we even implement a SynchronousExecutor which is what people can pass an instance of if they don't want any concurrency at all. (it's three methods, might be super simple?)", "commit_id": "de826f92dad4835aa28cf201a3d60d8755d36825"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "aa2163332382b80d1ea2d01256ee612126b0859a", "unresolved": false, "patch_set": 13, "id": "1fa4df85_8acb7870", "line": 767, "in_reply_to": "1fa4df85_25d3d73a", "updated": "2020-03-02 16:07:41.000000000", "message": "++ to a connection-level parameter, then we won't have to have this discussion again.\n\nThe futurist library has a synchronous executor, but I'm not sure if we want a dependency.", "commit_id": "de826f92dad4835aa28cf201a3d60d8755d36825"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "5b8ae51a6fc7a48d29e755a045e2820c64f14352", "unresolved": false, "patch_set": 13, "id": "1fa4df85_65778f3c", "line": 769, "updated": "2020-02-26 15:16:35.000000000", "message": "I'd prefer for the default behavior to be ThreadPool. The reason for this is the same reason we started with that for object uploads and left the others as a \"we'll get to it later\" ... which is that we should always make sdk do the best thing for the default situation by default and not make normal users opt-in to \"good\" behavior.\n\nOperating in an environment where Threads might not work is not normal, it's an advanced paradigm and it's reasonable to expect users of the SDK who are operating in such a paradigm to know that they are and thus that they need to pass a GreenthreadExecutor. If someone is just writing a script to do some cleanup, there is no reason for them to not want parallel operation here (it's remote network calls, not CPU intensive things that'll kill a machine) - so it's not reasonable to ask them to pass executor=ThreadPoolExecutor() to get reasonable performance.", "commit_id": "de826f92dad4835aa28cf201a3d60d8755d36825"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "aa2163332382b80d1ea2d01256ee612126b0859a", "unresolved": false, "patch_set": 13, "id": "1fa4df85_4ac5805a", "line": 769, "in_reply_to": "1fa4df85_65778f3c", "updated": "2020-03-02 16:07:41.000000000", "message": "I'm probably okay with defaulting to a thread pool, as long as it can be completely overridden.", "commit_id": "de826f92dad4835aa28cf201a3d60d8755d36825"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "e8cff7b13ea829dba57b7c48b085948205b6eba8", "unresolved": false, "patch_set": 14, "id": "df33271e_3bc5a48f", "line": 791, "updated": "2020-03-23 14:12:48.000000000", "message": "I think since we're using futurist for the pool executor now we could just point people at the single threaded executor from futurist?", "commit_id": "16f6344e25e647b19ee3442572dfbfbd62d72559"}], "openstack/config/cloud_region.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f28f5b1e", "line": 368, "range": {"start_line": 368, "start_character": 39, "end_line": 368, "end_character": 46}, "updated": "2020-02-10 17:05:59.000000000", "message": "nit: keys() not needed", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}], "openstack/connection.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f263db16", "line": 473, "range": {"start_line": 473, "start_character": 0, "end_line": 473, "end_character": 56}, "updated": "2020-02-10 17:05:59.000000000", "message": "This seems a potentially breaking change, no?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "b60820fbc9b604f421b13205d2ec8a01b0e107d6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f3d67354", "line": 473, "range": {"start_line": 473, "start_character": 0, "end_line": 473, "end_character": 56}, "in_reply_to": "3fa7e38b_f263db16", "updated": "2020-02-11 08:36:34.000000000", "message": "Don't think so. Actually I doubt anyone is using this interface except me, and I would rather treat this as a bugfix to allow existing connection interfaces to work properly for added services", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}], "openstack/proxy.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_d26edffc", "line": 505, "range": {"start_line": 505, "start_character": 1, "end_line": 505, "end_character": 23}, "updated": "2020-02-10 17:05:59.000000000", "message": "You're forcing all proxies to implement it, even those that don't support projects at all. Why not default to `return None`?\n\nAnd IIRC using abstractmethod requires using ABCMeta as the classes's metaclass.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_dff43559", "line": 505, "range": {"start_line": 505, "start_character": 1, "end_line": 505, "end_character": 23}, "in_reply_to": "3fa7e38b_b3b55b1c", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "b60820fbc9b604f421b13205d2ec8a01b0e107d6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_b3b55b1c", "line": 505, "range": {"start_line": 505, "start_character": 1, "end_line": 505, "end_character": 23}, "in_reply_to": "3fa7e38b_d26edffc", "updated": "2020-02-11 08:36:34.000000000", "message": "agree, will change that", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7277ebd3", "line": 509, "updated": "2020-02-10 17:05:59.000000000", "message": "ditto", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_fff1f165", "line": 509, "in_reply_to": "3fa7e38b_7277ebd3", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_52318f09", "line": 521, "updated": "2020-02-10 17:05:59.000000000", "message": "Since you're silencing the error, let us log both obj and the actual exception.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_9f8c7ddf", "line": 521, "in_reply_to": "3fa7e38b_52318f09", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "254208cea787ad0628f7079c67ed4addccdac194", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_d56f065f", "line": 518, "updated": "2020-02-20 13:07:22.000000000", "message": "nit: str() not needed, implied by %s", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}], "openstack/utils.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_123797ff", "line": 197, "updated": "2020-02-10 17:05:59.000000000", "message": "I wonder if there is a ready-to-use library.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "b60820fbc9b604f421b13205d2ec8a01b0e107d6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_935fffe2", "line": 197, "in_reply_to": "3fa7e38b_123797ff", "updated": "2020-02-11 08:36:34.000000000", "message": "Well, there are similar libraries, but:\n1) I was not able to find one, which would allow parallel walking\n2) using \"unmaintaned\" libs is not good\n3) pulling big maintainer lib for this amount of code is not reasonable\n4) due to specific processing pattern better to have it under our control\n\n-> I was doing investigation and came to conclusion, that it is better to have own impl", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_b208032e", "line": 206, "range": {"start_line": 206, "start_character": 21, "end_line": 206, "end_character": 37}, "updated": "2020-02-10 17:05:59.000000000", "message": "Similarly to my earlier comment, we shouldn't assume normal threading (or monkey patching). Actually, using Queue assumes it as well (and removes the requirement of a Lock).", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_78e34d3b", "line": 215, "updated": "2020-02-10 17:05:59.000000000", "message": "nit:\n\n @property\n def graph(self)", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_bf9139f9", "line": 215, "in_reply_to": "3fa7e38b_78e34d3b", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f8917d9c", "line": 222, "range": {"start_line": 221, "start_character": 0, "end_line": 222, "end_character": 37}, "updated": "2020-02-10 17:05:59.000000000", "message": "nit:\n\n self._graph.setdefault(node, set())", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_5f9605f1", "line": 222, "range": {"start_line": 221, "start_character": 0, "end_line": 222, "end_character": 37}, "in_reply_to": "3fa7e38b_f8917d9c", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_78ccadbd", "line": 229, "range": {"start_line": 229, "start_character": 0, "end_line": 229, "end_character": 28}, "updated": "2020-02-10 17:05:59.000000000", "message": "nit: can be merged in the next loop, no need to traverse the dict twice.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7f9bc115", "line": 229, "range": {"start_line": 229, "start_character": 0, "end_line": 229, "end_character": 28}, "in_reply_to": "3fa7e38b_78ccadbd", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_180a591d", "line": 238, "range": {"start_line": 238, "start_character": 0, "end_line": 238, "end_character": 40}, "updated": "2020-02-10 17:05:59.000000000", "message": "Why cannot we do this in __init__? I don't see a point in this function, to be honest..", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1f808d9d", "line": 238, "range": {"start_line": 238, "start_character": 0, "end_line": 238, "end_character": 40}, "in_reply_to": "3fa7e38b_180a591d", "updated": "2020-02-18 08:52:49.000000000", "message": "because normally you might want to go through the DAG multiple times - this is an entry point. Iterator can be also used, but ideally \"walk\" should be used, especially if using timeout", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_9875e999", "line": 246, "updated": "2020-02-10 17:05:59.000000000", "message": "Seems not needed. Queue is thread-safe, len() is likely pseudo-atomic because of GIL.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "b60820fbc9b604f421b13205d2ec8a01b0e107d6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_d3f577ca", "line": 246, "in_reply_to": "3fa7e38b_9875e999", "updated": "2020-02-11 08:36:34.000000000", "message": "I will test without lock. I was fighting with some corner cases in case of multiple processor threads, but not sure now whether this was to solve one of them", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ff7491cf", "line": 246, "in_reply_to": "3fa7e38b_d3f577ca", "updated": "2020-02-18 08:52:49.000000000", "message": "Well, difficult topic.\n1) I personally prefer to write a readable code, which can be understood without knowing deep shortcuts (not against using them for critical performance paths)\n2) corner case is when multiple threads start fighting/waiting for last entry, where there are less possible items, than workers. The condition inside helps here, but still require atomic check.\n3) the condition might be reworked and lock removed, but it becomes much worse in readability\n4) simply removing lock does not help - from time to time it fails", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_b8122555", "line": 249, "updated": "2020-02-10 17:05:59.000000000", "message": "nit: keys() redundant", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_38187570", "line": 250, "updated": "2020-02-10 17:05:59.000000000", "message": "nit: _queue should be initialized in __init__", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7f42e169", "line": 250, "in_reply_to": "3fa7e38b_38187570", "updated": "2020-02-18 08:52:49.000000000", "message": "initialized in _start_traverse, since we can walk multiple times through the graph", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_386635f2", "line": 262, "updated": "2020-02-10 17:05:59.000000000", "message": "This definitely needs a better error message, how should an admin react to this?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1f572d2b", "line": 262, "in_reply_to": "3fa7e38b_386635f2", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f86dfd99", "line": 288, "range": {"start_line": 288, "start_character": 15, "end_line": 288, "end_character": 30}, "updated": "2020-02-10 17:05:59.000000000", "message": "you don't seem to use self._in_degree anywhere else, maybe use a local variable and avoid copy() in start_traverse?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "254208cea787ad0628f7079c67ed4addccdac194", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_55df960a", "line": 288, "range": {"start_line": 288, "start_character": 15, "end_line": 288, "end_character": 30}, "in_reply_to": "3fa7e38b_3f546923", "updated": "2020-02-20 13:07:22.000000000", "message": "Doesn't seem done?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "f27dd8efc58552d92f06c9e7856e12680e29b06f", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_609d32b9", "line": 288, "range": {"start_line": 288, "start_character": 15, "end_line": 288, "end_character": 30}, "in_reply_to": "3fa7e38b_55df960a", "updated": "2020-02-20 13:37:29.000000000", "message": "well, right, not done in this sense. Instead I have rechecked, that there is need for _in_degree for each \"traverse\" run (might be multiple). And thus - _get_in_degree fills the structure for the current state of graph and _start_traverse get's a runtime copy, since it needs to alter it upon \"node_done\". When we add additional node/edge - we invalidate _in_degree.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_3f546923", "line": 288, "range": {"start_line": 288, "start_character": 15, "end_line": 288, "end_character": 30}, "in_reply_to": "3fa7e38b_f86dfd99", "updated": "2020-02-18 08:52:49.000000000", "message": "Done", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f8a89dda", "line": 296, "updated": "2020-02-10 17:05:59.000000000", "message": "nit: maybe use \"pop\" in the name since it actually modifies the object.", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "74c86426e569721aa5eba56e31f8bcebd85e3eef", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1861f9d4", "line": 305, "updated": "2020-02-10 17:05:59.000000000", "message": "Maybe use the standard __len__ contract?", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "8108a6955a6f80d55aa81a5a0387b7b831ecfc77", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7f3741ff", "line": 305, "in_reply_to": "3fa7e38b_1861f9d4", "updated": "2020-02-18 08:52:49.000000000", "message": "I prefer to use public methods, rather than internal implementation of the \"foreign\" stuff (unless definitely required)", "commit_id": "e1d658aee7a026fd898c90468033d69f24c97114"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "254208cea787ad0628f7079c67ed4addccdac194", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_5591d644", "line": 222, "range": {"start_line": 222, "start_character": 0, "end_line": 222, "end_character": 35}, "updated": "2020-02-20 13:07:22.000000000", "message": "This line can be removed, it's what setdefault does", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "f27dd8efc58552d92f06c9e7856e12680e29b06f", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_80794e82", "line": 222, "range": {"start_line": 222, "start_character": 0, "end_line": 222, "end_character": 35}, "in_reply_to": "3fa7e38b_5591d644", "updated": "2020-02-20 13:37:29.000000000", "message": "I wonder I commited it in this state :D", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "254208cea787ad0628f7079c67ed4addccdac194", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_35ed3ab9", "line": 275, "updated": "2020-02-20 13:07:22.000000000", "message": "You need to use self._lock in this function, that's the place that actually races with __next__. Otherwise the lock is useless.", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}, {"author": {"_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, "change_message_id": "f27dd8efc58552d92f06c9e7856e12680e29b06f", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_f5fa4210", "line": 275, "in_reply_to": "3fa7e38b_35ed3ab9", "updated": "2020-02-20 13:37:29.000000000", "message": "You are right - lock need to be here as well", "commit_id": "d31c31c739050249cc75e9b392377dcb54059463"}]}}, "airship%2Fairshipctl~master~Ic0b8d3943d8eaa2bbde494b25677268fe1693eff": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~stable%2Ftrain~I44650912e88808ce56b347633093e05d5741252c": {"owner_id": 26114, "owner_name": "Yong Huang", "owner_email": "yong.huang@emc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 09:26:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 2, "date": "2020-03-20 12:53:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}], "comments": {}}, "airship%2Fairshipctl~master~I31acb3de7f3ae339ab0b9a48a37df09eb694bdb7": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 21:19:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 1, "date": "2020-03-23 10:54:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30847, "name": "Nikolay Fedorov", "email": "nfedorov@mirantis.com", "username": "nfedorov"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 7321, "name": "Prakash Ramchandran", "email": "pramchan@yahoo.com", "username": "pramchan"}, {"value": 2, "date": "2020-03-24 14:26:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"manifests/function/cluster-api/kustomization.yaml": [{"author": {"_account_id": 30847, "name": "Nikolay Fedorov", "email": "nfedorov@mirantis.com", "username": "nfedorov"}, "change_message_id": "60c84d796d1f1febb28a84ca635adabdf589dbd3", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ce3c04ca", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 0}, "updated": "2020-03-20 12:09:47.000000000", "message": "\"- ../../global/crd/cluster-api\"\nI think it shold be here.", "commit_id": "c1ccfe72d59479bd1652dbccd8ea1b396ed8b53c"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "aa504399bf44856d9223dda3aba9c8462db743a8", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ee86a0b9", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 0}, "in_reply_to": "1fa4df85_ce3c04ca", "updated": "2020-03-20 12:58:02.000000000", "message": "Done", "commit_id": "c1ccfe72d59479bd1652dbccd8ea1b396ed8b53c"}]}}, "openstack%2Fpython-openstackclient~master~I76c94470f8675cc6bdc64fe32c3f0ce37f7308ea": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 13:16:24.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 1, "date": "2020-03-24 13:13:18.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Frequirements~master~Ic9dcae3630f195126956289699d3e7428b133427": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": {}, "comments": {}}, "openstack%2Fproject-config~master~Iaf6575b2652c1e2da397b5e557ce0ed55ed12ad2": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": -1, "date": "2020-03-24 14:00:36.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "airship%2Fpromenade~master~I5e5e303dc6982b874681ff9d6598b975d71d089d": {"owner_id": 18256, "owner_name": "Hemachandra Reddy", "owner_email": "hemachandra.reddy@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14029, "name": "Alexander Vlasov", "email": "vlasov.alexandr89@gmail.com", "username": "avlasov"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18250, "name": "Roy Tang", "email": "roy.s.tang@att.com", "username": "rt7380"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "openstack%2Fgovernance~master~Ia72323805e4eb8c2407bf8d9dfdfe066f860b2a3": {"owner_id": 7198, "owner_name": "Jay Bryant", "owner_email": "jungleboyj@electronicjungle.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 10607, "name": "Alexandra Settle", "email": "a.settle@outlook.com", "username": "asettle"}, {"value": 0, "_account_id": 136, "name": "Tim Bell", "email": "tim.bell@cern.ch", "username": "tim-bell"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 23078, "name": "Jeremy Freudberg", "email": "jeremyfreudberg@gmail.com", "username": "jeremyfreudberg"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 1, "date": "2020-03-19 22:23:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {"doc/source/index.rst": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "86f03ff40de1fa3bbfbc6b866e6e93c51a49e43b", "unresolved": false, "patch_set": 5, "id": "df33271e_d73560f9", "line": 87, "updated": "2020-03-24 07:07:55.000000000", "message": "I would add that the idea here is to establish long term trends by asking the same questions, and revise when necessary.\n\nI would also explain why these are important: To establish what the community has been using (and have this as a \"golden signal\"), but also to establish TC relevance, and OpenStack focus.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}], "doc/source/user_survey/analysis-12-2019.rst": [{"author": {"_account_id": 23078, "name": "Jeremy Freudberg", "email": "jeremyfreudberg@gmail.com", "username": "jeremyfreudberg"}, "change_message_id": "0bf867ad06623c0cccc403021685c34e39800dd2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_20de856a", "line": 47, "range": {"start_line": 43, "start_character": 0, "end_line": 47, "end_character": 77}, "updated": "2019-12-16 18:32:47.000000000", "message": "i would find this (and other lists like it) easier to read if it were sorted", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "bb6c05a2508a3c5af7c324da45e98fcfe6c02540", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d44241ab", "line": 47, "range": {"start_line": 43, "start_character": 0, "end_line": 47, "end_character": 77}, "in_reply_to": "3fa7e38b_20de856a", "updated": "2020-03-05 04:08:54.000000000", "message": "Done", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "1583247e77fa95d957f3c034052c30467b06d969", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_292d50fc", "line": 58, "range": {"start_line": 55, "start_character": 0, "end_line": 58, "end_character": 17}, "updated": "2020-02-06 14:03:49.000000000", "message": "Since you say in two places that we are not revising the question list for next survey, it may be good to add that we don't think this has the imminent importance to warrant revising the question list.", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "bb6c05a2508a3c5af7c324da45e98fcfe6c02540", "unresolved": false, "patch_set": 2, "id": "1fa4df85_5402d170", "line": 58, "range": {"start_line": 55, "start_character": 0, "end_line": 58, "end_character": 17}, "in_reply_to": "3fa7e38b_292d50fc", "updated": "2020-03-05 04:08:54.000000000", "message": "Done", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "0538709205a4f240caf8122c09a4afcf57774127", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_29df900c", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "updated": "2019-12-11 21:22:04.000000000", "message": "In lieu of doing further analysis on the raw data to determine the gap between use and contribution, maybe we could just report the number of contributing users of each project as a percentage of the overall number of users.\nAs you say, this is just telling us that popular projects are popular.", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "7353a393f32b93688442f899f11aea858ed6d23b", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4b8ef226", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "in_reply_to": "3fa7e38b_29df900c", "updated": "2019-12-22 12:43:47.000000000", "message": "It's fine for me. It helps on knowing the ecosystem globally.", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "c3f2104011193209231e3af279795d0b2edde525", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7ba27199", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "in_reply_to": "3fa7e38b_29df900c", "updated": "2020-01-02 15:44:26.000000000", "message": "Zane, We discussed this a bit during office hours today.  Trying to figure out how we would do this.  It would be good to show the number of Users contributing as an overall percentage of total contributions to a project, but I am not sure how we can determine who the users are as opposed to other developers.  It was suggested that we could add a note here that this only indicates the number of users who responded to the survey and not overall contribution.  I could also get a percentage number ... I think we have the total number of contributors to each project documented somewhere.  Right?", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "b2c9171d053cd470a51bcab110c5a1b651255e86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_404ea496", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "in_reply_to": "3fa7e38b_4b8ef226", "updated": "2020-01-02 15:06:52.000000000", "message": "+1. If we can get that percentage, then it will be nice view of project situation in both term of 'less contributors though project is in demand for openstack eco system' and 'less contribution because less users'", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "53ba24a9cad4c12d8aa1f9b013141ce6d9dec80f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f92ded8f", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "in_reply_to": "3fa7e38b_7ba27199", "updated": "2020-01-06 20:10:17.000000000", "message": "I meant purely using this data. So 45 respondents said they contributed to Nova, while (presumably) 300+ said they have Nova installed, so ~<15% of Nova users also contributed; then do the same for every project.", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "bb6c05a2508a3c5af7c324da45e98fcfe6c02540", "unresolved": false, "patch_set": 2, "id": "1fa4df85_7407cd83", "line": 88, "range": {"start_line": 86, "start_character": 54, "end_line": 88, "end_character": 23}, "in_reply_to": "3fa7e38b_f92ded8f", "updated": "2020-03-05 04:08:54.000000000", "message": "Done", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "b2c9171d053cd470a51bcab110c5a1b651255e86", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_006bccef", "line": 99, "range": {"start_line": 96, "start_character": 0, "end_line": 99, "end_character": 18}, "updated": "2020-01-02 15:06:52.000000000", "message": "can we have the complete list here with exact number for each projects?", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "bb6c05a2508a3c5af7c324da45e98fcfe6c02540", "unresolved": false, "patch_set": 2, "id": "1fa4df85_d4d481eb", "line": 99, "range": {"start_line": 96, "start_character": 0, "end_line": 99, "end_character": 18}, "in_reply_to": "3fa7e38b_006bccef", "updated": "2020-03-05 04:08:54.000000000", "message": "Done", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "1583247e77fa95d957f3c034052c30467b06d969", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_49c0cc2b", "line": 195, "range": {"start_line": 195, "start_character": 11, "end_line": 195, "end_character": 17}, "updated": "2020-02-06 14:03:49.000000000", "message": "nit: *pleased", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "bb6c05a2508a3c5af7c324da45e98fcfe6c02540", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b4d785ee", "line": 195, "range": {"start_line": 195, "start_character": 11, "end_line": 195, "end_character": 17}, "in_reply_to": "3fa7e38b_49c0cc2b", "updated": "2020-03-05 04:08:54.000000000", "message": "Done", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "d98e80d73b93c7123a46815ddf7e7e0b12eac849", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_bb0c6939", "line": 209, "range": {"start_line": 209, "start_character": 7, "end_line": 209, "end_character": 8}, "updated": "2020-01-02 15:10:15.000000000", "message": "can we add the link to results also to know details?", "commit_id": "6f08bf6c3767820a8bc32e104c2b1afd4901a319"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "b708f0867cd8c36eafb796a721ced97fbb5b5f2c", "unresolved": false, "patch_set": 3, "id": "1fa4df85_d21b2c7e", "line": 299, "range": {"start_line": 299, "start_character": 7, "end_line": 299, "end_character": 8}, "updated": "2020-03-05 14:11:53.000000000", "message": "as mentioned by gmann in previous patch set, do we have link?", "commit_id": "d4b69690b799a49d01ff6be947fa462b7f004e31"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "4c8d9de4c7a1f5490ba615f5d17307ee5dca877f", "unresolved": false, "patch_set": 3, "id": "1fa4df85_7ec9dfa9", "line": 299, "range": {"start_line": 299, "start_character": 7, "end_line": 299, "end_character": 8}, "in_reply_to": "1fa4df85_d21b2c7e", "updated": "2020-03-08 15:51:01.000000000", "message": "Ugh, I forgot to look at that.", "commit_id": "d4b69690b799a49d01ff6be947fa462b7f004e31"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_c1cd9331", "line": 43, "range": {"start_line": 43, "start_character": 19, "end_line": 43, "end_character": 28}, "updated": "2020-03-06 01:16:14.000000000", "message": "For this question and everything below, could you provide percentage points as well, amongst these options... it will help the reader grasp the picture quicker when comparing within a given survey", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_9025d5c4", "line": 43, "range": {"start_line": 43, "start_character": 19, "end_line": 43, "end_character": 28}, "in_reply_to": "1fa4df85_c1cd9331", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_01df2bd6", "line": 68, "range": {"start_line": 68, "start_character": 47, "end_line": 68, "end_character": 49}, "updated": "2020-03-06 01:16:14.000000000", "message": "same comment as above..", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_b02251b8", "line": 68, "range": {"start_line": 68, "start_character": 47, "end_line": 68, "end_character": 49}, "in_reply_to": "1fa4df85_01df2bd6", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f1fc7772db31fac213cbe5fff4502577c993b2e2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_a98b8c65", "line": 69, "range": {"start_line": 69, "start_character": 9, "end_line": 69, "end_character": 28}, "updated": "2020-03-06 20:15:46.000000000", "message": "yo dawg", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_358f33ce", "line": 69, "range": {"start_line": 69, "start_character": 9, "end_line": 69, "end_character": 28}, "in_reply_to": "1fa4df85_a98b8c65", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f1fc7772db31fac213cbe5fff4502577c993b2e2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_095980fc", "line": 72, "updated": "2020-03-06 20:15:46.000000000", "message": "I have to disagree with fungi's earlier feedback here... sorting by how close you run to the stable head is more helpful than sorting by popularity of the choice imho.", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_502bdd93", "line": 72, "in_reply_to": "1fa4df85_095980fc", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 23078, "name": "Jeremy Freudberg", "email": "jeremyfreudberg@gmail.com", "username": "jeremyfreudberg"}, "change_message_id": "f414eae0ea0454a420b3b8826f76bd61106ab45d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_c9fcc871", "line": 72, "in_reply_to": "1fa4df85_095980fc", "updated": "2020-03-06 20:19:29.000000000", "message": "wasn't fungi, was me :)\nand yeah Zane's point is a good one", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "c5ac64ca8f3abda1518cb3948a7c82af461eca50", "unresolved": false, "patch_set": 4, "id": "1fa4df85_1668b81a", "line": 72, "in_reply_to": "1fa4df85_c9fcc871", "updated": "2020-03-07 02:19:41.000000000", "message": "Sorry, wrong Jeremy! :)\n/me will learn to read one day", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_3cc4ca90", "line": 88, "range": {"start_line": 88, "start_character": 30, "end_line": 88, "end_character": 43}, "updated": "2020-03-06 01:16:14.000000000", "message": "A link to what this means perhaps? DefCore/Interop perceived core?", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_d53c9fe2", "line": 88, "range": {"start_line": 88, "start_character": 30, "end_line": 88, "end_character": 43}, "in_reply_to": "1fa4df85_3cc4ca90", "updated": "2020-03-20 14:56:30.000000000", "message": "Done   I added a link to the definition of the Core Services from the security guide.  This describes what I was trying to communicate.", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f1fc7772db31fac213cbe5fff4502577c993b2e2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_891a5014", "line": 109, "range": {"start_line": 109, "start_character": 2, "end_line": 109, "end_character": 6}, "updated": "2020-03-06 20:15:46.000000000", "message": "It's not an acronym btw. People just spell it out because they don't know how to pronounce it ;)", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_d0102d5c", "line": 109, "range": {"start_line": 109, "start_character": 2, "end_line": 109, "end_character": 6}, "in_reply_to": "1fa4df85_891a5014", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_c11a73ca", "line": 117, "range": {"start_line": 117, "start_character": 2, "end_line": 117, "end_character": 7}, "updated": "2020-03-06 01:16:14.000000000", "message": "sp", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_3020a1ac", "line": 117, "range": {"start_line": 117, "start_character": 2, "end_line": 117, "end_character": 7}, "in_reply_to": "1fa4df85_c11a73ca", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f1fc7772db31fac213cbe5fff4502577c993b2e2", "unresolved": false, "patch_set": 4, "id": "1fa4df85_29b47cd0", "line": 189, "updated": "2020-03-06 20:15:46.000000000", "message": "This is super interesting actually. I suspect that extremely high participation rates are actually not a good sign (it's could be mostly someone scratching their own itch, not something that's widely needed... or just very very buggy :).\nObviously extremely low is not good either.\n\nSome of the results are quite surprising to me (e.g. Cinder and Designate, for opposite reasons). Others much less so.", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_3c492a30", "line": 235, "range": {"start_line": 235, "start_character": 0, "end_line": 235, "end_character": 49}, "updated": "2020-03-06 01:16:14.000000000", "message": "Could replace with:\n\nThis question elicited a response from x% of the respondents.", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_cbef201b", "line": 235, "range": {"start_line": 235, "start_character": 0, "end_line": 235, "end_character": 49}, "in_reply_to": "1fa4df85_3c492a30", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_fc4e3236", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 19}, "updated": "2020-03-06 01:16:14.000000000", "message": "same concern as above - could you represent this as a percentage...", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_6b4e2c39", "line": 258, "range": {"start_line": 257, "start_character": 0, "end_line": 258, "end_character": 19}, "in_reply_to": "1fa4df85_fc4e3236", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_9c613eac", "line": 263, "range": {"start_line": 263, "start_character": 3, "end_line": 263, "end_character": 25}, "updated": "2020-03-06 01:16:14.000000000", "message": "What does this mean? :) User groups?", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_cb5640cf", "line": 263, "range": {"start_line": 263, "start_character": 3, "end_line": 263, "end_character": 25}, "in_reply_to": "1fa4df85_9c613eac", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e43505d602e2b3d19b622d62247d6e547be269d5", "unresolved": false, "patch_set": 4, "id": "1fa4df85_7c5c82ec", "line": 305, "range": {"start_line": 305, "start_character": 13, "end_line": 305, "end_character": 14}, "updated": "2020-03-06 01:16:14.000000000", "message": "nit: trailing whitespace", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 4, "id": "1fa4df85_ab718478", "line": 305, "range": {"start_line": 305, "start_character": 13, "end_line": 305, "end_character": 14}, "in_reply_to": "1fa4df85_7c5c82ec", "updated": "2020-03-20 14:56:30.000000000", "message": "Done", "commit_id": "b3a964d6ee87864784eb5eed6f2212c0ed640bf6"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "821e0b31af5fefb8a5769e85b00a6f0e408d70db", "unresolved": false, "patch_set": 5, "id": "df33271e_9205bc7d", "line": 134, "range": {"start_line": 132, "start_character": 0, "end_line": 134, "end_character": 62}, "updated": "2020-03-23 00:42:31.000000000", "message": "this is really nice info and I think we publish this on various places like BoD, openstack sites, newsletter or to companies to encourage users to help in contribution also.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "e6105bb0eaa63a5539e3906875cfd4ce92ef1892", "unresolved": false, "patch_set": 5, "id": "1fa4df85_45531c18", "line": 234, "range": {"start_line": 234, "start_character": 67, "end_line": 234, "end_character": 70}, "updated": "2020-03-19 22:23:04.000000000", "message": "Wow - I love this number :) given it only gives us a picture from those that took the user survey, I love it that most of our users are engaging with contributors by finding and reporting bugs.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, "change_message_id": "7c1410663dfab7c8d9c8a6e5fb4e2642cf90b77d", "unresolved": false, "patch_set": 5, "id": "df33271e_2118eed1", "line": 234, "range": {"start_line": 234, "start_character": 67, "end_line": 234, "end_character": 70}, "in_reply_to": "1fa4df85_45531c18", "updated": "2020-03-20 14:56:30.000000000", "message": "Agreed.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "86f03ff40de1fa3bbfbc6b866e6e93c51a49e43b", "unresolved": false, "patch_set": 5, "id": "df33271e_d71e006f", "line": 238, "range": {"start_line": 238, "start_character": 2, "end_line": 238, "end_character": 13}, "updated": "2020-03-24 07:07:55.000000000", "message": "nit: participate.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "86f03ff40de1fa3bbfbc6b866e6e93c51a49e43b", "unresolved": false, "patch_set": 5, "id": "df33271e_f2feb203", "line": 266, "range": {"start_line": 265, "start_character": 0, "end_line": 266, "end_character": 32}, "updated": "2020-03-24 07:07:55.000000000", "message": "I would add that during Covid-19 times, it's important to know that dropping events will prevent the second and third level of contributions. We should do this right! :)", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "380a8f24e44d7644f9a0ae1c7ffab002e05b05e5", "unresolved": false, "patch_set": 5, "id": "df33271e_3a246c0d", "line": 266, "range": {"start_line": 265, "start_character": 0, "end_line": 266, "end_character": 32}, "in_reply_to": "df33271e_7a743436", "updated": "2020-03-24 14:08:05.000000000", "message": "I thought this exercice was to analyse results, not only dropping results. But we can disagree in a follow up patch :)", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "720d6fa50366a5e328639f716844b6ae18b21d04", "unresolved": false, "patch_set": 5, "id": "df33271e_7a743436", "line": 266, "range": {"start_line": 265, "start_character": 0, "end_line": 266, "end_character": 32}, "in_reply_to": "df33271e_f2feb203", "updated": "2020-03-24 14:03:42.000000000", "message": "I would not make conclusions that the evidence does not show.  That is a forward looking statement, not one reflective of the survey as written.", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "86f03ff40de1fa3bbfbc6b866e6e93c51a49e43b", "unresolved": false, "patch_set": 5, "id": "df33271e_f227d2b5", "line": 323, "updated": "2020-03-24 07:07:55.000000000", "message": "Should we use this to add User Groups as a way to participate for the next survey iteration, in the \"How do members of your organization contribute to OpenStack\" section?", "commit_id": "2af6df036448b5e522a8e0040a4f32a2b56349e5"}]}}, "openstack%2Frpm-packaging~stable%2Ftrain~If0d982c0b317f5dc12962f1853ef90ced1007c2d": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 14:03:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 18:57:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Fpython-openstackclient~master~I16f48e292997d029d68f66365db949b9f4b5a0c8": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 12:37:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 16011, "name": "James Denton", "email": "james.denton@outlook.com", "username": "busterswt"}, {"value": 2, "date": "2020-03-23 16:53:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 1, "date": "2020-03-24 08:40:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "4960404b155c1ea022e3e1c74a1d5aef84529263", "unresolved": false, "patch_set": 3, "id": "1fa4df85_90bd67b8", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 11}, "updated": "2020-03-10 21:44:36.000000000", "message": "nit: \"OVO fields\" is not visible to API users. Perhaps you would like to mean \"API fields\" converted into OVO fields inside neutron.", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "1a6261089c6f47eceabb2779c5ef64d02c6b2a31", "unresolved": false, "patch_set": 3, "id": "1fa4df85_74b43ff3", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 11}, "in_reply_to": "1fa4df85_90bd67b8", "updated": "2020-03-12 11:44:02.000000000", "message": "You are right, we don't expose the OVO fields but what is defined in the API. I'll change it.", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "4960404b155c1ea022e3e1c74a1d5aef84529263", "unresolved": false, "patch_set": 3, "id": "1fa4df85_30b033dd", "line": 13, "range": {"start_line": 13, "start_character": 37, "end_line": 13, "end_character": 46}, "updated": "2020-03-10 21:44:36.000000000", "message": "nit: we usually use OSC rather than OS client.", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "1a6261089c6f47eceabb2779c5ef64d02c6b2a31", "unresolved": false, "patch_set": 3, "id": "1fa4df85_b4bab7de", "line": 13, "range": {"start_line": 13, "start_character": 37, "end_line": 13, "end_character": 46}, "in_reply_to": "1fa4df85_30b033dd", "updated": "2020-03-12 11:44:02.000000000", "message": "Right!", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}], "openstackclient/network/v2/security_group.py": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "29e8bfd3083437bbbe09315740c7369cf381e244", "unresolved": false, "patch_set": 2, "id": "1fa4df85_10a325b4", "line": 205, "updated": "2020-03-03 16:12:52.000000000", "message": "Why all uppercase?\n\nThe use of a set here works, but it trips up openstackclient's debug printing (openstack --debug). See the url in this example:\n\nREQ: curl -g -i -X GET \"http://192.168.122.169:9696/v2.0/security-groups?fields=%7B%27id%27%2C+%27name%27%2C+%27description%27%2C+%27tags%27%2C+%27project_id%27%7D\" -H \"Accept: application/json\" -H \"User-Agent: openstacksdk/0.40.1 keystoneauth1/3.18.0 python-requests/2.22.0 CPython/3.6.9\" -H \"X-Auth-Token: {SHA256}f020d0396d8918b0b8a084902b4182daa82492d4dda1bc9a0dec5506e7e64100\"\n\nWhile the actual URL on the wire is good:\n\nGET /v2.0/security-groups?fields=id&fields=name&fields=description&fields=tags&fields=project_id HTTP/1.1.", "commit_id": "6940191fdee726cc188dfbdd9a05ad5a1dc8e638"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ed1060a962335ca3423282383e40fe324e0a3034", "unresolved": false, "patch_set": 2, "id": "1fa4df85_70293999", "line": 205, "in_reply_to": "1fa4df85_10a325b4", "updated": "2020-03-03 16:40:10.000000000", "message": "I defined this in uppercase because this is a class constant.\n\nMaybe I should use a list, but I think both work. Other reviewers for sure will help us on this.", "commit_id": "6940191fdee726cc188dfbdd9a05ad5a1dc8e638"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "6b232b002d6730c29db3f603e741e2c489c99b23", "unresolved": false, "patch_set": 2, "id": "1fa4df85_62c91c57", "line": 205, "in_reply_to": "1fa4df85_33bad9c0", "updated": "2020-03-09 15:29:32.000000000", "message": "Done", "commit_id": "6940191fdee726cc188dfbdd9a05ad5a1dc8e638"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "bf1d3bb99d65a7da6259fe1a7412a65bbe0bb901", "unresolved": false, "patch_set": 2, "id": "1fa4df85_33bad9c0", "line": 205, "in_reply_to": "1fa4df85_70293999", "updated": "2020-03-04 14:11:32.000000000", "message": "Yeah - let's use a list for the debug printing (we could also fix the debug printing because I think a set is nice here - but that's handled in keystoneauth and that seems like maybe a lot of work for this case.", "commit_id": "6940191fdee726cc188dfbdd9a05ad5a1dc8e638"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ed1060a962335ca3423282383e40fe324e0a3034", "unresolved": false, "patch_set": 2, "id": "1fa4df85_f0168955", "line": 243, "updated": "2020-03-03 16:40:10.000000000", "message": "Uhmmm, in PS2 now this is unnecessary.", "commit_id": "6940191fdee726cc188dfbdd9a05ad5a1dc8e638"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "4960404b155c1ea022e3e1c74a1d5aef84529263", "unresolved": false, "patch_set": 3, "id": "1fa4df85_d0143feb", "line": 205, "updated": "2020-03-10 21:44:36.000000000", "message": "This is specific to take_action_network. It looks better to use a name which clarifies it is used in case of \"network\" (i.e. \"neutron\") service. How about is \"FIELDS_NETWORK\"?\n(It is inside ListSecurityGroup class, so \"LIST_\" looks unnecessary.)\n\nnote: I first thought it is better to move it to take_action_network, but it is used in the unit tests, so it looks better to explore a better name.", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "3a05ed547ea24403152da5c87cea91477eb8c29e", "unresolved": false, "patch_set": 3, "id": "df33271e_fc132465", "line": 205, "in_reply_to": "1fa4df85_34024740", "updated": "2020-03-24 12:37:46.000000000", "message": "(just a comment) OSC still covers both nova-network and neutron. Thus, this class is not necessarily under network.v2 unfortunately. That's the detail reason I suggested including \"NETWORK\".\n\n(I think patch set 4 is clear enough, so I am fine with patch set 4. This is just a comment to clarify the situation of OSC.)", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "1a6261089c6f47eceabb2779c5ef64d02c6b2a31", "unresolved": false, "patch_set": 3, "id": "1fa4df85_34024740", "line": 205, "in_reply_to": "1fa4df85_d0143feb", "updated": "2020-03-12 11:44:02.000000000", "message": "I agree that \"LIST_\" is unnecessary being a class variable inside \"ListSecurityGroup\"\n\nBut in \"FIELDS_NETWORK\", \"_NETWORK\" looks unnecessary too. This is a network command and it's inside a class under network.v2.\n\nIMO, a good descriptive name could be \"FIELDS_TO_RETRIEVE\". This is accurate because we are going to retrieve only those API field parameters (the API call will return only those fields).", "commit_id": "96500a04569422dd68a54d22998e79f438d2ef04"}]}}, "openstack%2Ftempest~master~Ibec72b578424cb278006ac810bdd0359ec23de3f": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 00:46:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-03-24 11:50:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}], "comments": {}}, "openstack%2Fnetworking-ovn~master~I5189ce31682c7501cdff7a74bc824b8491377549": {"owner_id": 23804, "owner_name": "Daniel Alvarez", "owner_email": "dalvarez@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-01-03 13:52:47.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "ff7ec8284dfe1cc5a86e39c2ba3caffa3314f7e3", "unresolved": false, "patch_set": 1, "id": "7faddb67_f9546a56", "line": 12, "updated": "2019-07-26 15:33:02.000000000", "message": "I would recommend opening a bug for it to facilitate backporting to the stable branches", "commit_id": "6401e8171288248ca73957c01dacd1ab72b2bbc9"}]}}, "openstack%2Fproject-config~master~I46a02072a6d136fc22b6d4795dcc792aa5679429": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-03-24 13:02:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 13:04:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-03-24 13:11:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I0367a657ddf440f0b73c4de5346306f12439db15": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 14:33:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-03-23 14:35:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Icc9201cfc74a131767316955a57649b2eb377d78": {"owner_id": 24162, "owner_name": "Sorin Sb\u00e2rnea", "owner_email": "ssbarnea@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-03 14:12:59.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": -1, "date": "2020-02-03 14:47:11.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "27010afb71369a17537a6aa683175ee6f6beaf2f", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_fd7b1df0", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 20}, "updated": "2020-02-03 14:47:57.000000000", "message": "maybe it's related to this bug, but doesn't close it", "commit_id": "4454c16e32af140ea435ea91f4af9b7009a373ae"}], "toci-quickstart/config/collect-logs.yml": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "cf450bb3872c468d6ab4b76069682e7778d25849", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7d1acdc7", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 37}, "updated": "2020-02-03 14:47:11.000000000", "message": "it's not related to  artcl_gzip only, this is about all settings. You'd better write something like \"... these settings will override any environment and featureset settings for logs collection since it's applied as last variables file to ansible playbook ...\"", "commit_id": "4454c16e32af140ea435ea91f4af9b7009a373ae"}]}}, "openstack%2Fpython-tripleoclient~master~Ie264d7631aba9b8beb9962e1694446f6968170e5": {"owner_id": 16515, "owner_name": "mbu", "owner_email": "mat.bultel@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {"tripleoclient/v1/tripleo_validator.py": [{"author": {"_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, "change_message_id": "c96f7be44b9ab03bcb26f4f5bcb38633e038a876", "unresolved": false, "patch_set": 2, "id": "1fa4df85_3f3ae0e6", "line": 379, "updated": "2020-03-17 13:47:20.000000000", "message": "I would prefer to keep --validation and you can add --playbook as an alias here.", "commit_id": "09fe5131aa06a1067aba6c51457fde1f7c5c315b"}, {"author": {"_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, "change_message_id": "8ded695bc670f96488ba74c5f5c9570c09b52704", "unresolved": false, "patch_set": 6, "id": "df33271e_a72a33e4", "line": 354, "updated": "2020-03-23 17:34:22.000000000", "message": "This argument should be deleted. It was related to ThreadPoolExecutor we deleted too.", "commit_id": "445f2dd9e4ac8283fb289e238374dc87de4cb24a"}, {"author": {"_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, "change_message_id": "8ded695bc670f96488ba74c5f5c9570c09b52704", "unresolved": false, "patch_set": 6, "id": "df33271e_a7c6b315", "line": 380, "updated": "2020-03-23 17:34:22.000000000", "message": "I don't understand what this argument will exactly do", "commit_id": "445f2dd9e4ac8283fb289e238374dc87de4cb24a"}, {"author": {"_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, "change_message_id": "8ded695bc670f96488ba74c5f5c9570c09b52704", "unresolved": false, "patch_set": 6, "id": "df33271e_27daa3e8", "line": 421, "updated": "2020-03-23 17:34:22.000000000", "message": "This is Excellent!", "commit_id": "445f2dd9e4ac8283fb289e238374dc87de4cb24a"}]}}, "openstack%2Fpython-tripleoclient~master~I325878da6b4dae609e5c48688e18334ad6bb58cd": {"owner_id": 16515, "owner_name": "mbu", "owner_email": "mat.bultel@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}], "comments": {"requirements.txt": [{"author": {"_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}, "change_message_id": "cbb400ed03f41b4c8701633362375df9d8ba3fb8", "unresolved": false, "patch_set": 1, "id": "1fa4df85_5c16ca57", "line": 24, "updated": "2020-03-17 13:11:20.000000000", "message": "it should be python-validations-libs.", "commit_id": "4efb5323112a59ed9fc7755c6f1a666654959a45"}]}}, "openstack%2Fpython-tripleoclient~master~If78d475d222244f4e0c4159d873fde815be36048": {"owner_id": 16515, "owner_name": "mbu", "owner_email": "mat.bultel@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {}}, "openstack%2Freleases~master~Ibeffe0c5e22bc554b05ec20404747911b89a3c03": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 12:12:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-23 14:40:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I37ecf8b3e470584efaf33e5e51d373688bd7af80": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 12:10:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-03-23 14:39:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fironic-prometheus-exporter~master~I967312ab8ba572adb3155c98b5511aa9600c0d03": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-03-23 20:53:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"README.rst": [{"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_e67a89b8", "line": 4, "range": {"start_line": 4, "start_character": 71, "end_line": 4, "end_character": 73}, "updated": "2020-03-17 11:29:05.000000000", "message": "remove", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0f0c9139", "line": 4, "range": {"start_line": 4, "start_character": 71, "end_line": 4, "end_character": 73}, "in_reply_to": "1fa4df85_e67a89b8", "updated": "2020-03-17 17:05:16.000000000", "message": "I missed the \"e\" in *the* Prometheus format...", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}], "doc/source/conf.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_b2536c39", "line": 41, "updated": "2020-03-17 10:13:36.000000000", "message": "The foundation doesn't have a copyright here. Feel free to use \"Ironic Developers\" or \"Ironic Prometheus Exporter Developers\"", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cf0d1936", "line": 41, "in_reply_to": "1fa4df85_b2536c39", "updated": "2020-03-17 17:05:16.000000000", "message": "Changed to Ironic Developers", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_5230f807", "line": 73, "updated": "2020-03-17 10:13:36.000000000", "message": "ditto", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0f2571ab", "line": 73, "in_reply_to": "1fa4df85_5230f807", "updated": "2020-03-17 17:05:16.000000000", "message": "removed", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}], "doc/source/configuration.rst": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f259e45a", "line": 1, "updated": "2020-03-17 10:13:36.000000000", "message": "not needed, any document can be referred to via e.g. :doc:`/configuration`", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6f4ae555", "line": 1, "in_reply_to": "1fa4df85_f259e45a", "updated": "2020-03-17 17:05:16.000000000", "message": "ack", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_86307509", "line": 7, "range": {"start_line": 7, "start_character": 68, "end_line": 7, "end_character": 74}, "updated": "2020-03-17 11:29:05.000000000", "message": "below", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_265ae14f", "line": 7, "range": {"start_line": 7, "start_character": 30, "end_line": 7, "end_character": 43}, "updated": "2020-03-17 11:29:05.000000000", "message": "configuration parameters ?", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_463a7de7", "line": 7, "range": {"start_line": 7, "start_character": 66, "end_line": 7, "end_character": 67}, "updated": "2020-03-17 11:29:05.000000000", "message": "full stop", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cf3bd9c5", "line": 7, "range": {"start_line": 7, "start_character": 68, "end_line": 7, "end_character": 74}, "in_reply_to": "1fa4df85_86307509", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_9258b056", "line": 76, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: ironic-conductor, I assume? worth specifying.", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_af40dd36", "line": 76, "in_reply_to": "1fa4df85_9258b056", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_27b889c6", "line": 6, "range": {"start_line": 6, "start_character": 0, "end_line": 6, "end_character": 6}, "updated": "2020-03-18 11:27:03.000000000", "message": "nit: s/bellow/below", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}], "doc/source/install.rst": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_126cc006", "line": 1, "updated": "2020-03-17 10:13:36.000000000", "message": "not needed", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_326f7cfd", "line": 10, "updated": "2020-03-17 10:13:36.000000000", "message": "s/ref/doc/", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ef6fb5c2", "line": 10, "in_reply_to": "1fa4df85_326f7cfd", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_d275c8cd", "line": 12, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: Supported OS", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6f63c5dd", "line": 12, "in_reply_to": "1fa4df85_d275c8cd", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f27004dd", "line": 14, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: CentOS", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2f762da6", "line": 14, "in_reply_to": "1fa4df85_f27004dd", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a61c9177", "line": 21, "range": {"start_line": 21, "start_character": 43, "end_line": 21, "end_character": 49}, "updated": "2020-03-17 11:29:05.000000000", "message": "as pip package", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_46135d67", "line": 21, "range": {"start_line": 21, "start_character": 54, "end_line": 21, "end_character": 60}, "updated": "2020-03-17 11:29:05.000000000", "message": "as rpm package on RDO", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_c62d0da9", "line": 21, "range": {"start_line": 21, "start_character": 22, "end_line": 21, "end_character": 29}, "updated": "2020-03-17 11:29:05.000000000", "message": "exporter", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0fa811d9", "line": 21, "range": {"start_line": 21, "start_character": 22, "end_line": 21, "end_character": 29}, "in_reply_to": "1fa4df85_c62d0da9", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_927f50aa", "line": 23, "updated": "2020-03-17 10:13:36.000000000", "message": "Please use the standard numbering syntax:\n\n #.", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_afc53d90", "line": 23, "in_reply_to": "1fa4df85_927f50aa", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_b27a8cb7", "line": 33, "updated": "2020-03-17 10:13:36.000000000", "message": "missing dot after installation (line breaks are not rendered in rst).", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_060d653d", "line": 34, "range": {"start_line": 34, "start_character": 39, "end_line": 34, "end_character": 47}, "updated": "2020-03-17 11:29:05.000000000", "message": "exporter", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ef40150a", "line": 34, "range": {"start_line": 34, "start_character": 39, "end_line": 34, "end_character": 47}, "in_reply_to": "1fa4df85_060d653d", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2608a12b", "line": 41, "range": {"start_line": 41, "start_character": 33, "end_line": 41, "end_character": 44}, "updated": "2020-03-17 11:29:05.000000000", "message": "installation", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_4f92894d", "line": 41, "range": {"start_line": 41, "start_character": 33, "end_line": 41, "end_character": 44}, "in_reply_to": "1fa4df85_2608a12b", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_c6066d21", "line": 42, "range": {"start_line": 42, "start_character": 36, "end_line": 42, "end_character": 47}, "updated": "2020-03-17 11:29:05.000000000", "message": "installation", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_ef98156b", "line": 42, "range": {"start_line": 42, "start_character": 36, "end_line": 42, "end_character": 47}, "in_reply_to": "1fa4df85_c6066d21", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}], "doc/source/limitations.rst": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_f2ab241b", "line": 1, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: not needed", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_92aaf016", "line": 6, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: hardware types", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_efb1f5e2", "line": 6, "in_reply_to": "1fa4df85_92aaf016", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a901c206", "line": 7, "range": {"start_line": 7, "start_character": 12, "end_line": 7, "end_character": 18}, "updated": "2020-03-17 11:29:05.000000000", "message": "hardware type", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0fb571cd", "line": 7, "range": {"start_line": 7, "start_character": 12, "end_line": 7, "end_character": 18}, "in_reply_to": "1fa4df85_a901c206", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_b2a5ac49", "line": 8, "updated": "2020-03-17 10:13:36.000000000", "message": "\"We only output\"?", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_52623818", "line": 10, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: depending\n\nalso it it depends more on BMC itself than the driver", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cfcbd947", "line": 10, "in_reply_to": "1fa4df85_52623818", "updated": "2020-03-17 17:05:16.000000000", "message": "Gotcha, I  will change here to say that we provide different set of metrics depending on the hardware type. (It makes more sense)", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_e7b111e3", "line": 4, "range": {"start_line": 4, "start_character": 63, "end_line": 4, "end_character": 64}, "updated": "2020-03-18 11:27:03.000000000", "message": "nit: remove colon", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}], "doc/source/run.rst": [{"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_09125659", "line": 8, "range": {"start_line": 8, "start_character": 47, "end_line": 8, "end_character": 54}, "updated": "2020-03-17 11:29:05.000000000", "message": "in a development", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cf39993f", "line": 8, "range": {"start_line": 8, "start_character": 47, "end_line": 8, "end_character": 54}, "in_reply_to": "1fa4df85_09125659", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_290dd234", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 2}, "updated": "2020-03-17 11:29:05.000000000", "message": "in", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6f48a5cb", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 2}, "in_reply_to": "1fa4df85_290dd234", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_e916da49", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 49}, "updated": "2020-03-17 11:29:05.000000000", "message": "The application runs on port `9608` by default", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0f5fb172", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 49}, "in_reply_to": "1fa4df85_e916da49", "updated": "2020-03-17 17:05:16.000000000", "message": "> The application runs on port `9608` by default\n\nIt doesn't run by default on 9608, we don't have anything on the code.\nPeople should use this port when they run the application", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_892726b7", "line": 12, "range": {"start_line": 12, "start_character": 20, "end_line": 12, "end_character": 21}, "updated": "2020-03-17 11:29:05.000000000", "message": "add comma", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_8f4ac1a9", "line": 12, "range": {"start_line": 12, "start_character": 20, "end_line": 12, "end_character": 21}, "in_reply_to": "1fa4df85_892726b7", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_49212e9f", "line": 15, "range": {"start_line": 15, "start_character": 16, "end_line": 15, "end_character": 20}, "updated": "2020-03-17 11:29:05.000000000", "message": "needs", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "f9ff9901bc1f0477d55d496bd98e9f6ea7b89b00", "unresolved": false, "patch_set": 1, "id": "1fa4df85_69242ab0", "line": 16, "range": {"start_line": 16, "start_character": 49, "end_line": 16, "end_character": 57}, "updated": "2020-03-17 11:29:05.000000000", "message": "absolute path ?", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_6fe425ad", "line": 16, "range": {"start_line": 16, "start_character": 49, "end_line": 16, "end_character": 57}, "in_reply_to": "1fa4df85_69242ab0", "updated": "2020-03-17 17:05:16.000000000", "message": "yeah", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_524b1886", "line": 22, "updated": "2020-03-17 10:13:36.000000000", "message": "ditto re standard numbering syntax", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_724e5497", "line": 25, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: I think it's too obvious to mention explicitly", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cffe7937", "line": 25, "in_reply_to": "1fa4df85_724e5497", "updated": "2020-03-17 17:05:16.000000000", "message": "ack removed", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1245a070", "line": 27, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: double ticks", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_4f98491a", "line": 27, "in_reply_to": "1fa4df85_1245a070", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_3248dc85", "line": 38, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: remove &, let people decide themselves", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_cf83d9a8", "line": 38, "in_reply_to": "1fa4df85_3248dc85", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_d25e2844", "line": 45, "updated": "2020-03-17 10:13:36.000000000", "message": "nit: make a link out of gunicorn", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_0f49f189", "line": 45, "in_reply_to": "1fa4df85_d25e2844", "updated": "2020-03-17 17:05:16.000000000", "message": "Done", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_c7c6554a", "line": 4, "range": {"start_line": 4, "start_character": 47, "end_line": 4, "end_character": 56}, "updated": "2020-03-18 11:27:03.000000000", "message": "nit: remove", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_27dde913", "line": 19, "range": {"start_line": 19, "start_character": 0, "end_line": 19, "end_character": 9}, "updated": "2020-03-18 11:27:03.000000000", "message": "nit: Development ?", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_47e025cd", "line": 49, "range": {"start_line": 49, "start_character": 23, "end_line": 49, "end_character": 36}, "updated": "2020-03-18 11:27:03.000000000", "message": "not clear where this variable comes from, it can be inferred by the context, but maybe give an actual example instead of the variable?\nOr add a short explanation", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "4d1274c683d0208b861c7484a3c2f4eb1662b9c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_e7e6f1e8", "line": 50, "range": {"start_line": 50, "start_character": 22, "end_line": 50, "end_character": 34}, "updated": "2020-03-18 11:27:03.000000000", "message": "ditto", "commit_id": "b74e1610ac5693c0efc053b957cafaf6639d1ffc"}], "source/conf.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "06dcb832f148d49486507fa4f991b14413c54aaf", "unresolved": false, "patch_set": 1, "id": "1fa4df85_7265f41c", "updated": "2020-03-17 10:13:36.000000000", "message": "is stuff under \"source\" (not doc/source) added by mistake? seems so to me.", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "d4c6980056121d4e9fc36bdd8dd5e21d182ec230", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2f314d0c", "in_reply_to": "1fa4df85_7265f41c", "updated": "2020-03-17 17:05:16.000000000", "message": "Yeah, removed", "commit_id": "4ff38d6dd766117e497677902415ef1b86ce6131"}]}}, "openstack%2Fopenstack-ansible-os_trove~master~I881b361597782aeba48ddc38bdaf24702f5167ba": {"owner_id": 23317, "owner_name": "ShangXiao", "owner_email": "shangxiaobj@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:54:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 10:36:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 23317, "name": "ShangXiao", "email": "shangxiaobj@inspur.com", "username": "ShangXiao"}], "comments": {}}, "openstack%2Fopenstack-helm-images~master~I8fa874ead4e397e73302d4d571e78644d7982f6c": {"owner_id": 30777, "owner_name": "Steven Fitzpatrick", "owner_email": "steven@fitzpatrick.wtf", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-20 20:15:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27499, "name": "David Smith", "email": "ds3330@att.com", "username": "smithd"}, {"value": 1, "date": "2020-03-20 20:13:08.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30582, "name": "RADHIKA PAI", "email": "rp592h@att.com", "username": "rp592h"}, {"value": 1, "date": "2020-03-20 20:14:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18295, "name": "John Lawrence", "email": "jl401j@us.att.com", "username": "jl401j"}, {"value": 2, "date": "2020-03-24 12:25:07.000000000", "_account_id": 17591, "name": "Steve Wilkerson", "email": "wilkers.steve@gmail.com", "username": "srwilkers"}, {"value": 1, "date": "2020-03-20 20:12:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28849, "name": "Meghan Heisler", "email": "mkheisler93@gmail.com", "username": "mh783g"}, {"value": 2, "date": "2020-03-23 14:23:57.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {}}, "starlingx%2Fdistcloud~master~I75e0cf66a797a65faf75e7c64dafb07f54c2df06": {"owner_id": 28468, "owner_name": "Tao Liu", "owner_email": "tao.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 2, "date": "2020-03-24 12:10:55.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, {"value": 0, "_account_id": 19124, "name": "Gerry Kopec", "email": "gerry.kopec@windriver.com", "username": "gkopec"}, {"value": 2, "date": "2020-03-24 12:18:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}], "comments": {"distributedcloud/dccommon/consts.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "7b7381bae318895280437cb1f08b0a69fbac1065", "unresolved": false, "patch_set": 5, "id": "df33271e_2041e80c", "line": 37, "range": {"start_line": 37, "start_character": 0, "end_line": 37, "end_character": 35}, "updated": "2020-03-23 21:01:51.000000000", "message": "This doesn't belong here - it is only used by dcorch (other than the constant below in which case I think it was misused).", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "9b8b4a41a0c61380bc6b2b43c4ae76129872c0d1", "unresolved": false, "patch_set": 5, "id": "df33271e_c018fcd4", "line": 37, "range": {"start_line": 37, "start_character": 0, "end_line": 37, "end_character": 35}, "in_reply_to": "df33271e_2041e80c", "updated": "2020-03-23 21:38:31.000000000", "message": "It is used by dccommon/endpoint_cache.py.  Since we don't want to import dcorch const in dccommon, I moved it to here. These two consts will be removed when we cleanup/remove all nova, cinder and neutron references.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "99a7c031b5444f811d7b4af46005c3428ba74833", "unresolved": false, "patch_set": 5, "id": "df33271e_91eda8f1", "line": 37, "range": {"start_line": 37, "start_character": 0, "end_line": 37, "end_character": 35}, "in_reply_to": "df33271e_c018fcd4", "updated": "2020-03-24 01:10:25.000000000", "message": "I meant the USER_HEADER was used by dccommon/endpoint_cache.py.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "7b7381bae318895280437cb1f08b0a69fbac1065", "unresolved": false, "patch_set": 5, "id": "df33271e_e036e0b4", "line": 38, "range": {"start_line": 38, "start_character": 30, "end_line": 38, "end_character": 47}, "updated": "2020-03-23 21:01:51.000000000", "message": "This isn't correct if it is being used by dcmanager and dcorch. I'd prefer it was just hardcoded to \"distcloud\" or something like that.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "99a7c031b5444f811d7b4af46005c3428ba74833", "unresolved": false, "patch_set": 5, "id": "df33271e_31abfc89", "line": 38, "range": {"start_line": 38, "start_character": 30, "end_line": 38, "end_character": 47}, "in_reply_to": "df33271e_c0cbdc1b", "updated": "2020-03-24 01:10:25.000000000", "message": "I can change it \"distcloud\" since it does not matter what is used in the header.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "9b8b4a41a0c61380bc6b2b43c4ae76129872c0d1", "unresolved": false, "patch_set": 5, "id": "df33271e_c0cbdc1b", "line": 38, "range": {"start_line": 38, "start_character": 30, "end_line": 38, "end_character": 47}, "in_reply_to": "df33271e_e036e0b4", "updated": "2020-03-23 21:38:31.000000000", "message": "It is used by dccommon/endpoint_cache.py, proxy and dcorch-engine. The user header was used to filter out the dcorch-engine requests in the proxy so that it would not be forwarded to nova or other services.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}], "distributedcloud/dccommon/drivers/openstack/fm.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_4977033c", "line": 38, "range": {"start_line": 38, "start_character": 31, "end_line": 38, "end_character": 57}, "updated": "2020-03-23 12:33:29.000000000", "message": "I would prefer that dccommon did not import anything from dcorch. It seems like this should be a common constant accessible to both dcmanager and dcorch - why not declare it in dccommon consts?", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d129992b52fe1d944be5f083a5d141d277703a28", "unresolved": false, "patch_set": 3, "id": "df33271e_180f062f", "line": 38, "range": {"start_line": 38, "start_character": 31, "end_line": 38, "end_character": 57}, "in_reply_to": "df33271e_4977033c", "updated": "2020-03-23 19:12:34.000000000", "message": "Done", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}], "distributedcloud/dccommon/drivers/openstack/sdk_platform.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "5a278fac18fad18fb952a991c5c3d0158215d608", "unresolved": false, "patch_set": 3, "id": "df33271e_629e5964", "line": 45, "range": {"start_line": 45, "start_character": 13, "end_line": 45, "end_character": 19}, "updated": "2020-03-23 18:09:48.000000000", "message": "dccommon ... appears that dcorch dcmanager would now share this lock ... would these ever lock each other?", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "4356ec667a5695c5bf4eaced458c8137944befb4", "unresolved": false, "patch_set": 3, "id": "df33271e_dd5bc884", "line": 45, "range": {"start_line": 45, "start_character": 13, "end_line": 45, "end_character": 19}, "in_reply_to": "df33271e_5dda1817", "updated": "2020-03-23 19:20:56.000000000", "message": "This is an internal lock.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d129992b52fe1d944be5f083a5d141d277703a28", "unresolved": false, "patch_set": 3, "id": "df33271e_5dda1817", "line": 45, "range": {"start_line": 45, "start_character": 13, "end_line": 45, "end_character": 19}, "in_reply_to": "df33271e_629e5964", "updated": "2020-03-23 19:12:34.000000000", "message": "No, dcmanager and dcorch-engine are separate processes. I can rename it to 'openstackdriver-platform'.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "b7cdd1accf10ef26be17e8c50a683e52a957a666", "unresolved": false, "patch_set": 3, "id": "df33271e_60277014", "line": 45, "range": {"start_line": 45, "start_character": 13, "end_line": 45, "end_character": 19}, "in_reply_to": "df33271e_dd5bc884", "updated": "2020-03-23 21:48:50.000000000", "message": "ok, its an internal lock so applies just to threads in the running process.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_e99ed752", "line": 64, "range": {"start_line": 64, "start_character": 35, "end_line": 64, "end_character": 49}, "updated": "2020-03-23 12:33:29.000000000", "message": "This can be moved to dccommon.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d129992b52fe1d944be5f083a5d141d277703a28", "unresolved": false, "patch_set": 3, "id": "df33271e_38400a36", "line": 64, "range": {"start_line": 64, "start_character": 35, "end_line": 64, "end_character": 49}, "in_reply_to": "df33271e_e99ed752", "updated": "2020-03-23 19:12:34.000000000", "message": "Done", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}], "distributedcloud/dccommon/drivers/openstack/vim.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_294c3fc6", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 42}, "updated": "2020-03-23 12:33:29.000000000", "message": "Please move to dccommon so vim.py doesn't need to import dcmanager.common.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d129992b52fe1d944be5f083a5d141d277703a28", "unresolved": false, "patch_set": 3, "id": "df33271e_b8789af8", "line": 47, "range": {"start_line": 47, "start_character": 12, "end_line": 47, "end_character": 42}, "in_reply_to": "df33271e_294c3fc6", "updated": "2020-03-23 19:12:34.000000000", "message": "Done", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}], "distributedcloud/dccommon/endpoint_cache.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_29e1df9b", "line": 34, "range": {"start_line": 34, "start_character": 0, "end_line": 34, "end_character": 32}, "updated": "2020-03-23 12:33:29.000000000", "message": "Please move the consts accessed here into dccommon.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}], "distributedcloud/dcmanager/manager/patch_audit_manager.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_9e8524d2", "line": 16, "range": {"start_line": 16, "start_character": 16, "end_line": 16, "end_character": 20}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update the copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "ff2e2bb8_82561a06", "line": 16, "range": {"start_line": 16, "start_character": 16, "end_line": 16, "end_character": 20}, "in_reply_to": "1fa4df85_9e8524d2", "updated": "2020-03-20 20:19:48.000000000", "message": "Updated", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "50a226856fb1097b7e46a7191b8dbdfb2a5916d5", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fc555ffb", "line": 108, "range": {"start_line": 108, "start_character": 12, "end_line": 108, "end_character": 23}, "updated": "2020-03-13 15:13:59.000000000", "message": "as this scoped to the keystone client, it could be named such as m_os_ks_client; likewise for the sc_os_client below.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "1fa4df85_1de9397f", "line": 108, "range": {"start_line": 108, "start_character": 12, "end_line": 108, "end_character": 23}, "in_reply_to": "1fa4df85_fc555ffb", "updated": "2020-03-20 20:19:48.000000000", "message": "Changed.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcmanager/manager/subcloud_audit_manager.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "17446ec6b82d498429b71b468fb882350dbff0b2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a8f7a1d4", "line": 32, "range": {"start_line": 32, "start_character": 0, "end_line": 32, "end_character": 65}, "updated": "2020-03-13 18:43:50.000000000", "message": "I am uncomfortable with how we are now mixing and matching drivers between dcmanager and dcorch. I know you didn't cause the problem, but we really should move all drivers to a new dccommon module so it is clear they are shared. That would also include combining the drivers that now have two diverging versions.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_c73af2cb", "line": 32, "range": {"start_line": 32, "start_character": 0, "end_line": 32, "end_character": 65}, "in_reply_to": "1fa4df85_a8f7a1d4", "updated": "2020-03-20 20:19:48.000000000", "message": "the drivers from dcmanager and dcorch are combined.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "17446ec6b82d498429b71b468fb882350dbff0b2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a8db217b", "line": 168, "range": {"start_line": 167, "start_character": 12, "end_line": 168, "end_character": 60}, "updated": "2020-03-13 18:43:50.000000000", "message": "Is this what is causing the large increase in the audit time as this is now serializing the creation of the keystone clients for all subclouds (even though they are using keystone in each subcloud)? Would an alternative be for the creating thread (_periodic_subcloud_audit_loop) to get a token (from RegionOne) and pass that token here where it can be used to create the SysinvClient? That would avoid the need to create the keystone client at all - right?", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "67ca5d860fcb63f0db26419b1476afb7a711f0d2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_8b2ad5e4", "line": 168, "range": {"start_line": 167, "start_character": 12, "end_line": 168, "end_character": 60}, "in_reply_to": "1fa4df85_a8db217b", "updated": "2020-03-15 23:42:55.000000000", "message": "I have made the change which reduces the scope of the lock, and allows the keystone client to be created simultaneously. The creation of the keystone client does not need to be serialized.\n\nThe dcmanager subcloud audit needs to work regardless, whether the subcloud is managed or not. The token from RegionOne does not work on the subcloud unless the subcloud is managed and the initial sync is completed.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_a9716fe3", "line": 50, "range": {"start_line": 50, "start_character": 4, "end_line": 50, "end_character": 33}, "updated": "2020-03-23 12:33:29.000000000", "message": "This belongs in dccommon consts.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d129992b52fe1d944be5f083a5d141d277703a28", "unresolved": false, "patch_set": 3, "id": "df33271e_784f32bd", "line": 50, "range": {"start_line": 50, "start_character": 4, "end_line": 50, "end_character": 33}, "in_reply_to": "df33271e_a9716fe3", "updated": "2020-03-23 19:12:34.000000000", "message": "Moved.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "d20e2e5301c68ab88f061ee170a2f0fbfdf868ad", "unresolved": false, "patch_set": 3, "id": "df33271e_4980a38c", "line": 388, "range": {"start_line": 388, "start_character": 37, "end_line": 388, "end_character": 73}, "updated": "2020-03-23 12:33:29.000000000", "message": "The endpoint type constants should be moved to dccommon.", "commit_id": "d76a3fb3b8c4641e17854445f0a31a42b56aac48"}], "distributedcloud/dcmanager/manager/sw_update_manager.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_be7820f8", "line": 16, "range": {"start_line": 16, "start_character": 16, "end_line": 16, "end_character": 20}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update the copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcmanager/tests/unit/drivers/test_sdk_platform.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "17446ec6b82d498429b71b468fb882350dbff0b2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a8e5610c", "updated": "2020-03-13 18:43:50.000000000", "message": "The driver is currently under the dcorch driver, so the test should be under the dcorch tests directory. However, as mentioned in another comment, the drivers should all be moved to a new dccommon module (along with the tests).", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_074a1a54", "in_reply_to": "1fa4df85_a8e5610c", "updated": "2020-03-20 20:19:48.000000000", "message": "The test has been moved to the new common module.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_7ed068ca", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 14}, "updated": "2020-03-16 19:17:30.000000000", "message": "Can we remove this?", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_47754298", "line": 44, "range": {"start_line": 44, "start_character": 8, "end_line": 44, "end_character": 14}, "in_reply_to": "1fa4df85_7ed068ca", "updated": "2020-03-20 20:19:48.000000000", "message": "yes", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcmanager/tests/unit/manager/test_patch_audit_manager.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_9eba046c", "line": 13, "range": {"start_line": 13, "start_character": 16, "end_line": 13, "end_character": 20}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_7921629f", "line": 194, "range": {"start_line": 194, "start_character": 18, "end_line": 194, "end_character": 38}, "updated": "2020-03-16 19:17:30.000000000", "message": "Can we change this variable name for all test cases?", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcmanager/tests/unit/manager/test_subcloud_audit_manager.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_be4b4085", "line": 202, "range": {"start_line": 202, "start_character": 13, "end_line": 202, "end_character": 33}, "updated": "2020-03-16 19:17:30.000000000", "message": "Could we change this variable name?", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_44ef0087", "line": 202, "range": {"start_line": 202, "start_character": 13, "end_line": 202, "end_character": 33}, "in_reply_to": "1fa4df85_be4b4085", "updated": "2020-03-20 20:19:48.000000000", "message": "yes", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcmanager/tests/unit/manager/test_subcloud_manager.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_de4e3c95", "line": 13, "range": {"start_line": 13, "start_character": 16, "end_line": 13, "end_character": 20}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_84e90882", "line": 13, "range": {"start_line": 13, "start_character": 16, "end_line": 13, "end_character": 20}, "in_reply_to": "1fa4df85_de4e3c95", "updated": "2020-03-20 20:19:48.000000000", "message": "updated", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fe58d856", "line": 245, "range": {"start_line": 245, "start_character": 29, "end_line": 245, "end_character": 42}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please change the order of the variables, that is, \"mock_context, mock_endpoint\".", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_a4ad2c33", "line": 245, "range": {"start_line": 245, "start_character": 29, "end_line": 245, "end_character": 42}, "in_reply_to": "1fa4df85_fe58d856", "updated": "2020-03-20 20:19:48.000000000", "message": "changed.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcorch/common/consts.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "7b7381bae318895280437cb1f08b0a69fbac1065", "unresolved": false, "patch_set": 5, "id": "df33271e_4094ec8b", "line": 133, "range": {"start_line": 121, "start_character": 0, "end_line": 133, "end_character": 46}, "updated": "2020-03-23 21:01:51.000000000", "message": "I would prefer that all of these were moved into dccommon consts since some of them are also used by dcmanager. We can do this later.", "commit_id": "ef434d70e7bb20d4cc8c9cf7f0edb0b4f4d8e1a2"}], "distributedcloud/dcorch/drivers/openstack/sdk_platform.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "50a226856fb1097b7e46a7191b8dbdfb2a5916d5", "unresolved": false, "patch_set": 1, "id": "1fa4df85_fca31fff", "line": 30, "updated": "2020-03-13 15:13:59.000000000", "message": "Recommend a comment indicating that these values are based upon the configured default token 'expiration' period of 3600 seconds and the expected duration of an audit/orch cycle to take no more than STALE_TOKEN_DURATION_MAX", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_24d75c26", "line": 30, "in_reply_to": "1fa4df85_fca31fff", "updated": "2020-03-20 20:19:48.000000000", "message": "A comment is added.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "17446ec6b82d498429b71b468fb882350dbff0b2", "unresolved": false, "patch_set": 1, "id": "1fa4df85_e8a91990", "line": 47, "range": {"start_line": 47, "start_character": 32, "end_line": 47, "end_character": 52}, "updated": "2020-03-13 18:43:50.000000000", "message": "I suspect we may be adding additional clients to this (e.g. VIM, patching) at some point. It would be more flexible to pass in a list of clients (define constants for FM and SYSINV) and only create the client(s) that are requested.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "80c2d409fd9f93269a768391de86c1ce3a381449", "unresolved": false, "patch_set": 1, "id": "1fa4df85_2a4ab226", "line": 47, "range": {"start_line": 47, "start_character": 32, "end_line": 47, "end_character": 52}, "in_reply_to": "1fa4df85_e8a91990", "updated": "2020-03-16 14:51:09.000000000", "message": "I could change it to a list of clients, but I don't see the need to cache VM or patching clients.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_5e1fac6f", "line": 111, "range": {"start_line": 110, "start_character": 0, "end_line": 111, "end_character": 44}, "updated": "2020-03-16 19:17:30.000000000", "message": "Why is this surrounded by round brackets?", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_04c5f83c", "line": 111, "range": {"start_line": 110, "start_character": 0, "end_line": 111, "end_character": 44}, "in_reply_to": "1fa4df85_5e1fac6f", "updated": "2020-03-20 20:19:48.000000000", "message": "not needed.", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcorch/engine/sync_services/sysinv.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_de1cfc78", "line": 1, "range": {"start_line": 1, "start_character": 17, "end_line": 1, "end_character": 21}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_e42a948e", "line": 1, "range": {"start_line": 1, "start_character": 17, "end_line": 1, "end_character": 21}, "in_reply_to": "1fa4df85_de1cfc78", "updated": "2020-03-20 20:19:48.000000000", "message": "Updated", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}], "distributedcloud/dcorch/engine/sync_thread.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "efa29ee809825e4b7f201336307550471230dde1", "unresolved": false, "patch_set": 1, "id": "1fa4df85_9e168455", "line": 1, "range": {"start_line": 1, "start_character": 12, "end_line": 1, "end_character": 16}, "updated": "2020-03-16 19:17:30.000000000", "message": "Please update copyright", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "d07084e59f467fa1e8a02869b1c29bc8b4966bbb", "unresolved": false, "patch_set": 1, "id": "df33271e_c40cb044", "line": 1, "range": {"start_line": 1, "start_character": 12, "end_line": 1, "end_character": 16}, "in_reply_to": "1fa4df85_9e168455", "updated": "2020-03-20 20:19:48.000000000", "message": "Updated", "commit_id": "bef8905af045d4c80993c42d5872ec7c059f60d1"}]}}, "openstack%2Fopenstack-ansible-os_blazar~master~I72a68cbe940176384796d81fe615e14ce5f06b13": {"owner_id": 23317, "owner_name": "ShangXiao", "owner_email": "shangxiaobj@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:55:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 10:28:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 23317, "name": "ShangXiao", "email": "shangxiaobj@inspur.com", "username": "ShangXiao"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_designate~master~Ia91d20e4b6cb2fa17695a5a7cd5a6bce5a677c48": {"owner_id": 23317, "owner_name": "ShangXiao", "owner_email": "shangxiaobj@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:55:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 10:29:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 23317, "name": "ShangXiao", "email": "shangxiaobj@inspur.com", "username": "ShangXiao"}], "comments": {}}, "openstack%2Fneutron~master~Id2ce2a8913a9fb5ce9482b360dea9503a0b279da": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 2, "date": "2020-03-20 18:49:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-03-24 11:44:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-03-23 14:36:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"doc/source/contributor/testing/ovn_devstack.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "631f46d69e16ccb950b8cb8456fc5e686b0bd59d", "unresolved": false, "patch_set": 2, "id": "df33271e_64afa494", "line": 16, "range": {"start_line": 16, "start_character": 14, "end_line": 16, "end_character": 63}, "updated": "2020-03-20 15:40:47.000000000", "message": "We may want to update this too. I know ubuntu 18.04 to work, but never tested it with centos.", "commit_id": "398c6f40ab0d04a4f8bde6a658c7ef274914ce6e"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "ff0fb23c361bb133b798934bfd60603c58fcc56e", "unresolved": false, "patch_set": 2, "id": "df33271e_a4ffec32", "line": 16, "range": {"start_line": 16, "start_character": 14, "end_line": 16, "end_character": 63}, "in_reply_to": "df33271e_64afa494", "updated": "2020-03-20 15:48:51.000000000", "message": "Yes, we should probably say CentOS 8 or 18.04, I think that's what all the jobs run now.", "commit_id": "398c6f40ab0d04a4f8bde6a658c7ef274914ce6e"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "87f50457fcf205eec4f41f6505f9bb67135dfd0b", "unresolved": false, "patch_set": 2, "id": "df33271e_a4840cb3", "line": 16, "range": {"start_line": 16, "start_character": 14, "end_line": 16, "end_character": 63}, "in_reply_to": "df33271e_a4ffec32", "updated": "2020-03-20 15:50:44.000000000", "message": "++", "commit_id": "398c6f40ab0d04a4f8bde6a658c7ef274914ce6e"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "631f46d69e16ccb950b8cb8456fc5e686b0bd59d", "unresolved": false, "patch_set": 2, "id": "df33271e_a4236c05", "line": 436, "updated": "2020-03-20 15:40:47.000000000", "message": "Since this guide was originally written nova folks merged cells v2 and with that we also need to do this:\n\nnova-manage cell_v2 discover_hosts\n\nForgetting this tripped me up several times in the past. If others are similarly forgetful it may be worth to add this here.", "commit_id": "398c6f40ab0d04a4f8bde6a658c7ef274914ce6e"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "87f50457fcf205eec4f41f6505f9bb67135dfd0b", "unresolved": false, "patch_set": 2, "id": "df33271e_c48790b6", "line": 436, "in_reply_to": "df33271e_a4236c05", "updated": "2020-03-20 15:50:44.000000000", "message": "Thanks for that, let's add that step then", "commit_id": "398c6f40ab0d04a4f8bde6a658c7ef274914ce6e"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "a928606fb76a5beffdeef2665cf41a2dcd636ea4", "unresolved": false, "patch_set": 4, "id": "df33271e_55efac86", "line": 16, "range": {"start_line": 16, "start_character": 56, "end_line": 16, "end_character": 69}, "updated": "2020-03-20 18:46:31.000000000", "message": "nit: just Bionic would have been good as well", "commit_id": "4cea26f19df2d1e43d1751dd74fea3702ca1b358"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "a928606fb76a5beffdeef2665cf41a2dcd636ea4", "unresolved": false, "patch_set": 4, "id": "df33271e_f58ec0ce", "line": 428, "updated": "2020-03-20 18:46:31.000000000", "message": "There is actually a script in the devstack repo to do this, \ntools/discover_hosts.sh", "commit_id": "4cea26f19df2d1e43d1751dd74fea3702ca1b358"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "6bf10df8e475237448085305e9a41353cdf5b9da", "unresolved": false, "patch_set": 4, "id": "df33271e_3b5f6442", "line": 428, "in_reply_to": "df33271e_f58ec0ce", "updated": "2020-03-23 14:36:10.000000000", "message": "Thank you, this will help to remember next time I need it.", "commit_id": "4cea26f19df2d1e43d1751dd74fea3702ca1b358"}]}}, "airship%2Fairshipctl~master~I2d114fbb8bd93f88bd9526529e985f92125dc428": {"owner_id": 22713, "owner_name": "Sreejith Punnapuzha", "owner_email": "Sreejith.Punnapuzha@outlook.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 21:46:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-03-24 12:02:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}], "comments": {"roles/docker-install/defaults/main.yaml": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_ba308757", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 18}, "updated": "2020-03-10 15:26:37.000000000", "message": "is there any particular reason to use string here and not bool?", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_f1484b2f", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 18}, "in_reply_to": "1fa4df85_ba308757", "updated": "2020-03-11 18:46:58.000000000", "message": "Done", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}], "roles/docker-install/tasks/main.yaml": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_1a80bbf4", "line": 20, "range": {"start_line": 20, "start_character": 10, "end_line": 20, "end_character": 20}, "updated": "2020-03-10 15:26:37.000000000", "message": "do we need containerd togather with docker installed at this point of development?", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_b152d3dd", "line": 20, "range": {"start_line": 20, "start_character": 10, "end_line": 20, "end_character": 20}, "in_reply_to": "1fa4df85_1a80bbf4", "updated": "2020-03-11 18:46:58.000000000", "message": "Done", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_fa97df43", "line": 35, "range": {"start_line": 35, "start_character": 10, "end_line": 35, "end_character": 26}, "updated": "2020-03-10 15:26:37.000000000", "message": "please add ignore_errors: true here, so it it works both on local connections", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_d14f4f32", "line": 35, "range": {"start_line": 35, "start_character": 10, "end_line": 35, "end_character": 26}, "in_reply_to": "1fa4df85_fa97df43", "updated": "2020-03-11 18:46:58.000000000", "message": "Done", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_daaa236f", "line": 48, "range": {"start_line": 43, "start_character": 0, "end_line": 48, "end_character": 36}, "updated": "2020-03-10 15:26:37.000000000", "message": "after changing systemd units, i think you need to reload systemd daemon as well, to reread those files. Also, please verify that there are no other alternatives to systemd maybe some other config options?", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_ba940738", "line": 48, "range": {"start_line": 48, "start_character": 10, "end_line": 48, "end_character": 36}, "updated": "2020-03-10 15:26:37.000000000", "message": "do u need to do `== true` ? wouldn't proxy.enabled |bool be sufficient?", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_d168af88", "line": 48, "range": {"start_line": 48, "start_character": 10, "end_line": 48, "end_character": 36}, "in_reply_to": "1fa4df85_ba940738", "updated": "2020-03-11 18:46:58.000000000", "message": "its just to make sure that the task is run only when value for enabled is true", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "fd83b8a1f16124e44f911666869c4c9f02197f05", "unresolved": false, "patch_set": 9, "id": "1fa4df85_f0611213", "line": 48, "range": {"start_line": 48, "start_character": 10, "end_line": 48, "end_character": 36}, "in_reply_to": "1fa4df85_d168af88", "updated": "2020-03-12 19:23:43.000000000", "message": "i must be misunderstanding this, if its boolean, it has two values, true or false. result of '==' operation is true or false. so what u are doing is comparing true == true or false == true ?\nSorry maybe i am wrong here, please correct.", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_f1f60bd9", "line": 48, "range": {"start_line": 43, "start_character": 0, "end_line": 48, "end_character": 36}, "in_reply_to": "1fa4df85_daaa236f", "updated": "2020-03-11 18:46:58.000000000", "message": "Reload and restart of docker daemon is done in the next task", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "1beeb558b7186075127c42902a0da2b8e3a55c55", "unresolved": false, "patch_set": 9, "id": "1fa4df85_db5d17ea", "line": 48, "range": {"start_line": 48, "start_character": 10, "end_line": 48, "end_character": 36}, "in_reply_to": "1fa4df85_f0611213", "updated": "2020-03-12 19:43:03.000000000", "message": "Yes.. i am doing a comparison here.", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "7b4259d49d58d2b8930575bb57f8a4c6d27f14d8", "unresolved": false, "patch_set": 14, "id": "1fa4df85_62646aba", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 8}, "updated": "2020-03-13 16:42:22.000000000", "message": "i dont see why we need this whole file in one single block, there is no condition to group them. I think we should remove block, and group more granularly. see comment below.", "commit_id": "4c33a2788a301597c54f66cb0a00ce782128c4fe"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "2ec7c239813dd187d03803f3e5043e1d5bb3f921", "unresolved": false, "patch_set": 14, "id": "1fa4df85_621b0573", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 8}, "in_reply_to": "1fa4df85_62646aba", "updated": "2020-03-13 21:24:47.000000000", "message": "Done", "commit_id": "4c33a2788a301597c54f66cb0a00ce782128c4fe"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "7b4259d49d58d2b8930575bb57f8a4c6d27f14d8", "unresolved": false, "patch_set": 14, "id": "1fa4df85_c2499e32", "line": 47, "range": {"start_line": 35, "start_character": 0, "end_line": 47, "end_character": 36}, "updated": "2020-03-13 16:42:22.000000000", "message": "these two appear to be related to each other, can u put the into block, with single `when` condition?", "commit_id": "4c33a2788a301597c54f66cb0a00ce782128c4fe"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "2ec7c239813dd187d03803f3e5043e1d5bb3f921", "unresolved": false, "patch_set": 14, "id": "1fa4df85_82188175", "line": 47, "range": {"start_line": 35, "start_character": 0, "end_line": 47, "end_character": 36}, "in_reply_to": "1fa4df85_c2499e32", "updated": "2020-03-13 21:24:47.000000000", "message": "Done", "commit_id": "4c33a2788a301597c54f66cb0a00ce782128c4fe"}], "roles/docker-install/templates/http-proxy-conf.j2": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "1d3c1f4377a6fe2f3e908e5c1cb517c2993dffdb", "unresolved": false, "patch_set": 9, "id": "1fa4df85_3aced759", "line": 2, "range": {"start_line": 2, "start_character": 12, "end_line": 2, "end_character": 43}, "updated": "2020-03-10 15:26:37.000000000", "message": "i think, that  Environment=\"HTTP_PROXY={{ proxy.http }}\" is the correct way, please double check.", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "35615557c8a5f78c425e1484ee6a62da0f114631", "unresolved": false, "patch_set": 9, "id": "1fa4df85_11f407cf", "line": 2, "range": {"start_line": 2, "start_character": 12, "end_line": 2, "end_character": 43}, "in_reply_to": "1fa4df85_3aced759", "updated": "2020-03-11 18:46:58.000000000", "message": "Done", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "fd83b8a1f16124e44f911666869c4c9f02197f05", "unresolved": false, "patch_set": 9, "id": "1fa4df85_302d6aa8", "line": 3, "range": {"start_line": 3, "start_character": 35, "end_line": 3, "end_character": 39}, "updated": "2020-03-12 19:23:43.000000000", "message": "this should be proxy:https instead", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 22713, "name": "Sreejith Punnapuzha", "email": "Sreejith.Punnapuzha@outlook.com", "username": "sreejith"}, "change_message_id": "1beeb558b7186075127c42902a0da2b8e3a55c55", "unresolved": false, "patch_set": 9, "id": "1fa4df85_9b6f9f91", "line": 3, "range": {"start_line": 3, "start_character": 35, "end_line": 3, "end_character": 39}, "in_reply_to": "1fa4df85_302d6aa8", "updated": "2020-03-12 19:43:03.000000000", "message": "Done", "commit_id": "ff44bae3faa22f4cc96e6edd462893ec8dd7a1e5"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "00109692bf6bb9f157db059d2eeb27288abc0459", "unresolved": false, "patch_set": 13, "id": "1fa4df85_79ef41e9", "line": 4, "updated": "2020-03-13 14:22:50.000000000", "message": "noproxy missing", "commit_id": "a2584915fd0b2b1ba9ce5bfa54d84a80c92545be"}]}}, "openstack%2Fopenstack-ansible-os_placement~master~I57ffa8d3d30bc341c28fe0a0f537fe1aa05719f4": {"owner_id": 23317, "owner_name": "ShangXiao", "owner_email": "shangxiaobj@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:55:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-03-24 10:37:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 23317, "name": "ShangXiao", "email": "shangxiaobj@inspur.com", "username": "ShangXiao"}], "comments": {}}, "openstack%2Fneutron~master~I9e7e20679b41847810696307f05dd9b7b252ab88": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": -1, "date": "2020-03-20 20:49:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 2, "date": "2020-03-20 18:39:11.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/agent/common/ovs_lib.py": [{"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "861b37ebf5773ba7f3ba955e0279bbc9088d6c5f", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1645cf9b", "line": 377, "range": {"start_line": 377, "start_character": 8, "end_line": 377, "end_character": 48}, "updated": "2020-01-31 14:44:56.000000000", "message": "Can we wrap it withing same txn as others?", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e920e34aea51c9c78fa94c3da9c6e25cd265fa2e", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_75a732bd", "line": 377, "range": {"start_line": 377, "start_character": 8, "end_line": 377, "end_character": 48}, "in_reply_to": "3fa7e38b_1645cf9b", "updated": "2020-02-04 13:16:44.000000000", "message": "According to the comment above, not", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f438639660a7864f2a70de55d245ecb1fb722238", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_fe53413a", "side": "PARENT", "line": 332, "updated": "2020-02-17 16:46:58.000000000", "message": "IMO, you can reduce the change in this function by adding a kwarg at the end of the definition.\n\ndef replace_port(self, port_name, *interface_attr_tuples,\n                 active=True):\n\n\nThen if active=False, you can append at the end of the transaction the set operation for \"other_config\".", "commit_id": "d5b33ffc775ffff500271c0f15f055ae3132a8d0"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "c0c0ae35f1d8262ca598153ba500e1ba7951b0c7", "unresolved": false, "patch_set": 8, "id": "1fa4df85_0c57775a", "side": "PARENT", "line": 332, "in_reply_to": "1fa4df85_48605602", "updated": "2020-03-04 21:10:20.000000000", "message": "Done", "commit_id": "d5b33ffc775ffff500271c0f15f055ae3132a8d0"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "6dbf087fe786da49da31ebf0b1457a933a7e809f", "unresolved": false, "patch_set": 8, "id": "1fa4df85_48605602", "side": "PARENT", "line": 332, "in_reply_to": "3fa7e38b_fe53413a", "updated": "2020-02-27 17:15:05.000000000", "message": "I would agree with this", "commit_id": "d5b33ffc775ffff500271c0f15f055ae3132a8d0"}], "neutron/agent/l3/ha_router.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "f438639660a7864f2a70de55d245ecb1fb722238", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_1938b79c", "line": 457, "updated": "2020-02-17 16:46:58.000000000", "message": "I would add just an small comment here saying that this operation can be done after \"_disable_ipv6_addressing_on_interface\" is done.", "commit_id": "d10fcd9f77ee40544a71bc253e53ed73d0022322"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "c0c0ae35f1d8262ca598153ba500e1ba7951b0c7", "unresolved": false, "patch_set": 8, "id": "1fa4df85_cc2b9f92", "line": 457, "in_reply_to": "3fa7e38b_1938b79c", "updated": "2020-03-04 21:10:20.000000000", "message": "Done", "commit_id": "d10fcd9f77ee40544a71bc253e53ed73d0022322"}, {"author": {"_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, "change_message_id": "f7557c811e008a20c34ccfc2b92a8202b599901a", "unresolved": false, "patch_set": 10, "id": "1fa4df85_6b273ab8", "line": 447, "range": {"start_line": 447, "start_character": 54, "end_line": 447, "end_character": 59}, "updated": "2020-03-17 15:58:12.000000000", "message": "Should this be False if self.ha_state == 'master'?", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, "change_message_id": "f7557c811e008a20c34ccfc2b92a8202b599901a", "unresolved": false, "patch_set": 10, "id": "1fa4df85_70308708", "line": 447, "range": {"start_line": 447, "start_character": 54, "end_line": 447, "end_character": 59}, "updated": "2020-03-17 15:58:12.000000000", "message": "nit: device_active=False for readability", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "bb24955c962cbda9679c8348bfe3638ca0b395e7", "unresolved": false, "patch_set": 10, "id": "1fa4df85_2e986619", "line": 447, "range": {"start_line": 447, "start_character": 54, "end_line": 447, "end_character": 59}, "in_reply_to": "1fa4df85_6b273ab8", "updated": "2020-03-18 09:07:29.000000000", "message": "Yes, it should be False here to make sure that any MLDv2 packets will not be send from this interface if not needed. It will be set to be active in L464 in this method.", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "bb24955c962cbda9679c8348bfe3638ca0b395e7", "unresolved": false, "patch_set": 10, "id": "1fa4df85_2e2e26fa", "line": 447, "range": {"start_line": 447, "start_character": 54, "end_line": 447, "end_character": 59}, "in_reply_to": "1fa4df85_70308708", "updated": "2020-03-18 09:07:29.000000000", "message": "Done", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, "change_message_id": "f7557c811e008a20c34ccfc2b92a8202b599901a", "unresolved": false, "patch_set": 10, "id": "1fa4df85_6bfe5a06", "line": 453, "range": {"start_line": 451, "start_character": 8, "end_line": 453, "end_character": 34}, "updated": "2020-03-17 15:58:12.000000000", "message": "so this doesn't work for all cases? Probably the comment should be updated/replaced then..", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "bb24955c962cbda9679c8348bfe3638ca0b395e7", "unresolved": false, "patch_set": 10, "id": "1fa4df85_cee99280", "line": 453, "range": {"start_line": 451, "start_character": 8, "end_line": 453, "end_character": 34}, "in_reply_to": "1fa4df85_6bfe5a06", "updated": "2020-03-18 09:07:29.000000000", "message": "in fact it is still correct as my patch will only prevent sending e.g. MLDv2 packets from backup routers only during creation of gw interface. But after that it's set to be \"active\" (L464) so it could still send packets to the upstream switches.", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, "change_message_id": "fbbc51130a4fffbe8aefab6acebd8aebef576df3", "unresolved": false, "patch_set": 11, "id": "df33271e_b66f1e91", "line": 465, "range": {"start_line": 464, "start_character": 0, "end_line": 465, "end_character": 64}, "updated": "2020-03-20 21:31:57.000000000", "message": "What if ovs-agent has finished the port processing, and then L3 agent just set the port to \"INTERNAL_STATUS_ACTIVE = \"active\"\".\nI don't think the port will be processed again. So it will be 4095 forever? Is that a race condition?", "commit_id": "eab7686e0090595382bea945bb71b06240d51878"}], "neutron/agent/linux/interface.py": [{"author": {"_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, "change_message_id": "be83be21ff20893d75bc23a8a21a6ce03f957623", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e7b931eb", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "updated": "2020-01-16 15:38:36.000000000", "message": "As I said in the L3 meeting, this is the root cause of the bug.\nThis \"ip set link up\" will immediately generate the IPv6 packets (based on some kernel config) which will finally go to physical switch. You may use these commands to simulate the case:\n(1) ovs-vsctl add-port br-ex fake-qg-dev -- set interface fake-qg-dev type=internal\n(2) ip link set up fake-qg-dev\n(3) tcpdump -ni <ext-net-physical-NIC> -e\n[1] is my test result.\n\nSo as we know that ovs-agent have 2 seconds sleep between two rpc_loops. The other_config block flag should have a small chance take effect. So IMHO, the current approach may not work.\n\n[1] http://paste.openstack.org/show/788479/", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "0a86f022c16f471f517b1b5971e38e3c41316dd6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_89492f30", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "in_reply_to": "3fa7e38b_0db027fd", "updated": "2020-01-21 21:40:49.000000000", "message": "So I was playing with it a bit more and I see at least 2 problems with that:\n\n1. There are some corner cases when keepalived is not working fine when qg- interface is down, I didn't found out exactly why it's not working as it should and keeps all nodes to be in backup state yet. That is of course problem which can be probably solved but I just didn't had enough time for it,\n\n2. This one is more important. I think that changing it like You are proposing has got some additional side effects which can introduce even regressions. For example now, even when neutron-l3-agent would be down, dataplane can still works as long as keepalived is working fine on the node. There will be no proper state in neutron db in such case but dataplane will work fine. After this change it may be different as we would need not only keepalived but also neutron-l3-agent to make dataplane up the node.\n\n3. Also second problem similar to 2) is that in this new case it may require more time to switch node to be new master as when neutron-l3-agent will be busy it may take long time to switch interface up.\n\nSo I think that I will continue work with this solution as I propose now. At least if You don't have any other ideas about how to solve this problem.", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, "change_message_id": "f48786c6c9cdeadebf88f57b0d7fec26631eeac4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0db027fd", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "in_reply_to": "3fa7e38b_42e113fd", "updated": "2020-01-17 01:08:13.000000000", "message": "> I was testing approach with setting this interface to be down\n > initially.\n > This didn't work because keepalived which is later managing IPs and\n > which host is master didn't bring such interface up. And that was\n > the issue there.\n > \n\nYes, it will be handled based on the HA router state, aka in HA router state change callback set the qg-device link up.\n\n > 2 seconds sleep between rpc_loop iterations isn't any problem\n > because L3 agent creates this port with tag 4095 always and traffic\n > from/to port with such tag is basically dropped in br-int always.\n > After L3 agent switches \"ready_to_bind\" flag to \"yes\", in about 2\n > seconds ovs agent should change port's tag from 4095 to local vlan\n > id choosen for specific network and all should be configured\n > properly.\n\nSeems we are going to mix the HA related things to ovs-agent since we already mixed DVR in it. Actually my thougths is if we could fix the issue in L3 scope only. If yes, we should.", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, "change_message_id": "d075ea879bc255b1d2d8f178906da8582620c321", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ab2b3b30", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "in_reply_to": "3fa7e38b_89492f30", "updated": "2020-01-31 09:11:39.000000000", "message": "> So I was playing with it a bit more and I see at least 2 problems\n > with that:\n > \n > 1. There are some corner cases when keepalived is not working fine\n > when qg- interface is down, I didn't found out exactly why it's not\n > working as it should and keeps all nodes to be in backup state yet.\n > That is of course problem which can be probably solved but I just\n > didn't had enough time for it,\n > \n\nMay I have the steps of the test?\n\n > 2. This one is more important. I think that changing it like You\n > are proposing has got some additional side effects which can\n > introduce even regressions. For example now, even when\n > neutron-l3-agent would be down, dataplane can still works as long\n > as keepalived is working fine on the node. There will be no proper\n > state in neutron db in such case but dataplane will work fine.\n > After this change it may be different as we would need not only\n > keepalived but also neutron-l3-agent to make dataplane up the node.\n > \n\nHow could such situation happen? If host is down/up, there will have no keepalived process. But if you mean keepalived is spawned then l3-agent is crushed, I think this should be another issue, or we are over-thinking of the problem here. For instance, for current approach what if ovs-agent is dead after set the port to 4095? The qg-device will not work as well.\n\n > 3. Also second problem similar to 2) is that in this new case it\n > may require more time to switch node to be new master as when\n > neutron-l3-agent will be busy it may take long time to switch\n > interface up.\n > \n\nIt is one step of ha state change action list, personally, a simple \"ip link set up\" should not be time-consuming. And state change processing is separated from the main thread of l3-agent. So it should be fine.\n\n > So I think that I will continue work with this solution as I\n > propose now. At least if You don't have any other ideas about how\n > to solve this problem.\n\nWe have a local fix of this, I guess maybe I should submit it as potential alternatives.", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "76ac0d0de32a8d784c595c67932e3fa7e76b9763", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6b43036d", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "in_reply_to": "3fa7e38b_ab2b3b30", "updated": "2020-01-31 10:20:22.000000000", "message": "> > So I was playing with it a bit more and I see at least 2 problems\n > > with that:\n > >\n > > 1. There are some corner cases when keepalived is not working\n > fine\n > > when qg- interface is down, I didn't found out exactly why it's\n > not\n > > working as it should and keeps all nodes to be in backup state\n > yet.\n > > That is of course problem which can be probably solved but I just\n > > didn't had enough time for it,\n > >\n > \n > May I have the steps of the test?\n\nI don't remember exact steps for this but in some cases keepalived didn't want to switch node to be active when interface was down.\nToday I played again with it. It seems to be working but I see a lot of errors from keepalived in logs, like:\n\nJan 30 09:50:59 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Transition to MASTER STATE\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Entering MASTER STATE\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) setting protocol VIPs.\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) setting protocol E-VIPs.\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) setting protocol Virtual Routes\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Netlink: error: Network is unreachable, type=(24), seq=1580374179, pid=0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Sending/queueing gratuitous ARPs on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Error sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Sending/queueing gratuitous ARPs on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Sending/queueing Unsolicited Neighbour Adverts on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP_Instance(VR_78) Sending/queueing Unsolicited Neighbour Adverts on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Error sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Error sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Error sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on ha-f6677022-c8 for 169.254.0.78\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Error sending gratuitous ARP on qg-f65edb15-f0 for 10.10.0.134\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for 2001:db8::2e0\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: Sending unsolicited Neighbour Advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\nJan 30 09:51:01 devstack-ubuntu-allinone Keepalived_vrrp[2642]: VRRP: Error sending ndisc unsolicited neighbour advert on qg-f65edb15-f0 for fe80::f816:3eff:fe33:628b\n\nI'm not sure if that can have any side effects in dataplane but for sure it doesn't looks good in logs :/\n\n > \n > > 2. This one is more important. I think that changing it like You\n > > are proposing has got some additional side effects which can\n > > introduce even regressions. For example now, even when\n > > neutron-l3-agent would be down, dataplane can still works as long\n > > as keepalived is working fine on the node. There will be no\n > proper\n > > state in neutron db in such case but dataplane will work fine.\n > > After this change it may be different as we would need not only\n > > keepalived but also neutron-l3-agent to make dataplane up the\n > node.\n > >\n > \n > How could such situation happen? If host is down/up, there will\n > have no keepalived process. But if you mean keepalived is spawned\n > then l3-agent is crushed, I think this should be another issue, or\n > we are over-thinking of the problem here. For instance, for current\n > approach what if ovs-agent is dead after set the port to 4095? The\n > qg-device will not work as well.\n > \n > > 3. Also second problem similar to 2) is that in this new case it\n > > may require more time to switch node to be new master as when\n > > neutron-l3-agent will be busy it may take long time to switch\n > > interface up.\n > >\n > \n > It is one step of ha state change action list, personally, a simple\n > \"ip link set up\" should not be time-consuming. And state change\n > processing is separated from the main thread of l3-agent. So it\n > should be fine.\n > \n > > So I think that I will continue work with this solution as I\n > > propose now. At least if You don't have any other ideas about how\n > > to solve this problem.\n > \n > We have a local fix of this, I guess maybe I should submit it as\n > potential alternatives.\n\nIf You have working solution to that, feel free to send patch to review :)", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "d6d7e0992389d41b28878b5ca60df59b451f470e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_42e113fd", "line": 415, "range": {"start_line": 413, "start_character": 8, "end_line": 415, "end_character": 34}, "in_reply_to": "3fa7e38b_e7b931eb", "updated": "2020-01-16 16:01:45.000000000", "message": "I was testing approach with setting this interface to be down initially. \nThis didn't work because keepalived which is later managing IPs and which host is master didn't bring such interface up. And that was the issue there.\n\n2 seconds sleep between rpc_loop iterations isn't any problem because L3 agent creates this port with tag 4095 always and traffic from/to port with such tag is basically dropped in br-int always.\nAfter L3 agent switches \"ready_to_bind\" flag to \"yes\", in about 2 seconds ovs agent should change port's tag from 4095 to local vlan id choosen for specific network and all should be configured properly.", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "6b6e794287208a4bb861b85bbc1aae7ba0613ba5", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d6e6294a", "line": 448, "range": {"start_line": 448, "start_character": 32, "end_line": 448, "end_character": 39}, "updated": "2020-01-16 12:52:15.000000000", "message": "Or not. This will mark the interface readiness to be bound", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "93bae6243b7da880dd9bb9453b33aa94b9977fe4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e9e02a2a", "line": 448, "range": {"start_line": 448, "start_character": 32, "end_line": 448, "end_character": 39}, "in_reply_to": "3fa7e38b_d6e6294a", "updated": "2020-01-16 13:44:39.000000000", "message": "yes, I need to update this comment message :)", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "861b37ebf5773ba7f3ba955e0279bbc9088d6c5f", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b6e87b7e", "line": 305, "range": {"start_line": 305, "start_character": 8, "end_line": 305, "end_character": 34}, "updated": "2020-01-31 14:44:56.000000000", "message": "Can we make this method to be abstract?", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e920e34aea51c9c78fa94c3da9c6e25cd265fa2e", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3589ba28", "line": 305, "range": {"start_line": 305, "start_character": 8, "end_line": 305, "end_character": 34}, "in_reply_to": "3fa7e38b_b6e87b7e", "updated": "2020-02-04 13:16:44.000000000", "message": "I don't want to make it abstract as then each driver will need to implement it and that's not really needed for some of drivers", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "218884bc82e1cf4eddbe92d5ce07e2d13b1312fb", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7d64bb4d", "line": 448, "range": {"start_line": 448, "start_character": 54, "end_line": 448, "end_character": 60}, "updated": "2020-02-07 16:12:55.000000000", "message": "I just have one nit around the word 'status', since True means active and False means inactive?  I know we can't have the caller use the ovs_lib constants since it's a layer violation, but maybe this should be 'active' ?", "commit_id": "b8f64de1758b855ffd5e429e4cc7edb9fe35226a"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "042e2a439e5f464e92696edc4b8f8ae32fb4e913", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_03051368", "line": 448, "range": {"start_line": 448, "start_character": 54, "end_line": 448, "end_character": 60}, "in_reply_to": "3fa7e38b_7d64bb4d", "updated": "2020-02-10 13:17:17.000000000", "message": "Good idea. Changed :)", "commit_id": "b8f64de1758b855ffd5e429e4cc7edb9fe35226a"}, {"author": {"_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, "change_message_id": "f7557c811e008a20c34ccfc2b92a8202b599901a", "unresolved": false, "patch_set": 10, "id": "1fa4df85_6b4c1a76", "line": 308, "range": {"start_line": 308, "start_character": 8, "end_line": 308, "end_character": 12}, "updated": "2020-03-17 15:58:12.000000000", "message": "might be useful to add comment why pass here", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "bb24955c962cbda9679c8348bfe3638ca0b395e7", "unresolved": false, "patch_set": 10, "id": "1fa4df85_0e956ae4", "line": 308, "range": {"start_line": 308, "start_character": 8, "end_line": 308, "end_character": 12}, "in_reply_to": "1fa4df85_6b4c1a76", "updated": "2020-03-18 09:07:29.000000000", "message": "Done", "commit_id": "0666d99cd4d1a7b4ec5e2209934d12b5fe39652a"}], "neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "6b6e794287208a4bb861b85bbc1aae7ba0613ba5", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b6312dbe", "line": 1095, "updated": "2020-01-16 12:52:15.000000000", "message": "I have one big question: this method is called only when the port is added, not when the port is updated. When the VLAN tag is going to be updated to a valid one once the port is updated?", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "1ea37a12317e56a93e1fddeec3a610e744375b75", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0987c65d", "line": 1095, "in_reply_to": "3fa7e38b_b6312dbe", "updated": "2020-01-16 13:42:40.000000000", "message": "So I also though that this will require more changes on ovs agent's side. But such port which still has got tag=4095 will be noticed by check_changed_vlans() method https://github.com/openstack/neutron/blob/master/neutron/plugins/ml2/drivers/openvswitch/agent/ovs_neutron_agent.py#L1691 and will than be configured in next iteration.", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "6b6e794287208a4bb861b85bbc1aae7ba0613ba5", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_76c6559f", "line": 1131, "range": {"start_line": 1131, "start_character": 53, "end_line": 1131, "end_character": 66}, "updated": "2020-01-16 12:52:15.000000000", "message": "Ok, by default if the parameter does not exist (old one), the port is ready", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "93bae6243b7da880dd9bb9453b33aa94b9977fe4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_893e5688", "line": 1131, "range": {"start_line": 1131, "start_character": 53, "end_line": 1131, "end_character": 66}, "in_reply_to": "3fa7e38b_76c6559f", "updated": "2020-01-16 13:44:39.000000000", "message": "exactly. Nothing will change for all existing ports and also for all ports which belongs to VMs, DHCP agents or other L3 agents (dvr or legacy)", "commit_id": "1c8cee78706e5a08a9cfa9dd9996b856aecce782"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "861b37ebf5773ba7f3ba955e0279bbc9088d6c5f", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_76b0c38e", "line": 1748, "range": {"start_line": 1748, "start_character": 7, "end_line": 1748, "end_character": 51}, "updated": "2020-01-31 14:44:56.000000000", "message": "hmm :)", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e920e34aea51c9c78fa94c3da9c6e25cd265fa2e", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f5924255", "line": 1748, "range": {"start_line": 1748, "start_character": 7, "end_line": 1748, "end_character": 51}, "in_reply_to": "3fa7e38b_76b0c38e", "updated": "2020-02-04 13:16:44.000000000", "message": "ups :)", "commit_id": "8927aca2afa4dfa883c9f3a92d281e934a42af3e"}]}}, "openstack%2Ftripleo-quickstart~master~I66d963c1791765dd03f450263a561a1980592166": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, {"value": -2, "date": "2020-03-24 08:00:52.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"config/general_config/featureset064.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "312f52ae06b3b88dc5a0aa19607884a16c4d047e", "unresolved": false, "patch_set": 2, "id": "1fa4df85_3bcae619", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "updated": "2020-03-18 07:43:25.000000000", "message": "is that the only difference from featureset062?\n\nif so we can perhaps not use a new featureset and instead pass it with featureset_override.\n\nIf that is the only difference I can help you do that ^^ instead. [m@localhost general_config]$ diff featureset062.yml featureset064.yml \n1,5c1,3\n< ####################################################################################################\n< # FEATURESET062 - TRIPLEO STANDALONE FOR OCTAVIA - TRACKS SCENARIO 10\n< # This is a modified version of featureset 052 (standalone) so changes made\n< # to that featureset should be examined to see if they are relevant here.\n< ####################################################################################################\n---\n> ########################################################\n> # FEATURESET064 - TRIPLEO STANDALONE UPGRADE FOR OCTAVIA\n> ########################################################\n11,14d8\n< toci_vxlan_networking: false\n< enable_vbmc: false\n< deploy_supplemental_node: false\n< undercloud_setup: true\n19a14,23\n> # docker / podman configuration\n> standalone_container_cli: >-\n>   {% if release in ['rocky'] -%}\n>   docker\n>   {%- else -%}\n>   podman\n>   {%- endif -%}\n> \n> standalone_upgrade: true\n> \n40a45\n> tempest_os_cloud: standalone\n50,57d54\n< tempest_os_cloud: standalone\n< \n< standalone_container_cli: >-\n<   {% if release in ['rocky'] -%}\n<   docker\n<   {%- else -%}\n<   podman\n<   {%- endif -%}", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "638274db855e31956230e8e9507188c04d00f05d", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b486d312", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "in_reply_to": "1fa4df85_34c4235f", "updated": "2020-03-19 08:42:07.000000000", "message": "Ok, I am supportive of allowing override of that flag. I thought that having it blacklisted was intentional and for a good reason. I'll submit a patch asap.", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "28a27002724e767ee468ff436988b615904e1ff1", "unresolved": false, "patch_set": 2, "id": "1fa4df85_4c3a8a98", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "in_reply_to": "1fa4df85_3bcae619", "updated": "2020-03-18 10:21:50.000000000", "message": "Yes,\"standalone_upgrade\" is the only difference. We cannot reuse same featureset. See https://review.opendev.org/#/c/710473/2/zuul.d/standalone-jobs.yaml@626", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "6455d0712f9266f991af611bf9e14fe40910d585", "unresolved": false, "patch_set": 2, "id": "1fa4df85_34c4235f", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "in_reply_to": "1fa4df85_4c3a8a98", "updated": "2020-03-19 08:38:56.000000000", "message": "we can fix that though and add standalone-upgrade into the allowed featureset_override list see my comment at https://review.opendev.org/#/c/710473/2/zuul.d/standalone-jobs.yaml@626\n\nthat's what i meant by ping me we can add it if that is the only difference", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "ce2e148abb9c72fd2c5b3dde88a22f81288c21fd", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b437b34d", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "in_reply_to": "1fa4df85_9498776a", "updated": "2020-03-19 08:54:55.000000000", "message": "https://review.opendev.org/713801", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "d22b349b316d03ca827535c02eb9bcb281f032e2", "unresolved": false, "patch_set": 2, "id": "1fa4df85_9498776a", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 22}, "in_reply_to": "1fa4df85_b486d312", "updated": "2020-03-19 08:47:22.000000000", "message": "i just added folks from the tripleo-ci team so they can't complain about it later and ping the oooq channel ... for the record ;)\n\n10:40 < marios> fellow tripleo-ci folks please check https://review.opendev.org/#/c/710556/2 when you get a chance (I just added you)  cgoncalves is adding a new FS but the only diff is 'standalone-upgrade' so IMO we should just add to allowed_overrides\n\n\n\nso it *used* to be that featuresets were the single source of truth for the features in a job. However we recently started allowing featureset_overrides, especially when jobs had the same featureset but different (tripleo-heat-template) environment files.\n\nNot everyone in the team is happy with that which is why i added them here. However since we started adding the overrides we've just continued to add them in the allowed list 'as the need arises'.\n\nI think avoiding to maintain an extra featureset, update it everytime somethign changes in the deployment/new version whatever, is a good enough reason here.", "commit_id": "1a4ee6e39c9a4fab07db43173c72c5aca53d4093"}]}}, "openstack%2Fkuryr-kubernetes~master~I513784139b361da609f66dc2128970c8eae784c5": {"owner_id": 29615, "owner_name": "Nayan Deshmukh", "owner_email": "n.deshmukh@samsung.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 29615, "name": "Nayan Deshmukh", "email": "n.deshmukh@samsung.com", "username": "n.deshmukh"}, {"value": 2, "date": "2020-03-24 08:20:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "_account_id": 14570, "name": "Ashish Billore", "email": "ash.billore@samsung.com", "username": "ashish.billore"}, {"value": 2, "date": "2020-03-24 10:25:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {"kuryr_kubernetes/controller/handlers/vif.py": [{"author": {"_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, "change_message_id": "401a3cdf02d5bc56f667fa40da2c488729cfe737", "unresolved": false, "patch_set": 2, "id": "1fa4df85_b4f573ef", "line": 72, "range": {"start_line": 66, "start_character": 0, "end_line": 72, "end_character": 18}, "updated": "2020-03-19 08:10:56.000000000", "message": "shouldn't we avoid calling on_delete many times once we complete the first deletion action?\n\nOtherwise, when we trigger _set_pod_state a new on_present event will be trigger and on_deleted will be re-executed", "commit_id": "1ab115e2d7c63b44d1f28da7e3f50f60f3fc2b33"}, {"author": {"_account_id": 14570, "name": "Ashish Billore", "email": "ash.billore@samsung.com", "username": "ashish.billore"}, "change_message_id": "8ec9f1c2f65caae07010ba65cd12e677b092ec98", "unresolved": false, "patch_set": 4, "id": "1fa4df85_ef2d56fd", "line": 68, "range": {"start_line": 66, "start_character": 0, "end_line": 68, "end_character": 21}, "updated": "2020-03-19 09:53:14.000000000", "message": "Minor comment:\nSome level of nesting can be reduced by\n\nif (driver_utils.get_pod_state(pod) and\n    self._is_pod_completed(pod)):\n        ...\n        ...", "commit_id": "7c97f249ed7afc3d314cc91d6aede7eb4d1f7bd4"}, {"author": {"_account_id": 29615, "name": "Nayan Deshmukh", "email": "n.deshmukh@samsung.com", "username": "n.deshmukh"}, "change_message_id": "3a3b030533ab6728b6c1f580487f2406bc4c56ab", "unresolved": false, "patch_set": 4, "id": "1fa4df85_6f7166de", "line": 68, "range": {"start_line": 66, "start_character": 0, "end_line": 68, "end_character": 21}, "in_reply_to": "1fa4df85_ef2d56fd", "updated": "2020-03-19 10:06:59.000000000", "message": "There is a return statement which depends on the output of is_pod_completed hence I cannot merge the two if statements", "commit_id": "7c97f249ed7afc3d314cc91d6aede7eb4d1f7bd4"}, {"author": {"_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, "change_message_id": "ec82eb974ad342f64965ff0f81c661b36c55f1cc", "unresolved": false, "patch_set": 4, "id": "1fa4df85_2747124f", "line": 73, "range": {"start_line": 73, "start_character": 0, "end_line": 73, "end_character": 66}, "updated": "2020-03-19 13:00:28.000000000", "message": "Please make sure to log whole exception - best to use LOG.exception, it'll produce traceback manually.", "commit_id": "7c97f249ed7afc3d314cc91d6aede7eb4d1f7bd4"}, {"author": {"_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, "change_message_id": "ec82eb974ad342f64965ff0f81c661b36c55f1cc", "unresolved": false, "patch_set": 4, "id": "1fa4df85_a7a1c2f9", "line": 227, "range": {"start_line": 224, "start_character": 0, "end_line": 227, "end_character": 53}, "updated": "2020-03-19 13:00:28.000000000", "message": "return pod['status']['phase'] in (constants.K8S_POD_STATUS_SUCCEEDED, constants.K8S_POD_STATUS_FAILED)", "commit_id": "7c97f249ed7afc3d314cc91d6aede7eb4d1f7bd4"}, {"author": {"_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, "change_message_id": "f736fd6738401147b15d94df71b51bc54c0b08c9", "unresolved": false, "patch_set": 5, "id": "df33271e_78a577b5", "line": 72, "range": {"start_line": 72, "start_character": 20, "end_line": 72, "end_character": 50}, "updated": "2020-03-23 08:05:55.000000000", "message": "shouldn't this be after L74 instead?", "commit_id": "bb439cd772edf011209ec444e5b2803f5e0b166d"}, {"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "6e020e76f0d0e54071b44a38b77a695364b3333c", "unresolved": false, "patch_set": 5, "id": "df33271e_f8ffc731", "line": 72, "range": {"start_line": 72, "start_character": 20, "end_line": 72, "end_character": 50}, "in_reply_to": "df33271e_78a577b5", "updated": "2020-03-23 08:42:18.000000000", "message": "+1. Also, shouldn't a ResourceNotReady be raised when a K8sClientException happens?", "commit_id": "bb439cd772edf011209ec444e5b2803f5e0b166d"}, {"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "6e020e76f0d0e54071b44a38b77a695364b3333c", "unresolved": false, "patch_set": 5, "id": "df33271e_7899f71d", "line": 73, "range": {"start_line": 73, "start_character": 16, "end_line": 73, "end_character": 48}, "updated": "2020-03-23 08:42:18.000000000", "message": "For safety, it's also good to catch K8sResourceNotFound and just skip the event.", "commit_id": "bb439cd772edf011209ec444e5b2803f5e0b166d"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "4fafee262a37388f8f9eb1ff28f139dddcb0c9b9", "unresolved": false, "patch_set": 5, "id": "df33271e_18cb8b53", "line": 74, "range": {"start_line": 74, "start_character": 20, "end_line": 74, "end_character": 66}, "updated": "2020-03-23 08:15:44.000000000", "message": "Please, change it to LOG.excpetion. Also, log message seems somehow unfinished (or the colon meant to be here for following stack trace, but still, LOG.warning will not include it anyway).", "commit_id": "bb439cd772edf011209ec444e5b2803f5e0b166d"}, {"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "6e020e76f0d0e54071b44a38b77a695364b3333c", "unresolved": false, "patch_set": 5, "id": "df33271e_f8d6a7c3", "line": 75, "range": {"start_line": 75, "start_character": 12, "end_line": 75, "end_character": 18}, "updated": "2020-03-23 08:42:18.000000000", "message": "It would be good to add a LOG message stating that the event is skipped due to pod with no state.", "commit_id": "bb439cd772edf011209ec444e5b2803f5e0b166d"}, {"author": {"_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, "change_message_id": "8993407d0006c3529f3e29b8761152ebd4d6f8ca", "unresolved": false, "patch_set": 7, "id": "df33271e_2621fbb5", "line": 67, "range": {"start_line": 67, "start_character": 11, "end_line": 67, "end_character": 40}, "updated": "2020-03-24 10:25:16.000000000", "message": "Unnecessary parentheses.", "commit_id": "62673dfb8b8c8ba3a68ce52dd6499e447eeb774d"}]}}, "openstack%2Fgovernance~master~I545338f21b0ef308f524e585c44801eab8d3cac6": {"owner_id": 28223, "owner_name": "Cedric Jeanneret", "owner_email": "cjeanner@redhat.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 1, "date": "2020-03-11 17:14:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"reference/projects.yaml": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "2f2a00b6f7b0a09d9981e642f499ee8d7263786c", "unresolved": false, "patch_set": 1, "id": "1fa4df85_082ea391", "line": 3819, "updated": "2020-03-19 14:38:33.000000000", "message": "I am curious, what's the validations framework?\nHow does that map to triple O, openstack in general?", "commit_id": "9bd1115555c1e96ee9d4de27f5e8c9b73d5c8521"}, {"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "b144fa966355ddbd0f9e24fd68e62460aa9cdb59", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a8c8afa7", "line": 3819, "in_reply_to": "1fa4df85_082ea391", "updated": "2020-03-19 14:45:34.000000000", "message": "Hey,\nSo it's a \"revival\" of the old \"tripleo-validations\" where validations were launched only via the (now deprecated) UI.\nIts main target is for general TripleO (ensuring you have the requested hardware/resources, TripleO services are working before an update|upgrade, and so on).\nSince it's a framework, it can (and probably will) be open to additions for other projects - but the root of all is within OpenStack and TripleO.\nThere's a spec since Stein here:\nhttps://specs.openstack.org/openstack/tripleo-specs/specs/stein/validation-framework.html\n\nAnd since we want to make clean things, we make our own packages for better portability and usage :).\n\nDoes it answer your questions?", "commit_id": "9bd1115555c1e96ee9d4de27f5e8c9b73d5c8521"}, {"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "9ddd1289acb9b947e583c0920d7c2f1eec0987cb", "unresolved": false, "patch_set": 1, "id": "df33271e_d2c0ce53", "line": 3819, "in_reply_to": "1fa4df85_a8c8afa7", "updated": "2020-03-24 07:44:33.000000000", "message": "It does. I understand now the relevance. I think it's a worthwile addition indeed.", "commit_id": "9bd1115555c1e96ee9d4de27f5e8c9b73d5c8521"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "034b6e6744f122fb61f542527c8c525cbcea736c", "unresolved": false, "patch_set": 1, "id": "1fa4df85_557c8b1f", "line": 3820, "updated": "2020-03-13 13:31:06.000000000", "message": "Any reason these don't have tripleo in the name?", "commit_id": "9bd1115555c1e96ee9d4de27f5e8c9b73d5c8521"}, {"author": {"_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, "change_message_id": "12013840b8fe96016ff8779867131cf44ece3d05", "unresolved": false, "patch_set": 1, "id": "1fa4df85_719bc865", "line": 3820, "in_reply_to": "1fa4df85_557c8b1f", "updated": "2020-03-16 06:49:46.000000000", "message": "yep:\n- there's already the tripleo-validations (set to be disbanded)\n- the whole framework will probably be used outside of tripleo, meaning we need a really generic name\n\nThere will be some more repositories later, their name will be something like:\nvalidations-tripleo-storage\nvalidations-tripleo-compute\n... and so on\nThose will be specific to tripleo usage, hence the \"tripleo\" in the name", "commit_id": "9bd1115555c1e96ee9d4de27f5e8c9b73d5c8521"}]}}, "openstack%2Fnova~master~Ida8dc7a01db096c269ef18656c5a373ce08ee58c": {"owner_id": 23598, "owner_name": "Zhong Luyao", "owner_email": "luyao.zhong@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-03-19 11:30:40.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_f7f551cd", "line": 11, "updated": "2019-08-28 05:04:48.000000000", "message": "good to have a separate bug filed for orphan instance and error migration.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "65d220fc975dc5729ced4a482bf5f970923a312b", "unresolved": false, "patch_set": 4, "id": "7faddb67_d74055a5", "line": 11, "in_reply_to": "7faddb67_f7f551cd", "updated": "2019-08-28 05:41:13.000000000", "message": "Got it. And because this is more like bug-fix, I will move this out of the virtual-persistent-memory patch series.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}], "nova/compute/manager.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_f68f6e27", "line": 936, "updated": "2020-03-19 11:30:40.000000000", "message": "This seems not covered by test case.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_76105e4f", "line": 10270, "range": {"start_line": 10270, "start_character": 43, "end_line": 10270, "end_character": 44}, "updated": "2020-03-19 11:30:40.000000000", "message": "Our convention has always been to use an open paren as a line break, other than in the db_api code.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}], "nova/compute/resource_tracker.py": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_5741c509", "line": 765, "range": {"start_line": 763, "start_character": 7, "end_line": 765, "end_character": 45}, "updated": "2019-08-28 05:04:48.000000000", "message": "It will be great you put this and the error migration into a sub method, and filter them out by one DB call.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_97373db0", "line": 769, "range": {"start_line": 769, "start_character": 8, "end_line": 769, "end_character": 36}, "updated": "2019-08-28 05:04:48.000000000", "message": "Good to have comment to explain why we need those rror migrations, and explain the _cleanup_incomplete_migration will cleanup those migration, when those migration turn into fail status, then it won't be tracked anymore.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_57cc65ba", "line": 771, "range": {"start_line": 769, "start_character": 8, "end_line": 771, "end_character": 64}, "updated": "2019-08-28 05:04:48.000000000", "message": "we should only include the resize error migration, right? Since the live-migraiton has it own rollback method, it won't be a error migration until the rollback successful.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_575a25f2", "line": 793, "range": {"start_line": 789, "start_character": 8, "end_line": 793, "end_character": 55}, "updated": "2019-08-28 05:04:48.000000000", "message": "good to have a comment about this. I forget why we need to take care the migration case at here again.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1f0cebf848cf009de74b0f763453860ef034116e", "unresolved": false, "patch_set": 4, "id": "7faddb67_7702c1bc", "line": 1483, "range": {"start_line": 1483, "start_character": 28, "end_line": 1483, "end_character": 50}, "updated": "2019-08-28 05:04:48.000000000", "message": "we should use driver.list_instance_uuids instead of this method, right? since driver.get_per_instance_usage doesn't implement by most of driver.", "commit_id": "b6d616666f4ac361b886cfec87c1c7dccc1af2ef"}, {"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "73c9bcfaa9dd3e4f47842819f9d25d70c1efe9c3", "unresolved": false, "patch_set": 5, "id": "7faddb67_2a7829f6", "line": 766, "range": {"start_line": 766, "start_character": 25, "end_line": 766, "end_character": 63}, "updated": "2019-08-30 18:20:43.000000000", "message": "migrations are filtered with nodename at line 760, and the migrations are used with nodename at line 769.\nDon't we need to specify nodename here to get error_migrations which are related to the nodename?", "commit_id": "025c2f83aa6135c9460f10062eabc35476ca0c35"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "c44e47baf50ceb768da9eda7e5a2ba769d08e78b", "unresolved": false, "patch_set": 5, "id": "df33271e_c9bdc069", "line": 766, "range": {"start_line": 766, "start_character": 25, "end_line": 766, "end_character": 63}, "in_reply_to": "1fa4df85_96cdda31", "updated": "2020-03-24 11:39:28.000000000", "message": "sorry I missed this comment. I\u2018ll add node filter", "commit_id": "025c2f83aa6135c9460f10062eabc35476ca0c35"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 5, "id": "1fa4df85_96cdda31", "line": 766, "range": {"start_line": 766, "start_character": 25, "end_line": 766, "end_character": 63}, "in_reply_to": "7faddb67_2a7829f6", "updated": "2020-03-19 11:30:40.000000000", "message": "I am confusing this too.", "commit_id": "025c2f83aa6135c9460f10062eabc35476ca0c35"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_161ecaba", "line": 893, "updated": "2020-03-19 11:30:40.000000000", "message": "It seems not covered by tests.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "47a14c01445092a03ccdd8809d3618f12e0361bd", "unresolved": false, "patch_set": 12, "id": "1fa4df85_ff3c0de2", "line": 893, "in_reply_to": "1fa4df85_161ecaba", "updated": "2020-03-20 10:46:10.000000000", "message": "Yes, I don't add enough test cases yet, I'll do that when the implementation detail is accepted by community.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_d66032a8", "line": 912, "updated": "2020-03-19 11:30:40.000000000", "message": "suggestion, you can use instance_uuidsX instead of uuidsX or vuuids.\n\nAnd any test cases covered?", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_16456ab4", "line": 1354, "updated": "2020-03-19 11:30:40.000000000", "message": "it seems not covered by test case.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}], "nova/tests/unit/compute/test_compute_mgr.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2d9cfd5f82a9f540f60cd61d1fba04ec575e72bc", "unresolved": false, "patch_set": 12, "id": "1fa4df85_96e39ad8", "line": 2352, "updated": "2020-03-19 11:30:40.000000000", "message": "Can you add a serio for cleanup_specific_resources()? that after you clean up the vpmems from the instance, then assert it's not exist.", "commit_id": "5956ab4dd12849876a5f4345b7a7ecdcee7af2bc"}]}}, "openstack%2Fgovernance~master~Ib37815eb7fc917ce7258010b82301d0cfef803e1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 1, "date": "2020-03-23 08:33:40.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Fsushy-cli~master~Ic7737b92c70af738c7998e412cb59d149418542e": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 08:41:06.000000000", "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-12 07:50:08.000000000", "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {"sushycli/base.py": [{"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "10b2fa852686d32009387571a0a28c2a2664ee89", "unresolved": false, "patch_set": 2, "id": "df33271e_b259ca5b", "line": 67, "range": {"start_line": 67, "start_character": 54, "end_line": 67, "end_character": 58}, "updated": "2020-03-24 08:41:06.000000000", "message": "I'm wondering if we need to support https =)\nWill merge and maybe we can figure out in a follow-up if necessary", "commit_id": "411faf1d857ffbe5600c0632ac86401b62806bf5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "9000023c35087d3bbd4e22235dbc42b2e97448be", "unresolved": false, "patch_set": 2, "id": "df33271e_e6a9d3df", "line": 67, "range": {"start_line": 67, "start_character": 54, "end_line": 67, "end_character": 58}, "in_reply_to": "df33271e_b259ca5b", "updated": "2020-03-24 09:03:41.000000000", "message": "I think this is just the default schema in case it's not given. If you do `https://`, it will work just fine.", "commit_id": "411faf1d857ffbe5600c0632ac86401b62806bf5"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "650d26a8867fbdc6da3e3ff3024c07c7bb41ac61", "unresolved": false, "patch_set": 2, "id": "df33271e_09004867", "line": 67, "range": {"start_line": 67, "start_character": 54, "end_line": 67, "end_character": 58}, "in_reply_to": "df33271e_e6a9d3df", "updated": "2020-03-24 11:08:45.000000000", "message": "Not actually needed but better have a safeguard. \n\"The scheme argument gives the default addressing scheme, to be used only if the URL does not specify one.\"", "commit_id": "411faf1d857ffbe5600c0632ac86401b62806bf5"}]}}, "openstack%2Fcinderlib~master~I21264290d783d582dfb886b799781380dbf5757d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 12:23:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 2, "date": "2020-03-24 10:41:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 1, "date": "2020-01-17 10:29:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~master~I898283d98e2dd72a15273558cbf29aa5977cff1f": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 10:25:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fhorizon~master~I09fbe158100dc62f0f4835943d4788c0ffaa3307": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~I3e9c5e64d4ca2b49bc4ce2689834a62d6ed71b42": {"owner_id": 19134, "owner_name": "Eyal", "owner_email": "eyalb1@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 10:31:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, {"value": 2, "date": "2020-03-24 10:22:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"deliverables/ussuri/mistral-lib.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "6f16260b0aaacb9ffdc8abb37dc01858d8455d3c", "unresolved": false, "patch_set": 2, "id": "df33271e_068317ce", "line": 18, "range": {"start_line": 18, "start_character": 13, "end_line": 18, "end_character": 18}, "updated": "2020-03-24 09:54:24.000000000", "message": "This release drops python 2 support, so this will have to be a 2.0.0 release.", "commit_id": "149254ae1b1cb9d9b008e70852eccdee502a16b4"}]}}, "openstack%2Fironic-lib~master~I9a03943a838b53518b052874296744c97feea249": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 08:35:12.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 08:54:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-03-23 12:39:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "x%2Fbrowbeat~master~Ibb741a52cb1eca5b67aa8e7ff6afa1b4f64e165b": {"owner_id": 30421, "owner_name": "Asma Syed Hameed", "owner_email": "asyedham@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 07:32:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10442, "name": "Masco Kaliyamoorthy", "email": "mkaliyam@redhat.com", "username": "masco"}, {"value": 2, "date": "2020-03-24 07:29:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10267, "name": "venkata anil", "email": "anilvenkata@redhat.com", "username": "anil"}], "comments": {}}, "openstack%2Fsushy~master~Id58e612da796bdac633adb74156edb16d133ce10": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 08:33:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 08:53:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fpython-ironicclient~master~I078152aca364edd7e7fac2f9cac2557b93ced4b0": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-03-24 08:34:59.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-03-24 08:53:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-03-23 14:39:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Ftripleo-common~master~I0f97772434040f04f9495239b9a432c1ac062555": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:40:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-23 23:32:57.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-03-19 15:58:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Fironic~master~I027e024364bea73babbbd5cb9be22cab1f9ca3f1": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17998, "name": "UFCG OneView CI", "email": "ufcg-oneview-ci@lsd.ufcg.edu.br", "username": "ufcg-oneview-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11297, "name": "Nisha Agarwal", "email": "agarwalnisha1980@gmail.com", "username": "Nisha"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10206, "name": "Madhuri Kumari", "email": "madhuri.kumari@intel.com", "username": "Madhuri"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19003, "name": "Fujitsu iRMC CI", "email": "fj-lsoft-irmcci@dl.jp.fujitsu.com", "username": "Fujitsu_iRMC_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16635, "name": "deray", "email": "debayan.ray@gmail.com", "username": "deray"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19604, "name": "ankit", "email": "ankit.dhn31@gmail.com", "username": "ankit"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, "change_message_id": "061c256240d47576f470b12325fb9756e84c73b8", "unresolved": false, "patch_set": 22, "id": "9abb7d3a_a1bf0aa9", "line": 12, "range": {"start_line": 12, "start_character": 12, "end_line": 12, "end_character": 47}, "updated": "2016-06-03 08:02:19.000000000", "message": "According to the spec, these filters have not got consensus from community guys...How to set tags_any and not_tags_any to API? like GET /v1/nodes/nodes/tags/tags_any={tag_a}&tags_any={tag_b} ?\n\nin spec, written like GET /v1/nodes?tag={tag_a}&tag={tag_b} . which is correct?", "commit_id": "48de97232d6cad5e4c1badfa329b198ebe75fdba"}], "doc/source/webapi/v1.rst": [{"author": {"_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, "change_message_id": "061c256240d47576f470b12325fb9756e84c73b8", "unresolved": false, "patch_set": 22, "id": "9abb7d3a_e184725e", "line": 245, "updated": "2016-06-03 08:02:19.000000000", "message": "need to add here also", "commit_id": "48de97232d6cad5e4c1badfa329b198ebe75fdba"}], "ironic/api/controllers/v1/node.py": [{"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "62153bfb2e6252dc6250c23b55e447656728671b", "unresolved": false, "patch_set": 5, "id": "9a8ffd7b_fdd6e04d", "line": 97, "updated": "2015-12-02 17:18:02.000000000", "message": "you should hide tags from older clients here", "commit_id": "ba383e261b0f4fefc72f33a02b6b6d5e252f89c8"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "62153bfb2e6252dc6250c23b55e447656728671b", "unresolved": false, "patch_set": 5, "id": "9a8ffd7b_9dc79497", "line": 114, "updated": "2015-12-02 17:18:02.000000000", "message": "this line generates an error:\n\n2015-12-02 09:03:08.006 21693 ERROR wsme.api [req-56038bd1-fef5-46f7-bd6b-6ca5cd7e7630 - - - - -] Server-side error: \"'NoneType' object is not iterable\". Detail: \nTraceback (most recent call last):\n\n  File \"/opt/source/openstack/ironic/local/lib/python2.7/site-packages/wsmeext/pecan.py\", line 84, in callfunction\n    result = f(self, *args, **kwargs)\n\n  File \"/opt/source/openstack/ironic/ironic/api/controllers/v1/node.py\", line 516, in get\n    return Tags(tags=_get_tags_names(tags))\n\n  File \"/opt/source/openstack/ironic/ironic/api/controllers/v1/node.py\", line 114, in _get_tags_names\n    return [t.tag for t in tags]\n\nTypeError: 'NoneType' object is not iterable", "commit_id": "ba383e261b0f4fefc72f33a02b6b6d5e252f89c8"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "62153bfb2e6252dc6250c23b55e447656728671b", "unresolved": false, "patch_set": 5, "id": "9a8ffd7b_bdccd8bb", "line": 918, "updated": "2015-12-02 17:18:02.000000000", "message": "This is only creating the subresource /v1/nodes/<NNN>/tags -- but not providing any link to it. Such a link from the parent resource is necessary so that clients traversing the RESTful interface can discover the 'tags'. Eg,\n  GET /v1/nodes/<NNN>\nshould return a link to the \"tags\" resource, or should embed it in the parent. For example:\n\n  curl -H 'X-OpenStack-Ironic-API-Version: latest' http://localhost:6385/v1/nodes/foo 2>/dev/null | json_pp | grep ports || echo 'not found'\n   \"ports\" : [\n         \"href\" : \"http://localhost:6385/v1/nodes/75f21c83-e6a0-43ab-9e81-9942737b87c1/ports\",\n\nCompare that to:\n\n  curl -H 'X-OpenStack-Ironic-API-Version: latest' http://localhost:6385/v1/nodes/foo 2>/dev/null | json_pp | grep tag || echo 'not found'                                       \n  not found", "commit_id": "ba383e261b0f4fefc72f33a02b6b6d5e252f89c8"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_f13ac497", "line": 505, "updated": "2016-01-28 17:13:32.000000000", "message": "This is not an array as is mentioned on L496.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_d49bda70", "line": 505, "in_reply_to": "7a5de9d1_f13ac497", "updated": "2016-01-29 06:50:11.000000000", "message": "Done", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7e80effbf411b79a1a6e4fd638d10fac5f067790", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_4c83d656", "line": 509, "updated": "2016-01-29 10:26:30.000000000", "message": "Also, there is no way to add a tag in the API, only replace all of them.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3e36fadbe6da6d3b1c00078c5becde72180b7a7", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_d103e140", "line": 511, "updated": "2016-01-29 10:23:42.000000000", "message": "In this controller methods you should also check for API version.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3e36fadbe6da6d3b1c00078c5becde72180b7a7", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_f185bdac", "line": 523, "updated": "2016-01-29 10:23:42.000000000", "message": "Also I'm wondering should it be 200 OK instead?", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_5196384d", "line": 524, "updated": "2016-01-28 17:13:32.000000000", "message": "I'm not able to do the put neither with ['tag1', 'tag2'], nor with {'tags': ['tag1', 'tag2']}. Although I may be doing something wrong:\n\n $ curl -i -X PUT http://127.0.0.1:6385/v1/nodes/node-0/tags -H \"X-OpenStack-Ironic-API-Version: 1.15\" -d '[\"tag1\", \"tag10\"]'\n HTTP/1.1 400 Bad Request\n X-Openstack-Ironic-Api-Minimum-Version: 1.1\n X-Openstack-Ironic-Api-Maximum-Version: 1.15\n X-Openstack-Ironic-Api-Version: 1.15\n Content-Type: application/json\n Content-Length: 147\n Date: Thu, 28 Jan 2016 17:10:24 GMT\n\n {\"error_message\": \"{\\\"debuginfo\\\": null, \\\"faultcode\\\": \\\"Client\\\", \\\"faultstring\\\": \\\"Unknown argument: \\\\\\\"[\\\\\\\"tag1\\\\\\\", \\\\\\\"tag10\\\\\\\"]\\\\\\\"\\\"}\"}\n\n $ curl -i -X PUT http://127.0.0.1:6385/v1/nodes/node-0/tags -H \"X-OpenStack-Ironic-API-Version: 1.15\" -d '{\"tags\": [\"tag1\", \"tag10\"]}'\n HTTP/1.1 400 Bad Request\n X-Openstack-Ironic-Api-Minimum-Version: 1.1\n X-Openstack-Ironic-Api-Maximum-Version: 1.15\n X-Openstack-Ironic-Api-Version: 1.15\n Content-Type: application/json\n Content-Length: 163\n Date: Thu, 28 Jan 2016 16:56:42 GMT\n\n {\"error_message\": \"{\\\"debuginfo\\\": null, \\\"faultcode\\\": \\\"Client\\\", \\\"faultstring\\\": \\\"Unknown argument: \\\\\\\"{\\\\\\\"tags\\\\\\\": [\\\\\\\"tag1\\\\\\\", \\\\\\\"tag10\\\\\\\"]}\\\\\\\"\\\"}\"}", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_e9c4ff5f", "line": 524, "in_reply_to": "7a5de9d1_5196384d", "updated": "2016-01-29 06:50:11.000000000", "message": "hi vdrok, you should specify \"Content-Type: application/json\" in the curl request, to recognize the json body '{\"tags\": [\"tag1\", \"tag2\"]}'.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3e36fadbe6da6d3b1c00078c5becde72180b7a7", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_d16e812e", "line": 524, "in_reply_to": "7a5de9d1_e9c4ff5f", "updated": "2016-01-29 10:23:42.000000000", "message": "Yep, thanks, forgot to add it :)", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_165676d2", "line": 534, "updated": "2016-01-28 17:13:32.000000000", "message": "it should be NO_CONTENT here?", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_94ba42bf", "line": 534, "in_reply_to": "7a5de9d1_165676d2", "updated": "2016-01-29 06:50:11.000000000", "message": "Done", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_abb93b7b", "line": 664, "updated": "2016-01-28 17:13:32.000000000", "message": "Also, what about the link to /tags controller as Devananda commented in PS5?", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3e36fadbe6da6d3b1c00078c5becde72180b7a7", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_f1505d60", "line": 664, "in_reply_to": "7a5de9d1_6fd1ef56", "updated": "2016-01-29 10:23:42.000000000", "message": "Correct, but the user still needs to discover endpoint where to do delete or put.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_6fd1ef56", "line": 664, "in_reply_to": "7a5de9d1_abb93b7b", "updated": "2016-01-29 06:50:11.000000000", "message": "instead of returning a link to the tags resources, I embed it in the node.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_a2e8807d", "line": 684, "updated": "2016-01-28 17:13:32.000000000", "message": "Is it possible for tags to be None here? If so, things may fail on L118", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_afc9277a", "line": 684, "in_reply_to": "7a5de9d1_a2e8807d", "updated": "2016-01-29 06:50:11.000000000", "message": "I only call _get_tags_names() if tags is not None, see L687.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3e36fadbe6da6d3b1c00078c5becde72180b7a7", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_31483587", "line": 684, "in_reply_to": "7a5de9d1_afc9277a", "updated": "2016-01-29 10:23:42.000000000", "message": "Oh, right, sorry for confusion.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_422bcc94", "line": 1037, "updated": "2016-01-28 17:13:32.000000000", "message": "Please add a comment that it is handled by a different endpoint.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ec4e569537b6053ea8ba971fad8760d34647bb8e", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_cf9b4371", "line": 1037, "in_reply_to": "7a5de9d1_422bcc94", "updated": "2016-01-29 06:50:11.000000000", "message": "Done", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}, {"author": {"_account_id": 10206, "name": "Madhuri Kumari", "email": "madhuri.kumari@intel.com", "username": "Madhuri"}, "change_message_id": "d02bb4ffa8b169806a0e07cc0c51d2949ac51622", "unresolved": false, "patch_set": 25, "id": "1a6eadb0_58c54b59", "line": 672, "range": {"start_line": 672, "start_character": 15, "end_line": 672, "end_character": 79}, "updated": "2016-12-19 18:17:21.000000000", "message": "I might be wrong here. But is it good to write to db from api service. IMO the conductor service is meant to read/write to db whereas api service should only have read permission to the db.\nThoughts?", "commit_id": "1dfa1122a82861bf8c86a329a2ef4a5340769a5a"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "5c6611922bb159fd2cb274f862de5daf7ef5a111", "unresolved": false, "patch_set": 31, "id": "ffe62b97_90188075", "line": 1369, "updated": "2017-03-27 11:29:35.000000000", "message": "This was changed, as if let this be as-is, with addition of various tag filters, pep8 starts to complain about code complexity.", "commit_id": "71ba3bf9e98ae00ff68eb0ceb7c2ec100405676e"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a23ca9098e516e3d6bfb1b6c8204de03e9a7004c", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_d5285487", "line": 738, "updated": "2017-07-14 02:11:14.000000000", "message": "wondering if we should use something other than 'put'. Is it clear what 'put' means? I see 'baremetal:node:inject_nmi', '..:node:set_console_state', ':set_maintenance', ':set_boot_device'.", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "41a5d32109658b1e4b9dce159349a52379a206ed", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_4877eaa1", "line": 738, "in_reply_to": "1f1a1f67_d5285487", "updated": "2017-07-14 16:30:36.000000000", "message": "Yeah, set might make more sense.", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a23ca9098e516e3d6bfb1b6c8204de03e9a7004c", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_75f620fc", "line": 743, "updated": "2017-07-14 02:11:14.000000000", "message": "Does this replace the list of tags for the node, with this new list of tags? I'm guessing yes (and it addresses [1]). But we don't have anything (yet) for Addressing Individual Tags [2]\n\n[1] http://specs.openstack.org/openstack/api-wg/guidelines/tags.html#modifying-the-tag-list\n[2] http://specs.openstack.org/openstack/api-wg/guidelines/tags.html#addressing-individual-tags", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "41a5d32109658b1e4b9dce159349a52379a206ed", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_a83c3ebf", "line": 743, "in_reply_to": "1f1a1f67_75f620fc", "updated": "2017-07-14 16:30:36.000000000", "message": "Yup, may add the individual operations.", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "03e69aa0fc27df5f47e78c7465378bb3e1761142", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_cc2f3886", "line": 743, "in_reply_to": "1f1a1f67_a83c3ebf", "updated": "2017-07-18 14:03:00.000000000", "message": "Ok, if we don't end up adding the individual tags, we should note it somewhere, maybe in the spec?", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "589a14eb0cf24ab93467dc1f8fab12b9b6911cfe", "unresolved": false, "patch_set": 34, "id": "ff346bd7_c8713aaa", "line": 743, "in_reply_to": "1f1a1f67_cc2f3886", "updated": "2017-07-28 16:21:35.000000000", "message": "I guess I'll add that to a subsequent patch.", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a23ca9098e516e3d6bfb1b6c8204de03e9a7004c", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_75e060fb", "line": 744, "updated": "2017-07-14 02:11:14.000000000", "message": "I've got a small concern here, wrt this and rolling upgrades. Although maybe it can be addressed when/if it is needed. Most of the other resources are modified via RPC request to the conductor. (The exceptions are chassis-create&update, portgroup-create.) We just changed master so that port is created-via-conductor, so I suppose we could do a similar thing for tags if we need to.", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "41a5d32109658b1e4b9dce159349a52379a206ed", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_afbe9262", "line": 744, "in_reply_to": "1f1a1f67_75e060fb", "updated": "2017-07-14 16:30:36.000000000", "message": "I don't think there is a reason to do it on the conductor-side yet, and may never be, as these are just strings to save into DB, there should be no additional logic involved, otherwise they wouldn't be tags :)", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "03e69aa0fc27df5f47e78c7465378bb3e1761142", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_4c7208af", "line": 744, "in_reply_to": "1f1a1f67_afbe9262", "updated": "2017-07-18 14:03:00.000000000", "message": "Yeah, my thinking too. Just wanted to 'record' the thinking here cuz I'm sure I will forget in a week :)", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a23ca9098e516e3d6bfb1b6c8204de03e9a7004c", "unresolved": false, "patch_set": 34, "id": "1f1a1f67_8a5cfb7e", "line": 1531, "updated": "2017-07-14 02:11:14.000000000", "message": "nit s/sepcified/specified/\n\nsame issue below", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "589a14eb0cf24ab93467dc1f8fab12b9b6911cfe", "unresolved": false, "patch_set": 34, "id": "ff346bd7_c87ffa63", "line": 1531, "in_reply_to": "1f1a1f67_8a5cfb7e", "updated": "2017-07-28 16:21:35.000000000", "message": "Done", "commit_id": "7acd80647669b22acce6e49dab6510c003af5095"}], "ironic/api/controllers/v1/versions.py": [{"author": {"_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, "change_message_id": "061c256240d47576f470b12325fb9756e84c73b8", "unresolved": false, "patch_set": 22, "id": "9abb7d3a_b6810e92", "line": 48, "range": {"start_line": 48, "start_character": 0, "end_line": 48, "end_character": 47}, "updated": "2016-06-03 08:02:19.000000000", "message": "Please add explanation under here also.", "commit_id": "48de97232d6cad5e4c1badfa329b198ebe75fdba"}], "ironic/db/sqlalchemy/api.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "21a5b79dbcaa30d06b06480e1b3d426d6e90e686", "unresolved": false, "patch_set": 11, "id": "7a5de9d1_d004667f", "line": 363, "updated": "2016-01-28 17:13:32.000000000", "message": "This should be done in previous patches as this one claims to be an API only :) Also this is not tested anywhere.", "commit_id": "d110391d9581bca37a055d296ec64fff5e76c908"}], "releasenotes/notes/add-node-tags-1812f453c0cfba8c.yaml": [{"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "de20aa149e347b497f9f54583c09d9f899c52497", "unresolved": false, "patch_set": 33, "id": "5f201791_730120af", "line": 4, "updated": "2017-06-27 12:29:42.000000000", "message": "I wonder if we should explicitly mention the REST APIs that are available to support this. What is a 'tag' anyway, a string of max chars (I don't remember now)? And maybe how to specify it, the new filter strings that are available?\n\nAlso reminds me that we need to update the api-ref.", "commit_id": "c9036a3c1db68e976e84d0be85ecdf19e9e0b53e"}]}}, "openstack%2Fironic~master~Ie0ff6ad6f83b4ae1029e57a0c55678ea9a525ba4": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6637, "name": "Sam Betts", "email": "sam@code-smash.net", "username": "sambetts"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17998, "name": "UFCG OneView CI", "email": "ufcg-oneview-ci@lsd.ufcg.edu.br", "username": "ufcg-oneview-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22255, "name": "Tuan", "email": "tuanla@vn.fujitsu.com", "username": "Tuan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19003, "name": "Fujitsu iRMC CI", "email": "fj-lsoft-irmcci@dl.jp.fujitsu.com", "username": "Fujitsu_iRMC_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16635, "name": "deray", "email": "debayan.ray@gmail.com", "username": "deray"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, "change_message_id": "7d08d2f526611c4a6334bba9457ff722786afc20", "unresolved": false, "patch_set": 18, "id": "9a68dd71_bd91699b", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 35}, "updated": "2016-01-22 05:23:32.000000000", "message": "nit: We track features with RFE bugs from recently days, so can you remove this bp and add Partial-Bug or Related-Bug in commit messages, thanks.", "commit_id": "a8b4d802f34488ee021f869b324c866fac72c0de"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5261c746807e63414f7adb59d2481a479e0f0e21", "unresolved": false, "patch_set": 19, "id": "9a68dd71_e5d4c8ec", "line": 8, "updated": "2016-01-25 11:41:40.000000000", "message": "The commit message needs a bit more information. For example:\n\n1- Version of the Nodes RPC object bumped to 1.5\n\n2- This patch do not include the tags field in the Node API object (this is going to be done in a subsequent patch)", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "98e82dd85340a107cb07177f91696b96a3b8ada5", "unresolved": false, "patch_set": 19, "id": "9a68dd71_4da26d9c", "line": 8, "in_reply_to": "9a68dd71_e5d4c8ec", "updated": "2016-01-26 08:30:55.000000000", "message": "thanks Lucas, have done.", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "398a42d63e6abbe755c42fa7a95b36b60fad5157", "unresolved": false, "patch_set": 51, "id": "3a461143_08f066fd", "line": 7, "updated": "2017-01-30 22:44:25.000000000", "message": "/objs/RPC objects/", "commit_id": "f162914c7808677e7ab7faf6e612bc3e4ae25edf"}, {"author": {"_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, "change_message_id": "6d0e269630c12326844f4035f08882d19b112134", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_2d517963", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 15}, "updated": "2017-02-09 21:39:35.000000000", "message": "nit:  s/do/does/", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_8dc6e514", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 15}, "updated": "2017-02-09 21:34:46.000000000", "message": "nit: s/do/does", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_74c41540", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 15}, "in_reply_to": "fa31d9ce_2d517963", "updated": "2017-02-10 02:48:39.000000000", "message": "Done", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_34ca9d50", "line": 10, "range": {"start_line": 10, "start_character": 13, "end_line": 10, "end_character": 15}, "in_reply_to": "fa31d9ce_8dc6e514", "updated": "2017-02-10 02:48:39.000000000", "message": "Done", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}], "ironic/common/release_mappings.py": [{"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_8a351b49", "line": 76, "updated": "2017-07-14 02:07:48.000000000", "message": "I think we should add NodeTagList too; I think they are both serialized/deserialized.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2ecbee1294fba350c79e2fc53666df84901b877d", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_68bd0bd7", "line": 76, "in_reply_to": "1f1a1f67_4f381e3c", "updated": "2017-07-14 14:13:04.000000000", "message": "Seems like you're correct, we'll be calling convert_to_version if the object is an instance of IronicObject, NodeTagList is.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a88ac43ccef3d546f15ef854ce63825b5cc0f127", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_4c2a082c", "line": 76, "in_reply_to": "1f1a1f67_4f381e3c", "updated": "2017-07-18 14:33:35.000000000", "message": "You scared me; I looked and we don't have a NodeList object :)", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_4f381e3c", "line": 76, "in_reply_to": "1f1a1f67_8a351b49", "updated": "2017-07-14 13:23:38.000000000", "message": "Not really sure here. I thought that the list object does not have any logic, only its items are serialized. otherwise we'd have NodeList here?", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}], "ironic/db/sqlalchemy/api.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_88e1f39c", "line": 259, "updated": "2016-01-28 16:21:43.000000000", "message": "I think this should to to dbapi change. Also, not sure that we should just ignore this, maybe log something or throw an exception?", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "0eb4a21c1125c245e85dc77bc42ac2ac60f44cac", "unresolved": false, "patch_set": 45, "id": "1a6eadb0_6f25e85a", "line": 239, "updated": "2016-12-19 18:01:35.000000000", "message": "We don't want/need tags here?", "commit_id": "914ed07d4f14fbe9f28a1a3478f80270b83fbc2a"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_36570c59", "line": 249, "updated": "2017-01-24 15:26:34.000000000", "message": "if we're getting a list of nodes and returning the specified node columns, doesn't this include tags? And if not, maybe we should add a comment about why not...", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_35a36251", "line": 249, "in_reply_to": "5a3905b3_10adb39a", "updated": "2017-01-25 03:43:17.000000000", "message": "yes, the comments is in next patch ;)", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_10adb39a", "line": 249, "in_reply_to": "5a3905b3_36570c59", "updated": "2017-01-24 15:49:14.000000000", "message": "Zhenguo has added a note on that in the next patch, as actual filtering is added there.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_2dadf931", "line": 921, "updated": "2017-02-09 21:34:46.000000000", "message": "This is so we return node tags with the node, right?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_34261d17", "line": 921, "in_reply_to": "fa31d9ce_2dadf931", "updated": "2017-02-10 02:48:39.000000000", "message": "yes, this will joined load the tags.", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "e38aa18c034ba81039447a5f0936078d4250fb0d", "unresolved": false, "patch_set": 58, "id": "bf091321_e761973b", "line": 436, "updated": "2017-06-08 11:26:47.000000000", "message": "Had to change this as unittests started to fail whenever doing node.save, saying:\n\n Parent instance is not bound to a Session\n\nThis makes me wonder do we really want to join the tags lasily? We could just change to lazy=False in models.py relationship definition and forget about inserting options(joinedload('tags')) everywhere IIUC.", "commit_id": "098c66e18c83252506217ffdec0a6bbaa52ae082"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_da375cb0", "line": 333, "updated": "2017-07-14 02:07:48.000000000", "message": "I think this is wrong, even though we merged that code. models.Node() has no tags field. It seems to me that the abstraction (or whatever you call it) should be at the level where tags exists; in the VersionedObject layer. This seems to be a bit of a 'hack' and not very obvious.\n\nIt was confusing me, because I knew that 'tags' wasn't in the model, yet in objects.node.Node._set_from_db_object() it looked like it did exist. It seems to me that db_node['tags'] will always be an empty list since we never save that in the DB. So maybe it would be better to change the _set_from_db_object() to do self.tags = None if None is allowed, or = tags.NodeTagList() (or whatever an empty list is).", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d2d39fa7e5f284c2d180baaaa76cb57efb53d2dd", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_084a177f", "line": 333, "in_reply_to": "1f1a1f67_da375cb0", "updated": "2017-07-14 15:15:50.000000000", "message": "As I said replying to another comment, tags are joined by joinedload on the dbapi level, so it might make sense to do it here. and we should only set None (or empty list or whatever) to tags in create case, so I guess we won't be able to do this in _set_from_db_object, otherwise this would affect all the calls to get the node.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_da051cc4", "line": 418, "updated": "2017-07-14 02:07:48.000000000", "message": "Do we know whether it is impossible for 'tags' to be in values? And/or maybe we should guard against it anyway, like create_node() does.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d2d39fa7e5f284c2d180baaaa76cb57efb53d2dd", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_2815d34a", "line": 418, "in_reply_to": "1f1a1f67_cf430eaf", "updated": "2017-07-14 15:15:50.000000000", "message": "Yup, we should ignore it here.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_cf430eaf", "line": 418, "in_reply_to": "1f1a1f67_da051cc4", "updated": "2017-07-14 13:23:38.000000000", "message": "hrm, maybe.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "39d604312cd2814942154eab571d8b00d11a4416", "unresolved": false, "patch_set": 66, "id": "1f1a1f67_6c8144fb", "line": 421, "updated": "2017-07-18 14:30:58.000000000", "message": "in create_node(), we raise an exception. I am not sure whether we should do the same, but we might want to log something? (I'm not sure how tags would get here...)", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "00d31f6a5fed8033f89fef1de5e4005d451ec47a", "unresolved": false, "patch_set": 66, "id": "ff346bd7_25790f93", "line": 421, "in_reply_to": "1f1a1f67_6c8144fb", "updated": "2017-07-28 15:53:45.000000000", "message": "right, tags is an internal attr in the api object, so should not be writeable.", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}], "ironic/objects/base.py": [{"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "39d604312cd2814942154eab571d8b00d11a4416", "unresolved": false, "patch_set": 66, "id": "1f1a1f67_ac2cfc01", "line": 157, "updated": "2017-07-18 14:30:58.000000000", "message": "funny, i was just wondering about this yesterday. I'll submit a separate patch to do this, because we don't know when this patch might land and this will be useful for other features (like the port.physical_network addition).", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "4c2b3abb691cfebcb2df03a8948fc4ee9c342217", "unresolved": false, "patch_set": 66, "id": "1f1a1f67_b4e4390e", "line": 157, "in_reply_to": "1f1a1f67_ac2cfc01", "updated": "2017-07-18 17:55:26.000000000", "message": "I moved this to a separate patch: https://review.openstack.org/#/c/484890/", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}], "ironic/objects/fields.py": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_6d12b9b6", "line": 45, "updated": "2015-11-09 07:21:54.000000000", "message": "Why don't use object_fields.ObjectField directly or do you have a future plan to customized?", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4c263db367a4244e594db587011ec8ffed5943c2", "unresolved": false, "patch_set": 5, "id": "da85f559_13aeb02e", "line": 45, "in_reply_to": "da85f559_6d12b9b6", "updated": "2015-11-09 08:41:55.000000000", "message": "I find Ironic doesn't use object_fields directly even if there's no customized, so keep consistent with others.  please see ItegerField, StringField ...", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_4d11f5ab", "line": 53, "updated": "2015-11-09 07:21:54.000000000", "message": "ditto", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}], "ironic/objects/node.py": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_938dc033", "line": 110, "updated": "2015-11-09 07:21:54.000000000", "message": "Do we have to query db for tags one more time? I think we can get db_node and db_tag in one sql query by adding columns_to_join in node db_api.", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4c263db367a4244e594db587011ec8ffed5943c2", "unresolved": false, "patch_set": 5, "id": "da85f559_76884a23", "line": 110, "in_reply_to": "da85f559_938dc033", "updated": "2015-11-09 08:41:55.000000000", "message": "thanks Tan, will try to use join columns later.", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5261c746807e63414f7adb59d2481a479e0f0e21", "unresolved": false, "patch_set": 19, "id": "9a68dd71_85f4ec5a", "line": 110, "updated": "2016-01-25 11:41:40.000000000", "message": "mostly nit, but \"expected_tags\" sounds like you are passing a list of tags that is expected to be in the object.\n\nMaybe naming it \"include_tags=True/False\" or \"with_tags=True/False\" ? Meaning that the object will include the tags?\n\n( I also think that we may always want to include the tags, why wouldn't we?)", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "98e82dd85340a107cb07177f91696b96a3b8ada5", "unresolved": false, "patch_set": 19, "id": "9a68dd71_8dae2580", "line": 110, "in_reply_to": "9a68dd71_85f4ec5a", "updated": "2016-01-26 08:30:55.000000000", "message": "thanks Lucas, have changed to always include tags :)", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5261c746807e63414f7adb59d2481a479e0f0e21", "unresolved": false, "patch_set": 19, "id": "9a68dd71_65bf7861", "line": 114, "updated": "2016-01-25 11:41:40.000000000", "message": "nit:\n\n if field == 'tags' and expected_tags:\n   ...", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5261c746807e63414f7adb59d2481a479e0f0e21", "unresolved": false, "patch_set": 19, "id": "9a68dd71_0588fcc3", "line": 314, "updated": "2016-01-25 11:41:40.000000000", "message": "Do we plan to allow people to enroll the node already containg the tags? If so, you may want to pass expected_tags=True here", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "0eb4a21c1125c245e85dc77bc42ac2ac60f44cac", "unresolved": false, "patch_set": 45, "id": "1a6eadb0_5258cc56", "line": 142, "range": {"start_line": 142, "start_character": 20, "end_line": 142, "end_character": 27}, "updated": "2016-12-19 18:01:35.000000000", "message": "Hmm, we could use node._context instead of introducing another parameter, but that's private so yeah, seems we have to do that.", "commit_id": "914ed07d4f14fbe9f28a1a3478f80270b83fbc2a"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "b7bd0c61d06107adc4ca05d26d287cce87274700", "unresolved": false, "patch_set": 48, "id": "5a3905b3_cd565c05", "line": 143, "range": {"start_line": 143, "start_character": 16, "end_line": 143, "end_character": 28}, "updated": "2017-01-23 21:10:23.000000000", "message": "Please use attr access to field for new code (node.tags).", "commit_id": "ca7effda782796626a48531bc69c1be71edb04d1"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "65eb058e4be881c357ed7ec6d7197c750536e287", "unresolved": false, "patch_set": 48, "id": "5a3905b3_785c3f7d", "line": 143, "range": {"start_line": 143, "start_character": 16, "end_line": 143, "end_character": 28}, "in_reply_to": "5a3905b3_cd565c05", "updated": "2017-01-24 02:45:02.000000000", "message": "Done", "commit_id": "ca7effda782796626a48531bc69c1be71edb04d1"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_7be41dab", "line": 136, "updated": "2017-01-24 15:26:34.000000000", "message": "it would be good to have a comment as to why we're excluding tags.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_904363ae", "line": 136, "in_reply_to": "5a3905b3_7be41dab", "updated": "2017-01-24 15:49:14.000000000", "message": "I think it's because we cannot create a node with tags, like Node(**{..., 'tags': ['abc']}). We can always get the node's tags if needed separately. Also tags are not actually part of the node, it's a separate entity, we're joining them only to speed up some operations I suppose. as_dict OTOH is just an utility function, used only in API (and also in agent_client, which can be considered an API in some sense:))", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_75732ae8", "line": 136, "in_reply_to": "5a3905b3_904363ae", "updated": "2017-01-25 03:43:17.000000000", "message": "yes, thanks vdrok for the explanation, will add a comment for this in the coming patch set!", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_5b23e1bc", "line": 137, "updated": "2017-01-24 15:26:34.000000000", "message": "I suppose you could also just call the inherited.as_dict(), and delete 'tags' entry.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_50757bc8", "line": 137, "in_reply_to": "5a3905b3_5b23e1bc", "updated": "2017-01-24 15:49:14.000000000", "message": "Yup, that should be a bit better.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_d69a4813", "line": 209, "updated": "2017-01-24 15:26:34.000000000", "message": "won't cls also work? it should be == to Node.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_f03907f3", "line": 209, "in_reply_to": "5a3905b3_d69a4813", "updated": "2017-01-24 15:49:14.000000000", "message": "yup, it will", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_550b8e2b", "line": 209, "in_reply_to": "5a3905b3_f03907f3", "updated": "2017-01-25 03:43:17.000000000", "message": "Done", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_d66888f7", "line": 279, "updated": "2017-01-24 15:26:34.000000000", "message": "it seems like the original code should work here. (the original code has changed since you started this patch.)", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_b34f8969", "line": 279, "in_reply_to": "5a3905b3_d66888f7", "updated": "2017-01-24 15:49:14.000000000", "message": "Hm, I don't think so, we pass an additional context as first argument. We'd have to change the *list function too to have it.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_bcbe7b62", "line": 358, "updated": "2017-01-24 15:26:34.000000000", "message": "the asymmetry of how tags are being handled bothers me.\n\nThis node object has a tags (list). This tags list/object is generated at this level (above _from_db_object()). Doesn't that mean that when this destroy() is called, self.tags exists, and if so, I would think we'd call destroy on that list.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_33b2b94c", "line": 358, "in_reply_to": "5a3905b3_bcbe7b62", "updated": "2017-01-24 15:49:14.000000000", "message": "It's done in dbapi.destroy_node. They are not created in _from_db_object, but joined to nodes from tags table.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "398a42d63e6abbe755c42fa7a95b36b60fad5157", "unresolved": false, "patch_set": 51, "id": "3a461143_c8c3be55", "line": 138, "updated": "2017-01-30 22:44:25.000000000", "message": "if so, shouldn't 'tags' be omitted by hasattr(self,k)?", "commit_id": "f162914c7808677e7ab7faf6e612bc3e4ae25edf"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "16fbf152b32b94a2152e4f7b09dc0814fff4d108", "unresolved": false, "patch_set": 51, "id": "1a430d35_34787fc4", "line": 138, "in_reply_to": "3a461143_c8c3be55", "updated": "2017-02-06 12:14:06.000000000", "message": "No, we just not support creating with tags now.", "commit_id": "f162914c7808677e7ab7faf6e612bc3e4ae25edf"}, {"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "cd8f942b7060588b68ecc002c09fac2bb9166d2d", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_705268df", "line": 59, "updated": "2017-02-09 21:41:59.000000000", "message": "maybe Add node field?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, "change_message_id": "6d0e269630c12326844f4035f08882d19b112134", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_90fefc03", "line": 134, "updated": "2017-02-09 21:39:35.000000000", "message": "Would this be better to call the base class version and then remove the ones that are named 'tags'? Feel free to disagree.\n\nMaybe:\n\n result = super(base.IronicObject, self).as_dict()\n return dict((k, v)\n             for k, v in result.items()\n             if k!= 'tags')", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_548631ba", "line": 134, "in_reply_to": "fa31d9ce_90fefc03", "updated": "2017-02-10 02:48:39.000000000", "message": "seems better, thanks for the suggestion. but it should be 'Node' intead of 'base.IronicObject'", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, "change_message_id": "6d0e269630c12326844f4035f08882d19b112134", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_d040740a", "line": 141, "updated": "2017-02-09 21:39:35.000000000", "message": "This makes sense to NOT call the base class though.", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "28d3e90dce4f3bc601fa138ef2b4d417515babf5", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_f0e1f8ff", "line": 141, "range": {"start_line": 141, "start_character": 24, "end_line": 141, "end_character": 31}, "updated": "2017-02-09 21:36:31.000000000", "message": "why is context needed here?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_7481758f", "line": 141, "range": {"start_line": 141, "start_character": 24, "end_line": 141, "end_character": 31}, "in_reply_to": "fa31d9ce_f0e1f8ff", "updated": "2017-02-10 02:48:39.000000000", "message": "as the oslo versionobject obj_make_list below needs the context.", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_b003000d", "line": 145, "updated": "2017-02-09 21:34:46.000000000", "message": "do we have to do obj_reset_changes on each tag in node.tags, as well?\n\nedit: never mind, oslo.versionedobjects will do that for us https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/base.py#L1121", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_ad1c8978", "line": 280, "range": {"start_line": 280, "start_character": 60, "end_line": 280, "end_character": 63}, "updated": "2017-02-09 21:34:46.000000000", "message": "nit: this would be more readable if it was called db_obj", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_4765a1df", "line": 280, "range": {"start_line": 280, "start_character": 60, "end_line": 280, "end_character": 63}, "in_reply_to": "fa31d9ce_ad1c8978", "updated": "2017-02-10 02:48:39.000000000", "message": "Done", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_d06dd4cd", "line": 435, "updated": "2017-02-09 21:34:46.000000000", "message": "Don't we need a get_by_tags method?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_67b9c52e", "line": 435, "in_reply_to": "fa31d9ce_d06dd4cd", "updated": "2017-02-10 02:48:39.000000000", "message": "in fact, we have many ways to query instance by tags, you can read the API patch. but for get_by_tags, I think we can add later if it needed.", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5a232d69fbef4091e9d1ef96f1f9ff105c9fa68d", "unresolved": false, "patch_set": 53, "id": "da36d5c6_e38137c4", "line": 139, "range": {"start_line": 135, "start_character": 0, "end_line": 139, "end_character": 35}, "updated": "2017-02-27 12:08:31.000000000", "message": "This is not being unittested.\n\nAlso, it's more efficient to just pop() the 'tags' key instead of looping through all the items in order to remove one item, e.g:\n\n result = super(Node, self).as_dict()\n result.pop('tags', None)\n return result", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5c5ab8007432f636190bfe79a70725d236bcbc7f", "unresolved": false, "patch_set": 53, "id": "9a30ddce_1c95c13f", "line": 139, "range": {"start_line": 135, "start_character": 0, "end_line": 139, "end_character": 35}, "in_reply_to": "da36d5c6_e38137c4", "updated": "2017-03-07 01:53:58.000000000", "message": "Done", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5a232d69fbef4091e9d1ef96f1f9ff105c9fa68d", "unresolved": false, "patch_set": 53, "id": "da36d5c6_7ee15e29", "line": 142, "range": {"start_line": 142, "start_character": 4, "end_line": 142, "end_character": 48}, "updated": "2017-02-27 12:08:31.000000000", "message": "Most a nit, but I don't really like the idea of having the same name of the method in the base class but overwriting it with more parameters. Kinda changes the method definition here.\n\nPerhaps, this would be more appropriated:\n\ndef _from_db_object_with_tags(...) \n\n?", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "2d8caec53dbdf3ef5a5c59e4018245cd4e5befe8", "unresolved": false, "patch_set": 53, "id": "9a30ddce_f3d01bcc", "line": 142, "range": {"start_line": 142, "start_character": 4, "end_line": 142, "end_character": 48}, "in_reply_to": "9a30ddce_bc991522", "updated": "2017-03-07 02:49:22.000000000", "message": "seems we want to include tags always, and there are some tools in ovo call _from_db_object directly, so maybe should keep the name.", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5c5ab8007432f636190bfe79a70725d236bcbc7f", "unresolved": false, "patch_set": 53, "id": "9a30ddce_bc991522", "line": 142, "range": {"start_line": 142, "start_character": 4, "end_line": 142, "end_character": 48}, "in_reply_to": "da36d5c6_7ee15e29", "updated": "2017-03-07 01:53:58.000000000", "message": "yes, seems better, will update soon, thanks!", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_053705b1", "line": 135, "updated": "2017-03-07 18:42:14.000000000", "message": "i don't think we're ever going to allow creation of nodes with tags (or are we?), so maybe s/ now,//", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "8b467dca7078b8a1be1365df0b7dcba90a0ce263", "unresolved": false, "patch_set": 54, "id": "9a30ddce_f4f53383", "line": 135, "in_reply_to": "9a30ddce_053705b1", "updated": "2017-03-07 21:37:25.000000000", "message": "a nit, but +1 if this is true", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_d717a342", "line": 135, "in_reply_to": "9a30ddce_ddabbdd4", "updated": "2017-03-23 12:20:10.000000000", "message": "I've removed this completely. as_dict can be called in multiple places, not only after we create the node and show it in api.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_ddabbdd4", "line": 135, "in_reply_to": "9a30ddce_f4f53383", "updated": "2017-03-09 01:59:48.000000000", "message": "but seems create node with tags is a reasonable use case, but anyhow we don't support it with this patch, so I agree with removing \"now\".", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_3be8a110", "line": 147, "updated": "2017-03-07 18:42:14.000000000", "message": "I feel like it might be better to have some sort of helper method in tags.py, maybe in NodeTagList that will return the list. That's what node.tags is, right? a tags.NodeTagList?", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "8b467dca7078b8a1be1365df0b7dcba90a0ce263", "unresolved": false, "patch_set": 54, "id": "9a30ddce_f4237303", "line": 147, "in_reply_to": "9a30ddce_3be8a110", "updated": "2017-03-07 21:37:25.000000000", "message": "I wonder how we do this for other top-level lists in the DB....\n\n+1 to helper iff this block of code is used more than once, otherwise it's small enough to keep here, I think", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_72751d62", "line": 147, "in_reply_to": "9a30ddce_9d806548", "updated": "2017-03-23 12:20:10.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_9d806548", "line": 147, "in_reply_to": "9a30ddce_f4237303", "updated": "2017-03-09 01:59:48.000000000", "message": "Thanks for the suggestion, will try to find a better way.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_f61aa56d", "line": 256, "updated": "2017-03-07 18:42:14.000000000", "message": "Sigh. I think this is confusing. By 'this', this line vs L281 & L302.\n\nOK, I think I see what the problem is. base.IronicObject._from_db_object() should have context as its first argument, because some code in OVO expects it, even though that isn't documented very well. Zhenguo mentions it in a comment in the tags.py file: https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/base.py#L1117.\n\nI don't want to hold back this patch because of that, but we should fix it in base.py. To track this work: https://bugs.launchpad.net/ironic/+bug/1670778", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_f28aed19", "line": 256, "in_reply_to": "9a30ddce_5dd42d46", "updated": "2017-03-23 12:20:10.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "8b467dca7078b8a1be1365df0b7dcba90a0ce263", "unresolved": false, "patch_set": 54, "id": "9a30ddce_d46d8f33", "line": 256, "in_reply_to": "9a30ddce_f61aa56d", "updated": "2017-03-07 21:37:25.000000000", "message": "Agreed, this is really confusing", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_5dd42d46", "line": 256, "in_reply_to": "9a30ddce_f61aa56d", "updated": "2017-03-09 01:59:48.000000000", "message": "ok, thanks Ruby, will assign it to me if there's no one like to take it.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_bb5bb653", "line": 302, "updated": "2017-03-07 18:42:14.000000000", "message": "this isn't consistent with other calls to ._from_db_object. Sigh.\n\nIn this file, you only want to use Node._from_db_object() (because it is different from base.IronicObject._from_db_object()) so (sorry, I think I asked you change it), maybe we should be explicit and make all the calls to Node._from_db_object() until we fix base.Ironic_object._from_db_object() to be consistent.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_3281e5fb", "line": 302, "in_reply_to": "9a30ddce_bb5bb653", "updated": "2017-03-23 12:20:10.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_760eb535", "line": 450, "updated": "2017-03-07 18:42:14.000000000", "message": "@Yuriy. Are the notification payloads going to include the tags info? If so, I think we should put a TODO comment here (or someone note it down somewhere; otherwise i think we may forget).", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "c8392df6e3eab4e5599584ded7360e5dd04c5dea", "unresolved": false, "patch_set": 54, "id": "9a30ddce_6c6ea102", "line": 450, "in_reply_to": "9a30ddce_1d52b5dd", "updated": "2017-03-09 06:36:47.000000000", "message": "I think we should not change the notifications until we expose it in the API.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_727fdd14", "line": 450, "in_reply_to": "9a30ddce_515404fe", "updated": "2017-03-23 12:20:10.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, "change_message_id": "1a915713f6b3d81d0628fc5207d2de5e3bd0f2a9", "unresolved": false, "patch_set": 54, "id": "9a30ddce_a8f40ef2", "line": 450, "in_reply_to": "9a30ddce_5460bf35", "updated": "2017-03-08 23:06:30.000000000", "message": "Are we certain we're OK wth this landing without notification support in the same patch? Seems like a bad precedent to set...", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a866f0f23f7303b16dba0440d99f8ce7f957a546", "unresolved": false, "patch_set": 54, "id": "9a30ddce_515404fe", "line": 450, "in_reply_to": "9a30ddce_6c6ea102", "updated": "2017-03-09 14:18:54.000000000", "message": "I agree with vdrok. It makes no sense to emit notifications with tags at this point, because there's no way yet, to have any tags specified. It is only when the API part lands, that it makes sense to add tags.\n\nI'm OK with a TODO, or a bug, or a patch in this series, or something that indicates that this needs to be done. (We don't have a formal process for this.)", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "8b467dca7078b8a1be1365df0b7dcba90a0ce263", "unresolved": false, "patch_set": 54, "id": "9a30ddce_5460bf35", "line": 450, "in_reply_to": "9a30ddce_760eb535", "updated": "2017-03-07 21:37:25.000000000", "message": "+1, please modify notifications in this patch or add a TODO for someone else to look at it", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_1d52b5dd", "line": 450, "in_reply_to": "9a30ddce_760eb535", "updated": "2017-03-09 01:59:48.000000000", "message": "OK, will figure out how to add tags info here.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "bd8c77d53c628ac3606aa3aabffee308c12b3a65", "unresolved": false, "patch_set": 61, "id": "7f231b9d_f43e6a89", "line": 138, "updated": "2017-06-14 22:06:32.000000000", "message": "We need the object to know that self.tags was changed, so I think this should be self.tags = None", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "2abf4a1b448eeff50e10ceb3a07c4d37fa8d2dcf", "unresolved": false, "patch_set": 61, "id": "7f231b9d_99bd1bda", "line": 138, "in_reply_to": "7f231b9d_4078a98e", "updated": "2017-06-15 13:35:13.000000000", "message": "_convert_to_version() is used in serialization/deserialization as well as in saving to the DB. For saving to the DB, we definitely need the object's changed fields to be accurate, otherwise it won't get saved in the DB. Eg, let's say node had been saved in DB in version 1.22, and now some pinned conductor is saving it in version 1.21, I don't think delattr() will cause the node object to know that node.tags was changed and it won't get set to None in the DB. In this case (wrt node.tags) it may not matter, but it does matter in other cases, so it would be good to be consistent. I think for serialization/deserialization, it is fine for self.tags=None but I will make a point of confirming.", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "35c6b3855aefc377a3a8aefe5417328f85154909", "unresolved": false, "patch_set": 61, "id": "7f231b9d_df27ccc9", "line": 138, "in_reply_to": "7f231b9d_99bd1bda", "updated": "2017-06-16 16:26:43.000000000", "message": "Had a look at the deserialization in the ovo, it seems like we don't actually need to do anything  with tags at all, as an object of older version will only be considering fields it knows about during deserialization (might be wrong though). But setting to None at least will save some bytes from being sent over the wire :)", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "db024af6a9b3977af5c8a209b775be89eb662c9d", "unresolved": false, "patch_set": 61, "id": "7f231b9d_4078a98e", "line": 138, "in_reply_to": "7f231b9d_f43e6a89", "updated": "2017-06-15 11:59:49.000000000", "message": "Hrm, I'm not sure about this one, during serialization, iiuc obj_attr_is_set is used to determine if we send a field or not, and if we do self.tags=None, it will be set?", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "bd8c77d53c628ac3606aa3aabffee308c12b3a65", "unresolved": false, "patch_set": 61, "id": "7f231b9d_f2667dc1", "line": 141, "updated": "2017-06-14 22:06:32.000000000", "message": "Oh, ugh, I didn't think of this wrt rolling upgrades and handling different versions of objects. base.py's IronicObject._from_db_object() has logic for dealing with conversion of object versions. Doing this means the conversion between object versions is lost. Let me think about this...\n\nOk, I think I need to change IronicObject._from_db_object() so that it calls a helper function, eg IronicObject._set_from_db_object(context, db_object). This function would be renamed to that helper function and would only include L143-148. And/or include up to L150.\n\nNot sure if the helper should be a static method or not. I will try to catch you on IRC to discuss, need to think about the ordering. Probably the right thing to do is change base.py first.", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "2abf4a1b448eeff50e10ceb3a07c4d37fa8d2dcf", "unresolved": false, "patch_set": 61, "id": "7f231b9d_d99b9370", "line": 141, "in_reply_to": "7f231b9d_10232058", "updated": "2017-06-15 13:35:13.000000000", "message": "ok, you mean object fields, right, not the DB fields. I'm not sure I see a usecase for it but if you ask there must be one :-)", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "db024af6a9b3977af5c8a209b775be89eb662c9d", "unresolved": false, "patch_set": 61, "id": "7f231b9d_10232058", "line": 141, "in_reply_to": "7f231b9d_f2667dc1", "updated": "2017-06-15 11:59:49.000000000", "message": "I'd also allow for that base _set_from_db_object method to have an arg being a list of fields to set. Others can be added by children methods.", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "bd8c77d53c628ac3606aa3aabffee308c12b3a65", "unresolved": false, "patch_set": 61, "id": "7f231b9d_d46feef9", "line": 146, "updated": "2017-06-14 22:06:32.000000000", "message": "Sigh, it has been awhile since I looked at the tags code, I need to refresh my memory. What is the value of db_node['tags']? If there are no tags, is this .from_db_tags_list() call pretty fast?", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "2abf4a1b448eeff50e10ceb3a07c4d37fa8d2dcf", "unresolved": false, "patch_set": 61, "id": "7f231b9d_99de3b0f", "line": 146, "in_reply_to": "7f231b9d_b067ccb7", "updated": "2017-06-15 13:35:13.000000000", "message": "Thx. This is the first time we have an object consist of other objects I think... we normally use IDs to refer to other objects. Well, I guess node-tags are different, they don't exist as such outside of the node.", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "db024af6a9b3977af5c8a209b775be89eb662c9d", "unresolved": false, "patch_set": 61, "id": "7f231b9d_b067ccb7", "line": 146, "in_reply_to": "7f231b9d_d46feef9", "updated": "2017-06-15 11:59:49.000000000", "message": "It's a list of NodeTag db model objects, basically received by calling get_node_tags_by_node_id dbapi method.", "commit_id": "a53a0d6f45f5b1052c6295aded1c5a4f086995ff"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "a587824ddd85ffef359b1f8358572fb56c7cbbef", "unresolved": false, "patch_set": 64, "id": "5f201791_a394b9e9", "line": 138, "updated": "2017-06-20 21:23:41.000000000", "message": "So it does not seem to work, neither list nor None. As during deserialization coerce is called that enforces the type, and then obj_from_primitive is called, which requires a proper object inside.", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "1b79cfc2d7caf55a76314c2abb28dc20c8804a02", "unresolved": false, "patch_set": 64, "id": "3f1d235d_89fdbb6f", "line": 138, "in_reply_to": "3f1d235d_c9d3b35f", "updated": "2017-07-05 18:15:31.000000000", "message": "By the way I've finally setup an environment to test this, with tags and your change, so can check things if you want something checked :)", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "b3a6078d90f7f6fbbf264fce36808d7c9b16ab5f", "unresolved": false, "patch_set": 64, "id": "1f1a1f67_1a7aa723", "line": 138, "in_reply_to": "3f1d235d_c9d3b35f", "updated": "2017-07-12 18:36:13.000000000", "message": "Good question.\n\nThis method is used when serializing/deserializing, as well as when saving the object to the DB.\n\nWhen serializing/deserializing, we want to remove the tags with delattr.\n\nWhen saving the object to the DB, IF we remove the tags with delattr, I believe the node object will not know that node.tags was modified, and so node.tags will not be saved/replaced in the DB. There is a 'corner' case, when all services are running the new version, but ironic-api are pinned-to-old; some ironic-conductor C1 pinned-to-old and some conductor C2 not pinned (in the process of unpinning all conductors...) IF C2 saves node.tags='foo' (for example), then a new API request causes C1 to save node (without tags cuz it is pinned), if we don't set self.tags = None, the DB will have node.tags='foo' instead of None. In your/this particular case I don't think it matters. However, in the general 'some-object-has-changes-between-versions', this could be a problem and result in an inconsistent object (e.g., if we are replacing node.foo with new node.bar).\n\nDoes that make sense to you? Maybe I need to add more documentation/comments somewhere, maybe more docstring for _convert_to_version().", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "6620a4a6afe290cbf56069f10ffb99b41944a8e0", "unresolved": false, "patch_set": 64, "id": "5f201791_436964bc", "line": 138, "in_reply_to": "5f201791_232429c6", "updated": "2017-06-20 21:34:54.000000000", "message": "sure, thanks for that. I plan to do some proper testing tomorrow too.", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cdebae87ab2e05a857250542b8525f88fda0c6b8", "unresolved": false, "patch_set": 64, "id": "5f201791_e7414a3b", "line": 138, "in_reply_to": "5f201791_436964bc", "updated": "2017-06-23 05:08:42.000000000", "message": "I didn't get a chance yet to test the nodes-tags stuff wrt rolling upgrades. I am working on some changes though, which will affect this method, see [1]. I'm adding another parameter (might change its name); used to either change the value of object fields or to delete the fields.\n\nMy changes may not address your particular issue, so there may be more changes in the works...\n\n[1] https://review.openstack.org/#/c/476779/. I", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "40192be0fee24c6f044189d63dd351b558550818", "unresolved": false, "patch_set": 64, "id": "3f1d235d_c9d3b35f", "line": 138, "in_reply_to": "5f201791_4c1d5a72", "updated": "2017-07-05 18:05:54.000000000", "message": "I'm not sure how I feel about this change. Maybe I'm missing something, but when we have the tags set and target version is < 1.22, don't we know that we're doing the downgrade? which means that we're talking to the older service, and because of this, we need to remove the tags with delattr?", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "acf2682d7b86cbd3103c06d5e00e4ec4d75c6c2c", "unresolved": false, "patch_set": 64, "id": "5f201791_232429c6", "line": 138, "in_reply_to": "5f201791_a394b9e9", "updated": "2017-06-20 21:28:53.000000000", "message": "Hmm, but tags is nullable, so that seems odd. I can (I hope) take a look tomorrow.", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "fda6e1cf5517324bd0e1d89e3c1e11e62c155471", "unresolved": false, "patch_set": 64, "id": "5f201791_4c1d5a72", "line": 138, "in_reply_to": "5f201791_e7414a3b", "updated": "2017-06-27 15:36:27.000000000", "message": "Ok, I rebased this patch on top of https://review.openstack.org/#/c/476779/ and changed this method and it passes the unit tests (you'll have to update a test):\n\ndiff --git a/ironic/objects/node.py b/ironic/objects/node.py\nindex 4087ea2..9e62a46 100644\n--- a/ironic/objects/node.py\n+++ b/ironic/objects/node.py\n@@ -131,11 +131,14 @@ class Node(base.IronicObject, object_base.VersionedObjectDictCompat):\n         'tags': object_fields.ObjectField('NodeTagList', nullable=True),\n     }\n \n-    def _convert_to_version(self, target_version):\n+    def _convert_to_version(self, target_version, change_fields=True):\n         target_version = versionutils.convert_version_to_tuple(target_version)\n         if target_version < (1, 22):\n             if self.obj_attr_is_set('tags'):\n-                self.tags = []\n+                if change_fields:\n+                    self.tags = None\n+                else:\n+                    delattr(self, 'tags')", "commit_id": "32ebb275ec0fc1c974ce2dcaa919cadc5f71e5a0"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_69a3e49f", "line": 60, "updated": "2017-07-14 02:07:48.000000000", "message": "and _convert_to_version()", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_42a590b4", "line": 60, "in_reply_to": "1f1a1f67_69a3e49f", "updated": "2017-07-14 13:23:38.000000000", "message": "Done", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_7ab5e8cc", "line": 141, "updated": "2017-07-14 02:07:48.000000000", "message": "I tested this, and I see that when deserializing from a node in v1.21 to v1.22, tags is unset. [Eg api with old release, conductor with new release+pinned.] All the other node fields are set, and I think this should be set too. (Or do we not always do this; seems like if we don't, we'd have a lot of places in conductor code where we have to check if the attr is set, before actually accessing it.) Maybe add something like \n\nif target_version < (1, 22):\n   ...\nelif not self.obj_attr_is_set('tags'):\n    self.tags  = None\n\nAlthough I tried that and well, it requires some changes at the db/sqlalchemy layer too.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_7f46e351", "line": 141, "in_reply_to": "1f1a1f67_7ab5e8cc", "updated": "2017-07-14 13:23:38.000000000", "message": "This upsets all the update node calls to the api. if the api is pinned, after applying the json patch, tags are present. then pinned api sets self.tags to None and sends them to the conductor. conductor then passes the values, including tags all the way down to the sqlalchemy.api._do_update_node, which complains about tags being None instead of list.\n\nThe more I look at it, the more I think we're trying to solve the non-existing problem here :) In the api, tags are set using the NodeTag objects, node's /tags path is blocked from updating from the api. If we need to update the tags in code, we can do the same thing, if we have node with tags, instead of doing node.save to save the updated tags, one can just do node.tags.create(). And in fact, this is what happens in nova with instance tags - it is also a TagList object there, and this is what happens during instance.save call -- https://github.com/openstack/nova/blob/d955eb1db753f191acb02eb9758080329da5b866/nova/objects/instance.py#L620", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a88ac43ccef3d546f15ef854ce63825b5cc0f127", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_2cb34c9a", "line": 141, "in_reply_to": "1f1a1f67_7f46e351", "updated": "2017-07-18 14:33:35.000000000", "message": "What you say is true for these tags, for the way it is being used/coded. What will break is some possible future case that may never happen.\n\nMy preference is to generalize this to \n\n1. deal with any future changes that don't make the assumptions you describe and \n\n2. as a 'model' for other features that need to add a _convert_to_version() method. Perhaps there is no way to come up with a generalized/template of _convert_to_version() right now, and it will evolve (or maybe just be different) depending on the feature/use case.\n\nSo if we decide not to do the above, we should make sure we add lots of comments about it.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_895f6071", "line": 147, "updated": "2017-07-14 02:07:48.000000000", "message": "I commented elsewhere about this, but will mention it again :-)\n\ndb_node['tags'] is misleading to me. It made me think that the nodes DB table had a 'tags' column. Which it doesn't. I think the code would be cleaner if we just set self.tags = tags.NodeTagList() or None. Or why doesn't it call tags.NodeTagList.get_from_node_id()?\n\nTo be honest, I haven't gotten through all the code to understand where node.tags actually gets set. I was going to try to test it out but ran out of time. So it is quite possible that I don't understand how all this code works.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_0a1d740e", "line": 147, "in_reply_to": "1f1a1f67_895f6071", "updated": "2017-07-14 13:23:38.000000000", "message": "We do the join on the db level, hence db_node contains tags already. We could do the get_from_node_id but it would mean one more DB call which is unnecessary.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "39d604312cd2814942154eab571d8b00d11a4416", "unresolved": false, "patch_set": 66, "id": "1f1a1f67_276b67b7", "line": 139, "updated": "2017-07-18 14:30:58.000000000", "message": "I think we ought to also add a comment, maybe after L134: \n\nThis assumes that the conductor doesn't access node.tags without checking that it is set, because not keeping the tags changes (or setting its value if unset) means that it may be unset (a different behaviour from the other fields).", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "00d31f6a5fed8033f89fef1de5e4005d451ec47a", "unresolved": false, "patch_set": 66, "id": "ff346bd7_456773b8", "line": 139, "in_reply_to": "1f1a1f67_276b67b7", "updated": "2017-07-28 15:53:45.000000000", "message": "Done", "commit_id": "35ddc67bdc6d28692a26ece6d5b555ea8b27cf49"}], "ironic/objects/tags.py": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_b020faf8", "line": 21, "updated": "2015-11-09 07:21:54.000000000", "message": "From the chain of your patches, this should be NodeTag instead of a general tag object, right?", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4c263db367a4244e594db587011ec8ffed5943c2", "unresolved": false, "patch_set": 5, "id": "da85f559_41ca1ea3", "line": 21, "in_reply_to": "da85f559_b020faf8", "updated": "2015-11-09 08:41:55.000000000", "message": "yeah, you are right.", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_1093065d", "line": 37, "updated": "2015-11-09 07:21:54.000000000", "message": "1. rename tag to db_tag maybe better\n 2. I didn't see where you call this func.\n 3. are you sure this will work as you expect, you have change  _from_db_object() in Node object", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_70ee128d", "line": 42, "updated": "2015-11-09 07:21:54.000000000", "message": "ditto", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_93d5c044", "line": 50, "updated": "2015-11-09 07:21:54.000000000", "message": "what about get_by_node_id?", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_0bb5d52f", "line": 37, "updated": "2015-11-16 07:01:29.000000000", "message": "Add doc please, like raises exception", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_eb55f1c5", "line": 39, "updated": "2015-11-16 07:01:29.000000000", "message": "I am wondering if you don't return the tag, why do we have to convert it to a formal object. This is useless.....", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "8405446402399173fb02a1933d9e4582d90ec6f5", "unresolved": false, "patch_set": 6, "id": "ba8a016a_48463850", "line": 39, "in_reply_to": "da85f559_eb55f1c5", "updated": "2015-11-19 02:16:01.000000000", "message": "yes, thanks Tan, I meant to return the tag here.", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_4b92fda0", "line": 42, "updated": "2015-11-16 07:01:29.000000000", "message": "ditto", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_6bf3410b", "line": 55, "updated": "2015-11-16 07:01:29.000000000", "message": "ditto", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_2bde996d", "line": 61, "updated": "2015-11-16 07:01:29.000000000", "message": "ditto", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "d6510b0d116ec8dd592f3004069b2f6b8cd94861", "unresolved": false, "patch_set": 6, "id": "da85f559_ebe7313e", "line": 67, "updated": "2015-11-16 07:01:29.000000000", "message": "ditto", "commit_id": "19a199380c05a61f52f273ad2b03495aaffaa59e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "a0be52979beef0b9fb08aba700b66716f4843393", "unresolved": false, "patch_set": 10, "id": "9a8ffd7b_ebcfa826", "line": 45, "updated": "2015-11-30 05:54:29.000000000", "message": "add returns parameter please, since you will return the tag", "commit_id": "5861c0fd06a7530852ce23116e4f523cb22b7ac2"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "dfd713189a40295764d11b936487f6ffdf66da5d", "unresolved": false, "patch_set": 14, "id": "9a8ffd7b_ec56fd5a", "line": 79, "updated": "2015-12-03 13:59:46.000000000", "message": "Any specific reason to not create a class attribute dbapi like NodeTag? At least they should be same.", "commit_id": "50373eedf57799730a52c1709ae486b3335dd58b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "3e247ed30d82a90c00ed198060630970c3ec8b83", "unresolved": false, "patch_set": 14, "id": "7a740942_1836ea03", "line": 79, "in_reply_to": "9a8ffd7b_ec56fd5a", "updated": "2015-12-03 17:00:49.000000000", "message": "I tried to, but there's some problems when NodeTagList class inheris from ObjectListBase, I didn't figure out why, so not use dbapi as class attribute.", "commit_id": "50373eedf57799730a52c1709ae486b3335dd58b"}, {"author": {"_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, "change_message_id": "7d08d2f526611c4a6334bba9457ff722786afc20", "unresolved": false, "patch_set": 18, "id": "9a68dd71_7d5f71e5", "line": 86, "range": {"start_line": 86, "start_character": 40, "end_line": 86, "end_character": 41}, "updated": "2016-01-22 05:23:32.000000000", "message": "nit: missing \":param tags: xxx\" here.", "commit_id": "a8b4d802f34488ee021f869b324c866fac72c0de"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_642ffbf6", "line": 60, "updated": "2016-01-28 16:21:43.000000000", "message": "Missing other params and returns here.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e6f1ad3d50610cb382402134a32127b151d40bc6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_dab54331", "line": 60, "in_reply_to": "7a5de9d1_642ffbf6", "updated": "2016-01-29 07:36:06.000000000", "message": "will add the other params but there's no returns.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_c497cf8e", "line": 79, "updated": "2016-01-28 16:21:43.000000000", "message": "Not sure why can't you add dbapi as a class attribute, seems it should work.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e6f1ad3d50610cb382402134a32127b151d40bc6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_1a867bb9", "line": 79, "in_reply_to": "7a5de9d1_c497cf8e", "updated": "2016-01-29 07:36:06.000000000", "message": "Done", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_a4a9737d", "line": 83, "updated": "2016-01-28 16:21:43.000000000", "message": "Would be good to come up with a different name as set is a reserved word.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e6f1ad3d50610cb382402134a32127b151d40bc6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_9ac02be2", "line": 83, "in_reply_to": "7a5de9d1_a4a9737d", "updated": "2016-01-29 07:36:06.000000000", "message": "Done", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "0eb4a21c1125c245e85dc77bc42ac2ac60f44cac", "unresolved": false, "patch_set": 45, "id": "1a6eadb0_9de195d3", "line": 25, "range": {"start_line": 25, "start_character": 9, "end_line": 25, "end_character": 12}, "updated": "2016-12-19 18:01:35.000000000", "message": "Hm, I'd prefer something like value here, as node.tags[0].tag reads strange. Not a big deal tho.", "commit_id": "914ed07d4f14fbe9f28a1a3478f80270b83fbc2a"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "84879f20ce3c4d4c4dc78474361f073c97fdd317", "unresolved": false, "patch_set": 46, "id": "7a3c09a3_feecf1f4", "line": 25, "range": {"start_line": 25, "start_character": 9, "end_line": 25, "end_character": 12}, "updated": "2017-01-16 18:55:11.000000000", "message": "I would still like to have it as 'value', or something like that. So that we could do smth like:\n\n for tag in node.tags:\n   tag_value = tag.value\n   ...\n\ninstead of:\n\n for tag in node.tags:\n   tag_value = tag.tag\n   ...", "commit_id": "55593008c270346a5a3bd9ad757e459f8e25c676"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "6642b0598a86749d6f7ea5873cb2071bfff44ec6", "unresolved": false, "patch_set": 46, "id": "7a3c09a3_6a3e6c8d", "line": 25, "range": {"start_line": 25, "start_character": 9, "end_line": 25, "end_character": 12}, "in_reply_to": "7a3c09a3_cf74d269", "updated": "2017-01-17 02:46:50.000000000", "message": "hi vdrok, after browsing other projects code, seems they all use a tag instead of value, maybe better to leave this as is to keep consistent, wdyt?\n\nhttps://github.com/openstack/nova/blob/master/nova/objects/tag.py#L29", "commit_id": "55593008c270346a5a3bd9ad757e459f8e25c676"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "068a688f9eed9c6f748e6335a6d397f964d2dce1", "unresolved": false, "patch_set": 46, "id": "7a3c09a3_cf74d269", "line": 25, "range": {"start_line": 25, "start_character": 9, "end_line": 25, "end_character": 12}, "in_reply_to": "7a3c09a3_feecf1f4", "updated": "2017-01-17 02:12:43.000000000", "message": "ok, will update soon, thanks!", "commit_id": "55593008c270346a5a3bd9ad757e459f8e25c676"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_8154f8c9", "line": 21, "updated": "2017-01-24 15:26:34.000000000", "message": "Please add an explicit VERSION here. It will inherit 1.0, but to be consistent with the other objects (and so we don't forget to update it if this object changes) it is better to be explicit. E.g.\n\n    # Version 1.0: Initial version\n    VERSION = '1.0'", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_3013700f", "line": 21, "in_reply_to": "5a3905b3_8154f8c9", "updated": "2017-01-25 03:43:17.000000000", "message": "Done", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_01aac884", "line": 35, "updated": "2017-01-24 15:26:34.000000000", "message": "this method isn't needed; it can use the one from base.py", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_b0eda0f1", "line": 35, "in_reply_to": "5a3905b3_01aac884", "updated": "2017-01-25 03:43:17.000000000", "message": "we need to pass context as the first parameter, as oslo_versionedobjects.obj_make_list will call _from_db_object with context, unfortunately we don't have that parameter in base.py\n\n  https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/base.py#L1117", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_9c5c5f1a", "line": 52, "updated": "2017-01-24 15:26:34.000000000", "message": "I am concerned about making this a class method. This makes it inconsistent from the other objects we have. And if we ever enable RPC on the other object destroy's, it won't be available for this. I suspect we don't need that functionality but I think this deserves a comment to explain why this is a class method.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_1082f4c8", "line": 52, "in_reply_to": "5a3905b3_5393c55a", "updated": "2017-01-25 03:43:17.000000000", "message": "seems yes, will change this to instance method.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "4695993a9305ee85606a6f127c4059d02e8f0514", "unresolved": false, "patch_set": 50, "id": "5a3905b3_5393c55a", "line": 52, "in_reply_to": "5a3905b3_9c5c5f1a", "updated": "2017-01-24 15:49:14.000000000", "message": "Yeah, I don't like these methods myself. Some are classmethods, some instance methods... OVO base class does not define all these create/destroy methods, we don't have them in IronicBase, so I guess it's up to every particular object to decide what's needed here. And I don't know if insance method is better than class method in this case :)", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_3c99abc4", "line": 62, "updated": "2017-01-24 15:26:34.000000000", "message": "this is a string, right? Not even a 'node tag'. It is just a tag that we associated with the node.", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_302450ae", "line": 62, "in_reply_to": "5a3905b3_3c99abc4", "updated": "2017-01-25 03:43:17.000000000", "message": "yes, it's actually a string", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "04704727566b0842d5b8fea6c3f6d2505f75eb4d", "unresolved": false, "patch_set": 50, "id": "5a3905b3_fc3f2384", "line": 68, "updated": "2017-01-24 15:26:34.000000000", "message": "ditto about VERSION", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7712c9e38ef69ba08a03307e7ef7211ef7ba2bb8", "unresolved": false, "patch_set": 50, "id": "5a3905b3_f02f283c", "line": 68, "in_reply_to": "5a3905b3_fc3f2384", "updated": "2017-01-25 03:43:17.000000000", "message": "Done", "commit_id": "d9c3c19b308b0f4e53737f7d5a7e6d2abf28e26b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_10af6ce4", "line": 33, "updated": "2017-02-09 21:34:46.000000000", "message": "This is doing the exact same thing as base.IronicObject, so it's unnecessary: https://github.com/openstack/ironic/blob/master/ironic/objects/base.py#L78\n\nRight?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, "change_message_id": "6d0e269630c12326844f4035f08882d19b112134", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_90d27c33", "line": 33, "updated": "2017-02-09 21:39:35.000000000", "message": "Why aren't we using the base class method? Via using super()\n\nIs it required to have 'context' in this signature?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "cd8f942b7060588b68ecc002c09fac2bb9166d2d", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_50c80475", "line": 33, "in_reply_to": "fa31d9ce_10af6ce4", "updated": "2017-02-09 21:41:59.000000000", "message": "The only difference is in parameters, but additional 'context' param seems unused", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_c78c3138", "line": 33, "in_reply_to": "fa31d9ce_50c80475", "updated": "2017-02-10 02:48:39.000000000", "message": "This is also because obj_make_list in also versionobject :(", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, "change_message_id": "6d0e269630c12326844f4035f08882d19b112134", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_f0865812", "line": 52, "updated": "2017-02-09 21:39:35.000000000", "message": "Don't need to use context here. If use base class _from_db_object()", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_b03b009c", "line": 52, "range": {"start_line": 52, "start_character": 36, "end_line": 52, "end_character": 43}, "updated": "2017-02-09 21:34:46.000000000", "message": "Not sure why the context is being passed here.", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "b847272f14615d404c21032a1aaf220b3bf359bf", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_50e72440", "line": 54, "range": {"start_line": 54, "start_character": 22, "end_line": 54, "end_character": 29}, "updated": "2017-02-09 21:34:46.000000000", "message": "Why not context=None here?", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5333b4c10b0440ba9b68c8c0c98ec982329eacf6", "unresolved": false, "patch_set": 52, "id": "fa31d9ce_e7aa1585", "line": 54, "range": {"start_line": 54, "start_character": 22, "end_line": 54, "end_character": 29}, "in_reply_to": "fa31d9ce_50e72440", "updated": "2017-02-10 02:48:39.000000000", "message": "Done", "commit_id": "7ba6aa6fb6edfb14e827ba1e9203f204a020c81b"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5a232d69fbef4091e9d1ef96f1f9ff105c9fa68d", "unresolved": false, "patch_set": 53, "id": "da36d5c6_1e75c262", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "updated": "2017-02-27 12:08:31.000000000", "message": "We don't need to overwrite it, the context parameter here is not being used", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5c5ab8007432f636190bfe79a70725d236bcbc7f", "unresolved": false, "patch_set": 53, "id": "9a30ddce_d09f8db2", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "in_reply_to": "da36d5c6_1e75c262", "updated": "2017-03-07 01:53:58.000000000", "message": "This is because ovo obj_make_list need to call item_cls._from_db_object with context :(\n  https://github.com/openstack/oslo.versionedobjects/blob/master/oslo_versionedobjects/base.py#L1117", "commit_id": "e9a7cef318169b5be9b0707d2695d5845a846eca"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "682007853067018c6241e93a8f5edf3daf65a4b7", "unresolved": false, "patch_set": 54, "id": "9a30ddce_065398e2", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "updated": "2017-03-07 13:49:23.000000000", "message": "Would be good to add a comment on why it's needed, as several people already asked about it.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_9830b358", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "in_reply_to": "9a30ddce_065398e2", "updated": "2017-03-07 18:42:14.000000000", "message": "++", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_9d5ce5ee", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "in_reply_to": "9a30ddce_065398e2", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "8b467dca7078b8a1be1365df0b7dcba90a0ce263", "unresolved": false, "patch_set": 54, "id": "9a30ddce_b45f3b71", "line": 33, "range": {"start_line": 33, "start_character": 24, "end_line": 33, "end_character": 31}, "in_reply_to": "9a30ddce_9830b358", "updated": "2017-03-07 21:37:25.000000000", "message": "+1", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_163739b1", "line": 60, "updated": "2017-03-07 18:42:14.000000000", "message": "hmm. this is inconsistent with the context being the last argument above.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_ddf57dcb", "line": 60, "in_reply_to": "9a30ddce_163739b1", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_165e59e9", "line": 63, "updated": "2017-03-07 18:42:14.000000000", "message": "nit s/id/ID/", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_fd0401c1", "line": 63, "in_reply_to": "9a30ddce_165e59e9", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_5658d1fa", "line": 64, "updated": "2017-03-07 18:42:14.000000000", "message": "nit. s/that associated/that is associated/", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_1d00f5a9", "line": 64, "in_reply_to": "9a30ddce_5658d1fa", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_1b3f5db5", "line": 82, "updated": "2017-03-07 18:42:14.000000000", "message": "maybe 'Get list of tags for node.' (It took me a few seconds to understand what 'its' was, the node, not the tags.)", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_5d30ad9e", "line": 82, "in_reply_to": "9a30ddce_1b3f5db5", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "682007853067018c6241e93a8f5edf3daf65a4b7", "unresolved": false, "patch_set": 54, "id": "9a30ddce_26ba5ce2", "line": 84, "updated": "2017-03-07 13:49:23.000000000", "message": "missing context in docstring here and in the next one.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_7d273164", "line": 84, "in_reply_to": "9a30ddce_26ba5ce2", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_3bf341a0", "line": 90, "updated": "2017-03-07 18:42:14.000000000", "message": "What is your reason for making this a class method? It is inconsistent with our other objects.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_3d905943", "line": 90, "in_reply_to": "9a30ddce_3bf341a0", "updated": "2017-03-09 01:59:48.000000000", "message": "not sure why this is not a class method in other objects, and will figure out the difference.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_3282c5c8", "line": 90, "in_reply_to": "9a30ddce_3d905943", "updated": "2017-03-23 12:20:10.000000000", "message": "I get confused by this too. My logic here is - if we don't need an actual object in this method, it should be a class method. So I'm all for switching to class methods wherever possible. The ovo base class does not set any expectations on whether it's going to be a class or instance method, so here we are free to choose the one we need I think.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_cb91b748", "line": 91, "updated": "2017-03-23 12:20:10.000000000", "message": "Here I think we can actually make node_id a field in NodeTagList, and remove it from these methods, and make them instance methods. It will work as we need to get the rpc node anyway in api, to get its ID, as dbapi only knows about node ID of tags. This will make the request to create node tags as follows:\n\n node = get_rpc_node(uuid or name)\n node.tags.create([\"a\", \"b\", \"c\"])\n\nOTOH, this will bring some complexity here, so if people think it's fine to do\n\n node = get_rpc_node(uuid or name)\n NodeTagList.create(node.id, [\"a\", \"b\", \"c\"])\n\nit looks not that bad too. Same applies for destroy, that can become just \"node.tags.destroy()\". Opinions welcome here, leaving as-is for now.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_7b2bf9eb", "line": 101, "updated": "2017-03-07 18:42:14.000000000", "message": "ditto about class method.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_db14e5f6", "line": 103, "updated": "2017-03-07 18:42:14.000000000", "message": "this is not consistent with your description for node_id in L106.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_bd21a94f", "line": 103, "in_reply_to": "9a30ddce_db14e5f6", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "19925efeaa2dcf6d8effe4349b23ac6c0b21db7d", "unresolved": false, "patch_set": 54, "id": "9a30ddce_7b05b9c0", "line": 106, "updated": "2017-03-07 18:42:14.000000000", "message": "s/id/ID/\n\ns/uuid/UUID/", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "914ba9e1fba98935b1b92373ac2cefd809a14403", "unresolved": false, "patch_set": 54, "id": "9a30ddce_fd1b2119", "line": 106, "in_reply_to": "9a30ddce_7b05b9c0", "updated": "2017-03-09 01:59:48.000000000", "message": "Done", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7dc4709a7b482c9ef0c9203c113ef178245966e6", "unresolved": false, "patch_set": 54, "id": "1a1ced50_3a7e176a", "line": 106, "in_reply_to": "9a30ddce_fd1b2119", "updated": "2017-03-23 12:20:10.000000000", "message": "good catch, it should be id.", "commit_id": "de5bba898aad30772e2055150a7f4c4f122609df"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2985b267f0956396289e8584dbea7e4c59f01d09", "unresolved": false, "patch_set": 55, "id": "1a1ced50_46b3fe97", "line": 71, "updated": "2017-03-23 12:35:02.000000000", "message": "The only thing that would be good to reuse from the base.IronicObject is OBJ_SERIAL_NAMESPACE/OBJ_PROJECT_NAMESPACE, but it should work as is, so not sure if it's worth it.", "commit_id": "f9bda8f0348868db80882e605dc3056f4d6b1e6c"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_f51c70c2", "line": 43, "updated": "2017-07-14 02:07:48.000000000", "message": "this is fine for now, but none of this code supports rolling upgrades. If we ever change the object (& version), we'll need to make sure we handle them properly wrt rolling upgrades.\n\nMaybe we should add a note about that.\n\nThe mechanism I am using for rolling upgrades assumes that when saving objects to the DB, they save the object's changed fields only. Which this doesn't do. Since this is a new object, it is fine for now, but if we ever change the object (& version), we'll need to make sure we handle them properly wrt rolling upgrades.\n\nMaybe we should add a note about that.\n\nI wonder if we need to put the mechanism in place *before* it gets changed though...", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d2d39fa7e5f284c2d180baaaa76cb57efb53d2dd", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_335d447a", "line": 43, "in_reply_to": "1f1a1f67_02b678da", "updated": "2017-07-14 15:15:50.000000000", "message": "I'm wondering if we should bother with versioning at all. The tag should be only a string, it is its only purpose. So I'd think the data structure for this object should not change. We might add new methods here, but there would be no need in data manipulation (other than the possibility of renaming tag field?..) I think I'll just add the logic to set the version as well.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "a88ac43ccef3d546f15ef854ce63825b5cc0f127", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_c7983376", "line": 43, "in_reply_to": "1f1a1f67_335d447a", "updated": "2017-07-18 14:33:35.000000000", "message": "I really dislike adding a VersionedObject that is not consistent with the other VersionedObjects. We don't know what will happen in the future (and I don't know if we will be around...). If it is 'easy enough' to make things as consistent as possible now, I'd rather we do that, than leave it as a future-thing-to-do-if-it-ever-has-a-new-version. Although, yeah, I'd think that we wouldn't need to have a new version of this object but who knows :)\n\nThx for adding the logic to set the version!", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_02b678da", "line": 43, "in_reply_to": "1f1a1f67_f51c70c2", "updated": "2017-07-14 13:23:38.000000000", "message": "I need to think about this. Also you've asked somewhere about if the version is saved with tag objects, seems like it does not.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_b598381b", "line": 105, "updated": "2017-07-14 02:07:48.000000000", "message": "it would be useful to clarify that this replaces any existing tags associated with this node, to this new list.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "f3fb7f1cf8a6dd896290d03e3e28664560bdeabc", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_82c16831", "line": 105, "in_reply_to": "1f1a1f67_b598381b", "updated": "2017-07-14 13:23:38.000000000", "message": "will do", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}, {"author": {"_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, "change_message_id": "cc2981e77f3f0153a085d0978d8d042bf3adaa64", "unresolved": false, "patch_set": 65, "id": "1f1a1f67_95eadc72", "line": 116, "updated": "2017-07-14 02:07:48.000000000", "message": "ditto about rolling upgrades.", "commit_id": "c8eeda0f2dc69e65ce750418c1b575f1061192f9"}], "ironic/tests/unit/api/utils.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_1a13020f", "line": 98, "updated": "2016-01-28 16:21:43.000000000", "message": "This is a part of an API object, it's just internal right? (looking at the API patch)", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e6f1ad3d50610cb382402134a32127b151d40bc6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_fa427f3d", "line": 98, "in_reply_to": "7a5de9d1_1a13020f", "updated": "2016-01-29 07:36:06.000000000", "message": "yeah, but with the version 0.8.0 WSME will raise HTTP 400 (BadRequest) when one attempt to create a node with nonexistent fields, please reference https://review.openstack.org/#/c/216802/2/ironic/tests/api/utils.py", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "eda0776bfd998cac9d84c123c6cba14c94cb4075", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_cc73467f", "line": 98, "in_reply_to": "7a5de9d1_fa427f3d", "updated": "2016-01-29 10:29:17.000000000", "message": "OK, then maybe you could remove this line in API patch? There you add it to internal_attrs, so it will be removed on L100", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_3abb5ee7", "line": 99, "updated": "2016-01-28 16:21:43.000000000", "message": "'tags' are added to internal attrs in the following patch, so will be removed anyway.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}], "ironic/tests/unit/db/utils.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3befc71936a87ea082d2db505e23018fd22a92d6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_5af2da70", "line": 354, "updated": "2016-01-28 16:21:43.000000000", "message": "There is no default for other objects, I think it's better to remove these. Also updated_at does not make much sense at all as you cannot update a tag, but idk what can be done about this.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e6f1ad3d50610cb382402134a32127b151d40bc6", "unresolved": false, "patch_set": 22, "id": "7a5de9d1_2f369752", "line": 354, "in_reply_to": "7a5de9d1_5af2da70", "updated": "2016-01-29 07:36:06.000000000", "message": "ok, will remove them in the coming patch set.", "commit_id": "e551cff83ab720d2c961703d1e6dc949bb63d183"}], "ironic/tests/unit/objects/test_node.py": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "5261c746807e63414f7adb59d2481a479e0f0e21", "unresolved": false, "patch_set": 19, "id": "9a68dd71_4514b44b", "line": 31, "updated": "2016-01-25 11:41:40.000000000", "message": "I would like to see a test where the node does actually have some tags and we assert that the tags are being returned in the object", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "98e82dd85340a107cb07177f91696b96a3b8ada5", "unresolved": false, "patch_set": 19, "id": "9a68dd71_d0c5920a", "line": 31, "in_reply_to": "9a68dd71_4514b44b", "updated": "2016-01-26 08:30:55.000000000", "message": "Done", "commit_id": "9d99e4044f2945d907b7dfa36ee22ac3dfe6181f"}], "ironic/tests/unit/objects/test_tag.py": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "09f1a60560c5ed10260170b37c33751dd67743fc", "unresolved": false, "patch_set": 5, "id": "da85f559_b0623ad7", "line": 20, "updated": "2015-11-09 07:21:54.000000000", "message": "Only TagLIst?  TagObject also need test", "commit_id": "040109c0df11e60c98ce26c1aa6e2a4087646d68"}], "ironic/tests/unit/objects/test_tags.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "0eb4a21c1125c245e85dc77bc42ac2ac60f44cac", "unresolved": false, "patch_set": 45, "id": "1a6eadb0_9d2fd5f5", "line": 62, "range": {"start_line": 62, "start_character": 37, "end_line": 62, "end_character": 52}, "updated": "2016-12-19 18:01:35.000000000", "message": "Tags should support indexing, so you can just do tags[0].tag (and I think it's the recommended way?)", "commit_id": "914ed07d4f14fbe9f28a1a3478f80270b83fbc2a"}], "ironic/tests/unit/objects/utils.py": [{"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "398a42d63e6abbe755c42fa7a95b36b60fad5157", "unresolved": false, "patch_set": 51, "id": "3a461143_e8c87a24", "line": 61, "updated": "2017-01-30 22:44:25.000000000", "message": "wouldn't it be better to del/pop 'tags' from db_node, instead of applying this condition?", "commit_id": "f162914c7808677e7ab7faf6e612bc3e4ae25edf"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "16fbf152b32b94a2152e4f7b09dc0814fff4d108", "unresolved": false, "patch_set": 51, "id": "1a430d35_942bf393", "line": 61, "in_reply_to": "3a461143_e8c87a24", "updated": "2017-02-06 12:14:06.000000000", "message": "No, tags will be converted to TagList object, this is just for tests.", "commit_id": "f162914c7808677e7ab7faf6e612bc3e4ae25edf"}]}}, "openstack%2Fironic~master~I93c27dbf3249141613f8ace895e982f084546d1f": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17998, "name": "UFCG OneView CI", "email": "ufcg-oneview-ci@lsd.ufcg.edu.br", "username": "ufcg-oneview-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2017-07-28 15:53:20.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19686, "name": "Ramamani Yeleswarapu", "email": "ramamani.yeleswarapu@intel.com", "username": "Rama_Y"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19003, "name": "Fujitsu iRMC CI", "email": "fj-lsoft-irmcci@dl.jp.fujitsu.com", "username": "Fujitsu_iRMC_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}], "comments": {"ironic/db/sqlalchemy/api.py": [{"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "fb2c3beec75ec96516b067f0faa0461849c5d49d", "unresolved": false, "patch_set": 13, "id": "1af94dfe_da85d707", "line": 230, "updated": "2016-03-16 16:56:37.000000000", "message": "This is probably premature optimization, but how does this query perform? This type of problem is apparently called \"relational division\", and http://stackoverflow.com/questions/15977126/sql-server-select-rows-that-match-all-items-in-a-list suggests a way of implementing it using a single subquery.\n\nOn the other hand, maybe this query doesn't need to be fast, or maybe the query optimizer is smarter about handling repeated joins than I think :-)", "commit_id": "afaffcf357016ceabd16a5d53b05b57a47b6b253"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "a115553be6eb73f03e14fc5f617d9edf5e013296", "unresolved": false, "patch_set": 21, "id": "1a122d0e_df8f25cb", "line": 249, "updated": "2016-05-05 18:00:36.000000000", "message": "You should gracefully handle the case where the list is empty.", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "1b1ef644f3990086006827bc2bc59e50f6b5fb59", "unresolved": false, "patch_set": 21, "id": "9abb7d3a_2ec04be0", "line": 249, "in_reply_to": "1a122d0e_df8f25cb", "updated": "2016-06-02 16:33:30.000000000", "message": "you mean tags is []?", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "670f3dee374d91a56705eb44a9acb2c98cbc711d", "unresolved": false, "patch_set": 21, "id": "7aa08908_2793f650", "line": 249, "in_reply_to": "9abb7d3a_2ec04be0", "updated": "2016-06-07 12:49:10.000000000", "message": "Yes, but on a second look I think your existing code should handle that case fine. Could you please add a test for that case?", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "a115553be6eb73f03e14fc5f617d9edf5e013296", "unresolved": false, "patch_set": 21, "id": "1a122d0e_bf8ce9d7", "line": 256, "updated": "2016-05-05 18:00:36.000000000", "message": "Same as above: handle the empty-list case gracefully.", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "670f3dee374d91a56705eb44a9acb2c98cbc711d", "unresolved": false, "patch_set": 21, "id": "7aa08908_a79fe64e", "line": 256, "in_reply_to": "1a122d0e_bf8ce9d7", "updated": "2016-06-07 12:49:10.000000000", "message": "Ditto.", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "a115553be6eb73f03e14fc5f617d9edf5e013296", "unresolved": false, "patch_set": 21, "id": "1a122d0e_1fbcfd6a", "line": 276, "updated": "2016-05-05 18:00:36.000000000", "message": "Same here.", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 18893, "name": "Miles Gould", "email": "mgould@redhat.com", "username": "pozorvlak"}, "change_message_id": "670f3dee374d91a56705eb44a9acb2c98cbc711d", "unresolved": false, "patch_set": 21, "id": "7aa08908_e7a9ee7c", "line": 276, "in_reply_to": "1a122d0e_1fbcfd6a", "updated": "2016-06-07 12:49:10.000000000", "message": "Ditto.", "commit_id": "f974280c73dd04ce888da276b26db89e2e025d5b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d62f7491e409374d54d6f5a50e2a19407708a9e7", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_84263dcc", "line": 243, "range": {"start_line": 233, "start_character": 12, "end_line": 243, "end_character": 58}, "updated": "2017-01-16 18:52:37.000000000", "message": "This bit can be refactored into one common function.", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0d4034fc199d0f13b851aa05864a51999a867d11", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_6cbe8966", "line": 243, "range": {"start_line": 233, "start_character": 12, "end_line": 243, "end_character": 58}, "in_reply_to": "7a3c09a3_84263dcc", "updated": "2017-01-17 05:10:39.000000000", "message": "Done", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d62f7491e409374d54d6f5a50e2a19407708a9e7", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_e42b8192", "line": 267, "range": {"start_line": 257, "start_character": 12, "end_line": 267, "end_character": 64}, "updated": "2017-01-16 18:52:37.000000000", "message": "that common function could be used here too.", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0d4034fc199d0f13b851aa05864a51999a867d11", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_ccb93d7b", "line": 267, "range": {"start_line": 257, "start_character": 12, "end_line": 267, "end_character": 64}, "in_reply_to": "7a3c09a3_e42b8192", "updated": "2017-01-17 05:10:39.000000000", "message": "Done", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d62f7491e409374d54d6f5a50e2a19407708a9e7", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_feb95116", "line": 291, "range": {"start_line": 291, "start_character": 16, "end_line": 291, "end_character": 61}, "updated": "2017-01-16 18:52:37.000000000", "message": "I did comment about that on the previous patch, but seems it is a comment for this one. Why do you output tags in get_node_list but do not here? Why not allow to specify tags here as one of the columns? You can filter on them, but cannot output them, if I read the code correctly.", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "8d68023390d86194a40ca9afa61d4e7b045b3b44", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_2b5b75f7", "line": 291, "range": {"start_line": 291, "start_character": 16, "end_line": 291, "end_character": 61}, "in_reply_to": "7a3c09a3_980be48d", "updated": "2017-01-17 12:18:18.000000000", "message": "Thanks, will leave a comment here, and if others want to use this, need to add support then.", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "5a734f18341ce9488c3da4a7b18a4bc983a8c9ee", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_980be48d", "line": 291, "range": {"start_line": 291, "start_character": 16, "end_line": 291, "end_character": 61}, "in_reply_to": "7a3c09a3_cf23efa5", "updated": "2017-01-17 11:07:47.000000000", "message": "Hmm, maybe you're right. If a periodic task needs to do some decisions based on node tag, that's not a tag, maybe it should be a capability or something like that. Anyway, would be good to have a comment with reasoning here. OTOH, what if some other methods will start using it, not only iter_nodes?", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0d4034fc199d0f13b851aa05864a51999a867d11", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_cf23efa5", "line": 291, "range": {"start_line": 291, "start_character": 16, "end_line": 291, "end_character": 61}, "in_reply_to": "7a3c09a3_feb95116", "updated": "2017-01-17 05:10:39.000000000", "message": "hi vdrok, seems this interface is just used internally by iter_nodes, but 'tags' should be exposed to users instead of internal logic, wdyt?", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "cf0b5c06750ddebaace3a9c01d111fe7abc49594", "unresolved": false, "patch_set": 35, "id": "3a461143_4bef25b0", "line": 255, "updated": "2017-01-27 07:55:16.000000000", "message": "please move all the new addings to a separate function _update_nodes_filters_with_tags(self, query, filters) or any other appropriate name.", "commit_id": "51ee74e9195cc626bafc0c9b648143f734d78dd7"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "ed15159ef933c1f978cf4f549d2060454b8f070d", "unresolved": false, "patch_set": 36, "id": "da36d5c6_be94b636", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 50}, "updated": "2017-02-27 12:15:08.000000000", "message": "I saw Vasyl commenting on this and I agree with it, this is raising the complexity level (therefore we need the change in tox.ini)\n\nLet's create a new function that add the tags filter to the query object, e.g (suggestion):\n\n def _add_nodes_filters_for_tags(self, query, filters):\n   ...", "commit_id": "e1a9015f741b357aab55e6145aacc068c8b8b191"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "c9c03926d7f558e3206ab3c4afbac5551b3b408e", "unresolved": false, "patch_set": 37, "id": "9a30ddce_7704e514", "line": 199, "updated": "2017-03-07 21:41:42.000000000", "message": "Will it be possible to have this line executed if there are no tags (for example, if a \"tags\" filter is passed with an empty list)? There needs to be suitable error handling here, if so", "commit_id": "d813a6c25bdf75542b4434505745cf991a194ebe"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "b52ab03cc533a31387928bbec1ae5a2b577ac2e6", "unresolved": false, "patch_set": 37, "id": "ffe62b97_ea515010", "line": 199, "in_reply_to": "9a30ddce_7704e514", "updated": "2017-03-24 18:16:51.000000000", "message": "I think we can just drop this part and only leave the loop.", "commit_id": "d813a6c25bdf75542b4434505745cf991a194ebe"}, {"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "e26813bc08fabed45ee1a2325b2ba3f70f90b177", "unresolved": false, "patch_set": 37, "id": "9a30ddce_bea55f05", "line": 226, "updated": "2017-03-07 18:50:01.000000000", "message": "assuming by unit tests, this should be elif. If more then one tag filter type can be included, please add unit test for such case (e.g. both tags-any and not-tags)", "commit_id": "d813a6c25bdf75542b4434505745cf991a194ebe"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "b52ab03cc533a31387928bbec1ae5a2b577ac2e6", "unresolved": false, "patch_set": 37, "id": "1a1ced50_2c917753", "line": 226, "in_reply_to": "9a30ddce_949f9702", "updated": "2017-03-24 18:16:51.000000000", "message": "I think providing several types is a viable thing. Will add unittests.", "commit_id": "d813a6c25bdf75542b4434505745cf991a194ebe"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "c9c03926d7f558e3206ab3c4afbac5551b3b408e", "unresolved": false, "patch_set": 37, "id": "9a30ddce_949f9702", "line": 226, "in_reply_to": "9a30ddce_bea55f05", "updated": "2017-03-07 21:41:42.000000000", "message": "+1, great catch", "commit_id": "d813a6c25bdf75542b4434505745cf991a194ebe"}], "ironic/tests/unit/db/test_nodes.py": [{"author": {"_account_id": 23883, "name": "Joanna Taryma", "email": "joanna.taryma@intel.com", "username": "jtaryma"}, "change_message_id": "e2fdd2a12d62fb30c06681fb24bba7689e08998b", "unresolved": false, "patch_set": 38, "id": "ffe62b97_ef76ffd8", "line": 164, "updated": "2017-03-24 18:45:57.000000000", "message": "shouldn't it be node2?", "commit_id": "1c5395d088bb9260ec9b371b010a7aec4fae3c1a"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "3645366bb5386ab7fca93999e5ff94be17d08bfd", "unresolved": false, "patch_set": 38, "id": "ffe62b97_f23ee627", "line": 164, "in_reply_to": "ffe62b97_ef76ffd8", "updated": "2017-03-24 18:55:06.000000000", "message": "doh, right :)", "commit_id": "1c5395d088bb9260ec9b371b010a7aec4fae3c1a"}], "tox.ini": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d62f7491e409374d54d6f5a50e2a19407708a9e7", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_7e5ba1f6", "line": 93, "updated": "2017-01-16 18:52:37.000000000", "message": "I don't really think we should bump it that high. The code could use some refactor as suggested in comments.", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0d4034fc199d0f13b851aa05864a51999a867d11", "unresolved": false, "patch_set": 26, "id": "7a3c09a3_ef434b40", "line": 93, "in_reply_to": "7a3c09a3_7e5ba1f6", "updated": "2017-01-17 05:10:39.000000000", "message": "Yes, but as there are really many filters need to handle, maybe move them all out?", "commit_id": "0c5acf9f826d3d5146596e913485f2915c484fa7"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "cf0b5c06750ddebaace3a9c01d111fe7abc49594", "unresolved": false, "patch_set": 35, "id": "3a461143_8b2f4df5", "line": 93, "updated": "2017-01-27 07:55:16.000000000", "message": "It is not right approach, please see my comments in the api.py", "commit_id": "51ee74e9195cc626bafc0c9b648143f734d78dd7"}]}}, "openstack%2Fironic~master~I2b5d012a8a59a8be15e534140842e58b7d76e590": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"ironic/drivers/modules/port_bitmap.py": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "865eee0460a81837bcb23e08a6041bcc9562de66", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_d531f0ed", "line": 23, "updated": "2015-12-23 08:45:37.000000000", "message": "It's only for console port or?", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "196b2071bfda51395e07663c24a2dc1d1f13685c", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_7e74999b", "line": 23, "in_reply_to": "1a7b0d38_d531f0ed", "updated": "2015-12-23 09:43:44.000000000", "message": "currently it's only for console ports, but I don't want to restrict it, so named this as PortBitmap in case of reused in the future.", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "865eee0460a81837bcb23e08a6041bcc9562de66", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_b206ba1e", "line": 29, "updated": "2015-12-23 08:45:37.000000000", "message": "It's a such big range, there is a potential conflict with other kind of ports. Do you have any ideas to prevent this?", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "196b2071bfda51395e07663c24a2dc1d1f13685c", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_43122a64", "line": 29, "in_reply_to": "1a7b0d38_b206ba1e", "updated": "2015-12-23 09:43:44.000000000", "message": "I plan to add two configs, then users can specify their own ports range to avoid conflict with other services in their system, do you have better suggestions Tan?", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "865eee0460a81837bcb23e08a6041bcc9562de66", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_d21d86be", "line": 41, "updated": "2015-12-23 08:45:37.000000000", "message": "Better to add another function like get_port_by_num?", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "196b2071bfda51395e07663c24a2dc1d1f13685c", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_c3c85a77", "line": 41, "in_reply_to": "1a7b0d38_d21d86be", "updated": "2015-12-23 09:43:44.000000000", "message": "I don't think so, a same interface to get port seems better.", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "865eee0460a81837bcb23e08a6041bcc9562de66", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_15cc5888", "line": 46, "updated": "2015-12-23 08:45:37.000000000", "message": "what happened if you didn't get your specific port?", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "196b2071bfda51395e07663c24a2dc1d1f13685c", "unresolved": false, "patch_set": 2, "id": "1a7b0d38_034c2241", "line": 46, "in_reply_to": "1a7b0d38_15cc5888", "updated": "2015-12-23 09:43:44.000000000", "message": "if you specify a port num, this function will just return the port and add it to it's ports set to mark the port has been used, if you don't specify the port, it will get a unused port from the ports range and add it to the ports set.", "commit_id": "1346df9dbaed177e2a68eec6da746ca9cd1dad96"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "3784f8635a9177cb383b56863cd1bd4bd2be7821", "unresolved": false, "patch_set": 4, "id": "1a7b0d38_0e6b7eb8", "line": 29, "updated": "2015-12-28 07:14:44.000000000", "message": "1. personally, I doubt the necessary to allow user configure the port range, do they really care about the port number? 2. How many instances will a conductor manage? I didn't test it but I guess it should be less than one hundred. And how many instances will be accessed simultaneous? So I would suggest you could pick a reasonable range is good enough.", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "8cfeaf748c26edf15090b50ad739c35a698daff3", "unresolved": false, "patch_set": 4, "id": "fa69d971_3d07d21d", "line": 29, "in_reply_to": "1a7b0d38_0e6b7eb8", "updated": "2016-01-04 06:26:31.000000000", "message": "thanks Tan, but I still think it's a good choice to give users the ability to set this port range, if they don't care about the port number, they can use the default range. and I don't want to assume a reasonable range for all user's environments.", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "3784f8635a9177cb383b56863cd1bd4bd2be7821", "unresolved": false, "patch_set": 4, "id": "1a7b0d38_7386abdc", "line": 39, "updated": "2015-12-28 07:14:44.000000000", "message": "in your logical, max_port_search should also equal to 'self.max_port+1' otherwise you will never get the max_port", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "8cfeaf748c26edf15090b50ad739c35a698daff3", "unresolved": false, "patch_set": 4, "id": "fa69d971_3dab521f", "line": 39, "in_reply_to": "1a7b0d38_7386abdc", "updated": "2016-01-04 06:26:31.000000000", "message": "thanks Tan, will address in the next patch set.", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "3784f8635a9177cb383b56863cd1bd4bd2be7821", "unresolved": false, "patch_set": 4, "id": "1a7b0d38_73b30bea", "line": 46, "updated": "2015-12-28 07:14:44.000000000", "message": "nit:add a log here or somewhere should be helpful for debug", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "8cfeaf748c26edf15090b50ad739c35a698daff3", "unresolved": false, "patch_set": 4, "id": "fa69d971_472193fa", "line": 46, "in_reply_to": "1a7b0d38_73b30bea", "updated": "2016-01-04 06:26:31.000000000", "message": "Thanks, I plan to not add the log here, but at the function who got a -1 from get_next_port()", "commit_id": "382043a37474b7cc4eed269f7721ca19b4e9a059"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "16d4c9592963ad773b67f40efa378bddab27834a", "unresolved": false, "patch_set": 5, "id": "fa69d971_f5ff7863", "line": 30, "updated": "2016-01-07 03:38:53.000000000", "message": "why not default=DEFAULT_PORT_RANGE", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "c0648a4ede956764cb5f68201df89161e0690349", "unresolved": false, "patch_set": 5, "id": "fa69d971_662e7c8d", "line": 30, "in_reply_to": "fa69d971_f5ff7863", "updated": "2016-01-07 04:48:08.000000000", "message": "Done", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "16d4c9592963ad773b67f40efa378bddab27834a", "unresolved": false, "patch_set": 5, "id": "fa69d971_b50a6024", "line": 56, "updated": "2016-01-07 03:38:53.000000000", "message": "nit: max_port_search = (port_num if port_num else self.max_port) + 1", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "c0648a4ede956764cb5f68201df89161e0690349", "unresolved": false, "patch_set": 5, "id": "fa69d971_463338f6", "line": 56, "in_reply_to": "fa69d971_b50a6024", "updated": "2016-01-07 04:48:08.000000000", "message": "Done", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "16d4c9592963ad773b67f40efa378bddab27834a", "unresolved": false, "patch_set": 5, "id": "fa69d971_60a744a7", "line": 59, "updated": "2016-01-07 03:38:53.000000000", "message": "should verify the port before adds to the port", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "c0648a4ede956764cb5f68201df89161e0690349", "unresolved": false, "patch_set": 5, "id": "fa69d971_0629c089", "line": 59, "in_reply_to": "fa69d971_60a744a7", "updated": "2016-01-07 04:48:08.000000000", "message": "hi Tan, the port should be added first here, as whether veriy_port succeed or not, the port is used.", "commit_id": "6e13a6b17159e320859da321459a9a9e5ac7ce2e"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "acfdc426bb34c084d7df85ee05a8e18fee55426c", "unresolved": false, "patch_set": 6, "id": "da6ed579_e30f9b2c", "line": 42, "updated": "2016-01-16 15:39:15.000000000", "message": "As this is written, each instance of PortBitmap will be independent. If I were to create more than one instance, they would not coordinate the allocation of ports, leading to conflicts what ever code used it. And eventually, leading to entries in the 'ports' bitmap that never get released. \n\nI think this class should use a singleton for the 'ports' bitmap.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ac24b3b873838e90875925f3601d828a0a8fc026", "unresolved": false, "patch_set": 6, "id": "da6ed579_5cc18f7f", "line": 42, "in_reply_to": "da6ed579_e30f9b2c", "updated": "2016-01-18 09:09:11.000000000", "message": "thanks Devananda, will change to use singleton in the next patch set.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "acfdc426bb34c084d7df85ee05a8e18fee55426c", "unresolved": false, "patch_set": 6, "id": "da6ed579_831c9f6b", "line": 75, "updated": "2016-01-16 15:39:15.000000000", "message": "this is racy -- what happens if multiple greenthreads are asking for ports in parallel? it is possible that both callers will succeed in binding (and releasing) the same port.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}], "ironic/tests/unit/drivers/modules/test_port_bitmap.py": [{"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "acfdc426bb34c084d7df85ee05a8e18fee55426c", "unresolved": false, "patch_set": 6, "id": "da6ed579_a319a37b", "line": 59, "updated": "2016-01-16 15:39:15.000000000", "message": "this is odd -- you've defined the range above as \"0:10\" and validated that asking for more than 11 ports yields an error. Great.\n\nNow you ask for a specific port outside that range and assert that it works?\n- That should be a different unit test\n- Asking for a port outside the configured range should fail.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "ac24b3b873838e90875925f3601d828a0a8fc026", "unresolved": false, "patch_set": 6, "id": "da6ed579_bc81ab4f", "line": 59, "in_reply_to": "da6ed579_a319a37b", "updated": "2016-01-18 09:09:11.000000000", "message": "thanks Devananda, as it is written, the configured port range is for auto allocation, but if a console port is specified in node's driver_info, we don't check whether it outside the range. if you disagree with the current design, I can update the spec https://review.openstack.org/#/c/249876/ , and it's appreciate if you can help to look at that as well.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "acfdc426bb34c084d7df85ee05a8e18fee55426c", "unresolved": false, "patch_set": 6, "id": "da6ed579_432547ac", "line": 70, "updated": "2016-01-16 15:39:15.000000000", "message": "Missing test case for releasing a port which hasn't been allocated.\n\nMissing test case for asking for a port by number that has already been allocated.\n\nMissing test case for asking for a port outside of the allowable range.", "commit_id": "9382a85bbb45616fc04c82ab6d8e933f3e4f03da"}]}}, "openstack%2Fironic-specs~master~I195d66487cea5ad9db9cb42a8e57957302d4bfc9": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5805, "name": "Chris Krelle", "email": "nobodycam@gmail.com", "username": "nobodycam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, {"value": 2, "date": "2016-01-07 17:21:50.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": -1, "date": "2016-05-12 21:40:12.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "fcd445b6bdc2dec52b4e3fa4fb9787d8b82aa45b", "unresolved": false, "patch_set": 2, "id": "7a740942_e69a3414", "line": 8, "updated": "2015-12-04 10:50:34.000000000", "message": "You should change the name of rst file as well:)", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a45f1e8993d959ba634bfe088cfa83d2a9a202bd", "unresolved": false, "patch_set": 2, "id": "7a740942_56264f69", "line": 8, "in_reply_to": "7a740942_e69a3414", "updated": "2015-12-04 14:48:04.000000000", "message": "yeah, but filename must match with the bp name 'improve-api-performance'.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}], "specs/approved/improve-api-performance.rst": [{"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "d8406ba0c86cb3d10068e2662eeee90fa3f141bb", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_42e89b7c", "line": 8, "updated": "2015-12-02 01:47:49.000000000", "message": "title should be less generic. instead of \"improve performance\", how about \"use cached copy of hash ring in api service\"", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "b4f5022f309b4257c16039bd03f47c777675dbb9", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_05785dc3", "line": 8, "in_reply_to": "9a8ffd7b_42e89b7c", "updated": "2015-12-02 02:47:31.000000000", "message": "will update soon.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "7a426085c86f38f32187f5e142bcf9af276149b1", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_227317e9", "line": 35, "updated": "2015-12-02 01:41:05.000000000", "message": "I have a concern about this. Because oslo messaging has a default timeout by 60s. If you want to catch the Timeout exception, then the ironic service will hang on 60s. This is very bad for API performance. I doubt this is a necessary case to catch Timeout exception.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5cbeb981a9ccc9967ada48d1c8d21dcf5e6c316b", "unresolved": false, "patch_set": 1, "id": "7a740942_bb043e15", "line": 35, "in_reply_to": "7a740942_e3f30672", "updated": "2015-12-04 13:56:45.000000000", "message": "run get_topic on every request could be accurate but will cause low performance, please reference the problem description of this spec, and api will only hang 60s when conductor hash changed but the cached hash ring haven't refreshed yet.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "b4f5022f309b4257c16039bd03f47c777675dbb9", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_45fe656c", "line": 35, "in_reply_to": "9a8ffd7b_227317e9", "updated": "2015-12-02 02:47:31.000000000", "message": "hi Tan, even if you don't catch the Timeout exception, the ironic service will hang on 60s, and as there is a logic to refresh the cached hash ring now, the api request will be mostly accurate, and together with this try/except block will ensure the api request succeed if we have other active conductors.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "b1e5b2d559e50758867e71cfe6629041380b44ce", "unresolved": false, "patch_set": 1, "id": "7a740942_e3f30672", "line": 35, "in_reply_to": "9a8ffd7b_45fe656c", "updated": "2015-12-04 10:43:31.000000000", "message": "Yes, it will still hang on 60s, but if you run get_topic and find the conductor is lost before sent request, it could partially avoid this?", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "d8406ba0c86cb3d10068e2662eeee90fa3f141bb", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_e518b977", "line": 44, "updated": "2015-12-02 01:47:49.000000000", "message": "there are several alternatives, but mostly, I'd like to call out that RPC timeout is a very poor cache validation test. We could, for example, use a DLM for that.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "d8406ba0c86cb3d10068e2662eeee90fa3f141bb", "unresolved": false, "patch_set": 1, "id": "9a8ffd7b_a5d3915e", "line": 63, "updated": "2015-12-02 01:47:49.000000000", "message": "there's an increased risk of split-brain problems if the connection between API servers and conductors gets interrupted, since each API server may perform cache invalidation / cache regeneration at different times.\n\nNote that a conductor, upon receiving an RPC request, *does not* validate its hash ring to ensure that the Node is assigned to it -- it trusts the API servers to route correctly.\n\nWe should correct that as part of this work, and introduce a new exception, NodeNotMappedHere, which would be caught by rpcapi.py and trigger the API service to refresh its hash ring.", "commit_id": "1e865d70e0629b12f1edcfba8d0b453a98ebda6a"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "da90e773c80f0679a2847a7937e300cd4438d416", "unresolved": false, "patch_set": 2, "id": "7a740942_ba12ffb2", "line": 32, "updated": "2015-12-04 12:17:14.000000000", "message": "default", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "da90e773c80f0679a2847a7937e300cd4438d416", "unresolved": false, "patch_set": 2, "id": "7a740942_3ab12f90", "line": 35, "updated": "2015-12-04 12:17:14.000000000", "message": "How long it takes to the timeout to be raised? Is it a reasonable time ?", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a45f1e8993d959ba634bfe088cfa83d2a9a202bd", "unresolved": false, "patch_set": 2, "id": "7a740942_31a14d95", "line": 35, "in_reply_to": "7a740942_3ab12f90", "updated": "2015-12-04 14:48:04.000000000", "message": "that could be configured by rpc_response_timeout which is default to 60s.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "da90e773c80f0679a2847a7937e300cd4438d416", "unresolved": false, "patch_set": 2, "id": "7a740942_3a8a8fc0", "line": 40, "updated": "2015-12-04 12:17:14.000000000", "message": "It would be useful if we could add a configuration option to keep the behavior we have today and force resetting the hash ring on all the requests", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a45f1e8993d959ba634bfe088cfa83d2a9a202bd", "unresolved": false, "patch_set": 2, "id": "7a740942_aca082f5", "line": 40, "in_reply_to": "7a740942_3a8a8fc0", "updated": "2015-12-04 14:48:04.000000000", "message": "hi Lucas, maybe we can use hash_ring_reset_interval for that, when it set to 0, we will reset the hash ring on every request, but the option also affect the cached hash ring in conductor.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "dfa00e411455b4a8c6edb1e409e9aef70f1227ca", "unresolved": false, "patch_set": 2, "id": "9a8ffd7b_92054d7b", "line": 43, "updated": "2015-12-02 15:09:03.000000000", "message": "If I understand logic described here correctly in some\nsituations requests to the same node can be processed\non different conductors, example:\n 1) Conductor1 with works with node foo fails\n 2) API1 got timeout for node foo\n 3) API1 refresh hash ring, Conductor2 returned for foo\n 4) Conductor2 refresh our hash ring quickly, no exception is raised\n 5) Conductor1 quickly recovered\n 6) API2 does not get timeout from Conductor1 for foo\n\nNow for some time period requests for foo from API1 will\nbe served on Conductor2 and from API2 on Conductor1.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "dfa00e411455b4a8c6edb1e409e9aef70f1227ca", "unresolved": false, "patch_set": 2, "id": "9a8ffd7b_81642122", "line": 44, "updated": "2015-12-02 15:09:03.000000000", "message": "Please provide more info about changes on conductor side.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a45f1e8993d959ba634bfe088cfa83d2a9a202bd", "unresolved": false, "patch_set": 2, "id": "7a740942_d1aa4919", "line": 44, "in_reply_to": "9a8ffd7b_81642122", "updated": "2015-12-04 14:48:04.000000000", "message": "will enrich it in the next patch set.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "dfa00e411455b4a8c6edb1e409e9aef70f1227ca", "unresolved": false, "patch_set": 2, "id": "9a8ffd7b_c1e229a0", "line": 45, "updated": "2015-12-02 15:09:03.000000000", "message": "s/corret/correct", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "fcd445b6bdc2dec52b4e3fa4fb9787d8b82aa45b", "unresolved": false, "patch_set": 2, "id": "7a740942_0682e094", "line": 47, "updated": "2015-12-04 10:50:34.000000000", "message": "nit:s/NodeNotMappedHere/``NodeNotMappedHere``", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "fcd445b6bdc2dec52b4e3fa4fb9787d8b82aa45b", "unresolved": false, "patch_set": 2, "id": "7a740942_03abb21e", "line": 55, "updated": "2015-12-04 10:50:34.000000000", "message": "As Devananda said, DLM should be a better alternative to mention..", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "da90e773c80f0679a2847a7937e300cd4438d416", "unresolved": false, "patch_set": 2, "id": "7a740942_5ad99bf2", "line": 55, "in_reply_to": "7a740942_03abb21e", "updated": "2015-12-04 12:17:14.000000000", "message": "++\n\nI think the DLM is the way to go", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a45f1e8993d959ba634bfe088cfa83d2a9a202bd", "unresolved": false, "patch_set": 2, "id": "7a740942_16276713", "line": 55, "in_reply_to": "7a740942_5ad99bf2", "updated": "2015-12-04 14:48:04.000000000", "message": "thanks, will add in the next patch set.", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "dfa00e411455b4a8c6edb1e409e9aef70f1227ca", "unresolved": false, "patch_set": 2, "id": "9a8ffd7b_e1ec0dbd", "line": 124, "updated": "2015-12-02 15:09:03.000000000", "message": "s/valiadtion/validation", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "da90e773c80f0679a2847a7937e300cd4438d416", "unresolved": false, "patch_set": 2, "id": "7a740942_dac10be6", "line": 126, "updated": "2015-12-04 12:17:14.000000000", "message": "Timeout", "commit_id": "0b5840a092202ff808265ad01176bcdcdda34f09"}, {"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dc21fa94aceff775db93fa76988aefd05dc2c56b", "unresolved": false, "patch_set": 5, "id": "fa69d971_d2124d58", "line": 21, "updated": "2016-01-08 02:03:26.000000000", "message": "I'd like to see some benchmarks here. We know it isn't optimal, but I wouldn't call it \"unacceptable\".", "commit_id": "0473df66676aa7ac35b4067cc86d496bb146aa25"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "37870ba92afbe17f0d2ed45d2f2957d8556c74ba", "unresolved": false, "patch_set": 5, "id": "fa69d971_ba5d2fee", "line": 21, "in_reply_to": "fa69d971_d2124d58", "updated": "2016-01-11 13:09:56.000000000", "message": "yes Jim, maybe \"unacceptable\" is not suitable here.", "commit_id": "0473df66676aa7ac35b4067cc86d496bb146aa25"}, {"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dc21fa94aceff775db93fa76988aefd05dc2c56b", "unresolved": false, "patch_set": 5, "id": "fa69d971_b79b0b72", "line": 41, "updated": "2016-01-08 02:03:26.000000000", "message": "So if a conductor goes down, all API calls that should route to that conductor will hang until the first call times out and things are re-balanced? Seems like this could get backed up quickly.", "commit_id": "0473df66676aa7ac35b4067cc86d496bb146aa25"}, {"author": {"_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, "change_message_id": "7180c1a9cdc9801e5b8be9d60801ecfe8218f8f5", "unresolved": false, "patch_set": 5, "id": "dab17558_fb8f1673", "line": 41, "in_reply_to": "fa69d971_7071a40b", "updated": "2016-05-12 21:40:12.000000000", "message": "I'm also very concerned about the failure semantics around this.", "commit_id": "0473df66676aa7ac35b4067cc86d496bb146aa25"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "37870ba92afbe17f0d2ed45d2f2957d8556c74ba", "unresolved": false, "patch_set": 5, "id": "fa69d971_7071a40b", "line": 41, "in_reply_to": "fa69d971_b79b0b72", "updated": "2016-01-11 13:09:56.000000000", "message": "yes, and this will only happen when the conductor down and the cached hash ring hasn't reach the refresh time.", "commit_id": "0473df66676aa7ac35b4067cc86d496bb146aa25"}]}}, "openstack%2Fironic-specs~master~I7c573617569ee85541e2c202c4f14d045faa4db9": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5805, "name": "Chris Krelle", "email": "nobodycam@gmail.com", "username": "nobodycam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14760, "name": "John L. Villalovos", "email": "openstack.org@sodarock.com", "username": "jlvillal"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": -1, "date": "2017-02-17 12:51:36.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"specs/approved/console-port-management.rst": [{"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "22bb1865225027ef6f4d3b27e391ebd3b863c647", "unresolved": false, "patch_set": 5, "id": "5a710552_4c80c546", "line": 39, "updated": "2015-12-16 13:23:53.000000000", "message": "Port can be already used on the host by other service, do you plan to implement a solution for avoiding this problem?", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f1c0e95c64bde5274be8399660d009dc5cc880a6", "unresolved": false, "patch_set": 5, "id": "1a7b0d38_fdccaa6b", "line": 39, "in_reply_to": "5a710552_255ea776", "updated": "2015-12-28 03:25:26.000000000", "message": "oh, just find nova already implemented this, will try to reuse that.", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f4faa5e899f90cb6a89eb6f2434b1cb5107f0ef7", "unresolved": false, "patch_set": 5, "id": "5a710552_255ea776", "line": 39, "in_reply_to": "5a710552_4c80c546", "updated": "2015-12-16 15:48:23.000000000", "message": "thanks Yuriy, this spec doesn't cover that, but if you have some suggestions, I can try to do that :)", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "d3b5113ac762443039351c308ec1192381a96a3b", "unresolved": false, "patch_set": 5, "id": "5a710552_2cb1b9e1", "line": 55, "updated": "2015-12-16 13:29:31.000000000", "message": "If user sets \"terminal_port\" parameter manually it's number can conflict with port in the bitmap.", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f4faa5e899f90cb6a89eb6f2434b1cb5107f0ef7", "unresolved": false, "patch_set": 5, "id": "5a710552_a5c0572b", "line": 55, "in_reply_to": "5a710552_2cb1b9e1", "updated": "2015-12-16 15:48:23.000000000", "message": "if specified terminal_port,  get_next_port() will retrun it, and add it to the ports set, please reference https://review.openstack.org/#/c/257789/2/ironic/drivers/modules/port_bitmap.py", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "3153fe0759469847f821a4ae7324599531537c6f", "unresolved": false, "patch_set": 5, "id": "5a710552_26131a68", "line": 57, "updated": "2015-12-16 13:06:20.000000000", "message": "Please also describe take over procedure. Conductor does start_console() in _do_takeover(), value of port from ``driver_internal_info`` can conflict with current conductor's port.", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f4faa5e899f90cb6a89eb6f2434b1cb5107f0ef7", "unresolved": false, "patch_set": 5, "id": "5a710552_45de5312", "line": 57, "in_reply_to": "5a710552_26131a68", "updated": "2015-12-16 15:48:23.000000000", "message": "Done", "commit_id": "a269b178a2d9e649f15e047c929c7b8b94e7a5ca"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "eac2484b50c88dfb614934c8eaa7b08082cbd6a7", "unresolved": false, "patch_set": 9, "id": "1a7b0d38_ce1ed6ba", "line": 80, "updated": "2015-12-28 07:31:35.000000000", "message": "I prefer the alternatives to have console ports in conductor tables. 1. ports number as a resource are belong to conductor nodes. 2.As you said, in the future, the PortBitMap could also manage other ports, so this way is easy to extend. Could you give more disadvantage of the alternatives?", "commit_id": "7cb1fd6faed109187f645d0f09e0d9410a966acf"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0f9933669ff39ee579fc24be77a5a143745a8017", "unresolved": false, "patch_set": 9, "id": "fa69d971_c0fec96a", "line": 80, "in_reply_to": "1a7b0d38_ce1ed6ba", "updated": "2016-01-04 06:53:53.000000000", "message": "hi Tan, thanks for the comments.\n\n  1. it's not easy to save and manage the console ports in conductor table, and we can't find the relationship between the port and the node unless you save it as a dict.\n\n  2. I'm not sure whether other console drivers need the console port or only for shellinabox.", "commit_id": "7cb1fd6faed109187f645d0f09e0d9410a966acf"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "74a0a5a60bf351be269dde8a0f4b90a67a8c3c3b", "unresolved": false, "patch_set": 10, "id": "da6ed579_e7e6ac43", "line": 80, "updated": "2016-01-18 07:59:53.000000000", "message": "It's better to add the disadvantages of the solution here. Otherwise, it's not clear for people why the alternatives is not good enough.", "commit_id": "32db8585398fcf9cf2dddf716549bb4ad36779e4"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "1b49e268e59e7634eac6833d23efb9dd0c02fb43", "unresolved": false, "patch_set": 13, "id": "5aef4532_d05d7c48", "line": 61, "range": {"start_line": 60, "start_character": 62, "end_line": 61, "end_character": 16}, "updated": "2016-03-09 15:08:28.000000000", "message": "This is not good. 1) validate() intended only for parameters validation, returning a value not related to validation procedure looks like a hack 2) All mentioned magic with port numbers should be hidden in drivers which use shellinabox, because some drivers can use own HW/SF solutions without shellinabox at all.", "commit_id": "e68e599cc9c51335fd64b20a4c413b2ef8c15152"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5e43162ac0466c8f9d2d5683422b893c146738fc", "unresolved": false, "patch_set": 13, "id": "fa0719c6_7d59f6fd", "line": 61, "range": {"start_line": 60, "start_character": 62, "end_line": 61, "end_character": 16}, "in_reply_to": "5aef4532_d05d7c48", "updated": "2016-03-23 03:31:43.000000000", "message": "Thanks for the comments Yuriy, but I think it's not easy to hide all the ports allocation/deallocation logic to drivers.\n\n1) I think validate() should not only for parameters validation now, as we can allocate ports without the port parameter set, so in addition of parameters validation, the validate() method need to check whether there's port available for allocation, and preserve the port in case of allocated by others while starting console, so I add a return to it.\n\n2) the port bitmap is maintained by conductor, not sure how to expose that to drivers, but I can try.", "commit_id": "e68e599cc9c51335fd64b20a4c413b2ef8c15152"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "a94d9d80e0e19115275069e5998234e09626e1d4", "unresolved": false, "patch_set": 13, "id": "fa0719c6_98113507", "line": 61, "range": {"start_line": 60, "start_character": 62, "end_line": 61, "end_character": 16}, "in_reply_to": "fa0719c6_7d59f6fd", "updated": "2016-03-24 02:31:50.000000000", "message": "after thinking this more, instead of returning the allocated port by validate(), I can move the logic of saving the port to node's driver_internal_info to validate(), so all the ports management magic will be hide in the shellinabox console driver, that would be more clean, thanks for the suggestion Yuriy! will update the spec soon.", "commit_id": "e68e599cc9c51335fd64b20a4c413b2ef8c15152"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "1b49e268e59e7634eac6833d23efb9dd0c02fb43", "unresolved": false, "patch_set": 13, "id": "5aef4532_24e0e128", "line": 67, "updated": "2016-03-09 15:08:28.000000000", "message": "See (2) in the comment above.", "commit_id": "e68e599cc9c51335fd64b20a4c413b2ef8c15152"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "1b49e268e59e7634eac6833d23efb9dd0c02fb43", "unresolved": false, "patch_set": 13, "id": "5aef4532_84d7354a", "line": 77, "updated": "2016-03-09 15:08:28.000000000", "message": "ditto", "commit_id": "e68e599cc9c51335fd64b20a4c413b2ef8c15152"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "5ffbf85e039451594d156cede40e5326c06ae857", "unresolved": false, "patch_set": 15, "id": "1a122d0e_a674c6ce", "line": 29, "updated": "2016-04-28 15:59:55.000000000", "message": "I prefer name like shellinabox_console_port because some drivers can support own mechanisms.", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4041a816890a4e8100b160f1cbe83873896c4197", "unresolved": false, "patch_set": 15, "id": "1a122d0e_0a760206", "line": 29, "in_reply_to": "1a122d0e_a674c6ce", "updated": "2016-05-03 03:04:35.000000000", "message": "Done", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "5ffbf85e039451594d156cede40e5326c06ae857", "unresolved": false, "patch_set": 15, "id": "1a122d0e_1104d212", "line": 34, "updated": "2016-04-28 15:59:55.000000000", "message": "Better rename like ``ConsolePortMap``, I think it will not be bitmap technically.", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4041a816890a4e8100b160f1cbe83873896c4197", "unresolved": false, "patch_set": 15, "id": "1a122d0e_0ae442aa", "line": 34, "in_reply_to": "1a122d0e_1104d212", "updated": "2016-05-03 03:04:35.000000000", "message": "Done", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "5ffbf85e039451594d156cede40e5326c06ae857", "unresolved": false, "patch_set": 15, "id": "1a122d0e_b1435e41", "line": 66, "updated": "2016-04-28 15:59:55.000000000", "message": "User will be able to set port in \"driver_info\" or not?", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "4041a816890a4e8100b160f1cbe83873896c4197", "unresolved": false, "patch_set": 15, "id": "1a122d0e_c5db5d7c", "line": 66, "in_reply_to": "1a122d0e_b1435e41", "updated": "2016-05-03 03:04:35.000000000", "message": "yes, if users set the console port in \"driver_info\", we will add it in \"driver_internal_info\" as well, and using it to start console process.", "commit_id": "a8dcc3e998b2b14fdc1b8fbd52bc35848295160d"}]}}, "openstack%2Fironic~master~Ic9fb62bdd829b0ece3fa860cac11f6b0443e8f3b": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": -1, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5805, "name": "Chris Krelle", "email": "nobodycam@gmail.com", "username": "nobodycam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17998, "name": "UFCG OneView CI", "email": "ufcg-oneview-ci@lsd.ufcg.edu.br", "username": "ufcg-oneview-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6287, "name": "David Lenwell", "email": "dlenwell@gmail.com", "username": "dlenwell"}, {"value": 0, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8106, "name": "Haomeng,Wang", "email": "wanghaomeng@gmail.com", "username": "whaom"}, {"value": 0, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 1, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 1, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": -1, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 1, "date": "2016-06-02 17:04:58.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "55dfb1fb37d1c77f7b54ca4c2361772f67f5d40e", "unresolved": false, "patch_set": 1, "id": "7af24918_ee8c8081", "line": 9, "updated": "2016-03-07 02:53:41.000000000", "message": "these are not inner methods, for example populate_image() is also directly called in deploy_utils.deploy_disk_image(). But in the case of deploy_partitional_image(), this could use work_on_disk() to test", "commit_id": "dc97040c8e9af597b4ede1e9c8665f215a5ef4f1"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "e20a0396af13cfa79e1ae1e094ca2b446f974048", "unresolved": false, "patch_set": 1, "id": "5aef4532_14791794", "line": 9, "in_reply_to": "7af24918_0e4e0cc1", "updated": "2016-03-07 14:57:58.000000000", "message": "I'd rather rewrite this as 'assertions about ironic-lib method calls that are not called directly by ironic should be tested in ironic-lib'", "commit_id": "dc97040c8e9af597b4ede1e9c8665f215a5ef4f1"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "e810540af623544b1253d62609f3b06234e03435", "unresolved": false, "patch_set": 1, "id": "7af24918_0e4e0cc1", "line": 9, "in_reply_to": "7af24918_ee8c8081", "updated": "2016-03-07 03:34:15.000000000", "message": "Tan, populate_image() is directly called in deploy_utils.deploy_disk_image(), so we should mock that in the unit tests about deploy_disk_image(), but deploy_partitional_image only call ironic_lib.work_on_disk(), and populate_image() is called in work_on_disk() in ironic_lib logic, am I clear? and there are many inner methods like block_uuid(),mkfs(),destroy_metadata().", "commit_id": "dc97040c8e9af597b4ede1e9c8665f215a5ef4f1"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "299eb239d79c71f72ffe6e012a9eb17c24995c17", "unresolved": false, "patch_set": 4, "id": "3afc51ec_5b0d2636", "line": 7, "range": {"start_line": 7, "start_character": 33, "end_line": 7, "end_character": 38}, "updated": "2016-03-15 02:51:30.000000000", "message": "nit: change the inner methods for the title too", "commit_id": "edc103ecd65849053d7ea7520dfefa6303cf3944"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "7413b06954095af8404605aa65a22d4f5fc62b3a", "unresolved": false, "patch_set": 4, "id": "3afc51ec_3b05ba79", "line": 7, "range": {"start_line": 7, "start_character": 33, "end_line": 7, "end_character": 38}, "in_reply_to": "3afc51ec_5b0d2636", "updated": "2016-03-15 03:11:27.000000000", "message": "Done", "commit_id": "edc103ecd65849053d7ea7520dfefa6303cf3944"}], "ironic/tests/unit/drivers/modules/test_deploy_utils.py": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "e20a0396af13cfa79e1ae1e094ca2b446f974048", "unresolved": false, "patch_set": 1, "id": "5aef4532_202b2e32", "side": "PARENT", "line": 717, "updated": "2016-03-07 14:57:58.000000000", "message": "While I agree that it should be removed from ironic, I think this should be added in ironic-lib. At least this and the next one tests should be moved there.", "commit_id": "c0dea3e12279f59ee50e0f862735e1f7e4d28337"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "6adb73b91e08e8a4bede4bd8a20a96e90b8dc932", "unresolved": false, "patch_set": 1, "id": "5aef4532_a45a4d4e", "side": "PARENT", "line": 717, "in_reply_to": "5aef4532_202b2e32", "updated": "2016-03-09 08:28:43.000000000", "message": "hi vdrok, the make_partition related tests are already in ironic-lib, please reference https://github.com/openstack/ironic-lib/blob/master/ironic_lib/tests/test_disk_utils.py#L251-L341", "commit_id": "c0dea3e12279f59ee50e0f862735e1f7e4d28337"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "d98224f6373511da05915e10feab48b2448856ea", "unresolved": false, "patch_set": 1, "id": "5aef4532_b6e9dee8", "side": "PARENT", "line": 717, "in_reply_to": "5aef4532_a45a4d4e", "updated": "2016-03-09 10:19:20.000000000", "message": "Correct, but I don't see a test with preserve_ephemeral there (and these are more like tests for work_on_disk - https://github.com/openstack/ironic-lib/blob/master/ironic_lib/tests/test_disk_utils.py#L76)", "commit_id": "c0dea3e12279f59ee50e0f862735e1f7e4d28337"}]}}, "openstack%2Fironic-specs~master~I5377cb851a9071cfb97b4a8bfe0b65b00e79f574": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, {"value": -1, "date": "2016-10-10 18:02:19.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, {"value": -1, "date": "2016-10-10 12:51:22.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_fcdebc6b", "line": 9, "updated": "2016-03-28 12:39:04.000000000", "message": "s/duplicate/for duplicate nodes/", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_bfada98a", "line": 9, "in_reply_to": "da0c15f0_fcdebc6b", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_fcc51c8e", "line": 10, "updated": "2016-03-28 12:39:04.000000000", "message": "s/verifing process/verification process./", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_3ffeb96b", "line": 10, "in_reply_to": "da0c15f0_fcc51c8e", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "b040af1c11db948b11fff5bc99b38051d7b57803", "unresolved": false, "patch_set": 3, "id": "1a122d0e_9ade493c", "line": 7, "range": {"start_line": 7, "start_character": 22, "end_line": 7, "end_character": 32}, "updated": "2016-04-28 09:17:16.000000000", "message": "s/enrollment/enrolment", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}], "specs/approved/check-duplicate-nodes.rst": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_dc3658e6", "line": 19, "range": {"start_line": 19, "start_character": 3, "end_line": 19, "end_character": 4}, "updated": "2016-03-28 12:39:04.000000000", "message": "Nitpick: I think you should remove the reference to yourself.  This, once approved, becomes published documentation.  As such, since any readers will be third parties, the problem description should ideally be written as such.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_dc6498e6", "line": 19, "range": {"start_line": 19, "start_character": 57, "end_line": 19, "end_character": 58}, "updated": "2016-03-28 12:39:04.000000000", "message": "s/Ironic/ironic/ per the project style guide.  Project names are to be lower cased, service descriptive names, such as \"Bare Metal\" are to be upper cased.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_bf2009f9", "line": 19, "range": {"start_line": 19, "start_character": 3, "end_line": 19, "end_character": 4}, "in_reply_to": "da0c15f0_dc3658e6", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_5f23ad05", "line": 19, "range": {"start_line": 19, "start_character": 57, "end_line": 19, "end_character": 58}, "in_reply_to": "da0c15f0_dc6498e6", "updated": "2016-03-29 03:55:29.000000000", "message": "indeed, thanks Julia.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_a9488488", "line": 24, "updated": "2016-03-28 12:39:04.000000000", "message": "This truly depends on the hardware.  A good example is the HP Moonshot chassis which truly has just a single BMC, however each node is managed by different bridge and target setting variables which allows for the delineation of each \"node\" in the chassis.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_1fbbf573", "line": 24, "in_reply_to": "da0c15f0_a9488488", "updated": "2016-03-29 03:55:29.000000000", "message": "yes Julia, use BMC seems not proper here, will change the reference to BMC to 'bare metal node', like 'One baremetal node should only be associated to one ironic node'.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "7bae651ab3d8ac53fbc84574641cf661ff908ca2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_3c1f9460", "line": 44, "updated": "2016-03-28 12:37:02.000000000", "message": "The proposed change will break case when IPMI network is behind NAT. and several server IPs translated to different ports on single NAT ip.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "7bae651ab3d8ac53fbc84574641cf661ff908ca2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_7c5f4ce5", "line": 47, "updated": "2016-03-28 12:37:02.000000000", "message": "Why not consider block adding of nodes with overlapping bmc parameters via API as an option?", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_f11d9567", "line": 47, "in_reply_to": "da0c15f0_7c5f4ce5", "updated": "2016-03-29 03:55:29.000000000", "message": "As we need to compare the parameters to every node with the same driver, which will take long time if there's many nodes, it's not a good choice to block the api request, but yes it should be added here as a alternatives, thanks Vasyl.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_e9c6fc47", "line": 49, "range": {"start_line": 48, "start_character": 0, "end_line": 49, "end_character": 4}, "updated": "2016-03-28 12:39:04.000000000", "message": "Please propose an alternative method how the goal could ultimately be achieved.  It does not have to be more then a couple sentences.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_49f44885", "line": 79, "range": {"start_line": 79, "start_character": 0, "end_line": 79, "end_character": 4}, "updated": "2016-03-28 12:39:04.000000000", "message": "This change appears to change the driver API as it calls for an additional expected method for all drivers.  I believe this would be a breaking change at present.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_54b0aff4", "line": 79, "range": {"start_line": 79, "start_character": 0, "end_line": 79, "end_character": 4}, "in_reply_to": "da0c15f0_49f44885", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_c984d8d5", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 4}, "updated": "2016-03-28 12:39:04.000000000", "message": "Deployers will be impacted if they use 3rd party drivers.  While this would largely be informational, it is something deployers will need to be aware of since the third party drivers will need to be updated to support the functionality.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_34dd3b15", "line": 109, "range": {"start_line": 109, "start_character": 0, "end_line": 109, "end_character": 4}, "in_reply_to": "da0c15f0_c984d8d5", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_3c6e7495", "line": 129, "range": {"start_line": 129, "start_character": 39, "end_line": 129, "end_character": 47}, "updated": "2016-03-28 12:39:04.000000000", "message": "s/veirying/verifying/ or verification", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "5870794e8bd67b735103b8c08596d84d0cf9ae2e", "unresolved": false, "patch_set": 1, "id": "ba0121b8_b4d14bfe", "line": 129, "range": {"start_line": 129, "start_character": 39, "end_line": 129, "end_character": 47}, "in_reply_to": "da0c15f0_3c6e7495", "updated": "2016-03-29 03:55:29.000000000", "message": "Done", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "e0038ab0563f798ddbeef04eaa4b167adecfd2d2", "unresolved": false, "patch_set": 1, "id": "da0c15f0_899660ee", "line": 151, "updated": "2016-03-28 12:39:04.000000000", "message": "One thing I like to ask here is \"How documentation will need to be updated\" and \"What will the operator/deployer/developer need to be aware of?\"\n\nI wouldn't mind seeing a little more explanation of  this so we as a community know what to expect, but truthfully this is really a nitpick.", "commit_id": "c0a040ac9a5f2a048bbef6bd022f8b5936ccf28e"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "5e20dc9b8f292ac0d86b14199269cbfc5473db40", "unresolved": false, "patch_set": 2, "id": "ba0121b8_d792a89e", "line": 40, "updated": "2016-03-30 12:31:08.000000000", "message": "\"ipmi_address\" is IP address or hostname of the node. Duplicated nodes can be registered one via IP and one via hostname. Please describe how to handle this case.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "d314d90e0dd956d203a0200fa85845558b253c63", "unresolved": false, "patch_set": 2, "id": "ba0121b8_7f8b631f", "line": 40, "in_reply_to": "ba0121b8_41718143", "updated": "2016-03-31 17:46:23.000000000", "message": "I was kind of thinking that we could have like an ordered list of things we look for and always focus on that one item.  As Yuriy points out, there are many possibilities.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "56680132247b49d786a765d81e5775c48c64921a", "unresolved": false, "patch_set": 2, "id": "ba0121b8_f4c34d55", "line": 40, "in_reply_to": "ba0121b8_d792a89e", "updated": "2016-03-30 20:04:31.000000000", "message": "++\n\nI can't help but wonder if we implement such a  feature at driver level, and that driver attempts to identify and store a unique piece of information about the node.  For example, on one of my chassises, I can ask it for the management GUID, that seems fairly unique for these purposes.  That would also mean, what would potentially be a two column DB query or asking the DB if an exact match already exists in the DB, if we have a standard order of priority unique information.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f8f8968af79ea8d0a500a232c114e12611137c19", "unresolved": false, "patch_set": 2, "id": "ba0121b8_fa5dec47", "line": 40, "in_reply_to": "ba0121b8_f4c34d55", "updated": "2016-03-31 03:06:20.000000000", "message": "@Yuriy ++, maybe I can use socket.gethostbyaddr('ipmi_ip_address') to do reverse DNS lookups.\n\n\n@Julia That's a good idea if we can ask the chassises for a unique piece of information, but as you mentioned in the previous patchset, HP Moonshot chassis which truly has just a single BMC, however each node is managed by different bridge and target setting variables which allows for the delineation of each \"node\" in the chassis, so seems it depends on the hardware.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "43cc7a5de1084c70524a982200f09f2985f6c0df", "unresolved": false, "patch_set": 2, "id": "ba0121b8_41718143", "line": 40, "in_reply_to": "ba0121b8_fa5dec47", "updated": "2016-03-31 10:42:05.000000000", "message": "I like Julia idea about unique hardware-related nodes info. I think it's possible in most cases. We can add generic \"hardware_id\" field to nodes table. For nodes with OOB management support IDs can be: management controller uuid for nodes with own BMC, cartridge serial number for HP Moonshot iLO, AMT uuid for Intel AMT, etc. Even for nodes w/o OOB management we can use SMBIOS uuid (there will be a limitation, we can obtain it only after agent ramdisk loaded). For OOB this ID can be obtained via new get_hardware_id() (only for Ironic internal use) method in driver's management interface for example.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "5e20dc9b8f292ac0d86b14199269cbfc5473db40", "unresolved": false, "patch_set": 2, "id": "ba0121b8_548cd634", "line": 44, "updated": "2016-03-30 12:31:08.000000000", "message": "There is performance issue in matching process, because we should select node's \"driver_info\" for all nodes with the same driver. Maybe add https://review.openstack.org/#/c/253605/ to dependencies.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f8f8968af79ea8d0a500a232c114e12611137c19", "unresolved": false, "patch_set": 2, "id": "ba0121b8_75656db3", "line": 44, "in_reply_to": "ba0121b8_548cd634", "updated": "2016-03-31 03:06:20.000000000", "message": "Thanks Yuriy, that would be a great help for performance, will try to refactor the matching process after that implemented.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "59fc06d283c27772c664a0f00ecbbf101ecb1caf", "unresolved": false, "patch_set": 2, "id": "ba0121b8_81776e39", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "updated": "2016-03-30 02:16:15.000000000", "message": "really? DB query should fast enough, this is similar like if you create a duplicate name for node.\n\n\nWe should verify the BMC info when we create/enroll a node rather than in current place. For example, create a compact field maybe named node_authentication and verify if there is already a same one in DB. And if you don't input the BMC info when create a node, then this attribute can be None. Then each driver can have their own format or don't have it all and this won't break out-tree-driver as well.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f8f8968af79ea8d0a500a232c114e12611137c19", "unresolved": false, "patch_set": 2, "id": "ba0121b8_f5885dc7", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_1476c105", "updated": "2016-03-31 03:06:20.000000000", "message": "Julia, agree that de-duplication operation seems not worth to returning all of nodes records, but the *duplication* here is not like a name duplication, which may override another node's deployment, then some serious issues may ensue, and I place the in-effective operation in node verification process which runs in a background thread.  For the chassis GUID, seems it depends on the hardware.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "83b7017b706e227d6ab56e2b2a1eda4c0840ad91", "unresolved": false, "patch_set": 2, "id": "ba0121b8_3572d549", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_1476c105", "updated": "2016-03-31 03:02:35.000000000", "message": "My initial idea is you should create a new field name like node_authentication for node object. The value is a hash value which consist of drivers' specific authentication and can be parse in parse_driver_info() too or at a better place. This field is similar like driver_internal_info and is untouchable for users.With that, you don't have to iterate nodes's driver_info and split them and compare in conductor, you just need to check if it is duplicate.\n\nA simple example:\nimport hashlib, json\namt_authentication= {'amt_address': '10.0.0.1'}\nm = hashlib.md5()\nm.update(json.dumps(amt_authentication))\nnode.node_authentication = m.hexdigest()\nnode.save()", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "db156c6c7622c37cc82bfb833aa02fc21449096f", "unresolved": false, "patch_set": 2, "id": "ba0121b8_b029d339", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_3572d549", "updated": "2016-03-31 03:28:30.000000000", "message": "Thanks Tan, Seems this would also depend on users correctly input your desired authentication properties, but currently we can even enroll a node without any authentication information.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "56680132247b49d786a765d81e5775c48c64921a", "unresolved": false, "patch_set": 2, "id": "ba0121b8_1476c105", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_6c1cd1c1", "updated": "2016-03-30 20:04:31.000000000", "message": "I tend to think the minimum number of node entries that we need to frame discussions around as being around 10k nodes, and to be totally honest I'm really not a fan of returning all of nodes records back to the conductor for a de-duplication operation.  Especially because a NAT gateway could render it in-effective.  I think we need to try and identify a GUID or serial number, or something unique about the chassis and store that in the DB so we can directly query the DB if a direct match exists, that way the DB does the work and not the conductor.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "dba21198c02a4b084d7f07752e8639d9b5decd64", "unresolved": false, "patch_set": 2, "id": "ba0121b8_6c1cd1c1", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_81776e39", "updated": "2016-03-30 03:06:00.000000000", "message": "hi Tan, thanks for the review!\n\nIt's different with name, for name, we just insert the entry to db and check duplicate exception, but here, the properties are part of the driver_info text, we need to iterate every node's driver_info, split them and compare with the specified-properties ourselves, which apparently takes time.\n\n\nI wonder how do you determine the properties in node_authentication, should be exposed by the specified driver? \nand this will be a required parameter when enrolling a node, which some overlaps with the driver_info field, and I think it's not easy to control the context of node_authentication just like we can input everything in driver_info now, but anyway it's an alternative method, thanks Tan for the suggestions.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "d314d90e0dd956d203a0200fa85845558b253c63", "unresolved": false, "patch_set": 2, "id": "ba0121b8_e4708a74", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_b029d339", "updated": "2016-03-31 17:46:23.000000000", "message": "I get that this is not just for name deduplication.  The intent is to block a node from being to be used or acted upon if we have duplicate configuration pointing at a pre-defined node.\n\nAnother idea!\nWhat if we develop a fingerprint algorithm that takes information from the driver_info, and predictably generates a value that we can store in the db, that is indexed, that we can query upon when a new node is attempted to be taken to the manageable state?  This idea is kind of better idea to be in that we get the performance advantage of being able to ask the database if there is a single value match in the DB before proceeding with the node, and the method utilized could potentially take into account support for different drivers. \n\nRegarding verifying at enroll, perhaps the transition from ENROLL to MANAGEABLE since power verification, if memory serves, is required to reach manageable.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "b3ec9e9a64c2e77e9440af3eefe752958ad5f1b5", "unresolved": false, "patch_set": 2, "id": "ba0121b8_4c6ce307", "line": 51, "range": {"start_line": 50, "start_character": 70, "end_line": 51, "end_character": 78}, "in_reply_to": "ba0121b8_e4708a74", "updated": "2016-04-01 08:02:35.000000000", "message": "@Julia, I think we have the same or similar idea. You can see my comments above. +1 for this.\n\n@Zhengguo, the point is not have the same authentication information. That's fine if you enroll a node without any authentication information, it didn't hurt. But once you input any authentication info, then we can check if it is duplicate.", "commit_id": "abfa680288af0714da829504c0957a1921c1a965"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "b040af1c11db948b11fff5bc99b38051d7b57803", "unresolved": false, "patch_set": 3, "id": "1a122d0e_5a8dd12f", "line": 37, "range": {"start_line": 37, "start_character": 32, "end_line": 37, "end_character": 39}, "updated": "2016-04-28 09:17:16.000000000", "message": "The set of distinct_properties should be specified in this spec for each driver.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "f6a54bb9c8c2946ce499d1ec559cd2e55dbac4ea", "unresolved": false, "patch_set": 3, "id": "1a122d0e_ffb2cf92", "line": 38, "updated": "2016-04-28 08:54:07.000000000", "message": "There is same problem that mentioned in the past, the same node can be registered via IP address and name, please describe how to avoid duplicates.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "b040af1c11db948b11fff5bc99b38051d7b57803", "unresolved": false, "patch_set": 3, "id": "1a122d0e_7a06cd86", "line": 41, "updated": "2016-04-28 09:17:16.000000000", "message": "Might be think about storing fingerprint for each node in the DB and guarantee iniquity on DB level. The value should be recalculated each time we change distinct properties.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "9fabe3dfac7c780f661daa413f52b9f5b5030997", "unresolved": false, "patch_set": 3, "id": "1a122d0e_6a871a61", "line": 41, "in_reply_to": "1a122d0e_7a06cd86", "updated": "2016-04-28 11:49:33.000000000", "message": "please disregard this comment.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "f6a54bb9c8c2946ce499d1ec559cd2e55dbac4ea", "unresolved": false, "patch_set": 3, "id": "1a122d0e_7f651f1c", "line": 42, "updated": "2016-04-28 08:54:07.000000000", "message": "These returned values are in the list? Please provide an example.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "f6a54bb9c8c2946ce499d1ec559cd2e55dbac4ea", "unresolved": false, "patch_set": 3, "id": "1a122d0e_1f522b35", "line": 58, "updated": "2016-04-28 08:54:07.000000000", "message": "I do not very like this new field name. This is not hardware fingerprint, I can setup IP of the BMC to one address, and then change it on the same hardware.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "b040af1c11db948b11fff5bc99b38051d7b57803", "unresolved": false, "patch_set": 3, "id": "1a122d0e_fa413daa", "line": 58, "in_reply_to": "1a122d0e_1f522b35", "updated": "2016-04-28 09:17:16.000000000", "message": "+1 to Yuri. It is not hardware fingerprint.", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "f6a54bb9c8c2946ce499d1ec559cd2e55dbac4ea", "unresolved": false, "patch_set": 3, "id": "1a122d0e_9f5bdb85", "line": 83, "updated": "2016-04-28 08:54:07.000000000", "message": "s/api/method", "commit_id": "41ad063d5f215adf69cc77726e53b36647fdfa95"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "986a33db85a64f7a3a87ad5a429411af330f3328", "unresolved": false, "patch_set": 4, "id": "1a122d0e_e0773906", "line": 14, "range": {"start_line": 14, "start_character": 8, "end_line": 14, "end_character": 23}, "updated": "2016-05-04 09:08:22.000000000", "message": "out_of_band_fingerprint or oob_fingerprint is better. not all servers are using bmc.", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "795d27760adc27d344e9adfeef78b536fe02507e", "unresolved": false, "patch_set": 4, "id": "1a122d0e_5b5d3c47", "line": 14, "range": {"start_line": 14, "start_character": 8, "end_line": 14, "end_character": 23}, "in_reply_to": "1a122d0e_e0773906", "updated": "2016-05-04 09:23:05.000000000", "message": "oob_fingerprint seems better, will update in the coming patch set, thanks Tan!", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "986a33db85a64f7a3a87ad5a429411af330f3328", "unresolved": false, "patch_set": 4, "id": "1a122d0e_2082d1c8", "line": 15, "range": {"start_line": 15, "start_character": 25, "end_line": 15, "end_character": 28}, "updated": "2016-05-04 09:08:22.000000000", "message": "ditto", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "986a33db85a64f7a3a87ad5a429411af330f3328", "unresolved": false, "patch_set": 4, "id": "1a122d0e_60da09eb", "line": 29, "range": {"start_line": 29, "start_character": 45, "end_line": 29, "end_character": 56}, "updated": "2016-05-04 09:08:22.000000000", "message": "what information, authentication related information I would assume", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "986a33db85a64f7a3a87ad5a429411af330f3328", "unresolved": false, "patch_set": 4, "id": "1a122d0e_60016939", "line": 30, "range": {"start_line": 30, "start_character": 13, "end_line": 30, "end_character": 20}, "updated": "2016-05-04 09:08:22.000000000", "message": "a hash value is more clear.", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 13362, "name": "Tan Lin", "email": "lin.tan@intel.com", "username": "zero"}, "change_message_id": "986a33db85a64f7a3a87ad5a429411af330f3328", "unresolved": false, "patch_set": 4, "id": "1a122d0e_bb2730b4", "line": 42, "range": {"start_line": 42, "start_character": 4, "end_line": 42, "end_character": 27}, "updated": "2016-05-04 09:08:22.000000000", "message": "I didn't quite understand the name of method, what about get_authentication_properties()", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "795d27760adc27d344e9adfeef78b536fe02507e", "unresolved": false, "patch_set": 4, "id": "1a122d0e_fbb7e882", "line": 42, "range": {"start_line": 42, "start_character": 4, "end_line": 42, "end_character": 27}, "in_reply_to": "1a122d0e_bb2730b4", "updated": "2016-05-04 09:23:05.000000000", "message": "Tan, it's a set of properties used to distinguish nodes, something like 'ipmitool_address'. authentication_properties also contains credential information like 'username', 'password', it's not the same thing I think.", "commit_id": "aa55b71f55e38f6b220f9b8f9a126be9d70388e3"}, {"author": {"_account_id": 10342, "name": "Jay Faulkner", "display_name": "JayF", "email": "jay@jvf.cc", "username": "JayF"}, "change_message_id": "528ccbf1ce63cc647debba2cbde968bb6564b693", "unresolved": false, "patch_set": 5, "id": "dab17558_40810f4d", "line": 25, "updated": "2016-05-12 21:14:20.000000000", "message": "Shouldn't the tuple of address, user, and password be enough to uniquely identify a node? I'm not convinced we need this feature at all based on the problem description listed here.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0c1d7034db9a38cd76e25104dada7d13d8dae5ad", "unresolved": false, "patch_set": 5, "id": "dab17558_8a80dfc0", "line": 25, "in_reply_to": "dab17558_40810f4d", "updated": "2016-05-16 01:45:09.000000000", "message": "in fact, user and password is not needed, address is enough for most cases, but with IPMI bridging several nodes will have the same IPMI address. So we should leave this check up to driver", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_0c24f4c2", "line": 42, "updated": "2016-05-16 13:01:36.000000000", "message": "It will be happening in API right?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f0a32d843eda8b9ef67c01895fb55c4d95373b82", "unresolved": false, "patch_set": 5, "id": "dab17558_26d90bf4", "line": 42, "in_reply_to": "dab17558_0c24f4c2", "updated": "2016-05-16 16:13:03.000000000", "message": "yes, the check will be in API.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "45b542ccabd8348c1d7d7db3471d89b3ba6a71c9", "unresolved": false, "patch_set": 5, "id": "dab17558_094946b7", "line": 44, "updated": "2016-05-11 14:20:17.000000000", "message": "And we store value in DB at this step if it's not set?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0c1d7034db9a38cd76e25104dada7d13d8dae5ad", "unresolved": false, "patch_set": 5, "id": "dab17558_4a61d738", "line": 44, "in_reply_to": "dab17558_094946b7", "updated": "2016-05-16 01:45:09.000000000", "message": "if it's not set, I would like to leave it to None, as it not really connect to any real hardware in this case, and when it's None, we should skip the duplicate check until the key properties set.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_6cc2e035", "line": 44, "in_reply_to": "dab17558_0fb4f432", "updated": "2016-05-16 13:01:36.000000000", "message": "It should be, otherwise how do we know others nodes fingerprints? Calculating them all each time node is updated is expensive.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "23069381582f4140657440e5d72470ca33d0e529", "unresolved": false, "patch_set": 5, "id": "dab17558_0fb4f432", "line": 44, "in_reply_to": "dab17558_4a61d738", "updated": "2016-05-16 09:03:21.000000000", "message": "It is not clear here when would  `oob_fingerprint` be updated into Node object?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f0a32d843eda8b9ef67c01895fb55c4d95373b82", "unresolved": false, "patch_set": 5, "id": "dab17558_dc13b063", "line": 44, "in_reply_to": "dab17558_6cc2e035", "updated": "2016-05-16 16:13:03.000000000", "message": "I plan to set oob_fingerprint field as a  primary key, and leave the duplicate check to DB, but don't find a good solution for None yet, or maybe we should don't allow create/update node with distinct properties not set, as it's the minimum hardware identification.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "45b542ccabd8348c1d7d7db3471d89b3ba6a71c9", "unresolved": false, "patch_set": 5, "id": "dab17558_096786b7", "line": 46, "updated": "2016-05-11 14:20:17.000000000", "message": "How we select parameter(s) for converting from list like l91?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0c1d7034db9a38cd76e25104dada7d13d8dae5ad", "unresolved": false, "patch_set": 5, "id": "dab17558_ea488bb5", "line": 46, "in_reply_to": "dab17558_096786b7", "updated": "2016-05-16 01:45:09.000000000", "message": "will give an example soon, thanks Yuriy!", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_ecced02b", "line": 46, "in_reply_to": "dab17558_ea488bb5", "updated": "2016-05-16 13:01:36.000000000", "message": "Is there a need for such conversion? I think we can not cover all the possible cases anyway. E.g. there is a node that contains hostname in ipmi_address field, its ip address changes, you create a node with this new ip address (not hostname) and everything is fine, as ip is different now.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_cc6f8cfa", "line": 61, "updated": "2016-05-16 13:01:36.000000000", "message": "Hm, should it be driver_internal_info? Not sure, as there was intention to move away from json blobs. But driver_internal_info makes sense too.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_6c7f80ab", "line": 81, "updated": "2016-05-16 13:01:36.000000000", "message": "Additional RPC calls will be present AIUI to this newly introduced method?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "23069381582f4140657440e5d72470ca33d0e529", "unresolved": false, "patch_set": 5, "id": "dab17558_1401ad06", "line": 86, "updated": "2016-05-16 09:03:21.000000000", "message": "Will this be a mandatory method to be re-defined by each driver?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_4c01dc05", "line": 86, "in_reply_to": "dab17558_1401ad06", "updated": "2016-05-16 13:01:36.000000000", "message": "I think it should be optional, default being [].", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f0a32d843eda8b9ef67c01895fb55c4d95373b82", "unresolved": false, "patch_set": 5, "id": "dab17558_495f0041", "line": 86, "in_reply_to": "dab17558_4c01dc05", "updated": "2016-05-16 16:13:03.000000000", "message": "yes, it's in the base power driver class, and default to [], so it's not a mandatory method.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "23069381582f4140657440e5d72470ca33d0e529", "unresolved": false, "patch_set": 5, "id": "dab17558_cfc82c58", "line": 116, "range": {"start_line": 116, "start_character": 0, "end_line": 116, "end_character": 4}, "updated": "2016-05-16 09:03:21.000000000", "message": "This change would have a impact during node enroll/update based on number of nodes already enrolled. Better to mention it here.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f0a32d843eda8b9ef67c01895fb55c4d95373b82", "unresolved": false, "patch_set": 5, "id": "dab17558_9c63e8b0", "line": 116, "range": {"start_line": 116, "start_character": 0, "end_line": 116, "end_character": 4}, "in_reply_to": "dab17558_cfc82c58", "updated": "2016-05-16 16:13:03.000000000", "message": "I would like to leave the duplicate check to db by setting 'oob_fingerprint' as a primary key, so seems the performance impact is not very much.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "45b542ccabd8348c1d7d7db3471d89b3ba6a71c9", "unresolved": false, "patch_set": 5, "id": "dab17558_29f24a9a", "line": 140, "updated": "2016-05-11 14:20:17.000000000", "message": "Add new field to db.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "2f2039eb456a54beba9883e141cc6b021b937ff7", "unresolved": false, "patch_set": 5, "id": "dab17558_2743d343", "line": 141, "updated": "2016-05-16 13:01:36.000000000", "message": "And add the get_distinct_properties() method. Also, what is this DISTINCT_PROPERTIES about? Is get_distinct_properties() not enough? Or is it just for visibility?", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "f0a32d843eda8b9ef67c01895fb55c4d95373b82", "unresolved": false, "patch_set": 5, "id": "dab17558_1ccc1888", "line": 141, "in_reply_to": "dab17558_2743d343", "updated": "2016-05-16 16:13:03.000000000", "message": "just for visibility with some descriptions like other properties like REQUIRED_PROPERTIES.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 7711, "name": "Yuriy Zveryanskyy", "email": "yzveryanskyy@mirantis.com", "username": "yuriyz"}, "change_message_id": "45b542ccabd8348c1d7d7db3471d89b3ba6a71c9", "unresolved": false, "patch_set": 5, "id": "dab17558_042f6d88", "line": 158, "updated": "2016-05-11 14:20:17.000000000", "message": "Looks like upgrade script will be needed. For example \"get_distinct_properties()\" method added to out of tree driver, and I want to use this feature with existing nodes.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "0c1d7034db9a38cd76e25104dada7d13d8dae5ad", "unresolved": false, "patch_set": 5, "id": "dab17558_4ac8b722", "line": 158, "in_reply_to": "dab17558_042f6d88", "updated": "2016-05-16 01:45:09.000000000", "message": "yes Sir, will add that in the coming patch set.", "commit_id": "26cea6f1b8a3295e3c544cc4cf0278a6d628602c"}, {"author": {"_account_id": 2889, "name": "Aeva Black", "email": "aeva.online@gmail.com", "username": "tenbrae"}, "change_message_id": "67266a92de9874e1e211504b5f2ecdc356dd2dcd", "unresolved": false, "patch_set": 6, "id": "1a95cdbc_b3015a07", "line": 20, "updated": "2016-10-10 18:02:19.000000000", "message": "AIUI, each Node must have one or more Port resources associated with it, in order\nto be able to provision an instance on it.\n\nport.address has a UNIQUE index on it; it is not possible to have more than one\nPort with the same MAC address, and therefore it is not possible to have the same\nNode registered twice in Ironic.\n\nSo I understand the problem description here -- if you only input driver_info, and do not associate any Ports with the Node, it is possible to enroll duplicates -- but I don't think this actually causes problems for operators.", "commit_id": "cc948dd883231038952f6cb846f51b268fe29b49"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "a2501158c8eb7eb77fb325494046a5a365cd2823", "unresolved": false, "patch_set": 6, "id": "3f79a3b5_779b0315", "line": 20, "updated": "2018-10-16 10:12:22.000000000", "message": "It does cause problems in our workflow, when the nodes are enrolled with IPMI addresses, and then introspection is used to detect the ports (and fails because of duplicate nodes).", "commit_id": "cc948dd883231038952f6cb846f51b268fe29b49"}]}}, "openstack%2Fironic~master~Ie3338a68410736984409c0a53b288398c91d4dee": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": -1, "date": "2016-05-25 10:40:06.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, {"value": 1, "date": "2016-05-23 06:18:43.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7882, "name": "Yuiko Takada Mori", "email": "yuiko-mori@nec.com", "username": "YuikoTakada"}, {"value": -1, "date": "2016-05-23 14:51:08.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20311, "name": "Cisco CI", "email": "ironic_ci@external.cisco.com", "username": "cisco_ironic_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}], "comments": {"devstack/lib/ironic": [{"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "8d90a8750efebb2276a5f28afd3f3ebc12e503d2", "unresolved": false, "patch_set": 1, "id": "bab6814e_00662729", "line": 517, "updated": "2016-05-23 14:51:08.000000000", "message": "What if I don't want to use swift and use direct http urls?", "commit_id": "de9219f3f691c6290264bd55f0db7fff16763056"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "2fd641fbde05ee27ec26e1ddf918cf83733e5682", "unresolved": false, "patch_set": 1, "id": "bab6814e_26d8357f", "line": 517, "in_reply_to": "bab6814e_00662729", "updated": "2016-05-25 10:40:06.000000000", "message": "+1 to Vlad here. By adding s-* to required services will prevent devstack installing ironic with agent-* and without swift, which is possible at the moment if SWIFT_ENABLE_TEPRURL=True.", "commit_id": "de9219f3f691c6290264bd55f0db7fff16763056"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "2fd641fbde05ee27ec26e1ddf918cf83733e5682", "unresolved": false, "patch_set": 1, "id": "bab6814e_c62a09e7", "line": 526, "updated": "2016-05-25 10:40:06.000000000", "message": "Configuring swift is not mandatory required for Ironic and agent_* driver. It is possible to configure Ironic with RadosGW or direct http links.\nMight be introduce a new variable called\nIRONIC_USER_IMAGES_LOCATION which defines a location where user images are stored: http (for direct http links), swift (for swift case), radosgw (when using Rados GW swift API).\n\nConfigure swift options (L522, L527-533) only when IRONIC_USER_IMAGES_LOCATION == \"swift\"", "commit_id": "de9219f3f691c6290264bd55f0db7fff16763056"}]}}, "openstack%2Fironic~master~Id9682ebdd3bbe6b4df7d607a2e499c50d7ca475a": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": -1, "date": "2016-12-19 12:42:10.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 17998, "name": "UFCG OneView CI", "email": "ufcg-oneview-ci@lsd.ufcg.edu.br", "username": "ufcg-oneview-ci", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2016-12-19 18:21:15.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19003, "name": "Fujitsu iRMC CI", "email": "fj-lsoft-irmcci@dl.jp.fujitsu.com", "username": "Fujitsu_iRMC_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "4c2260ffbf6320b2243f3ad83435b7eb44922602", "unresolved": false, "patch_set": 2, "id": "1a6eadb0_800b007d", "line": 13, "updated": "2016-12-19 12:42:10.000000000", "message": "Why partial?", "commit_id": "ac9d56a3cf5f1f0d580f3804774512e3a7661b13"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "96fef6d3ff35829238a13e4b2a78f336c0ba8eca", "unresolved": false, "patch_set": 2, "id": "1a6eadb0_78eda78d", "line": 13, "in_reply_to": "1a6eadb0_38208ff7", "updated": "2016-12-19 18:22:54.000000000", "message": "Oh, it's partial because the bug also references that this happens during cleaning as well. Please disregard the comment above.", "commit_id": "ac9d56a3cf5f1f0d580f3804774512e3a7661b13"}, {"author": {"_account_id": 13295, "name": "Mario Villaplana", "email": "mario.villaplana@gmail.com", "username": "mariojv"}, "change_message_id": "c87bea548b39584b419a172e025c3041876c1a2c", "unresolved": false, "patch_set": 2, "id": "1a6eadb0_38208ff7", "line": 13, "in_reply_to": "1a6eadb0_800b007d", "updated": "2016-12-19 18:21:15.000000000", "message": "+1. Does this not fix the bug?\n\nYou can use \"Closes-Bug\" if this is all that's needed to resolve the issue.\n\nhttps://wiki.openstack.org/wiki/GitCommitMessages", "commit_id": "ac9d56a3cf5f1f0d580f3804774512e3a7661b13"}], "ironic/conductor/base_manager.py": [{"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "4c2260ffbf6320b2243f3ad83435b7eb44922602", "unresolved": false, "patch_set": 2, "id": "1a6eadb0_a0b47cd1", "line": 182, "updated": "2016-12-19 12:42:10.000000000", "message": "this is not covered by unittests.", "commit_id": "ac9d56a3cf5f1f0d580f3804774512e3a7661b13"}, {"author": {"_account_id": 14525, "name": "Vasyl Saienko", "email": "vsaienko@mirantis.com", "username": "vsaienko"}, "change_message_id": "4c2260ffbf6320b2243f3ad83435b7eb44922602", "unresolved": false, "patch_set": 2, "id": "1a6eadb0_40b568ce", "line": 362, "updated": "2016-12-19 12:42:10.000000000", "message": "Please add unittests for new param.", "commit_id": "ac9d56a3cf5f1f0d580f3804774512e3a7661b13"}]}}, "x%2Fmogan~master~I8b520b94ec3cccd8300c32abc8f937396981acd6": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, {"value": 1, "date": "2017-07-27 01:34:45.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8290, "name": "liusheng", "email": "liusheng2048@gmail.com", "username": "LiuSheng"}], "comments": {"mogan/scheduler/client/report.py": [{"author": {"_account_id": 8290, "name": "liusheng", "email": "liusheng2048@gmail.com", "username": "LiuSheng"}, "change_message_id": "f9610ac23f6ff0756f7548a5b69b1a26f0984051", "unresolved": false, "patch_set": 2, "id": "ff346bd7_57d9ad7c", "line": 119, "range": {"start_line": 119, "start_character": 9, "end_line": 119, "end_character": 50}, "updated": "2017-07-27 01:34:45.000000000", "message": "nit: why don't just set the PLACEMENT_API_VERSION as default value of \"version\" parameter", "commit_id": "19f7b913fa9b48eb0ed2661ed816647d87734ecb"}, {"author": {"_account_id": 6610, "name": "Zhenguo Niu", "email": "Niu.ZGlinux@gmail.com", "username": "niu-zglinux"}, "change_message_id": "b39175f311aa7c6baa056c0e94d2689643d8b0ee", "unresolved": false, "patch_set": 2, "id": "ff346bd7_d77c7d20", "line": 119, "range": {"start_line": 119, "start_character": 9, "end_line": 119, "end_character": 50}, "in_reply_to": "ff346bd7_57d9ad7c", "updated": "2017-07-27 01:46:04.000000000", "message": "actually, I don't quite like the version parameter, lol.\n\nI will mark this as WIP, and just use a decent api version for aggregate API, then find an appropriate fixed version later.", "commit_id": "19f7b913fa9b48eb0ed2661ed816647d87734ecb"}]}}, "x%2Fmogan~master~I6bf4745f2d99b427163a6b1a8bc7cf9338fa9b22": {"owner_id": 6610, "owner_name": "Zhenguo Niu", "owner_email": "Niu.ZGlinux@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fdesignate~master~Id28c44467da9c0df8c7f2b0bec3bb87cac9afb24": {"owner_id": 27633, "owner_name": "miaoyuliang", "owner_email": "miaoyuliang_yewu@cmss.chinamobile.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2018-06-20 10:57:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "93183262f1bd58bff5a38053a220222bfe29f985", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_d8c95fac", "line": 7, "updated": "2018-06-20 11:29:21.000000000", "message": "Please make this header shorter (one line only and less than 50 characters), like\n\n\"Add missing steps for RDO installation guide\"", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "93183262f1bd58bff5a38053a220222bfe29f985", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_f8cc5bbc", "line": 13, "updated": "2018-06-20 11:29:21.000000000", "message": "This should be \"Closes-Bug: ...\"\n\nSee https://docs.openstack.org/infra/manual/developers.html#working-on-bugs", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}], "doc/source/install/install-rdo.rst": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_95f7328d", "line": 7, "updated": "2018-06-20 10:57:51.000000000", "message": "While we are at it, maybe add a link to the global installation guide and mention that we need DB, rabbitmq and keystone installed before this can work.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_d57b6a78", "line": 79, "updated": "2018-06-20 10:57:51.000000000", "message": "These two seem useful, but I'd merge them into the key creation step above.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_f5f30608", "line": 81, "updated": "2018-06-20 10:57:51.000000000", "message": "In my test this directory has mode 755, so this doesn't seem necessary.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_95dad276", "line": 83, "updated": "2018-06-20 10:57:51.000000000", "message": "Dito.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_55e43a3c", "line": 85, "updated": "2018-06-20 10:57:51.000000000", "message": "This file doesn't even exist for me, where do you get this from?", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_95ce5259", "line": 87, "updated": "2018-06-20 10:57:51.000000000", "message": "This seems like a bug in named.conf, there is a directory \"/var/named/slaves\" with proper permissions, but the slave files with current config are created in \"/var/named\" instead, so maybe try to find the correct config option for this instead.\n\nAlso the group is \"named\" anyway and the \"-R\" also seems unnecessary.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "93183262f1bd58bff5a38053a220222bfe29f985", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_98da0777", "line": 87, "in_reply_to": "5f7c97a3_95ce5259", "updated": "2018-06-20 11:29:21.000000000", "message": "O.k., there seems to be no option to change the directory where these files are created, so doing\n\nchown named /var/named\n\nwould seem o.k. to me. Probably then leaving these three ch... commands in this new section is fine, too.", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "4aa3932b27bb9f881fa00e30f3c523349d550ef5", "unresolved": false, "patch_set": 1, "id": "5f7c97a3_357adeef", "line": 98, "updated": "2018-06-20 10:57:51.000000000", "message": "While testing I noticed that this section is missing setting up the \"transport_url\" variable, would you like to add this, too?", "commit_id": "52d82b80ce16835fd9f068d869da513a0b721fcd"}]}}, "openstack%2Ftripleo-validations~master~Icb6591068c7d13e5adc6e5876fea07063163b43e": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 14:16:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-23 13:00:27.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 0, "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}], "comments": {}}, "openstack%2Fneutron~master~Ie9a10739d8ac60c45d6b17a4f06008232fea73d8": {"owner_id": 19714, "owner_name": "tony", "owner_email": "yanhongchang5@163.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}], "comments": {}}, "openstack%2Fpuppet-nova~master~Ic248ff1250255ed8a9b8c9aecb077cbb67602d29": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 2, "date": "2020-03-23 13:01:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fceilometer~master~Ia8fea320d8b09a89c999ace06769436a5335bcc6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 05:46:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ide91bd5956bcbbec36d865865c32cc6430d59a49": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-20 22:14:24.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~Ide91bd5956bcbbec36d865865c32cc6430d59a49": {"owner_id": 24245, "owner_name": "Harald Jens\u00e5s", "owner_email": "hjensas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-20 22:14:17.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~Id3e52ba920c54c98529ecb5f723ba452362a0b32": {"owner_id": 8367, "owner_name": "Arx Cruz", "owner_email": "arxcruz@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 16:48:24.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2020-03-23 20:23:11.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I21b12c97b3194ee02e23bda3f9e6e2c63a20b1b1": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18846, "name": "RedHat RDO CI", "email": "rdo-ci-admins@redhat.com", "username": "rdo-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart-extras~master~I1f36539a26d112d1992575e0979ead3e5cc3a58d": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 14:21:18.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": -2, "date": "2020-02-10 15:26:40.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {}}, "openstack%2Fnetworking-generic-switch~master~Ie858c6a8958f4d86f986f4b341418089e72c3463": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 00:53:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 2, "date": "2020-03-24 05:21:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}], "comments": {}}, "openstack%2Ftripleo-ci~master~I9d13c274192718a07f4282485cc7f5de228ba093": {"owner_id": 8367, "owner_name": "Arx Cruz", "owner_email": "arxcruz@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-03-23 16:48:31.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-23 20:18:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "66aa1199a32ddea464b83ff93c8aac7bd7187cb7", "unresolved": false, "patch_set": 4, "id": "1fa4df85_39f64565", "line": 9, "range": {"start_line": 9, "start_character": 4, "end_line": 9, "end_character": 27}, "updated": "2020-03-20 07:44:56.000000000", "message": "do we have a bug for that? with a bug we can reach out and get help if we need to fix containerd itself.\n\neven if we  proceed with this as a workaround a bug will help us track it until the \"proper fix\"", "commit_id": "44f729ffc4f4256cc5d137bad066d772897b3468"}], "roles/build-containers/tasks/main.yaml": [{"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "3cd42c2e0e639cb27546556837a3cfba45793dc4", "unresolved": false, "patch_set": 1, "id": "1fa4df85_a7e1d4fe", "line": 75, "updated": "2020-03-18 15:28:30.000000000", "message": "the repo needs to land in $user/repos/ perhaps that is done in a previous task.. cp /etc/yum.repos.d/* to $user/repos. but check..", "commit_id": "4fd06f3914b37c00bed6d58eca23d2ebcf444dec"}, {"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "3cd42c2e0e639cb27546556837a3cfba45793dc4", "unresolved": false, "patch_set": 1, "id": "1fa4df85_67ebdcdb", "line": 83, "updated": "2020-03-18 15:28:30.000000000", "message": "this task needs a when clause to be specific to RHEL 8", "commit_id": "4fd06f3914b37c00bed6d58eca23d2ebcf444dec"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "3e6925385a47f114df7419d9b213d01b5033f305", "unresolved": false, "patch_set": 4, "id": "1fa4df85_9342cc67", "line": 72, "range": {"start_line": 71, "start_character": 1, "end_line": 72, "end_character": 8}, "updated": "2020-03-19 10:59:51.000000000", "message": "isn't better to fix collectd not trying to disable not existing repos??", "commit_id": "44f729ffc4f4256cc5d137bad066d772897b3468"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "66aa1199a32ddea464b83ff93c8aac7bd7187cb7", "unresolved": false, "patch_set": 4, "id": "1fa4df85_f9ebcd74", "line": 72, "range": {"start_line": 71, "start_character": 1, "end_line": 72, "end_character": 8}, "in_reply_to": "1fa4df85_9342cc67", "updated": "2020-03-20 07:44:56.000000000", "message": "+1 but even if we want/need to do that for now 'because urgent' then at least file a bug so we can track this and remove it once the proper fix arrives", "commit_id": "44f729ffc4f4256cc5d137bad066d772897b3468"}]}}, "airship%2Fdrydock~master~I302e931a982187879b4f40ef42f125faf097fc37": {"owner_id": 31207, "owner_name": "Raven", "owner_email": "rdaughe@siue.edu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31006, "name": "Jordan Kramer", "email": "b_bowler13@yahoo.com", "username": "jkramer"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "195fd65a65e74ca753f23ea3783ea66a8f0f54b3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8e0dbf36", "line": 20, "range": {"start_line": 20, "start_character": 6, "end_line": 20, "end_character": 10}, "updated": "2019-12-05 15:57:07.000000000", "message": "Don't forget to add the job here so it gets executed", "commit_id": "71e1226694e2e39e636187e0d0683efb86c414a6"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "195fd65a65e74ca753f23ea3783ea66a8f0f54b3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4e13475a", "line": 26, "range": {"start_line": 26, "start_character": 4, "end_line": 26, "end_character": 9}, "updated": "2019-12-05 15:57:07.000000000", "message": "Same to this list, since this is a voting job.", "commit_id": "71e1226694e2e39e636187e0d0683efb86c414a6"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "195fd65a65e74ca753f23ea3783ea66a8f0f54b3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ee2553af", "line": 47, "range": {"start_line": 47, "start_character": 36, "end_line": 47, "end_character": 37}, "updated": "2019-12-05 15:57:07.000000000", "message": "trailing whitespace", "commit_id": "71e1226694e2e39e636187e0d0683efb86c414a6"}, {"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_6c5aaf82", "line": 49, "range": {"start_line": 49, "start_character": 6, "end_line": 49, "end_character": 13}, "updated": "2019-12-08 09:33:15.000000000", "message": "perform", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}, {"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_2c50375e", "line": 55, "range": {"start_line": 55, "start_character": 0, "end_line": 55, "end_character": 20}, "updated": "2019-12-08 09:33:15.000000000", "message": "aren't there yaml files in charts/*?", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "db333b7067f6e001b0331a556f07b61db3856ed8", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_3aff1701", "line": 43, "range": {"start_line": 13, "start_character": 2, "end_line": 43, "end_character": 0}, "updated": "2020-02-10 05:56:18.000000000", "message": "Job airship-drydock-docker-build-gate not defined", "commit_id": "c2ab25cda4f88dd2ad18c9f4abd13e7d2fe4fab5"}], "charts/drydock/templates/configmap-bin.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_76681887", "updated": "2019-12-10 17:32:00.000000000", "message": "If we ignore templates in other repositories, we should also ignore them here.", "commit_id": "831160b730791fc38b878ff3d9636322e133936a"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_d66d4c99", "line": 36, "range": {"start_line": 36, "start_character": 3, "end_line": 36, "end_character": 5}, "updated": "2019-12-10 17:32:00.000000000", "message": "trailing whitespace", "commit_id": "831160b730791fc38b878ff3d9636322e133936a"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_a211e75e", "line": 36, "range": {"start_line": 36, "start_character": 3, "end_line": 36, "end_character": 5}, "updated": "2020-01-16 16:28:48.000000000", "message": "trailing whitespace", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_8a120ffe", "line": 36, "range": {"start_line": 36, "start_character": 3, "end_line": 36, "end_character": 5}, "updated": "2020-02-17 13:05:46.000000000", "message": "Trailing space.", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_764f3569", "line": 36, "range": {"start_line": 36, "start_character": 3, "end_line": 36, "end_character": 5}, "in_reply_to": "3fa7e38b_8a120ffe", "updated": "2020-02-20 17:40:05.000000000", "message": "Done", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "charts/drydock/templates/configmap-etc.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_cc4883b5", "side": "PARENT", "line": 14, "range": {"start_line": 14, "start_character": 33, "end_line": 14, "end_character": 37}, "updated": "2019-12-08 09:33:15.000000000", "message": "should not change these gotpl comment back to yaml comments - so they don't get rendered by helm.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_bd2268a5", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 3}, "updated": "2020-01-16 16:28:48.000000000", "message": "Could we move this underneath the header to match existing files with markers? To L17", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}], "charts/drydock/templates/deployment.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_8cc4cb0f", "side": "PARENT", "line": 17, "range": {"start_line": 17, "start_character": 17, "end_line": 17, "end_character": 18}, "updated": "2019-12-08 09:33:15.000000000", "message": "why remove the -?", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_fd2f8086", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 3}, "updated": "2020-01-16 16:28:48.000000000", "message": "Ditto; same anywhere else this is the case.", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}], "charts/drydock/templates/ingress.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_0cd8dbed", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 3}, "updated": "2019-12-08 09:33:15.000000000", "message": "duplicate. With he change to the comment, this just create an empty yaml.", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}], "charts/drydock/templates/job-drydock-db-init.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_2cd597b7", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 3}, "updated": "2019-12-08 09:33:15.000000000", "message": "not needed", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}], "charts/drydock/templates/job-drydock-db-sync.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_ecda1fe4", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 3}, "updated": "2019-12-08 09:33:15.000000000", "message": "not needed", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}, {"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_ccdde3de", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 3}, "updated": "2019-12-08 09:33:15.000000000", "message": "?", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}], "charts/drydock/templates/job-ks-endpoints.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_8cedab8f", "side": "PARENT", "line": 16, "range": {"start_line": 16, "start_character": 3, "end_line": 16, "end_character": 4}, "updated": "2019-12-08 09:33:15.000000000", "message": "why remove these spaces?", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}], "charts/drydock/templates/job-ks-service.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_bd47c852", "line": 21, "updated": "2020-01-16 16:28:48.000000000", "message": "Extra line at EOF", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}], "python/drydock_provisioner/schemas/baremetalNode.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_56071cca", "side": "PARENT", "line": 68, "range": {"start_line": 67, "start_character": 0, "end_line": 68, "end_character": 36}, "updated": "2019-12-10 17:32:00.000000000", "message": "Why was this removed?", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "4bfb81f8ea2e99e5704b3805b1789e5d52c4acb2", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_43a0bda5", "side": "PARENT", "line": 68, "range": {"start_line": 67, "start_character": 0, "end_line": 68, "end_character": 36}, "in_reply_to": "3fa7e38b_56071cca", "updated": "2019-12-10 20:20:05.000000000", "message": "Duplicate on line 59.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_3d3bd8c9", "side": "PARENT", "line": 68, "range": {"start_line": 67, "start_character": 0, "end_line": 68, "end_character": 36}, "updated": "2020-01-16 16:28:48.000000000", "message": "Why remove this? This is a functional item.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "da359bbcfbac07081cd21d1db56f14e3ba654984", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_1e08537e", "side": "PARENT", "line": 68, "range": {"start_line": 67, "start_character": 0, "end_line": 68, "end_character": 36}, "in_reply_to": "3fa7e38b_3d3bd8c9", "updated": "2020-01-16 19:09:58.000000000", "message": "Duplicate on line 59. Produces error when including both.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_2ad99b54", "line": 67, "range": {"start_line": 65, "start_character": 20, "end_line": 67, "end_character": 31}, "updated": "2020-02-17 13:05:46.000000000", "message": "Why removed volume_group?", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_7cb2ef07", "line": 67, "range": {"start_line": 65, "start_character": 20, "end_line": 67, "end_character": 31}, "in_reply_to": "3fa7e38b_2ad99b54", "updated": "2020-02-20 17:40:05.000000000", "message": "Duplicate on line 59", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "python/drydock_provisioner/schemas/hostProfile.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3604e0c5", "side": "PARENT", "line": 59, "range": {"start_line": 58, "start_character": 0, "end_line": 59, "end_character": 36}, "updated": "2019-12-10 17:32:00.000000000", "message": "Why was this removed?", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "4bfb81f8ea2e99e5704b3805b1789e5d52c4acb2", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_a3bf31c8", "side": "PARENT", "line": 59, "range": {"start_line": 58, "start_character": 0, "end_line": 59, "end_character": 36}, "in_reply_to": "3fa7e38b_3604e0c5", "updated": "2019-12-10 20:20:05.000000000", "message": "The linter detected the duplicate on line 50 and returned an error.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}], "python/tests/yaml_samples/baremetalNode.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "4d830e06fd962846b23c85d48ab13b767f293a48", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_ccf6435f", "line": 35, "updated": "2019-12-08 09:33:15.000000000", "message": "why add a line here?", "commit_id": "368f0a4130b0eda7b818a958ae73992b64c09fed"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b6f770d4", "line": 35, "updated": "2019-12-10 17:32:00.000000000", "message": "Is this a rule that the job is enforcing? I don't understand the benefit of adding an extra empty line at the end of the document.", "commit_id": "831160b730791fc38b878ff3d9636322e133936a"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "4bfb81f8ea2e99e5704b3805b1789e5d52c4acb2", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_23a9018e", "line": 35, "in_reply_to": "3fa7e38b_b6f770d4", "updated": "2019-12-10 20:20:05.000000000", "message": "Yes, the linter returned errors on a few files stating the extra line was required.", "commit_id": "831160b730791fc38b878ff3d9636322e133936a"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_bd7028a9", "line": 35, "updated": "2020-01-16 16:28:48.000000000", "message": "Extra line added.", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}], "python/tests/yaml_samples/baremetalNode2.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_dd73a4b2", "line": 23, "updated": "2020-01-16 16:28:48.000000000", "message": "Same", "commit_id": "d4746f6797e924b078796af06d049d8c25fd6350"}], "python/tests/yaml_samples/invalid.yaml": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_ca8b2721", "updated": "2020-02-17 13:05:46.000000000", "message": "This file seems to be broken.", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_f6bd65b2", "in_reply_to": "3fa7e38b_ca8b2721", "updated": "2020-02-20 17:40:05.000000000", "message": "Done", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "python/tests/yaml_samples/invalid_validation.yaml": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_ca74873b", "line": 352, "range": {"start_line": 352, "start_character": 0, "end_line": 352, "end_character": 27}, "updated": "2020-02-17 13:05:46.000000000", "message": "Why?", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_56da3948", "line": 352, "range": {"start_line": 352, "start_character": 0, "end_line": 352, "end_character": 27}, "in_reply_to": "3fa7e38b_ca74873b", "updated": "2020-02-20 17:40:05.000000000", "message": "Fixed: initial error with having 2 address headers under network", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "python/tests/yaml_samples/unknown_kind.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "db8b27d5c4202c648bed0b034caac243e5cf12ff", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_1d593c28", "side": "PARENT", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 15}, "updated": "2020-01-16 16:28:48.000000000", "message": "We still need this.", "commit_id": "3b4738efd1359c195f096e4901a2812b1b4d8ea8"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_ca99e76c", "line": 5, "range": {"start_line": 4, "start_character": 0, "end_line": 5, "end_character": 18}, "updated": "2020-02-17 13:05:46.000000000", "message": "Why name is removed?", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_d6b709f7", "line": 5, "range": {"start_line": 4, "start_character": 0, "end_line": 5, "end_character": 18}, "in_reply_to": "3fa7e38b_ca99e76c", "updated": "2020-02-20 17:40:05.000000000", "message": "duplicates line 5 & 8", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "tools/gate/playbooks/docker-image-build.yaml": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "0c720eedf0fe535edc075d78d3e81d6db7b18f33", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_aab90bc6", "line": 54, "range": {"start_line": 54, "start_character": 14, "end_line": 54, "end_character": 20}, "updated": "2020-02-17 13:05:46.000000000", "message": "This is boolean, not string.", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}, {"author": {"_account_id": 31207, "name": "Raven", "email": "rdaughe@siue.edu", "username": "Raven"}, "change_message_id": "1aa1035555c2869c05260bc79dc2fc2d3be46463", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_96a671bf", "line": 54, "range": {"start_line": 54, "start_character": 14, "end_line": 54, "end_character": 20}, "in_reply_to": "3fa7e38b_aab90bc6", "updated": "2020-02-20 17:40:05.000000000", "message": "Done", "commit_id": "1ab75d51f74219ce404ed7c4696957971f0027ea"}], "tools/gate/playbooks/lint-yaml.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "195fd65a65e74ca753f23ea3783ea66a8f0f54b3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ce20979d", "line": 20, "range": {"start_line": 20, "start_character": 11, "end_line": 20, "end_character": 13}, "updated": "2019-12-05 15:57:07.000000000", "message": "trailing whitespace", "commit_id": "71e1226694e2e39e636187e0d0683efb86c414a6"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "957a0963dc5cb68794c62cc55de964b94119cf12", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6fa2ba41", "line": 13, "range": {"start_line": 13, "start_character": 9, "end_line": 13, "end_character": 16}, "updated": "2019-12-05 22:18:52.000000000", "message": "Just like your change against the Pegleg repository, I think this also needs to be \"ubuntu-bionic\". The playbook doesn't seem to be executing anything here either.", "commit_id": "95ad7522839420884dfed733753bd24bbb207e7c"}], "tools/gate/playbooks/yamllint-config.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "19b3c416eb87f80c29ad3140bc73442e52bef412", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_96f834c1", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 28}, "updated": "2019-12-10 17:32:00.000000000", "message": "The job shouldn't trigger on changes that modify files in this directory, or it can unnecessarily tie down jobs.", "commit_id": "831160b730791fc38b878ff3d9636322e133936a"}]}}, "openstack%2Fcinder~master~I79469d4adaf06e0d8bb3752998e9810da0c4e496": {"owner_id": 25648, "owner_name": "wang yong", "owner_email": "yongwc@foxmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 13:14:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 12:22:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-glance~master~Iaed980290c707463652c36928ec24f603301a183": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 23:18:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 2, "date": "2020-03-23 13:00:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fironic~master~Iad7ca2c1f2ab5ab49493f9c7fe4738fc0bcdb5f4": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 2, "date": "2020-03-23 18:51:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-03-24 04:54:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"doc/source/contributor/dev-quickstart.rst": [{"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "67fddc5e2757b5bb1e63d3425329d23b6add591a", "unresolved": false, "patch_set": 1, "id": "1fa4df85_e4614f13", "line": 668, "range": {"start_line": 668, "start_character": 0, "end_line": 668, "end_character": 39}, "updated": "2020-03-13 10:40:47.000000000", "message": "How about adding sth here like \"including the setup of the ironic tempest plugin as described above\" to make sure that readers understand that they have to do sth in addition to a'standard' devstack deployment when they want to run tempest?", "commit_id": "39136441e3a4ff91e4349a8c31489b60071f68c2"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "26626c6d8387b3d760d772f88b87d89f91421876", "unresolved": false, "patch_set": 1, "id": "1fa4df85_3f18ce73", "line": 668, "range": {"start_line": 668, "start_character": 0, "end_line": 668, "end_character": 39}, "in_reply_to": "1fa4df85_e4614f13", "updated": "2020-03-13 10:48:01.000000000", "message": "Yeah, it makes sense!", "commit_id": "39136441e3a4ff91e4349a8c31489b60071f68c2"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "831f1a152b36102734df89686a900baf08bebedf", "unresolved": false, "patch_set": 2, "id": "1fa4df85_3fc1ae2f", "line": 668, "range": {"start_line": 668, "start_character": 41, "end_line": 668, "end_character": 45}, "updated": "2020-03-13 11:26:46.000000000", "message": "this \"and\" should not be there I think", "commit_id": "66e30c20a4613eec9221f0c128c268dd697865b2"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "9c173a3b44ce0955b55858d05347437b13e59e80", "unresolved": false, "patch_set": 2, "id": "1fa4df85_1a2080f7", "line": 668, "range": {"start_line": 668, "start_character": 41, "end_line": 668, "end_character": 45}, "in_reply_to": "1fa4df85_3fc1ae2f", "updated": "2020-03-13 12:27:32.000000000", "message": "yeah .-.", "commit_id": "66e30c20a4613eec9221f0c128c268dd697865b2"}, {"author": {"_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, "change_message_id": "14f2fa01911d0fa00bdba5ef3ad805b5ac60f7c0", "unresolved": false, "patch_set": 3, "id": "1fa4df85_bca12798", "line": 525, "range": {"start_line": 516, "start_character": 3, "end_line": 525, "end_character": 57}, "updated": "2020-03-13 15:26:40.000000000", "message": "It would be better if we add this as a separate section instead of note. Also it would be easier to provide a reference to this section at L670 where we refer to this portion.", "commit_id": "70fa10e5ed4cb2b701c62c9e53704f48a16a8660"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "4a28a379eeb579df09f352daf9dbbba2b5a9a1f4", "unresolved": false, "patch_set": 3, "id": "1fa4df85_7caacf19", "line": 525, "range": {"start_line": 516, "start_character": 3, "end_line": 525, "end_character": 57}, "in_reply_to": "1fa4df85_bca12798", "updated": "2020-03-13 15:43:09.000000000", "message": "Hi Shivanand, \n\nMaybe not in a separete section (because people wold finish this one and would run stack.sh)\n\nWe could add  another configuration example saying that is the one where you have the ironic-tempest-plugin and will be able to run the tests?", "commit_id": "70fa10e5ed4cb2b701c62c9e53704f48a16a8660"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "de42df0ff02eec756e2bd110b82030a315afcc56", "unresolved": false, "patch_set": 4, "id": "1fa4df85_cbe640b1", "line": 536, "updated": "2020-03-19 20:06:46.000000000", "message": "I'd highlight that this is a typical example, just so people grasp that it may differ for their local use.", "commit_id": "c9229eb4438eec7ac514f72dd116042856e03031"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "71dcd1ed24180ab415fea5ef583c6fcce22eac00", "unresolved": false, "patch_set": 4, "id": "df33271e_906f82c4", "line": 536, "in_reply_to": "1fa4df85_cbe640b1", "updated": "2020-03-20 18:59:37.000000000", "message": "Done", "commit_id": "c9229eb4438eec7ac514f72dd116042856e03031"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "de42df0ff02eec756e2bd110b82030a315afcc56", "unresolved": false, "patch_set": 4, "id": "1fa4df85_6bde2cdb", "line": 617, "updated": "2020-03-19 20:06:46.000000000", "message": "It is likely worth noting that some tests are reliant upon specific drivers or capabilities having been configured and that they may skip based upon the configuration of the environment.", "commit_id": "c9229eb4438eec7ac514f72dd116042856e03031"}, {"author": {"_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, "change_message_id": "71dcd1ed24180ab415fea5ef583c6fcce22eac00", "unresolved": false, "patch_set": 4, "id": "df33271e_d5029c3e", "line": 617, "in_reply_to": "1fa4df85_6bde2cdb", "updated": "2020-03-20 18:59:37.000000000", "message": "Done", "commit_id": "c9229eb4438eec7ac514f72dd116042856e03031"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "b14fb05d33552cb1da2c28cbb1313ba97f8fe154", "unresolved": false, "patch_set": 5, "id": "df33271e_fb597cfe", "line": 410, "range": {"start_line": 410, "start_character": 9, "end_line": 410, "end_character": 10}, "updated": "2020-03-23 14:18:17.000000000", "message": "nit: add \"it\"", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "b14fb05d33552cb1da2c28cbb1313ba97f8fe154", "unresolved": false, "patch_set": 5, "id": "df33271e_3b73e482", "line": 529, "range": {"start_line": 529, "start_character": 21, "end_line": 529, "end_character": 25}, "updated": "2020-03-23 14:18:17.000000000", "message": "nit: remove", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "00b7b335bf2cb63411c67a19a935043e7193c95b", "unresolved": false, "patch_set": 5, "id": "df33271e_b19435ea", "line": 529, "range": {"start_line": 529, "start_character": 21, "end_line": 529, "end_character": 25}, "in_reply_to": "df33271e_3b73e482", "updated": "2020-03-23 16:03:53.000000000", "message": "better: move it in between \"clone\" and \"ironic-tempest-plugin\" :)", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "b14fb05d33552cb1da2c28cbb1313ba97f8fe154", "unresolved": false, "patch_set": 5, "id": "df33271e_bb0414c8", "line": 537, "range": {"start_line": 537, "start_character": 66, "end_line": 537, "end_character": 70}, "updated": "2020-03-23 14:18:17.000000000", "message": "will use ?", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "b14fb05d33552cb1da2c28cbb1313ba97f8fe154", "unresolved": false, "patch_set": 5, "id": "df33271e_3b21244f", "line": 770, "range": {"start_line": 769, "start_character": 40, "end_line": 770, "end_character": 36}, "updated": "2020-03-23 14:18:17.000000000", "message": "maybe put this phrase after the next one ?", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}, {"author": {"_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, "change_message_id": "00b7b335bf2cb63411c67a19a935043e7193c95b", "unresolved": false, "patch_set": 5, "id": "df33271e_11aec12d", "line": 770, "range": {"start_line": 769, "start_character": 40, "end_line": 770, "end_character": 36}, "in_reply_to": "df33271e_3b21244f", "updated": "2020-03-23 16:03:53.000000000", "message": "++", "commit_id": "9d9203ba64d24b167513266940b155e6be833fd6"}]}}, "openstack%2Ftripleo-heat-templates~master~I835f8faf51dc47b300d5ebdc4e821f8c40daf065": {"owner_id": 23804, "owner_name": "Daniel Alvarez", "owner_email": "dalvarez@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-03-23 23:34:36.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 11082, "name": "Kamil Sambor", "email": "ksambor@redhat.com", "username": "ksambor"}, {"value": 1, "date": "2020-03-23 14:47:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 2, "date": "2020-03-23 20:35:43.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "airship%2Fmaas~master~Iea3ac2635e29fb53eb0223d4d27b936e8127b062": {"owner_id": 31207, "owner_name": "Raven", "owner_email": "rdaughe@siue.edu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31006, "name": "Jordan Kramer", "email": "b_bowler13@yahoo.com", "username": "jkramer"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "2c8934f651e47fa56be34b2cf1d28a2a06fb2776", "unresolved": false, "patch_set": 4, "id": "1fa4df85_c7a6ec0f", "line": 47, "range": {"start_line": 40, "start_character": 2, "end_line": 47, "end_character": 0}, "updated": "2020-03-07 18:09:26.000000000", "message": "The nodeset \"unbuntu-bionic\" was not found.", "commit_id": "f5c8b20506968bf8dc263a789170a97e7f2d66d0"}]}}, "openstack%2Fhorizon~stable%2Ftrain~I38a1c2c3455a10b4852d25f6c39b3c21f5c450fc": {"owner_id": 29313, "owner_name": "Vishal Manchanda", "owner_email": "manchandavishal143@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fnova~master~If5e8b050c43b3fed9a185394f2683ac2664bb98f": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 1, "date": "2020-03-19 18:06:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 2, "date": "2020-03-19 17:50:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 12:40:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/policies/instance_actions.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "55e3711574f082383877a371f2a6ab30e49aaae8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a0e4eea7", "line": 60, "range": {"start_line": 57, "start_character": 0, "end_line": 60, "end_character": 33}, "updated": "2020-02-13 18:16:06.000000000", "message": "you do not need to deprecate this as done in base class.", "commit_id": "20fd7a692f36b9994e13a40583a31cb397d50817"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "55e3711574f082383877a371f2a6ab30e49aaae8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e093c6fd", "line": 77, "range": {"start_line": 62, "start_character": 0, "end_line": 77, "end_character": 35}, "updated": "2020-02-13 18:16:06.000000000", "message": "we need to add granularity here to introduce new defaults.", "commit_id": "20fd7a692f36b9994e13a40583a31cb397d50817"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ee1d58a568e72de37de840892eb90b9451c6439a", "unresolved": false, "patch_set": 7, "id": "1fa4df85_6449485e", "line": 59, "range": {"start_line": 57, "start_character": 0, "end_line": 59, "end_character": 35}, "updated": "2020-03-06 10:15:04.000000000", "message": "I don't think you want this, and its going to break the tests I think.\n\nThis policy hasn't changed its name.", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4132441039088940a77b7ed5759fe2e329d1589c", "unresolved": false, "patch_set": 7, "id": "1fa4df85_2a3477fb", "line": 59, "range": {"start_line": 57, "start_character": 0, "end_line": 59, "end_character": 35}, "in_reply_to": "1fa4df85_2f4fa993", "updated": "2020-03-06 12:59:28.000000000", "message": "Yes, mee too, I think not only here causeed the failed, but ...", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "77c81b9e1ceb4fc44e1cfb582c752cd20459e65e", "unresolved": false, "patch_set": 7, "id": "1fa4df85_64b7083c", "line": 59, "range": {"start_line": 57, "start_character": 0, "end_line": 59, "end_character": 35}, "in_reply_to": "1fa4df85_6449485e", "updated": "2020-03-06 10:16:14.000000000", "message": "For context, I think this means the admin only API will now be accessible to everyone, I could be wrong.", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "2f9f945f446e6254fb72b694ebedfeddcf351882", "unresolved": false, "patch_set": 7, "id": "1fa4df85_2f4fa993", "line": 59, "range": {"start_line": 57, "start_character": 0, "end_line": 59, "end_character": 35}, "in_reply_to": "1fa4df85_64b7083c", "updated": "2020-03-06 11:57:17.000000000", "message": "I manually rolled back this change and the functional test still fails.  :/", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ee1d58a568e72de37de840892eb90b9451c6439a", "unresolved": false, "patch_set": 7, "id": "1fa4df85_447c4c82", "line": 77, "updated": "2020-03-06 10:15:04.000000000", "message": "I think this bit looks good.", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_1840ec06", "line": 29, "range": {"start_line": 29, "start_character": 5, "end_line": 29, "end_character": 41}, "updated": "2020-03-06 17:53:10.000000000", "message": "this is wrong rule name. you should use POLICY_ROOT % 'events'", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_b320d69c", "line": 29, "range": {"start_line": 29, "start_character": 5, "end_line": 29, "end_character": 41}, "in_reply_to": "1fa4df85_1840ec06", "updated": "2020-03-06 23:20:46.000000000", "message": "Done", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_84623fd7", "line": 31, "range": {"start_line": 23, "start_character": 0, "end_line": 31, "end_character": 1}, "updated": "2020-03-06 17:53:10.000000000", "message": "this seems interesting but i do not think oslo policy will maintain the two different check_str for same rule. later one will be overriding it", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_d358f231", "line": 31, "range": {"start_line": 23, "start_character": 0, "end_line": 31, "end_character": 1}, "in_reply_to": "1fa4df85_84623fd7", "updated": "2020-03-06 23:20:46.000000000", "message": "> later one will be overriding it.\n\nGot it, that's why the functional-py36 always failed, I ignored the ROOT_POLICY suffix ('events'), so the same check_str appeared.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_58d50443", "line": 62, "range": {"start_line": 62, "start_character": 23, "end_line": 62, "end_character": 54}, "updated": "2020-03-06 17:53:10.000000000", "message": "this does not support deprecation yet. i added the deprecation in this in https://review.opendev.org/#/c/706672/\n\nYou can rebase on top of that.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_933efab5", "line": 62, "range": {"start_line": 62, "start_character": 23, "end_line": 62, "end_character": 54}, "in_reply_to": "1fa4df85_58d50443", "updated": "2020-03-06 23:20:46.000000000", "message": "Done", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_64538318", "line": 73, "range": {"start_line": 64, "start_character": 0, "end_line": 73, "end_character": 10}, "updated": "2020-03-06 17:53:10.000000000", "message": "we can add granularity here though both are GET policy but in case user want to restrict the action detail from some user having list access.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_d3a6b20f", "line": 73, "range": {"start_line": 64, "start_character": 0, "end_line": 73, "end_character": 10}, "in_reply_to": "1fa4df85_64538318", "updated": "2020-03-06 23:20:46.000000000", "message": "Good idea, indeed, we should have both GET policy for the different API, that we can restrict the output list if some user want to get different result.\n\nI will separate this by follow up.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "35d648bd1afb45b182beb8daea24dc82b1b8a847", "unresolved": false, "patch_set": 10, "id": "1fa4df85_e2af2329", "line": 32, "range": {"start_line": 29, "start_character": 0, "end_line": 32, "end_character": 1}, "updated": "2020-03-11 16:16:22.000000000", "message": "you do not need to deprecate this. base rule handle the deprecation where the only check_str are replaced with new base rules.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aae9da3fac33a84c70f9ba4e3b222fe7cafaad69", "unresolved": false, "patch_set": 10, "id": "1fa4df85_0975bbcc", "line": 32, "range": {"start_line": 29, "start_character": 0, "end_line": 32, "end_character": 1}, "in_reply_to": "1fa4df85_e2af2329", "updated": "2020-03-12 04:41:07.000000000", "message": "Done", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "35d648bd1afb45b182beb8daea24dc82b1b8a847", "unresolved": false, "patch_set": 10, "id": "1fa4df85_624a5384", "line": 43, "range": {"start_line": 43, "start_character": 23, "end_line": 43, "end_character": 35}, "updated": "2020-03-11 16:16:22.000000000", "message": "this should be SYSTEM_READER? as this is to read the event data.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aae9da3fac33a84c70f9ba4e3b222fe7cafaad69", "unresolved": false, "patch_set": 10, "id": "1fa4df85_295bd754", "line": 43, "range": {"start_line": 43, "start_character": 23, "end_line": 43, "end_character": 35}, "in_reply_to": "1fa4df85_624a5384", "updated": "2020-03-12 04:41:07.000000000", "message": "Oh, sorry, I was missing that, yes, SYSTEM_READER is better, this is an event data for the user, I will update.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "35d648bd1afb45b182beb8daea24dc82b1b8a847", "unresolved": false, "patch_set": 10, "id": "1fa4df85_a53375f6", "line": 73, "range": {"start_line": 66, "start_character": 0, "end_line": 73, "end_character": 13}, "updated": "2020-03-11 16:16:22.000000000", "message": "Same comment as in the previous PS. we need to separate these policies to add granularity.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aae9da3fac33a84c70f9ba4e3b222fe7cafaad69", "unresolved": false, "patch_set": 10, "id": "1fa4df85_e9437fae", "line": 73, "range": {"start_line": 66, "start_character": 0, "end_line": 73, "end_character": 13}, "in_reply_to": "1fa4df85_a53375f6", "updated": "2020-03-12 04:41:07.000000000", "message": "Yeah, I have done of this, see https://review.opendev.org/#/c/711791/\n\nlater: merge to this patch.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e639b89041e9d4767a08337a4892464f459285c2", "unresolved": false, "patch_set": 13, "id": "1fa4df85_4b829dca", "line": 41, "range": {"start_line": 41, "start_character": 0, "end_line": 41, "end_character": 34}, "updated": "2020-03-15 23:43:08.000000000", "message": "you can modify this also to new policy os_compute_api:os-instance-actions:show", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e275f62e901529b703f4a8602e6c7a716bedc33d", "unresolved": false, "patch_set": 13, "id": "1fa4df85_cb7f6da9", "line": 41, "range": {"start_line": 41, "start_character": 0, "end_line": 41, "end_character": 34}, "in_reply_to": "1fa4df85_4b829dca", "updated": "2020-03-16 00:55:15.000000000", "message": "Done", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}], "nova/tests/unit/api/openstack/compute/test_instance_actions.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_c4b11749", "line": 126, "range": {"start_line": 126, "start_character": 34, "end_line": 126, "end_character": 53}, "updated": "2020-03-06 17:53:10.000000000", "message": "this should not require as scope is disabled by default.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_73b1fe46", "line": 126, "range": {"start_line": 126, "start_character": 34, "end_line": 126, "end_character": 53}, "in_reply_to": "1fa4df85_c4b11749", "updated": "2020-03-06 23:20:46.000000000", "message": "Done", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}], "nova/tests/unit/cmd/test_policy.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "35d648bd1afb45b182beb8daea24dc82b1b8a847", "unresolved": false, "patch_set": 10, "id": "1fa4df85_e5e40d11", "line": 128, "range": {"start_line": 128, "start_character": 41, "end_line": 128, "end_character": 72}, "updated": "2020-03-11 16:16:22.000000000", "message": "We can keep this unchanged and standardize these tests once all policy are migrated. We might not need these test but need to check once we complete the work.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "aae9da3fac33a84c70f9ba4e3b222fe7cafaad69", "unresolved": false, "patch_set": 10, "id": "1fa4df85_0fdb7b7d", "line": 128, "range": {"start_line": 128, "start_character": 41, "end_line": 128, "end_character": 72}, "in_reply_to": "1fa4df85_e5e40d11", "updated": "2020-03-12 04:41:07.000000000", "message": "As debug, that's needed, I rollback this in latest patch, pls check.", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "35d648bd1afb45b182beb8daea24dc82b1b8a847", "unresolved": false, "patch_set": 10, "id": "1fa4df85_65ba5de2", "line": 156, "range": {"start_line": 156, "start_character": 41, "end_line": 156, "end_character": 72}, "updated": "2020-03-11 16:16:22.000000000", "message": "ditto", "commit_id": "acefaaed9d84a50e4ff5352406ac3f623b509bdf"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5f3c36cb0fe6577c75e57b4dfee0b8ebf04e9039", "unresolved": false, "patch_set": 12, "id": "1fa4df85_8f352bab", "line": 130, "range": {"start_line": 130, "start_character": 41, "end_line": 130, "end_character": 60}, "updated": "2020-03-12 04:44:54.000000000", "message": "Is this should be use new policy \"PROJECT_READER_OR_SYSTEM_READER\" instead?", "commit_id": "4f56074f0518261eeebc3cb8c70882d39f03a810"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1eba4dcacc04a6ed27f860834970fdabdf3002d7", "unresolved": false, "patch_set": 12, "id": "1fa4df85_b3ae3f96", "line": 130, "range": {"start_line": 130, "start_character": 41, "end_line": 130, "end_character": 60}, "in_reply_to": "1fa4df85_8f03ebbe", "updated": "2020-03-13 05:06:58.000000000", "message": "Aha, that we should request the \"target\", in [1] we add the target in os-instance-actions API, that why the test case failed.\n\n[1]https://review.opendev.org/#/c/710411/4/nova/api/openstack/compute/instance_actions.py", "commit_id": "4f56074f0518261eeebc3cb8c70882d39f03a810"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "15f46f02cfa19e335eefe2797c850e908a38af3d", "unresolved": false, "patch_set": 12, "id": "1fa4df85_8f03ebbe", "line": 130, "range": {"start_line": 130, "start_character": 41, "end_line": 130, "end_character": 60}, "in_reply_to": "1fa4df85_8f352bab", "updated": "2020-03-12 04:50:43.000000000", "message": "Technically, there is no need to use the latest policy test here, but why would it cause a case failure?", "commit_id": "4f56074f0518261eeebc3cb8c70882d39f03a810"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5f3c36cb0fe6577c75e57b4dfee0b8ebf04e9039", "unresolved": false, "patch_set": 12, "id": "1fa4df85_af3a6795", "line": 158, "range": {"start_line": 158, "start_character": 41, "end_line": 158, "end_character": 60}, "updated": "2020-03-12 04:44:54.000000000", "message": "ditto.", "commit_id": "4f56074f0518261eeebc3cb8c70882d39f03a810"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1eba4dcacc04a6ed27f860834970fdabdf3002d7", "unresolved": false, "patch_set": 12, "id": "1fa4df85_53934b5d", "line": 158, "range": {"start_line": 158, "start_character": 41, "end_line": 158, "end_character": 60}, "in_reply_to": "1fa4df85_af3a6795", "updated": "2020-03-13 05:06:58.000000000", "message": "Done", "commit_id": "4f56074f0518261eeebc3cb8c70882d39f03a810"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e639b89041e9d4767a08337a4892464f459285c2", "unresolved": false, "patch_set": 13, "id": "1fa4df85_2b672154", "line": 127, "range": {"start_line": 127, "start_character": 8, "end_line": 127, "end_character": 35}, "updated": "2020-03-15 23:43:08.000000000", "message": "do we need to change this test, is it failing?", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e275f62e901529b703f4a8602e6c7a716bedc33d", "unresolved": false, "patch_set": 13, "id": "1fa4df85_4b45bd6f", "line": 127, "range": {"start_line": 127, "start_character": 8, "end_line": 127, "end_character": 35}, "in_reply_to": "1fa4df85_2b672154", "updated": "2020-03-16 00:55:15.000000000", "message": "Yes, if we keep this it will be failed, we need the target. because we changed the os-instance-action api's authorized by target={'project_id': instance.project_id}, that why I changed this.", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2f78a596114e31716bd14c4a333646256be1ce60", "unresolved": false, "patch_set": 13, "id": "1fa4df85_e327b7b5", "line": 127, "range": {"start_line": 127, "start_character": 8, "end_line": 127, "end_character": 35}, "in_reply_to": "1fa4df85_35218afc", "updated": "2020-03-19 01:37:57.000000000", "message": "Yes, that suitable of \"PROJECT_READER_OR_SYSTEM_READER\" that it's the new check_str. That's why I chaged this in PS10\n https://review.opendev.org/#/c/706470/10/nova/tests/unit/cmd/test_policy.py@L120", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4aeca59793a3bb8833abfa1d3ab1ade2dca17492", "unresolved": false, "patch_set": 13, "id": "1fa4df85_35218afc", "line": 127, "range": {"start_line": 127, "start_character": 8, "end_line": 127, "end_character": 35}, "in_reply_to": "1fa4df85_4b45bd6f", "updated": "2020-03-18 17:51:34.000000000", "message": "This tests did not test what you thought. It end up testing no rule so that is why passing.\n\nexpected_rules at L134 return empty list [] because there is no rule which match the old check_str at L132\n\npassing_rule at L123 is also [] because none of the rule can pass with empty context 'context at L131'", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4aeca59793a3bb8833abfa1d3ab1ade2dca17492", "unresolved": false, "patch_set": 13, "id": "1fa4df85_15656e45", "line": 133, "range": {"start_line": 132, "start_character": 42, "end_line": 133, "end_character": 60}, "updated": "2020-03-18 17:51:34.000000000", "message": "we need to change these to new check_str and then check what all rule passes.", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2f78a596114e31716bd14c4a333646256be1ce60", "unresolved": false, "patch_set": 13, "id": "1fa4df85_43c00b2b", "line": 133, "range": {"start_line": 132, "start_character": 42, "end_line": 133, "end_character": 60}, "in_reply_to": "1fa4df85_15656e45", "updated": "2020-03-19 01:37:57.000000000", "message": "Done", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e639b89041e9d4767a08337a4892464f459285c2", "unresolved": false, "patch_set": 13, "id": "1fa4df85_0b6ca534", "line": 158, "range": {"start_line": 158, "start_character": 8, "end_line": 158, "end_character": 18}, "updated": "2020-03-15 23:43:08.000000000", "message": "this should work fine? as project_id should be same as in instance at L160", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e275f62e901529b703f4a8602e6c7a716bedc33d", "unresolved": false, "patch_set": 13, "id": "1fa4df85_8efe6303", "line": 158, "range": {"start_line": 158, "start_character": 8, "end_line": 158, "end_character": 18}, "in_reply_to": "1fa4df85_0b6ca534", "updated": "2020-03-16 00:55:15.000000000", "message": "No, it cannot work. You can reference https://storage.bhs.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_96e/706470/12/check/openstack-tox-py36/96e5451/testr_results.html\n\nCompare the db_context and context (see bellow debug info), their '_user_id' and '_project_id' are different, that in context is None, I am not sure why they are not work fine, can you give some explain?\n\nAs the db_context is bellow:\n\n{'_user_id': 'fake-user', '_project_id': 'fake-project', '_domain_id': None, '_user_domain_id': None, '_project_domain_id': None, 'auth_token': None, 'user_name': None, 'project_name': None, 'domain_name': None, 'system_scope': None, 'user_domain_name': None, 'project_domain_name': None, 'is_admin': False, 'is_admin_project': True, 'read_only': False, 'show_deleted': False, 'resource_uuid': None, 'roles': [], 'service_token': None, 'service_user_id': None, 'service_user_name': None, 'service_user_domain_id': None, 'service_user_domain_name': None, 'service_project_id': None, 'service_project_name': None, 'service_project_domain_id': None, 'service_project_domain_name': None, 'service_roles': [], 'request_id': 'req-2d9657db-9323-4395-9f1c-866660ed4279', 'global_request_id': None, '_read_deleted': 'no', 'remote_address': None, 'timestamp': datetime.datetime(2020, 3, 16, 0, 37, 45, 354002), 'service_catalog': [], 'quota_class': None, 'db_connection': None, 'mq_connection': None, 'cell_uuid': None, 'user_auth_plugin': None}\n\nAs the context is bellow:\n\n{'_user_id': None, '_project_id': None, '_domain_id': None, '_user_domain_id': None, '_project_domain_id': None, 'auth_token': None, 'user_name': None, 'project_name': None, 'domain_name': None, 'system_scope': None, 'user_domain_name': None, 'project_domain_name': None, 'is_admin': False, 'is_admin_project': True, 'read_only': False, 'show_deleted': False, 'resource_uuid': None, 'roles': [], 'service_token': None, 'service_user_id': None, 'service_user_name': None, 'service_user_domain_id': None, 'service_user_domain_name': None, 'service_project_id': None, 'service_project_name': None, 'service_project_domain_id': None, 'service_project_domain_name': None, 'service_roles': [], 'request_id': 'req-62dc25c0-d492-4cdc-a552-db6aedf33ea1', 'global_request_id': None, '_read_deleted': 'no', 'remote_address': None, 'timestamp': datetime.datetime(2020, 3, 16, 0, 37, 59, 776689), 'service_catalog': [], 'quota_class': None, 'db_connection': None, 'mq_connection': None, 'cell_uuid': None, 'user_auth_plugin': None}", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4aeca59793a3bb8833abfa1d3ab1ade2dca17492", "unresolved": false, "patch_set": 13, "id": "1fa4df85_d51036ab", "line": 158, "range": {"start_line": 158, "start_character": 8, "end_line": 158, "end_character": 18}, "in_reply_to": "1fa4df85_8efe6303", "updated": "2020-03-18 17:51:34.000000000", "message": "ditto. This test is not testing anything and that is why passing. It end up testing 0 rules and assert on [], [] :)\n\nexpected_rules at L164 return empty list [] because there is no rule which match the old check_str at L162\n\npassing_rule at L123 is also [] because none of the rule can pass with empty context 'context at L161'", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4aeca59793a3bb8833abfa1d3ab1ade2dca17492", "unresolved": false, "patch_set": 13, "id": "1fa4df85_b5d01acb", "line": 166, "range": {"start_line": 166, "start_character": 32, "end_line": 166, "end_character": 50}, "updated": "2020-03-18 17:51:34.000000000", "message": "after changing the matching check_str at L162 then db_context will pass. instance you fetch at L160 is with db_context.", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "2f78a596114e31716bd14c4a333646256be1ce60", "unresolved": false, "patch_set": 18, "id": "1fa4df85_23486fca", "line": 129, "range": {"start_line": 129, "start_character": 8, "end_line": 129, "end_character": 23}, "updated": "2020-03-19 01:37:57.000000000", "message": "The expected_rules is ['os_compute_api:os-instance-actions:list', 'os_compute_api:os-instance-actions:show']\n\nThe passing_rules is ['os_compute_api:os-instance-actions:list', 'os_compute_api:os-instance-actions:show']", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "60aba2ef5b9039c196ee6533820e697b9a68c239", "unresolved": false, "patch_set": 18, "id": "1fa4df85_55bf4fa9", "line": 129, "range": {"start_line": 129, "start_character": 8, "end_line": 129, "end_character": 23}, "in_reply_to": "1fa4df85_23486fca", "updated": "2020-03-19 18:06:43.000000000", "message": "+1, thanks and those are enough to verify the CLI behaviour.", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}], "nova/tests/unit/fake_policy.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ea41dd6bc06f4e6cda22ce663bcae2f5baeab005", "unresolved": false, "patch_set": 8, "id": "1fa4df85_84e55f3a", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "updated": "2020-03-06 17:53:10.000000000", "message": "this was already missing.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4beb4b4a6b84f121c5e03c2383284c2cabef10b5", "unresolved": false, "patch_set": 8, "id": "1fa4df85_93f7da8b", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_33906695", "updated": "2020-03-06 23:38:44.000000000", "message": "\uff08gmann\uff09 fake policy make all the policy accessible to everyone so that tests can verify the things without worry about right policy allowable context", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "2b9d18f735b107e8d40258fa4e70c4f095912b52", "unresolved": false, "patch_set": 8, "id": "1fa4df85_cf44be76", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_56015005", "updated": "2020-03-09 09:39:39.000000000", "message": "Not sure if this helps... but I would like all tests to use the default policy in code, rather than this fake one, if possible.\n\nDoes moving either of those tests to the RealPolicyFixture, and making them work with that fixture, help us move forward here?\n\nFWIW, if we need to do the above test change, I would perfere that to be in its own patch, where we fix up tests before we make any code changes.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 8, "id": "1fa4df85_33906695", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_84e55f3a", "updated": "2020-03-06 23:20:46.000000000", "message": "Why we don't need this fake events? I am confusing.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e6b8ad1fd7a97a748bd89a669c578d853b306ff6", "unresolved": false, "patch_set": 8, "id": "1fa4df85_f62ddcfd", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_93f7da8b", "updated": "2020-03-07 02:07:25.000000000", "message": "Ah, I think this is the mainly reason caused the functional-py36 failed. This policy caused the functional-py36 or py36 unit test case fail, and the settings used here are contradictory.\n\nWhile we add \"os_compute_api:os-instance-actions:events\": \"\" in policy_data={}, the compute.api unit test will be success but the functional-py36 will be failed, you can refer this patch or PS9.\n\nIf we remove \"os_compute_api:os-instance-actions:events\": \"\" from policy_data={}, the functional-py36 can run success but the compute.api test case will be failed, you can refer this patch, the temporory link is https://23ac9a902a14c73a5e88-5cb3754a5639f7be0289e9ab84888d65.ssl.cf5.rackcdn.com/706470/9/check/openstack-tox-py36/2900845/testr_results.html", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "613e633157eccd67f5a7747a04689c44781f2d94", "unresolved": false, "patch_set": 8, "id": "1fa4df85_37cfc0b1", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_cf44be76", "updated": "2020-03-11 12:24:45.000000000", "message": "Yeah, use RealPolicyFixture in os-instance-actions looks like ok.", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "cf881a97c246f2ff4acc0cd7a042db9ebc02d914", "unresolved": false, "patch_set": 8, "id": "1fa4df85_56015005", "line": 49, "range": {"start_line": 49, "start_character": 0, "end_line": 49, "end_character": 52}, "in_reply_to": "1fa4df85_f62ddcfd", "updated": "2020-03-07 03:27:08.000000000", "message": "This functional fail also since lack of \"os_compute_api:os-instance-actions:events\": \"\" this fake policy data.\n\nfailed case: nova.tests.functional.test_servers.ServerRebuildTestCase.test_rebuild_with_image_novalidhost\n\nTraceback (most recent call last):\n  File \"/home/my_work/code/nova/nova/tests/functional/test_servers.py\", line 1395, in test_rebuild_with_image_novalidhost\n    server, instance_actions.REBUILD, 'rebuild_server')\n  File \"/home/my_work/code/nova/nova/tests/functional/integrated_helpers.py\", line 121, in _wait_for_action_fail_completion\n    server, expected_action, event_name, event_result='error')\n  File \"/home/my_work/code/nova/nova/tests/functional/integrated_helpers.py\", line 140, in _wait_for_instance_action_event\n    action['request_id'])['events']\nKeyError: 'events'", "commit_id": "0d1f87f6eaaa23a8344f5aeb05607ebc52e80c12"}], "nova/tests/unit/policies/test_instance_actions.py": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "55e3711574f082383877a371f2a6ab30e49aaae8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_4072dae5", "updated": "2020-02-13 18:16:06.000000000", "message": "you need to add the test coverage in base patch so that we can know policy working before and after change.", "commit_id": "20fd7a692f36b9994e13a40583a31cb397d50817"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "45a1e9972d40aa9caa4a201a475e3e7d06b5fcf0", "unresolved": false, "patch_set": 7, "id": "1fa4df85_c4959c88", "line": 236, "updated": "2020-03-06 10:17:31.000000000", "message": "Gmann has created some new tests that need to get added here please: https://review.opendev.org/#/c/707041/5/nova/tests/unit/policies/test_console_output.py", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2911c0646c0389ab324a375379892c070209b70", "unresolved": false, "patch_set": 7, "id": "1fa4df85_f3308ea1", "line": 236, "in_reply_to": "1fa4df85_c4959c88", "updated": "2020-03-06 23:20:46.000000000", "message": "Done", "commit_id": "1864792a1b3f1cf9b702e9f80d67f4e914917def"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e639b89041e9d4767a08337a4892464f459285c2", "unresolved": false, "patch_set": 13, "id": "1fa4df85_eb70290b", "line": 118, "range": {"start_line": 118, "start_character": 44, "end_line": 118, "end_character": 48}, "updated": "2020-03-15 23:43:08.000000000", "message": "show, this API checks show policy first.", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e275f62e901529b703f4a8602e6c7a716bedc33d", "unresolved": false, "patch_set": 13, "id": "1fa4df85_0e127359", "line": 118, "range": {"start_line": 118, "start_character": 44, "end_line": 118, "end_character": 48}, "in_reply_to": "1fa4df85_eb70290b", "updated": "2020-03-16 00:55:15.000000000", "message": "Done", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e639b89041e9d4767a08337a4892464f459285c2", "unresolved": false, "patch_set": 13, "id": "1fa4df85_0b558550", "line": 168, "range": {"start_line": 165, "start_character": 0, "end_line": 168, "end_character": 73}, "updated": "2020-03-15 23:43:08.000000000", "message": "these are base rules which are not deprecated in this patch. You need to use the rules name deprecated in this change which is 'os_compute_api:os-instance-actions'", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e275f62e901529b703f4a8602e6c7a716bedc33d", "unresolved": false, "patch_set": 13, "id": "1fa4df85_8e2743b7", "line": 168, "range": {"start_line": 165, "start_character": 0, "end_line": 168, "end_character": 73}, "in_reply_to": "1fa4df85_0b558550", "updated": "2020-03-16 00:55:15.000000000", "message": "ia_policies.ROOT_POLICY is 'os_compute_api:os-instance-actions', I think we should overide the RULE_ADMIN_OR_OWNER, because we deprecated it in instance_action policy.", "commit_id": "e899cef2b21e19a8c379eee140bc7c3022c2c7f9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3aab5024c775ed502278164e53f6cacdf2c2d662", "unresolved": false, "patch_set": 18, "id": "1fa4df85_7ca03d91", "line": 149, "updated": "2020-03-19 12:40:46.000000000", "message": "nit: newline after this would be nice", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e5e8b26911554733915317eda10c93d6d67e60be", "unresolved": false, "patch_set": 18, "id": "df33271e_cc3b139a", "line": 149, "in_reply_to": "1fa4df85_7ca03d91", "updated": "2020-03-24 03:03:40.000000000", "message": "Done", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3aab5024c775ed502278164e53f6cacdf2c2d662", "unresolved": false, "patch_set": 18, "id": "1fa4df85_9c95f934", "line": 150, "range": {"start_line": 150, "start_character": 9, "end_line": 150, "end_character": 13}, "updated": "2020-03-19 12:40:46.000000000", "message": "?", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e5e8b26911554733915317eda10c93d6d67e60be", "unresolved": false, "patch_set": 18, "id": "df33271e_2c41df0c", "line": 150, "range": {"start_line": 150, "start_character": 9, "end_line": 150, "end_character": 13}, "in_reply_to": "1fa4df85_55e0af26", "updated": "2020-03-24 03:03:40.000000000", "message": "Done", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df4368685f1902f04d891341290220e6c63da380", "unresolved": false, "patch_set": 18, "id": "1fa4df85_55e0af26", "line": 150, "range": {"start_line": 150, "start_character": 9, "end_line": 150, "end_character": 13}, "in_reply_to": "1fa4df85_9c95f934", "updated": "2020-03-19 17:50:23.000000000", "message": "class?", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3aab5024c775ed502278164e53f6cacdf2c2d662", "unresolved": false, "patch_set": 18, "id": "1fa4df85_bc9a355f", "line": 153, "range": {"start_line": 153, "start_character": 8, "end_line": 153, "end_character": 15}, "updated": "2020-03-19 12:40:46.000000000", "message": "enforces", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e5e8b26911554733915317eda10c93d6d67e60be", "unresolved": false, "patch_set": 18, "id": "df33271e_0c469b24", "line": 153, "range": {"start_line": 153, "start_character": 8, "end_line": 153, "end_character": 15}, "in_reply_to": "1fa4df85_bc9a355f", "updated": "2020-03-24 03:03:40.000000000", "message": "Done", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3aab5024c775ed502278164e53f6cacdf2c2d662", "unresolved": false, "patch_set": 18, "id": "1fa4df85_dcb851c9", "line": 168, "range": {"start_line": 167, "start_character": 0, "end_line": 168, "end_character": 44}, "updated": "2020-03-19 12:40:46.000000000", "message": "nit:\n\n  override_rules = {\n      self.deprecated_policy: base_policy.RULE_ADMIN_OR_OWNER,\n  }", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e5e8b26911554733915317eda10c93d6d67e60be", "unresolved": false, "patch_set": 18, "id": "df33271e_6c4ac727", "line": 168, "range": {"start_line": 167, "start_character": 0, "end_line": 168, "end_character": 44}, "in_reply_to": "1fa4df85_dcb851c9", "updated": "2020-03-24 03:03:40.000000000", "message": "Done", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3aab5024c775ed502278164e53f6cacdf2c2d662", "unresolved": false, "patch_set": 18, "id": "1fa4df85_9cae597f", "line": 246, "range": {"start_line": 246, "start_character": 37, "end_line": 246, "end_character": 38}, "updated": "2020-03-19 12:40:46.000000000", "message": "nit: can you drag this down a line", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "e5e8b26911554733915317eda10c93d6d67e60be", "unresolved": false, "patch_set": 18, "id": "df33271e_ac54cfcb", "line": 246, "range": {"start_line": 246, "start_character": 37, "end_line": 246, "end_character": 38}, "in_reply_to": "1fa4df85_9cae597f", "updated": "2020-03-24 03:03:40.000000000", "message": "Done", "commit_id": "c498544215e9b0cb1948e4d6d7269d575b062e8f"}]}}, "openstack%2Fpuppet-cinder~master~I074c102054931a43e173218739a2d82cce00788c": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 23:42:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-23 13:00:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcinder~master~Ib9865b4e425eb8001d656a0c8d27334fbbd7ab6e": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-20 11:41:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 1, "date": "2020-03-19 15:03:03.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-19 15:01:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 21976, "name": "Kaminario K2 CI", "email": "cinder.devops.CTR@kaminario.com", "username": "kaminario"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~master~Idab2b1bd50ae316d9d26f5616174a3421f22b571": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-23 21:58:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-03-24 01:04:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 2, "date": "2020-03-23 15:53:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Ib5aaa22f6cf307181d8f34cf89f9f24619b43004": {"owner_id": 23811, "owner_name": "Oliver Walsh", "owner_email": "owalsh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-03-23 23:29:04.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-03-20 22:13:22.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-common~master~Id912a0786451825f48822b209400f0f72758dfc8": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-23 22:30:53.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-03-23 16:50:44.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openinfra%2Fopenstackid~master~I69b99548696c020ef7f10e2a4b98af66b53408e0": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 01:34:12.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openinfra%2Fopenstackid~master~Icbb6396b398b5b61a36dbafd01ffab10dfb80f2a": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-03-24 01:34:34.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}}