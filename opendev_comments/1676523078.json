{"openstack%2Fpuppet-designate~master~I87f91d762be5c6f25cf2eff5761e69fc1eb2256e": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-aodh~master~I59050480b2128a44b9e7058e2be48dadd1ef93bd": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:24:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:47:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-ceilometer~master~I75097408ed14484092229567246d6fd276848e59": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:24:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-manila~master~I7facb0d46303db52a90451589eb04626bd489677": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:43:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-monasca~master~Ifefa02bc8c0d6269574bf5ef9690d89e2355c42b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:47.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:13.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ifa6d147664fc993ca08c8fb2efa860f7605628cb": {"owner_id": 18002, "owner_name": "John Fulton", "owner_email": "fulton@redhat.com", "labels": [{"value": 0, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 23:24:55.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-17 21:22:08.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fdevstack~master~I1e90db987c0bfa6206c211e066be03ea8738ad3f": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 5196, "name": "Matthew Treinish", "email": "mtreinish@kortar.org", "username": "treinish"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 19118, "name": "Eran Kuris", "email": "ekuris@redhat.com", "username": "ekuris"}, {"value": 0, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-17 17:14:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 2, "date": "2020-02-17 17:04:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"stack.sh": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "73a8ef19a5053a482791ef3d55b280c637766297", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_0bd13e5b", "line": 422, "range": {"start_line": 420, "start_character": 0, "end_line": 422, "end_character": 2}, "updated": "2020-02-17 17:03:14.000000000", "message": "this is not needed", "commit_id": "181e18d74ee10b8db37da230e25f658e70b3c4b6"}], "tools/worlddump.py": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "3b4fad9cb9b2464800d1e8962d162d546c8659b1", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_e9526a36", "line": 42, "updated": "2020-02-04 19:49:32.000000000", "message": "we are killing py2 nowadays", "commit_id": "118db664be9f039c299d84c428ddcf9383596d48"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "ec0f74c2366ee26831e3091d89439c8b507b3425", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3269bef6", "line": 42, "in_reply_to": "3fa7e38b_e9526a36", "updated": "2020-02-05 11:06:08.000000000", "message": "cool. this makes everithing simpler to me ;-)", "commit_id": "118db664be9f039c299d84c428ddcf9383596d48"}]}}, "openstack%2Fpuppet-openstack_spec_helper~master~I7eb23eef7f9ed199c2c28863ef04d64f6acfd644": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:32:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:42:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-octavia~master~I190f45bcd110ee6e40a8a3af216165d9602042b1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:32:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-17 15:18:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 1, "date": "2020-02-17 15:22:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-18 02:42:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-freezer~master~I2ff3ceffdbc0e686161cd1acb769e3fbda3bca35": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:15.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:36.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-glare~master~Ica4c8766cdd7f088e3ab41c73421310957cbbf9b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:21.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:28.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-cloudkitty~master~Ib0910a0176a69c29ed991ea62bae92c641da5a15": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:48:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-murano~master~I86dc35a4d11107449a5d39dc7e0766efe9d5ac3b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:26:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fzun~master~Ib5d133954c4e31d5232c7c19e09f59c6d987449f": {"owner_id": 22076, "owner_name": "Kevin Zhao", "owner_email": "kevin.zhao@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22076, "name": "Kevin Zhao", "email": "kevin.zhao@linaro.org", "username": "KevinZhao"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 25695, "name": "Deepak Mourya", "email": "deepakmoriya7@gmail.com", "username": "deepak_mourya"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22406, "name": "Kien Nguyen", "email": "kiennt65@viettel.com.vn", "username": "kiennt"}, {"value": -1, "date": "2018-05-17 15:59:09.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {"zun/compute/manager.py": [{"author": {"_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, "change_message_id": "fa76315a482d4f8bd9d0f83e306c644d464ca326", "unresolved": false, "patch_set": 4, "id": "5f7c97a3_0729c636", "line": 1198, "range": {"start_line": 1198, "start_character": 32, "end_line": 1198, "end_character": 39}, "updated": "2018-05-09 02:53:24.000000000", "message": "Just to make sure. Did you intend to change this?", "commit_id": "cbad0053cfbfa22e676d39de718154fcdec3e88c"}, {"author": {"_account_id": 22076, "name": "Kevin Zhao", "email": "kevin.zhao@linaro.org", "username": "KevinZhao"}, "change_message_id": "b32c21acc75751cbf794f109effb00e1164b34ad", "unresolved": false, "patch_set": 4, "id": "5f7c97a3_bbe26b2e", "line": 1198, "range": {"start_line": 1198, "start_character": 32, "end_line": 1198, "end_character": 39}, "in_reply_to": "5f7c97a3_0729c636", "updated": "2018-05-09 08:21:31.000000000", "message": "Sorry, I have a logical mistake.\nActually here for capsule, running a update status is better.", "commit_id": "cbad0053cfbfa22e676d39de718154fcdec3e88c"}, {"author": {"_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, "change_message_id": "4052591ed40d2afbd7f257c3489048436d505806", "unresolved": false, "patch_set": 6, "id": "5f7c97a3_7dbbb971", "line": 1112, "updated": "2018-05-17 15:59:09.000000000", "message": "@Kevin,\n\nIt looks the logic of compiling capsule's status can be encapsulated and re-used. Therefore, see if you can do the following or similar refactoring:\n\n    def sync_capsule_status(self, ctx):\n        LOG.debug('Start syncing capsule states.')\n        capsules = objects.Capsule.list(ctx)\n        for capsule in capsules:\n            capsule.status = self._get_capsule_status(capsule)\n            capsule.save(ctx)\n\n    def _get_capsule_status(self, capsule):\n        ...", "commit_id": "d10eaf507c813c0ad13048d9ac20ba075e6994f4"}, {"author": {"_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, "change_message_id": "4052591ed40d2afbd7f257c3489048436d505806", "unresolved": false, "patch_set": 6, "id": "5f7c97a3_dda9ad24", "line": 1126, "range": {"start_line": 1126, "start_character": 13, "end_line": 1126, "end_character": 32}, "updated": "2018-05-17 15:59:09.000000000", "message": "Not sure why we need a sync in here.", "commit_id": "d10eaf507c813c0ad13048d9ac20ba075e6994f4"}, {"author": {"_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}, "change_message_id": "4052591ed40d2afbd7f257c3489048436d505806", "unresolved": false, "patch_set": 6, "id": "5f7c97a3_bd663129", "line": 1199, "range": {"start_line": 1199, "start_character": 13, "end_line": 1199, "end_character": 33}, "updated": "2018-05-17 15:59:09.000000000", "message": "After the refactoring as I commented above, here can be re-written as:\n\n  capsule.status = self._get_capsule_status(capsule)", "commit_id": "d10eaf507c813c0ad13048d9ac20ba075e6994f4"}]}}, "openstack%2Fpuppet-magnum~master~I3d81ef8549907354dd204ae5f2e9966a77141da1": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:43:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-rally~master~I670a1d03144f3a0a8df6193e2070ad65eb037cbc": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:33:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:40:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-ovn~master~I7ad569cf10a4e933cb71305ed2e3826ef891dadf": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:33:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:40:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-congress~master~Ie96f0f15dbb48daf97d26fb6bd8746b4ff56b295": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:25:07.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:46:45.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fheat-translator~master~I753e09613b50e099060e2c85eb80d06d8b257858": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 1, "date": "2020-02-11 22:19:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-18 02:54:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26588, "name": "Hiroyuki Jo", "email": "joxyuki@gmail.com", "username": "joxyuki"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-05 03:52:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16511, "name": "Bob Haddleton", "email": "bob.haddleton@nokia.com", "username": "bobh"}], "comments": {}}, "openstack%2Fpuppet-tacker~master~Ibba42362614eb7b8b68b8c2a007b3a063589f121": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:35:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:39:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-qdr~master~I2d33d5a0427f45370c6cbf862fc8c694afe81214": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:33:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:40:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-senlin~master~Iecb3fc5caa3e21b337010e354b189a3b558541f7": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:33:21.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:39:53.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-openstack-guide~master~Id845c06ff69c23d0bfe0949e91b9c7d5a8b93a2c": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:32:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:42:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fpuppet-openstack-specs~master~I799a5fee65df662dd393663b25eeda14ac03d6e8": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:32:42.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-18 02:42:47.000000000", "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fproject-config~master~I194b5847963cb5af7bf9655e7922251c07c0e6bf": {"owner_id": 22076, "owner_name": "Kevin Zhao", "owner_email": "kevin.zhao@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-18 02:32:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}, "openstack%2Fpaunch~master~I479eaa3b58c3df091e1b78a01c4fb0595d81b37c": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-14 23:14:06.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-17 15:31:05.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Ftobiko~master~I8c180f8b85e68c3f2b58a6b478e11c628b241a88": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-18 00:42:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}], "comments": {}}, "opendev%2Fsystem-config~master~I480154e2014d9e0845a1d7150a668f7b7f6988c0": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-11 20:43:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 1, "date": "2020-02-11 05:15:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fcinder~master~Icdf80000287a43e1ff355d976f5a607543fd6d20": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-02-17 14:14:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 1, "date": "2020-02-17 10:08:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~Idd56c3f37d5786daae7181c36d38d267cbf1885c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 20:15:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:55:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-solumclient~master~Ibaf782786eef20d6895542e6e66ebf5befe434f0": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 09:50:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-18 01:00:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fqueens~I6907729bca667459466834276513e9f0233d10d0": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-16 23:29:09.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I5ed014fb1061379d7a7a8686d289c1303941dce9": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-13 17:25:02.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"deployment/cinder/cinder-base.yaml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "aa6c9fcb0a5ac724967c96eaa421ee99c54e6d5c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f7de3f3a", "line": 169, "range": {"start_line": 169, "start_character": 8, "end_line": 169, "end_character": 40}, "updated": "2020-01-27 04:22:57.000000000", "message": "this do not exist in stable/stein https://opendev.org/openstack/puppet-cinder/src/branch/stable/stein/manifests/cron/db_purge.pp", "commit_id": "7c837f11fcbc5bb7499a6a25757d8961b2d60a8d"}]}}, "openstack%2Fpython-tripleoclient~master~Ie28dabaf07ed36adb3e8f07ca8c141f93a9d79cc": {"owner_id": 4571, "owner_name": "Steve Baker", "owner_email": "sbaker@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-01-31 22:29:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-17 16:48:46.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 4571, "name": "Steve Baker", "email": "sbaker@redhat.com", "username": "steve-stevebaker"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleoclient/tests/v1/overcloud_image/test_overcloud_image.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "1d71885e3c3c3c1e428c535e2d6d58c87629365b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2fa282ae", "line": 137, "updated": "2020-01-21 17:41:03.000000000", "message": "assert_not_called is a recent mock thing, it seems that lower-constraints don't have it. Bump minimum?", "commit_id": "d9523cfbc82ef5f03597a41bd12fe69df19a1d66"}]}}, "openstack%2Ftripleo-common~stable%2Fstein~I66266b4a0951add722e5700a500ad10092b34ee1": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 1, "date": "2020-02-17 12:44:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:58:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-02-17 15:33:10.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fansible-role-collect-logs~master~I1d104647447d63b993550e7c24e4e5262cb93632": {"owner_id": 22873, "owner_name": "Martin Kopec", "owner_email": "mkopec@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 12:21:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-17 16:40:06.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 2, "date": "2020-02-11 07:48:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"tasks/collect.yml": [{"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "761f2dad14d692e9f72071230fc4546b5ae6ee11", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5bfbeb78", "line": 50, "range": {"start_line": 50, "start_character": 4, "end_line": 50, "end_character": 102}, "updated": "2020-02-10 17:51:45.000000000", "message": "i think there is no reason to add an new fact when you can re-use artcl_exclude_list and update it.", "commit_id": "ff574e33ed0ea66c8027f81231906f79414491c3"}, {"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "44f8e64654cc264479406f85a911ec973d892ea0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_adfe6101", "line": 50, "range": {"start_line": 50, "start_character": 4, "end_line": 50, "end_character": 102}, "in_reply_to": "3fa7e38b_5bfbeb78", "updated": "2020-02-10 23:18:14.000000000", "message": "you're right", "commit_id": "ff574e33ed0ea66c8027f81231906f79414491c3"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Fqueens~I2a7861094bbc814ccd3ef3f2206dc141229411fc": {"owner_id": 6796, "owner_name": "Giulio Fidente", "owner_email": "gfidente@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 10:40:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 1, "date": "2020-02-17 10:07:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-02-17 15:37:35.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 19138, "name": "Pranali Deore", "email": "pdeore@redhat.com", "username": "PranaliD"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Frocky~I66266b4a0951add722e5700a500ad10092b34ee1": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 1, "date": "2020-02-17 12:44:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:33:05.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Fqueens~I66266b4a0951add722e5700a500ad10092b34ee1": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 1, "date": "2020-02-17 12:44:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29244, "name": "Gregory Thiemonge", "email": "gthiemon@redhat.com", "username": "gthiemonge"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:33:03.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I4ce3436881508f155e72e6760253118555faaf7e": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:21:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-17 15:31:26.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fcinder~stable%2Ftrain~Icdf80000287a43e1ff355d976f5a607543fd6d20": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-02-17 16:12:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:16:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 1, "date": "2020-02-17 16:25:24.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foctavia~master~Ie3f11f240e57ce3b272a2c0c79d89172e9ddc363": {"owner_id": 28397, "owner_name": "Curt Moore", "owner_email": "curt.moore@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-17 22:10:25.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 1, "date": "2020-02-17 22:03:29.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28397, "name": "Curt Moore", "email": "curt.moore@gmail.com", "username": "jcmoore"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I6fdf03a639ca63047fdd6ef603f549781a06d07b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:29:45.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Ftrain~If7e58619cc43090f766db89c9abf477b683177cd": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:27:32.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "zuul%2Fzuul~master~I246acda9352267eb6b9be6d1b06fb87b133709ec": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 21:36:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-17 21:41:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fopenstack-helm-images~master~Idabc31390048c4f5e94af1a67afe0cfb4c2f7ee7": {"owner_id": 28372, "owner_name": "chinasubbareddy mallavarapu", "owner_email": "cr3938@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 18511, "name": "Brian Wickersham", "email": "bkw86@bellsouth.net", "username": "bw6938"}, {"value": 0, "_account_id": 17119, "name": "Dmitrii Kabanov", "email": "dmitrii.kabanov@att.com", "username": "dk370c"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-02-17 22:39:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, {"value": 0, "_account_id": 20469, "name": "Tin Lam", "email": "tinlam@gmail.com"}, {"value": 0, "_account_id": 29974, "name": "Stephen Taylor", "email": "stephen.taylor.1@att.com", "username": "st053q"}, {"value": 2, "date": "2020-02-17 22:15:46.000000000", "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {"ceph-cephfs-provisioner/Dockerfile.ubuntu_bionic": [{"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "9c6699f09928600c8a3588c76ca568eb3417384e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_4ee3c4d8", "line": 24, "range": {"start_line": 22, "start_character": 0, "end_line": 24, "end_character": 22}, "updated": "2020-02-17 17:58:38.000000000", "message": "Is there a way to specify the version here? As it is now, when someone builds this image they'll get whatever the latest version is, right?\n\nUpdating the Nautilus version comment at the top of the file makes no guarantee the correct version is pulled.", "commit_id": "e823e2fa4f66e3051e3207a79cca84e8578ff99e"}], "ceph-rbd-provisioner/Dockerfile.ubuntu_bionic": [{"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "b48e7c405b1b8ebf89b95ecdeb7fb3f8258e1f42", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_baddce6f", "line": 24, "range": {"start_line": 24, "start_character": 22, "end_line": 24, "end_character": 39}, "updated": "2020-02-17 21:58:19.000000000", "message": "Missed it here", "commit_id": "c2509b1182bb6adf202a39a255ae7594f1b013c1"}, {"author": {"_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, "change_message_id": "f2dbe9438cd13b72b9b54c340de9afe60c2ce028", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1ac42261", "line": 24, "range": {"start_line": 24, "start_character": 22, "end_line": 24, "end_character": 39}, "in_reply_to": "3fa7e38b_baddce6f", "updated": "2020-02-17 22:12:44.000000000", "message": "Done", "commit_id": "c2509b1182bb6adf202a39a255ae7594f1b013c1"}], "ceph-utility/Dockerfile.ubuntu_bionic": [{"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "b48e7c405b1b8ebf89b95ecdeb7fb3f8258e1f42", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_dada0a75", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 237}, "updated": "2020-02-17 21:58:19.000000000", "message": "Also while you're at it, do you want to break this up into multiple lines for readability?", "commit_id": "c2509b1182bb6adf202a39a255ae7594f1b013c1"}, {"author": {"_account_id": 28372, "name": "chinasubbareddy mallavarapu", "email": "cr3938@att.com", "username": "chinasubbareddy"}, "change_message_id": "f2dbe9438cd13b72b9b54c340de9afe60c2ce028", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_bac06e4d", "line": 22, "range": {"start_line": 22, "start_character": 4, "end_line": 22, "end_character": 237}, "in_reply_to": "3fa7e38b_dada0a75", "updated": "2020-02-17 22:12:44.000000000", "message": "Done", "commit_id": "c2509b1182bb6adf202a39a255ae7594f1b013c1"}]}}, "openstack%2Ftripleo-heat-templates~master~I8900ba3bb470804b5bb5016aacc66dc171e1bb62": {"owner_id": 18002, "owner_name": "John Fulton", "owner_email": "fulton@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-14 13:57:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 1, "date": "2020-02-14 21:23:06.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"roles/DistributedComputeHCIScaleOut.yaml": [{"author": {"_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, "change_message_id": "19d34d0ae8814207178f2ed393817742c2715c71", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2fe30905", "line": 31, "range": {"start_line": 27, "start_character": 0, "end_line": 31, "end_character": 36}, "updated": "2020-02-13 23:42:08.000000000", "message": "I didn't think the Scale Out nodes would host any Ceph service other than ceph OSD. Please check this.", "commit_id": "fbe7d201989a779087e66f20eaf825cacd8b9087"}, {"author": {"_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, "change_message_id": "5ddd13c175ad23e1d9e17f948e53f7f18f8c8a2b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5b35e041", "line": 31, "range": {"start_line": 27, "start_character": 0, "end_line": 31, "end_character": 36}, "in_reply_to": "3fa7e38b_2fe30905", "updated": "2020-02-14 12:25:51.000000000", "message": "Yes! you are right. My mistake.", "commit_id": "fbe7d201989a779087e66f20eaf825cacd8b9087"}]}}, "openstack%2Fansible-role-collect-logs~master~I1b203277f5246cabe732701a6996a5441334a3b0": {"owner_id": 22873, "owner_name": "Martin Kopec", "owner_email": "mkopec@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "date": "2020-02-14 13:17:04.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": -1, "date": "2020-02-16 09:28:50.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6683, "name": "Pavel Sedl\u00e1k", "email": "psedlak@redhat.com", "username": "psedlak"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {"tasks/collect.yml": [{"author": {"_account_id": 6683, "name": "Pavel Sedl\u00e1k", "email": "psedlak@redhat.com", "username": "psedlak"}, "change_message_id": "abe8c0dfd3c19755e8716d1af9981d4d5d5bff2e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_184efc38", "line": 121, "updated": "2020-02-07 10:06:46.000000000", "message": "btw this needs to be controlled by new opt like artcl_tar,\ndoing artcl_gzip=true and expecting big files to be individually gzipped, is very different from doing all-together tar archive, after that yes, infrared plugin can have this by default true, while default per role would be false\n\n(and the above `find -size + gzip` to be excluded when artcl_tar)", "commit_id": "f86b72d026e15c4773bf4b45396a7713977c5196"}, {"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "92534b85b5f50d088026d74a5b96aad9d6e4625c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_886b7784", "line": 93, "updated": "2020-02-07 16:38:09.000000000", "message": "no tars please.. not upstream compliant for logging", "commit_id": "501bd5814590c13ebc2bd710756b36a91fdd675d"}]}}, "openstack%2Fpuppet-swift~master~If60373cb44a62397678cee7aaefad3431a91f7e4": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:34:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-17 14:19:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"releasenotes/notes/authtoken-service_token-f2e7209b778c2eb5.yaml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "a43b6a0ff7d0f7966fe7deecd7a359e35fe3cacd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6d100dac", "line": 4, "updated": "2020-02-17 14:19:02.000000000", "message": "whitespace", "commit_id": "b6b458cd59bde37635a1c146e6c76a62505be4e3"}]}}, "openstack%2Ftripleo-heat-templates~master~Ie8a1ad5e2c9e32cce1f1b8c264a8b44207d99b59": {"owner_id": 28223, "owner_name": "Cedric Jeanneret", "owner_email": "cjeanner@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-16 23:27:23.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "airship%2Fairshipctl~master~I158ade3b7987d3c2f2b57a616a200a210517e24a": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 1, "date": "2020-02-17 21:51:58.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-17 21:51:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-02-17 21:51:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 1, "date": "2020-02-17 21:51:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "opendev%2Fgear~master~Id3347136507e7e65ccde937f1c2fd303aa3dfbbe": {"owner_id": 16068, "owner_name": "Tobias Henkel", "owner_email": "tobias.henkel@bmw.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 21:38:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-17 21:40:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~master~Ibd56e93ad7f398b04ec7fb9281af5d42d0e1548f": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 20:32:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-16 23:25:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Foctavia~master~I6794144b2ba66f3bbd2bc948d95d1019286c9889": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-17 20:21:35.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-17 20:19:01.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {"octavia/tests/unit/certificates/manager/test_barbican_legacy.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7583fd9aee08ef878d97fb0a780f782ca5f14abd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_440ac378", "line": 84, "updated": "2020-02-17 20:18:55.000000000", "message": "Why isn't test_barbican.py failing in the same way?  And codesearch didn't show anyone else using dir() with the Secret class.", "commit_id": "dcb383c6af0a612efd3327c2fcb3da7e0b390206"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "99d8861bb7d261b29487fc0c95d169d2e27386b3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5f24cc5f", "line": 84, "in_reply_to": "3fa7e38b_440ac378", "updated": "2020-02-17 20:46:41.000000000", "message": "Well, for the first question, it's not \"legacy\" so it's using the new barbicanManager interfaces to the barbican client.\nhttps://github.com/openstack/octavia/blob/master/octavia/tests/unit/certificates/manager/test_barbican.py#L59\n\nFrankly, mock should be (and probably was) doing the \"dir()\" for us, but I couldn't trace it back to which change in mock triggered this.", "commit_id": "dcb383c6af0a612efd3327c2fcb3da7e0b390206"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "1d18ec0dedc1a2dfe0b5312dec3f4107a700d341", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_84c3db05", "line": 84, "in_reply_to": "3fa7e38b_440ac378", "updated": "2020-02-17 20:24:00.000000000", "message": "https://review.opendev.org/707064", "commit_id": "dcb383c6af0a612efd3327c2fcb3da7e0b390206"}]}}, "openinfra%2Fopenstackid-resources~master~If5d5cfee902f58d3517a79cf333df7174b247208": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 21:39:50.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ib35d18e5bfa8bbfdff75fda6c52ea7c770f6f986": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-17 13:58:50.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-17 13:58:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-17 17:49:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/roles/tripleo_container_manage/tasks/delete.yml": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "aa1833417e1fb71be907fd4987aa578be4194cd3", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_123ae633", "line": 20, "range": {"start_line": 20, "start_character": 10, "end_line": 20, "end_character": 67}, "updated": "2020-02-14 16:24:16.000000000", "message": "better just:\n\"{{ not tripleo_container_manage_debug }}", "commit_id": "c661497a8ec67899e338341ea8bcd8e5186ce83a"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "53c54227d59f76e26721a57e0007bbc25bfa93ed", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_bb616d12", "line": 20, "range": {"start_line": 20, "start_character": 10, "end_line": 20, "end_character": 67}, "in_reply_to": "3fa7e38b_123ae633", "updated": "2020-02-14 20:56:59.000000000", "message": "Done", "commit_id": "c661497a8ec67899e338341ea8bcd8e5186ce83a"}]}}, "openstack%2Ftripleo-ansible~master~I821d674dead4a21b7ac30b47b31b8dd34e0ecc8b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:41:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-17 18:13:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-17 17:47:16.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {"tripleo_ansible/roles/tripleo_container_manage/tasks/delete_orphan.yml": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "5f57ad140aa9d6d544e544bad011d3cc3012f7ee", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_6eb56080", "line": 29, "range": {"start_line": 29, "start_character": 0, "end_line": 29, "end_character": 4}, "updated": "2020-02-17 18:13:49.000000000", "message": "total nit, feel free to ignore,\n\n    {{ \n        podman_containers.containers | needs_delete(\n         config=all_containers_hash, \n         config_id=tripleo_container_manage_config_id, \n         check_config=False\n       )\n    }}", "commit_id": "0e24247d2c6c90cac62f4d1d7384e369d5a571cf"}], "tripleo_ansible/roles/tripleo_container_manage/tasks/podman/create.yml": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "5f57ad140aa9d6d544e544bad011d3cc3012f7ee", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_2e644820", "line": 23, "range": {"start_line": 22, "start_character": 0, "end_line": 23, "end_character": 73}, "updated": "2020-02-17 18:13:49.000000000", "message": "total nit, feel free to ignore.\n\n    {{ \n       podman_containers.containers | needs_delete(\n         config=batched_container_data | haskey(\n           attribute='action', reverse=True\n         ) | singledict,\n         config_id=tripleo_container_manage_config_id, \n         clean_orphans=False\n       ) \n    }}", "commit_id": "0e24247d2c6c90cac62f4d1d7384e369d5a571cf"}]}}, "opendev%2Fsystem-config~master~Ifacf69e7fef5b54a03d43272e9cc01b6fbe8e845": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-17 07:32:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Fneutron~master~I0175a2d00256e6d904cbcf25ad4a08aa825a9e18": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 10:41:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-12 11:57:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-02-12 08:45:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/common/ovn/extensions.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "259dffd52d15d2beea5249e7fbbcc1caa1623b46", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b856c8cc", "line": 24, "updated": "2020-02-07 10:05:18.000000000", "message": "but I still see the same error in nova-api logs on this patch https://7f1d3bc811eac15dd3d0-a12e67e84744b622e6a13b507a2faa27.ssl.cf1.rackcdn.com/705982/2/check/neutron-ovn-tempest-ovs-release/b77ed16/controller/logs/screen-n-api.txt\nShould we change this job's configuration somehow also?", "commit_id": "b532febb7b28a41fd29977cc1c6485d20aef70e0"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "61843a2c6bf6446f8012ded7cdf9e0415cc9e6c9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a0f3d8e7", "line": 24, "in_reply_to": "3fa7e38b_98e0accd", "updated": "2020-02-10 09:47:06.000000000", "message": "So I checked in the code. \"Normal\" L3 service plugin inherits from Fip_port_details_db_mixin (https://github.com/openstack/neutron/blob/master/neutron/db/l3_fip_port_details.py#L30) and that extends FIP with port_details attribute.\nSo if You want to have the same for ovn_l3 service plugin, this plugin also needs to inherit from the same class.", "commit_id": "b532febb7b28a41fd29977cc1c6485d20aef70e0"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "a4d768133199117e5cea308543f4621822d9dc51", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_50298f37", "line": 24, "in_reply_to": "3fa7e38b_a0f3d8e7", "updated": "2020-02-10 12:15:54.000000000", "message": "I saw this too hehehehe. I'll push, in the same patch, a fix for that.\n\nI'll check which other mixins are necessary in the OVN plugin.", "commit_id": "b532febb7b28a41fd29977cc1c6485d20aef70e0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "30e752ff1a233584b19f712cddcae438f81491b5", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_98e0accd", "line": 24, "in_reply_to": "3fa7e38b_b856c8cc", "updated": "2020-02-07 10:30:11.000000000", "message": "Yeah, not sure what's happening here. We should have this fixed with [1]. Am I correct in saying 'port_details' will *always* be present here if this extension is enabled, even if it's set to null? That's the only additional thing I can think of\n\n[1] https://review.opendev.org/#/c/706213/", "commit_id": "b532febb7b28a41fd29977cc1c6485d20aef70e0"}]}}, "openstack%2Frequirements~master~I6876d315751db5ab61cf68114fe80677adc0f920": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 14:47:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-02-17 14:32:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-17 18:28:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fneutron~master~I7ae82d163c46bbc3ee7430293555c66fbda17b08": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-02-12 13:26:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 00:26:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 2, "date": "2020-02-12 10:21:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/tests/fullstack/resources/config.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "44aee05aa85eb0b3ae0c4622dafc019b019d1b00", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e41304b6", "line": 176, "updated": "2020-02-11 18:04:14.000000000", "message": "As this config is separate for each test I think You can even limit it to something much smaller, like e.g. 30 :)", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "4a3f9740e771672f86ca4bee69deaf0acdee675a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_64fb9447", "line": 176, "in_reply_to": "3fa7e38b_e41304b6", "updated": "2020-02-11 18:26:15.000000000", "message": "Sure, there is no need to have 300 VLANs per test. I'll reduce it to 30.", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "44aee05aa85eb0b3ae0c4622dafc019b019d1b00", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a4098c83", "line": 179, "updated": "2020-02-11 18:04:14.000000000", "message": "should we also reduce this range?", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "4a3f9740e771672f86ca4bee69deaf0acdee675a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c4ea8875", "line": 179, "in_reply_to": "3fa7e38b_a4098c83", "updated": "2020-02-11 18:26:15.000000000", "message": "When investigating the bug [1], I didn't see any problem related to gre registers.\n\nActually, the code for type_tunnel is much better than the code for type_vlan.\n\nAnyway, there is no need to have 1000 registers in the DB for gre tunnels. I'll reduce it to 30, as in VLAN.\n\n[1] https://bugs.launchpad.net/neutron/+bug/1862178", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "44aee05aa85eb0b3ae0c4622dafc019b019d1b00", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_44221804", "line": 182, "updated": "2020-02-11 18:04:14.000000000", "message": "and this?", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "4a3f9740e771672f86ca4bee69deaf0acdee675a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_04f42055", "line": 182, "in_reply_to": "3fa7e38b_44221804", "updated": "2020-02-11 18:26:15.000000000", "message": "ditto", "commit_id": "9599a63bd9df159b0a644faea6294fc1835ff0b4"}]}}, "airship%2Fairshipctl~master~I16edaa53b85ad032d5b4b5c345c3ad55c1664a9c": {"owner_id": 31362, "owner_name": "Andrew Schiefelbein", "owner_email": "as3525@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31362, "name": "Andrew Schiefelbein", "email": "as3525@att.com", "username": "aschiefe"}], "comments": {"tools/install_linter": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "26458e6519a8addfccd38a88ab7be53f9a85647f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a1ea899e", "line": 8, "range": {"start_line": 8, "start_character": 16, "end_line": 8, "end_character": 42}, "updated": "2020-02-17 19:03:16.000000000", "message": "nit: $(...) syntax should be preferred over `...` syntax\n\nhttp://mywiki.wooledge.org/BashFAQ/082", "commit_id": "e2e59f2924b4ab93804f182fd1ab8690a322bfed"}]}}, "openstack%2Ftripleo-ansible~master~Ic06ac0f41767ca513c612b1ebb38d2ff92500ea5": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-17 16:41:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-17 18:10:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-17 17:49:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"doc/source/roles/role-tripleo-container-manage.rst": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "890c7e4b53287468dea9da0a184adf0fe2c89f0d", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_cb96f4ee", "line": 162, "updated": "2020-02-13 14:19:34.000000000", "message": "may be this should an individual setting for each container based on its labels instead?", "commit_id": "691e49c96024efeba870ceb07c0e48d67a51a84e"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "1b5d1827471e86da1de7a90b66800b25196a7c2c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c496e1ee", "line": 162, "in_reply_to": "3fa7e38b_cb96f4ee", "updated": "2020-02-13 16:35:46.000000000", "message": "I don't think we want that info in the labels.\nThe use case us really \"an operator wants to manage only one container and do not cleanup the others in a same config id\".\nAlso to match with how paunch works and remove containers not in config anymore.", "commit_id": "691e49c96024efeba870ceb07c0e48d67a51a84e"}]}}, "openstack%2Fopenstack-ansible~stable%2Ftrain~I42895b7aa29f8acdf7eadb2190ded0804f829bdc": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 2, "date": "2020-02-05 07:50:44.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-29 11:49:28.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Ftripleo-upgrade~master~Ib8309dca36ac804ec17761f6301b1b220411afff": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-21 16:39:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 0, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 2, "date": "2020-01-28 15:53:17.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-17 11:10:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 1, "date": "2020-01-23 14:31:01.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Ide1a4503dd2bdd2d5e494cd1eac483b842a21acf": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 1, "date": "2020-02-17 14:20:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 2, "date": "2020-02-17 13:59:45.000000000", "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 2, "date": "2020-02-17 14:48:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, "change_message_id": "e0f8d6b7f71d4880dedef17ecc71123105e576b7", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_4877ea8f", "line": 27, "updated": "2020-02-05 14:57:43.000000000", "message": "nit: Double signed-off-by", "commit_id": "d54e8ad33d139f91a91189b041459d848e829fce"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "92e27576bf906ded25469eb704efab650384f33d", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3bec3627", "line": 27, "in_reply_to": "3fa7e38b_4877ea8f", "updated": "2020-02-05 15:35:08.000000000", "message": "Done", "commit_id": "d54e8ad33d139f91a91189b041459d848e829fce"}], "tripleoclient/utils.py": [{"author": {"_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, "change_message_id": "e8bed872d0787288f2547913afb162b04abed32d", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_bce003cd", "line": 555, "updated": "2020-02-06 22:17:47.000000000", "message": "the command needs to always be written out, not just if rc != 0", "commit_id": "bdb5afd708de282b754881e54f5638ff18a5fb8b"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "2681414f58205adf676f77125191fe1774f3df1f", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_b71b3c6d", "line": 555, "in_reply_to": "3fa7e38b_bce003cd", "updated": "2020-02-06 22:24:06.000000000", "message": "Done", "commit_id": "bdb5afd708de282b754881e54f5638ff18a5fb8b"}], "tripleoclient/workflows/deployment.py": [{"author": {"_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, "change_message_id": "e8bed872d0787288f2547913afb162b04abed32d", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_dcb29f05", "line": 305, "updated": "2020-02-06 22:17:47.000000000", "message": "this is causing double printing to stdout when --verbose is passed. I believe it's because openstackclient has added a stdout handler to the logger as well.", "commit_id": "bdb5afd708de282b754881e54f5638ff18a5fb8b"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "2681414f58205adf676f77125191fe1774f3df1f", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_d71ef85c", "line": 305, "in_reply_to": "3fa7e38b_dcb29f05", "updated": "2020-02-06 22:24:06.000000000", "message": "Done", "commit_id": "bdb5afd708de282b754881e54f5638ff18a5fb8b"}, {"author": {"_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, "change_message_id": "3cda75205d9829944135697903807b285c24ff90", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b101936f", "line": 256, "updated": "2020-02-14 14:22:27.000000000", "message": "I think this is a great way to remove Mistral quickly, however, I suspect we will want to try and clean this up fairly soon in a follow up. It is a fairly hairy large function that I can easily see getting bigger and more complicated over time.", "commit_id": "c33a984b24443120716589589b9dd1aae584c312"}], "tripleoclient/workflows/package_update.py": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "fc6422e368d1ccd8bda264c2dce744708047a36a", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_71d47b1e", "line": 82, "range": {"start_line": 67, "start_character": 0, "end_line": 82, "end_character": 37}, "updated": "2020-02-14 14:07:53.000000000", "message": "lets delete this.", "commit_id": "c33a984b24443120716589589b9dd1aae584c312"}]}}, "openstack%2Ftripleo-ansible~master~I2ecf7d942dcca1e381d329e11939fd31299551f5": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 13:16:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-17 13:34:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-02-17 17:52:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/ansible_plugins/filter/helpers.py": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "d1937817038185b1391b58631a3c253d76fa8a83", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_865bf8f6", "line": 361, "range": {"start_line": 361, "start_character": 8, "end_line": 361, "end_character": 11}, "updated": "2020-02-15 18:37:17.000000000", "message": "know", "commit_id": "d2fcd6b173a1394668b3ce3e858aa6a36f6e29df"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "237c18e7ad88ba54f5870b3c89cdd9a59a5ae4fd", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_64b82ae7", "line": 358, "range": {"start_line": 358, "start_character": 25, "end_line": 358, "end_character": 34}, "updated": "2020-02-17 10:15:42.000000000", "message": "shall we check if the key exists?", "commit_id": "353dacd2589c1dce200ed8e837a24d66122bed1d"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "c59b62210f37ba70b32b912712ab298388211b56", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_4a0bb77e", "line": 358, "range": {"start_line": 358, "start_character": 25, "end_line": 358, "end_character": 34}, "in_reply_to": "3fa7e38b_64b82ae7", "updated": "2020-02-17 13:12:41.000000000", "message": "it shouldn't be needed because if there are some podman actions, it means that we have the podman inspect of that container in the returned data from podman_container module.", "commit_id": "353dacd2589c1dce200ed8e837a24d66122bed1d"}], "tripleo_ansible/roles/tripleo_container_manage/tasks/podman/create.yml": [{"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "683fdd9428fa6a219a9b4432deb7f062a43801d4", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aae7cbd7", "side": "PARENT", "line": 84, "range": {"start_line": 84, "start_character": 9, "end_line": 84, "end_character": 78}, "updated": "2020-02-17 13:11:27.000000000", "message": "the problem is that it always returns true (in my testing); so I wrote a filter able to read the create_async_poll_results.results and figure what containers have actions. If we were not using async we could indeed check if the resource changed, but since podman_container is called with async, the resource always reports as changed.", "commit_id": "03988f42814848c4d7a249525a498248ed384de6"}]}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I08a06b300d43aca7db2c9e3341a07bc903163d26": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:54:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Id6dc9a7bd71a7725ae1672c91bef5064a730b530": {"owner_id": 26343, "owner_name": "Jose Luis Franco", "owner_email": "jfrancoa@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-02-17 16:39:25.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I16b2972cdf79cd6ac927925607197ec2a969a28b": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:17:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-17 16:39:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-17 18:09:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"tripleo_ansible/ansible_plugins/modules/container_puppet_config.py": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "fb3f48dbf0a20cce5c3d2d86f973a01694b6fa06", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_846e8663", "line": 96, "range": {"start_line": 95, "start_character": 8, "end_line": 96, "end_character": 24}, "updated": "2020-02-17 10:22:27.000000000", "message": "This looks confusing a little bit. When it is needed? If puppet produced no changes? But shall it also apply puppet as usual or would \"only update\" hashes... if needed?", "commit_id": "03988f42814848c4d7a249525a498248ed384de6"}, {"author": {"_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, "change_message_id": "b162d0b53e4daf8d710fdf2d040671e357816904", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_aaa02b90", "line": 96, "range": {"start_line": 95, "start_character": 8, "end_line": 96, "end_character": 24}, "in_reply_to": "3fa7e38b_846e8663", "updated": "2020-02-17 13:03:52.000000000", "message": "So this parameter let me re-use that module to only update hashes in startup configs.\nSee: https://review.opendev.org/#/c/708025/ and https://review.opendev.org/#/c/708024/2/tripleo_ansible/roles/tripleo_container_manage/tasks/main.yml - so before we manage containers, they get the latest config hash so we know if we need to restart them or not.", "commit_id": "03988f42814848c4d7a249525a498248ed384de6"}], "tripleo_ansible/roles/tripleo_container_manage/tasks/main.yml": [{"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "a5b742f8af7c75a30d03aa442888a6b4b240a3c3", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c3ef977d", "line": 103, "range": {"start_line": 103, "start_character": 50, "end_line": 103, "end_character": 54}, "updated": "2020-02-17 07:26:33.000000000", "message": "|bool", "commit_id": "03988f42814848c4d7a249525a498248ed384de6"}]}}, "openstack%2Ftripleo-quickstart~master~I9f1166a7126049e2d358aa7a17f48da868d346f8": {"owner_id": 6681, "owner_name": "Brent Eagles", "owner_email": "beagles@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}], "comments": {"config/general_config/featureset038.yml": [{"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "5771d8d40d5eee7891dd72b8ee059e02bdfd4589", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_c8535d14", "line": 133, "updated": "2020-01-08 18:52:42.000000000", "message": "So if this variable is required in more than just this one featureset, you have some options.\n\nIf it's just for upstream ci and not something a user would want or need. ( not recommended )\n\nhttps://opendev.org/openstack/tripleo-ci/src/branch/master/toci-quickstart/config/testenv/multinode.yml\n\nIf you want the variable to generally be available to any job or any run for the overcloud deployment. Feel free to move it here:\n\nhttps://opendev.org/openstack/tripleo-quickstart-extras/src/branch/master/roles/extras-common/defaults/main.yml\n\nIf you only want the feature enabled in certain featuresets you can have the path always defined, but a toggle variable like.. \"use_amphora\" in the featureset.", "commit_id": "77045d6b2006787a2eb215cc18114e4fc3d710b4"}, {"author": {"_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, "change_message_id": "02fd52afdb4f185930e810ca548cab0db3235c9a", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_fe882126", "line": 133, "in_reply_to": "3fa7e38b_c8535d14", "updated": "2020-02-17 16:26:08.000000000", "message": "It is only relevant to octavia feature sets and while introduced for the purposed of CI, it is generally usable for any octavia deployment using quickstart - so it looks like option 2 is the better choice. Thanks! It also means the var can be put in the patch where it is first used, fwict making this unnecessary", "commit_id": "77045d6b2006787a2eb215cc18114e4fc3d710b4"}]}}, "openstack%2Fcharm-guide~master~I4b728102780dba39372dddff6eb4fa6a9e9552fd": {"owner_id": 30561, "owner_name": "Peter Matulis", "owner_email": "peter.matulis@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 19:28:18.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "airship%2Fairshipctl~master~If87ec50b9d65750565a204514d6b647be64bb30d": {"owner_id": 28869, "owner_name": "Ian Howell", "owner_email": "ian.howell0@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 18:26:25.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 2, "date": "2020-02-17 18:29:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}], "comments": {}}, "openstack%2Fcinder~master~I7f6b914e9794d8205447f0df377d866ddfc15aa5": {"owner_id": 30165, "owner_name": "Simon O'Donovan", "owner_email": "simon.odonovan@dell.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 16:16:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12032, "name": "Datera CI", "email": "datera-openstack-ci@datera.io", "username": "datera-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:59:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26561, "name": "liu tracy", "email": "Tracy.Liu@emc.com"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 10:31:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28403, "name": "Naoki Saito", "email": "nasaito@nec.com", "username": "n-saito"}], "comments": {"cinder/tests/unit/volume/drivers/dell_emc/powermax/powermax_data.py": [{"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "1a9d74bc1978938cf523365d2b9b790c8de76b63", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_524e1e6d", "line": 831, "range": {"start_line": 831, "start_character": 13, "end_line": 831, "end_character": 25}, "updated": "2020-02-14 15:49:25.000000000", "message": "Do we need nameModifier now?", "commit_id": "9126f73141024a575e17ff0b50853f15e07d89ac"}, {"author": {"_account_id": 12670, "name": "Helen Walsh", "email": "helen.walsh@emc.com", "username": "walshh2"}, "change_message_id": "c3306da1034b87e6e0324c31a6a1fabfec759bc9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b22c3249", "line": 831, "range": {"start_line": 831, "start_character": 13, "end_line": 831, "end_character": 25}, "in_reply_to": "3fa7e38b_524e1e6d", "updated": "2020-02-14 16:03:56.000000000", "message": "It is still returned from Unisphere REST but no longer has the 'OS-' so will return False in is_volume_manageable.  Thanks", "commit_id": "9126f73141024a575e17ff0b50853f15e07d89ac"}, {"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "e408a6cdc31754a54b9cf3ef9eab37c7ad7bc94c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b2b672da", "line": 831, "range": {"start_line": 831, "start_character": 13, "end_line": 831, "end_character": 25}, "in_reply_to": "3fa7e38b_b22c3249", "updated": "2020-02-14 16:16:16.000000000", "message": "Thanks for the clarification, Helen@", "commit_id": "9126f73141024a575e17ff0b50853f15e07d89ac"}]}}, "openstack%2Fopenstack-ansible~master~Idcc20c6bbc517ca66846b321f4c92227b7128799": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 09:20:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-02-17 16:05:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-02-17 09:20:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Ftripleo-common~master~I08fedb77fd8f546f989babacd8efff6613891ad9": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-10 15:53:40.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-06 15:15:50.000000000", "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I6b6c676880ccc8cbed23af135e5865c222a8f1d0": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-17 13:15:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}], "comments": {}}, "openstack%2Fproject-config~master~I883bd374c53e7c84873e033418508a61226e9c95": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 18:44:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-10 19:20:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I99337111ae4099efa487a6da0514a166d285fae7": {"owner_id": 21420, "owner_name": "Gage Hugo", "owner_email": "gagehugo@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fdevstack~master~I58d2964ee52d66fe89aa84c1d88c4d8d4d349b0d": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:11:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-17 15:27:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Fdevstack~master~I49d86bc9193165e0a41e8e8720be37d81a4e7ee0": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-17 17:09:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-17 12:04:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Fgovernance-website~master~I4ce1e0910a9a9fd558c7dfc66f7059d89d4c0d66": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}], "comments": {}}, "x%2Ftobiko~master~I6c5226b4e8293a8316d08deef00d62b1885b15ec": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:07:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "x%2Ftobiko~master~Ibad4174ed8c265a37c4d036a68de9b0ca3c42ae6": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 13:18:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}], "comments": {}}, "openstack%2Fideas~master~I49d836fe0731b1b0238eae8e98f4f82c67000459": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 2, "date": "2020-02-17 18:25:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-07 17:51:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15993, "name": "Amy Marrich", "display_name": "Amy Marrich (spotz)", "email": "amy@demarco.com", "username": "amarrich"}, {"value": 1, "date": "2020-02-06 17:37:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fneutron~stable%2Frocky~I943e6397319b9a4a7fc1a5b3acb721920ddffb02": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 00:17:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-02-10 14:43:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Felection~master~I50987584af77a0bd64b1c9deb3638fd359592da1": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 18:23:04.000000000", "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 1, "date": "2020-02-11 10:03:33.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~I97746d544c46e89eff5a180355965dd60e678d80": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:24:00.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~Ia7880f9ba42edd779c2783cb17df304373da9822": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:25:00.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I0bb65951e665fdd9a78c0a1aa1f26efbb9cb065e": {"owner_id": 21420, "owner_name": "Gage Hugo", "owner_email": "gagehugo@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I67ec7ad661c0649a3448437397c0de55be984589": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 2, "date": "2020-02-14 13:51:16.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 13:46:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I595a998196b6de386a4ff345c39fe1e6a9ed62c6": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:31:48.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fdiskimage-builder~master~Idabfa94c2bff6e0de6daa0866084d5db14d7dcb0": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 23:56:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-17 17:26:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkuryr-tempest-plugin~master~Ic2be3cf93bd9d114af907d26198e8011281bfabf": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 08:37:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-17 12:08:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {"kuryr_tempest_plugin/config.py": [{"author": {"_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, "change_message_id": "cd503696465ec5e5ec4083ba6dcc68cca97fdc65", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_0ccdf059", "line": 91, "range": {"start_line": 87, "start_character": 0, "end_line": 91, "end_character": 47}, "updated": "2020-02-14 15:21:44.000000000", "message": "Should these two options only be added when used?", "commit_id": "30872ebdd679c7e9470fc124a07fced6845bff80"}, {"author": {"_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, "change_message_id": "38b5f56744b3493a6b080d93f387f0ab7b149e0b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_358b4c22", "line": 91, "range": {"start_line": 87, "start_character": 0, "end_line": 91, "end_character": 47}, "in_reply_to": "3fa7e38b_0ccdf059", "updated": "2020-02-14 17:08:03.000000000", "message": "Right, very good point!", "commit_id": "30872ebdd679c7e9470fc124a07fced6845bff80"}]}}, "openstack%2Fgovernance~master~I82280e00a1ee53bf56687bdb19bba84d32ac2312": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "x%2Fgroup-based-policy~master~I04165928bd08051f7c2f79755b8ea74c030e486c": {"owner_id": 18031, "owner_name": "Thomas Bachman", "owner_email": "tbachman@yahoo.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova~master~I0ca50665b86b9fdb4618192d4d6a3bcaa6ea2291": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-03 10:54:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:05:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "cd00b98c0d22012cf2218052890dc6e5916d32bf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_6c7741d6", "line": 22, "updated": "2019-06-07 14:54:20.000000000", "message": "Likely a duplicate of bug 1805767.", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_0df703d7", "line": 11, "range": {"start_line": 10, "start_character": 60, "end_line": 11, "end_character": 8}, "updated": "2019-06-17 22:03:51.000000000", "message": "This is confusing - the image doesn't change on a resize, only the flavor. The image could possibly change during a rebuild but that's a different operation (and there is a different bug for that as well: https://bugs.launchpad.net/nova/+bug/1763766).", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_433142ec", "line": 11, "range": {"start_line": 10, "start_character": 60, "end_line": 11, "end_character": 8}, "in_reply_to": "9fb8cfa7_0df703d7", "updated": "2019-08-20 16:31:48.000000000", "message": "Done", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_2d1d270f", "line": 12, "range": {"start_line": 12, "start_character": 48, "end_line": 12, "end_character": 72}, "updated": "2019-06-17 22:03:51.000000000", "message": "What do you mean by \"land on a host\" here? The compute service does not update the RequestSpec.numa_topology field, nor does conductor as far as I know.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_633fa6b5", "line": 12, "range": {"start_line": 12, "start_character": 48, "end_line": 12, "end_character": 72}, "in_reply_to": "9fb8cfa7_2d1d270f", "updated": "2019-08-20 16:31:48.000000000", "message": "This was back when I thought this field was being updated on the compute node. It's not so this is incorrect now, as you point out. Updated.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_0de5c30a", "line": 18, "updated": "2019-06-17 22:03:51.000000000", "message": "Should probably also mention the revert part of this change.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_2349ae5f", "line": 18, "in_reply_to": "9fb8cfa7_0de5c30a", "updated": "2019-08-20 16:31:48.000000000", "message": "Good call. Done", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}], "nova/compute/api.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8bfb1d6e23640ee6bd904fcd4268ffa9a1edbe66", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_ead627c4", "line": 3562, "updated": "2019-05-31 17:18:31.000000000", "message": "Not sure if I'm allowed to do this, since it would need to be rolled back after. Sean suggests temporarily mutating the object. TBD.", "commit_id": "03819f9336867df8b5ce042ba9523316e038e0e7"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "01d63653f05a30ae9819ffbd8ef426a86d3d4cf7", "unresolved": false, "patch_set": 1, "id": "9fb8cfa7_eaadc731", "line": 3562, "range": {"start_line": 3561, "start_character": 8, "end_line": 3562, "end_character": 51}, "updated": "2019-05-31 17:20:36.000000000", "message": "we proably need to make sure we restore things properly on revert. both automatic and manual but this should at least fix this in the success case.\n\nthat said im not sure this will get save back to the db so we should trace through the code path after the long weekend to confrim.\n\nif we never save this to the db after this point this should be enough to resolve the bug.", "commit_id": "03819f9336867df8b5ce042ba9523316e038e0e7"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "14bc44304c5368f2f3b3865930b2bc59ccd6860c", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_2c5aa94e", "line": 3561, "updated": "2019-06-07 14:55:16.000000000", "message": "-1 for the same reason I said in Alex's change:\n\nhttps://review.opendev.org/#/c/620874/\n\nThis will get persisted in the request spec but not reset on revert.", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e50031953c98ae4902631f93a6b2715c88fbbea4", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_d27044df", "line": 3420, "updated": "2019-06-07 16:17:56.000000000", "message": "We could avoid this if we can determine we did a cold migration, which you should be able to determine from the migration.migration_type in scope.", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "595fc8e0d2189704e5ff049d14bfd9fd57599eb9", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_8c3059ea", "line": 3420, "in_reply_to": "9fb8cfa7_74ee11b5", "updated": "2019-06-10 14:56:32.000000000", "message": "> This is the 'revert_resize' function. There's no way we could get\n > here for anything unless we were doing a revert of the resize\n > operation (i.e. no cold migration flow through here), right?\n\ncold migrate == resize but with no flavor change. You can revert a cold migration and when doing so, you go through this code.", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "db241b5fc90f4d1f3135f1214442ea88d3a24fc8", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_89e12b2d", "line": 3420, "in_reply_to": "9fb8cfa7_74ee11b5", "updated": "2019-06-10 14:25:40.000000000", "message": "im not sure that is correct\n\nwhen we do a cold migration we call resize but just dont pass a flavor to indicate its a migration not a resize\n\nhttps://github.com/openstack/nova/blob/master/nova/compute/api.py#L3464-L3473\n\nif you look at the definition of the revert_resize\n\ntask state you see we use it to indicate that the resize or migration has failed \n\nhttps://github.com/openstack/nova/blob/73b284cd69069699db56e61bfde4054897c15044/api-guide/source/server_concepts.rst#server-status\n\nand if you look at the migrate api ref\n\nhttps://developer.openstack.org/api-ref/compute/?expanded=migrate-server-migrate-action-detail#migrate-server-migrate-action\nit also agrres with teh server concepts docs\n\nim pretty sure we use the same revert resize server api\nendpoint for both resize and cold migrations\n\nhttps://developer.openstack.org/api-ref/compute/?expanded=revert-resized-server-revertresize-action-detail#revert-resized-server-revertresize-action\n\nwhich is why when we say cold migrate and resize are basically the same thing we really mean it. cold migration is just a resize to the same flavor reusing all the same task states as any other resize.", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "12a165db2201baf0179f2c9225ceeb1ce298321f", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_74ee11b5", "line": 3420, "in_reply_to": "9fb8cfa7_d27044df", "updated": "2019-06-10 13:58:09.000000000", "message": "This is the 'revert_resize' function. There's no way we could get here for anything unless we were doing a revert of the resize operation (i.e. no cold migration flow through here), right?", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "e50031953c98ae4902631f93a6b2715c88fbbea4", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_1267bc27", "line": 3565, "updated": "2019-06-07 16:17:56.000000000", "message": "We don't have to do this at all if the flavor doesn't change (cold migration - see Alex's change).", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "12a165db2201baf0179f2c9225ceeb1ce298321f", "unresolved": false, "patch_set": 3, "id": "9fb8cfa7_b43d692c", "line": 3565, "in_reply_to": "9fb8cfa7_1267bc27", "updated": "2019-06-10 13:58:09.000000000", "message": "Done", "commit_id": "d95286fe5430af850a44876901bd348ad197b7e4"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_8dba13df", "line": 3388, "updated": "2019-06-17 22:03:51.000000000", "message": "nix this - it's unrelated", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_2dcbe772", "line": 3419, "range": {"start_line": 3419, "start_character": 15, "end_line": 3419, "end_character": 17}, "updated": "2019-06-17 22:03:51.000000000", "message": "if", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_03ed8a24", "line": 3419, "range": {"start_line": 3419, "start_character": 15, "end_line": 3419, "end_character": 17}, "in_reply_to": "9fb8cfa7_2dcbe772", "updated": "2019-08-20 16:31:48.000000000", "message": "Done", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_edc4ef61", "line": 3420, "range": {"start_line": 3419, "start_character": 59, "end_line": 3420, "end_character": 25}, "updated": "2019-06-17 22:03:51.000000000", "message": "You can't resize to the same flavor, see L3536.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_8d88d322", "line": 3423, "updated": "2019-06-17 22:03:51.000000000", "message": "You're comparing full versioned objects here, which I'm pretty sure is not what you want (these aren't flavor IDs).\n\nThis can just be:\n\nif migration.migration_type == 'resize':", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_a33fde85", "line": 3423, "in_reply_to": "9fb8cfa7_8d88d322", "updated": "2019-08-20 16:31:48.000000000", "message": "Done", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_4ddbbb4e", "line": 3576, "updated": "2019-06-17 22:03:51.000000000", "message": "This eventually gets persisted in conductor after scheduling and we've RPC cast to the first selected destination host:\n\nhttps://github.com/openstack/nova/blob/ea7293c7bed3e5c759523f8d6c69387a4bcd7b9f/nova/conductor/manager.py#L367\n\nIt would probably be worth adding a comment in here that this will get persisted by conductor after scheduling.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_b92f6086", "line": 3413, "updated": "2019-07-17 15:46:38.000000000", "message": "nit: could we move this inside the if? IIUC save() doesn't actually call the DB unless necessary, so we won't save much by moving it inside the if, but seems to me it would make more sense to only call save() if we've actually changed anything.\n\n<later> Oh, I think you kept it this way for tests? It's easier to unconditionally mock save() and add a side effect onto that to check whether we've correctly reverted the numa topology.", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 9, "id": "7faddb67_ae517b10", "line": 3413, "in_reply_to": "7faddb67_b92f6086", "updated": "2019-08-20 16:31:48.000000000", "message": "I'm confused - isn't this inside the if already?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_399b7066", "line": 3561, "updated": "2019-07-17 15:46:38.000000000", "message": "Could instance.image_meta not change while same_instance_type is True?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "819fc91728f5182cd9646bfed44447c16d756721", "unresolved": false, "patch_set": 9, "id": "7faddb67_2a209bf7", "line": 3561, "in_reply_to": "7faddb67_146c3906", "updated": "2019-07-23 15:22:07.000000000", "message": "I could be wrong but I think the resize flow in compute on the dest host is going to be using the image properties stored within the instance (the image_* system_metadata values) from the last time the image changed in the instance (create, rebuild). Compute might need to re-download the image in which case it could have changed yeah, and you wouldn't really fail anything there unless you have nova/glance configured for checksum validation of images, but the image properties nova uses likely wouldn't change (because we use what we stash in the db).", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "87fcf38a0c5ec331591e3aae0930c0311c550b73", "unresolved": false, "patch_set": 9, "id": "7faddb67_146c3906", "line": 3561, "in_reply_to": "7faddb67_399b7066", "updated": "2019-07-17 15:48:35.000000000", "message": "So I see this has been discussed before, and while the image itself doesn't change, is there something preventing the user from adding/removing image props, then resizing with that same image?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b821d25a097ca3a3a89e758c39b828b8fbbfd401", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_7ab16844", "line": 712, "range": {"start_line": 712, "start_character": 10, "end_line": 712, "end_character": 68}, "updated": "2019-11-29 19:01:54.000000000", "message": "see we do it here", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "ac4dbced76848daab24ce6e0bcc833a4381992eb", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_84c40d61", "line": 3467, "updated": "2019-10-22 08:45:31.000000000", "message": "OK this handles revert. But what about when the resize is automatically rolled back due to failure in during prep_resize?", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "fc2c469922d2428f9ce9c7adcc6521d4a8da4c2b", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_97a904de", "line": 3467, "in_reply_to": "3fa7e38b_84c40d61", "updated": "2019-11-21 21:23:55.000000000", "message": "Excellent point. I think before I try to address that, I'll create a diagram for resize like we have for live migration [1]. Once I have that at least proposed, I'll be better equipped to answer this.\n\n[1] https://docs.openstack.org/nova/latest/reference/live-migration.html", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b482933e8121592b38f8aceba046aceeba11d34f", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_beaf6ddf", "line": 3467, "in_reply_to": "3fa7e38b_8cb3cfec", "updated": "2020-01-22 18:47:27.000000000", "message": "I wasn't able to find any place that we roll back the 'flavor', let alone the 'numa_topology'. I'm going to tackle this separately.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "7becccb10f4132ba91abe3dd3738390fd678430e", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_8cb3cfec", "line": 3467, "in_reply_to": "3fa7e38b_97a904de", "updated": "2019-12-18 17:33:38.000000000", "message": "I might be wrong, but if the failure happens during the resize, if it causes only reschedule - it should be ok to leave these fields as they are, if it causes failure - instance goes to error state, and I guess the user has to reset state and retry the resize, so these values will be set on the next try anyway. But it does not solve the problem when the user does not retry the resize, that's true, and even now I have not found the place where flavor inside the request spec is reverted back to old value.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "89e0fb033a61fa5c3b776ba5cc6e9e7a2a84a89b", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_3eea9d0c", "line": 3467, "in_reply_to": "3fa7e38b_beaf6ddf", "updated": "2020-01-22 18:51:36.000000000", "message": "I was thinking about doing it in reset-state, as it is the only way to restore instance from error back to active. but yeah this is separate thing", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b821d25a097ca3a3a89e758c39b828b8fbbfd401", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_3aea100e", "line": 3623, "range": {"start_line": 3617, "start_character": 11, "end_line": 3623, "end_character": 38}, "updated": "2019-11-29 19:01:54.000000000", "message": "_validate_flavor_image_nostatus internally calls _validate_flavor_image_numa_pci which calls hardware.numa_get_constraints\nalso but it does not retrun the numa toplogy object as a sideffect.\n\nso we quite often construct the numa toplogy object in the api code not to do validations but generally throw it way if its constuctatble.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "ac4dbced76848daab24ce6e0bcc833a4381992eb", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_84ebadda", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "updated": "2019-10-22 08:45:31.000000000", "message": "Why don't we update this at the same place we update the flavor in the spec? \n\nhttps://github.com/openstack/nova/blob/761be5d0cb364333cde267b431b1ef87920f7400/nova/conductor/manager.py#L340", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6289733951e2b0209bb1b92559b55cd3fed74250", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_fa579800", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_175ccdee", "updated": "2019-11-29 18:53:00.000000000", "message": "correct hardware.numa_get_constraints does not do the assignment part that numa_fit_instance_to_host does.\n\nit constructs the set of constrats that numa_fit_instance_to_host need to fulfil in order to do the assignment of resouces to the guest.\n\nso it just parses the falvor and image to achive that and can be done anywhere. im using it in the api to validate things here https://review.opendev.org/#/c/687957/7/nova/compute/api.py@3419 in my rebuild change.\n\nquite a lot of the fucntion in hardware.py are used in the api or conductor and only  a slecte few actully need acess to host specific info.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e5720c53171437f69ecb813cf02453f6e4608260", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_175ccdee", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_34c12e30", "updated": "2019-11-29 18:14:24.000000000", "message": "So my previous comment was wrong - while some stuff in hardware.py *does* expect to run on the compute host (like numa_fit_instance_to_host), numa_get_constraints only translates flavor extra specs and image properties into a guest NUMA topology object.\n\nSo we could do this in _get_request_spec_for_cold_migrate, we just need to pass it the correct flavor and image info.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "b482933e8121592b38f8aceba046aceeba11d34f", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_9e84f15e", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_801f9558", "updated": "2020-01-22 18:47:27.000000000", "message": "Makes sense to me. Done.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "91f2ce92f326f4cd76ca8512b3af066677510b55", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_ac05b57a", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_81e49443", "updated": "2020-01-29 13:27:28.000000000", "message": "hrm, if you are talking about https://github.com/openstack/nova/blob/761be5d0cb364333cde267b431b1ef87920f7400/nova/conductor/manager.py#L340 IIUC this method during initial resize runs before scheduler, scheduler requests host list only during task.execute() here https://github.com/openstack/nova/blob/761be5d0cb364333cde267b431b1ef87920f7400/nova/conductor/tasks/migrate.py#L342 or am I missing something?", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "fc2c469922d2428f9ce9c7adcc6521d4a8da4c2b", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_34c12e30", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_84ebadda", "updated": "2019-11-21 21:23:55.000000000", "message": "So I had to track this down because it's not obvious and I hate how resize and cold migrate are intertwined, but yeah, conductor api's resize_instance() calls to conductor manager's migrate_server(), which calls _cold_migrate(), which calls that _get_request_spec_for_cold_migrate() method, so while we could do it in that method, I suspect Stepehen did it here because of two things:\n\n1. We need the same_instance_type boolean.\n2. We need to call to the hardware module, which needs to run on the (destination) compute host, and not the conductor.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c1f02d8568943ed0edf111330e60bf2e83c8e926", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_81e49443", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_9e84f15e", "updated": "2020-01-22 19:52:59.000000000", "message": "Actually, I don't think I can do this. The conductor stuff runs after the scheduler, right? As such, I need to update stuff here, at the api level, so that the scheduler correctly filters hosts using the new NUMA topology information.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "753db47acf65ff5f07bb501fe47d7c3729cad5e4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_801f9558", "line": 3637, "range": {"start_line": 3634, "start_character": 1, "end_line": 3637, "end_character": 55}, "in_reply_to": "3fa7e38b_fa579800", "updated": "2020-01-07 10:57:32.000000000", "message": "I prefer to update the spec for the same reason (resize) at the same place so that the future reader can find such updates in a single place. \n\nIf you feel that it will blow up the size of the change then at least a fat comment above this code should point to the other place and vice versa.", "commit_id": "2f533cf9cbb265603979c18e0810b0d64a08695b"}], "nova/tests/functional/libvirt/test_numa_servers.py": [{"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0c59faad85ff2a0b393b342e3d72f67979832b48", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_55ab1488", "line": 151, "range": {"start_line": 151, "start_character": 12, "end_line": 151, "end_character": 54}, "updated": "2019-06-05 10:48:11.000000000", "message": "im surprised this is not considerd a named lamda and is not forbiden by you hacking/pep8 check. ill have to rememebr that this works :)", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "821c7fd7a1623a3390c0e764a115dbd4b425082d", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_7d13715d", "line": 151, "range": {"start_line": 151, "start_character": 12, "end_line": 151, "end_character": 54}, "in_reply_to": "9fb8cfa7_55ab1488", "updated": "2019-06-07 10:12:36.000000000", "message": "It is and I'll have to fix it later (when I bump hacking), but for now I'm keeping this since it lets me centralize it in a later patch", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0c59faad85ff2a0b393b342e3d72f67979832b48", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_75873811", "line": 162, "range": {"start_line": 149, "start_character": 8, "end_line": 162, "end_character": 41}, "updated": "2019-06-05 10:48:11.000000000", "message": "this should proably be a helper function.\n\nim sure there are other places this would be useful\n\nlike line 376 where it looks like this came from.", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "821c7fd7a1623a3390c0e764a115dbd4b425082d", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_3d1df965", "line": 162, "range": {"start_line": 149, "start_character": 8, "end_line": 162, "end_character": 41}, "in_reply_to": "9fb8cfa7_15603c01", "updated": "2019-06-07 10:12:36.000000000", "message": "https://www.youtube.com/watch?v=tnf7r6lUVfA", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e3c055fe281bdf4ac2bc3ce45fd31c7a11ba7a26", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_15603c01", "line": 162, "range": {"start_line": 149, "start_character": 8, "end_line": 162, "end_character": 41}, "in_reply_to": "9fb8cfa7_75873811", "updated": "2019-06-05 10:50:41.000000000", "message": "ah you have done it already here\nhttps://review.opendev.org/#/c/663102", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0c59faad85ff2a0b393b342e3d72f67979832b48", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_95f0ac69", "line": 207, "range": {"start_line": 207, "start_character": 0, "end_line": 207, "end_character": 40}, "updated": "2019-06-05 10:48:11.000000000", "message": "ok i guess this works\n\ni proably would have set it to 1 and then 2 and  assert the number changed but None is also a valid value to test for.", "commit_id": "8946dbda5d0c9b8493b19005bf35826ad607dc7a"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b01a212978fc1f99ce99ba9ac3f13f7fa8380fef", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_eda70fa7", "line": 220, "updated": "2019-06-17 22:03:51.000000000", "message": "This test isn't actually calling the revertResize server action API. I'm not sure what you are calling \"revert\" here but I suspect you're thinking revert is some kind of rollback from resize failure, which it's not - it means I've successfully resized or cold migrated the server but decided I don't want to use the new flavor and revert to the old flavor.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 8, "id": "9fb8cfa7_a326fe67", "line": 220, "in_reply_to": "9fb8cfa7_eda70fa7", "updated": "2019-08-20 16:31:48.000000000", "message": "That's exactly what I was testing. Fixed.", "commit_id": "afd17e97ea49a767686c2db8e203d30cacc578d2"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_74cd6d2f", "line": 150, "range": {"start_line": 150, "start_character": 25, "end_line": 150, "end_character": 61}, "updated": "2019-07-17 15:46:38.000000000", "message": "nit: flip these around, no? You're asserting that what happened (numa_topology.cells) is the same as what you were expecting (cell_count)\n\nThis also may be due to my confusion around the \"cell_count\" variable name, I think something like \"expected_cell_count\" would make it clearer.", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 9, "id": "7faddb67_0e40cf34", "line": 150, "range": {"start_line": 150, "start_character": 25, "end_line": 150, "end_character": 61}, "in_reply_to": "7faddb67_74cd6d2f", "updated": "2019-08-20 16:31:48.000000000", "message": "I think this is correct already:\n\n  assertEqual(expected, actual)\n  assertIn(expected, value)", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_39ba906d", "line": 157, "updated": "2019-07-17 15:46:38.000000000", "message": "Aha, thanks for this :)", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_39485085", "line": 163, "range": {"start_line": 163, "start_character": 42, "end_line": 163, "end_character": 48}, "updated": "2019-07-17 15:46:38.000000000", "message": "You mean old numa topology?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 9, "id": "7faddb67_ae7adb84", "line": 163, "range": {"start_line": 163, "start_character": 42, "end_line": 163, "end_character": 48}, "in_reply_to": "7faddb67_39485085", "updated": "2019-08-20 16:31:48.000000000", "message": "Done", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_74680d1c", "line": 196, "range": {"start_line": 196, "start_character": 62, "end_line": 196, "end_character": 67}, "updated": "2019-07-17 15:46:38.000000000", "message": "why not ACTIVE?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "f76a6616495acc96faf0b0cfaefc281391e148ee", "unresolved": false, "patch_set": 9, "id": "7faddb67_781df4bb", "line": 196, "range": {"start_line": 196, "start_character": 62, "end_line": 196, "end_character": 67}, "in_reply_to": "7faddb67_2a75fbfa", "updated": "2019-07-24 20:16:17.000000000", "message": "Oh god you're right, why does [1] even exist? +1 to using InstanceHelperMixin and its waiters.\n\n[1] https://github.com/openstack/nova/blob/master/nova/tests/functional/test_servers.py#L89-L94", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "819fc91728f5182cd9646bfed44447c16d756721", "unresolved": false, "patch_set": 9, "id": "7faddb67_2a75fbfa", "line": 196, "range": {"start_line": 196, "start_character": 62, "end_line": 196, "end_character": 67}, "in_reply_to": "7faddb67_74680d1c", "updated": "2019-07-23 15:22:07.000000000", "message": "I think these tests use the confusing version of _wait_for_state_change which is waiting for the \"wait for change *from* the given state\" logic which I hate - I much more prefer the \"wait for terminal state\" logic version used in most tests and which is in the InstanceHelperMixin.", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "40d6e6652f213d4208ad780c5171de930f71cdb5", "unresolved": false, "patch_set": 9, "id": "7faddb67_6e7063a5", "line": 196, "range": {"start_line": 196, "start_character": 62, "end_line": 196, "end_character": 67}, "in_reply_to": "7faddb67_781df4bb", "updated": "2019-08-20 16:31:48.000000000", "message": "I'll tackle this is a follow-up", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "e0afc7faad77b8405b5b7476a83d2ef217fd8dc0", "unresolved": false, "patch_set": 9, "id": "7faddb67_149e7906", "line": 238, "range": {"start_line": 231, "start_character": 0, "end_line": 238, "end_character": 59}, "updated": "2019-07-17 15:46:38.000000000", "message": "Could we not just assert stuff about the request spec instead of all this?", "commit_id": "3bdade39f92dd38133171fcf3e57d4d9a688d342"}, {"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "4a4fcdb1fab3a3ad14c8545b57fd5eeec5fb1d5a", "unresolved": false, "patch_set": 10, "id": "7faddb67_27def010", "line": 22, "updated": "2019-08-19 18:27:25.000000000", "message": "Need to fix the order of import for the following pep8 error:\n\n ./nova/tests/functional/libvirt/test_numa_servers.py:23:1: H306  imports not in alphabetical order (nova.context, nova.conf.neutron)", "commit_id": "e5578501bb962a7d144ed35af535bc86b2053a3e"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f58c09d8a7c8253992a849c4bb29a7af77dabf22", "unresolved": false, "patch_set": 10, "id": "7faddb67_8c31cbf0", "line": 22, "in_reply_to": "7faddb67_27def010", "updated": "2019-08-22 10:49:45.000000000", "message": "Done", "commit_id": "e5578501bb962a7d144ed35af535bc86b2053a3e"}, {"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "4a4fcdb1fab3a3ad14c8545b57fd5eeec5fb1d5a", "unresolved": false, "patch_set": 10, "id": "7faddb67_a72500c4", "line": 208, "range": {"start_line": 207, "start_character": 0, "end_line": 208, "end_character": 62}, "updated": "2019-08-19 18:27:25.000000000", "message": "nit: This 2 lines can be moved into _inspect_filter_numa_topology() if moving\n\n ctxt = context.get_admin_context()\n\nto the above.", "commit_id": "e5578501bb962a7d144ed35af535bc86b2053a3e"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f58c09d8a7c8253992a849c4bb29a7af77dabf22", "unresolved": false, "patch_set": 10, "id": "7faddb67_0c1e3b5f", "line": 208, "range": {"start_line": 207, "start_character": 0, "end_line": 208, "end_character": 62}, "in_reply_to": "7faddb67_a72500c4", "updated": "2019-08-22 10:49:45.000000000", "message": "I didn't want to do this since it was fudging responsibility, and I need to do this without the request spec below. I did, however, move this to a separate function", "commit_id": "e5578501bb962a7d144ed35af535bc86b2053a3e"}, {"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "4a4fcdb1fab3a3ad14c8545b57fd5eeec5fb1d5a", "unresolved": false, "patch_set": 10, "id": "7faddb67_672b8894", "line": 232, "range": {"start_line": 231, "start_character": 0, "end_line": 232, "end_character": 62}, "updated": "2019-08-19 18:27:25.000000000", "message": "ditto", "commit_id": "e5578501bb962a7d144ed35af535bc86b2053a3e"}]}}, "openstack%2Fcharm-cinder-ceph~stable%2F20.02~Ice84be31ced1908aded21d9f58296bd581bbcd91": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:50:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-aodh~stable%2F20.02~Icd413fd6a514b31212310a3b3274424228948176": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:50:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fironic-python-agent-builder~master~I831b414461f77c65e34b0f357763e38e74e65e29": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 11:24:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-17 16:08:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ie01d5509a479a726adac6490a5f32ef2df2ccde6": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:52:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-14 23:21:15.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {"doc/source/roles/role-tripleo-container-manage.rst": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "a81241e5d784a56000305362c80c08bd3a0d45e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4c1be882", "line": 99, "updated": "2020-02-14 15:42:15.000000000", "message": "oops, it shifted", "commit_id": "9551cbb49beddc63c4b67efc36ac7dcfd8c99d1a"}]}}, "openstack%2Fopenstack-helm-infra~master~I8f2a9aa12beffe3ca394a2e9dd00aba7e5292f29": {"owner_id": 29131, "owner_name": "diwakar thyagaraj", "owner_email": "diwakar.chitoor.thyagaraj@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:53:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 12281, "name": "Itxaka", "email": "igarcia@suse.com", "username": "itxaka"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 0, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "_account_id": 17591, "name": "Steve Wilkerson", "email": "wilkers.steve@gmail.com", "username": "srwilkers"}, {"value": 2, "date": "2020-02-15 01:08:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}, {"value": 0, "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {"tools/deployment/apparmor/020-ceph.sh": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9bd30be37e2886e28f20eb05ed3b83eae75f35c4", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_edfaf241", "updated": "2020-02-12 22:11:06.000000000", "message": "I don't think this is needed", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "ccb1ae435c08a4fb23ad9eb7c342f0a76038082c", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_ee2c29b3", "in_reply_to": "3fa7e38b_edfaf241", "updated": "2020-02-13 00:51:03.000000000", "message": "We have app armor for ceph as well so needed to test that as well.", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}, {"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "f79a71262101ab89b08ef25c84e249fdfe42b61b", "unresolved": false, "patch_set": 54, "id": "3fa7e38b_ca3580a8", "line": 20, "range": {"start_line": 20, "start_character": 0, "end_line": 20, "end_character": 55}, "updated": "2020-02-14 08:23:54.000000000", "message": "I was comparing this and the ../osh-infra-logging/020-ceph.sh scripts. A big difference I can see is here the ceph-osd chart is not made or installed. IIRC, it's the osds which provide the actual storage in ceph, so I think this could be why Prometheus is failing in Zuul.", "commit_id": "8b7893cf9843bb575e5a7c68a6b61f50b64d280f"}, {"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "f79a71262101ab89b08ef25c84e249fdfe42b61b", "unresolved": false, "patch_set": 54, "id": "3fa7e38b_8a3b0898", "line": 200, "range": {"start_line": 200, "start_character": 0, "end_line": 200, "end_character": 55}, "updated": "2020-02-14 08:23:54.000000000", "message": "Don't forget to add it to this loop too.", "commit_id": "8b7893cf9843bb575e5a7c68a6b61f50b64d280f"}, {"author": {"_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, "change_message_id": "97a9da57f14c8898aa16c5562abdb5bc959cd2df", "unresolved": false, "patch_set": 54, "id": "3fa7e38b_2a1d340f", "line": 208, "range": {"start_line": 208, "start_character": 0, "end_line": 208, "end_character": 44}, "updated": "2020-02-14 08:31:20.000000000", "message": "Sorry, I missed this obviously...", "commit_id": "8b7893cf9843bb575e5a7c68a6b61f50b64d280f"}], "tools/deployment/osh-infra-monitoring/050-prometheus.sh": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9bd30be37e2886e28f20eb05ed3b83eae75f35c4", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_ed7f52b9", "side": "PARENT", "line": 23, "range": {"start_line": 22, "start_character": 0, "end_line": 23, "end_character": 125}, "updated": "2020-02-12 22:11:06.000000000", "message": "why was this removed?", "commit_id": "b21fdfabada05c68d9c7a922a4259725310030bf"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "ccb1ae435c08a4fb23ad9eb7c342f0a76038082c", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_ae32b10c", "side": "PARENT", "line": 23, "range": {"start_line": 22, "start_character": 0, "end_line": 23, "end_character": 125}, "in_reply_to": "3fa7e38b_ed7f52b9", "updated": "2020-02-13 00:51:03.000000000", "message": "Reverted", "commit_id": "b21fdfabada05c68d9c7a922a4259725310030bf"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "43b03a10ab11bac25c67a43937fdad91939e06c7", "unresolved": false, "patch_set": 57, "id": "3fa7e38b_db41c938", "line": 38, "range": {"start_line": 38, "start_character": 0, "end_line": 38, "end_character": 57}, "updated": "2020-02-14 19:17:06.000000000", "message": "This isn't really needed", "commit_id": "95a3baeadfa121039c824769649495bce4d41903"}], "zuul.d/jobs.yaml": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9bd30be37e2886e28f20eb05ed3b83eae75f35c4", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_6dc60218", "side": "PARENT", "line": 275, "range": {"start_line": 275, "start_character": 38, "end_line": 275, "end_character": 68}, "updated": "2020-02-12 22:11:06.000000000", "message": "Why was this removed?", "commit_id": "b21fdfabada05c68d9c7a922a4259725310030bf"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "ccb1ae435c08a4fb23ad9eb7c342f0a76038082c", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_8e1b3582", "side": "PARENT", "line": 275, "range": {"start_line": 275, "start_character": 38, "end_line": 275, "end_character": 68}, "in_reply_to": "3fa7e38b_6dc60218", "updated": "2020-02-13 00:51:03.000000000", "message": "revereted", "commit_id": "b21fdfabada05c68d9c7a922a4259725310030bf"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9bd30be37e2886e28f20eb05ed3b83eae75f35c4", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_cdd616c5", "line": 278, "range": {"start_line": 278, "start_character": 10, "end_line": 278, "end_character": 60}, "updated": "2020-02-12 22:11:06.000000000", "message": "I don't think prometheus needs nfs, it should run fine with ceph as the storage backend.\n\nSomeone who is more familiar with prometheus can probably speak better to this than I can though.", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "ccb1ae435c08a4fb23ad9eb7c342f0a76038082c", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_4e21bdb1", "line": 278, "range": {"start_line": 278, "start_character": 10, "end_line": 278, "end_character": 60}, "in_reply_to": "3fa7e38b_cdd616c5", "updated": "2020-02-13 00:51:03.000000000", "message": "Yes storage was not getting picked up, hence added in value overrides and also openstack control panel was not enabled, Enabled it back as well.", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}], "zuul.d/project.yaml": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9bd30be37e2886e28f20eb05ed3b83eae75f35c4", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_2de56aa3", "updated": "2020-02-12 22:11:06.000000000", "message": "obv revert this file when its no longer WIP", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}, {"author": {"_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, "change_message_id": "ccb1ae435c08a4fb23ad9eb7c342f0a76038082c", "unresolved": false, "patch_set": 40, "id": "3fa7e38b_ae0b912a", "in_reply_to": "3fa7e38b_2de56aa3", "updated": "2020-02-13 00:51:03.000000000", "message": "Sure Will do it.", "commit_id": "d49c103babdd00c89c3c2d3af93d3d52318c6565"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "72607656e565cdace3ce91f854a13ddb4a2b0260", "unresolved": false, "patch_set": 55, "id": "3fa7e38b_2c9eac54", "line": 48, "range": {"start_line": 16, "start_character": 2, "end_line": 48, "end_character": 0}, "updated": "2020-02-14 15:17:50.000000000", "message": "expected str for dictionary value @ data['check']['jobs'][0]['openstack-helm-infra-apparmor']", "commit_id": "56c6798509b953fd1d1967dd30f9dcce7f5db92c"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "50f613bf03f283624ebce996f1d3217544c84f0f", "unresolved": false, "patch_set": 62, "id": "3fa7e38b_3b357d43", "line": 48, "range": {"start_line": 16, "start_character": 2, "end_line": 48, "end_character": 0}, "updated": "2020-02-14 20:38:12.000000000", "message": "expected str for dictionary value @ data['check']['jobs'][0]['openstack-helm-infra-apparmor']", "commit_id": "004db3493354b7f545531ab353839a0b6402307c"}]}}, "opendev%2Fsystem-config~master~I4f4ff5ade85b726048bf8e1df56052e45b5fef56": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-02-06 21:09:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-17 17:21:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 1, "date": "2020-02-17 08:55:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fnova-specs~master~I5d689d3edaa118f1a0defd63ac375a83b9ee553a": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:43:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {"specs/ussuri/approved/support-glance-multiple-backend.rst": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "d31da74b880a4a44aa8f0de62c81854e59d5f8cf", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b3e742d8", "line": 148, "range": {"start_line": 148, "start_character": 2, "end_line": 148, "end_character": 16}, "updated": "2020-02-17 15:42:46.000000000", "message": "x", "commit_id": "813708fe90cf3908c5e920d52241250428800f97"}]}}, "openstack%2Fnova-specs~master~I2ce6b82b464ac2b3a563f4a197164bbecc38b318": {"owner_id": 7166, "owner_name": "Sylvain Bauza", "owner_email": "sbauza@redhat.com", "labels": [{"value": 2, "date": "2020-02-17 10:42:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 13:14:47.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 2, "date": "2020-02-17 15:40:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}], "comments": {}}, "openstack%2Fironic~stable%2Ftrain~Ifb6258df26236cf376742a051602321e9b67a52c": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-17 13:33:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "opendev%2Fsystem-config~master~I165c38ade788c1069b1fdb3f01bb887a2ece60fe": {"owner_id": 9061, "owner_name": "David Moreau Simard", "owner_email": "moi@dmsimard.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "zuul%2Fzuul-jobs~master~Ic3e90d06ac7e62d76c7fb0a67826f77f00ebbca0": {"owner_id": 6889, "owner_name": "Fabien Boucher", "owner_email": "fboucher@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6889, "name": "Fabien Boucher", "email": "fboucher@redhat.com", "username": "fabien-boucher"}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 0, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 2, "date": "2020-02-17 17:14:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-01-28 08:13:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "airship%2Fmaas~master~I4bfd82a568c1eaad7de891bd103b3f8ff032e589": {"owner_id": 30784, "owner_name": "Trung Thai", "owner_email": "tthai@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 28719, "name": "Phil Sphicas", "email": "phil.sphicas@att.com", "username": "ps3910"}, {"value": 2, "date": "2020-02-13 02:12:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-02-13 02:12:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30315, "name": "Marjorie Middleton", "email": "mmiddleton@att.com", "username": "mm782t"}, {"value": 1, "date": "2020-02-13 02:12:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "_account_id": 29254, "name": "Luna Das", "email": "luna.das@att.com", "username": "ld366r"}, {"value": 0, "_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, {"value": 0, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}, {"value": 2, "date": "2020-02-17 17:19:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-13 02:12:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29298, "name": "Jagan Mohan Kavva", "email": "jk330k@att.com", "username": "jk330k"}], "comments": {"charts/maas/templates/etc/_rsyslog.conf.tpl": [{"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "a0cdcf5f103cbc804786f5e00524d7c4c70defdf", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d501df3a", "line": 8, "updated": "2019-11-19 20:07:10.000000000", "message": "thanks Andrew..you are right..this does not apply to anything. let me redo accordingly", "commit_id": "4cdba4492390270fb245a8e6701adface096512e"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "36ca78d082e38063c8948b88c7d6faaf7c998aa5", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_df53406b", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 49}, "updated": "2019-11-19 17:55:31.000000000", "message": "Where does this flag get applied? This is a config file; I'm not sure what would pick this command line option up.\n\nFor example: https://www.thegeekdiary.com/centos-rhel-67-how-to-increase-system-log-message-verbosity-rsyslogd/", "commit_id": "4cdba4492390270fb245a8e6701adface096512e"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "38ddc26308ea32f0de74ee8595420653f00b7d40", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_4af53e82", "line": 10, "range": {"start_line": 10, "start_character": 46, "end_line": 10, "end_character": 122}, "updated": "2019-11-20 20:28:36.000000000", "message": "Why not just log to the standard logfile?", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "e85ed095c5c5ff7bc570f35d184f5b457c69123e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_fb6365a9", "line": 10, "range": {"start_line": 10, "start_character": 46, "end_line": 10, "end_character": 122}, "in_reply_to": "3fa7e38b_4af53e82", "updated": "2019-11-25 15:41:15.000000000", "message": "the purpose of this is allow the flexibility to change rsyslog settings by using overwrite. I think putting it in different logfile would not contaminate with the current logging which may be tracked and monitored by other tools (aka nagios, elasticsearch,etc). \n\n'Default' logging value (old or new) will continue to redirect to the same standard logfile.", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "1ad61fde117f6868d30d71860f38385cf4fb2385", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ea269867", "line": 10, "range": {"start_line": 10, "start_character": 46, "end_line": 10, "end_character": 122}, "in_reply_to": "3fa7e38b_fb6365a9", "updated": "2019-12-05 23:03:47.000000000", "message": "> the purpose of this is allow the flexibility to change rsyslog\n > settings by using overwrite. \n\nPerfect\n\n> I think putting it in different\n> logfile would not contaminate with the current logging which may be\n> tracked and monitored by other tools (aka nagios, elasticsearch,etc).\n\nYou are right, and that is a clever way of doing so. However, I don't think that is standard practice in the industry. The expected behavior would be reducing the verbosity of the logging systems in production so that LMA components are not overwhelmed. With the current implementation, no logs will appear in LMA if verbose logging is used.\n\nI would recommend just removing the additional logfile to keep this behavior in-line with industry standards.", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "1ad61fde117f6868d30d71860f38385cf4fb2385", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_4a156ce5", "line": 14, "range": {"start_line": 10, "start_character": 0, "end_line": 14, "end_character": 10}, "updated": "2019-12-05 23:03:47.000000000", "message": "We'll want this to be one file, per my other comment.", "commit_id": "47aeed601cb74abc002f0eeb8d6b3b0efd4eb043"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "574b03a5c4ed909d7bda4e530ab8f9d42c579548", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_0656815f", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 41}, "updated": "2019-12-06 19:01:55.000000000", "message": "The guards here are correct, but why revert to the same command line flag from PS 1?\n\nI don't think syslog will read command line flags from here. According to the Ubuntu manpage for syslog.conf [0], it should look like this:\n\n  *.{{ .Values.conf.syslog.log_level }};        {{ .Values.conf.syslog.logpath }}/{{ .Values.conf.syslog.logfile }}\n\n[0] http://manpages.ubuntu.com/manpages/trusty/man5/syslog.conf.5.html", "commit_id": "e6161745ef0a6aa81cb03edcfe1c58090ab2533f"}, {"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "7e14fb2a3c2af339c0dbbf0f812acfac660f10ef", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_060e813c", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 41}, "in_reply_to": "3fa7e38b_0656815f", "updated": "2019-12-06 19:30:02.000000000", "message": "you are right. it does not conform to syslog.conf .  I had in the PS4. I cleaned up too much.  Put it back with suggestion.  thanks", "commit_id": "e6161745ef0a6aa81cb03edcfe1c58090ab2533f"}], "charts/maas/values.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "38ddc26308ea32f0de74ee8595420653f00b7d40", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_aa8dd22a", "line": 200, "range": {"start_line": 200, "start_character": 6, "end_line": 200, "end_character": 39}, "updated": "2019-11-20 20:28:36.000000000", "message": "Five is actually the notice level of severity [0]. Since this is customizable, can we go with the standard informational level as default (four).\n\n[0] https://www.ietf.org/rfc/rfc5424.txt", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "e85ed095c5c5ff7bc570f35d184f5b457c69123e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7ba9b58c", "line": 200, "range": {"start_line": 200, "start_character": 6, "end_line": 200, "end_character": 39}, "in_reply_to": "3fa7e38b_aa8dd22a", "updated": "2019-11-25 15:41:15.000000000", "message": "you are right 5 is 'notice' severity. when this is set, it will have more info spitting out from rsyslog.  ok I'll remove the description clause to avoid confusion and set to  '4' or 'Warning' keyword.", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "38ddc26308ea32f0de74ee8595420653f00b7d40", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0abd06b0", "line": 201, "range": {"start_line": 201, "start_character": 0, "end_line": 201, "end_character": 20}, "updated": "2019-11-20 20:28:36.000000000", "message": "This only toggles custom severity levels of logging, right? If so, I'd be a bit confused by this option.\n\nWhy not just make severity its own option, and check if it's set?", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "e85ed095c5c5ff7bc570f35d184f5b457c69123e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_bb8c0d35", "line": 201, "range": {"start_line": 201, "start_character": 0, "end_line": 201, "end_character": 20}, "in_reply_to": "3fa7e38b_0abd06b0", "updated": "2019-11-25 15:41:15.000000000", "message": "that's correct.  it's custom logging when using overwrite keyword.  it's just another check to be certain.", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 29254, "name": "Luna Das", "email": "luna.das@att.com", "username": "ld366r"}, "change_message_id": "a95c371a1010f2f8f1a89d40f55570dc68b86669", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5ba639c2", "line": 202, "updated": "2019-11-25 15:06:03.000000000", "message": "rsyslog log levels are verbose , not integer if I'm not wrong .", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 30784, "name": "Trung Thai", "email": "tthai@att.com", "username": "thaitr"}, "change_message_id": "e85ed095c5c5ff7bc570f35d184f5b457c69123e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3b5a5d4f", "line": 202, "in_reply_to": "3fa7e38b_5ba639c2", "updated": "2019-11-25 15:41:15.000000000", "message": "good catch.  it can be represented as numeric or keyword.  i am going to replace with keyword instead so that it's consistent the requirement.", "commit_id": "10e51e5ea64c4c30b58ef5f5b407b6d5d8761adf"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "1ad61fde117f6868d30d71860f38385cf4fb2385", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_8a48442e", "line": 198, "range": {"start_line": 198, "start_character": 4, "end_line": 198, "end_character": 12}, "updated": "2019-12-05 23:03:47.000000000", "message": "I would recommend replacing this section a single key for \"log_level\". If the key does not exist, we will use a default logging level of \"warning\". If the user specifies a logging level, we will use that logging level. In it's final form, it would look like:\n\n  syslog:\n    log_level: warning\n\nEverything else can be removed.", "commit_id": "47aeed601cb74abc002f0eeb8d6b3b0efd4eb043"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "1ad61fde117f6868d30d71860f38385cf4fb2385", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0a4bf45e", "line": 200, "range": {"start_line": 200, "start_character": 6, "end_line": 200, "end_character": 28}, "updated": "2019-12-05 23:03:47.000000000", "message": "Warning is a good default value; however, default log levels are not usually customizable. I would recommend remove this from the chart values and just assuming a default logging level of warning, unless the user provides a different log level (see below).", "commit_id": "47aeed601cb74abc002f0eeb8d6b3b0efd4eb043"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "574b03a5c4ed909d7bda4e530ab8f9d42c579548", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_a66d2d30", "line": 198, "range": {"start_line": 198, "start_character": 4, "end_line": 198, "end_character": 13}, "updated": "2019-12-06 19:01:55.000000000", "message": "This section looks good.", "commit_id": "e6161745ef0a6aa81cb03edcfe1c58090ab2533f"}]}}, "openstack%2Fcharm-masakari-monitors~stable%2F20.02~I1249fa735761c2a43dc9ea770ec1e27f464d98f1": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:14:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-manila-ganesha~stable%2F20.02~I9dae21f75095abf43eb7adff28703c23cc9d5e4a": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:14:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-manila~stable%2F20.02~Id587324894cbdc5815b939bb659a3a86fd5a13b0": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:14:47.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-keystone-saml-mellon~stable%2F20.02~Iabb9a90e7fe7ef99a02cbf8b0c15edee12180c17": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:12:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-manila-generic~stable%2F20.02~Ib4f988bbc46416d288c54cfad445c2d568ad14fa": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:13:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-mysql-innodb-cluster~stable%2F20.02~Iae041d93f2ef7dc92baa19c8bd3c05369d4b583a": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:10:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~Ieecb9e6125a182a3da41002aea26233a98aecc8c": {"owner_id": 7488, "owner_name": "Jeffrey Zhang", "owner_email": "zhang.lei.fly@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 10:57:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-17 16:32:03.000000000", "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}], "comments": {"plugins/modules/os_ironic_node.py": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "19bc0f5741f0b04d899482a6cb51019f0f8383a6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cdc7c13e", "line": 114, "updated": "2020-02-17 14:17:29.000000000", "message": "Perhaps a note should indicate that the json object is only available for OpenStack Ironic stable/stein onwards?\n\nAlternatively, I wonder if there's a way to detect whether this is a capability in the target cloud, then error out if it is not available?", "commit_id": "bcfa2aa095287a9a1c1017840ed25d02fd536f8c"}, {"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "50f081a398036845a90e5d54c379432f300a39a7", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_de352546", "line": 114, "in_reply_to": "3fa7e38b_132c16ff", "updated": "2020-02-17 16:13:40.000000000", "message": "OK, so if a user tries to use the json object and it is not compatible on the back-end, will the ironic node error out - or how will the user see what the issue is?", "commit_id": "bcfa2aa095287a9a1c1017840ed25d02fd536f8c"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "e1172bc09ca33dedcfada0d4068efb96703fd949", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_132c16ff", "line": 114, "in_reply_to": "3fa7e38b_cdc7c13e", "updated": "2020-02-17 15:42:31.000000000", "message": "We actually do it: https://github.com/openstack/openstacksdk/blob/master/openstack/baremetal/v1/node.py#L341-L343", "commit_id": "bcfa2aa095287a9a1c1017840ed25d02fd536f8c"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "b8a121d501e74636afcaa3c58c011984d3cc1777", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5e705510", "line": 114, "in_reply_to": "3fa7e38b_de352546", "updated": "2020-02-17 16:15:59.000000000", "message": "Ironic will complain about unsupported version 1.56. May not be 100% obvious, but that's what you get everywhere else (e.g. trying to set a new field in older ironic).", "commit_id": "bcfa2aa095287a9a1c1017840ed25d02fd536f8c"}]}}, "openstack%2Fcharm-heat~stable%2F20.02~Ide929929d9c7325a5af7fcd20040dfb696efe4a6": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:06:51.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "x%2Fproliantutils~master~If66e23209cfcae7c418d1e0dec34add5ed65dc6c": {"owner_id": 11076, "owner_name": "Shivanand Tendulker", "owner_email": "stendulker@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 10:45:24.000000000", "_account_id": 18781, "name": "vinay50muddu", "email": "vinay50muddu@yahoo.com", "username": "vmud213"}, {"value": 0, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 2, "date": "2020-02-17 17:07:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11297, "name": "Nisha Agarwal", "email": "agarwalnisha1980@gmail.com", "username": "Nisha"}], "comments": {"proliantutils/redfish/connector.py": [{"author": {"_account_id": 18781, "name": "vinay50muddu", "email": "vinay50muddu@yahoo.com", "username": "vmud213"}, "change_message_id": "13e90a09966f545f5cc89fabac21dd6b905e2895", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a3b61b25", "line": 52, "range": {"start_line": 52, "start_character": 54, "end_line": 52, "end_character": 59}, "updated": "2020-02-17 05:45:50.000000000", "message": "s/False/blocking", "commit_id": "fb276d725975264bd9817ec7ea7a2c7f9f93b37a"}, {"author": {"_account_id": 18781, "name": "vinay50muddu", "email": "vinay50muddu@yahoo.com", "username": "vmud213"}, "change_message_id": "13e90a09966f545f5cc89fabac21dd6b905e2895", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c3b1d72d", "line": 52, "range": {"start_line": 52, "start_character": 69, "end_line": 52, "end_character": 71}, "updated": "2020-02-17 05:45:50.000000000", "message": "s/timeout/timeout", "commit_id": "fb276d725975264bd9817ec7ea7a2c7f9f93b37a"}, {"author": {"_account_id": 18781, "name": "vinay50muddu", "email": "vinay50muddu@yahoo.com", "username": "vmud213"}, "change_message_id": "f9c20a02560fb8c7b42b2d35c478ca07a7516847", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_635ee351", "line": 52, "range": {"start_line": 52, "start_character": 45, "end_line": 52, "end_character": 54}, "updated": "2020-02-17 07:36:49.000000000", "message": "If i understand it correctly, we want to only allow these values. But when coercing the values passed, it should always be captured in logs and notified duly. So it deserves a log message.", "commit_id": "17a72482c2958296d89527f74e78a1305ce79d89"}, {"author": {"_account_id": 18781, "name": "vinay50muddu", "email": "vinay50muddu@yahoo.com", "username": "vmud213"}, "change_message_id": "44a5c5256f35f186f9baa852f8856b28450b4fe0", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e47c1ac9", "line": 39, "updated": "2020-02-17 10:45:24.000000000", "message": "The prototype of the function should also have allow_redirects to be compatible with super class \"_op\" method in the strict sense.", "commit_id": "0196cd316236ca48f41ace48c662f4735b574b7b"}, {"author": {"_account_id": 11297, "name": "Nisha Agarwal", "email": "agarwalnisha1980@gmail.com", "username": "Nisha"}, "change_message_id": "5977dcd1099ecbcb497c6b29bba5e0dbd1595e8a", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_cba00692", "line": 39, "in_reply_to": "3fa7e38b_e47c1ac9", "updated": "2020-02-17 17:07:24.000000000", "message": "+1", "commit_id": "0196cd316236ca48f41ace48c662f4735b574b7b"}]}}, "openstack%2Fcharm-masakari~stable%2F20.02~I8b7c27cadfb0c19bdb4d56fadcb0b5df39218897": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:07:05.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "airship%2Fairshipctl~master~Id7d1e0dceb268ff455eec6e2d9fb65a5ab4e54ff": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 2, "date": "2020-02-17 17:01:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-17 14:37:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"pkg/config/config_test.go": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "e9ff245fd25de5457b45cfb091b1a0ef724c05ef", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_943342f7", "line": 233, "range": {"start_line": 229, "start_character": 0, "end_line": 233, "end_character": 2}, "updated": "2020-01-27 14:41:56.000000000", "message": "I don't think this slice is needed here. The assert.Contains function works on maps", "commit_id": "1892c311368f1b19db4abf3b77d9f091ece87899"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "e643587fee2166c32539e10b02ad97e9a4ab1a9d", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ffe5a63e", "line": 233, "range": {"start_line": 229, "start_character": 0, "end_line": 233, "end_character": 2}, "in_reply_to": "3fa7e38b_943342f7", "updated": "2020-02-13 09:05:41.000000000", "message": "Done", "commit_id": "1892c311368f1b19db4abf3b77d9f091ece87899"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "559a06893b16b5c4d0011f962fc877c4b563e25c", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_56e87c13", "line": 454, "range": {"start_line": 454, "start_character": 5, "end_line": 454, "end_character": 21}, "updated": "2020-02-12 14:34:50.000000000", "message": "TestModifyCluster", "commit_id": "67e9ca038976f8cae01e542651b3f2f1e3976d60"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "e643587fee2166c32539e10b02ad97e9a4ab1a9d", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_02c63416", "line": 454, "range": {"start_line": 454, "start_character": 5, "end_line": 454, "end_character": 21}, "in_reply_to": "3fa7e38b_56e87c13", "updated": "2020-02-13 09:05:41.000000000", "message": "Done", "commit_id": "67e9ca038976f8cae01e542651b3f2f1e3976d60"}]}}, "openstack%2Fcharm-mysql-router~stable%2F20.02~I44f46966efb69939ca1e8b8613fd009673e0914d": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:04:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "airship%2Farmada~master~Ia8f876a9395a6fe4f18613f8f5318db3079a7ec1": {"owner_id": 29161, "owner_name": "Rahul Khiyani", "owner_email": "rahul.khiyani@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 2, "date": "2020-02-17 16:11:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-17 16:00:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}], "comments": {"charts/tiller/values.yaml": [{"author": {"_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, "change_message_id": "a4c1d36eee835b81213d193f04cbdd36cc58b44c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5e1ff55c", "line": 56, "range": {"start_line": 56, "start_character": 2, "end_line": 56, "end_character": 6}, "updated": "2020-02-17 15:53:06.000000000", "message": "should be removed?", "commit_id": "dc04c0410c92d208cda7ec08043d8b849ffafa26"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "d445c9377b1f78f3d918bd10ee6501d8c6771851", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5e2e155c", "line": 56, "range": {"start_line": 56, "start_character": 2, "end_line": 56, "end_character": 6}, "in_reply_to": "3fa7e38b_5e1ff55c", "updated": "2020-02-17 16:00:00.000000000", "message": "Done", "commit_id": "dc04c0410c92d208cda7ec08043d8b849ffafa26"}]}}, "openstack%2Fcharm-keystone~stable%2F20.02~Iba69950c9071555f1019fdd4214e6d02c7065e9c": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:59:58.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-neutron-dynamic-routing~stable%2F20.02~If46e921145e692ff964bf5291adb47c90df66e70": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:02:48.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}, {"value": 2, "date": "2020-02-17 17:03:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-glance-simplestreams-sync~stable%2F20.02~I2a5056fad70cbb69c42205f54c5cab9da8f34885": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 17:01:21.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-neutron-api~stable%2F20.02~I8c341da317d2825a5a0d85873fd43559130123d1": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:59:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-gnocchi~stable%2F20.02~I82d20b90b4bd66de93b86a46dccf814a803c66c9": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:59:43.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-neutron-openvswitch~stable%2F20.02~I9fb074f5d13b071933091c8e100526eafa887195": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:57:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-octavia~stable%2F20.02~I10de83a22d14652d703b55d4d2477318f52a9fc1": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:53:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-hacluster~stable%2F20.02~I9fccfd3d0b6984070f46e1d0d72fcbdb49a6ad0b": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:59:17.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-keystone-ldap~stable%2F20.02~I849d2e575e1bf303b4bb580fd32d07b5882c4c8d": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:59:26.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-ceilometer-agent~stable%2F20.02~Ifa589a781735ac94789ae62e66ed930a1a522bbb": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:56:14.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-glance~stable%2F20.02~I60bcc61c674e46cf386daea24e4e23d6246b0740": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:56:26.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-ceph-mon~stable%2F20.02~I45659f330f2a3eef037323dde454851bc131d9c2": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:55:58.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-designate-bind~stable%2F20.02~I656b7bc064cd39f97f0df6b39249387c21a4933c": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:56:08.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-nova-cell-controller~stable%2F20.02~I21eeffaaaeb1bdc89a1d6bcf46f54dfdbc634ee7": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:56:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-nova-compute~stable%2F20.02~Ia527fb9020fa576e5b77dd9452278efb08681789": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:50:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-octavia-diskimage-retrofit~stable%2F20.02~I191d8057ce04ccf8210b94aae519577f8925351e": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:55:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-ceph-proxy~stable%2F20.02~Ieeff6a24628b044ae677d6ec891f6a4a492f1cb3": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:53:23.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-octavia-dashboard~stable%2F20.02~Ifbe8f5e0602f17599cc31664004abe433e3aa7dd": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:50:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "x%2Fcharm-ovn-central~stable%2F20.02~Ib0b0488478d0af8e998a440be8321d2644e33b78": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:54:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-designate~stable%2F20.02~I7b9120c3953bdb0662e52d6405357137f0443f90": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:52:39.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-ceph-rbd-mirror~stable%2F20.02~Ia6da1d6256d1ebd82877ca7cebbd93df5ad8041d": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:52:13.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Foslo.db~master~I93ff365c90b5ca953937311f69650e89adc65935": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-20 15:20:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-17 15:32:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}], "comments": {}}, "openstack%2Fcharm-nova-cloud-controller~stable%2F20.02~I48c84f1e6d9a8ee34edc1ccbdfd7883005174f5a": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:48:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "airship%2Fdrydock~master~I3baef195dcb3ea092cfefdbd05a58eda70e036a1": {"owner_id": 28208, "owner_name": "Roman Gorshunov", "owner_email": "roman.gorshunov@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcharm-cinder-backup~stable%2F20.02~Ibf674f815a72f628ae9b11fd17ef5a3a07f3ed92": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:52:30.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-rabbitmq-server~stable%2F20.02~I0bd7700b4739a8e6639091140f5ec51d8d847276": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:46:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-ceph-radosgw~stable%2F20.02~I542bf73cf1391c17c3018f1c9f209012bc3ae561": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:43:26.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-pacemaker-remote~stable%2F20.02~I51ec3a3dabf62d1b76a55967eb995ed8ca1aaf07": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:52:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-placement~stable%2F20.02~I4f9321b9e8a2df69f1673dff54a4aa67e64972b6": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:47:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-cinder-purestorage~stable%2F20.02~Ib58f1c4e008e2461d01874933bb2ee80f92795f1": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:50:04.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-swift-storage~stable%2F20.02~Ic34a390e755d1172d8add047fe3f34c41ecec201": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:42:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "x%2Fcharm-ovn-chassis~stable%2F20.02~Icd8ac7ac7341499b57b07ddeb4264a580b5b594c": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:43:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "airship%2Ftreasuremap~master~I4765df28eedf99a8e823e192cf2f2f2b38434f2c": {"owner_id": 24580, "owner_name": "James Gu", "owner_email": "james.gu@microsoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-14 14:50:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11934, "name": "Scott Grasley", "email": "sg0818@att.com", "username": "grasley"}, {"value": 1, "date": "2020-02-14 15:06:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 1, "date": "2020-02-14 15:21:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17305, "name": "Arijit Bose", "email": "imarijitbose@gmail.com", "username": "imarijitbose"}, {"value": 2, "date": "2020-02-14 19:12:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-02-14 14:33:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18538, "name": "Narendra Kumar Choudhary", "email": "nc7799@att.com", "username": "nc7799"}, {"value": 0, "_account_id": 24580, "name": "James Gu", "email": "james.gu@microsoft.com", "username": "jamesgu"}, {"value": 0, "_account_id": 24816, "name": "Anthony Bellino", "email": "ab2434@att.com", "username": "anthony.bellino"}, {"value": 2, "date": "2020-02-17 16:43:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 1, "date": "2020-02-17 16:43:31.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "openstack%2Fcharm-percona-cluster~stable%2F20.02~I7e9bf6d705a8dac8932699e527509bfde7ee7058": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:45:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-swift-proxy~stable%2F20.02~Ibd4e449ecedb00faeedc6f8f33177f24ca188f9d": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:41:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-ceph-fs~stable%2F20.02~I1b2ad93253e572f7964c590b1b44730bc2d88b98": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:42:52.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Ftempest~master~I4e9d253cad1b797940c2c1f922b66602ba592416": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 15:33:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-14 01:18:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 0, "_account_id": 17887, "name": "Doug Schveninger", "email": "ds6901@att.com", "username": "Doug.Schveninger"}, {"value": 1, "date": "2020-02-13 15:33:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-02-13 15:33:36.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"tempest/api/compute/base.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ddccd79db63fcac9f71a7f2dd7930edf26391b60", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_493c452f", "line": 542, "range": {"start_line": 542, "start_character": 21, "end_line": 542, "end_character": 23}, "updated": "2020-01-09 12:18:51.000000000", "message": "typo", "commit_id": "0280683e341ecfec24670a5563bb987e6b00e1eb"}, {"author": {"_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, "change_message_id": "1ee83340f36e9143986f59e5889b4aa13c245d97", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_532a8e97", "line": 542, "range": {"start_line": 542, "start_character": 21, "end_line": 542, "end_character": 23}, "in_reply_to": "3fa7e38b_493c452f", "updated": "2020-01-13 05:57:06.000000000", "message": "++", "commit_id": "0280683e341ecfec24670a5563bb987e6b00e1eb"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "ee01a48fca07e6500ea1520ef6a2c68cf1c0c3a2", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_9e08e6d8", "side": "PARENT", "line": 541, "range": {"start_line": 539, "start_character": 72, "end_line": 541, "end_character": 19}, "updated": "2020-01-14 23:43:49.000000000", "message": "let's keep this comment also to know why we have to do this.", "commit_id": "b4bd09ee6b2c7c990dfd21e40881fc91ca1927cc"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "fb1f3b4621a67a880d8a4007350712db47fdd647", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2008ac25", "side": "PARENT", "line": 541, "range": {"start_line": 539, "start_character": 72, "end_line": 541, "end_character": 19}, "in_reply_to": "3fa7e38b_9e08e6d8", "updated": "2020-01-15 08:42:27.000000000", "message": "Done", "commit_id": "b4bd09ee6b2c7c990dfd21e40881fc91ca1927cc"}]}}, "x%2Fcharm-ovn-dedicated-chassis~stable%2F20.02~I2789fdf0f1974aa7d0862e2afe0a1faeaa4d84fe": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:47:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-openstack-dashboard~stable%2F20.02~I0c35cb696b86a2fc909d74703e0b99eec7162150": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:44:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-cinder~stable%2F20.02~I12307bc6b9626be184a30dafdcd0910b2328da36": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:43:51.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-ceph-osd~stable%2F20.02~I70f0f67d2f5dee46b3bf56bf15fc14ae5f6ae5a5": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12549, "name": "gnuoy", "email": "liam.young@canonical.com", "username": "gnuoy"}, {"value": 2, "date": "2020-02-17 16:38:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-barbican-softhsm~stable%2F20.02~Ia63c7d1a768d0db4118ff15bb058f2b9e1072fe9": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:40:26.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-barbican-vault~stable%2F20.02~Id22d1dd919f2a72df2372f24a484a6f22bd70f43": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:41:24.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-barbican~stable%2F20.02~I430dc8033ff06b2be6d3d4c4686ab2dbaebf413c": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:40:12.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-ceilometer~stable%2F20.02~Ie2acf9f374f1866afa3050bf1f3ba8cab9687e48": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:41:44.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-vault~stable%2F20.02~I11e55242acde898e9c344e1f9028727b01a3fa82": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:39:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-cinder-backup-swift-proxy~stable%2F20.02~I6139ae41192f8325eebfb0e604ed21d0bb87d096": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:42:09.000000000", "_account_id": 20635, "name": "Ryan Beisner", "email": "ryanbeisner@gmail.com", "username": "ryan-beisner"}], "comments": {}}, "openstack%2Fcharm-tempest~stable%2F20.02~Ic30b713d135cb17cc72a794a7e28076264a75ebc": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:38:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~Ibf333181ce8a6cbaf6e59d9c59e708194b3a87d0": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:49:35.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I50a50856b96a9112c1b4be82ca04b612fd29d939": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 0, "_account_id": 26471, "name": "Software Factory CI", "email": "softwarefactory-operations-team@redhat.com", "username": "sf-project-io"}, {"value": 2, "date": "2020-02-17 16:20:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-01-27 15:55:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/fetch-subunit-output/tasks/process.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "d80da7936dfa14c658ee53685a09b24fb8352d9d", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_f60728c7", "line": 46, "range": {"start_line": 36, "start_character": 0, "end_line": 46, "end_character": 41}, "updated": "2020-01-25 07:52:31.000000000", "message": "do we need a condition for zuul_use_fetch_output here?", "commit_id": "a07bbee70c3880c4882fd26a848f9726eafcecdc"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "5a4a5dadae4be626a062b5d1e72a0359ce0709c1", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_91acbeeb", "line": 46, "range": {"start_line": 36, "start_character": 0, "end_line": 46, "end_character": 41}, "in_reply_to": "3fa7e38b_f60728c7", "updated": "2020-01-25 13:42:29.000000000", "message": "This is useful, whenever fetch-output is used or not. That task just tells Zuul to put a 'Unit Test Report' link in the build result interface.", "commit_id": "a07bbee70c3880c4882fd26a848f9726eafcecdc"}]}}, "openstack%2Ftripleo-validations~stable%2Ftrain~Id199fc250afa0646b1e851581e3a92290f7bcb00": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 07:17:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-17 07:17:58.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcharm-neutron-gateway~stable%2F20.02~I6d25022b6846264478e152ccd109c2a830d2a00a": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:35:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fcharm-neutron-api-plugin-ovn~stable%2F20.02~I3e9a5a09c7d4a50ff667e661a8e2dc0c1c83db32": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:37:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "zuul%2Fzuul-jobs~master~Ia6f4ed88b4baf53bd671c7a7b48a1564ff2c866d": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-17 16:18:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-16 18:56:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/install-docker/README.rst": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "50262597367f4aaad179a3a21c5033dea048c500", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_07094230", "line": 25, "range": {"start_line": 25, "start_character": 18, "end_line": 25, "end_character": 38}, "updated": "2020-02-15 15:52:55.000000000", "message": "I would phrase it \"to install docker-compose as well\"", "commit_id": "80b463407c35e063673353bf6d94215534e0d1c5"}]}}, "openstack%2Ftripleo-validations~stable%2Ftrain~Iec3fddffade4ecd02d2e59ebd2769b421d8577ac": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 12:59:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {}}, "zuul%2Fzuul-jobs~master~Idc72c7d1a88fff8e738c896e2482b5cb1d844600": {"owner_id": 2475, "owner_name": "Antoine Musso", "owner_email": "hashar@free.fr", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 16:19:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 2, "date": "2020-01-27 20:30:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "zuul%2Fzuul-jobs~master~I8450ecf91b3387445ebe2436754d1b88f2a77844": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-17 16:18:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-01-29 20:12:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/fetch-javascript-tarball/README.rst": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "91185415688f77ec20323052a65fbfe46c00c4f8", "unresolved": false, "patch_set": 4, "id": "5faad753_d72ef541", "line": 11, "range": {"start_line": 11, "start_character": 13, "end_line": 11, "end_character": 17}, "updated": "2019-09-12 07:47:24.000000000", "message": "true here...", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "7b5f7ae099d24c8671da6b59fc59608e7ee9c2da", "unresolved": false, "patch_set": 4, "id": "5faad753_fbcd1731", "line": 11, "range": {"start_line": 11, "start_character": 13, "end_line": 11, "end_character": 17}, "in_reply_to": "5faad753_d72ef541", "updated": "2019-09-12 11:31:35.000000000", "message": "Good catch, thanks!", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "91185415688f77ec20323052a65fbfe46c00c4f8", "unresolved": false, "patch_set": 4, "id": "5faad753_57220554", "line": 14, "updated": "2019-09-12 07:47:24.000000000", "message": "add \".\" at end of sentence", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "7b5f7ae099d24c8671da6b59fc59608e7ee9c2da", "unresolved": false, "patch_set": 4, "id": "5faad753_9bce632b", "line": 14, "in_reply_to": "5faad753_57220554", "updated": "2019-09-12 11:31:35.000000000", "message": "Done", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}], "roles/fetch-javascript-tarball/defaults/main.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "91185415688f77ec20323052a65fbfe46c00c4f8", "unresolved": false, "patch_set": 4, "id": "5faad753_d7d35537", "line": 3, "range": {"start_line": 3, "start_character": 63, "end_line": 3, "end_character": 66}, "updated": "2019-09-12 07:47:24.000000000", "message": "but false here. According to README that should be true.", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "7b5f7ae099d24c8671da6b59fc59608e7ee9c2da", "unresolved": false, "patch_set": 4, "id": "5faad753_dbc85b23", "line": 3, "range": {"start_line": 3, "start_character": 63, "end_line": 3, "end_character": 66}, "in_reply_to": "5faad753_d7d35537", "updated": "2019-09-12 11:31:35.000000000", "message": "It is intended to be false by default, the README was incorrect.", "commit_id": "32e38c6ab73f2fc9ad5ef37bd52bb4658cd48245"}]}}, "openstack%2Fopenstack-helm-infra~master~I5745a763bb07f719d83a41c1f27be2b76ce998e9": {"owner_id": 28719, "owner_name": "Phil Sphicas", "owner_email": "phil.sphicas@att.com", "labels": [{"value": 2, "date": "2020-02-17 15:39:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:42:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 1, "date": "2020-02-17 15:39:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28275, "name": "Darren DeJaeger", "email": "darren.dejaeger@gmail.com", "username": "darren.dejaeger"}], "comments": {}}, "x%2Fvmware-nsx~master~I493520c50ef0673b538eb49d63300e0f998de901": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:17:45.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Ic59cc6b2b9b979255c10d71e437afa733517e3e1": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-22 16:02:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 2, "date": "2020-01-23 22:11:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {"tripleoclient/v1/overcloud_deploy.py": [{"author": {"_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, "change_message_id": "b7d7931d74959f57e611ee8b06177069ba410e58", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_979636ee", "line": 231, "updated": "2020-01-21 08:26:44.000000000", "message": "When user provides \"-v\" explicity, what is the expectation? As per this change, it will pass 0, which is not expected.", "commit_id": "ef6f04094f26cb7c006aa4a9baa54c50d34bd83b"}, {"author": {"_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, "change_message_id": "9bdb5e3501f26b144ffda101f9fca1751620f4eb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_20b848e6", "line": 231, "in_reply_to": "3fa7e38b_7b904050", "updated": "2020-01-22 05:39:31.000000000", "message": "Thanks for the explantion. I can see the verbosity_leve is set to (number of 'v' + 1). So this is OK. The commit message could be enhanced to reflect it.", "commit_id": "ef6f04094f26cb7c006aa4a9baa54c50d34bd83b"}, {"author": {"_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, "change_message_id": "ad47e2441e69f33f6aaece176273ff45c10cdfa2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7b904050", "line": 231, "in_reply_to": "3fa7e38b_979636ee", "updated": "2020-01-21 17:35:49.000000000", "message": "Actually, from my testing, when -v is supplied then the verbosity level is set to 2 which will pass 1 here. For OpenStack CLI utilities: --quiet = 0 verbosity, no arguments = 1 verbosity, -v = 2 verbosity. See: https://opendev.org/openstack/python-openstackclient/src/branch/master/examples/common.py#L184", "commit_id": "ef6f04094f26cb7c006aa4a9baa54c50d34bd83b"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "9054656f8a3f371cea7da0067395bb71e12d8920", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7e2af12e", "line": 231, "range": {"start_line": 231, "start_character": 55, "end_line": 231, "end_character": 59}, "updated": "2020-02-17 16:02:06.000000000", "message": "This removes the heat stack output.", "commit_id": "90eee3abc1efca0166b6e5fb05998aa54abcbc05"}]}}, "openstack%2Freleases~master~I25a43f463dbfac59a193774d6f90b0ddb73f5268": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:54:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-17 13:56:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~Ic59cc6b2b9b979255c10d71e437afa733517e3e1": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-29 22:40:51.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-01-29 15:01:11.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Fqueens~Ic59cc6b2b9b979255c10d71e437afa733517e3e1": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-02-03 14:02:11.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "opendev%2Fpuppet-openstackid~master~I75aca729ebaa9b3bf6c367592b0c42dd9221a856": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:44:31.000000000", "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 10278, "name": "Jimmy McArthur", "email": "jimmy@openstack.org", "username": "jimmymcarthur"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 1, "date": "2020-02-17 14:46:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {"files/functions": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "8be6d8c3bc8c1839a13785b9776a1f7df1534357", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d3fafe43", "line": 52, "updated": "2020-02-17 15:44:31.000000000", "message": "Note that the conditional checks should not be necessary since mkdir -p is idempotent (it won't error if the directory you ask it to create already exists). Also mkdir -p creates parent directories implicitly so there's no need to prcreate them, you only need to mkdir -p the child/leaf directories.", "commit_id": "fb0da02f2c0f25c4665553472a17dbafe1a42ea8"}, {"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "8be6d8c3bc8c1839a13785b9776a1f7df1534357", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f3f7fa5a", "line": 58, "updated": "2020-02-17 15:44:31.000000000", "message": "The X symbolic option to chmod allows you to set the x bit on directories while skipping files, so you could replace these find commands with a single `chmod -R a=rX,ug+w $SITE_ROOT/storage` if you find that cleaner.", "commit_id": "fb0da02f2c0f25c4665553472a17dbafe1a42ea8"}]}}, "openstack%2Fneutron~stable%2Frocky~I10e3619d5f3600ea97ed695321bb691dece3181f": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-01-14 15:27:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-19 23:45:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Freleases~master~Id9fc498d7b7ffcd373f1866f261ccc02b5ad055d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 2, "date": "2020-02-11 10:21:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 25733, "name": "Jan Gutter", "email": "github@jangutter.com", "username": "jangutter"}, {"value": 1, "date": "2020-02-13 20:21:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 2, "date": "2020-02-14 22:18:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Frally~master~I8fed9bf6a5a210a22fc008437d335cd7e372d3be": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, {"value": 2, "date": "2020-02-17 15:43:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {"rally/common/streaming_algorithms.py": [{"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6d5b34f8", "line": 170, "updated": "2020-02-16 21:51:06.000000000", "message": "would work faster if we do something like \n\n\" \".join(itertools.chain([\"\"], self._chunk_size))", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_cde588d0", "line": 170, "in_reply_to": "3fa7e38b_6d5b34f8", "updated": "2020-02-16 22:08:18.000000000", "message": "right", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_8d5eb0e5", "line": 176, "updated": "2020-02-16 21:51:06.000000000", "message": "okay this would be something really hard to debug, just out of message I don't understand what's happening here, for example why it's not just ignored?", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_adea8c9d", "line": 176, "in_reply_to": "3fa7e38b_8d5eb0e5", "updated": "2020-02-16 22:08:18.000000000", "message": "1) ignoring is not good. such case should not happen anytime. it is not expected behavior \n\n2)  this message appears as PoC :)", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ed6e4495", "line": 188, "updated": "2020-02-16 21:51:06.000000000", "message": "maybe make sense to create method, like _ensure_not_deleted", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6d26d424", "line": 188, "in_reply_to": "3fa7e38b_ed6e4495", "updated": "2020-02-16 22:08:18.000000000", "message": "messages should be different :)", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_cd5fc8db", "line": 208, "updated": "2020-02-16 21:51:06.000000000", "message": "Not sure about latest python but __del__ was messing with GC and it was not always properly called (if you don't have del <this> explicit call of it)\nhttps://docs.python.org/3.4/library/gc.html#gc.garbage", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_8d29d0f1", "line": 208, "in_reply_to": "3fa7e38b_cd5fc8db", "updated": "2020-02-16 22:08:18.000000000", "message": "fixed", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}], "rally/task/processing/charts.py": [{"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_edf3a4e6", "line": 406, "updated": "2020-02-16 21:51:06.000000000", "message": "so this might leave your file created and not cleaned up by rally.", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ed39643f", "line": 406, "in_reply_to": "3fa7e38b_edf3a4e6", "updated": "2020-02-16 22:08:18.000000000", "message": "the location of the file is /tmp dir. In case of unexpected failure of rally process, the system will remove it)", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6db334ed", "line": 480, "updated": "2020-02-16 21:51:06.000000000", "message": "just wander do we ever use it with sorting?", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0d35e042", "line": 480, "in_reply_to": "3fa7e38b_6db334ed", "updated": "2020-02-16 22:08:18.000000000", "message": "not. I left this ability for the case when this method will be used by third-party plugins.", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 6172, "name": "Boris Pavlovic", "email": "boris@pavlovic.me", "username": "boris-42"}, "change_message_id": "c1800992e31875e0f839b34f442596bb879aa1d9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_edc6444a", "line": 761, "updated": "2020-02-16 21:51:06.000000000", "message": "this method looks almost identical to MainStats._process_raw except that it accepts and returns \"name\" argument", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}, {"author": {"_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}, "change_message_id": "a08ae169bd75aa974675689b47d0e96fa292e5b3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6d749404", "line": 761, "in_reply_to": "3fa7e38b_edc6444a", "updated": "2020-02-16 22:08:18.000000000", "message": "`MainStats._process_raw` take care about `success` sa instance....", "commit_id": "113ebbaf9fdb63ab4d79956abece945ef000f58c"}]}}, "airship%2Fpromenade~master~If4a3c1f711f4bdbc37f3fca02761ec947cd4e036": {"owner_id": 30784, "owner_name": "Trung Thai", "owner_email": "tthai@att.com", "labels": [{"value": 1, "date": "2020-02-14 16:19:12.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-02-17 15:52:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~I325761643bd0c765e1759905e5cccd80dafa742f": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 12:49:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 1, "date": "2020-02-14 23:39:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-17 12:49:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-17 14:00:07.000000000", "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 2, "date": "2020-02-17 08:58:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 2, "date": "2020-02-17 12:53:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {}}, "openstack%2Fnova~stable%2Fqueens~Iafba419fe86446ffe636721f523fb619f8f787b3": {"owner_id": 8864, "owner_name": "Artom Lifshitz", "owner_email": "alifshit@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Fqueens~If822509e906d5094f13a8700b2b9ed3c40580431": {"owner_id": 8864, "owner_name": "Artom Lifshitz", "owner_email": "alifshit@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "airship%2Fmaas~master~I569b99186d398db44a10824dc3fe8c745b13a4ac": {"owner_id": 22259, "owner_name": "Nishant Kumar", "owner_email": "nishant.e.kumar@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28719, "name": "Phil Sphicas", "email": "phil.sphicas@att.com", "username": "ps3910"}, {"value": 2, "date": "2020-02-17 15:36:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 24580, "name": "James Gu", "email": "james.gu@microsoft.com", "username": "jamesgu"}, {"value": 0, "_account_id": 24816, "name": "Anthony Bellino", "email": "ab2434@att.com", "username": "anthony.bellino"}, {"value": 0, "_account_id": 31362, "name": "Andrew Schiefelbein", "email": "as3525@att.com", "username": "aschiefe"}, {"value": 2, "date": "2020-02-17 15:32:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {"charts/maas/templates/bin/_register-rack-controller.sh.tpl": [{"author": {"_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, "change_message_id": "f1ce892b2005f044b650a932723d1b018123dcf6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9bc27101", "line": 22, "range": {"start_line": 22, "start_character": 67, "end_line": 22, "end_character": 91}, "updated": "2020-02-14 20:47:45.000000000", "message": "what about just using `touch /tmp/maas-rack.done` here and then `ls /tmp/maas-rack.done` in the probe. that way there's no need to keep the log message text in sync between the two locations, just the filename.", "commit_id": "084439b4fd72a3762e19bad546abbd1650620422"}, {"author": {"_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}, "change_message_id": "f5e946d2c5eda95084eb881420b40e87c79723cc", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8623f8a9", "line": 22, "range": {"start_line": 22, "start_character": 67, "end_line": 22, "end_character": 91}, "in_reply_to": "3fa7e38b_9bc27101", "updated": "2020-02-14 21:20:07.000000000", "message": "Done", "commit_id": "084439b4fd72a3762e19bad546abbd1650620422"}, {"author": {"_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, "change_message_id": "711b4eb86cb2b051de27d5eab11b61a0facc21b7", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e668ac1f", "line": 22, "range": {"start_line": 22, "start_character": 67, "end_line": 22, "end_character": 79}, "updated": "2020-02-14 22:31:30.000000000", "message": "this will also create a file named `touch`. I think what we want is:\n\n  echo \"Successfully registered with MaaS Region Controller\"\n  touch '/tmp/maas-rack.done'", "commit_id": "2fb6145da7e3088013727ae8a2bc96b8dd4f44f9"}]}}, "openstack%2Fnetworking-ovn~master~I2373a81ca2c5d6616c0097f15dd59327116db93f": {"owner_id": 29874, "owner_name": "Taoyunxiang", "owner_email": "taoyunxiang_yewu@cmss.chinamobile.com", "labels": [{"value": 2, "date": "2019-11-27 10:18:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "_account_id": 31263, "name": "Chen, Hung Yu", "email": "klyvechen@gmail.com", "username": "klyvechne"}, {"value": 0, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2019-11-27 10:14:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2019-11-27 13:27:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}], "comments": {"networking_ovn/common/ovn_client.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "acb9d28de39f952166f5fd34f66c4b1badab305c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fbfabab7", "line": 607, "range": {"start_line": 607, "start_character": 17, "end_line": 607, "end_character": 36}, "updated": "2019-10-30 15:18:16.000000000", "message": "this is implied true because of L593, so can be removed", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "f80c8eead95b1e359cbeac68db137d4c6d276411", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f7aabfcf", "line": 607, "range": {"start_line": 607, "start_character": 17, "end_line": 607, "end_character": 36}, "in_reply_to": "3fa7e38b_fbfabab7", "updated": "2019-10-31 12:13:35.000000000", "message": "Done,thanks :)", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "acb9d28de39f952166f5fd34f66c4b1badab305c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9b2dc647", "line": 618, "range": {"start_line": 618, "start_character": 17, "end_line": 618, "end_character": 36}, "updated": "2019-10-30 15:18:16.000000000", "message": "same", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "f80c8eead95b1e359cbeac68db137d4c6d276411", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_97b58b34", "line": 618, "range": {"start_line": 618, "start_character": 17, "end_line": 618, "end_character": 36}, "in_reply_to": "3fa7e38b_9b2dc647", "updated": "2019-10-31 12:13:35.000000000", "message": "Done,thanks :)", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f699e2868ecf98145602d9509b2dfdad80123455", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_29b7dbda", "line": 583, "updated": "2019-11-18 11:33:23.000000000", "message": "nit: Let's use parentheses to wrap multiple lines\n\n\"The preferred way of wrapping long lines is by using Python's implied line continuation inside parentheses, brackets and braces. Long lines can be broken over multiple lines by wrapping expressions in parentheses. These should be used in preference to using a backslash for line continuation.\"\n\nhttps://www.python.org/dev/peps/pep-0008/#maximum-line-length", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "890b393d03198c6c128e3b2229554b0d7be64d7b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_b7cf9555", "line": 583, "in_reply_to": "3fa7e38b_29b7dbda", "updated": "2019-11-19 05:52:04.000000000", "message": "done", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f699e2868ecf98145602d9509b2dfdad80123455", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e9ac6389", "line": 587, "updated": "2019-11-18 11:33:23.000000000", "message": "ditto: parentheses", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "890b393d03198c6c128e3b2229554b0d7be64d7b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_d7cc9162", "line": 587, "in_reply_to": "3fa7e38b_e9ac6389", "updated": "2019-11-19 05:52:04.000000000", "message": "done", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f699e2868ecf98145602d9509b2dfdad80123455", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_09b21fe6", "line": 593, "updated": "2019-11-18 11:33:23.000000000", "message": "ditto: parentheses", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "890b393d03198c6c128e3b2229554b0d7be64d7b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_77d59de5", "line": 593, "in_reply_to": "3fa7e38b_09b21fe6", "updated": "2019-11-19 05:52:04.000000000", "message": "done", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_fba09793", "line": 652, "range": {"start_line": 652, "start_character": 64, "end_line": 652, "end_character": 75}, "updated": "2019-11-19 10:00:36.000000000", "message": "This is supposed to be removed as per the comment in L455. Is there any other way to achieve the same?", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_be28cd97", "line": 652, "range": {"start_line": 652, "start_character": 64, "end_line": 652, "end_character": 75}, "in_reply_to": "3fa7e38b_fba09793", "updated": "2019-11-19 12:34:36.000000000", "message": "In this place, we just need to delete the old rule.\nAs there is no \"name\" column in QoS table of OVN, we can not associate neutron_qos_rule with ovn_qos.\nIf we want to delete the old ovn_rule, we must get it. Now,I think  the only way to get old qos options is from port_object. If you have some sugesstions, it will be appreciated.  ;)\n\nI am working on OVN project to add \"name\" column to QoS table.\nIf this finished ,I will add related API in OVSDBAPP project, then I will refactor the QoS patch. :)", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_3bacef86", "line": 760, "range": {"start_line": 760, "start_character": 23, "end_line": 760, "end_character": 34}, "updated": "2019-11-19 10:00:36.000000000", "message": "ditto", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_fbc97759", "line": 760, "range": {"start_line": 760, "start_character": 76, "end_line": 760, "end_character": 77}, "updated": "2019-11-19 10:00:36.000000000", "message": "parenthesis are preferred over backslash for line continuation", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_7e181583", "line": 760, "range": {"start_line": 760, "start_character": 23, "end_line": 760, "end_character": 34}, "in_reply_to": "3fa7e38b_3bacef86", "updated": "2019-11-19 12:34:36.000000000", "message": "same", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_9e1dd174", "line": 760, "range": {"start_line": 760, "start_character": 76, "end_line": 760, "end_character": 77}, "in_reply_to": "3fa7e38b_fbc97759", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}], "networking_ovn/ml2/qos_driver.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "acb9d28de39f952166f5fd34f66c4b1badab305c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fb471aa2", "line": 110, "updated": "2019-10-30 15:18:16.000000000", "message": "nit: indentation", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "acb9d28de39f952166f5fd34f66c4b1badab305c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1bda36e8", "line": 113, "updated": "2019-10-30 15:18:16.000000000", "message": "nit: indentation, but might not be necessary", "commit_id": "3485015aa89226dc798cff224a348220e5a0ac75"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_bbbf7fa9", "line": 110, "range": {"start_line": 110, "start_character": 20, "end_line": 110, "end_character": 55}, "updated": "2019-11-19 10:00:36.000000000", "message": "Is this a TODO? Is it the right indentation?", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_01118453", "line": 110, "range": {"start_line": 110, "start_character": 20, "end_line": 110, "end_character": 55}, "in_reply_to": "3fa7e38b_bbbf7fa9", "updated": "2019-11-19 12:34:36.000000000", "message": "It's just a comment, I have chang its indentation.Thanks  :)", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_dbbcbbb6", "line": 113, "range": {"start_line": 113, "start_character": 20, "end_line": 113, "end_character": 43}, "updated": "2019-11-19 10:00:36.000000000", "message": "ditto", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_210e0032", "line": 113, "range": {"start_line": 113, "start_character": 20, "end_line": 113, "end_character": 43}, "in_reply_to": "3fa7e38b_dbbcbbb6", "updated": "2019-11-19 12:34:36.000000000", "message": "same", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}], "networking_ovn/tests/functional/test_maintenance.py": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f699e2868ecf98145602d9509b2dfdad80123455", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a9a18b97", "side": "PARENT", "line": 340, "updated": "2019-11-18 11:33:23.000000000", "message": "unrelated changes here", "commit_id": "ddd5fb506545b3cc33ddd5577393fee5ce5dab2b"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "890b393d03198c6c128e3b2229554b0d7be64d7b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3705e57a", "side": "PARENT", "line": 340, "in_reply_to": "3fa7e38b_a9a18b97", "updated": "2019-11-19 05:52:04.000000000", "message": "Done", "commit_id": "ddd5fb506545b3cc33ddd5577393fee5ce5dab2b"}], "networking_ovn/tests/functional/test_qos_driver.py": [{"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "5162d835c8524119771f3a3e4d7e20d16385917c", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_7369b5f6", "line": 112, "range": {"start_line": 111, "start_character": 28, "end_line": 112, "end_character": 31}, "updated": "2019-11-07 08:22:58.000000000", "message": "++ For this, I think that we should add the QoS part to the maintenance task as well right?", "commit_id": "7404a47d843e5e7ba5bc7a79a621052d826db455"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "0c597e175e3627a8385ea8191c212d94e8a6c135", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2598c573", "line": 112, "range": {"start_line": 111, "start_character": 28, "end_line": 112, "end_character": 31}, "in_reply_to": "3fa7e38b_7369b5f6", "updated": "2019-11-08 07:47:45.000000000", "message": "Agreed  :)", "commit_id": "7404a47d843e5e7ba5bc7a79a621052d826db455"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_3be14fd0", "line": 111, "range": {"start_line": 111, "start_character": 49, "end_line": 111, "end_character": 53}, "updated": "2019-11-19 10:00:36.000000000", "message": "nit: does", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_9be083ce", "line": 111, "updated": "2019-11-19 10:00:36.000000000", "message": "nit: space :)", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_2137e0e5", "line": 111, "range": {"start_line": 111, "start_character": 49, "end_line": 111, "end_character": 53}, "in_reply_to": "3fa7e38b_3be14fd0", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_c12fec86", "line": 111, "in_reply_to": "3fa7e38b_9be083ce", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_5be68be9", "line": 114, "range": {"start_line": 114, "start_character": 23, "end_line": 114, "end_character": 29}, "updated": "2019-11-19 10:00:36.000000000", "message": "is?", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_a150b00b", "line": 114, "range": {"start_line": 114, "start_character": 23, "end_line": 114, "end_character": 29}, "in_reply_to": "3fa7e38b_5be68be9", "updated": "2019-11-19 12:34:36.000000000", "message": "Done,thanks daniel.", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}], "networking_ovn/tests/unit/ml2/test_qos_driver.py": [{"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_bbd45feb", "line": 76, "range": {"start_line": 75, "start_character": 0, "end_line": 76, "end_character": 40}, "updated": "2019-11-19 10:00:36.000000000", "message": "old values are not ok to exercise the same? especially in unit tests", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_416a1cb5", "line": 76, "range": {"start_line": 75, "start_character": 0, "end_line": 76, "end_character": 40}, "in_reply_to": "3fa7e38b_bbd45feb", "updated": "2019-11-19 12:34:36.000000000", "message": "Because I have change the code here. The unit of QoS in OVN is the same with the QoS rule of neutron, so there is no need to multiply by 1000.\nhttps://review.opendev.org/#/c/692084/15/networking_ovn/ml2/qos_driver.py@104", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}], "releasenotes/notes/support-QoS-by-meter-action-03bb9fa57e35e5bd.yaml": [{"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f699e2868ecf98145602d9509b2dfdad80123455", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_89bdafb2", "line": 12, "updated": "2019-11-18 11:33:23.000000000", "message": "Question, currently we are not enabling the \"qos\" extension in OVN so all the tempest tests are being skipped [0] (search for \"qos\" in that web page).\n\nShould we enable it as part of this patch you think ? If so, you should add it to the list here: https://github.com/openstack/networking-ovn/blob/c27c19bf58ee14742fbc668b2e60e32fc8fac2bb/networking_ovn/common/extensions.py\n\n[0] https://591902838f8e8646dfb9-837b2e88470accfe1a064b11bbc0b1d6.ssl.cf5.rackcdn.com/692084/14/check/networking-ovn-tempest-dsvm-ovs-master/7d5a860/testr_results.html.gz", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "890b393d03198c6c128e3b2229554b0d7be64d7b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_572f41f5", "line": 12, "in_reply_to": "3fa7e38b_89bdafb2", "updated": "2019-11-19 05:52:04.000000000", "message": "Hi,Lucas. \n   Thanks for your review.  Daniel also mentioned this. I think this patch could be worked for part of the qos tempest, not for all of them. I will continue work for qos feature in following patchs.  :)", "commit_id": "1e102e09bcedb772e35b8ecb19c6d7dfb6d63277"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_dbd11bfa", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 4}, "updated": "2019-11-19 10:00:36.000000000", "message": "whitespaces", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_21aa80d1", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 4}, "in_reply_to": "3fa7e38b_dbd11bfa", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_5bff6b65", "line": 10, "range": {"start_line": 10, "start_character": 54, "end_line": 10, "end_character": 63}, "updated": "2019-11-19 10:00:36.000000000", "message": "directions", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_3bfaaf76", "line": 10, "range": {"start_line": 10, "start_character": 28, "end_line": 10, "end_character": 39}, "updated": "2019-11-19 10:00:36.000000000", "message": "nit: implement", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_81825451", "line": 10, "range": {"start_line": 10, "start_character": 28, "end_line": 10, "end_character": 39}, "in_reply_to": "3fa7e38b_3bfaaf76", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_a1875061", "line": 10, "range": {"start_line": 10, "start_character": 54, "end_line": 10, "end_character": 63}, "in_reply_to": "3fa7e38b_5bff6b65", "updated": "2019-11-19 12:34:36.000000000", "message": "Done", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_1bf57383", "line": 11, "range": {"start_line": 11, "start_character": 25, "end_line": 11, "end_character": 29}, "updated": "2019-11-19 10:00:36.000000000", "message": "DSCP ?", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "69dddb0249ac36208e5394b38189e52f0b9ed74c", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_7b2907f0", "line": 11, "range": {"start_line": 11, "start_character": 45, "end_line": 11, "end_character": 52}, "updated": "2019-11-19 10:00:36.000000000", "message": "relate? Not sure what do you mean here sorry", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_01966495", "line": 11, "range": {"start_line": 11, "start_character": 25, "end_line": 11, "end_character": 29}, "in_reply_to": "3fa7e38b_1bf57383", "updated": "2019-11-19 12:34:36.000000000", "message": "yes,DSCP", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}, {"author": {"_account_id": 29874, "name": "Taoyunxiang", "email": "taoyunxiang_yewu@cmss.chinamobile.com", "username": "Yunxiang"}, "change_message_id": "9c6505d73d119813f712c082f14b1238400ac4e7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_61f2b807", "line": 11, "range": {"start_line": 11, "start_character": 45, "end_line": 11, "end_character": 52}, "in_reply_to": "3fa7e38b_7b2907f0", "updated": "2019-11-19 12:34:36.000000000", "message": "Thanks Daniel. \"related\" should be \"add\".", "commit_id": "2d5be833320888c3ce5275b32ae856addb4e070c"}]}}, "openstack%2Freleases~master~I94c687c3ddfdd2660db4c2d8abc28985d6048f07": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-07 15:11:26.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fproject-config~master~I22bc23b923199052bdb1f916885b8195dbe94d3a": {"owner_id": 17068, "owner_name": "Jean-Philippe Evrard", "owner_email": "openstack@a.spamming.party", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 10:03:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-02-17 15:05:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-02-17 15:08:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-11 19:57:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~Ia3a0358249e9ed3d766b1b61535f2f6d67d4eb2d": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 15:01:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-10 05:57:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fironic~master~I635a30264f25d758850fd57c0f07e7a68b332fe3": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-17 13:11:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-15 03:53:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-quickstart-extras~master~I98fdb2912c33a69aa543cf361a42664a782e7707": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 13:43:05.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-10 13:36:26.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-10 15:16:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Fironic-python-agent~master~Ia658e0aba001d6195cafeb4484b176e9147e3c26": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:49:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-17 13:02:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"ironic_python_agent/tests/unit/test_hardware.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "2005300e5ca33549c4b598ab6611c2ca26f7406c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f48dc428", "line": 1821, "updated": "2020-02-13 22:13:44.000000000", "message": "fyi reviewers, I tried splitting the class up before doing this. It reduced the failure rate on my local machine to about once every 3-4 executions, but this test would still\noccasionally fail. I'm saving the branch where i split the single class into several classes, if we want to go down that\nroad, but it didn't help in this particular case.", "commit_id": "b2ccde3fb5f60850de915356931101ba7c013ad0"}]}}, "openstack%2Fproject-config~master~I2f73b698bfa6d43efd86ffdbff27043d69948538": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-02-14 18:26:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 0, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 2, "date": "2020-02-17 14:40:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 3099, "name": "David Shrewsbury", "email": "dshrewsb@redhat.com", "username": "dshrews"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 1, "date": "2020-02-14 14:24:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 0, "_account_id": 1106, "name": "Ricardo Carrillo Cruz", "email": "ricardo.carrillo.cruz@gmail.com", "username": "rcc"}, {"value": 2, "date": "2020-02-14 14:24:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, {"value": 0, "_account_id": 6316, "name": "Anita Kuno", "email": "anteaya@anteaya.info", "username": "anteaya"}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 9061, "name": "David Moreau Simard", "email": "moi@dmsimard.com", "username": "dmsimard"}, {"value": 0, "_account_id": 6589, "name": "Jesse Keating", "email": "jkeating@j2solutions.net", "username": "jesse-keating"}, {"value": 1, "date": "2020-02-14 22:51:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 2750, "name": "Sean Dague", "email": "sean@dague.net", "username": "sdague"}, {"value": 1, "date": "2020-02-14 14:24:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 6133, "name": "yolanda.robla", "email": "yroblamo@redhat.com", "username": "yolanda.robla"}, {"value": 1, "date": "2020-02-14 14:24:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"gerrit/projects.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "b4e90d2bf0c38e855a001ca916aa22dbe9585b5f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_06ebb310", "line": 11, "range": {"start_line": 10, "start_character": 0, "end_line": 11, "end_character": 13}, "updated": "2020-02-12 16:51:23.000000000", "message": "remove groups here", "commit_id": "755f24c0d52a75b5cc03362e1da3f08e29b13bb8"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "33b2817ca75a1733d872eb60497496ee319ac31e", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c6cb5b70", "line": 11, "range": {"start_line": 10, "start_character": 0, "end_line": 11, "end_character": 13}, "in_reply_to": "3fa7e38b_06ebb310", "updated": "2020-02-12 17:04:22.000000000", "message": "Done", "commit_id": "755f24c0d52a75b5cc03362e1da3f08e29b13bb8"}]}}, "openstack%2Fproject-config~master~Ib47416608d6bfe0f0179bbd201d90ada86463e5f": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-07 13:25:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-17 14:48:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-17 09:16:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openinfra%2Frefstack~master~Iebfadb0d7cfa341f95b4dcd025313a1b8f4d3b55": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:46:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 2, "date": "2020-02-05 20:46:30.000000000", "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}], "comments": {"tools/install-js-tools.sh": [{"author": {"_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, "change_message_id": "904844376cd6baf25e9cba316a76be42575e7b86", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b85721f6", "line": 38, "updated": "2020-02-17 14:46:54.000000000", "message": "It's a bit unfortunate that NodeSource only wrote a script for EL-based distributions and not a generic one for all of them, but yeah.", "commit_id": "4f1f07cf73f5c2c2862cf0f9ecd8010d4d26372d"}]}}, "openstack%2Fproject-config~master~I51904b1b654f6c59d612321a07e5128ae379f066": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 1, "date": "2020-02-13 16:22:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:47:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-13 17:40:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fpatrole~master~I61333ba564d6f067dd8063fd89847ac58ed93d1d": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 2, "date": "2020-02-17 14:40:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-26 00:19:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "openstack%2Fproject-config~master~I7ec0196ef9914b821cb007bc184252393554d243": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:36:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-02-16 15:38:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~If094fcc31929193eb8278bdbb182e24aa506cca7": {"owner_id": 13252, "owner_name": "Dr. Jens Harbott", "owner_email": "frickler@offenerstapel.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:39:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-17 11:04:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~I8eba64c886c187c8652f94735ca6153702203d17": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 1, "date": "2020-02-05 20:18:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-17 14:39:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-05 20:15:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/copy-release-tools-scripts/files/release-tools/functions": [{"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "908fbdec8f0e9d67258aa55409af677b4f573092", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5469bff4", "line": 92, "updated": "2020-02-05 18:07:51.000000000", "message": "This are going to assume that file exists and will error out for non-octavia repositories.\nI would recommend either checking for the octavia repo, or adding || true to the end of these lines.", "commit_id": "ade102e9beab031ee9526597df64a8d794168119"}, {"author": {"_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, "change_message_id": "48efa4c6c31de35e6b5fb17e9e57db2094dd9d75", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7445db71", "line": 92, "in_reply_to": "3fa7e38b_5469bff4", "updated": "2020-02-05 18:08:41.000000000", "message": "Or see the above check for the tox.ini file and copy it.", "commit_id": "ade102e9beab031ee9526597df64a8d794168119"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "88289c139a8f260627619354eeb5f11dea307028", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_af2ea08a", "line": 92, "in_reply_to": "3fa7e38b_7445db71", "updated": "2020-02-05 18:18:24.000000000", "message": "Done", "commit_id": "ade102e9beab031ee9526597df64a8d794168119"}]}}, "openstack%2Fgovernance~master~Id2843cfcafed367851c15685d0512c6a768d6c93": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~Ie1d7fb2d7d62c1a43a32d513fdcbbb265bebff98": {"owner_id": 23567, "owner_name": "Luis Tomas Bolivar", "owner_email": "ltomasbo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 2, "date": "2020-01-21 15:33:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-02-03 10:55:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}], "comments": {}}, "openstack%2Fcharm-guide~master~Ia57be2753926d52fa0fb24774dc84b5a4201f409": {"owner_id": 30561, "owner_name": "Peter Matulis", "owner_email": "peter.matulis@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 14:04:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {}}, "openstack%2Fneutron~master~I254f0ac28f7585b699a8238e01ffb37dd70282ef": {"owner_id": 24791, "owner_name": "Maciej Jozefczyk", "owner_email": "jeicam.pl@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-02-14 20:19:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-17 11:24:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "cd4ea292f7070bf08d9548890069a4d24144c3e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4e96924c", "line": 41, "updated": "2020-02-13 14:51:08.000000000", "message": "Can you put a link to the networking-ovn change here, or the commit ID?\n\n(Cherry-picked from networking-ovn 57ac38921efa6bbf0bc4a22950355256cc3ebe6d)\n\nOR\n\nhttps://review.opendev.org/#/c/702831", "commit_id": "c852d0ff1a048532831589a31be7a74d9a99a616"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "b1894279bd62a07a847064390c4f244d147be858", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8ec7aa46", "line": 41, "in_reply_to": "3fa7e38b_4e96924c", "updated": "2020-02-13 14:53:29.000000000", "message": "Sure, done!", "commit_id": "c852d0ff1a048532831589a31be7a74d9a99a616"}]}}, "openstack%2Ftempest~master~Ic3dbd6f5e854e017a5bec4b1a625730ab68e767d": {"owner_id": 30742, "owner_name": "Soniya Murlidhar Vyas", "owner_email": "svyas@redhat.com", "labels": [{"value": 2, "date": "2020-01-27 14:28:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-27 14:30:25.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-02-14 12:50:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2019-12-29 10:21:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 5690, "name": "Masayuki Igawa", "inactive": true}, {"value": 2, "date": "2020-02-17 10:46:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, "change_message_id": "6bf7cca353cd73179f55be758888e49ea6b88380", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_baf70e5b", "line": 18, "range": {"start_line": 18, "start_character": 15, "end_line": 18, "end_character": 18}, "updated": "2019-12-16 08:44:22.000000000", "message": "If you want to mention this commit here, please use:\nhttps://opendev.org/openstack/tempest/commit/e45aa842bc823b56560af247eb5e26b1fd686151\n\nAlways use the official opendev.org URLs.", "commit_id": "6b400e011720128c44c733e038b9441be7909eec"}, {"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "bc2f915556db73aedce37827c97a6488f915fb4d", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b5fcffb6", "line": 18, "range": {"start_line": 18, "start_character": 15, "end_line": 18, "end_character": 18}, "in_reply_to": "3fa7e38b_baf70e5b", "updated": "2019-12-16 09:17:23.000000000", "message": "Thanks, I have updated commit message.", "commit_id": "6b400e011720128c44c733e038b9441be7909eec"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cd233dc879579ada0fa9f1e636c541c329c041d1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_fd2c324a", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 36}, "updated": "2019-12-24 17:39:21.000000000", "message": "this is confusing. This is removal of cli, not deprecation. something like below is better:\n\nRemove the deprecated verify-tempest-config CLI", "commit_id": "b5765c40b580fffba838591ee6dec7210072b2a5"}, {"author": {"_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, "change_message_id": "0acd2326097f096ff9c0f84a021a871b9f9d9519", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7dc7e23e", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 36}, "in_reply_to": "3fa7e38b_fd2c324a", "updated": "2019-12-24 19:02:59.000000000", "message": "Yeah, I will update in next patch", "commit_id": "b5765c40b580fffba838591ee6dec7210072b2a5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cd233dc879579ada0fa9f1e636c541c329c041d1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5d1d460e", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 33}, "updated": "2019-12-24 17:39:21.000000000", "message": "Tempest CLI verify-tempest-config was deprecated 4 years ago. With assumption of all the users of this CLI have moved to new CLI  'tempest verify_config', it is time to remove the old deprecated CLI now.", "commit_id": "b5765c40b580fffba838591ee6dec7210072b2a5"}], "releasenotes/notes/verify-tempest-command-8e88452c7a08dd77.yaml": [{"author": {"_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, "change_message_id": "9a23ffdee4c782d9a0546b0d411d08ecd5b6a254", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_902a31e4", "line": 2, "updated": "2019-12-16 10:26:39.000000000", "message": "Sorry again, I haven't noticed this.\n\nAccording the reno documentation, \"Deprecations should not be used for something that is removed in the release, use upgrade section instead.\"\n\nhttps://docs.openstack.org/reno/latest/user/usage.html", "commit_id": "67ed31f27e0c0b735df3e4997713023e4c2408ed"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "cd233dc879579ada0fa9f1e636c541c329c041d1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7d18421e", "line": 6, "range": {"start_line": 4, "start_character": 0, "end_line": 6, "end_character": 48}, "updated": "2019-12-24 17:39:21.000000000", "message": "Remove the deprecated CLI ``verify-tempest-config`` in favour of ``tempest verify-config`` command.\n    You can use ``tempest verify-config`` CLI to verify the tempest conf file.", "commit_id": "b5765c40b580fffba838591ee6dec7210072b2a5"}]}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~Ifcebf7660861738128606342dc6dab00186878b5": {"owner_id": 23567, "owner_name": "Luis Tomas Bolivar", "owner_email": "ltomasbo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 2, "date": "2020-01-21 08:45:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-02-03 10:55:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}], "comments": {}}, "openstack%2Ftempest~master~Ia1252a22c54e3a84a8e5e779ed6ea5ee593760da": {"owner_id": 30996, "owner_name": "Weronika Sikora", "owner_email": "weronika.sikora@corp.ovh.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-11 07:34:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 1, "date": "2020-02-05 11:24:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-02-05 11:24:15.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 0, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-02-17 10:44:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 30996, "name": "Weronika Sikora", "email": "weronika.sikora@corp.ovh.com", "username": "weronika.sikora"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-05 11:24:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30854, "name": "Michal Madarasz", "email": "michal.madarasz@corp.ovh.com", "username": "mmadaras"}], "comments": {}}, "openstack%2Ftempest~master~I3b926f8abb6fce3d2eab93310ce3959c68aa9a6d": {"owner_id": 30742, "owner_name": "Soniya Murlidhar Vyas", "owner_email": "svyas@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-01-29 12:18:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2020-01-29 00:22:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 2, "date": "2020-01-31 00:49:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-17 10:43:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5803, "name": "Attila Fazekas", "email": "afazekas@redhat.com", "username": "afazekas"}, {"value": 0, "_account_id": 30742, "name": "Soniya Murlidhar Vyas", "email": "svyas@redhat.com", "username": "svyas"}, {"value": 2, "date": "2020-02-03 20:02:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"releasenotes/notes/os_tenant_name-3ee175763bff455b.yaml": [{"author": {"_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, "change_message_id": "89f9d5d5935e5fa5773bf2d305357a8c0e0861a5", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ff8d7836", "line": 4, "range": {"start_line": 4, "start_character": 36, "end_line": 4, "end_character": 51}, "updated": "2020-01-13 14:55:24.000000000", "message": "nit: ``os-tenant-name`` or ``OS_TENANT_NAME``", "commit_id": "87bed44171e6531f86903dcaef87eec9ec63e06b"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "15d46f4a335d2703a58f61e64829e952ac2cf76f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f15f284a", "line": 4, "range": {"start_line": 4, "start_character": 36, "end_line": 4, "end_character": 51}, "in_reply_to": "3fa7e38b_ff8d7836", "updated": "2020-01-27 14:32:41.000000000", "message": "+1", "commit_id": "87bed44171e6531f86903dcaef87eec9ec63e06b"}, {"author": {"_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, "change_message_id": "d33aab03ac149ec7a69df339456352393bdb93dc", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_4f187382", "line": 5, "updated": "2020-02-03 20:02:36.000000000", "message": "nit: Adding this to the end of the sentence: \"from `tempest account-generator` CLI command\" makes this easier to understand, because there's provided no context here.", "commit_id": "195767a062009445940e6cbfa06d096141be3cc2"}]}}, "openstack%2Fansible-collections-openstack~master~I439f672b82385b4e317f2442755a81ef9c7c6bda": {"owner_id": 22578, "owner_name": "Abhijeet Kasurde", "owner_email": "akasurde@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-17 13:00:30.000000000", "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"plugins/modules/os_ironic.py": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "d7ab82d872fe32aae3698a240df1e8d273fc3c3f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7b677ced", "line": 106, "updated": "2020-02-14 11:45:47.000000000", "message": "I suggest adding the old parameter name as an alias to ensure that both terms work.", "commit_id": "b378da0d2dc2967af2c6e9773759687c3d0cb93f"}]}}, "openstack%2Fkuryr-kubernetes~master~I1fddc58d30e8d38f7922fe48f8e57453f82d72ef": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:27:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-17 12:15:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 0, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}], "comments": {}}, "openstack%2Freleases~master~Iaae7aeb40aa4ab86a9c88baa5e3c0763544521fe": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Freleases~master~I66da5156816c9a8113cb0faefe6756e3d41017a2": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I11148ac0a069c8c0167e51618d973c8193b8558f": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-02-17 09:12:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 1, "date": "2020-02-17 07:46:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, {"value": 2, "date": "2020-02-17 07:45:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"config/release/tripleo-ci/RedHat-8/master.yml": [{"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "9c95f9fff3487bae2e0d8241e0e037ed5ef61dbb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_63b9037a", "line": 34, "range": {"start_line": 34, "start_character": 19, "end_line": 34, "end_character": 20}, "updated": "2020-02-17 07:33:24.000000000", "message": "https", "commit_id": "343e788862e29f3826fd86263b94dfe83ac2d7af"}], "config/release/tripleo-ci/RedHat-8/promotion-testing-hash-master.yml": [{"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "b3940303b9937ec9720c0d7e318c98ba488e15f9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_42dc3e16", "line": 34, "range": {"start_line": 34, "start_character": 23, "end_line": 34, "end_character": 29}, "updated": "2020-02-12 11:03:08.000000000", "message": "for now, try images-vexxhost.rdoproject.org:4433", "commit_id": "4779d6d9d4458cb8ff76c25063bb89550f61a117"}, {"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "61cfd3699d90b589c2857f51563adccbd8bc3ff8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7d630946", "line": 33, "range": {"start_line": 33, "start_character": 29, "end_line": 33, "end_character": 59}, "updated": "2020-02-13 10:04:03.000000000", "message": "after migration, we can switch it to images.rdoproject.org:4433", "commit_id": "dacfe411647c97af89e837ae058a9b8e8f772255"}, {"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "9c95f9fff3487bae2e0d8241e0e037ed5ef61dbb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_23af8b2d", "line": 33, "range": {"start_line": 33, "start_character": 22, "end_line": 33, "end_character": 26}, "updated": "2020-02-17 07:33:24.000000000", "message": "https", "commit_id": "343e788862e29f3826fd86263b94dfe83ac2d7af"}, {"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "9c95f9fff3487bae2e0d8241e0e037ed5ef61dbb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_43b2c796", "line": 34, "range": {"start_line": 34, "start_character": 16, "end_line": 34, "end_character": 20}, "updated": "2020-02-17 07:33:24.000000000", "message": "same", "commit_id": "343e788862e29f3826fd86263b94dfe83ac2d7af"}], "config/release/tripleo-ci/RedHat-8/promotion-testing-hash-train.yml": [{"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "9c95f9fff3487bae2e0d8241e0e037ed5ef61dbb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_e3ac1337", "line": 33, "range": {"start_line": 33, "start_character": 22, "end_line": 33, "end_character": 26}, "updated": "2020-02-17 07:33:24.000000000", "message": "same", "commit_id": "343e788862e29f3826fd86263b94dfe83ac2d7af"}, {"author": {"_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, "change_message_id": "9c95f9fff3487bae2e0d8241e0e037ed5ef61dbb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_03a84f1e", "line": 34, "range": {"start_line": 34, "start_character": 16, "end_line": 34, "end_character": 20}, "updated": "2020-02-17 07:33:24.000000000", "message": "same", "commit_id": "343e788862e29f3826fd86263b94dfe83ac2d7af"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I2b39e13606a303f5adf46380edf5c5ddd3f6047a": {"owner_id": 6681, "owner_name": "Brent Eagles", "owner_email": "beagles@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-13 13:13:13.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}], "comments": {}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~I0d5f6ffd47fe0a1ae998aa4a61a9240ce0accd40": {"owner_id": 23567, "owner_name": "Luis Tomas Bolivar", "owner_email": "ltomasbo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 2, "date": "2020-01-21 15:33:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-02-03 10:56:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}], "comments": {}}, "airship%2Fshipyard~master~I4783ed79df31c117fe8f28529e818e038b0f2fe8": {"owner_id": 31207, "owner_name": "Raven", "owner_email": "rdaughe@siue.edu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-17 13:07:41.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}], "comments": {}}, "airship%2Fmaas~master~I4711ad587d903e25bd59cd5cae75841166340a84": {"owner_id": 31207, "owner_name": "Raven", "owner_email": "rdaughe@siue.edu", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-16 16:36:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-17 12:54:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94b869812ca493bb1918bb66de0519571111d349", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f4fbafbb", "line": 80, "range": {"start_line": 74, "start_character": 2, "end_line": 80, "end_character": 0}, "updated": "2019-12-10 01:42:33.000000000", "message": "extra keys not allowed @ data['timeou']", "commit_id": "08a197a8a7f3569cf0aee6a0ac6be452815f65b0"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "fa08c364de9c6b7d09ec93d2af34c988ef812bea", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_36d14058", "line": 76, "range": {"start_line": 76, "start_character": 0, "end_line": 76, "end_character": 6}, "updated": "2019-12-10 17:27:59.000000000", "message": "Right now, this job will trigger on any change submitted to this repo. That will tie down limited resources for CI, and cause changes to wait longer before they can be tested.\n\nWe can avoid that by using the \"files\" option to trigger this job only if a YAML file is edited.", "commit_id": "1b207c0299599782f996920db920d7341264fcf2"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8c7e246820842ce6fe9fcc63fa16b79a4910baf7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_46e8cb14", "line": 31, "range": {"start_line": 13, "start_character": 2, "end_line": 31, "end_character": 0}, "updated": "2019-12-10 21:15:50.000000000", "message": "Job airship-maas-lint-yaml not defined", "commit_id": "7aeec712887fc963e4e28afd6996ffd868ffa3dd"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "8c7e246820842ce6fe9fcc63fa16b79a4910baf7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_a6873f5b", "line": 86, "range": {"start_line": 76, "start_character": 2, "end_line": 86, "end_character": 0}, "updated": "2019-12-10 21:15:50.000000000", "message": "nothing to repeat at position 1", "commit_id": "7aeec712887fc963e4e28afd6996ffd868ffa3dd"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a3382f4bd0d0007298aaee4269f36a2b211fb2df", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_263fcf86", "line": 31, "range": {"start_line": 13, "start_character": 2, "end_line": 31, "end_character": 0}, "updated": "2019-12-10 21:20:55.000000000", "message": "Job airship-maas-lint-yaml not defined", "commit_id": "fe488ed1cf3ef95f28f45d3cfc75243c4ec8b46f"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "a3382f4bd0d0007298aaee4269f36a2b211fb2df", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_063c1390", "line": 86, "range": {"start_line": 76, "start_character": 2, "end_line": 86, "end_character": 0}, "updated": "2019-12-10 21:20:55.000000000", "message": "nothing to repeat at position 0", "commit_id": "fe488ed1cf3ef95f28f45d3cfc75243c4ec8b46f"}], "tools/gate/playbooks/yamllint-config.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "fa08c364de9c6b7d09ec93d2af34c988ef812bea", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_96b5941b", "line": 16, "range": {"start_line": 15, "start_character": 0, "end_line": 16, "end_character": 25}, "updated": "2019-12-10 17:27:59.000000000", "message": "If we're ignoring a path here, the job also shouldn't trigger for changes made to that path.", "commit_id": "1b207c0299599782f996920db920d7341264fcf2"}]}}, "openstack%2Fneutron~master~I55f858d50e636eb9091570b256380330b9ce9cb3": {"owner_id": 5948, "owner_name": "Oleg Bondarev", "owner_email": "obondarev@mirantis.com", "labels": [{"value": 0, "_account_id": 5948, "name": "Oleg Bondarev", "email": "obondarev@mirantis.com", "username": "obondarev"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 28329, "name": "yangjianfeng", "email": "yjf1970231893@gmail.com", "username": "yangjianfeng"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:52:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-02-13 10:38:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-02-12 10:12:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 1, "date": "2020-02-11 14:12:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"neutron/api/rpc/agentnotifiers/dhcp_rpc_agent_api.py": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "147e103123481c73cb77e5ea25943c1670e141bc", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_506416e6", "line": 48, "range": {"start_line": 47, "start_character": 0, "end_line": 48, "end_character": 24}, "updated": "2020-02-11 14:12:03.000000000", "message": "It makes perfect sense to me to keep all port related actions  on the same priority, otherwise we are reordering events in an unintuitive way.", "commit_id": "a0bb5763b277d7360554fd64813fdce01244d2fa"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "73e24bd8ef1deca7dbcef9328a6e51417cdcff0a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c2358e44", "line": 48, "range": {"start_line": 47, "start_character": 0, "end_line": 48, "end_character": 24}, "in_reply_to": "3fa7e38b_3f627b16", "updated": "2020-02-12 11:10:00.000000000", "message": "Lets for now go with fix for the actual bug and later we can refactor this part of code", "commit_id": "a0bb5763b277d7360554fd64813fdce01244d2fa"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "ce3255b983b0edbdd1253b0f020d66fb55cb3f0a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3f627b16", "line": 48, "range": {"start_line": 47, "start_character": 0, "end_line": 48, "end_character": 24}, "in_reply_to": "3fa7e38b_506416e6", "updated": "2020-02-12 10:12:54.000000000", "message": "Actually I would like to revisit the feature that introduced  those priorities. Instead of this what we can do is to fork processes to handle different networks. But this is a big hunk of work.", "commit_id": "a0bb5763b277d7360554fd64813fdce01244d2fa"}]}}, "openstack%2Ftripleo-validations~stable%2Ftrain~Ia0c67c5980a7e6bc9006a24be775ea6fb815d23c": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 07:17:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-02-17 09:38:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}, {"value": 0, "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Id6ed3092d70d85bbb0e38159b0b23addec48146c": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:04:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-17 07:35:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20676, "name": "daniel.pawlik", "display_name": "Daniel Pawlik", "email": "dpawlik@redhat.com", "username": "daniel.pawlik"}, {"value": 2, "date": "2020-02-17 09:26:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "openstack%2Fdevstack~master~Ib9c17977603c850f3e907f22cccb7d23b0f74ff3": {"owner_id": 13252, "owner_name": "Dr. Jens Harbott", "owner_email": "frickler@offenerstapel.de", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2020-02-16 18:04:28.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I6033b06336854e01b8ff719165d67702174d95fb": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-07 14:41:27.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-07 14:41:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-07 14:41:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6683, "name": "Pavel Sedl\u00e1k", "email": "psedlak@redhat.com", "username": "psedlak"}, {"value": 1, "date": "2020-02-07 16:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}], "comments": {}}, "starlingx%2Fdocs~master~Ibf91691c8e8e68a340dc3cb0d67db21c8f3c3a1d": {"owner_id": 31570, "owner_name": "Sharath Kumar K", "owner_email": "sharath.kumar@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-11 23:39:05.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29319, "name": "Kristal Dale", "email": "kristal.dale@intel.com", "username": "kdale"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "63082e24e1464896b1b39044b811ce1662007862", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_eadc2a73", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 56}, "updated": "2020-02-11 23:39:05.000000000", "message": "So this should be the last line typically, after the Change-ID", "commit_id": "1dd8b44df474504b97a581d2032b79091dd93a1a"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "63082e24e1464896b1b39044b811ce1662007862", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0adae674", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 39}, "updated": "2020-02-11 23:39:05.000000000", "message": "This should be your first line", "commit_id": "1dd8b44df474504b97a581d2032b79091dd93a1a"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "63082e24e1464896b1b39044b811ce1662007862", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cad12e58", "line": 11, "range": {"start_line": 11, "start_character": 13, "end_line": 11, "end_character": 21}, "updated": "2020-02-11 23:39:05.000000000", "message": "nit: spelling\n\nBut also \"why\" did you need to make that change, explain the change, not \"what\" you did.", "commit_id": "1dd8b44df474504b97a581d2032b79091dd93a1a"}], "doc/source/developer_resources/build_guide.rst": [{"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "63082e24e1464896b1b39044b811ce1662007862", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2a456216", "line": 187, "range": {"start_line": 187, "start_character": 13, "end_line": 187, "end_character": 22}, "updated": "2020-02-11 23:39:05.000000000", "message": "This is not a valid layer, you might want to mention the 3 layers: flock, distro, compiler in a comment.", "commit_id": "1dd8b44df474504b97a581d2032b79091dd93a1a"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "63082e24e1464896b1b39044b811ce1662007862", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8a3c9691", "line": 197, "range": {"start_line": 197, "start_character": 46, "end_line": 197, "end_character": 47}, "updated": "2020-02-11 23:39:05.000000000", "message": "Maybe say to uncomment the following lines in the Dockerfile and set the proxies add appropriate.", "commit_id": "1dd8b44df474504b97a581d2032b79091dd93a1a"}]}}, "openstack%2Fxstatic-angular-bootstrap~master~I9111a768fac27bccb7c17027a8b4a667ce9011f9": {"owner_id": 8648, "owner_name": "Radomir Dopieralski", "owner_email": "openstack@dopieralski.pl", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, {"value": 2, "date": "2020-02-17 11:25:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-01-27 14:09:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {}}, "x%2Fxstatic-angular-fileupload~master~Ie35ede414b46e28b0377d55ecdd4662ba964d8bf": {"owner_id": 8648, "owner_name": "Radomir Dopieralski", "owner_email": "openstack@dopieralski.pl", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, {"value": 2, "date": "2020-02-17 11:25:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-01-27 00:30:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}], "comments": {"setup.cfg": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "8752d557e930da2f78fbfa1d4fabf4b0a773f1dd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_45a47da4", "updated": "2020-01-22 12:46:50.000000000", "message": "why is this file needed?\nIt looks like nothing loaded in setup.py loads this file.", "commit_id": "ed6da70d3eee0cdad7c150684b4470b8af393f56"}, {"author": {"_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, "change_message_id": "d61ba2afb01a55fc31da149036a4e6b614e37ba2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9c86405f", "in_reply_to": "3fa7e38b_45a47da4", "updated": "2020-01-22 14:17:07.000000000", "message": "It's used by newer versions of pip in place of setup.py, which is deprecated. It has been created by the xstatic-release script.", "commit_id": "ed6da70d3eee0cdad7c150684b4470b8af393f56"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "d748060a18f993966d0d734a26113ff9de294366", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1c422268", "in_reply_to": "3fa7e38b_9c86405f", "updated": "2020-01-27 00:25:49.000000000", "message": "Thanks. It makes sense.", "commit_id": "ed6da70d3eee0cdad7c150684b4470b8af393f56"}]}}, "openstack%2Fopenstack-ansible-os_keystone~master~I16a61501a0578e87464e8bd1031af4270eac2d98": {"owner_id": 29865, "owner_name": "Georgina Shippey", "owner_email": "georgina.shippey@outlook.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-16 18:20:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-01-16 14:32:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fproject-config~master~I6e6da5d48e4bed69493f513c8bd42fcf42e4eeaf": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 11:04:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-02-12 10:57:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "airship%2Fdrydock~master~I50be2f08e69123afbef136683134abffc4e44197": {"owner_id": 29144, "owner_name": "PRATEEK REDDY DODDA", "owner_email": "prateek.reddy.dodda@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, {"value": 1, "date": "2020-02-14 14:44:07.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28778, "name": "Dan Crank", "email": "danielcrank@microsoft.com", "username": "dancrank"}, {"value": 2, "date": "2020-02-14 15:12:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-17 10:55:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "c1ef9bfca13bded7c95ab4f635999c4ed9a59074", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7c0c2feb", "line": 39, "range": {"start_line": 13, "start_character": 2, "end_line": 39, "end_character": 0}, "updated": "2020-01-30 21:50:55.000000000", "message": "Job airship-promenade-apparmor not defined", "commit_id": "11b0f7aeed1f2f2a6ba39ae92529e23f416b59bd"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "6b6835f2f3209251f7855702e5c0eafd4aed16a9", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_973f2083", "line": 26, "range": {"start_line": 26, "start_character": 10, "end_line": 26, "end_character": 34}, "updated": "2020-02-06 22:41:44.000000000", "message": "What does this job test? It doesn't seem to deploy any charts or exercise any AppArmor profiles; it just enables the AppArmor daemon.", "commit_id": "b4c2b12a42c515dc4d39f2611de2777ec51c4550"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "8e762c918c70dd9e5571dbd0b83ce3ef79aa0100", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c4190176", "line": 155, "range": {"start_line": 153, "start_character": 0, "end_line": 155, "end_character": 55}, "updated": "2020-02-13 16:03:52.000000000", "message": "These aren't testing that the apparmor profile gets applied to the Drydock chart. Can we remove this job or make it functional?", "commit_id": "26d7fd4511a20a9aabc74173fdb66db4ca74e14d"}, {"author": {"_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, "change_message_id": "c86b13b6942592a7a553bcb2f1ef253097feabd9", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c4d4a120", "line": 155, "range": {"start_line": 153, "start_character": 0, "end_line": 155, "end_character": 55}, "in_reply_to": "3fa7e38b_c4190176", "updated": "2020-02-13 16:15:47.000000000", "message": "Done", "commit_id": "26d7fd4511a20a9aabc74173fdb66db4ca74e14d"}], "tools/deployment/apparmor/000-install-packages.sh": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "6b6835f2f3209251f7855702e5c0eafd4aed16a9", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_5749a82c", "line": 22, "range": {"start_line": 13, "start_character": 0, "end_line": 22, "end_character": 2}, "updated": "2020-02-06 22:41:44.000000000", "message": "What are these repositories used for?", "commit_id": "b4c2b12a42c515dc4d39f2611de2777ec51c4550"}], "tools/gate/playbooks/roles/osh-run-script/defaults/main.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "6b6835f2f3209251f7855702e5c0eafd4aed16a9", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_776dc498", "line": 14, "range": {"start_line": 14, "start_character": 2, "end_line": 14, "end_character": 27}, "updated": "2020-02-06 22:41:44.000000000", "message": "This parameter isn't relevant to Airship. What requires it?", "commit_id": "b4c2b12a42c515dc4d39f2611de2777ec51c4550"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "6b6835f2f3209251f7855702e5c0eafd4aed16a9", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_37674cbb", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 17}, "updated": "2020-02-06 22:41:44.000000000", "message": "This line can be removed.", "commit_id": "b4c2b12a42c515dc4d39f2611de2777ec51c4550"}]}}, "x%2Fvmware-nsxlib~stable%2Fstein~Ia8a0b6a1d1bb2fbf2addba8b570da4e397ac75ea": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:40:40.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fvmware-nsxlib~stable%2Ftrain~Ia8a0b6a1d1bb2fbf2addba8b570da4e397ac75ea": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:14:43.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova-specs~master~I0c804743db77da5717c9c37e3c5ba57a9a3950ad": {"owner_id": 7166, "owner_name": "Sylvain Bauza", "owner_email": "sbauza@redhat.com", "labels": [{"value": 2, "date": "2020-02-15 10:13:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, {"value": 0, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 0, "_account_id": 17920, "name": "Jianghua Wang", "email": "jianghua.wang@citrix.com", "username": "wjhfresh"}, {"value": 0, "_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, {"value": 0, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 2, "date": "2020-02-14 17:21:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 30001, "name": "Ivens Zambrano", "email": "ivens.zambrano@intel.com", "username": "IvensZambrano"}, {"value": 0, "_account_id": 7730, "name": "Sahid Orentino Ferdjaoui", "email": "sahid.ferdjaoui@industrialdiscipline.com", "username": "sahid"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_2d209cf7", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 6}, "updated": "2018-03-19 22:08:41.000000000", "message": "This is :P\n\nAnd you totally can't get away with this as a commit message.  Copy/paste the first paragraph of the spec.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}], "specs/rocky/approved/numa-topology-with-rps.rst": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_6d6bf41e", "line": 15, "range": {"start_line": 15, "start_character": 69, "end_line": 15, "end_character": 76}, "updated": "2018-03-19 22:08:41.000000000", "message": "compute *node*, tbc", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_0d7d98e6", "line": 15, "range": {"start_line": 15, "start_character": 17, "end_line": 15, "end_character": 19}, "updated": "2018-03-19 22:08:41.000000000", "message": "strike", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_3c2366bf", "line": 28, "range": {"start_line": 28, "start_character": 5, "end_line": 28, "end_character": 71}, "updated": "2018-03-14 16:44:32.000000000", "message": "how would we store the information about which numa node was selected in order to pass it on to the compute node?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_a68afd66", "line": 28, "range": {"start_line": 28, "start_character": 5, "end_line": 28, "end_character": 71}, "in_reply_to": "df7087c5_3c2366bf", "updated": "2018-03-14 19:21:49.000000000", "message": "If the NUMA node is a resource provider and some resources were claimed for the instance, then the resource provider's UUID will be in the allocation request that is received by the compute node and we could look up the NUMA node that way.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_4d4b90af", "line": 28, "range": {"start_line": 28, "start_character": 5, "end_line": 28, "end_character": 71}, "in_reply_to": "df7087c5_a68afd66", "updated": "2018-03-19 22:08:41.000000000", "message": "Yuh; it's the same way virt would know where *any* resource comes from when it receives the allocation request.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_1b6f3fc6", "line": 51, "range": {"start_line": 51, "start_character": 62, "end_line": 51, "end_character": 65}, "updated": "2018-03-23 17:00:31.000000000", "message": "nit memory controller", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_a8071518", "line": 51, "range": {"start_line": 51, "start_character": 48, "end_line": 51, "end_character": 52}, "updated": "2018-03-15 13:47:38.000000000", "message": "through", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_fb65abe2", "line": 52, "range": {"start_line": 52, "start_character": 35, "end_line": 52, "end_character": 38}, "updated": "2018-03-23 17:00:31.000000000", "message": "memory controller.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_3bd00351", "line": 54, "range": {"start_line": 54, "start_character": 9, "end_line": 54, "end_character": 18}, "updated": "2018-03-23 17:00:31.000000000", "message": "compute and io intensive", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_bbe2d32e", "line": 55, "range": {"start_line": 55, "start_character": 47, "end_line": 55, "end_character": 68}, "updated": "2018-03-23 17:00:31.000000000", "message": "nit this is only true for compute or io bound workloads.\nworkloads that are memory bound may instead beift form spanning numa nodes due to the increased memory bandwith provided they are not share state between cores on different numa nodes.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_66f5c5ec", "line": 70, "range": {"start_line": 70, "start_character": 17, "end_line": 70, "end_character": 39}, "updated": "2018-03-14 19:21:49.000000000", "message": "there's no such thing as a Placement extra spec. I believe you are referring to the translation of flavor extra specs into the request groups that are sent to placement that contain resource amounts and traits?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_3b2c8346", "line": 70, "range": {"start_line": 70, "start_character": 17, "end_line": 70, "end_character": 39}, "in_reply_to": "df7087c5_4de07097", "updated": "2018-03-23 17:00:31.000000000", "message": "i think this usecase is actully an anti example.\n\nthe hw:numa_* fields are defiend to specify the numa topoloy of the guest only. they have no relation to the numa topology of the host untill you spcify a guest to host numa afinity policy.\n\nso that said libvirt is the only dirver the supports all these options and it only supports a stict affinity policy where it pinnes a virtual numa node to host numa node. we could use placement to prefilter for that but we would therefore be saying that each guest virtual numa node will be schduled to a different host numa node wich is not required today.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_4de07097", "line": 70, "range": {"start_line": 70, "start_character": 17, "end_line": 70, "end_character": 39}, "in_reply_to": "df7087c5_66f5c5ec", "updated": "2018-03-19 22:08:41.000000000", "message": "In any case, could you give an example here?  Or are you saving that for later?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_0df4b85a", "line": 72, "range": {"start_line": 72, "start_character": 62, "end_line": 72, "end_character": 66}, "updated": "2018-03-19 22:08:41.000000000", "message": "to", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_86d33960", "line": 90, "range": {"start_line": 90, "start_character": 28, "end_line": 90, "end_character": 32}, "updated": "2018-03-14 19:21:49.000000000", "message": "CPU4", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_e6b9d514", "line": 104, "range": {"start_line": 104, "start_character": 71, "end_line": 104, "end_character": 76}, "updated": "2018-03-14 19:21:49.000000000", "message": "core", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_8661f9ab", "line": 118, "range": {"start_line": 118, "start_character": 46, "end_line": 118, "end_character": 55}, "updated": "2018-03-14 19:21:49.000000000", "message": "We chatted at the PTG about replacing this resource class name with \"PCPU\" to indicate a physical (logical) processor.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "c7532b12f6216894eb3e397b96ec8b5af9b3baa6", "unresolved": false, "patch_set": 3, "id": "df7087c5_94a5a2a4", "line": 118, "range": {"start_line": 118, "start_character": 46, "end_line": 118, "end_character": 55}, "in_reply_to": "df7087c5_8661f9ab", "updated": "2018-03-14 21:45:58.000000000", "message": "I like PCPU better too. :)", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_66438514", "line": 119, "range": {"start_line": 119, "start_character": 46, "end_line": 119, "end_character": 60}, "updated": "2018-03-14 19:21:49.000000000", "message": "I'd actually like to remove this resource class (or deprecate it). MEMORY_MB is the resource class to use.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_9b758ffd", "line": 119, "range": {"start_line": 119, "start_character": 46, "end_line": 119, "end_character": 60}, "in_reply_to": "df7087c5_2d917cf2", "updated": "2018-03-23 17:00:31.000000000", "message": "the other consideration here is how to model hugepages.\ni would suggest moving memory into a sub RP of the numa node\nwith an inventory of MEMORY_MB and traits to reflect memory size. e.g. HW_MEM_PAGESIZE_4K,HW_MEM_PAGESIZE_2MB,HW_MEM_PAGESIZE_1G\n\nwe could then use the step_size on the invetores of memory_mb to enforce the allcoation of 4k,2mb,1G chunks form thos inventories.\n\nthat would allow use to remove the hw:mem_page_size extra spec in the future", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_88ac91ed", "line": 119, "range": {"start_line": 119, "start_character": 46, "end_line": 119, "end_character": 60}, "in_reply_to": "df7087c5_66438514", "updated": "2018-03-15 13:47:38.000000000", "message": "To be clear, are you saying s/NUMA_MEMORY_MB/MEMORY_MB/ or remove this from the NUMA resource provider entirely?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_2d917cf2", "line": 119, "range": {"start_line": 119, "start_character": 46, "end_line": 119, "end_character": 60}, "in_reply_to": "df7087c5_88ac91ed", "updated": "2018-03-19 22:08:41.000000000", "message": "the former", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "1b14c072fa3688ca049fb4ce3ee16ec72f9be116", "unresolved": false, "patch_set": 3, "id": "df7087c5_7f345ade", "line": 126, "updated": "2018-03-15 10:13:29.000000000", "message": "Let me make sure that the host in the picture have totally 32 logical cores; 16 for shared and 8+8 for dedicated.\n\nThey shouldn't be mixed or duplicated in both NUMA RP and COMPUTE RP. If we mix or duplicate them, there would be inconsistency with allocation candidates API response in my understanding.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_a83f1585", "line": 126, "in_reply_to": "df7087c5_7f345ade", "updated": "2018-03-15 13:47:38.000000000", "message": "+1. I'd like to think of these as entirely separate things, in line with the mixed-cpu-policy-host spec. Maybe we should link to that?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "1b14c072fa3688ca049fb4ce3ee16ec72f9be116", "unresolved": false, "patch_set": 3, "id": "df7087c5_045b9386", "line": 129, "range": {"start_line": 129, "start_character": 34, "end_line": 129, "end_character": 39}, "updated": "2018-03-15 10:13:29.000000000", "message": "\"cores for pinning\"\n... we'd like to not mix shared and dedicated cores here.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "c05ff8932da7d6d9018ca28a3e4f1679ae81d299", "unresolved": false, "patch_set": 3, "id": "df7087c5_66df053a", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "updated": "2018-03-14 19:21:49.000000000", "message": "I can see a case for keeping an inventory of VCPU on the compute node root provider, since a PCPU != VCPU. But I can't see a case for keeping an inventory of MEMORY_MB on the compute node root provider if NUMA node providers contain MEMORY_MB inventory that is associated with just that NUMA node. In that case, it's not like the compute node as a whole has some bank of memory that is *not* associated with one of the NUMA nodes.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "c7532b12f6216894eb3e397b96ec8b5af9b3baa6", "unresolved": false, "patch_set": 3, "id": "df7087c5_f40f3e85", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_66df053a", "updated": "2018-03-14 21:45:58.000000000", "message": "Actually it sort of does, because (with libvirt at least) if you boot an instance that doesn't have a numa topology (so 4K pages, \"shared\" vCPUs, no PCI devices, no explicit guest numa topology) then nova does not specify NUMA affinity for it and it basically floats across all available host pCPUs.\n\nThis currently causes problems with accurate per-host-NUMA-node 4KB memory accounting since we don't know how much memory these floating instances have consumed from each host NUMA node.\n\nWithin my organization we changed it to explicitly constrain such instances to a single NUMA node, but we still had to use \"preferred\" rather than \"strict\" memory allocation for 4K pages because the host overhead per NUMA node is somewhat variable.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_880e7630", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_6e523c15", "updated": "2018-03-19 22:08:41.000000000", "message": "I still don't understand how this can work.  If we e.g. satisfy a request for NUMA_CORE:2, the allocation will happen against the NUMA RP's inventory, which now has 6 available for a total of 14 on the system.  But the compute node's VCPU inventory still shows 16 available.\n\nDid we discuss locking down a host to doing either NUMA or not-NUMA, but not both?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "aaaf5f80629350d75b37edf209f4d9587c445b2f", "unresolved": false, "patch_set": 3, "id": "df7087c5_5e123c5a", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_880e7630", "updated": "2018-03-20 19:53:07.000000000", "message": "I'd rather not lock down a host.  The discussion that we had around the \"mixed shared and dedicated on same node\" spec talked about reporting \"pcpus for shared vcpus\" and \"pcpus for dedicated vcpus\" separately into placement, in which case consuming a NUMA_CORE does not have any implications about consuming compute node VCPUs.\n\nSuppose you have an instance with a numa_topology. (Maybe it's using hugepages, maybe it specified a particular numa topology.)  In this case you would consume some number of VCPUs from a specific NUMA node, which should *also* consume that many VCPUs from the compute node as a whole.  This would mean that we should track VCPUs as a per-NUMA-node resource as well though, I think.\n\nBut that becomes problematic if you have an instance that is not pinned to a NUMA node--you'd consume some number of VCPUs from the compute node as a whole, but how do you account for that node-wide usage on each NUMA node?\n\nGiven my earlier comment above, with \"shared\" vCPUs and 4KB pages it might make sense to let it float across the whole compute node, but with \"shared\" vCPUs and 2MB pages it makes sense to restrict it to the pCPUs on a particular NUMA node.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "5122bd5c205a09534dddb4870961acb1296a03f9", "unresolved": false, "patch_set": 3, "id": "df7087c5_cc0046ae", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_88925156", "updated": "2018-03-16 04:14:59.000000000", "message": "> We hardly need a 'dedicated_memory' configuration option, do we? :)\n\nNo, we don't.\n\nI'm good with the approach to copy COMPUTE RP's MEMORY_MB to each NUMA RP's NUMA_MEMORY_MB, and requesting both resource classes when booting an instance with numatopology and requesting only COMPUTE RP's MEMORY_MB when booting an instance with no numatopology. Am I getting you?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_88925156", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_9fa60eab", "updated": "2018-03-15 13:47:38.000000000", "message": "> So we allocate memory from COMPUTE RP(MEMORY_MB) in the case where\n > we can't say  \"we allocate memory from this numa node\", and from\n > NUMA RP(NUMA_MEMORY_MB) when the NUMATopology of the instance is\n > enabled ... really? Sounds confusing to me. Operators would be\n > confused when they check if the memory is full or not.\n\nAgreed, but...\n\n > I prefer to stick to allocate memory from COMPUTE RP(MEMORY_MB),\n > which is how it works today.\n\nSay you have 2 sockets, 8 cores, no threads and 16GB of RAM (8GB per socket). If you boot an instance with four cores from node 0 and 8GB of RAM, then attempting to boot another four core instance will end up attempting to use the other four CPUs from node 0, right? This will either fail or will result in awful performance. You could also replicate something similar with asymmetric placement of RAM on the physical host (say, 128GB for node 0 and 384 GB for node 1).\n\nWe hardly need a 'dedicated_memory' configuration option, do we? :)", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "fdb0767e4dfae20269b2dc596ca9af34d4a9bcee", "unresolved": false, "patch_set": 3, "id": "df7087c5_6e523c15", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_cc0046ae", "updated": "2018-03-16 17:20:00.000000000", "message": "For hugepages we really do have per-NUMA amounts and they are always consumed on a per-NUMA basis.  So they should be tracked as per-NUMA resources.\n\nFor 4KB pages they can be consumed on a per-NUMA basis (for instances with \"dedicated\" vCPUs, or PCI devices, or an explicit NUMA topology) or they can be consumed on a compute node basis (for instances with no numa_topology).\n\nWhat I would propose is a variation on what we have done internally.  Account for 4KB pages for the compute node as a whole, and use \"mode=preferred\" for that memory so that it'll try to be NUMA-local but fall back to NUMA-remote if needed.\n\nAlternately, change instances with no numa_topology (which implies 4KB pages) to be constrained to a single host NUMA node.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "1b14c072fa3688ca049fb4ce3ee16ec72f9be116", "unresolved": false, "patch_set": 3, "id": "df7087c5_9fa60eab", "line": 134, "range": {"start_line": 133, "start_character": 60, "end_line": 134, "end_character": 27}, "in_reply_to": "df7087c5_f40f3e85", "updated": "2018-03-15 10:13:29.000000000", "message": "So we allocate memory from COMPUTE RP(MEMORY_MB) in the case where we can't say  \"we allocate memory from this numa node\", and from NUMA RP(NUMA_MEMORY_MB) when the NUMATopology of the instance is enabled ... really? Sounds confusing to me. Operators would be confused when they check if the memory is full or not.\n\nI prefer to stick to allocate memory from COMPUTE RP(MEMORY_MB), which is how it works today.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_549a94b8", "line": 135, "range": {"start_line": 135, "start_character": 8, "end_line": 135, "end_character": 19}, "updated": "2018-03-15 13:47:38.000000000", "message": "``NUMA_SOCKET``", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_5b94d7e8", "line": 135, "range": {"start_line": 135, "start_character": 8, "end_line": 135, "end_character": 19}, "in_reply_to": "df7087c5_549a94b8", "updated": "2018-03-23 17:00:31.000000000", "message": "please never use the term numa socket.\na singel proces socket can have 0,1 or 2+\nnuma nodes associated with it.\n\nif we have this resouce class please call it NUMA_NODE", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_3ff7d8d5", "line": 136, "range": {"start_line": 135, "start_character": 26, "end_line": 136, "end_character": 56}, "updated": "2018-03-14 16:44:32.000000000", "message": "grammar nit: should be something like \"...would specify how many NUMA nodes the compute node has.\"   (And if it's not a NUMA architecture it would just degenerate to a single NUMA node, no?)", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_5fa88c8a", "line": 138, "range": {"start_line": 138, "start_character": 4, "end_line": 138, "end_character": 78}, "updated": "2018-03-14 16:44:32.000000000", "message": "Is this really what you meant?  It seems like it would be more accurate to say that this is how many NUMA nodes the host actually has.\n\nCurrently \"hw:numa_nodes\" in the extra specs tells us how many NUMA nodes the instance should use.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_fb728be3", "line": 138, "range": {"start_line": 138, "start_character": 4, "end_line": 138, "end_character": 78}, "in_reply_to": "df7087c5_0851060f", "updated": "2018-03-23 17:00:31.000000000", "message": "+1 for trait.\n\nto have a resouce class you would have to create an inventory of that clase on the numa node RP with a cpasity of 0 to get the effect you discibe. a trait is much cleaner.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_7448f82b", "line": 138, "range": {"start_line": 138, "start_character": 4, "end_line": 138, "end_character": 78}, "in_reply_to": "df7087c5_5fa88c8a", "updated": "2018-03-15 13:47:38.000000000", "message": "+1. It's also possible that an instance could have two NUMA nodes and these could be placed on the same host NUMA node. You can't directly map host nodes to instance nodes.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_0851060f", "line": 138, "range": {"start_line": 138, "start_character": 4, "end_line": 138, "end_character": 78}, "in_reply_to": "df7087c5_7448f82b", "updated": "2018-03-19 22:08:41.000000000", "message": "I'm not a fan of this idea of \"unconsumable inventory\".  A more natural (and in fact more useful) model would be to mark each of the NUMA RPs with a THIS_IS_A_NUMA_NODE trait.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_48461e52", "line": 145, "range": {"start_line": 145, "start_character": 17, "end_line": 145, "end_character": 24}, "updated": "2018-03-19 22:08:41.000000000", "message": "physical.\n\nAnd you should have one RP per SR-IOV PF, not for the whole NIC.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_f43c0894", "line": 151, "range": {"start_line": 151, "start_character": 12, "end_line": 151, "end_character": 22}, "updated": "2018-03-15 13:47:38.000000000", "message": "nit: maybe add a backreference", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_94582cfa", "line": 154, "range": {"start_line": 154, "start_character": 14, "end_line": 154, "end_character": 21}, "updated": "2018-03-15 13:47:38.000000000", "message": "Can you just use ``N`` and ``M`` here. I thought you were talking about traits here for a moment", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_a8a33a00", "line": 154, "range": {"start_line": 154, "start_character": 14, "end_line": 154, "end_character": 21}, "in_reply_to": "df7087c5_1e397fd5", "updated": "2018-03-19 22:08:41.000000000", "message": "Note that you have to do some backslashing to get it attached to the rest of the string, though.  See for example: https://review.openstack.org/#/c/540179/3/specs/rocky/approved/granular-resource-requests.rst@182\n\nI'm gonna say I don't understand this paragraph.  Is 'NB' some kind of parameter?  Perhaps a concrete example?", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "d5cecfa575985cccb7ae15a476e4c04beffd79b4", "unresolved": false, "patch_set": 3, "id": "df7087c5_1e397fd5", "line": 154, "range": {"start_line": 154, "start_character": 14, "end_line": 154, "end_character": 21}, "in_reply_to": "df7087c5_2ca0e28f", "updated": "2018-03-16 09:29:34.000000000", "message": "You should use those, actually. Single backticks means \"default role\" which can be anything (it just currently defaults to italics). You're better off using single asterisks (*N*) which are guaranteed to be the same everywhere", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "5122bd5c205a09534dddb4870961acb1296a03f9", "unresolved": false, "patch_set": 3, "id": "df7087c5_2ca0e28f", "line": 154, "range": {"start_line": 154, "start_character": 14, "end_line": 154, "end_character": 21}, "in_reply_to": "df7087c5_94582cfa", "updated": "2018-03-16 04:14:59.000000000", "message": "You can use single backtick (`N`) to distinguish general numbers (`N` can be 1, 2, 100 or anything) from unique parameter (``SOME_TRAIT``).", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_146c1c9a", "line": 155, "range": {"start_line": 155, "start_character": 9, "end_line": 155, "end_character": 18}, "updated": "2018-03-15 13:47:38.000000000", "message": "nit: extra spec", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_3f5ef843", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 77}, "updated": "2018-03-14 16:44:32.000000000", "message": "I think we'd want a way to express what we currently have in the extra specs for numa nodes.  For example, \"I want one numa node with \"X\" vCPUs and \"Y\" RAM, and another numa node with \"N\" vCPUs and \"M\" RAM\".\n\nOr could we automatically translate the existing hw:numa_nodes/hw:numa_cpus.N/hw:numa_mem.N extra specs into a request to placement?  That would have the benefit of backwards compatibility.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_f433a8a9", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 77}, "in_reply_to": "df7087c5_3f5ef843", "updated": "2018-03-15 13:47:38.000000000", "message": "I'd prefer the latter. I'm not yet convinced that we need a new way to specify this stuff when the old way is mostly ok", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_32686fb7", "line": 172, "range": {"start_line": 167, "start_character": 9, "end_line": 172, "end_character": 78}, "updated": "2018-03-14 16:44:32.000000000", "message": "I don't really like pushing this onto the operator, it seems prone to error.  I think nova could automatically convert the existing extra-specs into a placement request.  Like if you specified 3 vCPUs, with a CPU policy of \"dedicated\", then we could ask for 3 NUMA_COREs, but if the CPU policy is \"shared\" then we'd ask for 3 VCPUs.  If we approved the \"mixed shared and dedicated vCPUs in same instance\" spec then we could allow an explicit override where we ask for X \"shared\" vCPUs and Y \"dedicated\" vCPUs.\n\nThis would have the nice property that it \"just works\" with existing flavors, without requiring operators to update all their extra-specs with resource requests.\n\nIf we were going to do what you have here, I think it would make sense to add validation to the resource extra-specs to (for example) ensure that we don't ask for more resources than are specified in the flavor.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_d4d5441d", "line": 172, "range": {"start_line": 167, "start_character": 9, "end_line": 172, "end_character": 78}, "in_reply_to": "df7087c5_32686fb7", "updated": "2018-03-15 13:47:38.000000000", "message": "+1, for all the same reasons", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_1b13bf68", "line": 172, "range": {"start_line": 167, "start_character": 9, "end_line": 172, "end_character": 78}, "in_reply_to": "df7087c5_d4d5441d", "updated": "2018-03-23 17:00:31.000000000", "message": "+1", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_54e934e3", "line": 175, "range": {"start_line": 175, "start_character": 34, "end_line": 175, "end_character": 41}, "updated": "2018-03-15 13:47:38.000000000", "message": "use case", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_d4bea4d3", "line": 184, "range": {"start_line": 184, "start_character": 28, "end_line": 184, "end_character": 34}, "updated": "2018-03-15 13:47:38.000000000", "message": "``N``", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_d28ed377", "line": 190, "range": {"start_line": 187, "start_character": 2, "end_line": 190, "end_character": 40}, "updated": "2018-03-14 16:44:32.000000000", "message": "Is this the host NUMA node 1?  If so, I don't think we'd want to expose host details in this way.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0fc45ce5eb5e55eb445a923a768ffa6509bf8399", "unresolved": false, "patch_set": 3, "id": "bf659307_7e2c2999", "line": 190, "range": {"start_line": 187, "start_character": 2, "end_line": 190, "end_character": 40}, "in_reply_to": "df7087c5_68dbe27c", "updated": "2018-03-23 17:00:31.000000000", "message": "if this a host numa node then we are revirting to the buggy behavior we had with numa nodes in icehouse.\n\nlets not allow even operators to specify host numa nodes directly.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "ab710323c6cd9361242769eaec83df59d5997692", "unresolved": false, "patch_set": 3, "id": "df7087c5_68dbe27c", "line": 190, "range": {"start_line": 187, "start_character": 2, "end_line": 190, "end_character": 40}, "in_reply_to": "df7087c5_d28ed377", "updated": "2018-03-19 22:08:41.000000000", "message": "Agree.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "6a887ebdc8ef2edc99f5bc47108dd455e137b74d", "unresolved": false, "patch_set": 3, "id": "df7087c5_92613bac", "line": 194, "range": {"start_line": 191, "start_character": 2, "end_line": 194, "end_character": 35}, "updated": "2018-03-14 16:44:32.000000000", "message": "What about the configurable PCI NUMA affinity stuff added in https://review.openstack.org/#/c/527472/ ?  If we support non-strict affinity for GPUs then doing strict affinity in placement might cause scheduling to fail when it should actually succeed.", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "184452f6c40b2794bfc20125fe7b7aabbb140b2e", "unresolved": false, "patch_set": 3, "id": "df7087c5_54fcd46e", "line": 264, "range": {"start_line": 264, "start_character": 42, "end_line": 264, "end_character": 66}, "updated": "2018-03-15 13:47:38.000000000", "message": "``update_provider_tree()``", "commit_id": "416731f5d080ec8e57a389c05ec003762a8dfe76"}, {"author": {"_account_id": 7730, "name": "Sahid Orentino Ferdjaoui", "email": "sahid.ferdjaoui@industrialdiscipline.com", "username": "sahid"}, "change_message_id": "754bf14dd7f054a2633f0658a15781d8118eb89e", "unresolved": false, "patch_set": 5, "id": "bf659307_525d4ae7", "line": 159, "range": {"start_line": 153, "start_character": 1, "end_line": 159, "end_character": 73}, "updated": "2018-03-27 12:51:28.000000000", "message": "That does not look right, hugepages is not something we could allocate dynamically so I would imagine if MEMORY_MB is small pages, we will need to have a MEMORY_MB_2MB, MEMORY_MB_1G etc... to request them like\n\n  resources:VCPU2&MEMORY_MB_1G=16\n  resources0:VCPU2&MEMORY_MB_1G=8,resources1:VCPU2&MEMORY_MB_1G=8\n\nI would use traits to mark the memory as shared, or bind them to a file...", "commit_id": "83cbc3a14ac624e963a761d393762c40222e3bd8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_64071e84", "line": 18, "range": {"start_line": 17, "start_character": 58, "end_line": 18, "end_character": 27}, "updated": "2018-03-29 21:04:56.000000000", "message": "I'm not sure this last part of the sentence is useful.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_62e8237b", "line": 18, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "i.e. end sentence at pci devices.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_44021a71", "line": 25, "range": {"start_line": 24, "start_character": 61, "end_line": 25, "end_character": 24}, "updated": "2018-03-29 21:04:56.000000000", "message": "I think you meant \"While we would like to eventually get rid of this filter,\"", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_e2a99323", "line": 25, "in_reply_to": "bf659307_44021a71", "updated": "2018-04-04 01:37:05.000000000", "message": "+1", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_84f6f262", "line": 26, "range": {"start_line": 25, "start_character": 26, "end_line": 26, "end_character": 70}, "updated": "2018-03-29 21:04:56.000000000", "message": "That's not really the problem. The problem is that all of the following things have been tightly coupled into the NUMATopologyFilter and related object models:\n\n* Constraints for pinning guest CPUs to host CPUs\n* Constraints for pinning emulator threads to host CPUs\n* Constraints for the number of memory pages of a particular size that are assigned to one or more of a guest's virtual NUMA node\n* Constraints regarding the virtual CPU topology (sockets, cores and hyperthreads) being \"fit\" on to a host CPU topology (regardless of whether the host system is NUMA or otherwise)\n* Constraints regarding whether or not a guest CPU can be pinned to a host hyperthread or whether it must be pinned to a host physical core\n\nIn addition to the above, there is the problem that the NUMATopology object couples both the *inventory* of the host along with the *usage* of CPU topologies/huge pages by one or more instances all in the same object.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_82b9b779", "line": 26, "in_reply_to": "bf659307_84f6f262", "updated": "2018-04-04 01:37:05.000000000", "message": "It also dose that coupleing via a giant json blob in the db which is less the ideal, not least of which because of upgrades and the requirements for online schma migration to transform the blob when new field are added to it across upgrades", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_24b5a67e", "line": 27, "range": {"start_line": 27, "start_character": 0, "end_line": 27, "end_character": 69}, "updated": "2018-03-29 21:04:56.000000000", "message": "I would write this as \"We can model the CPU topology of the host as a set of resource providers arranged in a tree.\"\n\nIt's not about NUMA, really. This is about modeling in placement the inventories of dedicated and shared CPU (and later, inventories of huge page resources) in a way that matches the model of the host's CPU layout.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_22278bcc", "line": 27, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "Right so on a non numa system with multiple sockets you still might want to have a tree structure to model the relationship and hierarchy of the physical platform but since the spec is focusing on modelling numa i dont think we need to stress the even more general case beyond numa for why we would want a tree. I do like your rephrasing however", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_8452723a", "line": 30, "range": {"start_line": 29, "start_character": 0, "end_line": 30, "end_character": 73}, "updated": "2018-03-29 21:04:56.000000000", "message": "I'm not sure what you're going for with this sentence. Perhaps you mean this?\n\nIf an instance is allocated dedicated CPU or memory page resources from a resource provider representing a specific NUMA node on a compute host, then we will be able to accurately query usage information for dedicated CPUs and memory pages resources in the same fashion we do for other resource classes like disk and RAM.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_fd43743d", "line": 30, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "I think what he was highlighting was that we will need a way to corralate  a specific host numa node to the resource provider in placement the tracks its resource inventories. So when the virt driver it is doing the assignment of hugepage to a vm it can use the allocation candidate to select which host numa node to allocate the hugepages from based on the RP it was allocated from.  For Vf or cpus where the virt driver still needs to track individual assignments it will still have some additional work to do as that info will not be provided on the allocation candidate but even in this case the selection of the rp will reduce the set of cpus that the virt driver has to look at as the rp will have determined which host numa node the assignment will come from", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_21a27f4c", "line": 33, "range": {"start_line": 33, "start_character": 43, "end_line": 33, "end_character": 71}, "updated": "2018-03-29 15:33:20.000000000", "message": "and are not covered by this spec.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_a1a68f52", "line": 41, "range": {"start_line": 41, "start_character": 41, "end_line": 41, "end_character": 61}, "updated": "2018-03-29 15:33:20.000000000", "message": "a two-socket, four-core host?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_21491f8a", "line": 55, "range": {"start_line": 55, "start_character": 13, "end_line": 55, "end_character": 64}, "updated": "2018-03-29 15:33:20.000000000", "message": "while CPU3 and CPU4 would share their own memory.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_1dd2e828", "line": 55, "in_reply_to": "bf659307_21491f8a", "updated": "2018-04-04 01:37:05.000000000", "message": "+1", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_a1544f22", "line": 58, "range": {"start_line": 58, "start_character": 4, "end_line": 58, "end_character": 8}, "updated": "2018-03-29 15:33:20.000000000", "message": "vCPU?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_613877ee", "line": 58, "range": {"start_line": 58, "start_character": 42, "end_line": 58, "end_character": 47}, "updated": "2018-03-29 15:33:20.000000000", "message": "vCPUs", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_2411265e", "line": 59, "range": {"start_line": 57, "start_character": 53, "end_line": 59, "end_character": 4}, "updated": "2018-03-29 21:04:56.000000000", "message": "\"that require dedicated CPU resources would like to ensure that those CPU resources are provided by the same NUMA node\"?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_1da508a2", "line": 74, "updated": "2018-04-04 01:37:05.000000000", "message": "The hw:numa_* extra specs only refer to the virtual numa topology of the guest. Its important to remember that intenioll dose not map 1:1 to the host numa topology in all case today. Modelling numa in placement is specifically modelling host numa topology not guest numa topology so we will need to keep the numa_* that usecase.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d84bc35430517f4e0c69b73d44bb5bcac0603872", "unresolved": false, "patch_set": 6, "id": "bf659307_470bfc22", "line": 76, "range": {"start_line": 76, "start_character": 35, "end_line": 76, "end_character": 74}, "updated": "2018-03-29 21:04:56.000000000", "message": "AFAIK, the vGPUs and vCPUs are entirely unrelated. I believe what you are referring to here is that you want to ensure that the *physical GPU* from which the guest's VGPU resources are being supplied is associated to the same NUMA node that is supplying the *dedicated CPUs* for a guest?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_3dc9ec57", "line": 76, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "Well we have numa affinity for shared cpus also. Simple example is hugepages, if you request hugepages and no other extra speca we invest a request for hw:numa_nodes=1 and constrain the guest to float over the host numa node the hugepages where allocated from. So basically we do partial pinning to a numa node rather the specific 1:1 core pinning.  This usecase is basically the same as the pci numa affinity policy but for vgpus", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_7debe476", "line": 93, "updated": "2018-04-04 01:37:05.000000000", "message": "This is inaccurate but i dont really want to rathole on why beyond to say this assumes only onw numa node per cpu socket. This has not been the case on intel since haswell (cluster on die) or amd since zen(one numa node per ccx i belive). In the intel case the xpus bave equal latency to the pci bus to which the pgpu is attch form both numa node within the socket. A dma or otherwise mmap region associated with the pgpu will however have numa affinity to one of the two memory controllers within the socket. This will produce numa effects as a result of the adress space selected for the dma mapping but it is not related to the bus topology.  As such i would remove references to buses and refer only to memory controllers or numa node/cells", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "93bfbc787ef432454a428520093785aefb79b025", "unresolved": false, "patch_set": 6, "id": "bf659307_8d8c0a80", "line": 93, "in_reply_to": "bf659307_7debe476", "updated": "2018-04-10 09:54:28.000000000", "message": "Very interesting explanation. Thanks for helping me understanding how NUMA affinity works for PCI devices.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_5d9dc007", "line": 122, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "Can we use the name of the rp to corralate the placement rp to a physical host numa node by defining a name in this spec or at least suggest the virt drive should use such a mechanism. Failing that we will need a custom_ trait to allow the virt driver to map the rp back to the host nodes when consuming allocation candidates.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "fdbb530b1f35d535f5eb24dc4feefb69c1d5b062", "unresolved": false, "patch_set": 6, "id": "bf659307_145ab381", "line": 122, "in_reply_to": "bf659307_5d9dc007", "updated": "2018-04-04 13:33:11.000000000", "message": "That's completely up to the virt driver.  It can use a name and/or UUID that corresponds to its internal identifier; it can maintain a lookup table; whatever.  But nothing outside of the virt driver needs to be privy to that mechanism. And we certainly don't want to dictate it from this level, because different platforms may require wildly different methods.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_dda9d023", "line": 129, "updated": "2018-04-04 01:37:05.000000000", "message": "Similarly for pf_rp can we suggest a nameing conversion that may be hypervisors specific to corralate a specific pf on the host to this placement resource provider.  For example in the libvirt driver this could be a slugified pci addres and in the hyperv case it could be the uuid they use internally for pfs.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "fdbb530b1f35d535f5eb24dc4feefb69c1d5b062", "unresolved": false, "patch_set": 6, "id": "bf659307_54c90b23", "line": 129, "in_reply_to": "bf659307_dda9d023", "updated": "2018-04-04 13:33:11.000000000", "message": "Those are good suggestions and examples to reinforce the above.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_1d62e80a", "line": 154, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "Well in the linux and widows kernel hugepages are always allocated and track per numa node so i cant think of a better example of something that implicitly has numa affinity.\nAt the hardware levek the memory mapping unit and tlb set up specific entries for each hugepage which map the virtual adress of that vital memory page to a specific physical page or set of contiguous pages owned by a single memory controller.  If you want to delegate numa manage of memory pages to a different spec for scope reasons that is fine but this statement is incorrect and should be removed.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "4706c31e14ea699ab8eaf48faed3321cf48ab4e1", "unresolved": false, "patch_set": 6, "id": "bf659307_3c466423", "line": 157, "range": {"start_line": 154, "start_character": 10, "end_line": 157, "end_character": 27}, "updated": "2018-03-27 17:11:28.000000000", "message": "In the current implementation merely asking for hugepages will result in the guest being given an explicit NUMA topology and being constrained to a single host NUMA node. (With the libvirt driver, at least.)  As such, it is actually closely tied to how resources must be tracked in placement.\n\nAlso, because host memory is effectively split up into separate pools for each pagesize, we can't just track MEMORY_MB in placement, we need to track it for each page size.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_bd517c38", "line": 157, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "That is for the libvirt driver only. This is not guaranteed for example with the hyperv driver i.e the fact that hw:mem_page_size=large implies hw:numa_nodes=1 is not guaranteed by the api it is just an implementation detail of the libvirt driver.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "4706c31e14ea699ab8eaf48faed3321cf48ab4e1", "unresolved": false, "patch_set": 6, "id": "bf659307_993782b1", "line": 163, "range": {"start_line": 157, "start_character": 29, "end_line": 163, "end_character": 15}, "updated": "2018-03-27 17:11:28.000000000", "message": "Alternately, we could have PAGE_MEMORY_4KB, PAGE_MEMORY_2MB, PAGE_MEMORY_1GB, etc. and then track resources in units of pages with a step size of 1.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_5855cef8", "line": 163, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "Amd on x86_64 support 512mb also i think\nI think we will have a resource class explosion if we go that route. The outer advantage of the trait approach is we can support hw:mem_page_size=large which is really the only value you should set without a serious amount of benchmarking. Any approach that breaks hw:mem_page_size=large a non starter for me and i dont see how we csn do that with a page based approach when any page size > 4k is valid", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9e646d246b4b5b47f2eacfa3a2039b982ccfadc8", "unresolved": false, "patch_set": 6, "id": "bf659307_be688187", "line": 163, "in_reply_to": "bf659307_5855cef8", "updated": "2018-04-04 16:55:01.000000000", "message": "I don't recall support for 512MB, but I could be wrong. :)\n\nYou're correct that support for pagesizes of \"large\" and \"any\" gets a bit messy, but these are already problematic for live migration since if you happen to end up using 1GB pages it's quite likely you'll be restricted as to where you can live-migrate to.  (Though this is cloud-provider-dependent, of course.)\n\nI think you could have the scheduler track what page sizes are supported by the various compute nodes and issue multiple requests for the different pages sizes.  In practice I would expect maybe 3-4 possible sizes in a given cloud.\n\nI'm not a placement expert though, so I'll leave it up to them to decide what makes the most sense.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "27b2d7b3a354b3b16c2b913739d7be504f4aeeb1", "unresolved": false, "patch_set": 6, "id": "bf659307_a60f7d35", "line": 163, "range": {"start_line": 157, "start_character": 29, "end_line": 163, "end_character": 15}, "in_reply_to": "bf659307_647de57d", "updated": "2018-03-29 19:58:50.000000000", "message": "Yes, if you're tracking it as pages, it doesn't make sense to track it as MB as well.\n\nI think POWER can do page sizes of 4KB, 64KB, 16MB, and 16GB.  Are there any other architectures we need to consider?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_647de57d", "line": 163, "range": {"start_line": 157, "start_character": 29, "end_line": 163, "end_character": 15}, "in_reply_to": "bf659307_993782b1", "updated": "2018-03-29 15:33:20.000000000", "message": "If we do this, I'd like to get rid of the MEMORY_MB attribute on the NUMA RP entirely. There's simply no reason to keep it as it leads to a sort of split brain (PAGE_MEMORY_4K + PAGE_MEMORY_2MB + PAGE_MEMORY_1GB == MEMORY_MB).\n\nI guess we also need to account for other page sizes. It's only x86 that uses those particular sizes, right?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "57f0d1d0c644271d80eb3583ffc9dc0292dc120e", "unresolved": false, "patch_set": 6, "id": "bf659307_1714809f", "line": 163, "in_reply_to": "bf659307_be688187", "updated": "2018-04-10 14:36:24.000000000", "message": "Given huge pages are not really tied to my own spec, will remove the whole paragraph so we could discuss on the page size design in a separate spec.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "fdbb530b1f35d535f5eb24dc4feefb69c1d5b062", "unresolved": false, "patch_set": 6, "id": "bf659307_74c3efed", "line": 175, "range": {"start_line": 175, "start_character": 4, "end_line": 175, "end_character": 29}, "updated": "2018-04-04 13:33:11.000000000", "message": "I like this idea.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "fdbb530b1f35d535f5eb24dc4feefb69c1d5b062", "unresolved": false, "patch_set": 6, "id": "bf659307_94056316", "line": 177, "range": {"start_line": 177, "start_character": 2, "end_line": 177, "end_character": 48}, "updated": "2018-04-04 13:33:11.000000000", "message": "I noticed that your formula dictates a (more or less) \"even\" spread.  Is that intentional/necessary?  Because a more flexible/powerful method would be to translate to:\n\n resources1=VCPU:1&resources2=VCPU:1&...&resources<vCPU_count>=VCPU:1\n\nThis would allow the procs to land wherever there's room.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "fd78700705e602ea40f88e0247a7d09295be8697", "unresolved": false, "patch_set": 6, "id": "bf659307_619fac65", "line": 177, "range": {"start_line": 177, "start_character": 2, "end_line": 177, "end_character": 48}, "in_reply_to": "bf659307_94056316", "updated": "2018-04-04 17:16:17.000000000", "message": "The existing behaviour is that if you don't specify explicit information about how what CPU/RAM is on what virtual NUMA node then they must be evenly divisible across all of the virtual NUMA nodes.  See hardware._get_numa_topology_auto()", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "6560946dd1ac64a75a8d8cdb2d6f0cbbba4c3c90", "unresolved": false, "patch_set": 6, "id": "bf659307_a580e9c0", "line": 193, "range": {"start_line": 191, "start_character": 0, "end_line": 193, "end_character": 61}, "updated": "2018-03-29 05:29:35.000000000", "message": "For your information, this indivisible case is *currently* not supported and results in an error[1]. Let me make sure you mean you would like to change it to support this case. If this is not what you intend here, I would use a divisible example here.\n\n[1] https://github.com/openstack/nova/blob/42c369223d61d652ae7fb277b799b90a69302651/nova/virt/hardware.py#L1186-L1188", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_b83c2a93", "line": 193, "in_reply_to": "bf659307_86d599e7", "updated": "2018-04-04 01:37:05.000000000", "message": "Why would we not support tjis this used to work and should work. We hav3 the numa1.Cpu= syntax to allow this to be done manually and i am pretty sure this used to work in old openstack releases", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_04a3c901", "line": 193, "range": {"start_line": 191, "start_character": 0, "end_line": 193, "end_character": 61}, "in_reply_to": "bf659307_a580e9c0", "updated": "2018-03-29 15:33:20.000000000", "message": "+1. I don't think we need to support this either", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "73746da042011877ce1940482c1cfa5448ea4376", "unresolved": false, "patch_set": 6, "id": "bf659307_86d599e7", "line": 193, "range": {"start_line": 191, "start_character": 0, "end_line": 193, "end_character": 61}, "in_reply_to": "bf659307_a580e9c0", "updated": "2018-03-29 19:54:04.000000000", "message": "Agreed, for the automatic division case the number of guest cpus needs to be a multiple of the number of guest NUMA nodes.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9e646d246b4b5b47f2eacfa3a2039b982ccfadc8", "unresolved": false, "patch_set": 6, "id": "bf659307_3ebb1173", "line": 193, "in_reply_to": "bf659307_b83c2a93", "updated": "2018-04-04 16:55:01.000000000", "message": "For the automatic division case if the total amount of resources is not a multiple of the number of NUMA nodes then I think it's fair to make the user be explicit about how they want the resources split up.  It's worked this way as far back as I can remember.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "6560946dd1ac64a75a8d8cdb2d6f0cbbba4c3c90", "unresolved": false, "patch_set": 6, "id": "bf659307_e5f1016d", "line": 203, "range": {"start_line": 200, "start_character": 0, "end_line": 203, "end_character": 41}, "updated": "2018-03-29 05:29:35.000000000", "message": "\"hw:numa_cpus.N\" is used to specify the exact number of cpus you want to allocate to that numa node, not amount [2].\nIf we want to change it, we should discuss carefully how we divide the cpus to numa nodes, if that design is okay for every kind of VMs, and upgrade impacts.\n\n[2] https://docs.openstack.org/nova/latest/admin/cpu-topologies.html#customizing-instance-numa-placement-policies", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "73746da042011877ce1940482c1cfa5448ea4376", "unresolved": false, "patch_set": 6, "id": "bf659307_4680e1c0", "line": 203, "range": {"start_line": 200, "start_character": 0, "end_line": 203, "end_character": 41}, "in_reply_to": "bf659307_848fd973", "updated": "2018-03-29 19:54:04.000000000", "message": "I think he's saying that \"hw:numa_cpus.1=2,3,4,5\" is a list of specific CPUs, not an amount.\n\nIt should still be simple to convert that into \"resources1:VCPU=4\" by checking the length of the list.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_848fd973", "line": 203, "range": {"start_line": 200, "start_character": 0, "end_line": 203, "end_character": 41}, "in_reply_to": "bf659307_e5f1016d", "updated": "2018-03-29 15:33:20.000000000", "message": "> \"hw:numa_cpus.N\" is used to specify the exact number of cpus you\n > want to allocate to that numa node, not amount [2].\n > If we want to change it, we should discuss carefully how we divide\n > the cpus to numa nodes, if that design is okay for every kind of\n > VMs, and upgrade impacts.\n > \n > [2] https://docs.openstack.org/nova/latest/admin/cpu-topologies.html#customizing-instance-numa-placement-policies\n\nCould you expand on this. It sounds like the same thing to me", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_446221b0", "line": 231, "range": {"start_line": 231, "start_character": 57, "end_line": 231, "end_character": 67}, "updated": "2018-03-29 15:33:20.000000000", "message": "specifically", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_6435e58e", "line": 242, "range": {"start_line": 242, "start_character": 51, "end_line": 242, "end_character": 59}, "updated": "2018-03-29 15:33:20.000000000", "message": "split", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_c4239155", "line": 244, "range": {"start_line": 244, "start_character": 4, "end_line": 244, "end_character": 34}, "updated": "2018-03-29 15:33:20.000000000", "message": "existing behavior.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8b80c67c1ad11c87bb45a470535c286df9ca9ad4", "unresolved": false, "patch_set": 6, "id": "bf659307_24e04dfa", "line": 249, "range": {"start_line": 245, "start_character": 0, "end_line": 249, "end_character": 36}, "updated": "2018-03-29 15:33:20.000000000", "message": "Oh, hold on. So a host would be either all NUMA or non-NUMA? That's not how I'd pictured this. To be honest, I thought we were going to be left with a situation where the NUMA representation in placement was a second representation, complementing the existing compute node RP.\n\nI assume this won't support booting instances with different CPU policies as tetsuro's spec suggested?", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "73746da042011877ce1940482c1cfa5448ea4376", "unresolved": false, "patch_set": 6, "id": "bf659307_26c04de1", "line": 249, "range": {"start_line": 245, "start_character": 0, "end_line": 249, "end_character": 36}, "in_reply_to": "bf659307_24e04dfa", "updated": "2018-03-29 19:54:04.000000000", "message": "The problem arises where we can have resources consumed at the compute node level (VCPU or 4KB pages, primarily) where the instance is free to \"float\" over all host NUMA nodes.  In this scenario we have no way to know how much of each resource was consumed on each host NUMA node, which makes it impossible to properly track per-NUMA resource usage in placement.\n\nThe \"proper\" solution to this is to associate each guest NUMA node to a single host NUMA node and not let it \"float\".\n\nThe way the code is now, this would mean that an instance asking for 4000 4KB pages would not be able to land on a compute node that has 2000 4KB pages on each of two host NUMA nodes.\n\nSean K Mooney proposed that in such a case we could give the guest two virtual NUMA nodes in order to satisfy the memory allocation.  They haven't asked for any particular NUMA topology, so it's arguably not \"wrong\" to give them more than one.  This would solve the problem, but I think it would require us to ask placement for multiple permutations--4000 pages on one NUMA node, 3000 on one and 1000 on the other, or 2000 on both.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_58db8e4d", "line": 249, "in_reply_to": "bf659307_26c04de1", "updated": "2018-04-04 01:37:05.000000000", "message": "The cpu policies case should work but the memory case Chris raises above is the one we could not resolve any other way.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_b8cc2a35", "line": 253, "updated": "2018-04-04 01:37:05.000000000", "message": "This should be in the placement, default or virtdriver section as cpus and hugepage are not really devices in the pass through sense", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "57f0d1d0c644271d80eb3583ffc9dc0292dc120e", "unresolved": false, "patch_set": 6, "id": "bf659307_b78fd42c", "line": 253, "in_reply_to": "bf659307_b8cc2a35", "updated": "2018-04-10 14:36:24.000000000", "message": "Let's not opiniate about it now, it's an implementation detail IMHO", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_98be06d3", "line": 259, "updated": "2018-04-04 01:37:05.000000000", "message": "I assume that this will default to all numa relevant classes and the operator will have to set it to an empthy list if the want no numa topology reported. We should default to reporting numa for the host to placement.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "57f0d1d0c644271d80eb3583ffc9dc0292dc120e", "unresolved": false, "patch_set": 6, "id": "bf659307_977df01d", "line": 259, "in_reply_to": "bf659307_98be06d3", "updated": "2018-04-10 14:36:24.000000000", "message": "No, will explain why in my next revision", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, "change_message_id": "6560946dd1ac64a75a8d8cdb2d6f0cbbba4c3c90", "unresolved": false, "patch_set": 6, "id": "bf659307_a320e149", "line": 289, "updated": "2018-03-29 05:29:35.000000000", "message": "Yup, leaving the configurations to operators may be controversial, but to me it sounds reasonable. I don't think there are many operators who want to be aware of NUMA topology. Those NFV operators who want stricter scheduling for higher performance can just go through the procedure to prepare the proper configuration.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_98084692", "line": 289, "in_reply_to": "bf659307_a320e149", "updated": "2018-04-04 01:37:05.000000000", "message": "Truing it off by default will mean placement will not be used for numa prefiltering before hitting the numatopology filter which means they will not see the performance gains of this work. Do we really want an opt in model hear and not opt out. Also we have to be careful that this is not a config option that changes api beviour. If its opt-in we cant automatically split up resource request based on hw:numa_* option or all existing uses of those flavours extra specs will break on upgrade unless we require a config change on upgrade which break our upgrade policy.", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "452750add70a4a093c92a17975016e4bdb96f786", "unresolved": false, "patch_set": 6, "id": "bf659307_58814ec2", "line": 341, "in_reply_to": "", "updated": "2018-04-04 01:37:05.000000000", "message": "If we start auto generating the resource groups from existing flavours via hw:numa_* extra specs  this will break on upgrade unlees we a.) use an opt out for resource class for numa reporting b.) add all existing numa related resources classes to the default for numa_resource_classes. e.g.\nnuma_resource_classes=vCPU, pCPU, MEMORY_MB, vGPU, VF, PF", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "57f0d1d0c644271d80eb3583ffc9dc0292dc120e", "unresolved": false, "patch_set": 6, "id": "bf659307_d7ffe864", "line": 341, "in_reply_to": "bf659307_58814ec2", "updated": "2018-04-10 14:36:24.000000000", "message": "see my next revision", "commit_id": "7d2a8902eed926f448ad2b9b07d8984dcf8c3d5d"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_dd2aa92a", "line": 26, "range": {"start_line": 25, "start_character": 44, "end_line": 26, "end_character": 75}, "updated": "2018-04-10 15:15:59.000000000", "message": "In the first sentence of this paragraph, you wrote: \"checks a lot of NUMA related resources like emulator threads policies, CPU pinned instances or memory page sizes\".\n\nBut here, you say \"not really related to NUMA topologies (like for example CPU pinning, emulator threads or memory pages)\" :)\n\nI think it would be less confusing to just begin the paragraph with \"The NUMATopologyFilter checks a number of resources, including emulator thread policies, CPU pinning and memory pages.\"", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_39893dc9", "line": 26, "range": {"start_line": 25, "start_character": 44, "end_line": 26, "end_character": 75}, "in_reply_to": "bf659307_dd2aa92a", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_5dc4595f", "line": 31, "range": {"start_line": 31, "start_character": 57, "end_line": 31, "end_character": 67}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/allocating/allocate resources to/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_99a08944", "line": 31, "range": {"start_line": 31, "start_character": 57, "end_line": 31, "end_character": 67}, "in_reply_to": "bf659307_5dc4595f", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_7d94bd44", "line": 32, "range": {"start_line": 32, "start_character": 9, "end_line": 32, "end_character": 24}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/to a NUMA node if possible/from a resource provider representing a NUMA node/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_d99a8112", "line": 32, "range": {"start_line": 32, "start_character": 9, "end_line": 32, "end_character": 24}, "in_reply_to": "bf659307_7d94bd44", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_b7b9027a", "line": 41, "range": {"start_line": 41, "start_character": 68, "end_line": 41, "end_character": 72}, "updated": "2018-04-11 04:00:58.000000000", "message": "this", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_598671bb", "line": 41, "range": {"start_line": 41, "start_character": 68, "end_line": 41, "end_character": 72}, "in_reply_to": "bf659307_b7b9027a", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_fd61ad3a", "line": 46, "range": {"start_line": 46, "start_character": 61, "end_line": 46, "end_character": 67}, "updated": "2018-04-10 15:15:59.000000000", "message": "it's not a 2-core instance. It's an instance with 2 VCPU.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_f98e65cf", "line": 46, "range": {"start_line": 46, "start_character": 61, "end_line": 46, "end_character": 67}, "in_reply_to": "bf659307_fd61ad3a", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_9dcbd148", "line": 65, "range": {"start_line": 65, "start_character": 45, "end_line": 65, "end_character": 58}, "updated": "2018-04-10 15:15:59.000000000", "message": "these applications don't necessarily require intensive CPU resources. They require low-latency memory access, which is why being on the same NUMA node as their vCPU threads are running on is important.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9935b7ced5b3ce273ab14da6672aff153032c669", "unresolved": false, "patch_set": 7, "id": "bf659307_a3679651", "line": 65, "range": {"start_line": 65, "start_character": 45, "end_line": 65, "end_character": 58}, "in_reply_to": "bf659307_9dcbd148", "updated": "2018-04-10 16:13:30.000000000", "message": "Specifically, low latency memory access from multiple vCPUs within the same instance.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_fc55f31e", "line": 65, "range": {"start_line": 65, "start_character": 45, "end_line": 65, "end_character": 58}, "in_reply_to": "bf659307_a3679651", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_bd0d7591", "line": 70, "range": {"start_line": 69, "start_character": 16, "end_line": 70, "end_character": 39}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/you can provide a flavor for asking that by using an extra spec like/you can use an extra spec to indicate NUMA topology/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_3c604b01", "line": 70, "range": {"start_line": 69, "start_character": 16, "end_line": 70, "end_character": 39}, "in_reply_to": "bf659307_bd0d7591", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_1d658145", "line": 82, "range": {"start_line": 81, "start_character": 0, "end_line": 82, "end_character": 72}, "updated": "2018-04-10 15:15:59.000000000", "message": "I would remove this sentence.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_9c471778", "line": 82, "range": {"start_line": 81, "start_character": 0, "end_line": 82, "end_character": 72}, "in_reply_to": "bf659307_1d658145", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_9d50b160", "line": 84, "range": {"start_line": 84, "start_character": 32, "end_line": 84, "end_character": 52}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/a vGPU NUMA affinity/a vGPU that uses the same memory controller as the NUMA node running the guest's vCPU threads/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "bf659307_5c22dfba", "line": 84, "range": {"start_line": 84, "start_character": 32, "end_line": 84, "end_character": 52}, "in_reply_to": "bf659307_2365c645", "updated": "2018-04-16 13:31:06.000000000", "message": "Not really, since GPUs have their own memory controllers. It's more about max throughput for CPU/GPU intercommunication by preventing unnecessary QPI hops.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "9935b7ced5b3ce273ab14da6672aff153032c669", "unresolved": false, "patch_set": 7, "id": "bf659307_2365c645", "line": 84, "range": {"start_line": 84, "start_character": 32, "end_line": 84, "end_character": 52}, "in_reply_to": "bf659307_9d50b160", "updated": "2018-04-10 16:13:30.000000000", "message": "++", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_1dca6119", "line": 88, "range": {"start_line": 88, "start_character": 0, "end_line": 88, "end_character": 14}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/is having some/has some/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_7418c180", "line": 88, "range": {"start_line": 88, "start_character": 0, "end_line": 88, "end_character": 14}, "in_reply_to": "bf659307_1dca6119", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_9d5af14d", "line": 108, "range": {"start_line": 105, "start_character": 0, "end_line": 108, "end_character": 19}, "updated": "2018-04-10 15:15:59.000000000", "message": "I actually don't think the vGPU affinity case is all that important. The GPU itself has processing power and memory that libraries like OpenACC will utilize. It's the results of those CUDA functions that may need to be passed to a CPU's L2 or L3 caches.\n\nI think the SR-IOV PCI device requiring NUMA affinity is a more solid use case, since the amount of memory the NIC has is tiny compared to a GPU.\n\nBut, whatever, I can go with this...", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_340a4926", "line": 108, "range": {"start_line": 105, "start_character": 0, "end_line": 108, "end_character": 19}, "in_reply_to": "bf659307_2f958b33", "updated": "2018-04-16 13:31:06.000000000", "message": "Just changed that to be clearer. HTH.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "d46d1913f7e9e70dc6a411041f29e8057103d208", "unresolved": false, "patch_set": 7, "id": "bf659307_2f958b33", "line": 108, "range": {"start_line": 105, "start_character": 0, "end_line": 108, "end_character": 19}, "in_reply_to": "bf659307_9d5af14d", "updated": "2018-04-11 15:15:09.000000000", "message": "I have many internal customers that are actually very interested in having NUMA affinity for having the GPU memory close as possible to the NUMA memory controller used by the virtual CPU, just because they'd like to run OpenACC.\n\nSee https://devblogs.nvidia.com/performance-portability-gpus-cpus-openacc/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_7d24bdc6", "line": 119, "range": {"start_line": 119, "start_character": 30, "end_line": 119, "end_character": 54}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/resource providers tree/provider tree/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_f403710e", "line": 119, "range": {"start_line": 119, "start_character": 30, "end_line": 119, "end_character": 54}, "in_reply_to": "bf659307_7d24bdc6", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_e8248db1", "line": 151, "range": {"start_line": 151, "start_character": 65, "end_line": 151, "end_character": 75}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/CPU pinning/dedicated CPU resources/. Pinning refers to assignment, which placement does not do. Dedicated CPU resources refer to the simple integer amount of host processors to use for dedicated guest CPU resources.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_af03640d", "line": 151, "range": {"start_line": 151, "start_character": 65, "end_line": 151, "end_character": 75}, "in_reply_to": "bf659307_e8248db1", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_a83bf5c5", "line": 156, "range": {"start_line": 155, "start_character": 56, "end_line": 156, "end_character": 73}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/then stop to provide the existing resources that NUMA nodes have, but would still be providing/would only provide/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_4f088827", "line": 156, "range": {"start_line": 155, "start_character": 56, "end_line": 156, "end_character": 73}, "in_reply_to": "bf659307_a83bf5c5", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_486339dd", "line": 159, "range": {"start_line": 159, "start_character": 61, "end_line": 159, "end_character": 73}, "updated": "2018-04-10 15:15:59.000000000", "message": "s/nested child/child/", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_6f0d4c36", "line": 159, "range": {"start_line": 159, "start_character": 61, "end_line": 159, "end_character": 73}, "in_reply_to": "bf659307_486339dd", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_770b6a29", "line": 162, "range": {"start_line": 162, "start_character": 14, "end_line": 162, "end_character": 24}, "updated": "2018-04-11 04:00:58.000000000", "message": "have", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "097d26867a1256b52707df1247ab2c591aeefef6", "unresolved": false, "patch_set": 7, "id": "9f6a8fd7_0f129059", "line": 162, "range": {"start_line": 162, "start_character": 14, "end_line": 162, "end_character": 24}, "in_reply_to": "bf659307_770b6a29", "updated": "2018-04-16 13:31:06.000000000", "message": "Done", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "94c5880954d454f7adf56795858a8dfc60765eb9", "unresolved": false, "patch_set": 7, "id": "bf659307_a8a9b5dd", "line": 185, "updated": "2018-04-10 15:15:59.000000000", "message": "As noted by efried, the above is not actually how the granular request groups works. Granular request groups do not guarantee that separate resource providers fulfill each different request group.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_823efeb5", "line": 185, "in_reply_to": "bf659307_a8a9b5dd", "updated": "2018-04-11 04:00:58.000000000", "message": "Correct. The above is a useful way to maximize my chances that my instance will land *somewhere* when I don't care about NUMA affinity.  I can end up with any number of my VCPUs provided by any number of resource providers in any combination.\n\n...which I would have thought is a more common use case than deliberate explicit sharding.  Not so?\n\n...but this example doesn't represent what we should/would do with hw:numa_nodes=N because N doesn't figure into the math at all.  The example represents what we should do when we get a flavor with just VCPU:<number> (which doesn't care about NUMA affinity) and we want to allow it to land on hosts with or without their RPs set up in NUMA nodes.\n\nFor deliberate sharding, we have two choices (not counting explicit traits like NUMA_NODE_0).\n\n- Placement returns all permutations; and then the NUMATopologyFilter winnows the results to just the ones that shard as desired;\n- Implement forced separation of providers in placement.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_42b9c612", "line": 190, "updated": "2018-04-11 04:00:58.000000000", "message": "These examples *do* gel with the formula on L185.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_a256a2cd", "line": 196, "range": {"start_line": 196, "start_character": 6, "end_line": 196, "end_character": 15}, "updated": "2018-04-11 04:00:58.000000000", "message": "Both for consistency and because you'll probably want other resources in your unnumbered request group, this should be resources1.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_82cd9e86", "line": 209, "range": {"start_line": 209, "start_character": 10, "end_line": 209, "end_character": 16}, "updated": "2018-04-11 04:00:58.000000000", "message": "numbered", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_627e4a1a", "line": 229, "range": {"start_line": 228, "start_character": 45, "end_line": 229, "end_character": 47}, "updated": "2018-04-11 04:00:58.000000000", "message": "Not sure what you mean by \"the current behavior\", but saying VGPU:N will land all N of the VGPUs on the same provider.  That's regardless of whether you use a numbered or unnumbered request group.\n\nWe never split up resources you request in a single <RC>:<AMOUNT> (because think it through for DISK_GB).", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_827b5e26", "line": 231, "range": {"start_line": 231, "start_character": 73, "end_line": 231, "end_character": 77}, "updated": "2018-04-11 04:00:58.000000000", "message": "as", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_62896ac8", "line": 232, "range": {"start_line": 232, "start_character": 46, "end_line": 232, "end_character": 74}, "updated": "2018-04-11 04:00:58.000000000", "message": "But this doesn't work, because the VGPUs and VCPUs are not in the same resource provider.\n\nIn order to satisfy this use case, we would need to invent something like the \"common subtree\" semantic we've been bandying about.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_62a3aa9f", "line": 234, "range": {"start_line": 234, "start_character": 29, "end_line": 234, "end_character": 36}, "updated": "2018-04-11 04:00:58.000000000", "message": "The only meaning of \"close\" here is \"on the same host\".  Saying \"close\" implies some kind of control over \"distance\", which we don't have.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_82c91e5a", "line": 236, "range": {"start_line": 236, "start_character": 2, "end_line": 236, "end_character": 40}, "updated": "2018-04-11 04:00:58.000000000", "message": "You actually might as well put them both in the unnumbered group for purposes of this example.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_82cefe57", "line": 237, "range": {"start_line": 237, "start_character": 2, "end_line": 237, "end_character": 33}, "updated": "2018-04-11 04:00:58.000000000", "message": "no reason for that.  You could have put them both in the unnumbered, or both in separate groups, to the same effect.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_c201566c", "line": 295, "range": {"start_line": 295, "start_character": 10, "end_line": 295, "end_character": 58}, "updated": "2018-04-11 04:00:58.000000000", "message": "WRONG", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_62faca75", "line": 298, "range": {"start_line": 298, "start_character": 43, "end_line": 298, "end_character": 75}, "updated": "2018-04-11 04:00:58.000000000", "message": "NO", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_823cbe2f", "line": 349, "range": {"start_line": 349, "start_character": 13, "end_line": 349, "end_character": 37}, "updated": "2018-04-11 04:00:58.000000000", "message": "okay, but this is pretty huge.  You've somewhat explained it above (about how virt drivers need to model their RPs), which is fine, but this section deserves something less dismissive than this.", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_421b06c9", "line": 374, "range": {"start_line": 373, "start_character": 0, "end_line": 374, "end_character": 19}, "updated": "2018-04-11 04:00:58.000000000", "message": "which at this point is the rocky nested-resource-providers-allocation-candidates blueprint.\n\nhttps://review.openstack.org/#/q/branch:master+topic:bp/nested-resource-providers-allocation-candidates", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4be5dab69ff69056474bcec79eec8aef45f39517", "unresolved": false, "patch_set": 7, "id": "bf659307_e279fafb", "line": 379, "range": {"start_line": 379, "start_character": 61, "end_line": 379, "end_character": 65}, "updated": "2018-04-11 04:00:58.000000000", "message": "this", "commit_id": "3ec980e9d2a14e3f41eb3bd150f94896418894fe"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_37b686fc", "line": 195, "updated": "2018-04-18 14:03:25.000000000", "message": "You can track these proposed deltas to the granular spec:\n\nhttps://review.openstack.org/#/c/561717/\n\nis as you've described above.  (At the moment, it's called `separate_providers` rather than `sharded`.)\n\nhttps://review.openstack.org/#/c/560974/\n\nhas \"sharded\" as the default behavior, and you have to do \"any-fit\" spreading by putting the spreadable resources into the un-numbered group and listing their resource classes in a `can_split` queryparam.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_17cb4272", "line": 239, "range": {"start_line": 236, "start_character": 0, "end_line": 239, "end_character": 18}, "updated": "2018-04-18 14:03:25.000000000", "message": "Again, this will get all the VGPUs from the same provider.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_d7c4ea61", "line": 248, "range": {"start_line": 248, "start_character": 5, "end_line": 248, "end_character": 12}, "updated": "2018-04-18 14:03:25.000000000", "message": "I assume this is referring to the \"common subtree\" or \"common ancestor\" idea we've discussed.\n\nWe can't use `in_tree` as we're already using that to indicate *entire* trees when requesting GET /resource_providers.\n\nAlso, it's a little more complicated than just listing the request groups that need to have a common ancestor.  We need some way to indicate *where* that common ancestor should be.  (Otherwise, everything in a tree has a common ancestor - the root RP.)  We wanted to do this via a common trait.  So for this example, we might mark each NUMA node with trait NUMA_ROOT, and then use a request like:\n\n  resources1=VCPU:M\n &resources2=VGPU:N\n &common_ancestor_by_trait=groups:resources1,resources2;trait:NUMA_ROOT\n\nThat syntax is ugly, and will surely be bikeshedded to death before it ever emerges, but it conveys the idea.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "4d4a4351693457ecf166af6fd3458e81a33bd590", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_5a7eba6b", "line": 252, "updated": "2018-04-18 17:08:54.000000000", "message": "Glad to see this section. As I was reading through above I was wondering \"what about a numa capable host that we don't want to use in a numa style?\"", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_57ae9a98", "line": 306, "range": {"start_line": 306, "start_character": 16, "end_line": 306, "end_character": 58}, "updated": "2018-04-18 14:03:25.000000000", "message": "Still WRONG", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_1790224e", "line": 309, "range": {"start_line": 309, "start_character": 38, "end_line": 309, "end_character": 75}, "updated": "2018-04-18 14:03:25.000000000", "message": "Still NO", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "4d4a4351693457ecf166af6fd3458e81a33bd590", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_7acffeaf", "line": 311, "updated": "2018-04-18 17:08:54.000000000", "message": "Yeah, have to agree with Eric here. The discovery and structure NUMA stuff is very much dependent on the virt driver. And even if that were not already the case, we would want to preserve the possibility to be able to have flexible handling in future virt drivers.\n\nSo even if there are some virt drivers that might like to share some code for cooking the numa provider tree, it should happen within the confines of the virt driver.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "1f662c4003dc9c736949b3a27ec70f80a0c7584d", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_179ee253", "line": 340, "updated": "2018-04-18 14:03:25.000000000", "message": "Yeah, these should be done via separate blueprints, upon which this one should depend.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "4d4a4351693457ecf166af6fd3458e81a33bd590", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_ba3a7695", "line": 340, "in_reply_to": "9f6a8fd7_179ee253", "updated": "2018-04-18 17:08:54.000000000", "message": "Agree, especially as there are multiple similar topics in flight.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "bbbb3063e351af31bf7bf53d4aa757b9c27b3025", "unresolved": false, "patch_set": 9, "id": "9f6a8fd7_8d624cad", "line": 397, "updated": "2018-04-25 14:24:38.000000000", "message": "Does this depend on https://review.openstack.org/#/c/559466/ or does that depend on this? Because that spec refers to things mentioned in this spec, like the config [devices]numa_resource_classes config option.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "ed0dd400db85b474b33b0bc2ef1fb3f7cd6c290a", "unresolved": false, "patch_set": 9, "id": "5f7c97a3_4e7f13ab", "line": 397, "in_reply_to": "9f6a8fd7_8d624cad", "updated": "2018-05-18 09:10:55.000000000", "message": "Shit, probably. I mean, this spec is dependent on the above. I haven't seen the spec you gave before today, so I'll try to understand the problem statement and if it needs the above for this spec.", "commit_id": "3f3c3cceae107ba70de79aa5e641eabcf6e7d93c"}], "specs/stein/approved/numa-topology-with-rps.rst": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2bd8f47c", "line": 18, "updated": "2018-09-19 10:18:12.000000000", "message": "Far as I can see, this is going to depend on the CPU resources spec [1]. Could you either (a) add a note here stating as much or (b) add a note anywhere you reference PCPUs stating that this won't be available until said spec is completed.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_9278a62c", "line": 18, "in_reply_to": "3f79a3b5_2bd8f47c", "updated": "2018-11-16 00:03:26.000000000", "message": "originally i think the cpu resouce spec had a dependcy on this one. but in any case yes there is a tight coupleing in both directions. so we have to choose one way to break the cycle.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "43d30827ffe8584d3a435023b5e84345d4e7bbfc", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2bbc9bb9", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "updated": "2018-09-17 20:43:22.000000000", "message": "So my first thought was (and you mention this a couple of paragraphs down) - can we get rid of it entirely?\n\nWe would still need it for CPU pinning, for instance, because we need to know which specific pCPUs are pinned, not just how many.\n\nBut then thinking about it some more, I don't think it matters. If an instance has 2 pinned vCPUs in NUMA node 0 (which has, say, 4 CPUs), and a new instance needs 2 pinned vCPUs, it can go in NUMA node 0, and placement doesn't need to know whether the first instance is using pCPUs 0 and 1, or 2 and 3, or 1 and 3, etc.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0ea3d19c", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "in_reply_to": "3f79a3b5_28980c67", "updated": "2018-10-01 21:37:23.000000000", "message": "> I think you could make it work with a model where only the\n > hypervisor cares about *which* resources are being used, and\n > placement (and the scheduler) only care about *can it fit*.\n\nPrecisely.\n\n > This would be different from what we have today, where the\n > NUMATopologyFilter calculates *which ones* as a way to figure out\n > *can it fit*.\n\nCorrect, and the NUMATopologyFilter promptly throws away the assignment decision it made, relying on the compute node's Claim object to re-perform that assignment decision and actually store the InstanceNUMATopology object that contains the pinning decision.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "66a66f0bbed67db369257311894d8d9de3456778", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_28980c67", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "in_reply_to": "3f79a3b5_2bbc9bb9", "updated": "2018-09-18 15:29:55.000000000", "message": "I think you could make it work with a model where only the hypervisor cares about *which* resources are being used, and placement (and the scheduler) only care about *can it fit*.\n\nThis would be different from what we have today, where the NUMATopologyFilter calculates *which ones* as a way to figure out *can it fit*.\n\nOn the other hand, I'm not sure how much we'd save, because we'd still want the scheduler to know about all the rules that might prevent an instance from fitting a guest NUMA node onto a given host NUMA node.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_703a57e6", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "in_reply_to": "3f79a3b5_2bbc9bb9", "updated": "2018-09-19 10:18:12.000000000", "message": "You've also got a lot more than just CPU pinning going on here. Anything NUMA'y is handled by this filter, including: NUMA-aware vSwitches, PCI (w/ NUMA policies), hugepages, handling of NUMA topology extra specs, handling of CPU topology extra specs...\n\nI don't think it's viable to move all of these to placement yet which means this has to be an iterative thing.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "78eac928b8553451a97f5cc9e2e037612511a70d", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_b28a821b", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "in_reply_to": "3f79a3b5_4ecb0949", "updated": "2018-10-23 01:24:50.000000000", "message": "this is on my review list for tomorrow/today but yes as jay said we will always have the numa filter.\n\nplacement will never do cpu assignment.\nas such the numa toplogy filter and the associated blob in the db will always be needed to keep track of which core on each numa node is free.\n\nthat since we dont need to do asignment of hugepages or mempages ingeneral and jsut need a tally of the avalaible mempages of each size per numa node that can be entirley offloaded to placemnet.\n\nit would be nice to merge the pci and numa topology fileter in to a singel filter at some point but ya this wont be going away.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_4ecb0949", "line": 24, "range": {"start_line": 24, "start_character": 11, "end_line": 24, "end_character": 33}, "in_reply_to": "3f79a3b5_703a57e6", "updated": "2018-10-01 21:37:23.000000000", "message": "> I don't think it's viable to move all of these to placement yet\n > which means this has to be an iterative thing.\n\nCorrect. We'd only be removing the small pieces from NUMATopologyFilter that could be satisfied by a placement query -- and in fact, the NUMATopologyFilter would be able to look at the provider_summaries and allocation_requests parts of the allocation candidates response to determine which NUMA node (resource provider) should be used to satisfy a request.\n\nIn other words, we'll need to live with the NUMATopologyFilter for the rest of eternity. We shouldn't even talk about deprecating it, since that ain't gonna happen.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_d0280b99", "line": 49, "range": {"start_line": 49, "start_character": 44, "end_line": 49, "end_character": 62}, "updated": "2018-09-19 10:18:12.000000000", "message": "nit: \"two socket, four core\"", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_b01d4f74", "line": 50, "range": {"start_line": 50, "start_character": 0, "end_line": 50, "end_character": 16}, "updated": "2018-09-19 10:18:12.000000000", "message": "Wonder if it's worth adding a glossary to this spec too, to ensure everyone's on the same page. Hyper Threading is just Intel's lingo for SMP, after all", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f411d171c272e83c92dc73270db2bbc6c29501fa", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_38953a3e", "line": 50, "range": {"start_line": 50, "start_character": 0, "end_line": 50, "end_character": 16}, "in_reply_to": "3f79a3b5_b01d4f74", "updated": "2018-10-24 15:15:47.000000000", "message": "Technically, that's not exactly the same, right?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_70133766", "line": 71, "range": {"start_line": 71, "start_character": 11, "end_line": 71, "end_character": 17}, "updated": "2018-09-19 10:18:12.000000000", "message": "desired", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_4874689c", "line": 83, "range": {"start_line": 83, "start_character": 40, "end_line": 83, "end_character": 46}, "updated": "2018-10-01 21:37:23.000000000", "message": "s/for a/for/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fc95d3adfb598e7e5019655f469093290611a2b1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_adbfd1fa", "line": 86, "range": {"start_line": 86, "start_character": 47, "end_line": 86, "end_character": 54}, "updated": "2018-09-11 20:37:03.000000000", "message": "nit:numa nodes", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0b117853", "line": 86, "range": {"start_line": 86, "start_character": 47, "end_line": 86, "end_character": 54}, "in_reply_to": "3f79a3b5_adbfd1fa", "updated": "2018-09-19 10:18:12.000000000", "message": "This is fine as is as the host presumably has two physical sockets. Might call out socket vs. node in the aforementioned glossary though.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6b56ec07", "line": 88, "range": {"start_line": 88, "start_character": 37, "end_line": 88, "end_character": 40}, "updated": "2018-09-19 10:18:12.000000000", "message": "First time I'd ever seen this initialism. Seems to be I/O Hub [1]. Maybe call that out here or in the glossary?\n\n[1] http://www.qdpma.com/SystemArchitecture/SystemArchitecture_QPI.html", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_cb44e04a", "line": 106, "range": {"start_line": 106, "start_character": 22, "end_line": 106, "end_character": 25}, "updated": "2018-09-19 10:18:12.000000000", "message": "the user would", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_eb419c37", "line": 107, "range": {"start_line": 107, "start_character": 11, "end_line": 107, "end_character": 13}, "updated": "2018-09-19 10:18:12.000000000", "message": "their", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_e8a9b4dc", "line": 108, "range": {"start_line": 108, "start_character": 12, "end_line": 108, "end_character": 34}, "updated": "2018-10-01 21:37:23.000000000", "message": "I would just remove this.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ab796493", "line": 108, "range": {"start_line": 108, "start_character": 36, "end_line": 108, "end_character": 39}, "updated": "2018-09-19 10:18:12.000000000", "message": "they'd", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_287d6c6c", "line": 120, "range": {"start_line": 120, "start_character": 0, "end_line": 120, "end_character": 43}, "updated": "2018-10-01 21:37:23.000000000", "message": "The resource tracker passes the provider tree (with the compute node provider as the root of the tree) to the virt driver, not the other way around. The virt driver may add child nodes to the provider tree passed to it by the resource tracker.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fc95d3adfb598e7e5019655f469093290611a2b1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_4dff1dab", "line": 121, "range": {"start_line": 121, "start_character": 48, "end_line": 121, "end_character": 54}, "updated": "2018-09-11 20:37:03.000000000", "message": "numa node", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_946b6eee", "line": 121, "range": {"start_line": 121, "start_character": 25, "end_line": 121, "end_character": 39}, "updated": "2018-10-01 21:37:23.000000000", "message": "s/create a tree/create child providers for each of 2 sockets representing separate NUMA nodes/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "c3b9e6f939d284daa8d222eae2b2a22adcd5f59d", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_c5068886", "line": 132, "range": {"start_line": 132, "start_character": 4, "end_line": 132, "end_character": 18}, "updated": "2018-09-12 20:14:03.000000000", "message": "we just said at the PTG there will be a naming convention.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "43d30827ffe8584d3a435023b5e84345d4e7bbfc", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0b4bdf86", "line": 134, "range": {"start_line": 134, "start_character": 61, "end_line": 134, "end_character": 70}, "updated": "2018-09-17 20:43:22.000000000", "message": "Are we doing shared and dedicated CPUs on the same host/RP?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0bc41891", "line": 134, "range": {"start_line": 134, "start_character": 61, "end_line": 134, "end_character": 70}, "in_reply_to": "3f79a3b5_0b4bdf86", "updated": "2018-09-19 10:18:12.000000000", "message": "Yeah, it needs that spec [1]. I've called out the need to highlight the need for this spec above.\n\n[1] https://review.openstack.org/#/c/555081/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "1d7222c0ed660d8c7569c12429c2c939b518f01b", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_53ed0923", "line": 134, "range": {"start_line": 134, "start_character": 61, "end_line": 134, "end_character": 70}, "in_reply_to": "3f79a3b5_0b4bdf86", "updated": "2018-09-17 22:53:58.000000000", "message": "Yes, that's covered in Jay's spec.  There's a gotcha specifically around 4KB pages and floating vs numa-affined instances as highlighted in my bug mentioned immediately below.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "19b572a55a63b35c2f200300f0e321d73eaf489e", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_7fb01141", "line": 135, "range": {"start_line": 135, "start_character": 0, "end_line": 135, "end_character": 59}, "updated": "2018-09-17 16:55:12.000000000", "message": "There is a problem with representing 4KB memory pages as purely per-NUMA-node resources.\n\nI've written it up at https://bugs.launchpad.net/nova/+bug/1792985\n\nI think this implies that either we go back to restricting such instances to a single NUMA node, or else we must not use \"strict\" affinity for the default page size.  (And maybe the default page size (4KB on x86) and VCPU resources should be modeled as compute node resources rather than NUMA node resources.)", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "1d7222c0ed660d8c7569c12429c2c939b518f01b", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_f3ed3524", "line": 135, "range": {"start_line": 135, "start_character": 0, "end_line": 135, "end_character": 59}, "in_reply_to": "3f79a3b5_7fb01141", "updated": "2018-09-17 22:53:58.000000000", "message": "Sean-k-mooney mentioned one other option, don't allow numa-floating and numa-pinned instances on the same numa node.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ef2e8f8b", "line": 135, "range": {"start_line": 135, "start_character": 0, "end_line": 135, "end_character": 59}, "in_reply_to": "3f79a3b5_abec0429", "updated": "2018-10-01 21:37:23.000000000", "message": "> That goes against what's been outlined in Jay's spec [1], which\n > would allow dedicated and shared CPU instances to like side by\n > side. Perhaps we could enable strict only if 'cpu_shared_set' is\n > not defined for the host, but that feels kind of magic.\n > \n > [1] https://review.openstack.org/#/c/555081/\n\nYeah, that's too magical IMHO.\n\nI'd prefer to just leave a warning in the docs as we have always done, possibly adding something to the effect of: \"If you do choose to mix non-NUMA-pinned instances with NUMA-pinned instances on the same compute host, you might want to consider increasing the CONF.host_reserved_memory_mb setting\" or something like that?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "eca9c899e1784e3d8f13b68a40a9d2620a91a18c", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_13a3e300", "line": 135, "range": {"start_line": 135, "start_character": 0, "end_line": 135, "end_character": 59}, "in_reply_to": "3f79a3b5_ef2e8f8b", "updated": "2018-10-02 15:08:27.000000000", "message": "To be totally reliable, you'd need to reserve an good bit of memory.\n\nThere are deterministic solutions, and they're not too complicated.  Some possible solutions are:\n1) Remove the \"strict\" memory tuning in the libvirt XML.  This would only affect 4K pages, the hugepages would still be strictly affined.  Memory would still largely be affined but if it can't be allocated on the local node we don't fail to boot the instance.\n2) Restrict floating instances to a single NUMA node rather than let them float across the whole host.\n3) Add a warning saying that all the host CPUs on a given host numa node should be in either \"cpu_shared_set\" or \"cpu_dedicated_set\", but not split across both.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_abec0429", "line": 135, "range": {"start_line": 135, "start_character": 0, "end_line": 135, "end_character": 59}, "in_reply_to": "3f79a3b5_f3ed3524", "updated": "2018-09-19 10:18:12.000000000", "message": "That goes against what's been outlined in Jay's spec [1], which would allow dedicated and shared CPU instances to like side by side. Perhaps we could enable strict only if 'cpu_shared_set' is not defined for the host, but that feels kind of magic.\n\n[1] https://review.openstack.org/#/c/555081/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "c3b9e6f939d284daa8d222eae2b2a22adcd5f59d", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_c51448a2", "line": 139, "range": {"start_line": 139, "start_character": 6, "end_line": 139, "end_character": 16}, "updated": "2018-09-12 20:14:03.000000000", "message": "ditto", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fc95d3adfb598e7e5019655f469093290611a2b1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2dbe61d4", "line": 144, "range": {"start_line": 143, "start_character": 58, "end_line": 144, "end_character": 44}, "updated": "2018-09-11 20:37:03.000000000", "message": "i think this will be problematic if an external service like cyborg or neutron needs t create child resouce providers beneth the numa nodes created by the virt driver.\n\ncan we define a standard nameing convetion that will be used for all services.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ab3ac494", "line": 144, "range": {"start_line": 143, "start_character": 58, "end_line": 144, "end_character": 44}, "in_reply_to": "3f79a3b5_2dbe61d4", "updated": "2018-09-19 10:18:12.000000000", "message": "+1 I think we _do_ need to rat hole here :) Let's just make sure said hole is not allowed to get too deep", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0f5aeb1c", "line": 144, "range": {"start_line": 143, "start_character": 58, "end_line": 144, "end_character": 44}, "in_reply_to": "3f79a3b5_ab3ac494", "updated": "2018-10-01 21:37:23.000000000", "message": "My suggestion was to have the following naming convention:\n\n <PARENT_RP_NAME>_<DEVICE_ADDRESS>\n\nwhich is unambiguous and predictable.\n\nThe trick is what should go in <DEVICE_ADDRESS> for a NUMA node? NUMA nodes don't have traditional addresses like PCI devices do, so we'd need to \"fake\" a device address for each NUMA node.\n\nI think something like \"NUMA{NODE_ID}\" should be fine (which is I believe what Sylvain suggested.\n\nThat would mean that, if we had a 2-NUMA-node compute host with hypervisor_hostname of \"cn1\" and 2 SR-IOV PFs, each affined to one NUMA node, we might have 5 providers arranged in a tree with the following unambiguous and predictable names:\n\ncn1\n cn1_NUMA0\n  cn1_NUMA0_0000:3f:00.1\n cn1_NUMA1\n  cn1_NUMA1_0000:3a:00.1\n\nThat said, all an external system needs to do is:\n\n GET /resource_providers?in_tree=cn1\n\nand they will get all the child providers under the root compute node provider. If all the external agent needs to do is add a child resource provider to the appropriate child provider of the root compute node, it is easy enough to figure out where to add that child to by examining the traits and inventories of the provider...", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_8b5ee8e6", "line": 148, "range": {"start_line": 148, "start_character": 0, "end_line": 148, "end_character": 9}, "updated": "2018-09-19 10:18:12.000000000", "message": "nit: You need a line break after this", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_0fc0ab49", "line": 149, "range": {"start_line": 149, "start_character": 8, "end_line": 149, "end_character": 53}, "updated": "2018-10-01 21:37:23.000000000", "message": "Might be worth including PCPU here when discussing dedicated guest processor resources and VCPU for discussing shared guest processor resources.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "43d30827ffe8584d3a435023b5e84345d4e7bbfc", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_4b547722", "line": 149, "range": {"start_line": 149, "start_character": 54, "end_line": 149, "end_character": 62}, "updated": "2018-09-17 20:43:22.000000000", "message": "This may be going too deep too fast, but wouldn't we need to model thread siblings so that we can support the 'require' thread policy?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ab63a4b0", "line": 149, "range": {"start_line": 149, "start_character": 2, "end_line": 149, "end_character": 6}, "updated": "2018-09-19 10:18:12.000000000", "message": "``literal``", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "19b572a55a63b35c2f200300f0e321d73eaf489e", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_dce4d3aa", "line": 150, "range": {"start_line": 150, "start_character": 0, "end_line": 150, "end_character": 59}, "updated": "2018-09-17 16:55:12.000000000", "message": "Do we have a plan for representing the various page sizes?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6fd6ff28", "line": 150, "range": {"start_line": 150, "start_character": 0, "end_line": 150, "end_character": 59}, "in_reply_to": "3f79a3b5_dce4d3aa", "updated": "2018-10-01 21:37:23.000000000", "message": "Good question. Way back when I'd proposed adding resource classes for various page sizes:\n\nhttps://review.openstack.org/#/c/442718/\n\nMight be worth resurrecting that corpse.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2b6f9492", "line": 154, "range": {"start_line": 152, "start_character": 0, "end_line": 154, "end_character": 23}, "updated": "2018-09-19 10:18:12.000000000", "message": "Move this into a '.. note', like Jay has done for dependencies to this spec in his [1]\n\n[1] https://review.openstack.org/#/c/555081/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2f924759", "line": 160, "range": {"start_line": 159, "start_character": 0, "end_line": 160, "end_character": 41}, "updated": "2018-10-01 21:37:23.000000000", "message": "This is only for NUMA-affined resources, right? Might be worth clarifying you are referring here only to NUMA-affined things?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ab0884d8", "line": 164, "range": {"start_line": 164, "start_character": 2, "end_line": 164, "end_character": 28}, "updated": "2018-09-19 10:18:12.000000000", "message": "s/a/An/\n\nor\n\ns/a SR-IOV physical function/SR-IOV physical functions/", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "43d30827ffe8584d3a435023b5e84345d4e7bbfc", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ab098b31", "line": 167, "updated": "2018-09-17 20:43:22.000000000", "message": "Yeah, fair enough, but we need to at least keep that in the back of our heads, because it's heavily related. I like the previously discussed idea of modelling them as pages (of varying sizes if needed, but I suspect any one host will only have one size), counting units of those, and removing MEMORY_MB from NUMA nodes that have hugepages.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "1d7222c0ed660d8c7569c12429c2c939b518f01b", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_d36fd98f", "line": 167, "in_reply_to": "3f79a3b5_ab098b31", "updated": "2018-09-17 22:53:58.000000000", "message": "As a counter-example, we currently have hosts with a mix of 4K, 2MB, and 1GB pages.  (Mostly useful for small clusters.)  But we can hash it out in that separate discussion.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_8b2ca84a", "line": 167, "in_reply_to": "3f79a3b5_d36fd98f", "updated": "2018-09-19 10:18:12.000000000", "message": "I personally don't think these should be out of scope as the effort to migrate afterwards seems like it would be non-trivial, but I won't block on that. However, what I would like to see is rather than us migrating the MEMORY_MB option and continuing referring to memory in terms of MB, we start referring to memory in terms of page sizes. Chris mentions 4K, 2MB and 1GB, but I'm sure other platforms support other page sizes so this would need to be generic.\n\nI might go draft a spec on this.\n\nUPDATE: Yup, Power supports (supported?) 4 KB, 64 KB, 16 MB, and 16 GB [1]. Definitely needs some work here.\n\n[1] https://www.ibm.com/developerworks/community/blogs/RedbooksVetter/entry/the_advantage_of_the_correct_power_systems_page_sizes?lang=en", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_abe084cd", "line": 173, "range": {"start_line": 172, "start_character": 0, "end_line": 173, "end_character": 52}, "updated": "2018-09-19 10:18:12.000000000", "message": "As noted below, I would much rather we drop the older 'hw:numa_nodes' extra spec and related extra specs. In line with that, I think the order of all of these examples should be reversed. Instead of saying,\n\n  If you had extra spec ``--property hw:numa_nodes=N``,\n  you would get N NUMA nodes\n  which would look like ``resources1:VCPU:1&...``\n\nsay\n\n  If you wanted N NUMA nodes\n  you would request ``resources1:VCPU:1&...`\n  which would be analogous to the old ``hw:numa_nodes=N``\n\nIf that makes sense?\n\nAlso, either drop ``--property`` and refer to just the extra specs or use it consistently, meaning ``resources1=VCPU:1`` would become ``--property resources1:VCPU:1`` and so forth (right?)", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "d7f13a8e92454890a60836b5b41e7989c82b68e1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6f7d9f1c", "line": 173, "range": {"start_line": 172, "start_character": 0, "end_line": 173, "end_character": 52}, "in_reply_to": "3f79a3b5_abe084cd", "updated": "2018-10-01 21:37:23.000000000", "message": "++ to what stephenfin writes.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6b834c04", "line": 181, "range": {"start_line": 179, "start_character": 0, "end_line": 181, "end_character": 76}, "updated": "2018-09-19 10:18:12.000000000", "message": "Personally, I think this extra spec should be deprecated and we should migrate away from it in the future, similar to what we're planning to do with 'hw:cpu_policy' in Jay's spec [1]. I'm OK with providing this shim for a release though, allowing us time to use online migrations to migrate the flavor extra specs to the new coolness.\n\n[1] https://review.openstack.org/#/c/555081/18/specs/stein/approved/cpu-resources.rst@321", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_8bd10832", "line": 183, "range": {"start_line": 183, "start_character": 2, "end_line": 183, "end_character": 4}, "updated": "2018-09-19 10:18:12.000000000", "message": "nit: Drop these and replace the ':' above with '::'. Ditto for the rest of the examples below.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_2bcc745f", "line": 186, "range": {"start_line": 185, "start_character": 21, "end_line": 186, "end_character": 9}, "updated": "2018-09-19 10:18:12.000000000", "message": "nit: added the ability to shard resources in the 1.25 microversion", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_abbf24ce", "line": 190, "range": {"start_line": 190, "start_character": 0, "end_line": 190, "end_character": 4}, "updated": "2018-09-19 10:18:12.000000000", "message": "For example:", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_cbc38057", "line": 192, "range": {"start_line": 192, "start_character": 30, "end_line": 192, "end_character": 45}, "updated": "2018-09-19 10:18:12.000000000", "message": "``literal``", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_8b04a87f", "line": 203, "range": {"start_line": 200, "start_character": 0, "end_line": 203, "end_character": 4}, "updated": "2018-09-19 10:18:12.000000000", "message": "Again, let's just deprecate this and provide a minimal shim for a single release", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_cbedc0b8", "line": 218, "range": {"start_line": 215, "start_character": 0, "end_line": 218, "end_character": 78}, "updated": "2018-09-19 10:18:12.000000000", "message": "Again, flip the order of this. Instead of\n\n  old world\n  expected result\n  new world equivalent\n\nsay\n\n  expected result\n  new world\n  old world equivalent", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "818b172a26998448150d02297040f787f0696376", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_bd06dc20", "line": 221, "updated": "2018-09-14 15:59:27.000000000", "message": "we said at the PTG we're going to split the spec into two with the NUMA affinity be a separate spec.\n\nAdd also a note about PCPU resource class that would be on children.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "76594c6ac7823fc79bece4f005761844ef96afa2", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6b34ac49", "line": 221, "in_reply_to": "3f79a3b5_bd06dc20", "updated": "2018-09-19 10:18:12.000000000", "message": "(I stopped reading here as it looks like a lot of the below needs rework)", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "e68229abd357f667327d1215a3cb8544cdafaf15", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_4bc4c941", "line": 232, "updated": "2018-09-12 21:30:39.000000000", "message": "this is wrong : the right syntax has to be ``group_policy=none&resources1:VCPU=M&resources2:VGPU=N``.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "e68229abd357f667327d1215a3cb8544cdafaf15", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_cbdd3914", "line": 237, "updated": "2018-09-12 21:30:39.000000000", "message": "that is incorrect, we need a subtree thingy", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "e68229abd357f667327d1215a3cb8544cdafaf15", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_6be425e1", "line": 238, "updated": "2018-09-12 21:30:39.000000000", "message": "missing the third case : I want on the same NUMA node", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, "change_message_id": "15e10edf3cff7498e90bb2dc7743ec622635ba96", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_f174a238", "line": 238, "in_reply_to": "3f79a3b5_6be425e1", "updated": "2018-09-12 22:58:56.000000000", "message": "agreed...good catch.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fc95d3adfb598e7e5019655f469093290611a2b1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_ed9aa960", "line": 257, "range": {"start_line": 257, "start_character": 3, "end_line": 257, "end_character": 10}, "updated": "2018-09-11 20:37:03.000000000", "message": "numa\n\ndevices could look weird given we have pci passthough", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "fc95d3adfb598e7e5019655f469093290611a2b1", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_8d9f7550", "line": 258, "range": {"start_line": 258, "start_character": 1, "end_line": 258, "end_character": 7}, "updated": "2018-09-11 20:37:03.000000000", "message": "delete the numa_prefix", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "43d30827ffe8584d3a435023b5e84345d4e7bbfc", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_9db73222", "line": 302, "updated": "2018-09-17 20:43:22.000000000", "message": "Do we need all this complexity? Does it make sense to expose NUMA affinity for GPUs but then float CPUs and memory all over the host? How about a single numa_resources = [flat,nested] conf option for virt drivers?", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4af83c6a1784608158b89ad595732e9b591fe81c", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_c53768af", "line": 355, "updated": "2018-09-12 19:59:39.000000000", "message": "*WRONG* We need to reshape.", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "b9c06dba87800858f8daeb30cff2e67f5e57e1b0", "unresolved": false, "patch_set": 10, "id": "3f79a3b5_506c749c", "line": 355, "in_reply_to": "3f79a3b5_c53768af", "updated": "2018-09-12 20:38:23.000000000", "message": "FFU impact as well has to be documented", "commit_id": "f9b9c51845e713af88a269f0c78e7dac3feba301"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_336bc21c", "line": 22, "range": {"start_line": 22, "start_character": 20, "end_line": 22, "end_character": 27}, "updated": "2018-10-23 19:33:30.000000000", "message": "abstract", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_1319e6d0", "line": 170, "updated": "2018-10-23 19:33:30.000000000", "message": "As discussed in Denver, by convention we should prefix the name of each provider with the name of its parent. And I think we may have also said we would use double underscore to separate the prefix (to ensure disambiguation when the names themselves contain underscores). So assuming the PCI device is itself a child of a numa provider, its name would actually be three-tiered, something like: $nodename__NUMA$N__PCI$DBSF", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f411d171c272e83c92dc73270db2bbc6c29501fa", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_5d619aa7", "line": 170, "in_reply_to": "3f79a3b5_1319e6d0", "updated": "2018-10-24 15:15:47.000000000", "message": "I don't like having more than $compute__$pciaddr\nWhy ? because we could provide some PCI devices as child RPs while they're not NUMA related.\nAlso I think we said during the PTG that in case you'd like to know whether it's a NUMA related child, you should just look at the parent.\n\nAlso, saying \"PCI%s\" is bizarre, because I don't understand why we should know whether it's a PCI device or not. If we need to know this, why not having a \"PCI\" trait ?", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2c3fdffcc10e87f5bcf6ab4222265751e431ee2f", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_f1d44d20", "line": 170, "in_reply_to": "3f79a3b5_5d619aa7", "updated": "2018-10-24 15:40:11.000000000", "message": "> I don't like having more than $compute__$pciaddr\n > Why ? because we could provide some PCI devices as child RPs while\n > they're not NUMA related.\n\nI get that, but future us will be much happer if we make a standard format and stick to it universally. PCI address should be unique on a compute node, but maybe there's something else that's not, where we would wind up with the same name if we didn't interpose the $numa bit.\n\nAre you trying to make it easier to \"find\" PCI resource providers? Assuming we want to use the name to do that, name.endswith is as easy as anything. (Better yet, name.rsplit('__', 1)[-1] works even if the PCI device is somehow a root provider.)\n\n > Also I think we said during the PTG that in case you'd like to know\n > whether it's a NUMA related child, you should just look at the\n > parent.\n\nAgree that we generally shouldn't go around parsing names to discover properties of providers. (That said, if we don't get to use traits for e.g. PCI addresses, not sure what other options we have. Is encoding metadata into provider names any better than doing the same with traits?) It's more about guaranteeing uniqueness (more below) and having a standard, predictable convention.\n\n > Also, saying \"PCI%s\" is bizarre, because I don't understand why we\n > should know whether it's a PCI device or not. If we need to know\n > this, why not having a \"PCI\" trait ?\n\nI would love to have a PCI trait, but that's a separate issue.\n\nThe reasoning to include some kind of type designation is to guarantee name uniqueness. I don't have a concrete example right now (which is kind of the point - solving for specific examples still leaves holes for all the things we didn't specifically solve for) but what if there's some other kind of provider (non-PCI) whose normalized name also happens to be eight hex digits? Then we could end up with a name conflict in the field that would be pretty tough to deal with.\n\nUnlikely, maybe; but coming up with a standard, predictable, universal, unambiguous naming convention isn't that hard, so we should do it.", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_d347ee79", "line": 202, "range": {"start_line": 202, "start_character": 17, "end_line": 202, "end_character": 25}, "updated": "2018-10-23 19:33:30.000000000", "message": "split", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_f3630a18", "line": 205, "range": {"start_line": 205, "start_character": 24, "end_line": 205, "end_character": 66}, "updated": "2018-10-23 19:33:30.000000000", "message": "This makes it sound like you'll be dividing *evenly*, which is not necessarily the case unless you have at least <vCPU_count> NUMA nodes and are using group_policy=isolate.", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_fe4d1171", "line": 223, "range": {"start_line": 223, "start_character": 14, "end_line": 223, "end_character": 20}, "updated": "2018-10-23 19:33:30.000000000", "message": ": and = are backwards here (and in several of the other examples below)", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "2c3fdffcc10e87f5bcf6ab4222265751e431ee2f", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_f17bed27", "line": 223, "range": {"start_line": 223, "start_character": 14, "end_line": 223, "end_character": 20}, "in_reply_to": "3f79a3b5_9df732d2", "updated": "2018-10-24 15:40:11.000000000", "message": "It's not a concern, just a typo. The queryparam syntax is\n\n resources$N=$RC:$AMOUNT,$RC:$AMOUNT,...", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f411d171c272e83c92dc73270db2bbc6c29501fa", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_9df732d2", "line": 223, "range": {"start_line": 223, "start_character": 14, "end_line": 223, "end_character": 20}, "in_reply_to": "3f79a3b5_fe4d1171", "updated": "2018-10-24 15:15:47.000000000", "message": "I don't understand the concern. Could you please explain me ?", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_f34c6a9e", "line": 230, "range": {"start_line": 230, "start_character": 17, "end_line": 230, "end_character": 25}, "updated": "2018-10-23 19:33:30.000000000", "message": "split", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_5e0e8533", "line": 265, "range": {"start_line": 265, "start_character": 29, "end_line": 265, "end_character": 30}, "updated": "2018-10-23 19:33:30.000000000", "message": ".", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_7e0b4121", "line": 265, "range": {"start_line": 265, "start_character": 48, "end_line": 265, "end_character": 49}, "updated": "2018-10-23 19:33:30.000000000", "message": ".", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_7ed58146", "line": 269, "updated": "2018-10-23 19:33:30.000000000", "message": "Should add an example for requesting NUMA-affined CPU *and* memory asymmetrically. E.g.\n\n  hw:numa_nodes=2\n &hw:numa_cpus.0=0,1\n &hw:numa_mem.0=1024\n &hw:numa_cpus.1=2,3,4,5,6,7\n &hw:numa_mem.1=3072\n\nneeds to translate into:\n\n  group_policy=isolate\n &resources1=VCPU:2,MEMORY_MB:1024\n &resources2=VCPU:6,MEMORY_MB:3072\n\nand *not*\n\n  group_policy=isolate\n &resources1=VCPU:2,MEMORY_MB:3072\n &resources2=VCPU:6,MEMORY_MB:1024\n\nTo wit, we should be explicit that for hw:numa_$R.$N, we guarantee that we'll ask for each $R in the same request group for a given $N. (It would be nice if we could just map hw:numa_$R.$N=$X directly to resources$N=$R:$X, but we can't rely on $N not being taken by some other request group already. So we'll have to use the gibi method and look for a free one.)", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f411d171c272e83c92dc73270db2bbc6c29501fa", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_3dcffe8b", "line": 269, "in_reply_to": "3f79a3b5_7ed58146", "updated": "2018-10-24 15:15:47.000000000", "message": "Good point", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_fedd1113", "line": 308, "range": {"start_line": 308, "start_character": 26, "end_line": 308, "end_character": 34}, "updated": "2018-10-23 19:33:30.000000000", "message": "So is this being proposed as part of the work covered by this spec, or not?\n\nIf so, we need to talk about exactly when it's legal for the operator to change this conf setting. Because doing so could get us into a situation where we need to do a reshape, which we've said we only want to allow on upgrade boundaries. So what do we do if the operator randomly edits this setting and restarts the compute service?", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_7e9b4163", "line": 327, "range": {"start_line": 327, "start_character": 29, "end_line": 327, "end_character": 72}, "updated": "2018-10-23 19:33:30.000000000", "message": "This doesn't match L312-3. Which is it? (I prefer L312-3)", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "93d0de2eebea7c236e67f61dd478296e007c7c8e", "unresolved": false, "patch_set": 11, "id": "3f79a3b5_3e1629a3", "line": 421, "updated": "2018-10-23 19:33:30.000000000", "message": "wouldn't hurt to add a reference to the reshaper spec.", "commit_id": "5ac130dae30c195a01dc6a4a2d26250fbf58cd90"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "74d32e9911236eb38c162ee35a7c97a9061876d5", "unresolved": false, "patch_set": 12, "id": "3f79a3b5_73d28500", "line": 355, "range": {"start_line": 355, "start_character": 38, "end_line": 355, "end_character": 59}, "updated": "2018-10-24 14:42:22.000000000", "message": "resource_classes", "commit_id": "662a4278c862190b94a37b769631c6fdf12f3790"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f411d171c272e83c92dc73270db2bbc6c29501fa", "unresolved": false, "patch_set": 12, "id": "3f79a3b5_56073782", "line": 355, "range": {"start_line": 355, "start_character": 38, "end_line": 355, "end_character": 59}, "in_reply_to": "3f79a3b5_73d28500", "updated": "2018-10-24 15:15:47.000000000", "message": "Holy shit. /me facepalms", "commit_id": "662a4278c862190b94a37b769631c6fdf12f3790"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "751a1f89c409db38ee036c4ae3ae412522b74e7d", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_5d064487", "line": 41, "range": {"start_line": 41, "start_character": 31, "end_line": 41, "end_character": 36}, "updated": "2018-10-26 13:41:35.000000000", "message": "should. Jay has made it clear, with good justification, that placement will never have a role in generating CPU pin mapping", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_07548ffc", "line": 41, "range": {"start_line": 41, "start_character": 31, "end_line": 41, "end_character": 36}, "in_reply_to": "3f79a3b5_5d064487", "updated": "2018-11-16 00:03:26.000000000", "message": "could -> will", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_7428c8ec", "line": 42, "updated": "2018-10-30 12:59:21.000000000", "message": "Some part of the *which* like, which NUMA node, will be decided by placement and nova together. When the nova scheduler selects one allocation candidate from the candidates returned by placement, nova at that point also selects *which* NUMA node the resources will be allocated from. However nova can only select a candidate if that was returned by placement in a first place, so placement does have a saying about the *which* decision as well.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "751a1f89c409db38ee036c4ae3ae412522b74e7d", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_1dfc4c6f", "line": 48, "range": {"start_line": 45, "start_character": 0, "end_line": 48, "end_character": 23}, "updated": "2018-10-26 13:41:35.000000000", "message": "Huh?", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_873f3fb1", "line": 48, "range": {"start_line": 45, "start_character": 0, "end_line": 48, "end_character": 23}, "in_reply_to": "3f79a3b5_1dfc4c6f", "updated": "2018-11-16 00:03:26.000000000", "message": "am i did not think this is a goal.\n\ni would much prefer the schduler to continue  to calulate the pinnings and pass that to the compute node to use \nso that we can elimnate the pinning calulatetion on the compute node. i dont think we can ever really eliminate it from the schduler.\n\nideally we would claim the pinned core/mempages in the condoctor/schdueler also before we make the down call to the compute node to eliminate the late race on the compute node that exists today but as you said this is out of scope of this spec.\n\nmaybe we should just remove this note.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_d41f5cb7", "line": 52, "range": {"start_line": 51, "start_character": 51, "end_line": 52, "end_character": 19}, "updated": "2018-10-30 12:59:21.000000000", "message": "nit: for a specific instance", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_07a24ffc", "line": 56, "range": {"start_line": 56, "start_character": 33, "end_line": 56, "end_character": 38}, "updated": "2018-11-16 00:03:26.000000000", "message": "its important to rememebr that placement keeps a tally count of the availabel inventory of a specific resouce.\n\nso while we can querry the amount of cpus availabe on a numa node we cannot query which cpus are free or used in placement and will need to continue to track that in the resouce tracker.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_077b2f7a", "line": 60, "range": {"start_line": 60, "start_character": 34, "end_line": 60, "end_character": 75}, "updated": "2018-11-16 00:03:26.000000000", "message": "the instance cpu topology has nothing to do to with the host topology so i thas no interaction with either the resouce tracker or placement so it really should not be called out here.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "751a1f89c409db38ee036c4ae3ae412522b74e7d", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_9d15bc97", "line": 156, "range": {"start_line": 156, "start_character": 42, "end_line": 156, "end_character": 49}, "updated": "2018-10-26 13:41:35.000000000", "message": "The inclusion of this makes Jay's spec a hard dependency of this one. You should call that out earlier or with a note immediately before/after this", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "751a1f89c409db38ee036c4ae3ae412522b74e7d", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_bd699826", "line": 167, "range": {"start_line": 167, "start_character": 42, "end_line": 167, "end_character": 43}, "updated": "2018-10-26 13:41:35.000000000", "message": "literally", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_54bfcc78", "line": 214, "range": {"start_line": 214, "start_character": 2, "end_line": 214, "end_character": 22}, "updated": "2018-10-30 12:59:21.000000000", "message": "I think group_policy is directly settable via flavor extra_spec [1]. So we have to tell the admin to add that key when creating the flavor with hw:numa_nodes=FLAVOR-NODES. Or in the other hand we have to make sure if the admin adds that for some other reason then the admin knows that it also affect the meaning of hw:numa_nodes=FLAVOR-NODES as well.\n\n[1]https://github.com/openstack/nova/blob/a9a893ed76566d0f49c71412ad572b2305dd6897/nova/scheduler/utils.py#L150", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_e7eab30b", "line": 214, "range": {"start_line": 214, "start_character": 2, "end_line": 214, "end_character": 22}, "in_reply_to": "3f79a3b5_54bfcc78", "updated": "2018-11-16 00:03:26.000000000", "message": "it is setable but for backwars compatiblity we cannot require the admin to set group_pliocy in the flavor\n\nas such if numa_nodes is set and group_policy is not we will need to infer group_policy=isolate.\n\nif the admin explcitly sets it then we will need to either raise an  exception if it conflicts with the derived value or allow the explcit value to override it.\n\ni would prefer the exception.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_7ea53748", "line": 214, "range": {"start_line": 214, "start_character": 2, "end_line": 214, "end_character": 22}, "in_reply_to": "3f79a3b5_e7eab30b", "updated": "2020-01-29 10:27:17.000000000", "message": "For backwards compatibility, see in the spec how I plan to manage it.\n\nWe could also nitpick on group_policy being used for other subresources but VCPU but then that's a Placement API semantics, right?", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_87b41f1f", "line": 311, "range": {"start_line": 311, "start_character": 0, "end_line": 311, "end_character": 66}, "updated": "2018-11-16 00:03:26.000000000", "message": "this is explitly a non goal of placement and will never be supported unless there is a significat change in direction so i woudld remove this sub paragraph.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_3743326e", "line": 313, "range": {"start_line": 312, "start_character": 26, "end_line": 313, "end_character": 47}, "updated": "2018-10-30 12:59:21.000000000", "message": "I guess this other mechanism should be the NUMATopologyFilter and the PciPassthroughFilter selecting the proper allocation candidate. BUT those filters only filtering compute hosts (i.e. root RP) so if there are multiple candidate per compute host (with different NUMA allocations having different affinities) then what mechanism will do the selection? \n\nIt cannot be in the nova-compute or in the virt driver as scheduler will allocation one candidate in placement that will determine the affinity. So it needs to be in the scheduler somehow. \n\nWill we extend the BaseFilter to be capable of filtering allocation candidates instead of filtering just host?\n\nOr do we want to build some logic that runs _after_ the filters and modifies the currently simple allocation candidate selection in [1]?\n\n[1] https://github.com/openstack/nova/blob/a9a893ed76566d0f49c71412ad572b2305dd6897/nova/scheduler/filter_scheduler.py#L224-L229", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_9a2d8d92", "line": 379, "range": {"start_line": 377, "start_character": 10, "end_line": 379, "end_character": 38}, "updated": "2018-10-30 12:59:21.000000000", "message": "Does it also means that some virt driver will ignore the [numa]/resource_classes = VGPU config value? Or will the implementation of this spec cover every in tree driver?", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_be3d0fe6", "line": 379, "range": {"start_line": 377, "start_character": 10, "end_line": 379, "end_character": 38}, "in_reply_to": "3f79a3b5_674c6340", "updated": "2020-01-29 10:27:17.000000000", "message": "Sean, you're correct.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_674c6340", "line": 379, "range": {"start_line": 377, "start_character": 10, "end_line": 379, "end_character": 38}, "in_reply_to": "3f79a3b5_9a2d8d92", "updated": "2018-11-16 00:03:26.000000000", "message": "well currently only the libvirt virt driver support vgpus.\n\nbut this basically state that as the virt drivers are responsible for discovering the available resources on a host they are also responsible for deciding to report them to placement.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_070c8fe9", "line": 417, "range": {"start_line": 413, "start_character": 0, "end_line": 417, "end_character": 17}, "updated": "2018-11-16 00:03:26.000000000", "message": "am why can we not auto generate the numberd request groups as log as the operator has not specifed the resources dict manually in the extra specs.\n\ni really am not that comfortable with requrieing the operator to use the numbered syntax.\n\nthe numa extra specs are complicated enjough this would be significantly worse. we should be aiming to have no flavor change at all.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_de124b64", "line": 417, "range": {"start_line": 413, "start_character": 0, "end_line": 417, "end_character": 17}, "in_reply_to": "3f79a3b5_070c8fe9", "updated": "2020-01-29 10:27:17.000000000", "message": "Keeping old flavor semantics and not asking operators to not directly provide numbered request groups was an option I was considering, but which would require a translation mechanism either way.\n\nGiven consensus I got when asking, asking flavors to be new-style would help us to remove this compat code for translating to Placement which will , I think, also help operators to better understand the queries.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_badba978", "line": 444, "updated": "2018-10-30 12:59:21.000000000", "message": "Does it mean that this translation mechanism will be used as a flavor data migration at the same time? I mean when in Train the translation mechanism is dropped will there be still flavors with old numa extra_spec keys?", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "dd43746a2e93a6c3a2cea4018217984ca848f1e9", "unresolved": false, "patch_set": 13, "id": "9fdfeff1_4192b4a1", "line": 444, "in_reply_to": "3f79a3b5_27266b6c", "updated": "2019-02-19 07:59:32.000000000", "message": "I prefer to keep it also. It is more clear for the end user understand the guest numa topology. Let the user get the numa topology from the request group, that is really pain.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_be0bcf29", "line": 444, "in_reply_to": "3f79a3b5_27266b6c", "updated": "2020-01-29 10:27:17.000000000", "message": "gibi, excellent point about nested flavors in the instances. We somehow need to translate those in some data migration or old instances could be broken in Train if operators ask to move them.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e4983f5b3a3cc7b333fbf9fd6a8b4c2575f04123", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_27266b6c", "line": 444, "in_reply_to": "3f79a3b5_badba978", "updated": "2018-11-16 00:03:26.000000000", "message": "i think this is really the wrong direction.\nwe should preserve the current numa extra spec keys and generage teh placemnt groups dynamicaly.", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_3ac9d9aa", "line": 452, "range": {"start_line": 452, "start_character": 33, "end_line": 452, "end_character": 44}, "updated": "2018-10-30 12:59:21.000000000", "message": "nit: control plane", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f59704a0475932ceab70dd54b7280c8fe190d9ea", "unresolved": false, "patch_set": 13, "id": "3f79a3b5_7a3431ac", "line": 466, "range": {"start_line": 466, "start_character": 2, "end_line": 466, "end_character": 22}, "updated": "2018-10-30 12:59:21.000000000", "message": "every in tree virt drivers?", "commit_id": "c4ae8fe22f51dde94b2147203941b83d3f4bdf04"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_0b879dd9", "updated": "2019-04-16 16:45:55.000000000", "message": "This needs to be moved to specs/train/approved", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_4d0e398e", "line": 26, "range": {"start_line": 23, "start_character": 57, "end_line": 26, "end_character": 37}, "updated": "2019-04-15 13:27:18.000000000", "message": "we state this in the note but we sepend a resonable amount of this spec discussing this later.\n\ni would remove this or just state that how the query is constructed while related is not the primary focuse of this spec.\n\nto that end however if we are to cover that in this spec my personal proposal would be to take a module approch where we do not update any flavor and instead add a nova prefilters or transform function per resouce class.\n\neach transform function will take a request spec + inial placement query and transform it to numa aware version.\n\nthe intent being that as an operator elect to enable reporting of a resouce class via a numa toplogy they \nwoudl also enable the corresponding prefilter/transform but would not need to modify any flavor or images.\n\nthis could be a temproy solution or perment. \n\nanyway that is not the focus of this spec just how i would approch it to minims the upgrade impact.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_6dd455be", "line": 45, "range": {"start_line": 45, "start_character": 30, "end_line": 45, "end_character": 57}, "updated": "2019-04-15 13:27:18.000000000", "message": "nit: i woudl do this the other way around personal as it decouples this futher form the cpu in plamcent spec.\n\nNUMA after all stand for non uniform memory architecture\nthe empsice being that its an effect of memory access not cpus.\n\nif you have an application that runs entirely within l3 cache it will not experience numa effects as the memory access time will be the constant latency of l3 cache. ( yes i know im simplifying as there are cache region locality effects)", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_e80fb7de", "line": 51, "range": {"start_line": 51, "start_character": 33, "end_line": 51, "end_character": 39}, "updated": "2019-04-16 15:11:07.000000000", "message": "an amount", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_adc1dde6", "line": 56, "range": {"start_line": 54, "start_character": 0, "end_line": 56, "end_character": 33}, "updated": "2019-04-15 13:27:18.000000000", "message": "this is the other reason it make more sense to start with memory and specifcally mempages.\n\nfor memory we dont need a second level of assignment\n\nwe just need to corralate the RP uuid to the host numa cell and ensure we pin the guest memroy to the correct numa node.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "dd43746a2e93a6c3a2cea4018217984ca848f1e9", "unresolved": false, "patch_set": 14, "id": "9fdfeff1_1d788e29", "line": 61, "range": {"start_line": 61, "start_character": 61, "end_line": 61, "end_character": 76}, "updated": "2019-02-19 07:59:32.000000000", "message": "2-vCPUs instance probably isn't good example here. Since only 2 vcpus, we probably only want one numa node. Even without guest numa node, the linux scheduler will probably ensure those 2 vcpus in the same numa node. So we probably should say a large instance which larger than single numa node at here.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_2d9e4d54", "line": 61, "range": {"start_line": 61, "start_character": 61, "end_line": 61, "end_character": 76}, "in_reply_to": "9fdfeff1_1d788e29", "updated": "2019-04-15 13:27:18.000000000", "message": "not nessacally \n\nif you have a workload that is heavily memory bound and had very little cpu  work then you might want it to have 2 numa nodes even with only 2 cpus.\n\nbut i agree teh usecase could be improved. i personally woudl remove the reference to the number of cpus and simpley state\n\n\"as a tenant, i'd like my instances memory allocations to be optimized for low latency.\"\n\nthat can be true of a vm of any size and convays the fact that memory latency ( which is a direct result of NUMA affinity) is the important aspect.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_4d46397f", "line": 64, "range": {"start_line": 64, "start_character": 46, "end_line": 64, "end_character": 53}, "updated": "2019-04-15 13:27:18.000000000", "message": "pleas use the therm numa node\n\nmost server chps have more then 1 numa node in a singel socket.\n\neven on consumer desktop this is the case on intel i9 or amd thread ripper cpus.\n\nwe really should not conflate sockets with numa nodes.\nthat has been incorrect for at least 6 years on high core count systems as of the release of the ivybridge architecture in 2012", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_cd59c95a", "line": 72, "range": {"start_line": 72, "start_character": 12, "end_line": 72, "end_character": 16}, "updated": "2019-04-15 13:27:18.000000000", "message": "also by using the term numa node above instead of socket it make it consitent with this diagram :)", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_f8680188", "line": 84, "range": {"start_line": 79, "start_character": 0, "end_line": 84, "end_character": 21}, "updated": "2019-04-15 13:27:18.000000000", "message": "yes although if the application required high memory bandwith for grater throughput they actully want multiple numa nodes.\n\n\nnot the rest of this comment is related but off topic.\n\nhow would people feel about adding a new\nhw:numa_afinity=latency|bandwith|Any|legacy flavor extraspec to contol this bevhvior?\n\nlatency would perfer to assign vms virtual numa nodes to the minium number of host numa nodes.\n\nbandwidth woudl perfer to assign the vms virtual numa nodes to the maxium number of host numa nodes (max 1:1).\n\nany woudl ignore numa affintiy\n\nand legacy woudl do what we do today which is map each\nvirtual numa node to a seperate host numa node. this would be the default.\n\nthe difference between legacy and bandwith is bandwith is best effort as is latency.\n\nthe proposal woudl be that for latency,bandwith and any we would allow all host to pass in the numa toplogy filter and would use a weighter to select a host.\n\nfrom a plamcenet perspective we would also use group_policy=none to not put any restiction on the RPs the resrouce groups corresponding to the numa nodes come form alther each numa nodes resouce would still be a sperate resouce group.\n\ni have wanted to make this change for a few years but there has never been a good time to discuss it, this would be a different spec so i dont want to rathole on it here.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_47e161fe", "line": 84, "range": {"start_line": 79, "start_character": 0, "end_line": 84, "end_character": 21}, "in_reply_to": "3fce034c_f8680188", "updated": "2019-04-21 16:46:30.000000000", "message": "> the difference between legacy and bandwith is bandwith is best\n > effort as is latency.\n\n\nThe above sentence does not make sense to me.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8dfadd7421c1453aae589a21382ebc3a235f485e", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_942c3e94", "line": 84, "range": {"start_line": 79, "start_character": 0, "end_line": 84, "end_character": 21}, "in_reply_to": "ffb9cba7_47e161fe", "updated": "2020-01-15 12:48:57.000000000", "message": "oh i ment to say\n\nthe difference between legacy and bandwith is bandwith is best effort and legacy requires each virtual numa node to be mapped to a differnt host numa node.\n\nthe latency policy would also be best effort and if we could not fix on one numa node we would spread the n vitual numa node across up to n host numa node.\n\nso the bandwith policy tries to spread and the latency policy tries to pack. they would be best effort because they would be dont by weighing the allocation candiates returned. the legacy policy however is strict in that its implemented as a filter (the numa toplogy filter) not a weigher so it will only pass host that fulfil the requirement.\n\nwhen useing latency or bandwidth you are only guartee that the amount of numa nodes and the number or core/memory per numa node are correct and that a virtual numa node will not be split across host numa nodes. The weighing they do would be best effort so if no host in the cloud could spread of pack with the policy you asked for but a host could fit the vm while not breaking the requirement that virtual numa nodes must map to at most 1 host numa node, then the vm would boot on that host.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_b8bfd9ce", "line": 93, "range": {"start_line": 92, "start_character": 6, "end_line": 93, "end_character": 44}, "updated": "2019-04-15 13:27:18.000000000", "message": "you only need to set these if the cpus and memory cannot\nbe evenly devided by the number of numa nodes.\n\nwhen people set this manually for other reason it is generally a bad idea.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_e7ce5582", "line": 93, "range": {"start_line": 92, "start_character": 6, "end_line": 93, "end_character": 44}, "in_reply_to": "3fce034c_b8bfd9ce", "updated": "2019-04-21 16:46:30.000000000", "message": "++\n\nI wish we'd just get rid of this over-complexity, frankly.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_a8d0cf20", "line": 123, "range": {"start_line": 123, "start_character": 52, "end_line": 123, "end_character": 54}, "updated": "2019-04-16 15:11:07.000000000", "message": "their?", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "dd43746a2e93a6c3a2cea4018217984ca848f1e9", "unresolved": false, "patch_set": 14, "id": "9fdfeff1_bdd702ef", "line": 124, "range": {"start_line": 121, "start_character": 0, "end_line": 124, "end_character": 57}, "updated": "2019-02-19 07:59:32.000000000", "message": "just a question, so In this case, we only talk about one numa node guest? Since I didn't found qemu/KVM has any controlling on the pci device exposed on which guest numa node. That means, if guest has mulitple numa node, the guest don't know the pci device is attach to which guest numa node.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_5884b50c", "line": 124, "range": {"start_line": 121, "start_character": 0, "end_line": 124, "end_character": 57}, "in_reply_to": "9fdfeff1_bdd702ef", "updated": "2019-04-15 13:27:18.000000000", "message": "actully qemu can handel this mapping if you use the q35 chipset.\n\nwhat happens today is that in a multi numa node guest all pci devices are exposed via a singel root pci complex so all pci device are effectly associcate via numa node 0 in the guset.\n\ni have proplsed creating 1 pci route complex per numa node going forward and associating the devices correctly but i have not had time to work on that yet.\n\nso in the future guest will know what numa node the deice is on and can optimise coreectly.\n\nas a workaroudn operators can define hw:numa_nodes=1\n\n\nthis is yet another spec i need to write...", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_42a2694d", "line": 155, "range": {"start_line": 155, "start_character": 43, "end_line": 155, "end_character": 62}, "updated": "2019-04-16 14:52:14.000000000", "message": "For bandwidth we already introduced a RP that represents an SRIOV PF. See the figure in [1]. I think we should not create another RP for the VF inventory. But re-use the existing PF RP from [1]. Of course this means that that PF RP needs to be moved under a different parent. However now neutron creates the RP under the SRIOV agent RP. \n\nSo if this spec want to solve PCI modelling then it\n* needs to sync the model with the existing bandwidth model[1]\n* if such model needs to be changed then this spec (or another RFE) needs to describe the resulting neutron impact.\n\n[1]https://specs.openstack.org/openstack/neutron-specs/specs/rocky/minimum-bandwidth-allocation-placement-api.html#reporting-available-resources", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_487a8b88", "line": 158, "updated": "2019-04-16 14:52:14.000000000", "message": "Will the TRAITS that are currently on the compute RP will also be moved to the NUMA RPS? E.g.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_079fe950", "line": 158, "in_reply_to": "3fce034c_48328ba9", "updated": "2019-04-21 16:46:30.000000000", "message": "If different traits can potentially be assigned to different NUMA node resource providers, then yes. If not, then I don't see a reason to move them out of the compute node provider.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9c3853a42c5eac6623df144beeddb2a99584c405", "unresolved": false, "patch_set": 14, "id": "3fce034c_48328ba9", "line": 158, "in_reply_to": "3fce034c_487a8b88", "updated": "2019-04-16 14:58:05.000000000", "message": "I mean E.g. HW_CPU_X86_SSE", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_a7ab7d73", "line": 161, "range": {"start_line": 160, "start_character": 47, "end_line": 161, "end_character": 16}, "updated": "2019-04-21 16:46:30.000000000", "message": "and what happens when the hypervisor_hostname changes? we've seen a bunch of bugs and issues when this happens, particularly for Ironic nodes. :( Not sure this is a huge problem since all of these changes describe non-Ironic compute node providers, but just thought I'd mention it. If you're going to \"looking up\" providers in a provider tree by this naming convention, you should be aware of what happens when hypervisor_hostname changes suddenly and placement isn't aware of the changes.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_87bc39bc", "line": 163, "range": {"start_line": 163, "start_character": 0, "end_line": 163, "end_character": 70}, "updated": "2019-04-21 16:46:30.000000000", "message": "See Gibi's comment above. The neutron SR-IOV agent is already creating resource providers representing the \"backend\" (OVS vs. direct, etc) along with child providers representing the physical PCI devices assigned to those backends.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_27b1cde2", "line": 170, "range": {"start_line": 170, "start_character": 57, "end_line": 170, "end_character": 74}, "updated": "2019-04-21 16:46:30.000000000", "message": "remove this, IMHO. it's not necessary.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_07cda95c", "line": 181, "range": {"start_line": 181, "start_character": 67, "end_line": 181, "end_character": 75}, "updated": "2019-04-21 16:46:30.000000000", "message": "affinity", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_c7d6b1f2", "line": 182, "range": {"start_line": 182, "start_character": 22, "end_line": 182, "end_character": 74}, "updated": "2019-04-21 16:46:30.000000000", "message": "delete this and replace with \"provider of the resource provider representing the associated NUMA cell\"", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_c2a65954", "line": 188, "range": {"start_line": 187, "start_character": 0, "end_line": 188, "end_character": 16}, "updated": "2019-04-16 14:52:14.000000000", "message": "SRIOV PF are already modeled (see above). So that model needs to be evolved instead of a new model for SRIOV PFs.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_4704017c", "line": 188, "range": {"start_line": 187, "start_character": 0, "end_line": 188, "end_character": 16}, "in_reply_to": "3fce034c_c2a65954", "updated": "2019-04-21 16:46:30.000000000", "message": "Gibi, AFAIK, the SRIOV_NET_VF existing resource class isn't actually being used yet, though, correct? Only the NET_BW_[IN|E]GR_KILOBIT_PER_SEC resource classes are currently being tracked as inventory by the SR-IOV Neutron agent, yeah?", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_e7f8957d", "line": 200, "range": {"start_line": 200, "start_character": 44, "end_line": 200, "end_character": 49}, "updated": "2019-04-21 16:46:30.000000000", "message": "I really don't see the point of doing CPU pinning with the vCPU resource class. The PCPU resource class is the thing that should be used for pinning/dedicated guest CPUs.\n\nIf this proposal goes forward as-is, we'll just want another major reshape from VCPU -> PCPU which will make things ever more complicated than they already are.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_027221e4", "line": 205, "range": {"start_line": 205, "start_character": 42, "end_line": 205, "end_character": 47}, "updated": "2019-04-16 14:52:14.000000000", "message": "Is shard a good term here?", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_8873934d", "line": 205, "range": {"start_line": 205, "start_character": 42, "end_line": 205, "end_character": 47}, "in_reply_to": "3fce034c_027221e4", "updated": "2019-04-16 15:11:07.000000000", "message": "No, I think shard includes other connotation that we don't want to imply here. I think just the following would be better:\n\n \"added the ability to separate resource requests into relates groups in the...\"", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_d8e425af", "line": 208, "range": {"start_line": 208, "start_character": 2, "end_line": 208, "end_character": 22}, "updated": "2019-04-15 13:27:18.000000000", "message": "i have noted this on other spec but i will state it here also for clarity.\n\nas group_policy is global it is not safe to use it in general as it can break other resouce requests.\n\n\nhere are two exampels that break today if you use group_policy=isolate.\n\nfirst is i have 1 cinder backend and i therefor have 1 sharing resouce provider. if you use group_policy=isolate you cannot boot a vm with two cinder volumes as each volume would be its own numbered request group and with the isoalte policy both cant come form the same RP.\n\nthe second case is with bandwith based schduling. \nif you use group_policy=isolate you cannot have 2 network interface form the same RP that request bandwith. that means\nif you are using bandwith based schduling with ovs for example you are limited to 1 port with a bandwith request\n\nso without the ablity to specfiy relationships between resouce groups the global isolate policy is too agressive and will break lots of usecase as a result the only safe default is \ngroup_policy=none.\n\nhttps://review.openstack.org/#/c/650476/\n\ntrys to fix this in a way by intoducing subtree affintiy and i propsoed a posably solution like this\n\ngroup_policy=none;isolate:2,3;subtree:4,5;\nwhere we coudl have a global policy and override it for specific groups but without something like that\ni think we should always be useing\ngroup_policy=None.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_8e463b4f", "line": 208, "range": {"start_line": 208, "start_character": 2, "end_line": 208, "end_character": 22}, "in_reply_to": "3fce034c_d8e425af", "updated": "2019-04-16 16:45:55.000000000", "message": "I agree with Sean, we need to make group_policy more... ahem, \"granular\".\n\nAs written, this example will only land on hosts with at least as many NUMA cells as VCPUs requested, and with at least one VCPU available in each.\n\nI suspect what you were going for here was the \"any fit\" use case, where we use group_policy=none and split a request for N resource units into single units across N request groups so that we maximize our chances of landing *somewhere*.\n\nThe examples below don't gel with this though. To align with the below examples, you would want something more like:\n\n hw:numa_nodes=N\n vcpus=X\n\ntranslates to:\n\n ?resources1=VCPU:$(X/N)\n &resources2=VCPU:$(X/N)\n &...\n &resources$N=VCPU:$(X/N)\n &group_policy=isolate", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_b84fd990", "line": 223, "range": {"start_line": 220, "start_character": 0, "end_line": 223, "end_character": 76}, "updated": "2019-04-15 13:27:18.000000000", "message": "so i would actully propose that we keep the hw:numa_nodes=N option and make the traslation layer permenent.\n\nthe fact that nova uses placment is really an implementation detail that im not sure we shoudl be leakign via our api.\n\nthat is just my personal preference but it think in the long run requiring operators to understand placement resouces and how to request them is leaking impleemnation detail that we shoudl be encapsulating.\n\nin the long rune not requireing operator to add plamence stuff to flavor will reduce upgrade impacts if and when new features are added to placment as we can simple updte the translation code without needing to teach the operator how to use placment feature x.\n\nwithout a live/inplace resize option i think assuming operator can just power off tenat vms to do a normal resize\nis a non starter therefore we shoudl avoid change to flavor if we can do this transparently.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_ce93e3a2", "line": 223, "range": {"start_line": 220, "start_character": 0, "end_line": 223, "end_character": 76}, "in_reply_to": "3fce034c_88d633f1", "updated": "2019-04-16 16:45:55.000000000", "message": "Agree we should maintain the translation layer \"forever\". We can support manual specification of placement-ese in flavors, but should strive to provide simpler nova-ese alternatives anywhere we can. In cases where we're trying to support existing use cases with existing syntax, as here, we should use that existing syntax.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_88d633f1", "line": 223, "range": {"start_line": 220, "start_character": 0, "end_line": 223, "end_character": 76}, "in_reply_to": "3fce034c_b84fd990", "updated": "2019-04-16 15:11:07.000000000", "message": "Again, I don't think you can just stop honoring something like hw:numa_nodes, especially not just one release after you introduce the alternative. IMHO, you can:\n\n 1. Continue to honor it, translating it as appropriate\n 2. Refuse to boot if it's set on the flavor/image (and do something for existing instances)\n 3. Survey the entire database for uses of it in existing flavors and instance-embedded flavors to remove all uses\n\nRemember that this could be set in thousands of flavors embedded in instances, and refusing to honor it will cause them all to break on migration.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_d31c066c", "line": 231, "range": {"start_line": 231, "start_character": 2, "end_line": 231, "end_character": 23}, "updated": "2019-04-15 13:27:18.000000000", "message": "again i think we need to use group_policy=none here\nand handel the anti afinty of the cpus in the numa toplogy filter.\n\nidealy by adding the RP uuid to the hostCell object and passing the allocation_summieras/allocation_candates to the nova filters.\n\nwe would still have two resource groups but we would not requrie placemetn to do the anit afinity untill we have a non global group policy\n\nthat could be a post Train optimisation assumeing an enhanced query syntax is added to placement in train.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_877d19e9", "line": 231, "range": {"start_line": 231, "start_character": 2, "end_line": 231, "end_character": 23}, "in_reply_to": "3fce034c_d31c066c", "updated": "2019-04-21 16:46:30.000000000", "message": "The entire purpose of adding the group_policy=isolate stuff into placement was to support these whacky NUMA affinity use cases. Why *wouldn't* we use it?", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8dfadd7421c1453aae589a21382ebc3a235f485e", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_9488be6b", "line": 231, "range": {"start_line": 231, "start_character": 2, "end_line": 231, "end_character": 23}, "in_reply_to": "ffb9cba7_877d19e9", "updated": "2020-01-15 12:48:57.000000000", "message": "we would not use it as it is a global option that would get applied to all groups including those form neutron, cinder and cyborg\n\nmeanign that if cinder resouce were modeled as sharing resouce providers we could not have 2 volums form the same provider or 2 ports on the same network backend, or 2 acclerator from the same inventor in the cyborg case.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_4eedb323", "line": 238, "range": {"start_line": 238, "start_character": 57, "end_line": 238, "end_character": 75}, "updated": "2019-04-16 16:45:55.000000000", "message": "see above.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_0ef7abf7", "line": 243, "updated": "2019-04-16 16:45:55.000000000", "message": "yup, and maintain this translation layer indefinitely.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_13afeee3", "line": 252, "range": {"start_line": 252, "start_character": 2, "end_line": 252, "end_character": 22}, "updated": "2019-04-15 13:27:18.000000000", "message": "same comment as above. i think this need to be none for train\n\nill skip this on the other example but it obviously applies to all uses of group_policy=isolate.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_3390ea4e", "line": 252, "range": {"start_line": 252, "start_character": 34, "end_line": 252, "end_character": 44}, "updated": "2019-04-15 13:27:18.000000000", "message": "we definetly could  just port MEMORY_MB but perhaps we would be better reporting mempages instead. i dont know if you want to declare hugepages out of scope but if we do i want to ensure we do not break them with this proposal.\n\n\nif we intent to support hugepages in this spec\ni would propose 2 new resouce classes\n\nMEM_PAGE_SMALL\nMEM_PAGE_LARGE\n\nwith a trait for the page size.\nHW_MEM_SIZE_1G HW_MEM_SIZE_2M HW_MEM_SIZE_CUSTOM\n\nNon numa guests woudl continue to use MEMORY_MB on host that are not configured to not report meory per numa node\n\nand numa guest woudl use either MEM_PAGE_SMALL or\nMEM_PAGE_LARGE to target host that are configured for numa guests.\n\nToday we tell operators not to mix numa guests with non numa as it leads to OOM events resulting in vms being killed this would provide a way of preventing that in the future.\n\nnote on x86 hugepages are 2MB or 1GB but they can be of different sizes on other architetures HW_MEM_SIZE_CUSTOM\n\nwoudl be a placeholder untill we add standard resouce classes for the other sizes. i we know what they are we could just add them instead and not need to do this.\n\nif we provide a translation for the flavor\n\nby default numa guest woudl request memeroy via the MEM_PAGE_SMALL resouce class.\n\nif hw_mem_page_size=large then it woudl use MEM_PAGE_LARGE\n\nif it set to a value that maps to 1g or 2mb hugepage then the MEM_PAGE_LARGE with the traits request.\n\nif we decide to not provide a translation then the operator can simply specify the resource/tratis request in teh extra spec/image metadata.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "5cc68ea759e04dc0bac8f02286fefdb488c57ec0", "unresolved": false, "patch_set": 14, "id": "ffb9cba7_6761053a", "line": 252, "range": {"start_line": 252, "start_character": 34, "end_line": 252, "end_character": 44}, "in_reply_to": "3fce034c_3390ea4e", "updated": "2019-04-21 16:46:30.000000000", "message": "Please do not use traits for sizes :(\n\nPlease just use resource classes for quantitative things.\n\nI already proposed adding memory pages as resource classes more than 2 years ago:\n\nhttps://review.opendev.org/#/c/442718/", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8dfadd7421c1453aae589a21382ebc3a235f485e", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3431cabc", "line": 252, "range": {"start_line": 252, "start_character": 34, "end_line": 252, "end_character": 44}, "in_reply_to": "ffb9cba7_6761053a", "updated": "2020-01-15 12:48:57.000000000", "message": "the issue with that approch is how do we make hw:mem_page_size=small or hw:mem_page_size=large work?\nthe most common useage is not to specify a specific page size and just specify the catagory e.g. large or small\n\nwhere small is defiend as the smallest page size on a host and large is anything else.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_a8fa0f72", "line": 268, "range": {"start_line": 268, "start_character": 38, "end_line": 268, "end_character": 48}, "updated": "2019-04-16 15:11:07.000000000", "message": "asymmetric", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "171f0bf04e07101f3c7ec1701e5e92cedcca4c1f", "unresolved": false, "patch_set": 14, "id": "3fce034c_482febf5", "line": 303, "range": {"start_line": 303, "start_character": 68, "end_line": 303, "end_character": 79}, "updated": "2019-04-16 15:11:07.000000000", "message": "optionally", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_ee9fbf00", "line": 330, "updated": "2019-04-16 16:45:55.000000000", "message": "- If I set this on a host with only one NUMA cell, do we still create a (linear) nesting structure?\n- So the case you mention on L319-321 would still apply; the only thing you're doing by providing this option is allowing the admin to decide which hosts are going to be configured with NUMA providers and which are not.\n- If you require this option to be set appropriately to create a NUMA-split provider tree, then suddenly flavors requesting hw:numa_nodes={!1} will refuse to land anywhere until that's been done. Are we going to infer numa.resource_classes=[VCPU,MEMORY_MB] for certain hosts based on... some existing configuration?\n\nIn general, I'm not loving this as the way to address the issue described. Instead, this is where you could apply the \"single unit resource split\" translation you (accidentally) introduced at L203. I.e. a flavor with VCPU=X and no hw:numa* would be translated into a GET /a_c request like\n\n ?resources1=VCPU:1\n &resources2=VCPU:1\n &...\n &resources$X=VCPU:1\n &group_policy=none\n\nProblem is, how do you do that ^ for MEMORY_MB? :(", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_73eaf2ac", "line": 338, "range": {"start_line": 338, "start_character": 63, "end_line": 338, "end_character": 67}, "updated": "2019-04-15 13:27:18.000000000", "message": "empty\n\nits a list field so the default should be []", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1a07981c6cbed0687435939832b0281aff103743", "unresolved": false, "patch_set": 14, "id": "3fce034c_53001668", "line": 348, "range": {"start_line": 345, "start_character": 1, "end_line": 348, "end_character": 29}, "updated": "2019-04-15 13:27:18.000000000", "message": "i think we need to have reshapes in both directions if a resource class is added or removed.\n\nalternatively we need to make it very clear that one you add a resource class you can never remove it again which might be a bad user experience. espcially if we change the default in the future and operators want to override that.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_ae28d7e1", "line": 348, "range": {"start_line": 345, "start_character": 1, "end_line": 348, "end_character": 29}, "in_reply_to": "3fce034c_28005f01", "updated": "2019-04-16 16:45:55.000000000", "message": "Note that this also implies allowing reshapes other than just at upgrade boundaries. OR you have to clear out your host and then it's not a reshape, just a normal update_provider_tree. We need to take a stance on which one we're going to support.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "438a42ed2448433ad229fc3f8783663081e0cab4", "unresolved": false, "patch_set": 14, "id": "3fce034c_f1dd5e42", "line": 348, "range": {"start_line": 345, "start_character": 1, "end_line": 348, "end_character": 29}, "in_reply_to": "3fce034c_3185265b", "updated": "2019-04-16 17:07:46.000000000", "message": "++", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_28005f01", "line": 348, "range": {"start_line": 345, "start_character": 1, "end_line": 348, "end_character": 29}, "in_reply_to": "3fce034c_53001668", "updated": "2019-04-16 14:52:14.000000000", "message": "Good point!", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "72cd42685477e18c83d0ebf8da4b1afba0de612b", "unresolved": false, "patch_set": 14, "id": "3fce034c_3185265b", "line": 348, "range": {"start_line": 345, "start_character": 1, "end_line": 348, "end_character": 29}, "in_reply_to": "3fce034c_ae28d7e1", "updated": "2019-04-16 16:57:46.000000000", "message": "I think it is both good and inevitable that reshapes must happen whenever the need for them is detected so it really becomes a question of how that need is signalled and interpreted accurately.\n\nBased on discussions in the past few weeks (see also shared disk), it's pretty clear that at least some of the time the need for a reshape will be the result of turning on a feature via configuration: `i_would_like_you_to_be_aware_{shared_disk,numa_topology} = True` and that config being re-read.", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_cead2332", "line": 411, "range": {"start_line": 410, "start_character": 72, "end_line": 411, "end_character": 7}, "updated": "2019-04-16 16:45:55.000000000", "message": "a permanent", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_6eac2f34", "line": 436, "range": {"start_line": 436, "start_character": 32, "end_line": 436, "end_character": 45}, "updated": "2019-04-16 16:45:55.000000000", "message": "forever", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_4e67f326", "line": 440, "range": {"start_line": 438, "start_character": 7, "end_line": 440, "end_character": 58}, "updated": "2019-04-16 16:45:55.000000000", "message": "X", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7eac80960e415301c7eb4e2562de57ca8d4d883e", "unresolved": false, "patch_set": 14, "id": "3fce034c_08748398", "line": 442, "range": {"start_line": 442, "start_character": 67, "end_line": 442, "end_character": 77}, "updated": "2019-04-16 14:52:14.000000000", "message": "Stein", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_ae7777d4", "line": 475, "range": {"start_line": 475, "start_character": 61, "end_line": 475, "end_character": 65}, "updated": "2019-04-16 16:45:55.000000000", "message": "this", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bba6431532ddb1eac964ebd244a9a8e4184ec09a", "unresolved": false, "patch_set": 14, "id": "3fce034c_8bf94d4e", "line": 495, "range": {"start_line": 495, "start_character": 97, "end_line": 495, "end_character": 101}, "updated": "2019-04-16 16:45:55.000000000", "message": "worth pointing to a more recent release? (here and below)", "commit_id": "6fa84c5b056e1936056b7a448a07754ba124e5c8"}], "specs/ussuri/approved/numa-topology-with-rps.rst": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_92e80b15", "line": 24, "range": {"start_line": 22, "start_character": 57, "end_line": 24, "end_character": 69}, "updated": "2020-01-29 21:23:55.000000000", "message": "FWIW I don't think it makes sense to try to defer that discussion. Whether/how we are able to do that query 100% informs how we do the modeling. We made lots of design decisions and changes to placement to support a particular way of doing the modeling, so we should proceed by doing the modeling that way.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_ac16cb56", "line": 24, "range": {"start_line": 22, "start_character": 57, "end_line": 24, "end_character": 69}, "in_reply_to": "3fa7e38b_92e80b15", "updated": "2020-02-12 09:09:51.000000000", "message": "We agreed at the PTG with Gibi, Stephen and a couple of folks around that given this spec is already huge, we should discuss about the PCI devices affinities by another spec.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_72330fc5", "line": 44, "updated": "2020-01-29 21:23:55.000000000", "message": "I don't think this is true anymore. With rg/rp mappings in the mix, we should be able to do both via the placement query.\n\nI doubt we'll be ready to get rid of the NTF completely in U, especially if we're deferring modeling PCI devices, but we should be able to make a large percentage of it obsolete (or rather, rewrite it to use the placement response instead of doing the figuring over again).", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_ef57d5f4", "line": 44, "in_reply_to": "3fa7e38b_72330fc5", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e458369e99dbd78815235b190140c47299509de1", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_84dbade8", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "updated": "2020-01-15 15:54:55.000000000", "message": "i dont think we should be modeling MEMORY_MB at the numa node level and instead shoudl be modeling mempages at the numa node level.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f767e72a953743bcd7f0f65634110aab03baf3a7", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_c6f57053", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_26756433", "updated": "2020-01-29 11:32:20.000000000", "message": "i had considerd stating that we should also keep VCPU\non the root provider but i was hoping you would not bring that up as i was undecided if i wanted to assert VCPU should also not be on the numa node.\n\nPCPU should definitly be on the numa node and\nhugepages shoudl defintly be on the numa node. both hugepage and pCPUs can only be used by numa instances.\n\nvCPUs and MEMORY_MB can both be used by both numa and  non numa instnace so that make the tricky.\n\ni kind of feel that we might want to consider haveing a SCPU\nresouce class to model shared cpus per numa node.\n\nso when you want a numa affiend cpu you would request SCPU or PCPU resouces and if you wanted a floating instance you would use VCPU.\n\non line 290 below the spec intoduces a resouce_class config option \n\n  [numa]\n  resource_classes = [VCPU, MEMORY_MB, PCPU]\n\nwe could allow operators to choose if they want the host to report numa local cpus via that\n\ne.g.\n  [numa]\n  resource_classes = [SCPU, MEMORY_MB, PCPU]\n\nfrom a nova side when we are traslating the flavor and image into resouce request we simple need to see if the instance has a numa toplogy to determin if it should be vcpu or scpu.\n\ni kind of wanted to think about this a little more before proposing that as a solution but yes the same issue exists for cpus.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "3bcb6dae65937ef97502fd617ec7a9338578faff", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_fe99086a", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_43040713", "updated": "2020-01-29 21:30:32.000000000", "message": "I forgot to mention that the NUMA providers should get a HW_NUMA_ROOT trait. This is used in the etherpad. For further explanation of the design motivation behind it, see the placement docs we added around same_subtree: https://docs.openstack.org/placement/latest/user/provider-tree.html#filtering-by-same-subtree", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "3e10c36f82f9b0883e9d86b8da58d7b75409102e", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_26756433", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_660a7cd0", "updated": "2020-01-29 11:09:40.000000000", "message": "> if we move MEMORY_MB to the numa node we need to make all vms have\n > a numa topology and affine them to a numa nodes that match there\n > allocations. we can nolonger allow the vm memory to float. i would\n > be ok with doing that but other would not.\n > \n > if we want to allow vm memory to continue to float across numa\n > nodes then MEMORY_MB has to stay on the root provider.\n\ndon't we have this same issue with CPUs?", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_a97ff913", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_8242240c", "updated": "2020-01-29 10:27:17.000000000", "message": "Yeah, that's the exact reason why I think we should begin to accept MEMORY_MB resources for NUMA.\n\nSee also L156 for this.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41a959a66fcbdd0b030539e3ec6cd05efa3d3132", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_49cc4589", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_8242240c", "updated": "2020-01-28 13:46:50.000000000", "message": "am kind of.\n\nwhen using the non-granuarl request group\ne.g. resouces:MEMORY_MB=512\n\nwhile each resources class can be allocated form different RP the resocues for a singel resouces class cannot be split.\n\nso if you previously had a vm withou a numa toplogy that was floating it could be useing memory form both numa nodes.\nif it was using more memory then could fit in one numa node then after moving the MEMORY_MB to the numa node we could nolonger fit it on the host since it cant be split.\n\ni think i would prefer to keep MEMORY_MB solly for non numa instnace and tracking only 4k memory.\n\nthen have numa local mempage tracking based on the mempage info form the Resource tracker per numa node.\ni dont think we really shoudl model memory per numa node without mempage support.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "34ddc8109dee5eb0e2e2ee42fc8b45db96206371", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_8242240c", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_84dbade8", "updated": "2020-01-27 17:03:44.000000000", "message": "I think this is part of the iterative approach. First just move existing memory resources to numa nodes then later split them into separate pages.\n\n@Sean: or do you have something specific against MEMORY_MB under NUMA?\n\n// later\n\nWith the above tree we commit to a solution where (temporarily) both placement and the NumaTopologyFilter is needed to make scheduling decision. Which also means that filter might need to work on allocation candidates instead of hosts. But I think we discussed this before.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "653276d0d9e9ede01dd0b2c4436fe47203f92800", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_660a7cd0", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_a97ff913", "updated": "2020-01-29 11:01:02.000000000", "message": "if we move MEMORY_MB to the numa node we need to make all vms have a numa topology and affine them to a numa nodes that match there allocations. we can nolonger allow the vm memory to float. i would be ok with doing that but other would not.\n\nif we want to allow vm memory to continue to float across numa nodes then MEMORY_MB has to stay on the root provider.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_43040713", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_c6f57053", "updated": "2020-01-29 21:23:55.000000000", "message": "Summarizing discussion [1] and etherpad [2], we're proposing a three-tiered model.\n- Memory is provided as MEMORY_MB resource across grandchild providers (children of the NUMA RPs), one per page size.\n- Each such provider has a standard trait representing the \"abstract\" page size: MEMORY_PAGE_SIZE_SMALL/_LARGE\n- Each such provider has a custom trait following a predictable pattern representing the discrete page size in KB, e.g. CUSTOM_MEMORY_PAGE_SIZE_1024 means 1MB pages.\n- The step_size of the inventory is set to the page size in MB, or 1 if pages are less than 1MB, since we only allow granularity of MB in the flavor anyway.\n\nSalient design points:\n- We had agreed previously that we would force deployments to be segregated such that VMs requesting a NUMA topology would all/only land on NUMA-modeled hosts, and vice versa. So we don't need to worry about \"fitting\" a \"simple\" VM on a NUMA-modeled host. This is also why we abandoned the idea of can_split [3], which would be required to make that work.\n- If you don't ask for large pages explicitly, you get small pages. (This is what we do today.)\n- If you ask for large pages (but not a specific size), you always get all of one page size, never mixed page sizes, even if those exist on the host. (This is what we support today.)\n\nSee the etherpad for a sample host model and examples of how different flavors need to be translated to placement-ese.\n\nThis model addresses (or makes moot) many of the issues in flight below, which I'll mark accordingly.\n\n[1] http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-01-29.log.html#t2020-01-29T16:42:32\n[2] https://etherpad.openstack.org/p/mem_page_size_and_placement\n[3] https://review.opendev.org/658510", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "72248e74fec053967426d0cc9067aa1d1e75c233", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_c087710a", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_cef7b4d1", "updated": "2020-01-31 11:35:28.000000000", "message": "i think the 3 layer approch also solves any issue related to vcpus too by the way. not because of the 3 layer approch but rather because we are declaring that you will have numa hosts for numa instnaces and non numa enabled host for floating instances.  so we dont strictly need to have an SCPU that is a numa affined version of a VCPU and only report one or the other. we still could do that but we don't need too.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "2d7319e4acdcf70950cbf3eef423ac6d7bec5ae8", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_cef7b4d1", "line": 126, "range": {"start_line": 126, "start_character": 4, "end_line": 126, "end_character": 59}, "in_reply_to": "3fa7e38b_fe99086a", "updated": "2020-01-30 13:18:20.000000000", "message": "Based on the etherpad and the summary the proposed model looks good to me!", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "34ddc8109dee5eb0e2e2ee42fc8b45db96206371", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_c2557cc2", "line": 135, "updated": "2020-01-27 17:03:44.000000000", "message": "+1", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "653276d0d9e9ede01dd0b2c4436fe47203f92800", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_06706872", "line": 160, "range": {"start_line": 156, "start_character": 0, "end_line": 160, "end_character": 74}, "updated": "2020-01-29 11:01:02.000000000", "message": "to be clear i was stating above that i dont think its accpetable to defer mempage/hugepage support to another sepc.\n\nif we model memory per numa node we shoudl model it properly per page size form the start so either we only do CPUs in this spec or we do cpu and memroy but if we do memory we have to do hugepage too.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_834c3f75", "line": 160, "range": {"start_line": 156, "start_character": 0, "end_line": 160, "end_character": 74}, "in_reply_to": "3fa7e38b_06706872", "updated": "2020-01-29 21:23:55.000000000", "message": "See L126", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "34ddc8109dee5eb0e2e2ee42fc8b45db96206371", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_828c6439", "line": 196, "updated": "2020-01-27 17:03:44.000000000", "message": "Still group_policy=isolate will act on the resource groups coming from neutron. If a single server can have two qos ports with the same vnic_type and same physnet then the resulting placement query might fail due to isolating the two groups that might target the same provider.\nI think the final solution is 'can_split' but that has not been implemented yet in placement \n\nhttps://review.opendev.org/#/c/658510/", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_6397c39d", "line": 196, "in_reply_to": "3fa7e38b_5b3e39e3", "updated": "2020-01-29 21:23:55.000000000", "message": "See L126 and the examples in the etherpad. TL;DR: group_policy is meaningless/irrelevant in the proposed model, so we can just leave it alone and let it be whatever is specified by the flavor/port or defaulted or whatever.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_2f8c0d80", "line": 196, "in_reply_to": "3fa7e38b_6397c39d", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_5b3e39e3", "line": 196, "in_reply_to": "3fa7e38b_828c6439", "updated": "2020-01-29 10:27:17.000000000", "message": "Argh, need to consider some alternative approach then.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "41a959a66fcbdd0b030539e3ec6cd05efa3d3132", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_89a31db0", "line": 196, "in_reply_to": "3fa7e38b_828c6439", "updated": "2020-01-28 13:46:50.000000000", "message": "no i dont think can split is the solution. i think we need to consider how we use groups very carfully.\n\ncan split was for a different usecase.\nand correct it is not supproted in placmenet yet.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_dec1ac82", "line": 213, "range": {"start_line": 211, "start_character": 0, "end_line": 213, "end_character": 60}, "updated": "2020-01-29 21:23:55.000000000", "message": "I believe strongly that we should be primarily focused on supporting the existing hw:numa* flavor syntax and translating that to placement-ese under the covers, which seems to be what you're doing here, so ++. We should *not* try to mix and match flavor-ese and placement-ese, and we should not try to document how the user can write their flavor in placement-ese to achieve their desired topology.\n\n(I would even support *forbidding* granular request groups in the flavor. This would be a regression, as we technically support them today; but I can't imagine anyone is actually using them for any reasonable purpose.)", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_72489688", "line": 213, "range": {"start_line": 211, "start_character": 0, "end_line": 213, "end_character": 60}, "in_reply_to": "3fa7e38b_dec1ac82", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_1e0744ca", "line": 271, "range": {"start_line": 271, "start_character": 0, "end_line": 271, "end_character": 36}, "updated": "2020-01-29 21:23:55.000000000", "message": "Okay, so while I appreciate the flexibility this gives us, I'm not convinced it's necessary or desirable if we go with the modeling suggested at L126. Since we decided on the segregation thing, we do need a toggle, but I think it may be better if it was all-or-nothing. It would definitely simplify the test/support surface, versus trying to make sure our flavor-to-placement translations work for all possible permutations.\n\n(The upgrade path to a world where devices become NUMA affined also works seamlessly in this case, I believe. In a subsequent release when computes start putting VGPUs in grandchild providers under NUMA nodes, a flavor can start demanding affinity, which will simply cause the VGPU's request group to be added to the same_subtree with the other groups for its NUMA node. That flavor will only be able to land on computes that have already upgraded, which is as it should be. Legacy flavors that don't demand affinity won't muck with same_subtree, and the VGPU can be provided from wherever, on both old and new computes.)", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "a6759df4545cd182688633f2f29a839013f74ca4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_a5284aed", "line": 290, "updated": "2020-01-31 03:33:29.000000000", "message": "Does this need to be a list? Seems like it's an all-or-nothing thing... Like, there won't be a situation where PCPU inventories will be on the NUMA nodes, but hte MEMORY_MB inventory will be on the compute node itself.\n\n<later>, oh, for upgrade considerations...", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "34ddc8109dee5eb0e2e2ee42fc8b45db96206371", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_e2b438d6", "line": 328, "updated": "2020-01-27 17:03:44.000000000", "message": "Doesn't the resource_classes = VGPU means the VGPU resources needs to be under NUMA nodes? On this picture the VGPU resources are not under the NUMA node", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "f2f9750c222282fb4e8b1d31949f8c36928c9c46", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_4991a552", "line": 328, "in_reply_to": "3fa7e38b_e2b438d6", "updated": "2020-01-29 10:27:17.000000000", "message": "That's normal : we don't plan to have VGPU resources to be parenting by NUMA RPs for this spec. \nAs you can see for the option, 'VGPU' won't be a possible value by this spec (at least until we discuss by another spec how to work with PCI devices)", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "602ac5baefc534e71f4b548dcd73657555ab04a9", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_9e96d449", "line": 369, "range": {"start_line": 368, "start_character": 10, "end_line": 369, "end_character": 6}, "updated": "2020-01-29 21:23:55.000000000", "message": "As noted above, I don't like this idea at all. If we don't actually forbid it in code, we should discourage it (or at least not *en*courage it) via documentation.", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "a6759df4545cd182688633f2f29a839013f74ca4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_65325260", "line": 415, "updated": "2020-01-31 03:33:29.000000000", "message": "lulz", "commit_id": "e82d864d931155b67daf8b1495ba64a1548b0586"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_7bb6e7fe", "line": 25, "range": {"start_line": 22, "start_character": 57, "end_line": 25, "end_character": 14}, "updated": "2020-02-10 18:52:43.000000000", "message": "This statement isn't true at this point. The main thrust of this design is proc/mem affinity. (The subsequent statement about deferring device affinity is still true for now.)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f3d433be", "line": 25, "range": {"start_line": 22, "start_character": 57, "end_line": 25, "end_character": 14}, "in_reply_to": "3fa7e38b_7bb6e7fe", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ece3ff01", "line": 34, "range": {"start_line": 34, "start_character": 54, "end_line": 34, "end_character": 62}, "updated": "2020-02-10 20:50:41.000000000", "message": "nit: \"Additionally\", not \"actually\"", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_53cc2732", "line": 34, "range": {"start_line": 34, "start_character": 54, "end_line": 34, "end_character": 62}, "in_reply_to": "3fa7e38b_ece3ff01", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8a7901fb", "line": 34, "range": {"start_line": 34, "start_character": 54, "end_line": 34, "end_character": 62}, "in_reply_to": "3fa7e38b_ece3ff01", "updated": "2020-02-11 14:14:22.000000000", "message": "both would work.\nthe previous section does not say how it check the resources.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1bf1f396", "line": 44, "range": {"start_line": 42, "start_character": 30, "end_line": 44, "end_character": 53}, "updated": "2020-02-10 18:52:43.000000000", "message": "Again, this is no longer accurate. The NTF will still have a role to play, but Placement *will* be addressing both of the above (the 'whether' and the 'which').\n\nTo expand a bit, the filter will:\n- still have exclusive control over *device* affinity;\n- sometimes (when anti-affinity is needed) be used to decide which of several allocation candidates the scheduler picks;\n- be used on the host to decide which specific CPUs and memory pages are assigned to the guest -- but now only within the bounds of the subset already allocated from Placement.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "cf99e147fc9799b4474e25963be47c760961b344", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d347b051", "line": 44, "range": {"start_line": 42, "start_character": 30, "end_line": 44, "end_character": 53}, "in_reply_to": "3fa7e38b_104bfe28", "updated": "2020-02-11 15:24:29.000000000", "message": "no the NTF calls shared code in the nova.virt.hardware module which is called form both the compute, scheduler and api.\n\nthe NTF works by invoking numa_fit_instance_to_host\nwhich which is the same code the that the compute agent uses\n\nhttps://github.com/openstack/nova/blob/4bdecee385ccf68b1b27ae9ead9a72861ea6cc8d/nova/virt/hardware.py#L1999\n\nif that function can fit the requested numa toplogy to the host it retuns a fully populated InstanceNUMATopology object\nif it can it and returns None if it cant. that is what the numa toplogy filter uses to determin if the host passes.\n\n\nhttps://github.com/openstack/nova/blob/4bdecee385ccf68b1b27ae9ead9a72861ea6cc8d/nova/scheduler/filters/numa_topology_filter.py#L100-L122\n\nthe compute manger calls the same function here\nhttps://github.com/openstack/nova/blob/4bdecee385ccf68b1b27ae9ead9a72861ea6cc8d/nova/scheduler/filters/numa_topology_filter.py#L100-L122\n\nas part of the construction of a resouce tracker claim.\n\ni would prefer to do this in the conductor before we call spawn eventually but for now we end up doing fit to host part twice.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8e8ef823", "line": 44, "range": {"start_line": 42, "start_character": 30, "end_line": 44, "end_character": 53}, "in_reply_to": "3fa7e38b_1bf1f396", "updated": "2020-02-12 09:09:51.000000000", "message": "> Again, this is no longer accurate. The NTF will still have a role\n > to play, but Placement *will* be addressing both of the above (the\n > 'whether' and the 'which').\n > \n > To expand a bit, the filter will:\n > - still have exclusive control over *device* affinity;\n > - sometimes (when anti-affinity is needed) be used to decide which\n > of several allocation candidates the scheduler picks;\n > - be used on the host to decide which specific CPUs and memory\n > pages are assigned to the guest -- but now only within the bounds\n > of the subset already allocated from Placement.\n\nI rephrased it completely.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ca8ff9d0", "line": 44, "range": {"start_line": 42, "start_character": 30, "end_line": 44, "end_character": 53}, "in_reply_to": "3fa7e38b_1bf1f396", "updated": "2020-02-11 14:14:22.000000000", "message": "yes although the actual assignment will still be done on the compute node not in the filter. since we do not caim the resource tracker until we do the downcall all the filter does is say we could claim them. the claiming gets done by the compute manager during spawn.\n\ni have expressed interest in doing this in the conductor on the past but people keep telling me to wait for placement to fix it even though it cant by design since assignment is out of scope.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_104bfe28", "line": 44, "range": {"start_line": 42, "start_character": 30, "end_line": 44, "end_character": 53}, "in_reply_to": "3fa7e38b_ca8ff9d0", "updated": "2020-02-11 14:39:02.000000000", "message": "I thought the NTF runs on both the scheduler and the compute", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9b2ac3e3", "line": 48, "range": {"start_line": 48, "start_character": 27, "end_line": 48, "end_character": 44}, "updated": "2020-02-10 18:52:43.000000000", "message": "technically \"resource provider subtree\" now that we're splitting proc and mem into separate providers.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8eb7d8d7", "line": 48, "range": {"start_line": 48, "start_character": 27, "end_line": 48, "end_character": 44}, "in_reply_to": "3fa7e38b_9b2ac3e3", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ecbc5fd6", "line": 50, "range": {"start_line": 50, "start_character": 18, "end_line": 50, "end_character": 27}, "updated": "2020-02-10 20:50:41.000000000", "message": "\"allocated\" has a very specific meaning in Placement-world, I think you mean \"requires\" or something similar?", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0a8991c6", "line": 50, "range": {"start_line": 50, "start_character": 18, "end_line": 50, "end_character": 27}, "in_reply_to": "3fa7e38b_ecbc5fd6", "updated": "2020-02-11 14:14:22.000000000", "message": "no allocated is correct in this case as he is refering to placement allcoations in this context.\n\nthis is not refering to cpu assinment on the host.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_aca0a7a5", "line": 52, "range": {"start_line": 52, "start_character": 27, "end_line": 52, "end_character": 54}, "updated": "2020-02-10 20:50:41.000000000", "message": "aka \"request allocation candidates\"?", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2edd8411", "line": 52, "range": {"start_line": 52, "start_character": 27, "end_line": 52, "end_character": 54}, "in_reply_to": "3fa7e38b_aca0a7a5", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ea62f514", "line": 52, "range": {"start_line": 52, "start_character": 27, "end_line": 52, "end_character": 54}, "in_reply_to": "3fa7e38b_aca0a7a5", "updated": "2020-02-11 14:14:22.000000000", "message": "no here he is referign to usign the placement usage api endpoint to get capsity infomation related to the cpus and memory exctra per numa node/RP.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0ec8c84a", "line": 54, "updated": "2020-02-12 09:09:51.000000000", "message": "I completely removed this paragraph which was redundant.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6ca62fc2", "line": 55, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4ee240d5", "line": 55, "in_reply_to": "3fa7e38b_6ca62fc2", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8c84cb0f", "line": 82, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cecdd05b", "line": 82, "in_reply_to": "3fa7e38b_8c84cb0f", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ec6a1f4e", "line": 91, "range": {"start_line": 90, "start_character": 0, "end_line": 91, "end_character": 44}, "updated": "2020-02-10 20:50:41.000000000", "message": "This doesn't quite fit - above you're talking about *host* NUMA topology (in terms of memory access latency), but the hw:numa_cpus and hw:numa_mem are about *guest* NUMA topology.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6e25bc15", "line": 91, "range": {"start_line": 90, "start_character": 0, "end_line": 91, "end_character": 44}, "in_reply_to": "3fa7e38b_ec6a1f4e", "updated": "2020-02-12 09:09:51.000000000", "message": "I just added the word \"guest NUMA topology\" to clarify.\nHTH.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_fb4f37bc", "line": 113, "range": {"start_line": 112, "start_character": 49, "end_line": 113, "end_character": 36}, "updated": "2020-02-10 18:52:43.000000000", "message": "This is confusing since the diagram doesn't show any devices. The note on L147-151 already explains that we're not messing with those in U, so I think you should omit references to devices here.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0e368850", "line": 113, "range": {"start_line": 112, "start_character": 49, "end_line": 113, "end_character": 36}, "in_reply_to": "3fa7e38b_0c9d3b57", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_aa363d00", "line": 113, "range": {"start_line": 112, "start_character": 49, "end_line": 113, "end_character": 36}, "in_reply_to": "3fa7e38b_0c9d3b57", "updated": "2020-02-11 14:14:22.000000000", "message": "the\n  |\n /+\\\n\nunder the root rp is there to model sub devices.\nthat is why i added it in the etherpad.\nbut yes we could remove this. i think sylvain was just trying to say that there will be child RP for devices(vGPUs) and for numa nodes beneath the root RP.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0c9d3b57", "line": 113, "range": {"start_line": 112, "start_character": 49, "end_line": 113, "end_character": 36}, "in_reply_to": "3fa7e38b_fb4f37bc", "updated": "2020-02-10 20:50:41.000000000", "message": "Yeah, drop this please :)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_eccd3f5b", "line": 142, "updated": "2020-02-10 20:50:41.000000000", "message": "So, for anyone who has context from reviewing this spec previously, they'll immediately understand what those MEMORY_ RPs are, but for a first time reader they appear out of the blue - would need the explanation of why we're doing it this way moved before this graphic.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ee59ac5b", "line": 142, "in_reply_to": "3fa7e38b_eccd3f5b", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8d059bc2", "line": 142, "in_reply_to": "3fa7e38b_eccd3f5b", "updated": "2020-02-11 14:14:22.000000000", "message": "for anyone following this topic for the last few years i presented this exact toplogy in at least twice before. The first time publically was as a motivating usecase for why we needed to add nested resouce providers to placment back at the qeens ptg when we had this lovely discussion \nhttps://etherpad.openstack.org/p/nova-ptg-queens-generic-device-management\n\ni have litrally drawn this on a whiteboad at at least 2 ptgs after that and many internal meetups over the years.\n\nthis is the frist time it has been proposed since we have had the ablity to actully query nested resouces, since i have not mentioned this design agin upstream since i left intel until now at least in the context of mempages.\n\ni did draw a similar diagram at the denver ptg where i noted that the cpu RPs should also be moved to child RP of the numa node to model l3 cache affintiy for CAT but we decided to not add supprot for cache allocation to nova.\n\nSo i hope this is familiar to most people as this is how i have wanted to model memory since before we agreed to add nesting to placement. That said if you were just looking at the spec and had not been following irc then it might not be obvious why we are going back to this design.\n\nthe expanded version of this also contains device rps for sriov and would move the cpus to cache region RP leaving the numa RP with no inventories but that is out of scope for this spec.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6cfb8f79", "line": 149, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_29181e70", "line": 149, "in_reply_to": "3fa7e38b_6cfb8f79", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_bbda1fe4", "line": 168, "range": {"start_line": 168, "start_character": 45, "end_line": 168, "end_character": 57}, "updated": "2020-02-10 18:52:43.000000000", "message": "nts: be on the lookout for explanations of these traits and their purpose in the query\n\n[Later] Yeah, I didn't see that anywhere. We should explain why HW_NUMA_ROOT needs to exist and what it's used for. Similarly below we should justify the page size traits.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8927d2b5", "line": 168, "range": {"start_line": 168, "start_character": 45, "end_line": 168, "end_character": 57}, "in_reply_to": "3fa7e38b_bbda1fe4", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9bef2385", "line": 176, "range": {"start_line": 176, "start_character": 62, "end_line": 176, "end_character": 63}, "updated": "2020-02-10 18:52:43.000000000", "message": "...in that specific page size", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9b9403e9", "line": 182, "range": {"start_line": 182, "start_character": 73, "end_line": 182, "end_character": 77}, "updated": "2020-02-10 18:52:43.000000000", "message": "...in $unit (I think we decided KB).\n\nImportantly, the naming of this trait has to be deterministic, since both the virt driver and the scheduler need to be able to generate it independently and get the same string.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0938c2c8", "line": 182, "range": {"start_line": 182, "start_character": 73, "end_line": 182, "end_character": 77}, "in_reply_to": "3fa7e38b_2c9a775f", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "31faa37c3b6c0c441854cf92b02098c0f8852140", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2c9a775f", "line": 182, "range": {"start_line": 182, "start_character": 73, "end_line": 182, "end_character": 77}, "in_reply_to": "3fa7e38b_9b9403e9", "updated": "2020-02-10 20:19:04.000000000", "message": "yes in kb because the schduler need to be virt diriver indepenent so we need something that will work for all hyperivros and since the kerenl use 4KB pages by default we cannot have a granularity larger the KB as our minium unit size.\n\nin the specific case of the libvirt driver this is also conviant since it nativly reports memory in KB and the api allows page size to be specified in KB too.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4c04936c", "line": 190, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_89759299", "line": 190, "in_reply_to": "3fa7e38b_4c04936c", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6c094f81", "line": 202, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2966def1", "line": 202, "in_reply_to": "3fa7e38b_6c094f81", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_de56e9f9", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "updated": "2020-02-10 18:52:43.000000000", "message": "We talked with Dan about the long-term goal being that all hosts present NUMA topologies, when we've somehow solved the packing problem such that we don't bounce non-NUMA-aware workloads as described on L202-4. That being the case, perhaps we should present this a bit differently. Here's an idea for discussion:\n\n [workarounds]\n disable_numa_provider_topology = <bool> (default True for U)\n\nThis has the exact same affect as described, but it sets the appropriate expectation for the future.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_a9f88ec1", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "in_reply_to": "3fa7e38b_6c414f62", "updated": "2020-02-12 09:09:51.000000000", "message": "> Thinking out loud here - with this option named as proposed, how do\n > we handle the upgrade path for a future when devices have NUMA\n > affinity in placement? Do we even need anything besides reshaping\n > the provider tree to put the devices under their NUMA nodes, and\n > some placement magic for the optional affinity part? Maybe we won't\n > need any further config options besides this one...\n\nYup, because it should be the virt driver responsibility to identify which NUMA node the device is colocated with and accordinglu reshape the RP (say a pGPU) to be a child RP of the NUMA node.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6d75bf32", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "in_reply_to": "3fa7e38b_6c414f62", "updated": "2020-02-11 14:14:22.000000000", "message": "we should not need anything beside this option no.\n\nnext cycle we will need to do a reshape to move the gpus from there current location as child rps of the root to beneth the numa nodes.\n\ni have previously susgested just changeing the parrent RP uuid on the existing RPs as we have 1 RP per phyical GPU but that is not supported by placement so we will need to create new RP and reshape the allcoations.\n\nwe will start doing that if numa reporting is enabled which by V should be the default. if its disable they can continue to live as child RPs of the root RP.\n\nwe do not require numa afinity for gpus that is fine for now.\nthat said i know that people want to enforce that at some point.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6c414f62", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "in_reply_to": "3fa7e38b_de56e9f9", "updated": "2020-02-10 20:50:41.000000000", "message": "Thinking out loud here - with this option named as proposed, how do we handle the upgrade path for a future when devices have NUMA affinity in placement? Do we even need anything besides reshaping the provider tree to put the devices under their NUMA nodes, and some placement magic for the optional affinity part? Maybe we won't need any further config options besides this one...", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "31faa37c3b6c0c441854cf92b02098c0f8852140", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ec845f59", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "in_reply_to": "3fa7e38b_de56e9f9", "updated": "2020-02-10 20:19:04.000000000", "message": "it feels a little odd to have a workaround config option enabled by default in a release.\n\ni would suggest\n\n[compute]\nplacement_numa_reporting=Ture|False \n\nDefault to False for U and in V we default to True  and deprecate the option to remove it in W+\n\ni do think we should intend to enable numa reporting by default in the medium term.\n\nwith that said while i fine it weird to enable a workaround  by default i would be ok with that approach too.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_69285635", "line": 212, "range": {"start_line": 212, "start_character": 2, "end_line": 212, "end_character": 50}, "in_reply_to": "3fa7e38b_ec845f59", "updated": "2020-02-12 09:09:51.000000000", "message": "> it feels a little odd to have a workaround config option enabled by\n > default in a release.\n > \n > i would suggest\n > \n > [compute]\n > placement_numa_reporting=Ture|False\n > \n > Default to False for U and in V we default to True  and deprecate\n > the option to remove it in W+\n > \n > i do think we should intend to enable numa reporting by default in\n > the medium term.\n > \n > with that said while i fine it weird to enable a workaround  by\n > default i would be ok with that approach too.\n\nOk, I'll propose the [workarounds] trick.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_5228af83", "line": 223, "updated": "2020-02-10 17:01:42.000000000", "message": "So If I have a deployment that has a bunch of NUMA aware hosts and upgrade to Ussuri with this feature implemented then the NUMA aware part of my cloud will act totally resource deprived until I reconfigure every affected compute hosts. Can we add an upgrade check that prints out those hosts that are NUMA aware based on that there are huge pages or pinned CPUs allocated on the host but are doesn't have the enable_numa_topology set to True in the config?\n\nThis way I can see which compute needs to be reconfigured.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f359935b", "line": 223, "in_reply_to": "3fa7e38b_0c8f7b2f", "updated": "2020-02-11 09:52:01.000000000", "message": "> all systemd that are likely to be in production are numa hosts.\n > that was true 5 years ago letalone today.\n > \n\nDoes it mean that potentially all host needs to be re-shaped to continue being NUMA-aware? But then why we want to keep host not reshaped? \n\nI think there are host today where the machine is NUMA aware but _it is not used to host NUMA-aware workloads_ and those are the host we don't want to reshape. I would like to have a tool that tells me which hosts in my deployment needs to be re-shaped and which not.\n\n > we could maybe infer that the host is a numa host if it had\n > cpu_dedicated_set defiend since those cpus can only be consumed by\n > numa affiend vms.\n > we cannot use the absence of cpu_dedicated_set to infer its not a\n > numa host. nor can we use the presence or absence of\n > hugepages as they could be used for the hosts.\n > \n > so not in general we cant detect if a host is intended to be used\n > for numa vms. we could print out a list of host that have vms with\n > a numa toplogy but that could miss hosts if you are packign rather\n > then spreading vms.\n\nI think if today I have a host where there are 1G huge pages available to nova VMs then that host needs to be re-shaped to keep the 1G huge pages available for VMs. Isn't it?", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "cf99e147fc9799b4474e25963be47c760961b344", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_33e4040b", "line": 223, "in_reply_to": "3fa7e38b_0d252bc0", "updated": "2020-02-11 15:24:29.000000000", "message": "ya the tool would basicaly be a nova status check or similar that would advice that X host should be mark as reporting numa because we have detected that they may be running numa workloads or have configured resouces to be avaiable that are only consumable with numa instance in the case of PCPUs and pmem.\n\nif people have been using aggreate as advised then the tool is not needed. for those that have not been it might be of some use but i agree it should not do the reshap or configure it jsut list the host which appear to be configured for numa and leave the rest to the operator to do.\n\nim not sure its actually need but if it is limited in scope then fine.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0d8d9b0a14fc48e85c28eb634664abb695bb0f40", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_de0497c7", "line": 223, "in_reply_to": "3fa7e38b_33e4040b", "updated": "2020-02-11 16:06:07.000000000", "message": "I might chasing a non existing use case here. So I treat this as a low prio thing and won't block on it. BUT assume that today I have a deployment where I host both NUMA aware and non-NUMA workloads (on different hosts). I decide to upgrade to Ussuri. As I did not notice the reno about this change I will go with the default config (so disable_placement_numa_reporting = False). This means I will lose all the NUMA aware capacity of my cloud. Which sounds bad to me. I would develop some kind of warning for the deployer if possible. \n\nHm, or will I loose all the NUMA aware capacity? Will the Ussuri scheduler starts generating the new placement requests _before_ the computes are all upgraded to Ussuri and had a chance to re-shape?\n\n// later \n\nI see the new Upgrade impact section with a fallback mechanism. That solves my use case. So I rest my case.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "31faa37c3b6c0c441854cf92b02098c0f8852140", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0c8f7b2f", "line": 223, "in_reply_to": "3fa7e38b_5228af83", "updated": "2020-02-10 20:19:04.000000000", "message": "all systemd that are likely to be in production are numa hosts. that was true 5 years ago letalone today.\n\nwe could maybe infer that the host is a numa host if it had cpu_dedicated_set defiend since those cpus can only be consumed by numa affiend vms.\nwe cannot use the absence of cpu_dedicated_set to infer its not a numa host. nor can we use the presence or absence of\nhugepages as they could be used for the hosts.\n\nso not in general we cant detect if a host is intended to be used for numa vms. we could print out a list of host that have vms with a numa toplogy but that could miss hosts if you are packign rather then spreading vms.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_09752233", "line": 223, "in_reply_to": "3fa7e38b_f359935b", "updated": "2020-02-12 09:09:51.000000000", "message": "> I think if today I have a host where there are 1G huge pages\n > available to nova VMs then that host needs to be re-shaped to keep\n > the 1G huge pages available for VMs. Isn't it?\n\nYes, for large pages, you'll be asked to reshape your hosts.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0d252bc0", "line": 223, "in_reply_to": "3fa7e38b_f359935b", "updated": "2020-02-11 14:39:02.000000000", "message": "Maybe I was misunderstanding the purpose of the tool.\n\nI thought we had seen a common practice of clouds already being segregated along AZ lines for this purpose. So the tool would just be for deployments that don't do that, correct?\n\nIf so, the tool is really just advisory, it doesn't need to be perfect. We can use the techniques discussed above, but document the other factors that should influence the operator's decision whether to reshape.\n\nTo be clear, the tool should *not* automatically reshape (or configure for reshaping) hosts it identifies. It just reports.\n\nNot sure if I've addressed the concern here.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_841337b7", "line": 223, "in_reply_to": "3fa7e38b_f359935b", "updated": "2020-02-11 14:14:22.000000000", "message": "there are host that have a numa toplogy that are not used for numa workloads. every intel server with more then 1 socket prdouced since nehelem in 2008 has a numa topology.\nthat also holds more or less for other architectures too so its been over a decade since it was common not to have a numa topology in the server world and its even common to have numa hardware in the client desktop space now.\n\nthe only reason to have config attribute is  so you can declare this numa capable host will not be used for numa workloads.\n\nthere are two case where if a resouce is present we can know that it is a numa hosts, PCPU(controlled by cpu_dedicated_set and PMEM(persisten memory). both PMEM and PCPU can only be used by vms with a numa toplogy.\n\nhugepages may or may not be used by vms even if they are availabel on the host. unless hw:mem_page_size=large is defiend in the flavor or image then a vm landing on that host wont use the huge pages.\n\nyou can have a host with a numa workload without using any of those resocues e.g. a vm with explict 4k memory (hw:mem_page_size=small) or explict numa (hw:numa_nodes=<anything>) this is often done for host with sriov devices.\n\nso from only looking at the individual host we cant ever know for sure that it wont have a numa workload even if it has only 1 numa node reported. since there is no standard way to declare the host aggregate that is used to partition hosts we cant rely on that to create a tool.\n\nwe might be able to develop a huristic that guess based on a number of factors, e.g. if PMEM or PCPUs are present its defiantly a numa hosts.\n\nif it has hugepages its likely a numa hosts but they may not be available used by vms.There is technically a reserved hugepage config option to say these hugepages are not availabel for vms. im not sure that people use it since the recomendation before it was added was to modify the to restrict which hugetlbfs mount point could be used by vms.\nso you would mount the hugepage to be used for vms in one mount point and the hugepages to be used for the host in another.\n\nif all vms in a host aggregate have a numa toplogy then we could maybe infer all hosts in that host aggreated are numa hosts. a slightly more conservative heuristic would assume that any host that has a vm with a numa toplogy is a numa host and report it as such.\n\nputting all of that together we would have to report a host as a numa host if the following conditions were met.\nthe host had PCPU,PMEM or hugepages, had a vm with a numa toplogy or was a member of a host aggreate where all vms had a numa toplogy.\n\noperators should know this already without the aid of a tool\nif they dont they have been negligent int the deployment of there cloud because they have been required to partion hosts based on numa since it was added in juno? maybe before that.\n\nif the above was acceptable we could maybe provide a tool to indicate its likely a numa host but i think its unreasonable to expect a tool that will tell you definitively.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_acc66714", "line": 226, "updated": "2020-02-10 20:50:41.000000000", "message": "This might be an implementation detail, but how will we reshape PCPU inventories? Currently they're all on the compute node / root RP, so if you have instances using, respectively, 4, 8, and 16 PCPUs, the RP will have an total of 28 PCPUs allocated.\n\nWhen we reshape, we can't randomly split this allocation of 28 CPUs across child NUMA node RPs - we need to know which instance is affined to which host NUMA node, and put its PCPU allocations against the correct NUMA node RP.\n\nI guess this is doable, and maybe we don't need to design it here in this spec, but it feels like a pretty big deal.\n\nPS: it also applies to memory pages.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_09c76267", "line": 226, "in_reply_to": "3fa7e38b_53366703", "updated": "2020-02-12 09:09:51.000000000", "message": "Yup, indeed, it *has* to be some lookup of every instance and identify its NUMA colocality but we had kind of same concerns when we had to reshape GPU allocations (finding every GPU usage for each instance)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e44f8bbc", "line": 226, "in_reply_to": "3fa7e38b_53366703", "updated": "2020-02-11 14:14:22.000000000", "message": "you can request PCPU or hugepage without haveign a numa toplogy so we will never need to split the allocations randomly. we know exactly shiche cpus and hugepages are allcoated to the vm in the instance numa toplogy so we can may that directly to the resouce providres.\n\nthis should be fairly simple. the only ting we need to do is ensure when the virt driver names the RP it follows an naming convention that it decided to uniquly associtate each numa rp with the host host numa node.\n\ne.g. ${hypervisor-hostname}_NUMA_${numa node number}\n\nif we follow that convention specificlly then we can potentally depend on it form cyborg and neutron too so that they can report there inventories per numa node in the future.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_53366703", "line": 226, "in_reply_to": "3fa7e38b_acc66714", "updated": "2020-02-11 09:52:01.000000000", "message": "yeah this will need some fat algos. We have to check each instance on the host to see where they are pinned and split the resources and then the allocations accordingly.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_beae8de2", "line": 229, "range": {"start_line": 228, "start_character": 64, "end_line": 229, "end_character": 12}, "updated": "2020-02-10 18:52:43.000000000", "message": "eh? Do what more than once?", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_7e5a55f5", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "updated": "2020-02-10 18:52:43.000000000", "message": "Do we really want to allow that? It would be a whole separate (and nontrivial) reshape method.\n\nI guess it would be kind of cruel for the operator to cut over and then find his non-NUMA flavors are basically useless but he can't go back.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5ab16c254438cd2c4c6607b106f91ebd8900cba3", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ca5db954", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_6ef93c1a", "updated": "2020-02-11 13:20:30.000000000", "message": "If we don't allow to backward to a non-NUMA host, that sounds like we announce the non-NUMA instance is deprecated in U release.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2495a3e2", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_6ef93c1a", "updated": "2020-02-11 14:14:22.000000000", "message": "i dont think we want to allow that.\ni think the only way we should allow the reshape to be un done is to delete the RP and all allocations and recreate it.\nonce the config option is set then we shoudl not allow you to undo the reshap in code.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6ef93c1a", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_7e5a55f5", "updated": "2020-02-11 09:52:01.000000000", "message": "If we want to prevent that then we need special care for the config handling. Basically not to allow starting the compute service if the config would indicate a reshape-back transition. It is doable just want to make sure we don't forget it", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_10c0de4a", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_8d0a7b26", "updated": "2020-02-11 14:39:02.000000000", "message": "Having slept on it, I think it's reasonable to allow bidirectional reshaping considering we don't yet provide all the capabilities you need on a NUMA-aware host. In the future, once we've got that support, we can disable the backwards reshaper. (Realistically, we don't need to 'disable' it since we'll be deprecating/removing the conf option that would allow you to trigger it.)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0d8d9b0a14fc48e85c28eb634664abb695bb0f40", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d3149052", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_ca5db954", "updated": "2020-02-11 16:06:07.000000000", "message": "as it is not preventing adding new computes with non-NUMA aware config I don't think this would be really a deprecation.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8d0a7b26", "line": 231, "range": {"start_line": 229, "start_character": 65, "end_line": 231, "end_character": 79}, "in_reply_to": "3fa7e38b_ca5db954", "updated": "2020-02-11 14:14:22.000000000", "message": "not we will allow non numa instance but we will not allow you to reshap after you have move a host to report numa toplogies. for U we are proposing to default to not reporting numa and only make that change in V.\n\ni would like to deprecate non numa aware guests but we are not doing that in this this spec.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d2801f9f", "line": 252, "range": {"start_line": 249, "start_character": 0, "end_line": 252, "end_character": 66}, "updated": "2020-02-10 17:01:42.000000000", "message": "The above request allows allocation candidates from a NUMA-aware (re-shaped) host as well. The unnumbered request group will be satisfied by two RPs, one NUMA node RP and one memory RP under a NUMA node RP (to necessary the same NUMA node RP).\n\nSee http://paste.openstack.org/show/789380/ as an example\n\nTo prevent scheduling non NUMA aware request to the reshaped NUMA-aware nodes you have to add a required=!HW_NUMA_ROOT to the request. As that will precent selecting the NUMA root RP for to satisfy VCPUs and no other RPs provider VCPUs in a reshaped tree.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_70f032db", "line": 252, "range": {"start_line": 249, "start_character": 0, "end_line": 252, "end_character": 66}, "in_reply_to": "3fa7e38b_2e5024d1", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_645ddb52", "line": 252, "range": {"start_line": 249, "start_character": 0, "end_line": 252, "end_character": 66}, "in_reply_to": "3fa7e38b_2e5024d1", "updated": "2020-02-11 14:14:22.000000000", "message": "we covered this explcitly in the etherpad and propsoed useing a granualr request grop to prevent this. a forbdien trait would work too.  if we go the trait route then evey request would be treated as if  trait:HW_NUMA_NODE=required|forbiden is always set based on if the requst_spec has it numa_toplogy field populated.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2e5024d1", "line": 252, "range": {"start_line": 249, "start_character": 0, "end_line": 252, "end_character": 66}, "in_reply_to": "3fa7e38b_3eacdda6", "updated": "2020-02-11 09:52:01.000000000", "message": "Yeah one suffixed group would prevent the NUMA aware nodes to fulfill the non numa request. I feel the required=!HW_NUMA_ROOT a bit more explicit though.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_3eacdda6", "line": 252, "range": {"start_line": 249, "start_character": 0, "end_line": 252, "end_character": 66}, "in_reply_to": "3fa7e38b_d2801f9f", "updated": "2020-02-10 18:52:43.000000000", "message": "> To prevent scheduling non NUMA aware request to the reshaped\n > NUMA-aware nodes you have to add a required=!HW_NUMA_ROOT to the\n > request. As that will precent selecting the NUMA root RP for to\n > satisfy VCPUs and no other RPs provider VCPUs in a reshaped tree.\n\nOr you could force the VCPU and MEMORY_MB resources to come from the same provider by using a suffixed request group.\n\nI'm having a hard time deciding which would be better.\n\nBut I agree, we need to do something to make sure this non-NUMA workload doesn't land on a NUMA-aware host.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4ce01394", "line": 264, "range": {"start_line": 264, "start_character": 11, "end_line": 264, "end_character": 21}, "updated": "2020-02-10 20:50:41.000000000", "message": "extra specs", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_29dd7e11", "line": 264, "range": {"start_line": 264, "start_character": 11, "end_line": 264, "end_character": 21}, "in_reply_to": "3fa7e38b_4ce01394", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_32b9737b", "line": 268, "range": {"start_line": 268, "start_character": 0, "end_line": 268, "end_character": 10}, "updated": "2020-02-10 17:01:42.000000000", "message": "nit: Accordingly", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_49e23ad5", "line": 268, "range": {"start_line": 268, "start_character": 0, "end_line": 268, "end_character": 10}, "in_reply_to": "3fa7e38b_32b9737b", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_be944d43", "line": 270, "range": {"start_line": 270, "start_character": 61, "end_line": 270, "end_character": 63}, "updated": "2020-02-10 18:52:43.000000000", "message": "This example could use some annotations explaining things like:\n- When not otherwise specified, we divide resources evenly among NUMA nodes. That's why the VCPUs are 4/4 and the memory is 4096/4096 below.\n- When not otherwise specified, small pages are the default. That's why MEMORY_PAGE_SIZE_SMALL is added below.\n\n[Later] I see these are explained at the bottom of the section.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9274e7ce", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "updated": "2020-02-10 17:01:42.000000000", "message": "I think this means that PROC1 group can be satisfied from the same RP than PROC2 group but that is against the definition of hw:numa_nodes=2", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_70759232", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "in_reply_to": "3fa7e38b_240a8328", "updated": "2020-02-11 14:39:02.000000000", "message": "This is why we have rp/rg mappings in the allocation candidate response now. Those need to make it down to the virt driver, as they do for qos as of https://review.opendev.org/#/c/696992/", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ae63b4ab", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "in_reply_to": "3fa7e38b_5e943935", "updated": "2020-02-11 09:52:01.000000000", "message": "Good point the NTF will help filtering down that to anti-affinity. Also this means NTF needs to work on allocation candidates instead of host (as today).", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_5e943935", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "in_reply_to": "3fa7e38b_9274e7ce", "updated": "2020-02-10 18:52:43.000000000", "message": "Correct, but we decided we needed to keep this to accommodate requests with bandwidth resources that need to come from the same provider. So as you say, the Placement result will include candidates where all the resources come from the same NUMA node; the NUMATopologyFilter will be responsible for eliminating those candidates.\n\n(nts: make sure that ^ is explained *somewhere* in the spec. Could link to https://docs.openstack.org/placement/train/specs/train/implemented/2005575-nested-magic-1.html#anti-affinity)\n\n([Later] I didn't see that explanation anywhere; it should be added.)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d05c8681", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "in_reply_to": "3fa7e38b_ae63b4ab", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_240a8328", "line": 282, "range": {"start_line": 282, "start_character": 3, "end_line": 282, "end_character": 22}, "in_reply_to": "3fa7e38b_ae63b4ab", "updated": "2020-02-11 14:14:22.000000000", "message": "yes it will although the NTF just calls the hardware.py module which will also need to be enhanced to be allocation candiate aware anyway to do the assignment on the host when invoked form the virt dirver.\n\nwe will need to pass the allocation candiate to the filters or have a new sett of alocation filters which specificly opterate on allocations.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_322c13b1", "line": 306, "updated": "2020-02-10 17:01:42.000000000", "message": "ditto, this request does not guarantee that we have two numa nodes.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d000066c", "line": 306, "in_reply_to": "3fa7e38b_2a3ecdb5", "updated": "2020-02-11 14:39:02.000000000", "message": "This doesn't make sense to me. Your device is on a PCI bus that's affined to a specific NUMA node. If you don't care about the device being affined to a specific NUMA node, you simply omit the device's group suffix from same_subtree. If you do care, you specify it.\n\nOr are you talking about a case where there are e.g. four NUMA cells on the host, and you want a two-cell guest topology, and you want your device affined to either of the guest cells that you're actually using, but not the ones that you're not?\n\nThat seems like a really obscure corner case, considering that 99% of the time your guest NUMA cells will be symmetrical so you could just affine the device to either one and the result will be correct.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_90528e69", "line": 306, "in_reply_to": "3fa7e38b_322c13b1", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_2a3ecdb5", "line": 306, "in_reply_to": "3fa7e38b_322c13b1", "updated": "2020-02-11 14:14:22.000000000", "message": "correct as above the numa toplogy filter will do this.\n\ndo not have the ablity to say &same_subtree=!_NUMA1,_NUMA2\nto enforece anti affintity.\n\nwe will also need to enhacne same_subtree to support \"or\" at some point before we can fully remove the numa toplogy filter. or is need for sriov devices and gpus so that we can require the the sriov device is in the same subtree as _NUMA1 or _NUMA2. this matters if you have more numa nodes on the host then the guest requsts.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "cf99e147fc9799b4474e25963be47c760961b344", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_b3e234d2", "line": 306, "in_reply_to": "3fa7e38b_d000066c", "updated": "2020-02-11 15:24:29.000000000", "message": "our default policy today for pci numa affinty required that the pci/sriov device must be assocated with one of the numa node the vm is attach too.\n\nso if you have 4 numa node on the host and only ask for 2 numa node on the guest then you need the \"or\" operator to say that the pci request group must be in the same subtree as one of the  numa nodes but it does not matter which one.\n\nwe cant just assume that we can afine the device request to the first numa node as that will cause  failure to scudel if i have only 1 PF per host numa node and ask for 2.\n\nso its not a corner case its our default policy default policy when we have a numa guest.\n\nthe ! is obvious i think\nwe want to say that both numa node rps shoudl not be the same \n&same_subtree=!_NUMA1,_NUMA2\nso it just the basic anti afinity case.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5ab16c254438cd2c4c6607b106f91ebd8900cba3", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cd22b3a6", "line": 347, "range": {"start_line": 347, "start_character": 4, "end_line": 347, "end_character": 47}, "updated": "2020-02-11 13:20:30.000000000", "message": "With placement-ese extra spec, the user can request two kind page sizes for an instance, which we don't allow. Probably we should take care of it.\n\nOr we should disable the placement-ese extra specs...", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f09422e9", "line": 347, "range": {"start_line": 347, "start_character": 4, "end_line": 347, "end_character": 47}, "in_reply_to": "3fa7e38b_9004ce6d", "updated": "2020-02-12 09:09:51.000000000", "message": "Yeah, let's doc it first and not try to code it yet.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "cf99e147fc9799b4474e25963be47c760961b344", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_13ea28a0", "line": 347, "range": {"start_line": 347, "start_character": 4, "end_line": 347, "end_character": 47}, "in_reply_to": "3fa7e38b_9004ce6d", "updated": "2020-02-11 15:24:29.000000000", "message": "you could set it up in the flavor but the hardware module would ignore it when constucting the instance numa toplogy object. so the virtdriver would not honor the request as it just renders the xml based on the content of the instnace numa toplogy object.\n\nwe should document that its not supported for sure.\ni dont know if we want to explictly block it but we could.\neither via a follow up to stephens extra spec validation or specific in the hardware mouled get_numa_constriats function that is used in the api to validate the hw:* extraspces make sense.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "90e50b59574872e8464bb83dcf1ad0db3afae3ae", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9004ce6d", "line": 347, "range": {"start_line": 347, "start_character": 4, "end_line": 347, "end_character": 47}, "in_reply_to": "3fa7e38b_b0046a14", "updated": "2020-02-11 14:39:02.000000000", "message": "Unless we explicitly disable the placement-ese syntax here, nothing would prevent you from setting up a flavor to use it. But you can always create a flavor that will never land, or otherwise blow up, if you try hard enough. As noted in the mixed CPU spec discussions, we should document that you should use hw:-ish syntax and not placement-ish syntax; and if the operator tries the latter, they deserve what they get when things blow up.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_b0046a14", "line": 347, "range": {"start_line": 347, "start_character": 4, "end_line": 347, "end_character": 47}, "in_reply_to": "3fa7e38b_cd22b3a6", "updated": "2020-02-11 14:14:22.000000000", "message": "we are not going to support the pacemetn syntax for mempages.\nwe are only supporting hw:mem_page_size\nif you use the raw palcement syntax your vm will not have hugepages.\n\nwe have no support for the placment syntax today for hugepages and we should not add it. at least not until the non placment version is supported and we have a stong usecase that requires it.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_decd895b", "line": 356, "updated": "2020-02-10 18:52:43.000000000", "message": "Should add an example where the flavor simply requests 'large' pages. This will result in requiring the MEMORY_PAGE_SIZE_LARGE trait, but not a specific CUSTOM_MEMORY_PAGE_SIZE_*. It demonstrates that the result can include candidates where the memory requirement is satisfied by *either* of the large-page-size grandchild nodes.\n\nThat would also be a good place to note that we would never split such memory across two providers with different large page sizes. That's by design, and matches what we do today when 'large' pages are requested.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9337f8ae", "line": 356, "in_reply_to": "3fa7e38b_0aaf51e1", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0aaf51e1", "line": 356, "in_reply_to": "3fa7e38b_decd895b", "updated": "2020-02-11 14:14:22.000000000", "message": "+1\n\ni would also prefer if a flavor was added as a table before each of these requests to show what we are translating form \nfor the placemetn request above i think its \n\nflavor.vcpus=2\nflavor.ram=4096\nflavor.disk=0 ? you are not asking for any in the example.\nhw:numa_nodes=2\nhw:mem_page_size=2MB\n\nits eaiser to read if its presented in  table we also should add the disk request to each to make it more reflective of a real query. although both of these are just nits.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1e36c150", "line": 373, "updated": "2020-02-10 18:52:43.000000000", "message": "could link to https://review.opendev.org/#/c/658510/ here", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f3042cc7", "line": 373, "in_reply_to": "3fa7e38b_1e36c150", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9928e61b374c22b2375886371f75b5776de358d2", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_7ec1f5fc", "line": 401, "updated": "2020-02-10 18:52:43.000000000", "message": "The expense of the reshape will be proportional to the number of instances whose allocations need to be moved; but it's all done in a single placement call, so unless you've got hundreds/thousands of instances on a single host, I can't imagine this being a noticeable amount of extra time on compute service startup.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_503bb6c7", "line": 401, "in_reply_to": "3fa7e38b_7ec1f5fc", "updated": "2020-02-11 14:14:22.000000000", "message": "ya numa host tend to have no oversubstiption since cpu pinnign disable it for cpus and hugepages or explcit page size requerst disabled it for memory.\n\nso its unlikely to have more then 128 instnaces per hosts.\nim basing that on a 8G vm and the fact most hosts dont exceed 1Tb of ram and 256-512 is more common. i think 32 VMs or less per host would be more common.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5ab16c254438cd2c4c6607b106f91ebd8900cba3", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ad6bb7b5", "line": 421, "range": {"start_line": 418, "start_character": 0, "end_line": 421, "end_character": 6}, "updated": "2020-02-11 13:20:30.000000000", "message": "The probably need something we have done for the 'standard cpu resource tracking' feature. Since in the early stage of upgrade, you will have very few compute nodes to the NUMA-aware RPs. But if the controller already begin to translate the extra spec into placement numbered groups, that means the request may be not successful, since too few hosts. So probably we can query the by numbered groups first, and then fallback the orignal way.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d07006aa", "line": 421, "range": {"start_line": 418, "start_character": 0, "end_line": 421, "end_character": 6}, "in_reply_to": "3fa7e38b_ad6bb7b5", "updated": "2020-02-11 14:14:22.000000000", "message": "we talked about doing a fallback query for numa instance to fall back to a non numa query and allow the numa toplogy filter and host aggreates to elimiate hosts that could not fit the vm.\n\nthis would be the same as the fallback query we do for PCPUs today.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9305b8c2", "line": 421, "range": {"start_line": 418, "start_character": 0, "end_line": 421, "end_character": 6}, "in_reply_to": "3fa7e38b_d07006aa", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "45d682709166f989bf72d0685cdb0f8407bca444", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ec73ffe3", "line": 427, "updated": "2020-02-10 20:50:41.000000000", "message": "Weird newline.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_183819c9", "line": 430, "range": {"start_line": 428, "start_character": 0, "end_line": 430, "end_character": 41}, "updated": "2020-02-10 17:01:42.000000000", "message": "Is this only mean that we keep the reshape code in nova-compute forever? So that if somebody do an FFU from Stein -> W then the W compute can still do the reshape at startup.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_eec9ac79", "line": 430, "range": {"start_line": 428, "start_character": 0, "end_line": 430, "end_character": 41}, "in_reply_to": "3fa7e38b_0ce1bbfd", "updated": "2020-02-11 09:52:01.000000000", "message": "Yeah forever was a bit too much. A well documented plan is acceptable to me.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "31faa37c3b6c0c441854cf92b02098c0f8852140", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0ce1bbfd", "line": 430, "range": {"start_line": 428, "start_character": 0, "end_line": 430, "end_character": 41}, "in_reply_to": "3fa7e38b_183819c9", "updated": "2020-02-10 20:19:04.000000000", "message": "im not sure if we have to keep it forever but we shoudl keep it for a couple of release e.g. 2-3 at a minium\n\nif we go through the cycle of intoducign a config optio, updateing its defaul, deprecatinging it and removing it i think that is more then enough time to do a FFU. that said if its small it might not hurt to keep it.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_33f644d7", "line": 430, "range": {"start_line": 428, "start_character": 0, "end_line": 430, "end_character": 41}, "in_reply_to": "3fa7e38b_b079ca81", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_b079ca81", "line": 430, "range": {"start_line": 428, "start_character": 0, "end_line": 430, "end_character": 41}, "in_reply_to": "3fa7e38b_eec9ac79", "updated": "2020-02-11 14:14:22.000000000", "message": "as long as we check with operators, vendors and the installation tools before we drop support i think we can manage this. \n\nredhat osp 16 has just been released based on train. \n\ni know that i will be advocating for us to move to numa aware reporting by default downstream in osp 17 which will be based on Victora and by osp 18 i hope that downstream that is the only configratuion we will support in the product but we will have to discuss that with customer and product mangaers.\n\nso i hop that in 3-4 release from now we will not need to support this reshape.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "61faf6af7f6b10a2cc1c76633b97b7532fa2ea17", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8ac26187", "line": 439, "range": {"start_line": 439, "start_character": 1, "end_line": 439, "end_character": 26}, "updated": "2020-02-11 14:14:22.000000000", "message": "we could just drop this.\nhyperv should be able to reuse this design but since your going to work on this for libvirt primarliy i think thats all that matters.\n\nfor what its worth ill also work on this with you if needed although i dont think i need to be list specificlly.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_b3231457", "line": 439, "range": {"start_line": 439, "start_character": 1, "end_line": 439, "end_character": 26}, "in_reply_to": "3fa7e38b_8ac26187", "updated": "2020-02-12 09:09:51.000000000", "message": "Done", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_78702da8", "line": 443, "updated": "2020-02-10 17:01:42.000000000", "message": "you can put yourselve here", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "13db8e9f9be922a9f12f9da20b711a6671baccc4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_73191c21", "line": 443, "in_reply_to": "3fa7e38b_78702da8", "updated": "2020-02-12 09:09:51.000000000", "message": "> you can put yourselve here\n\nWell, it's acceptable to say None as we agreed when discussing the Feature Liaison thingy :-)", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8bfc45cfb55cf0ea75d28a50250cadf2bb577495", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_787eed6d", "line": 462, "range": {"start_line": 462, "start_character": 0, "end_line": 462, "end_character": 10}, "updated": "2020-02-10 17:01:42.000000000", "message": "as topology is passed from the virt driver these functional tests needs either libvirt-like fake virt driver with numa typology or even the libvirt driver itself.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "304b118005077e32db65100a55966fbeb90685c8", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cebcf0d6", "line": 462, "range": {"start_line": 462, "start_character": 0, "end_line": 462, "end_character": 10}, "in_reply_to": "3fa7e38b_0c6e9b96", "updated": "2020-02-11 09:52:01.000000000", "message": "I'm glad that we have such and func env.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "31faa37c3b6c0c441854cf92b02098c0f8852140", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0c6e9b96", "line": 462, "range": {"start_line": 462, "start_character": 0, "end_line": 462, "end_character": 10}, "in_reply_to": "3fa7e38b_787eed6d", "updated": "2020-02-10 20:19:04.000000000", "message": "yes well we have numa tests already that use the fakelibvirt fixture with the real libvirt dirver so i read this as we will continue to extend those.", "commit_id": "388723de0407042e5b5cfade001131d0c1df1c76"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fe6dd367", "line": 44, "updated": "2020-02-11 16:35:12.000000000", "message": "++", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_be251b18", "line": 113, "updated": "2020-02-11 16:35:12.000000000", "message": "It would still be nice to explain the motivation behind adding this trait:\n- It allows us to differentiate NUMA-modeled hosts from non-NUMA-modeled hosts; and\n- It gives us an anchor to express affinity among resources in the same subtree without having to rely on knowing specifically which resources are where. (Example: as currently modeled we could just express affinity by putting the proc and mem groups into same_subtree -- but some day we might put procs into a grandchild RP as well, and then that would stop working.)", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e5c3f48a", "line": 113, "in_reply_to": "3fa7e38b_be251b18", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7348b2faae818ee5433fa59d6230cdfd59f1bcce", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_3efe0b39", "line": 117, "range": {"start_line": 117, "start_character": 56, "end_line": 117, "end_character": 61}, "updated": "2020-02-11 16:55:32.000000000", "message": "nit: assign", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7348b2faae818ee5433fa59d6230cdfd59f1bcce", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_7ee00394", "line": 117, "range": {"start_line": 117, "start_character": 10, "end_line": 117, "end_character": 47}, "updated": "2020-02-11 16:55:32.000000000", "message": "nit: the smallest allocatable unit", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_3e9dab57", "line": 117, "range": {"start_line": 117, "start_character": 23, "end_line": 117, "end_character": 32}, "updated": "2020-02-11 16:35:12.000000000", "message": "x", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_a5c17c83", "line": 117, "range": {"start_line": 117, "start_character": 10, "end_line": 117, "end_character": 47}, "in_reply_to": "3fa7e38b_7ee00394", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fea2b397", "line": 128, "range": {"start_line": 128, "start_character": 27, "end_line": 128, "end_character": 28}, "updated": "2020-02-11 16:35:12.000000000", "message": "in KB.\n\nAgain, it's important that the trait name be consistent so we can 1) generate it from update_provider_tree, and 2) query placement on it from the scheduler.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c5bcb808", "line": 128, "range": {"start_line": 128, "start_character": 27, "end_line": 128, "end_character": 28}, "in_reply_to": "3fa7e38b_fea2b397", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_be0e7b8c", "line": 230, "updated": "2020-02-11 16:35:12.000000000", "message": "++", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0d8d9b0a14fc48e85c28eb634664abb695bb0f40", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fef873c2", "line": 316, "updated": "2020-02-11 16:06:07.000000000", "message": "thanks!", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fe6cf334", "line": 392, "range": {"start_line": 392, "start_character": 59, "end_line": 392, "end_character": 60}, "updated": "2020-02-11 16:35:12.000000000", "message": "extra :", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_65b70424", "line": 392, "range": {"start_line": 392, "start_character": 59, "end_line": 392, "end_character": 60}, "in_reply_to": "3fa7e38b_fe6cf334", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_9e57ff59", "line": 404, "updated": "2020-02-11 16:35:12.000000000", "message": "Again, it would be nice to point out that, given the example model above, this could result in candidates from *either* of the large-page memory RPs.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_85b24030", "line": 404, "in_reply_to": "3fa7e38b_9e57ff59", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7348b2faae818ee5433fa59d6230cdfd59f1bcce", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_79749d8a", "line": 430, "range": {"start_line": 420, "start_character": 1, "end_line": 430, "end_character": 22}, "updated": "2020-02-11 16:55:32.000000000", "message": "this might change the meaning of any. it was ment to mean use any page size that fits but actully ended up being let the image decided and if not set in the image i think we use small pages.\n\nits the lest well tested/used option so i dont actuly know of the top of my head if we ever impleented the logic to use any pagesize includeing hugepages like we had planned.\n\nif we have then yes. if not then we could treat it as a error or treat it like small. this should be resolved before getting to the placemnt code when constructing the instnace numa toplogy object in the request spec so this is just an implemenation detail.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e56774eb", "line": 430, "range": {"start_line": 420, "start_character": 1, "end_line": 430, "end_character": 22}, "in_reply_to": "3fa7e38b_79749d8a", "updated": "2020-02-12 11:43:57.000000000", "message": "> this might change the meaning of any. it was ment to mean use any\n > page size that fits but actully ended up being let the image\n > decided and if not set in the image i think we use small pages.\n > \n > its the lest well tested/used option so i dont actuly know of the\n > top of my head if we ever impleented the logic to use any pagesize\n > includeing hugepages like we had planned.\n > \n > if we have then yes. if not then we could treat it as a error or\n > treat it like small. this should be resolved before getting to the\n > placemnt code when constructing the instnace numa toplogy object in\n > the request spec so this is just an implemenation detail.\n\nLet's make sure we can discuss this during the implementation.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0d8d9b0a14fc48e85c28eb634664abb695bb0f40", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_becd1b93", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "updated": "2020-02-11 16:06:07.000000000", "message": "Yeah this was missing for me. This fallback mechanism solves my issue about suddenly loosing all my NUMA-aware capacity after the upgrade.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_45d1a855", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_006ac516", "updated": "2020-02-12 11:43:57.000000000", "message": "I still need to fully understand the alternative proposal. Will provide a new revision now without changing this, and please provide me a better summary about what you'd like in the next revision.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2ed5bdf1ffc9a91d1c96594d91f07678ae18a5a6", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_b6cc5062", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_006ba553", "updated": "2020-02-12 14:54:19.000000000", "message": "> if we dont early out and actully do multiple numa requests and\n > merge them we coudl spread but im not sure that is what we want to\n > do from a performance point of view.\n\nYes, the performance should be a concern, if we do that.\n\n > \n > if we did not early out and did up to [scheduler]/max_implcit_numa_nodes\n > config always we could leave it to the werigher to do there normal\n > spreading vs packing behavior.\n > \n > without the early out however i would then do set\n > [scheduler]/max_implcit_numa_nodes=2  rather than\n > [scheduler]/max_implcit_numa_nodes=4 which i think would an ok\n > default if we had the early out.\n > \n > that said i dont really agree that prefing smaller numa node counts\n > violated packing vs spreading, at least in the small vm\n > approximation. for large vms where only 1 or can fit per host numa\n > node it will tend to spread yes but that also depends on the size\n > of a numa noded.\n > \n > on moderen zen 2 amd eypc chips with 1 numa node per cache region\n > enabled in the bios tech numa node has 3-4 phyical core or 6-8\n > thread and about 64G of ram. so on those hosts if you ask for 16\n > cores its going to always  be spread over 2 numa nodes.if your on\n > an intel system where the numa nodes are larger then you could fit\n > it on 1 numa node.\n > \n\ncan we assume most of non-NUMA instance is small? If we can, then we needn't worry about this case.\n\n > if we were really concerend we could make it configurable. e.g.\n > start with most numa node and get smaller, start with smllest and\n > get larger or generate all in the range and merge. those are\n > basicaly the 3 options.\n > \n > option 3 i think is what you want as it lets the weigher decided at\n > the cost of scheduler performance.\n > \n > live migration betwen a numa host and a train compute node should\n > be possible provide the train compute node can support the numa\n > topology of the guest. similarly if you have disable numa reporting\n > on a Ussuri host the fall back query would allow that host to be\n > selected and if the numa toplogy filter said it was fine it would\n > be a candiate.\n\nOh, right. The fallback + NUMA filter can help that. So we are going to check the instance has numa topology or not even if the flavor is NUMA-agnostic. If the instance has numa, then query with NUMA-aware placement request first, and then fallback if need.\n\n > \n > the only added constrait would be with an implcit numa toplogy for\n > all instances we would only be able to live migrate if that implcit\n > topology was supported. that come directly for the idea that we\n > cannot alter the hardware topology in the guest will it is running.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "26547ca3377761ed9e852e1e74ae1edcba2ad389", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_006ac516", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_006ba553", "updated": "2020-02-12 03:14:22.000000000", "message": "oh by the way [scheduler]/max_implcit_numa_nodes will allow you to disabel implicit numa if you dont want it by setting\n[scheduler]/max_implcit_numa_nodes config=0", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "067f87f0d7c599d3d776084f5eed0bedb397ba02", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e49a24c2", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_3964e5e5", "updated": "2020-02-11 17:34:55.000000000", "message": "Thinking further (after consulting upgrade guy in the downstream project). Assume we have a Train deployment with NUMA-aware computes (we use cpu pinning and huge pages for almost every workload). During upgrade to Ussuri there will be a situation where we have the Ussuri control plane handling Train compute nodes. In this situation, without the fallback mechanism in the scheduler, we cannot create new servers for cannot migrate / evacuate server. That is bad I don't really want to be in this situation. However I think there is a possible compromise. 1) implement the fallback as proposed. 2) Make the Ussuri compute do the re-shape to NUMA-aware placement tree if so configured. \n\nThen for V make the compute startup to re-shape to NUMA aware tree _by default_. This way we can \"force\" the deployers _gradually_ to go to the new model.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "06e6ce261b22aee391d085a91c5406fb5ccd2d67", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_803c7591", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_3fc6054c", "updated": "2020-02-12 02:27:36.000000000", "message": "> - To allow enabling the new modeling by default, we want to\n > *translate NUMA-agnostic flavors*, allowing them to land on\n > NUMA-modeled hosts. We do this by performing multiple separate\n > queries in the \"aimed at reshaped computes\" category. Essentially,\n > for $n = 1 to $max, we pretend the flavor actually said\n > hw:numa_nodes=$n (but allow asymmetric splitting). $max is a\n > configurable maximum number of implicit NUMA nodes to try.\n\nOne concern is that if the instance has implicit NUMA nodes, then it can't be live-migration back to any host without NUMA modeling. If the operator separates some of hosts as NUMA modeling, some of hosts as not. Then I guess the operator doesn't want the implict NUMA instance, maybe we can provide a config option to disable the implict NUMA instance.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f827dbf3303a961dd0d95f014259031e4628e8db", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_471c577a", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_3fc6054c", "updated": "2020-02-11 23:13:41.000000000", "message": "ok to help people thinks about this i have done a quick poc of how we would do the progress numa toplogy implemenation.\nignoring the query generation which should be done from the numa toplogy object this basically implements the progressive generation of the numa_toplogy object\nill clean it up tomorow to make it a generator but right now it will print the diffent possibel options for an instance wtih 4G of ram and 10 cpus with a max numa count of 16.\n\n------------------------NOTES----------------------------\nmax_numa_nodes would be the value form the \n[scheduler]/max_implcit_numa_nodes config option\nthis code generates shoudl be correct but will not take into account some minor optimisations that could be added later\n\nit it takes advantage of the ability to specify asymmetric numa toplogies to minimise the imbalance of both cpus and ram and should result in at most 1 cpu and 1 mb of ram delta between any two numa nodes.\n\ni have added one optimisation that bails out early when the number of numa nodes reach the number of cpus as we need 1 cpu per numa node.\n\none of the optimisations that i have not added is that where the cpu and ram is evenly divisable by the number of numa nodes i can skip the generation of the hw:numa_cpus and hw:numa_mem paramaters.\n\ni am copying the flavor becasue we would temporaily modify it to create the numa toplogy object but the only thing we would persisti in the instance/request spec would be the toplogy objects.\n\n------------------CODE----------------------\n\nfrom nova.objects import instance_numa,  numa, flavor, image_meta, instance\nfrom nova.virt import hardware\n\nimport copy\n\nbase_instance = instance.Instance()\n\nbase_image = image_meta.ImageMeta()\nbase_image.properties = image_meta.ImageMetaProps.from_dict({})\n\nbase_flavor = flavor.Flavor()\nbase_flavor.id = 42\nbase_flavor.vcpus = 10\nbase_flavor.memory_mb = 4096\nbase_flavor.root_gb=100\n\nmax_numa_nodes = 16\nnuma_limit = min(base_flavor.vcpus, max_numa_nodes)\n\nfor nodes in range(1, numa_limit+1):\n    server = copy.deepcopy(base_instance)\n    server.flavor = copy.deepcopy(base_flavor)\n    image = copy.deepcopy(base_image)\n    extra_specs = {\n        \"hw:numa_nodes\": nodes,\n        \"hw:mem_page_size\": \"small\" # non numa instance should use 4k small pages.\n    }\n    cpus_total = server.flavor.vcpus\n    cpus_per_node = cpus_total // nodes\n    cpu_imblance = cpus_total % nodes\n    current_cpu = 0\n    ram_total = server.flavor.memory_mb\n    ram_per_node = ram_total // nodes\n    ram_imblance = ram_total % nodes\n    current_ram = 0\n    if nodes > 1:\n        for node in range(nodes):\n            cpus_to_add = min(cpus_total - current_cpu, cpus_per_node)\n            ram_to_add = min(ram_total - current_ram, ram_per_node)\n            if  cpu_imblance!=0:\n                cpus_to_add+=1\n                cpu_imblance-=1\n            if ram_imblance!=0:\n                ram_to_add+=1\n                ram_imblance-=1\n            cpu_list = ','.join(str(x) for x in range(current_cpu, current_cpu+cpus_to_add))\n            extra_specs['hw:numa_cpus.%s' % node] = cpu_list\n            extra_specs['hw:numa_mem.%s' % node] = ram_to_add\n            current_cpu += cpus_to_add\n    print(\"------------------------\")\n    print(\"------ numa node count %s ------ \" % nodes)\n    print(\"------------------------\")\n    print(\"flavor:\", server.flavor)\n    print(\"------------------------\")\n    server.flavor.extra_specs = extra_specs\n    print(\"flavor extra specs:\", extra_specs)\n    # this is what we need to generate progressively.\n    # if we caulate the placment query from the numa toplogy object.\n    numa_topology = hardware.numa_get_constraints(server.flavor, image)\n    # note that we would just make this a generator function and yeild\n    # numa_topology here.\n    print(\"------------------------\")\n    print(\"numa topology: \",numa_topology)\n    print(\"------------------------\")\n    for cell in numa_topology.cells:\n        print(\"\\t numa cell %s\" % cell.id, cell)\n    print()\n\n\n----------------output-------------\n\n(venv) sean@pop-os:~/repos/openstack/nova-2$ python3 nova/numa.py \n------------------------\n------ numa node count 1 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 1, 'hw:mem_page_size': 'small'}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1,2,3,4,5,6,7,8,9]),cpuset_reserved=None,id=0,memory=4096,pagesize=-1)\n\n------------------------\n------ numa node count 2 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 2, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1,2,3,4', 'hw:numa_mem.0': 2048, 'hw:numa_cpus.1': '5,6,7,8,9', 'hw:numa_mem.1': 2048}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1,2,3,4]),cpuset_reserved=None,id=0,memory=2048,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([5,6,7,8,9]),cpuset_reserved=None,id=1,memory=2048,pagesize=-1)\n\n------------------------\n------ numa node count 3 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 3, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1,2,3', 'hw:numa_mem.0': 1366, 'hw:numa_cpus.1': '4,5,6', 'hw:numa_mem.1': 1365, 'hw:numa_cpus.2': '7,8,9', 'hw:numa_mem.2': 1365}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1,2,3]),cpuset_reserved=None,id=0,memory=1366,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4,5,6]),cpuset_reserved=None,id=1,memory=1365,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8,9,7]),cpuset_reserved=None,id=2,memory=1365,pagesize=-1)\n\n------------------------\n------ numa node count 4 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 4, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1,2', 'hw:numa_mem.0': 1024, 'hw:numa_cpus.1': '3,4,5', 'hw:numa_mem.1': 1024, 'hw:numa_cpus.2': '6,7', 'hw:numa_mem.2': 1024, 'hw:numa_cpus.3': '8,9', 'hw:numa_mem.3': 1024}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1,2]),cpuset_reserved=None,id=0,memory=1024,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([3,4,5]),cpuset_reserved=None,id=1,memory=1024,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6,7]),cpuset_reserved=None,id=2,memory=1024,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8,9]),cpuset_reserved=None,id=3,memory=1024,pagesize=-1)\n\n------------------------\n------ numa node count 5 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 5, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1', 'hw:numa_mem.0': 820, 'hw:numa_cpus.1': '2,3', 'hw:numa_mem.1': 819, 'hw:numa_cpus.2': '4,5', 'hw:numa_mem.2': 819, 'hw:numa_cpus.3': '6,7', 'hw:numa_mem.3': 819, 'hw:numa_cpus.4': '8,9', 'hw:numa_mem.4': 819}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1]),cpuset_reserved=None,id=0,memory=820,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2,3]),cpuset_reserved=None,id=1,memory=819,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4,5]),cpuset_reserved=None,id=2,memory=819,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6,7]),cpuset_reserved=None,id=3,memory=819,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8,9]),cpuset_reserved=None,id=4,memory=819,pagesize=-1)\n\n------------------------\n------ numa node count 6 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 6, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1', 'hw:numa_mem.0': 683, 'hw:numa_cpus.1': '2,3', 'hw:numa_mem.1': 683, 'hw:numa_cpus.2': '4,5', 'hw:numa_mem.2': 683, 'hw:numa_cpus.3': '6,7', 'hw:numa_mem.3': 683, 'hw:numa_cpus.4': '8', 'hw:numa_mem.4': 682, 'hw:numa_cpus.5': '9', 'hw:numa_mem.5': 682}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4),InstanceNUMACell(5)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1]),cpuset_reserved=None,id=0,memory=683,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2,3]),cpuset_reserved=None,id=1,memory=683,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4,5]),cpuset_reserved=None,id=2,memory=683,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6,7]),cpuset_reserved=None,id=3,memory=683,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8]),cpuset_reserved=None,id=4,memory=682,pagesize=-1)\n\t numa cell 5 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([9]),cpuset_reserved=None,id=5,memory=682,pagesize=-1)\n\n------------------------\n------ numa node count 7 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 7, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1', 'hw:numa_mem.0': 586, 'hw:numa_cpus.1': '2,3', 'hw:numa_mem.1': 585, 'hw:numa_cpus.2': '4,5', 'hw:numa_mem.2': 585, 'hw:numa_cpus.3': '6', 'hw:numa_mem.3': 585, 'hw:numa_cpus.4': '7', 'hw:numa_mem.4': 585, 'hw:numa_cpus.5': '8', 'hw:numa_mem.5': 585, 'hw:numa_cpus.6': '9', 'hw:numa_mem.6': 585}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4),InstanceNUMACell(5),InstanceNUMACell(6)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1]),cpuset_reserved=None,id=0,memory=586,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2,3]),cpuset_reserved=None,id=1,memory=585,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4,5]),cpuset_reserved=None,id=2,memory=585,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6]),cpuset_reserved=None,id=3,memory=585,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([7]),cpuset_reserved=None,id=4,memory=585,pagesize=-1)\n\t numa cell 5 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8]),cpuset_reserved=None,id=5,memory=585,pagesize=-1)\n\t numa cell 6 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([9]),cpuset_reserved=None,id=6,memory=585,pagesize=-1)\n\n------------------------\n------ numa node count 8 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 8, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1', 'hw:numa_mem.0': 512, 'hw:numa_cpus.1': '2,3', 'hw:numa_mem.1': 512, 'hw:numa_cpus.2': '4', 'hw:numa_mem.2': 512, 'hw:numa_cpus.3': '5', 'hw:numa_mem.3': 512, 'hw:numa_cpus.4': '6', 'hw:numa_mem.4': 512, 'hw:numa_cpus.5': '7', 'hw:numa_mem.5': 512, 'hw:numa_cpus.6': '8', 'hw:numa_mem.6': 512, 'hw:numa_cpus.7': '9', 'hw:numa_mem.7': 512}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4),InstanceNUMACell(5),InstanceNUMACell(6),InstanceNUMACell(7)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1]),cpuset_reserved=None,id=0,memory=512,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2,3]),cpuset_reserved=None,id=1,memory=512,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4]),cpuset_reserved=None,id=2,memory=512,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([5]),cpuset_reserved=None,id=3,memory=512,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6]),cpuset_reserved=None,id=4,memory=512,pagesize=-1)\n\t numa cell 5 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([7]),cpuset_reserved=None,id=5,memory=512,pagesize=-1)\n\t numa cell 6 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8]),cpuset_reserved=None,id=6,memory=512,pagesize=-1)\n\t numa cell 7 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([9]),cpuset_reserved=None,id=7,memory=512,pagesize=-1)\n\n------------------------\n------ numa node count 9 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 9, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0,1', 'hw:numa_mem.0': 456, 'hw:numa_cpus.1': '2', 'hw:numa_mem.1': 455, 'hw:numa_cpus.2': '3', 'hw:numa_mem.2': 455, 'hw:numa_cpus.3': '4', 'hw:numa_mem.3': 455, 'hw:numa_cpus.4': '5', 'hw:numa_mem.4': 455, 'hw:numa_cpus.5': '6', 'hw:numa_mem.5': 455, 'hw:numa_cpus.6': '7', 'hw:numa_mem.6': 455, 'hw:numa_cpus.7': '8', 'hw:numa_mem.7': 455, 'hw:numa_cpus.8': '9', 'hw:numa_mem.8': 455}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4),InstanceNUMACell(5),InstanceNUMACell(6),InstanceNUMACell(7),InstanceNUMACell(8)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0,1]),cpuset_reserved=None,id=0,memory=456,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2]),cpuset_reserved=None,id=1,memory=455,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([3]),cpuset_reserved=None,id=2,memory=455,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4]),cpuset_reserved=None,id=3,memory=455,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([5]),cpuset_reserved=None,id=4,memory=455,pagesize=-1)\n\t numa cell 5 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6]),cpuset_reserved=None,id=5,memory=455,pagesize=-1)\n\t numa cell 6 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([7]),cpuset_reserved=None,id=6,memory=455,pagesize=-1)\n\t numa cell 7 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8]),cpuset_reserved=None,id=7,memory=455,pagesize=-1)\n\t numa cell 8 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([9]),cpuset_reserved=None,id=8,memory=455,pagesize=-1)\n\n------------------------\n------ numa node count 10 ------ \n------------------------\nflavor: Flavor(created_at=<?>,deleted=<?>,deleted_at=<?>,description=<?>,disabled=<?>,ephemeral_gb=<?>,extra_specs=<?>,flavorid=<?>,id=42,is_public=<?>,memory_mb=4096,name=<?>,projects=<?>,root_gb=100,rxtx_factor=<?>,swap=<?>,updated_at=<?>,vcpu_weight=<?>,vcpus=10)\n------------------------\nflavor extra specs: {'hw:numa_nodes': 10, 'hw:mem_page_size': 'small', 'hw:numa_cpus.0': '0', 'hw:numa_mem.0': 410, 'hw:numa_cpus.1': '1', 'hw:numa_mem.1': 410, 'hw:numa_cpus.2': '2', 'hw:numa_mem.2': 410, 'hw:numa_cpus.3': '3', 'hw:numa_mem.3': 410, 'hw:numa_cpus.4': '4', 'hw:numa_mem.4': 410, 'hw:numa_cpus.5': '5', 'hw:numa_mem.5': 410, 'hw:numa_cpus.6': '6', 'hw:numa_mem.6': 409, 'hw:numa_cpus.7': '7', 'hw:numa_mem.7': 409, 'hw:numa_cpus.8': '8', 'hw:numa_mem.8': 409, 'hw:numa_cpus.9': '9', 'hw:numa_mem.9': 409}\n------------------------\nnuma topology:  InstanceNUMATopology(cells=[InstanceNUMACell(UNKNOWN),InstanceNUMACell(1),InstanceNUMACell(2),InstanceNUMACell(3),InstanceNUMACell(4),InstanceNUMACell(5),InstanceNUMACell(6),InstanceNUMACell(7),InstanceNUMACell(8),InstanceNUMACell(9)],emulator_threads_policy=<?>,id=<?>,instance_uuid=<?>)\n------------------------\n\t numa cell 0 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([0]),cpuset_reserved=None,id=0,memory=410,pagesize=-1)\n\t numa cell 1 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([1]),cpuset_reserved=None,id=1,memory=410,pagesize=-1)\n\t numa cell 2 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([2]),cpuset_reserved=None,id=2,memory=410,pagesize=-1)\n\t numa cell 3 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([3]),cpuset_reserved=None,id=3,memory=410,pagesize=-1)\n\t numa cell 4 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([4]),cpuset_reserved=None,id=4,memory=410,pagesize=-1)\n\t numa cell 5 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([5]),cpuset_reserved=None,id=5,memory=410,pagesize=-1)\n\t numa cell 6 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([6]),cpuset_reserved=None,id=6,memory=409,pagesize=-1)\n\t numa cell 7 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([7]),cpuset_reserved=None,id=7,memory=409,pagesize=-1)\n\t numa cell 8 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([8]),cpuset_reserved=None,id=8,memory=409,pagesize=-1)\n\t numa cell 9 InstanceNUMACell(cpu_pinning_raw=None,cpu_policy=None,cpu_thread_policy=None,cpu_topology=<?>,cpuset=set([9]),cpuset_reserved=None,id=9,memory=409,pagesize=-1)", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b77e57b67896aa8f05ac8e23c8f90db761491bf1", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_6b89156e", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_45d1a855", "updated": "2020-02-12 13:59:25.000000000", "message": "How I understand Eric's summary above:\n\n* always do two placement queries one with the new query syntax and one with the old query syntax + required=!HW_NUMA_ROOT. Merge the results of the two queries and let the NTF do the rest of the filtering.\n\n* at the same time make reshaping the default behavior for the computes in U.\n\n* To support  the non-NUMA aware requests after very compute is reshaped to U  such request will be translated to the new query syntax by trying out different splittings of the non-NUMA aware requests to NUMA nodes. (e.g. does the request fit into one node? does the request fit into 2 nodes with an equal splitting? without an equal splitting? ...)\n\n* As we not fully trust the splitting algo in the previous point. We add a way to disable re-shaping in the computes. Or even do an un-re-shaping (a backward reshape to T version of the placement tree).", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "19529ea9a1b3f5638ce0eecfdc0383e906a7707b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_ea40aa35", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_471c577a", "updated": "2020-02-11 23:21:13.000000000", "message": "oh one other thing.\nwe have the ablity to auto split resouces if the cpus and ram are evenly devisable by the numa of numa nodes today.\n\nwith a slight tweek it could be able made able to support the asemetic cases as i have done above.\n\nif we are ok with allowing sligly more cases to work by default for numa instnace too we can just share the code and all that will need to be set in the temporay flavor when invoking hardware.numa_get_constraints would be hw:numa_nodes\n\ngenerating the extraspecs and bypasing that was just cleaner to show how it would work for a quick poc.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "060e310947c1249716b48c9b254ea2ecf4ff88a7", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_36486088", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_6b89156e", "updated": "2020-02-12 15:13:11.000000000", "message": "> One concern is that if the instance has implicit NUMA nodes, then\n > it can't be live-migration back to any host without NUMA modeling.\n\nYou are correct that the live migration *must* honor whatever topology was selected initially. We discussed this and decided it was an acceptable restriction. But yes, this needs to be spelled out in the spec, as it will increase the potential for NUMA-agnostic workloads to fail live migration in U+.\n\nHowever, you *can* still live-migrate to an unreshaped host (if it has room). That's what the fallback query is for. In this case the NumaTopologyFilter is responsible for ensuring the matching topology.\n\n > Another concern is this violates pack/spread also since you always\n > want to try 1 implicit numa node first, that means spread strategy.\n > It always want to choose a host whose NUMA nodes have more free\n > resources.\n\nThat's why we proposed to do *all* the queries, merge the results, and let the existing filters/weighers pick.\n\n > * To support  the non-NUMA aware requests after very compute is\n > reshaped to U  such request will be translated to the new query\n > syntax by trying out different splittings of the non-NUMA aware\n > requests to NUMA nodes.\n\nYes, but to be clear, we don't wait until all computes are reshaped before we start doing this.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "a9121cbae5fde47facf243822c5e3a89aed8743f", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_d609cc28", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_6b89156e", "updated": "2020-02-12 14:28:13.000000000", "message": "As far as I understand this solves my issue about Ussuri control plane + Train computes + NUMA aware flavors as the second query will use T syntaxt and therefore can place workload to T computes.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "04b0895fb7458cda3baa31a6be52c15c52f92ae7", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c0d26d33", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_803c7591", "updated": "2020-02-12 02:35:20.000000000", "message": "> > - To allow enabling the new modeling by default, we want to\n > > *translate NUMA-agnostic flavors*, allowing them to land on\n > > NUMA-modeled hosts. We do this by performing multiple separate\n > > queries in the \"aimed at reshaped computes\" category.\n > Essentially,\n > > for $n = 1 to $max, we pretend the flavor actually said\n > > hw:numa_nodes=$n (but allow asymmetric splitting). $max is a\n > > configurable maximum number of implicit NUMA nodes to try.\n > \n > One concern is that if the instance has implicit NUMA nodes, then\n > it can't be live-migration back to any host without NUMA modeling.\n > If the operator separates some of hosts as NUMA modeling, some of\n > hosts as not. Then I guess the operator doesn't want the implict\n > NUMA instance, maybe we can provide a config option to disable the\n > implict NUMA instance.\n\nAnother concern is this violates pack/spread also since you always want to try 1 implicit numa node first, that means spread strategy. It always want to choose a host whose NUMA nodes have more free resources.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "9177bfd45ddd72cfde50badeff2266fa08bd73aa", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_3fc6054c", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_a43c2c91", "updated": "2020-02-11 20:22:03.000000000", "message": "Okay, I see now that we have multiple concerns:\n\n1) A U control plane with (some number of) T computes.\n\n2) A fully-U deployment.\n\nAnd we need to deal with:\n\nA) NUMA-aware flavors (with hw:numa* in them)\n\nB) NUMA-agnostic flavors\n\nAnd the concern is:\n\ni) Use placement syntax that's U-aware\n\nii) Use legacy placement syntax\n\nAfter discussion [1], we came up with this proposal:\n\n- To avoid favoring reshaped U hosts and thereby violating pack/spread, server affinity, etc., we need to do two query types -- one aimed at downlevel computes and one at reshaped computes -- merge the results, and then let filters/weighers take the final swing.\n- Don't enforce segregation.\n- To allow enabling the new modeling by default, we want to *translate NUMA-agnostic flavors*, allowing them to land on NUMA-modeled hosts. We do this by performing multiple separate queries in the \"aimed at reshaped computes\" category. Essentially, for $n = 1 to $max, we pretend the flavor actually said hw:numa_nodes=$n (but allow asymmetric splitting). $max is a configurable maximum number of implicit NUMA nodes to try.\n- Because ^ is na\u00eff, the workaround is available to force a U host to behave like a T host, and thus continue to be subject to...\n- The second (\"fallback\") query in both (NUMA-aware and NUMA-agnostic flavor) cases specifies !HW_NUMA_NODE to make sure it only targets unreshaped hosts. This is so the fallback query doesn't accidentally land on a reshaped host, but straddling NUMA nodes.\n\n[1] http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-02-11.log.html#t2020-02-11T18:44:45", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fe8873c4", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_becd1b93", "updated": "2020-02-11 16:35:12.000000000", "message": "Wait, let me make sure I understand this paragraph correctly.\n\nI had originally thought the ussuri code was going to look like this:\n\n if extra_specs has hw:numa* stuff:\n     do the translated granular placement request\n     let the new-and-improved NTF filter candidates for anti-affinity and PCI\n else:\n     do the untranslated request (but with !HW_NUMA_ROOT added)\n\nBut this paragraph is proposing that it will instead do this:\n\n if extra_specs has hw:numa* stuff:\n     try:\n         do the translated granular placement request\n         let the new-and-improved NTF filter candidates for anti-affinity and PCI\n     except NoValidHosts:\n         do an old-style untranslated request (maybe even without !HW_NUMA_ROOT?)\n         use the old NTF to do all the filtering and fitting\n else:\n     do the untranslated request (but with !HW_NUMA_ROOT added)\n\n??\n\nIf that's the case, I'm not sure what would ever motivate operators to switch over.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1b214eb79d725d9fe9af12ab274cf4ea0860b94a", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_006ba553", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_c0d26d33", "updated": "2020-02-12 03:09:02.000000000", "message": "if we dont early out and actully do multiple numa requests and merge them we coudl spread but im not sure that is what we want to do from a performance point of view.\n\nif we did not early out and did up to [scheduler]/max_implcit_numa_nodes config always we could leave it to the werigher to do there normal spreading vs packing behavior.\n\nwithout the early out however i would then do set\n[scheduler]/max_implcit_numa_nodes=2  rather than\n[scheduler]/max_implcit_numa_nodes=4 which i think would an ok default if we had the early out.\n\nthat said i dont really agree that prefing smaller numa node counts violated packing vs spreading, at least in the small vm approximation. for large vms where only 1 or can fit per host numa node it will tend to spread yes but that also depends on the size of a numa noded.\n\non moderen zen 2 amd eypc chips with 1 numa node per cache region enabled in the bios tech numa node has 3-4 phyical core or 6-8 thread and about 64G of ram. so on those hosts if you ask for 16 cores its going to always  be spread over 2 numa nodes.if your on an intel system where the numa nodes are larger then you could fit it on 1 numa node.\n\nif we were really concerend we could make it configurable. e.g. start with most numa node and get smaller, start with smllest and get larger or generate all in the range and merge. those are basicaly the 3 options.\n\noption 3 i think is what you want as it lets the weigher decided at the cost of scheduler performance.\n\nlive migration betwen a numa host and a train compute node should be possible provide the train compute node can support the numa topology of the guest. similarly if you have disable numa reporting on a Ussuri host the fall back query would allow that host to be selected and if the numa toplogy filter said it was fine it would be a candiate.\n\nthe only added constrait would be with an implcit numa toplogy for all instances we would only be able to live migrate if that implcit topology was supported. that come directly for the idea that we cannot alter the hardware topology in the guest will it is running.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "afeb44094a1ec1847c174fd2769737d462578bfe", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_a43c2c91", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_e49a24c2", "updated": "2020-02-11 17:42:34.000000000", "message": "yep this is exactly what we are proposing and why we did the fall back for PCPUs.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c31e744e3efd900bfdd7eca7d5c186c86aca1ac4", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_3964e5e5", "line": 516, "range": {"start_line": 510, "start_character": 0, "end_line": 516, "end_character": 53}, "in_reply_to": "3fa7e38b_fe8873c4", "updated": "2020-02-11 16:41:29.000000000", "message": "I understand the need to push the operators to switch. But pushing them to do the switch right at the upgrade feels too much to me. It would like an ultimate. \"When you upgrade to Ussuri you will loose all the NUMA aware capacity of your cloud, but you can get them back iff you do the reshape one every NUMA aware compute, but you should not do that all at once as that will overload placement.\"", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_9e685ff3", "line": 557, "updated": "2020-02-11 16:35:12.000000000", "message": "Pretty sure this section will render empty as written.", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_25334cc6", "line": 557, "in_reply_to": "3fa7e38b_9e685ff3", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "01779e262cc2ea625c7a9e074c793613836ced58", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_5ea98722", "line": 565, "range": {"start_line": 565, "start_character": 25, "end_line": 565, "end_character": 26}, "updated": "2020-02-11 16:35:12.000000000", "message": "extra space", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "02c4341d8be515cc15790070e4824cadc6592878", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_453688b5", "line": 565, "range": {"start_line": 565, "start_character": 25, "end_line": 565, "end_character": 26}, "in_reply_to": "3fa7e38b_5ea98722", "updated": "2020-02-12 11:43:57.000000000", "message": "Done", "commit_id": "07e6b8feda440a989dab8d2480100a92725c0a47"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7dd85899d0fa4e1c72e0dfed18c7204462c267ff", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_05b17000", "line": 525, "range": {"start_line": 519, "start_character": 0, "end_line": 525, "end_character": 53}, "updated": "2020-02-12 11:52:58.000000000", "message": "This is controversial as I understand and Eric you alreasy tried to provide me a outcome consensus in https://review.opendev.org/#/c/552924/17/specs/ussuri/approved/numa-topology-with-rps.rst@516\n\nCould you please summarize it another way ? I didn't understand. \n\nThanks.", "commit_id": "adbd5203826b9c7c596d192f3f9e4381188670fe"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_9dc3658c", "line": 24, "range": {"start_line": 24, "start_character": 10, "end_line": 24, "end_character": 16}, "updated": "2020-02-13 10:05:07.000000000", "message": "these", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_0b972c9e", "line": 24, "range": {"start_line": 24, "start_character": 10, "end_line": 24, "end_character": 16}, "in_reply_to": "3fa7e38b_9dc3658c", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_1db77524", "line": 78, "range": {"start_line": 78, "start_character": 19, "end_line": 78, "end_character": 21}, "updated": "2020-02-13 10:05:07.000000000", "message": "nit: space", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_6b56e0fb", "line": 78, "range": {"start_line": 78, "start_character": 19, "end_line": 78, "end_character": 21}, "in_reply_to": "3fa7e38b_1db77524", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3db27132", "line": 92, "range": {"start_line": 92, "start_character": 56, "end_line": 92, "end_character": 63}, "updated": "2020-02-13 10:05:07.000000000", "message": "evenly", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_4b5be421", "line": 92, "range": {"start_line": 92, "start_character": 56, "end_line": 92, "end_character": 63}, "in_reply_to": "3fa7e38b_3db27132", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_bd3bc197", "line": 116, "range": {"start_line": 116, "start_character": 16, "end_line": 116, "end_character": 24}, "updated": "2020-02-13 10:05:07.000000000", "message": "tougher", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_2b9a28c3", "line": 116, "range": {"start_line": 116, "start_character": 16, "end_line": 116, "end_character": 24}, "in_reply_to": "3fa7e38b_bd3bc197", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3d47d11d", "line": 128, "range": {"start_line": 128, "start_character": 1, "end_line": 128, "end_character": 33}, "updated": "2020-02-13 10:05:07.000000000", "message": "I don't know why we can't standardize on these. There are only a few options available on the platforms we care about (x86, POWER, ARM, ARM64). Surely we can enumerate these, perhaps with a fallback to custom sizes for really weird page sizes?", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_8baa3cd0", "line": 128, "range": {"start_line": 128, "start_character": 1, "end_line": 128, "end_character": 33}, "in_reply_to": "3fa7e38b_3d47d11d", "updated": "2020-02-13 13:56:05.000000000", "message": "> I don't know why we can't standardize on these. There are only a\n > few options available on the platforms we care about (x86, POWER,\n > ARM, ARM64). Surely we can enumerate these, perhaps with a fallback\n > to custom sizes for really weird page sizes?\n\nLet's just leave this to be an implementation question. FWIW, using custom traits is good with me but if the consensus moves to ask to have standard traits, then OK.\n\n(FWIW, we could have a looooooot of standard traits then)", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ff7435c9c7a5b772e589467b97c275377e90754", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_152d09ad", "line": 128, "range": {"start_line": 128, "start_character": 1, "end_line": 128, "end_character": 33}, "in_reply_to": "3fa7e38b_3d47d11d", "updated": "2020-02-13 12:34:16.000000000", "message": "that was covered in the etherpad.\nbasically if we did we would need to do an uncachable addtional call to placement to get the set of traits  as that could change over time. so using a custom trait allows us to avoid that.\n\n-----------------------------------------------------------\nerric:As long as we can know beforehand all the possible page sizes, that's fine. But it would be a pain to have to make a code change to support a new page size that pops up in the world.\n\nme: ya so right not its free form but there are only 3 i know if in use in opentack envs and technically only 6-8 that the main 3 architcure suport\n\nerric:we can probably create standard traits for the ones we know about, and the nova code can just go figure out if a standard trait exists for $size (this requires an extra placement call, but a cheap one) and if not generate a CUSTOM one according to rules. That would allow us to grow without forcing code changes on boundaries.\n\nme: +1 (delete form etherpad but i suggested skiping placmeent call and just checking os-traits)\n\nerric: nope, can't use os_traits. What we have there locally may not be the same as what the placement db has. Been down this road before.\n\nme: i was hoping we could assume the api server and placmente had the same version but ok ill take your word for it\nwe shoudl be able to look it up once and cache it\n\nerric: sorry, also no :( as if you upgrade os_traits on the placement server that can change. (upgrade os_traits, and then db-sync placement)\n\nme:so maybe thats a argument for just using custom_ to avoid the check.\n\nerric:yeah, I wouldn't be opposed to that.\nme: ok lets put that in the spec and people can weight in \nerric: ack\n\nsee lines 132-143 https://etherpad.openstack.org/p/mem_page_size_and_placement", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_1d6535b0", "line": 191, "range": {"start_line": 191, "start_character": 23, "end_line": 191, "end_character": 41}, "updated": "2020-02-13 10:05:07.000000000", "message": "have child", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_ab8e1877", "line": 191, "range": {"start_line": 191, "start_character": 23, "end_line": 191, "end_character": 41}, "in_reply_to": "3fa7e38b_1d6535b0", "updated": "2020-02-13 13:56:05.000000000", "message": "> have child\n\ndone", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ff7435c9c7a5b772e589467b97c275377e90754", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_7521ddb1", "line": 191, "range": {"start_line": 191, "start_character": 23, "end_line": 191, "end_character": 41}, "in_reply_to": "3fa7e38b_1d6535b0", "updated": "2020-02-13 12:34:16.000000000", "message": "be having is such an irish thing to do i am proud of you sylvain. that would be a literal translation of how we express that in Irish \"p\u00e1ist\u00ed a bheith agat\"\n i guess its also how its congregated in French.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_8b931ca4", "line": 191, "range": {"start_line": 191, "start_character": 23, "end_line": 191, "end_character": 41}, "in_reply_to": "3fa7e38b_7521ddb1", "updated": "2020-02-13 13:56:05.000000000", "message": "> be having is such an irish thing to do i am proud of you sylvain.\n > that would be a literal translation of how we express that in Irish\n > \"p\u00e1ist\u00ed a bheith agat\"\n > i guess its also how its congregated in French.\n\nLOL\nFWIW, knowing to say either 'have' or 'be having' for a French folk is a bit difficult given we don't have this in French :)", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_292d5044", "line": 191, "range": {"start_line": 191, "start_character": 23, "end_line": 191, "end_character": 41}, "in_reply_to": "3fa7e38b_ab8e1877", "updated": "2020-02-13 16:19:54.000000000", "message": "Chaque `NUMA_RP`_ devrait \u00eatre en ayant enfant RPs...\n\nis totally not a construction that would *ever* happen in French.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_7d6a2982", "line": 197, "updated": "2020-02-13 10:05:07.000000000", "message": "think you need a newline after this for it to render correctly. Also, dedent the next lines", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_5df40dd0", "line": 209, "range": {"start_line": 209, "start_character": 37, "end_line": 209, "end_character": 49}, "updated": "2020-02-13 10:05:07.000000000", "message": "have", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_9d1fe509", "line": 233, "updated": "2020-02-13 10:05:07.000000000", "message": "I agree that this should default to disabled. That's pretty much what we did for the cpu-resources (PCPU) work: you need to set the new config options '[compute] cpu_shared_set' and '[compute] cpu_dedicated_set' in order to trigger the reshape.\n\nWith that said, is this really a workaround option? I understand that it's temporary, but don't workaround options normally default to off? Perhaps something like '[compute] enable_numa_reporting' would be better? We're going to deprecate whichever one we choose at some point anyway.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_49968c4c", "line": 233, "in_reply_to": "3fa7e38b_4bde846b", "updated": "2020-02-13 16:19:54.000000000", "message": "This being a [workaround] goes hand in hand with making reshaping the default behavior in U. If we decide to go back to the PS16 idea of making the reshape opt-in (which I objected to on the grounds that there would be no motivation for operators to switch over, thus making all this work pretty much a waste of time) then I agree it shouldn't be a [workaround].\n\nWe can bikeshed whether the opt name/value is positive or negative at impl time. See https://review.opendev.org/#/c/657078/3/nova/conf/workarounds.py@247", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_4bde846b", "line": 233, "in_reply_to": "3fa7e38b_9d1fe509", "updated": "2020-02-13 13:56:05.000000000", "message": "> I agree that this should default to disabled. That's pretty much\n > what we did for the cpu-resources (PCPU) work: you need to set the\n > new config options '[compute] cpu_shared_set' and '[compute]\n > cpu_dedicated_set' in order to trigger the reshape.\n > \n > With that said, is this really a workaround option? I understand\n > that it's temporary, but don't workaround options normally default\n > to off? Perhaps something like '[compute] enable_numa_reporting'\n > would be better? We're going to deprecate whichever one we choose\n > at some point anyway.\n\nLet's just discuss this by the implementation changes", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_fdba99dd", "line": 254, "updated": "2020-02-13 10:05:07.000000000", "message": "Are you suuure? That's going to be a lot of work. Why wouldn't we just block this operation, i.e. once you're in the new world there's no going back", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_8bc1dc83", "line": 254, "in_reply_to": "3fa7e38b_38835c57", "updated": "2020-02-13 13:56:05.000000000", "message": "> thats what we had previously. i was suggesting the alternitive was\n > if we blocked it and you really wanted to go back then drain the\n > host, stop the agent and upsdate the config, remove the compute\n > service, then start the agent again.\n > \n > others want the bidirectional translation however.\n\nI'm not sure it would be a huge work, but again, let's just see this by the implementation and in case we no longer agree with moving back to 'no-NUMA' inventories, then we could modify this spec.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_89c7a446", "line": 254, "in_reply_to": "3fa7e38b_fdba99dd", "updated": "2020-02-13 16:19:54.000000000", "message": "> Are you suuure? That's going to be a lot of work. Why wouldn't we\n > just block this operation, i.e. once you're in the new world\n > there's no going back\n\nNo matter what approach we take (even can_split), a reshaped host is going to have a decreased ability to land NUMA-agnostic flavors. The reversible behavior is for the case where somebody's hosts/flavors happen to be set up in such a way that the decrease is significant/painful.\n\nAgain, I think \"can we go backwards\" is tied to whether we cut over by default or not. If it's opt-in, then I agree we can probably get away with no takesey-backseys.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ff7435c9c7a5b772e589467b97c275377e90754", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_38835c57", "line": 254, "in_reply_to": "3fa7e38b_fdba99dd", "updated": "2020-02-13 12:34:16.000000000", "message": "thats what we had previously. i was suggesting the alternitive was if we blocked it and you really wanted to go back then drain the host, stop the agent and upsdate the config, remove the compute service, then start the agent again.\n\nothers want the bidirectional translation however.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_5dcbad71", "line": 258, "range": {"start_line": 258, "start_character": 52, "end_line": 258, "end_character": 57}, "updated": "2020-02-13 10:05:07.000000000", "message": "drop this", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3dbcb1d3", "line": 258, "range": {"start_line": 258, "start_character": 71, "end_line": 258, "end_character": 75}, "updated": "2020-02-13 10:05:07.000000000", "message": "in order to prevent", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_ab41380a", "line": 258, "range": {"start_line": 258, "start_character": 52, "end_line": 258, "end_character": 57}, "in_reply_to": "3fa7e38b_5dcbad71", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3d6a714f", "line": 262, "updated": "2020-02-13 10:05:07.000000000", "message": "Did dansmith actually agree to this? :) I recall him being fairly against the double query to placement for the PCPU work and that was only okay because there was a very short period of time where it would actually happen. This seems like a much longer term thing.\n\nI'm also not sure how well this would actually work in practice? How do you determine how to split the guest across NUMA nodes? I imagine unless we try every possible combination (which would result in a *lot* of queries to placement), we're still going to regress because we wouldn't be able to satisfy combinations like booting a 4 core instance on a host with 1 core free on node #0 and 3 cores free on node #1.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_4940cca3", "line": 262, "in_reply_to": "3fa7e38b_3d6a714f", "updated": "2020-02-13 16:19:54.000000000", "message": "> Did dansmith actually agree to this? :) I recall him being fairly\n > against the double query to placement for the PCPU work and that\n > was only okay because there was a very short period of time where\n > it would actually happen. This seems like a much longer term thing.\n\nWe only need this until can_split is implemented.\n\n > I'm also not sure how well this would actually work in practice?\n > How do you determine how to split the guest across NUMA nodes? I\n > imagine unless we try every possible combination (which would\n > result in a *lot* of queries to placement), we're still going to\n > regress because we wouldn't be able to satisfy combinations like\n > booting a 4 core instance on a host with 1 core free on node #0 and\n > 3 cores free on node #1.\n\nAll true.\n\nThe proposed algorithm just splits \"evenly\" (overflow by 1 for asymmetrical splits; e.g. 5 => 3/2, but not 4/1). We acknowledge and accept that it's not perfect. It should work a large percentage of the time, but it will indeed fail to fit the 4=>3/1 example you give. And that's why we provide the [workaround] to let you stick to the old way if that truly causes a problem in your cloud.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "7ff7435c9c7a5b772e589467b97c275377e90754", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_989370a4", "line": 262, "in_reply_to": "3fa7e38b_3d6a714f", "updated": "2020-02-13 12:34:16.000000000", "message": "dansmith suggested this. although it was ment to be an int not a bool as i noted below.\n\ni have done a quick poc which i atttach to the previous version as a coment if you want to take a look but ill proably push a patch later today to implement a small part of it.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "aa897430bf2e1d1a1b9287192c2e270735b8d18a", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_97510b34", "line": 267, "range": {"start_line": 267, "start_character": 2, "end_line": 267, "end_character": 75}, "updated": "2020-02-12 20:34:54.000000000", "message": "this is not quite correct.\n\nthis was ment to be \n[scheduler]/max_implicit_numa_nodes where setting it to 0 was how you disabled the progressive splitting.\n\nthis option would continue to exist until placement meant could support a similar feature.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_2b0468c4", "line": 267, "range": {"start_line": 267, "start_character": 2, "end_line": 267, "end_character": 75}, "in_reply_to": "3fa7e38b_7860f49e", "updated": "2020-02-13 13:56:05.000000000", "message": "> also the other reason we want this to not be a workaround is only\n > libvirt will support numa in placment initally\n > \n > so if you are deploying with any other virt driver we will want\n > [scheduler]/max_implicit_numa_nodes=0 to be the default so on a\n > powervm cloud we dont query placment for things that wont exisit or\n > an ironic cloud.\n\nOK, you know what, we are very close to the spec deadline, so I'll change it back to be [scheduler]/max_implicit_sth = 0 and let's discuss on it by the implementation.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_ab6a987e", "line": 267, "range": {"start_line": 267, "start_character": 2, "end_line": 267, "end_character": 75}, "in_reply_to": "3fa7e38b_97510b34", "updated": "2020-02-13 13:56:05.000000000", "message": "> this is not quite correct.\n > \n > this was ment to be\n > [scheduler]/max_implicit_numa_nodes where setting it to 0 was how\n > you disabled the progressive splitting.\n > \n > this option would continue to exist until placement meant could\n > support a similar feature.\n\nWhat would be the maximum value for this from an operator question ?\n\nSay you have a flavor with 16 vCPUS, should the max limit to be 16 ?", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9bad72972635d7b234327e68b87058f68021ff50", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_7860f49e", "line": 267, "range": {"start_line": 267, "start_character": 2, "end_line": 267, "end_character": 75}, "in_reply_to": "3fa7e38b_97510b34", "updated": "2020-02-13 12:40:24.000000000", "message": "also the other reason we want this to not be a workaround is only libvirt will support numa in placment initally\n\nso if you are deploying with any other virt driver we will want [scheduler]/max_implicit_numa_nodes=0 to be the default so on a powervm cloud we dont query placment for things that wont exisit or an ironic cloud.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_49f52c51", "line": 267, "range": {"start_line": 267, "start_character": 2, "end_line": 267, "end_character": 75}, "in_reply_to": "3fa7e38b_ab6a987e", "updated": "2020-02-13 16:19:54.000000000", "message": "You mean when we document guidelines for how the operator should set this? I don't think the operator should bother thinking about their flavors to decide, since the algorithm will skip any attempts that would put 0 CPUs on any NUMA node.\n\nI think there are two considerations. The first is simple: it should never be higher than the max number of NUMA nodes on any host in your cloud. If it were, those extra queries would always yield zero results, but you still incurred the expense of doing them.\n\nThe second is a bit fuzzier: weigh scheduling performance (number of queries) against \"desire to fit\". If the latter is paramount, an arbitrarily large number is best.\n\n(Realistically, I don't think the extra placement queries are likely to be noticeably expensive; but feeding lots of extra candidates into the filters/weighers might be.)", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "aa897430bf2e1d1a1b9287192c2e270735b8d18a", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_f704ff1a", "line": 297, "range": {"start_line": 296, "start_character": 2, "end_line": 297, "end_character": 25}, "updated": "2020-02-12 20:34:54.000000000", "message": "this would be the fallback query and would be the only one we do if you set if you set [scheduler]/max_implicit_numa_node=0\n\notherwise we woudl addtionally query with 1-N numa nodes\nwhere n is minium of the flavor.vcpus and the config option.\n\nwe do not need to detail the exact details fo how the progressive spliting will be done but we should mention it here.\n\nif you want you can refer to it and put it in a seperate section later", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_ebb090fe", "line": 297, "range": {"start_line": 296, "start_character": 2, "end_line": 297, "end_character": 25}, "in_reply_to": "3fa7e38b_f704ff1a", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "ead047ea7b827e3a9e464cb1916ebe5a9626322d", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_9dde050d", "line": 487, "updated": "2020-02-13 10:05:07.000000000", "message": "What about the option where NUMA reporting was something you opted in or out of, and booting instances on a host with a NUMA topology would automatically enable an implicit NUMA topology and those with an explicit NUMA topology would be restricted to hosts with either NUMA reporting enabled or, as a fallback, without it configured? We've discussed this before and I think we decided it would be a bad idea but I don't recall why...", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_c90b5c2a", "line": 487, "in_reply_to": "3fa7e38b_9dde050d", "updated": "2020-02-13 16:19:54.000000000", "message": "> What about the option where NUMA reporting was something you opted\n > in or out of, and booting instances on a host with a NUMA topology\n > would automatically enable an implicit NUMA topology\n\nIn this case you still have to decide what that topology will be. Is it implicitly hw:numa_nodes=1? Then we have the fitting problem.\n\n > and those with\n > an explicit NUMA topology would be restricted to hosts with either\n > NUMA reporting enabled\n\nThis was going to break pack/spread and server affinity. Maybe that's acceptable.\n\n > or, as a fallback, without it configured?\n\nI don't understand this part.\n\nTL;DR we ended up where we are for two reasons:\n- Dealing with a partially-upgraded cloud, we need to be able to land both NUMA-aware and NUMA-agnostic flavors without impacting pack/spread and server affinity. We're compromising a little on fittability with the \"even split\" algorithm.\n- If we make the cutover opt-in only, nobody's going to do it; there would be no reason. (Citing the PCPU thing as a precedent isn't valid: PCPUs offer a tangible benefit to make operators *want* to cut over.)\n\nThis is explained in a bit more detail here: https://review.opendev.org/#/c/552924/17/specs/ussuri/approved/numa-topology-with-rps.rst@516", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_4b6f6460", "line": 487, "in_reply_to": "3fa7e38b_9dde050d", "updated": "2020-02-13 13:56:05.000000000", "message": "> What about the option where NUMA reporting was something you opted\n > in or out of, and booting instances on a host with a NUMA topology\n > would automatically enable an implicit NUMA topology and those with\n > an explicit NUMA topology would be restricted to hosts with either\n > NUMA reporting enabled or, as a fallback, without it configured?\n > We've discussed this before and I think we decided it would be a\n > bad idea but I don't recall why...\n\nLet's discuss this as an implementation detail.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "aa897430bf2e1d1a1b9287192c2e270735b8d18a", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_321dc560", "line": 514, "updated": "2020-02-12 20:34:54.000000000", "message": "the progressive spliting may have a perfomance impact on schduling so we will have the [scheduler]/max_implicit_numa_nodes to contol the behavior.\n\nthe numa toplogy filter is one of the most expeincive filster we run so in general this shoudl still be a performace win but its proably worth mentioning.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_6b910050", "line": 514, "in_reply_to": "3fa7e38b_321dc560", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "aa897430bf2e1d1a1b9287192c2e270735b8d18a", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_d23c71c1", "line": 559, "range": {"start_line": 553, "start_character": 2, "end_line": 559, "end_character": 14}, "updated": "2020-02-12 20:34:54.000000000", "message": "it would be good to intoduced this earlier.\nas i said test_numa_hosts_for_agnostic_instances\nshould be an int field called  [scheduler]/max_implicit_numa_nodes\n\nnot a bool as this will likely continue for several cycle unless can_split is added or a simlar feature to do this in placement.", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7e2c54abb3a2b1ca43a4ad5a317cbe3a3a1e97d8", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_abc61868", "line": 559, "range": {"start_line": 553, "start_character": 2, "end_line": 559, "end_character": 14}, "in_reply_to": "3fa7e38b_d23c71c1", "updated": "2020-02-13 13:56:05.000000000", "message": "Done", "commit_id": "565191f33536b6c6c2882fd37ad25323a6b28c78"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_e478bd7d", "line": 235, "range": {"start_line": 235, "start_character": 53, "end_line": 235, "end_character": 57}, "updated": "2020-02-13 16:19:54.000000000", "message": "No, default to False. We want to enable reshaping by default.", "commit_id": "4dba90a39488eb6094c862403b01defdab85c6d4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "642b95acc3b7a8b673361a5a1a92add5ef4bbcfd", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_84ff8933", "line": 235, "range": {"start_line": 235, "start_character": 53, "end_line": 235, "end_character": 57}, "in_reply_to": "3fa7e38b_e478bd7d", "updated": "2020-02-13 16:38:08.000000000", "message": "for the record I'm fine both ways.", "commit_id": "4dba90a39488eb6094c862403b01defdab85c6d4"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8124556605db991ec500d17c59ff2f9d2a749044", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_c49ca1bf", "line": 269, "range": {"start_line": 269, "start_character": 34, "end_line": 269, "end_character": 56}, "updated": "2020-02-13 16:19:54.000000000", "message": "I think we need to default to a number that's *least* likely to result in regressive behavior. Zero means NUMA-agnostic flavors will *never* land on reshaped hosts. That's bad, especially if we're reshaping by default.\n\nAs Sean notes, performance should be a net gain even if we do a zillion placement queries because it's the filters and retries that are expensive.\n\nSo IMO we should make this \"large\" by default. We could even make it \"unlimited\" -- the algorithm would max it out at the number of VCPUs in the flavor. But I say at least 4.", "commit_id": "4dba90a39488eb6094c862403b01defdab85c6d4"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "3ec63c24c3a1680f0dc0dd7c486c397504f9686e", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_f40384bb", "line": 269, "range": {"start_line": 269, "start_character": 34, "end_line": 269, "end_character": 56}, "in_reply_to": "3fa7e38b_6485adaa", "updated": "2020-02-13 22:04:51.000000000", "message": "4 was also the number i was thiniking of if we enabeld the spliting by default for what its worth.\n\nthere are number of reasons for this but its the number i cam back to if we did not set it to 0", "commit_id": "4dba90a39488eb6094c862403b01defdab85c6d4"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "642b95acc3b7a8b673361a5a1a92add5ef4bbcfd", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_6485adaa", "line": 269, "range": {"start_line": 269, "start_character": 34, "end_line": 269, "end_character": 56}, "in_reply_to": "3fa7e38b_c49ca1bf", "updated": "2020-02-13 16:38:08.000000000", "message": "4 works for me.", "commit_id": "4dba90a39488eb6094c862403b01defdab85c6d4"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_837a1cec", "line": 235, "range": {"start_line": 235, "start_character": 2, "end_line": 235, "end_character": 36}, "updated": "2020-02-13 20:06:22.000000000", "message": "It needs to be made clear which kinds of flavors would be able to land on which kinds of hosts.\n\n                     ``enable_numa_reporting_to_placement``:\n                         None (or pre-U)  False   True\n NUMA-aware flavor:        yes              no     yes\n NUMA-agnostic flavor:     yes             yes      no\n\nEven better would be an explanation of which queries are invoked in each case, and why the result is what it is. For example\n\n- NUMA-aware flavor lands on `True` due to the complex query with granular groups, affinity (same_subtree), and HW_NUMA_ROOT.\n- NUMA-aware flavor lands on `None/pre-U` due to the 'fallback query'.\n- NUMA-agnostic flavor lands on `None/pre-U` and `False` but not on `True` because we did a simple resource query but added !HW_NUMA_ROOT. (This is what you describe in the section starting on L274.)\n\nHowever:\n\n- NUMA-aware flavor doesn't land on `False` because... why? Without some additional design element, the 'fallback query' would hit such a host, right?", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "2c2e47d466c43a245f2fac256dc33f9f61d009c9", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_2f69c921", "line": 235, "range": {"start_line": 235, "start_character": 2, "end_line": 235, "end_character": 36}, "in_reply_to": "3fa7e38b_34cd9c5a", "updated": "2020-02-14 00:27:58.000000000", "message": "ya so we cant do that with placment unless we alter the query. e.g. we use group_policy=isolate and put the memroy and cpus in different groups. in that case the numa instance will not be able to land on the non numa host since on a non numa host the ram and cpus would be in the root RP. but i dont think that is what we want.\n\nyou could expcitly add a NON_NUMA tratit to the compute node RP when set to false i guess. that avoid the need for group_policy=isolate which i think we should not do.\ngiven that we want to move to alwasy reporting numa eventually i think the COMPUTE_NON_NUMA is a non starter.\n\nso the only viable option i can think of is adding all compute nodes to a placment aggreate and useing member_of=!<hard codded uuid5 for non numa hosts> which would work and would not have negitive side effects if we really need something explcit. grouping a random set of RP based on an arbitary reason the client cares about is why aggreates exist in placment os use a forbiden aggreate with the numa aware query seam to make sense.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "34dd0ddea9d2d1e2c37caa809e8cdcc95bd24d7c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_34cd9c5a", "line": 235, "range": {"start_line": 235, "start_character": 2, "end_line": 235, "end_character": 36}, "in_reply_to": "3fa7e38b_74c6b46b", "updated": "2020-02-13 22:22:14.000000000", "message": "> in this case we are relying on filters to prevent that.\n\nEh? What filter would prevent that? Not a filter that exists today.\n\n > specificly we are relying on operators having configured either\n > host aggrates for numa flavors or compute capablities.\n > \n > and failing that we are relying on the numa toplogy filter\n > determine if the host could fit the vm.\n > so basically we are relying on them having configure there cloud to\n > handle this case as they would do today/pre-U.\n\nYeah, none of that is good enough. We need something explicit to enforce the segregation that is the crux of this design.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_fdb7e4cf", "line": 235, "range": {"start_line": 235, "start_character": 2, "end_line": 235, "end_character": 36}, "in_reply_to": "3fa7e38b_837a1cec", "updated": "2020-02-14 13:48:16.000000000", "message": "> However:\n > \n > - NUMA-aware flavor doesn't land on `False` because... why? Without\n > some additional design element, the 'fallback query' would hit such\n > a host, right?\n\n\nYou missed a crucial point when we agreed between Stephen and I : we don't plan to allow NUMA-aware flavors to land on *intentionally* NUMA-disabled hosts.\n\nThe whole purpose of the failback mechanism was to allow a transition period in Ussuri but now that we have the None value for it, it solves the problem without needing a fallback system.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9644a48cc4261004e9db8919a07fe7eba8418026", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_74c6b46b", "line": 235, "range": {"start_line": 235, "start_character": 2, "end_line": 235, "end_character": 36}, "in_reply_to": "3fa7e38b_837a1cec", "updated": "2020-02-13 22:17:11.000000000", "message": "yes it would.\nin this case we are relying on filters to prevent that.\n\nspecificly we are relying on operators having configured either host aggrates for numa flavors or compute capablities.\n\nand failing that we are relying on the numa toplogy filter determine if the host could fit the vm.\nso basically we are relying on them having configure there cloud to handle this case as they would do today/pre-U.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_83c8dc1f", "line": 249, "range": {"start_line": 249, "start_character": 23, "end_line": 249, "end_character": 61}, "updated": "2020-02-13 20:06:22.000000000", "message": "Hum, I would think there would be no default; we would simply start disallowing ``None``/unspecified to force the operator to set it.\n\nThat's a decision we don't have to make right now, though.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_bd12ccb1", "line": 249, "range": {"start_line": 249, "start_character": 23, "end_line": 249, "end_character": 61}, "in_reply_to": "3fa7e38b_748b1421", "updated": "2020-02-14 13:48:16.000000000", "message": "Done", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9644a48cc4261004e9db8919a07fe7eba8418026", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_748b1421", "line": 249, "range": {"start_line": 249, "start_character": 23, "end_line": 249, "end_character": 61}, "in_reply_to": "3fa7e38b_83c8dc1f", "updated": "2020-02-13 22:17:11.000000000", "message": "that would have the same effect i guess. and ya we can decide that next cycle.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_06fabab9", "line": 254, "range": {"start_line": 254, "start_character": 33, "end_line": 254, "end_character": 48}, "updated": "2020-02-13 20:06:22.000000000", "message": "I'll say again, I don't believe there will be a noticeable delay. We can revisit this in the implementation, but we should have some actual evidence before we document this.\n\nHowever, we *should* document that, once you set the value, there's no going back (without major disruption).\n\nThinking about that, though: is there a reason to allow or disallow changing from False to True? Would it even be possible for us to disallow that if we wanted to? I guess it depends how we address the issue noted above: how do we tell the difference between pre-U, `None`, and `False` in the first place?", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9644a48cc4261004e9db8919a07fe7eba8418026", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_b47e6c17", "line": 254, "range": {"start_line": 254, "start_character": 33, "end_line": 254, "end_character": 48}, "in_reply_to": "3fa7e38b_06fabab9", "updated": "2020-02-13 22:17:11.000000000", "message": "in this case sylvain is refering the one time start up penalty to do the inital reshape i think. rather then an ongoing performace hit.\n\ne.g. the first time the agent start and does the reshape it will take longer to finish starting up.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_9d74b005", "line": 254, "range": {"start_line": 254, "start_character": 33, "end_line": 254, "end_character": 48}, "in_reply_to": "3fa7e38b_2f8549ab", "updated": "2020-02-14 13:48:16.000000000", "message": "I'll just drop this note which is useless.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "34dd0ddea9d2d1e2c37caa809e8cdcc95bd24d7c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_f404e47e", "line": 254, "range": {"start_line": 254, "start_character": 33, "end_line": 254, "end_character": 48}, "in_reply_to": "3fa7e38b_b47e6c17", "updated": "2020-02-13 22:22:14.000000000", "message": "> in this case sylvain is refering the one time start up penalty to\n > do the inital reshape i think. rather then an ongoing performace\n > hit.\n\nYes, I know; I'm saying I don't think that hit will be noticeable. It's a single call to the placement API. Worst case it affects, what, hundreds of database records on the placement side?", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "4f2cc11397c2e1f12db8d84530b2dfa1f282bd6e", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_2f8549ab", "line": 254, "range": {"start_line": 254, "start_character": 33, "end_line": 254, "end_character": 48}, "in_reply_to": "3fa7e38b_f404e47e", "updated": "2020-02-14 00:33:07.000000000", "message": "right if the only allcoation we are updating are the allcoation of numa affined instance then it should be relitivly cheap to loop over there instance numa toplogy blobs and determin which RPs to create allcoations against.\n\nif we have a non numa instnace on a numa reporting host then we would have to caluate a numa fiting for it and that could be expensive if we need to retry.\n\nare we sugesting that we just hard error if you enable numa reporting on a host with non numa affined instances.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_83069ccb", "line": 282, "updated": "2020-02-13 20:06:22.000000000", "message": "tbc, this will be able to land on\n- old hosts\n- new hosts with enable_numa_reporting_to_placement = None\n- new hosts with enable_numa_reporting_to_placement = False\n\nright?", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_7d7d34e3", "line": 282, "in_reply_to": "3fa7e38b_83069ccb", "updated": "2020-02-14 13:48:16.000000000", "message": "> tbc, this will be able to land on\n > - old hosts\n > - new hosts with enable_numa_reporting_to_placement = None\n > - new hosts with enable_numa_reporting_to_placement = False\n > \n > right?\n\nCorrect, I just added a table in the next revision to clarify what can land on where, as you proposed.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "9644a48cc4261004e9db8919a07fe7eba8418026", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_74747437", "line": 282, "in_reply_to": "3fa7e38b_83069ccb", "updated": "2020-02-13 22:17:11.000000000", "message": "yes, HW_NUMA_ROOT was not used in train so !HW_NUMA_ROOT will allow all old hosts and false and None since we are not reporting by default in U.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_03faacb9", "line": 287, "range": {"start_line": 287, "start_character": 0, "end_line": 287, "end_character": 31}, "updated": "2020-02-13 20:06:22.000000000", "message": "well, we're giving the operator the *opportunity* to shard, but we're not forcing it, and we're not doing it by default.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_dd6d4830", "line": 287, "range": {"start_line": 287, "start_character": 0, "end_line": 287, "end_character": 31}, "in_reply_to": "3fa7e38b_03faacb9", "updated": "2020-02-14 13:48:16.000000000", "message": "Done", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_e32c304a", "line": 506, "range": {"start_line": 506, "start_character": 0, "end_line": 506, "end_character": 8}, "updated": "2020-02-13 20:06:22.000000000", "message": "or explicitly disabling\n\nIOW setting enable_numa_reporting_to_placement to a non-None value", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6691f3fe646732b6bfb4c07e5437fccf355f6604", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_86ad4aa5", "line": 537, "updated": "2020-02-13 20:06:22.000000000", "message": "Okay, somewhere along the way we lost the explanation of the 'fallback query'. that needs to be added back in somewhere.\n\nIIUC with the proposed design it would work like this:\n\n- For NUMA-agnostic flavors (no hw:numa*-isms) we do a single query, non-granular, with !HW_NUMA_ROOT, as described in the section starting on L274. This can land on pre-U, `None`, and `False` hosts, which will behave exactly as today.\n- For NUMA-aware flavors (containing hw:numa*-isms), we will do two queries [1]: The first with granular groups, affinity, and HW_NUMA_ROOT as described in the section starting on L296 will hit `True` (reshaped) hosts. The second will look like the NUMA-agnostic query to hit pre-U and `None` hosts [2].\n\n[1] We have to decide whether we a) always do both and merge the results; or b) do one (which one?) and then only do the second if the first one yields no results. The latter would be likely to violate pack/spread and affinity groups, so my preference is for the former.\n[2] Except, as noted in the comment on L235, that will also hit `False` hosts, so we need to add some design element to prevent that.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "0593c7cd00f31893b47fe7d86a05079fcf0af22c", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_dd46a8a8", "line": 537, "in_reply_to": "3fa7e38b_86ad4aa5", "updated": "2020-02-14 13:48:16.000000000", "message": "> Okay, somewhere along the way we lost the explanation of the\n > 'fallback query'. that needs to be added back in somewhere.\n > \n > IIUC with the proposed design it would work like this:\n > \n > - For NUMA-agnostic flavors (no hw:numa*-isms) we do a single\n > query, non-granular, with !HW_NUMA_ROOT, as described in the\n > section starting on L274. This can land on pre-U, `None`, and\n > `False` hosts, which will behave exactly as today.\n > - For NUMA-aware flavors (containing hw:numa*-isms), we will do two\n > queries [1]: The first with granular groups, affinity, and\n > HW_NUMA_ROOT as described in the section starting on L296 will hit\n > `True` (reshaped) hosts. The second will look like the\n > NUMA-agnostic query to hit pre-U and `None` hosts [2].\n > \n > [1] We have to decide whether we a) always do both and merge the\n > results; or b) do one (which one?) and then only do the second if\n > the first one yields no results. The latter would be likely to\n > violate pack/spread and affinity groups, so my preference is for\n > the former.\n > [2] Except, as noted in the comment on L235, that will also hit\n > `False` hosts, so we need to add some design element to prevent\n > that.\n\nAgain, I clarified this in the next revision, but I'm also clear that we won't provide a fallback mechanism given we now have the None value.", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "d62f977ce35b06f2cd32da626592a90e3dcd6770", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_920016b3", "line": 537, "in_reply_to": "3fa7e38b_dd46a8a8", "updated": "2020-02-14 16:01:36.000000000", "message": "As discussed in IRC [1], we *do* need the fallback query for NUMA-aware flavors, because otherwise they will never land on `None` hosts. But as designed, if we do the fallback query, NUMA-aware flavors will *also* (incorrectly) land on `False` hosts.\n\nSo we agreed to mark `False` hosts with some kind of HW_NO_NUMA trait, which we would forbid in the fallback query for NUMA-aware flavors.\n\nOnce all computes are upgraded to V (or wherever the conf opt is mandatory), the trait would no longer be necessary, so we could rip it out if we wanted to.\n\n[1] http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-02-14.log.html#t2020-02-14T15:44:18", "commit_id": "69ed0a4508017184daf56c7b00f70ca2ee072d36"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8e17f461856ff6e45e7212314926904e5a84482d", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_7551c40b", "line": 257, "range": {"start_line": 257, "start_character": 27, "end_line": 257, "end_character": 31}, "updated": "2020-02-14 17:04:47.000000000", "message": "the former", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_55ada8a1", "line": 257, "range": {"start_line": 257, "start_character": 27, "end_line": 257, "end_character": 31}, "in_reply_to": "3fa7e38b_7551c40b", "updated": "2020-02-17 10:38:45.000000000", "message": "Done", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8e17f461856ff6e45e7212314926904e5a84482d", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_35d34c65", "line": 478, "range": {"start_line": 477, "start_character": 25, "end_line": 478, "end_character": 9}, "updated": "2020-02-14 17:04:47.000000000", "message": "Still open for debate whether we should do it this way, or always do both queries and merge the results. Let's mention both possibilities and say we'll argue about it at impl time:\n\n...second call to Placement, as described below. There are two options:\n\n* Only do the second call if the first yields no results. This is more efficient; but since it will favor reshaped hosts, it may violate pack/spread or server affinity.\n* Do both calls always, merge the results, and allow the filters/weighers to pick. This is less efficient, but won't regress pack/spread or server affinity.\n\nWe can debate this further at implementation time.", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_55a92875", "line": 478, "range": {"start_line": 477, "start_character": 25, "end_line": 478, "end_character": 9}, "in_reply_to": "3fa7e38b_35d34c65", "updated": "2020-02-17 10:38:45.000000000", "message": "Done", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8e17f461856ff6e45e7212314926904e5a84482d", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_15465023", "line": 490, "range": {"start_line": 488, "start_character": 10, "end_line": 490, "end_character": 9}, "updated": "2020-02-14 17:04:47.000000000", "message": "Actually the query as written would still allow that, as we've discussed previously. We need to forbid the HW_NUMA_ROOT trait as well for this query:\n\n resources=VCPU:<X>,MEMORY=<Y>\n &required=!HW_NON_NUMA,!HW_NUMA_ROOT", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_95d80024", "line": 490, "range": {"start_line": 488, "start_character": 10, "end_line": 490, "end_character": 9}, "in_reply_to": "3fa7e38b_15465023", "updated": "2020-02-17 10:38:45.000000000", "message": "Done", "commit_id": "1a5fb1f0f442cbb8fb1a2914e0d55f25ed05b7a8"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "cf572781ccc9bc31b74d068c12544701c1fefd6f", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_07c14281", "line": 167, "range": {"start_line": 167, "start_character": 17, "end_line": 167, "end_character": 18}, "updated": "2020-02-15 10:13:17.000000000", "message": "nit: missing space", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_0438569c", "line": 167, "range": {"start_line": 167, "start_character": 17, "end_line": 167, "end_character": 18}, "in_reply_to": "3fa7e38b_07c14281", "updated": "2020-02-17 10:38:45.000000000", "message": "> nit: missing space\n\nDone with FUP.", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "cf572781ccc9bc31b74d068c12544701c1fefd6f", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_673b5699", "line": 484, "range": {"start_line": 483, "start_character": 0, "end_line": 484, "end_character": 38}, "updated": "2020-02-15 10:13:17.000000000", "message": "Note to myself:\n\n!HW_NON_NUMA: to not land on node that are explicitly reserved for non numa (segregation)\n\n!HW_NUMA_ROOT: to not land on re-shaped numa aware nodes as those should be returned by the original call not the fallback call.\n\nresources: use the old resource syntax as we are targeting old non reshaped computes", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "cf572781ccc9bc31b74d068c12544701c1fefd6f", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_07462223", "line": 600, "updated": "2020-02-15 10:13:17.000000000", "message": "you can put yourself here", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_645eea79", "line": 600, "in_reply_to": "3fa7e38b_07462223", "updated": "2020-02-17 10:38:45.000000000", "message": "> you can put yourself here\n\n\nDone with FUP.", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "cf572781ccc9bc31b74d068c12544701c1fefd6f", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_e746661f", "line": 610, "updated": "2020-02-15 10:13:17.000000000", "message": "Do we still need that the NTF works based on allocation candidates instead of based on hosts? I think so as it will  need to select a candidate for the numa aware, numa_nodes=2 case when the candidate allocates from two different numa nodes. I foresee this change (filters works based on allocation candidates) as a significant refactor step during the implementation as i) filter interface needs to be changed, ii) filter scheduler cannot simply collate candidates for the same host using the first of such candidates.", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "51b5541b67e2d2718421088fcbd64991d00b36b2", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_44596e8e", "line": 610, "in_reply_to": "3fa7e38b_e746661f", "updated": "2020-02-17 10:38:45.000000000", "message": "> Do we still need that the NTF works based on allocation candidates\n > instead of based on hosts? I think so as it will  need to select a\n > candidate for the numa aware, numa_nodes=2 case when the candidate\n > allocates from two different numa nodes. I foresee this change\n > (filters works based on allocation candidates) as a significant\n > refactor step during the implementation as i) filter interface\n > needs to be changed, ii) filter scheduler cannot simply collate\n > candidates for the same host using the first of such candidates.\n\n\nDone with FUP.", "commit_id": "7d320517b494a6134f361df51b1dc04b5e4748a9"}]}}, "openstack%2Fneutron~master~I4de37364a6fb0184230a9742daced40e4edbfb30": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-02-14 18:52:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-17 08:00:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-02-14 10:17:10.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 20251, "name": "LiuYong", "email": "liu.yong8@zte.com.cn", "username": "LiuYong"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "df039a77e44d82b53a99f2b590daa1246db082d5", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ca2fc0a3", "line": 14, "updated": "2020-02-14 09:19:57.000000000", "message": "nit: Related-Bug: #1862927", "commit_id": "2367f6f7bfa2aef115af77359765b0f2b1300c73"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "b87f805d17ee7772f9142f733f5405496e201af5", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5dde380f", "line": 14, "in_reply_to": "3fa7e38b_ca2fc0a3", "updated": "2020-02-14 10:10:58.000000000", "message": "And 1863213", "commit_id": "2367f6f7bfa2aef115af77359765b0f2b1300c73"}]}}, "openstack%2Foslo.serialization~master~I4ecb34eee942c714d09d2258db80f5b8d61dec89": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 09:00:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-17 07:47:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {"oslo_serialization/yamlutils.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "d767d8357160cb639c227ac99d1a088f416ffcb2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cb903444", "line": 28, "updated": "2020-02-13 13:57:00.000000000", "message": "Instead of doing this, how about using debtcollector's \"removed_module\" helper, as seen at [1]?\n\n[1] https://github.com/openstack/oslotest/blob/ed287d00fa4837923422291780d434cc54a30c85/oslotest/functional.py#L20-L22", "commit_id": "e3f1099ecf91bce09e0b90c8fcfa701d443178af"}]}}, "openstack%2Fhorizon~master~I368d489b7d20148d583f1a80eb3351c89c587d2d": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:06:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-02-17 08:41:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Fnetworking-calico~master~Iaf5e3b46e49090ade3d54dcf3897539a8851b355": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 10:08:59.000000000", "_account_id": 19461, "name": "Shaun Crampton", "email": "shaun@tigera.io", "username": "fasaxc"}, {"value": 0, "_account_id": 13734, "name": "Neil Jerram", "email": "neil@tigera.io", "username": "neiljerram"}, {"value": 1, "date": "2020-02-12 10:56:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fnetworking-calico~master~If5197a664cda750adee6c146d2e5c73e4f811064": {"owner_id": 6851, "owner_name": "Marcus Furlong", "owner_email": "mfurlong13@bloomberg.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13734, "name": "Neil Jerram", "email": "neil@tigera.io", "username": "neiljerram"}], "comments": {}}, "openstack%2Fnetworking-calico~master~I89185990cf2a751b491763a2c4e144f233404fe6": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fnetworking-calico~master~I208907cb715003172e7213af9b96af7866c59432": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13734, "name": "Neil Jerram", "email": "neil@tigera.io", "username": "neiljerram"}], "comments": {}}, "openstack%2Fnetworking-calico~master~I902d2a010687564596b6c10d3d7490acd6f59c7a": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": {}, "comments": {}}, "openstack%2Fnetworking-calico~master~Ieda3b4b18920e2cfafaa2c792bac560d24566130": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Frocky~I2a7861094bbc814ccd3ef3f2206dc141229411fc": {"owner_id": 19138, "owner_name": "Pranali Deore", "owner_email": "pdeore@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2018-10-15 06:04:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2018-10-15 14:42:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 0, "_account_id": 4328, "name": "Steven Hardy", "email": "shardy@redhat.com", "username": "shardy"}, {"value": 0, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 19138, "name": "Pranali Deore", "email": "pdeore@redhat.com", "username": "PranaliD"}], "comments": {}}, "openstack%2Fpython-neutronclient~master~Ifdce9146e8233e6760ee6c0009338661f90848a2": {"owner_id": 29157, "owner_name": "zhanghao", "owner_email": "hao.zhang.am.i@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 07:08:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 1, "date": "2020-02-17 06:40:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-02-17 08:16:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fpaunch~stable%2Frocky~I346c49cb204f273bd7077ca5153412cda9846534": {"owner_id": 25877, "owner_name": "Luke Short", "owner_email": "ekultails@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-01-29 14:57:19.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Fvmware-nsxlib~master~Ia8a0b6a1d1bb2fbf2addba8b570da4e397ac75ea": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 08:20:31.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fproject-config~master~Id5c5ea4f0bcb0419e3fd13172220fff385c8ee16": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 06:57:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-06 17:26:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "81550afe7d6e6cdeb5b0ec74f871ebbb300e7450", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_56bddc64", "line": 12, "range": {"start_line": 11, "start_character": 0, "end_line": 12, "end_character": 56}, "updated": "2020-02-12 15:07:57.000000000", "message": "s/von/ovn/g", "commit_id": "f690de2c2a93305e1d295c6287b3875b58a74cb8"}]}}, "openstack%2Fproject-config~master~Ia13b651ce99ca295775187dc653e246b84fd1f43": {"owner_id": 13734, "owner_name": "Neil Jerram", "owner_email": "neil@tigera.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 06:57:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 13734, "name": "Neil Jerram", "email": "neil@tigera.io", "username": "neiljerram"}, {"value": 2, "date": "2020-02-12 10:57:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fproject-config~master~I50574d142e246e3256d90c6d0aa7295655e05d43": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 06:57:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-02-12 08:46:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-11 19:47:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "x%2Ffenix~master~Ifd5eb29a1d3d969b2d9b9648d823e80b435f7cb3": {"owner_id": 15834, "owner_name": "Tomi Juvonen", "owner_email": "tomi.juvonen@nokia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-17 06:59:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15834, "name": "Tomi Juvonen", "email": "tomi.juvonen@nokia.com", "username": "tojuvone"}, {"value": 0, "_account_id": 21723, "name": "Gergely Csatari", "email": "gergely.csatari@nokia.com", "username": "csatari"}], "comments": {}}, "openstack%2Freleases~master~Ic6292dbe7389a00776193b1c6264927f2f3f12f0": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": {}, "comments": {}}, "openstack%2Fmagnum-ui~master~Ic76d4d853bce0b1bfd107ca1bd6a7231939845df": {"owner_id": 30447, "owner_name": "Simon Merrick", "owner_email": "simonmerrick@catalyst.net.nz", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30447, "name": "Simon Merrick", "email": "simonmerrick@catalyst.net.nz", "username": "iokiwi"}, {"value": 2, "date": "2020-01-26 23:04:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 0, "_account_id": 28022, "name": "Bharat Kunwar", "email": "brtknr@bath.edu", "username": "brtknr"}, {"value": 2, "date": "2020-02-17 06:15:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16352, "name": "Shu Muto", "email": "shu.mutow@gmail.com", "username": "shu.mutow"}], "comments": {}}, "openstack%2Fnetworking-powervm~stable%2Frocky~Ic4d97db6c947264806e5ef9e35f21f764cbecf46": {"owner_id": 17685, "owner_name": "Elod Illes", "owner_email": "elod.illes@est.tech", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 14581, "name": "ymadhavi@in.ibm.com", "email": "ymadhavi@in.ibm.com", "username": "ymadhavi"}, {"value": 2, "date": "2020-02-10 23:15:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 16551, "name": "Arun Mani", "email": "arun.mani@in.ibm.com", "username": "arunmani"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I4647b78e61499ced146621d11376fa52bcfe9650": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fnova-specs~master~I32f80b0a4ed094c0a8db3cbe177cb3d61c8ea719": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 2, "date": "2020-01-31 10:52:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-03 09:08:38.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, {"value": 2, "date": "2020-02-10 15:24:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}], "comments": {"specs/train/approved/support-glance-multiple-backend.rst": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "655ff2bb05577c4728cc85229a935157400dfa56", "unresolved": false, "patch_set": 3, "id": "5fc1f717_be698525", "line": 28, "range": {"start_line": 28, "start_character": 56, "end_line": 28, "end_character": 66}, "updated": "2019-03-26 23:48:09.000000000", "message": "applicable", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "c3108a9a82956f058bc1d832f83634be6e4e1477", "unresolved": false, "patch_set": 3, "id": "5fc1f717_f443a96a", "line": 28, "range": {"start_line": 28, "start_character": 56, "end_line": 28, "end_character": 66}, "in_reply_to": "5fc1f717_be698525", "updated": "2019-03-27 08:58:01.000000000", "message": "Done", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "655ff2bb05577c4728cc85229a935157400dfa56", "unresolved": false, "patch_set": 3, "id": "5fc1f717_5ee2e1a1", "line": 125, "updated": "2019-03-26 23:48:09.000000000", "message": "And osc, per community goal.", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "c3108a9a82956f058bc1d832f83634be6e4e1477", "unresolved": false, "patch_set": 3, "id": "5fc1f717_341cd176", "line": 125, "in_reply_to": "5fc1f717_5ee2e1a1", "updated": "2019-03-27 08:58:01.000000000", "message": "Done", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "655ff2bb05577c4728cc85229a935157400dfa56", "unresolved": false, "patch_set": 3, "id": "5fc1f717_deced12b", "line": 145, "updated": "2019-03-26 23:48:09.000000000", "message": "How about a link to the glance docs describing the capability?", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "c3108a9a82956f058bc1d832f83634be6e4e1477", "unresolved": false, "patch_set": 3, "id": "5fc1f717_541f1d6b", "line": 145, "in_reply_to": "5fc1f717_deced12b", "updated": "2019-03-27 08:58:01.000000000", "message": "Done", "commit_id": "eca0c6328475c3ccf35d95bfb8eeef0969bab725"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c29c9c219819fc84dbe6df638c08e47f7fe82c22", "unresolved": false, "patch_set": 4, "id": "5fc1f717_4c6f8927", "line": 146, "updated": "2019-03-27 14:52:54.000000000", "message": "\u2714", "commit_id": "15bf59a800fb6fd7114423a51adf6cb3219d7da2"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "42b829c028f7b57ab5c4ce001d343e7fb16ab667", "unresolved": false, "patch_set": 5, "id": "dfbec78f_e8bb6fe2", "line": 26, "updated": "2019-05-04 21:04:34.000000000", "message": "In the case of a direct_snapshot (so nova will use the \"add-location\" glance route directly), this is not the default backend who will be used if backend is not specified, but the first wich is handlable by the location url, according to this glance bug : https://bugs.launchpad.net/glance/+bug/1802587\n\nNote that today, until this glance bug resolved, nova direct_snapshot is broken when using glance multiple backend and always result to 400 Invalid location error", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6b91d84225c783daba401bd3f87680b600c957a4", "unresolved": false, "patch_set": 5, "id": "bfb3d3c7_31117dad", "line": 26, "in_reply_to": "dfbec78f_e8bb6fe2", "updated": "2019-05-27 04:32:15.000000000", "message": "We are planning to fix this bug during milestone1 release of train.", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6b72c2c513acdb3464d997a30b278702e7ca7e39", "unresolved": false, "patch_set": 5, "id": "5fc1f717_b82c1499", "line": 48, "range": {"start_line": 48, "start_character": 29, "end_line": 48, "end_character": 34}, "updated": "2019-03-28 14:04:17.000000000", "message": "during the?", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 28595, "name": "Victor Coutellier", "email": "victor.coutellier@gmail.com", "username": "alistarle"}, "change_message_id": "9b64a51510a8a607b1cfcd6edf876125f447bc3b", "unresolved": false, "patch_set": 5, "id": "ffb9cba7_18a7a3a9", "line": 53, "updated": "2019-05-01 08:01:51.000000000", "message": "What if the glance multistore feature not enabled at all (API version < 2.7) and return a 404, does we return a 404 to the nova end user too ?", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6b91d84225c783daba401bd3f87680b600c957a4", "unresolved": false, "patch_set": 5, "id": "bfb3d3c7_d12901e6", "line": 53, "in_reply_to": "ffb9cba7_18a7a3a9", "updated": "2019-05-27 04:32:15.000000000", "message": "If multiple store feature is not enabled then it will not have any impact and it will work as it is.", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "6b72c2c513acdb3464d997a30b278702e7ca7e39", "unresolved": false, "patch_set": 5, "id": "5fc1f717_d83240f2", "line": 58, "range": {"start_line": 58, "start_character": 67, "end_line": 58, "end_character": 70}, "updated": "2019-03-28 14:04:17.000000000", "message": "an", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "89ea1442d7114efb963c8b70845daa8c558949a4", "unresolved": false, "patch_set": 5, "id": "bfb3d3c7_6e540022", "line": 85, "updated": "2019-05-24 19:07:31.000000000", "message": "This is missing any details covering the impact of any of this on the virt drivers.\n\nFor example, with the libvirt driver there's zero support for storing snapshots in rbd while using an images_type other than rbd. I assume the other virt drivers also have limitations like this so this really needs to be reviewed and detailed here.", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6b91d84225c783daba401bd3f87680b600c957a4", "unresolved": false, "patch_set": 5, "id": "bfb3d3c7_f16be51a", "line": 85, "in_reply_to": "bfb3d3c7_6e540022", "updated": "2019-05-27 04:32:15.000000000", "message": "Lee,\n\nI am not sure it will have any impact on drivers. The solution is to take the base-image id, find which store the image belongs and upload the snapshot to that store only. I am not sure how any virt driver will affect due to this.\n\nCould you please let me help to understand the same?\n\nThank you!!!!", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6b91d84225c783daba401bd3f87680b600c957a4", "unresolved": false, "patch_set": 5, "id": "bfb3d3c7_7169351f", "line": 167, "range": {"start_line": 162, "start_character": 0, "end_line": 167, "end_character": 19}, "updated": "2019-05-27 04:32:15.000000000", "message": "These work items needs to be changed.", "commit_id": "2e3f009d8f4a79179bc2d51606a8f3b27f2b4849"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "53ac278075da32344e8f82d075d193926688f60b", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_6a4d5c98", "line": 42, "range": {"start_line": 41, "start_character": 13, "end_line": 42, "end_character": 65}, "updated": "2019-07-02 11:30:47.000000000", "message": "It would be nice to mention the glance API call that nova needs to make to identify the store.", "commit_id": "a178fe4fc4dbf864a3665bb8c08f7cde006a6375"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a4d7a170da4b182ad76fe623d55b031ec82536a0", "unresolved": false, "patch_set": 7, "id": "9fb8cfa7_cffa5ab8", "line": 43, "updated": "2019-07-02 09:37:24.000000000", "message": "I am not 100% sure about this with a swift backend... totaly makes sense for ceph, in terms of avoiding a deep copy to a new ceph location.\n\nMaybe the default should depend on Nova's ephemeral disk backend. When its Ceph do what you describe here, but when its \"local\" disk you are doing a full copy into glance, so instead default to glance's default backend?\n\nEither way the user can go to glance and get the image via a uuid, and boot a new instance with that uuid, so it should be OK.", "commit_id": "a178fe4fc4dbf864a3665bb8c08f7cde006a6375"}], "specs/ussuri/approved/support-glance-multiple-backend.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_d0833fa9", "line": 21, "updated": "2020-02-10 12:52:36.000000000", "message": "In glance, if the default store is 'file_1', can I set 'file_2' store as the default by nova that we do instance snapshot or backup?", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_3c470c7d", "line": 21, "in_reply_to": "3fa7e38b_d0833fa9", "updated": "2020-02-10 15:24:43.000000000", "message": "FWIW, You won't have to define anything in Nova for the default store.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_10f79790", "line": 22, "range": {"start_line": 20, "start_character": 57, "end_line": 22, "end_character": 32}, "updated": "2020-02-10 12:52:36.000000000", "message": "If the operator doesnot set default store, what would happened? Is there a preferred strategy?", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_1c425068", "line": 22, "range": {"start_line": 20, "start_character": 57, "end_line": 22, "end_character": 32}, "in_reply_to": "3fa7e38b_10f79790", "updated": "2020-02-10 15:24:43.000000000", "message": "The strategy will be *always* defined by Glance.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_903f0722", "line": 33, "range": {"start_line": 33, "start_character": 36, "end_line": 33, "end_character": 44}, "updated": "2020-02-10 12:52:36.000000000", "message": "snapshots", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_bc5a1c4e", "line": 33, "range": {"start_line": 33, "start_character": 36, "end_line": 33, "end_character": 44}, "in_reply_to": "3fa7e38b_903f0722", "updated": "2020-02-10 15:24:43.000000000", "message": "Abishek : please provide a follow-up", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, "change_message_id": "0328c00bed6240a05bc5e57fc0ab36dd043b830b", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_68c1b430", "line": 42, "updated": "2020-02-03 09:08:38.000000000", "message": "Which store will be used, if instance was created from the image with two store locations? What could be done if operator doesn't want this image be uploaded to both stores? Will be a way to select preferred store in such case?\nWhich store will be selected if the original image was deleted and its locations list is empty?", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "89bd56f331fc1e9909ce7393523644c7bc30131e", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_c8e8e87f", "line": 42, "in_reply_to": "3fa7e38b_68c1b430", "updated": "2020-02-03 09:19:51.000000000", "message": "As per discussion during PTG, it's decided that nova will send base image reference Id and glance will upload the snapshot to all the stores where base image is present.\n\nIF base image is deleted then the snapshot will be uploaded to default glance_store.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_1cb49080", "line": 42, "in_reply_to": "3fa7e38b_c8e8e87f", "updated": "2020-02-10 15:24:43.000000000", "message": "> As per discussion during PTG, it's decided that nova will send base\n > image reference Id and glance will upload the snapshot to all the\n > stores where base image is present.\n > \n > IF base image is deleted then the snapshot will be uploaded to\n > default glance_store.\n\nYeah we agreed on this one.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_307f33df", "line": 52, "range": {"start_line": 52, "start_character": 6, "end_line": 52, "end_character": 13}, "updated": "2020-02-10 12:52:36.000000000", "message": "``--store``", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_9c4de094", "line": 52, "range": {"start_line": 52, "start_character": 6, "end_line": 52, "end_character": 13}, "in_reply_to": "3fa7e38b_307f33df", "updated": "2020-02-10 15:24:43.000000000", "message": "Follow-up patch (FUP) too please.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_f0643b4f", "line": 53, "range": {"start_line": 53, "start_character": 58, "end_line": 53, "end_character": 65}, "updated": "2020-02-10 12:52:36.000000000", "message": "ditto", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_5c31a809", "line": 53, "range": {"start_line": 53, "start_character": 58, "end_line": 53, "end_character": 65}, "in_reply_to": "3fa7e38b_f0643b4f", "updated": "2020-02-10 15:24:43.000000000", "message": "ditto : FUP.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_50474f7b", "line": 99, "range": {"start_line": 99, "start_character": 2, "end_line": 99, "end_character": 9}, "updated": "2020-02-10 12:52:36.000000000", "message": "nit: the default store?", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_fc31740a", "line": 99, "range": {"start_line": 99, "start_character": 2, "end_line": 99, "end_character": 9}, "in_reply_to": "3fa7e38b_50474f7b", "updated": "2020-02-10 15:24:43.000000000", "message": "ditto: FUP.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "0f84ba6060a38b4e5f00bbe84a1cca3a327d13d8", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_dd175a53", "line": 148, "updated": "2020-01-31 10:52:05.000000000", "message": "you can add me here", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "4ca21d8a93ffad34bf7a1891e297e82113a8c733", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_bc1f7c6f", "line": 148, "in_reply_to": "3fa7e38b_889750eb", "updated": "2020-02-10 15:24:43.000000000", "message": "FUP again.", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "89bd56f331fc1e9909ce7393523644c7bc30131e", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_889750eb", "line": 148, "in_reply_to": "3fa7e38b_dd175a53", "updated": "2020-02-03 09:19:51.000000000", "message": "If i need to push another version then I will add you here.\n\nThank you!!", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "65848d00388535ca17b576e8157e1a512dcd6d44", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_b0fb2314", "line": 177, "range": {"start_line": 177, "start_character": 3, "end_line": 177, "end_character": 6}, "updated": "2020-02-10 12:52:36.000000000", "message": "Redundant indentation", "commit_id": "01704d33957dc8a7ecfb0ee85feee1ea6740b540"}]}}, "openstack%2Fcinder~master~Ibe9a0e78ab452c54cc3f1da1f4377034190dd14e": {"owner_id": 9535, "owner_name": "Gorka Eguileor", "owner_email": "geguileo@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21767, "name": "Srinivas", "email": "srinivasd@biarca.com", "username": "Srinivas"}, {"value": 2, "date": "2019-08-06 13:07:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2019-08-06 18:13:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 22495, "name": "Kaminario K2FC CI", "email": "cinder.fc.devops.CTR@kaminario.com", "username": "k2-fc"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": -1, "date": "2019-08-07 00:39:57.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"cinder/image/image_utils.py": [{"author": {"_account_id": 14624, "name": "Sam Wan", "email": "sam.wan@emc.com", "username": "samwan"}, "change_message_id": "97b45796acbc0ae706b4fd7c54d5242d4f2f8923", "unresolved": false, "patch_set": 1, "id": "7faddb67_06385dd0", "line": 673, "range": {"start_line": 673, "start_character": 31, "end_line": 673, "end_character": 35}, "updated": "2019-08-07 00:39:57.000000000", "message": "we should get 'compress' from the caller aka: upload_volume.", "commit_id": "0a0d55d8a95365f2a8b3bef861ab2410bec9e3ff"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "fc0ef57953173a65d0dba298eb83a58c9bf849d3", "unresolved": false, "patch_set": 1, "id": "7faddb67_3c3ebe8b", "line": 673, "range": {"start_line": 673, "start_character": 31, "end_line": 673, "end_character": 35}, "in_reply_to": "7faddb67_06385dd0", "updated": "2019-08-07 17:35:01.000000000", "message": "Ouch, my bad. You are right.  :-(", "commit_id": "0a0d55d8a95365f2a8b3bef861ab2410bec9e3ff"}]}}, "openstack%2Ftripleo-heat-templates~master~I6d8a971ead7b213a8a275470563f3b7ffd18e0d4": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 18:28:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-02-16 23:26:35.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-nova~master~Iaaf0c3fe4312915e59b5b1680e63f925f6c8511a": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-16 20:35:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-15 01:19:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}, {"value": 2, "date": "2020-02-16 23:24:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frequirements~master~I584f7d395c5423fdb4ec91dfe41ad9368b9976b2": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 1, "date": "2020-02-16 23:15:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11692, "name": "C\u00e9dric OLLIVIER", "email": "ollivier.cedric@gmail.com", "username": "col"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 22:43:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fdevstack~master~I83792c776b50d1d22584be2a37cc6a166f09c72b": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 23:20:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-01-20 14:46:22.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-01-21 05:46:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {"lib/nova": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "15e28c0c1ce2663a69960279f558942bbed353ef", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0720b4b0", "line": 262, "updated": "2020-01-22 22:53:05.000000000", "message": "won't this basically override it in the gate where we're running nested without kvm?  is that really the intention?", "commit_id": "8dd6f153d6b8dfd8ae976e7f1c9df06019a159b9"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "53cbdb5158934b8f3db00a0f3964526632189c51", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6201536d", "line": 262, "in_reply_to": "3fa7e38b_0720b4b0", "updated": "2020-01-23 08:16:26.000000000", "message": "Hence LIBVIRT_TYPE is set above to qemu.", "commit_id": "8dd6f153d6b8dfd8ae976e7f1c9df06019a159b9"}, {"author": {"_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, "change_message_id": "13089790918160b14ca1eaba048fb5e6f5681da8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_221fdb0b", "line": 262, "in_reply_to": "3fa7e38b_0720b4b0", "updated": "2020-01-23 07:42:42.000000000", "message": "Qemu does not allow to specify a CPU mode. Even host-passthrough won't work.\n\nI have been experimenting in https://review.opendev.org/#/c/702921/. The idea is to make use of KVM nested-virtualization whenever possible and fallback to QEMU when not.", "commit_id": "8dd6f153d6b8dfd8ae976e7f1c9df06019a159b9"}]}}, "openstack%2Fpuppet-zaqar~master~I4376f16e11e9749e55ad36a124777ea0d8686e45": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 20:34:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-16 23:25:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fmanila-specs~master~I8f8819ddb7200ff3104ed01cdaa3fd31b670dad2": {"owner_id": 29632, "owner_name": "Carlos Eduardo", "owner_email": "ces.eduardo98@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, {"value": 0, "_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, {"value": 2, "date": "2020-02-15 12:22:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 0, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, {"value": 2, "date": "2020-02-14 22:03:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-02-14 21:23:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"specs/ussuri/spec-lite-limit-max-replica-amount.rst": [{"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6c557dc0", "line": 13, "range": {"start_line": 13, "start_character": 72, "end_line": 13, "end_character": 73}, "updated": "2020-01-29 13:18:30.000000000", "message": "remove", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8cb8f9e7", "line": 13, "range": {"start_line": 13, "start_character": 72, "end_line": 13, "end_character": 73}, "in_reply_to": "3fa7e38b_6c557dc0", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cc6591b1", "line": 17, "updated": "2020-01-29 13:18:30.000000000", "message": "If so, it will deny the new share replica creation.", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2cc78567", "line": 17, "in_reply_to": "3fa7e38b_cc6591b1", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ccfa71b9", "line": 18, "range": {"start_line": 17, "start_character": 64, "end_line": 18, "end_character": 67}, "updated": "2020-01-29 13:18:30.000000000", "message": "to add the new share type extra spec for all the existent share types.", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ec140d9b", "line": 18, "range": {"start_line": 17, "start_character": 64, "end_line": 18, "end_character": 67}, "in_reply_to": "3fa7e38b_ccfa71b9", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ac2db545", "line": 19, "range": {"start_line": 19, "start_character": 20, "end_line": 19, "end_character": 26}, "updated": "2020-01-29 13:18:30.000000000", "message": "migration", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ac7855f6", "line": 19, "range": {"start_line": 19, "start_character": 20, "end_line": 19, "end_character": 26}, "in_reply_to": "3fa7e38b_ac2db545", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6c233d58", "line": 20, "range": {"start_line": 20, "start_character": 20, "end_line": 20, "end_character": 30}, "updated": "2020-01-29 13:18:30.000000000", "message": "capacity", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4c7be1f1", "line": 20, "range": {"start_line": 20, "start_character": 20, "end_line": 20, "end_character": 30}, "in_reply_to": "3fa7e38b_6c233d58", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_acd29531", "line": 25, "range": {"start_line": 25, "start_character": 56, "end_line": 25, "end_character": 57}, "updated": "2020-01-29 13:18:30.000000000", "message": "``2``?", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cc6ef12b", "line": 25, "range": {"start_line": 25, "start_character": 56, "end_line": 25, "end_character": 57}, "in_reply_to": "3fa7e38b_acd29531", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "b675750b7bc76fb75c79656117c084647b877fb8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0c472920", "line": 31, "range": {"start_line": 31, "start_character": 22, "end_line": 31, "end_character": 29}, "updated": "2020-01-29 13:18:30.000000000", "message": "Ussuri", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "ec83d7753ddb8c4f8116fb215cf507a7b9950fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_acbb75e1", "line": 31, "range": {"start_line": 31, "start_character": 22, "end_line": 31, "end_character": 29}, "in_reply_to": "3fa7e38b_0c472920", "updated": "2020-01-29 13:33:13.000000000", "message": "Done", "commit_id": "0c5ba74f6907eba5417a441eea4f7fc9f4d16f15"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "39d6246349c8b02bae4281fda291f9d60acf410a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ecf08d62", "line": 6, "range": {"start_line": 6, "start_character": 35, "end_line": 6, "end_character": 57}, "updated": "2020-01-29 13:37:55.000000000", "message": "nit: \"it lets the user deplete\" or \"it allows the user to deplete\"", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "3a81b066da9e0d39448dbc1f15b2041bf6d69d88", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2c1c6579", "line": 6, "range": {"start_line": 6, "start_character": 35, "end_line": 6, "end_character": 57}, "in_reply_to": "3fa7e38b_ecf08d62", "updated": "2020-01-29 14:17:07.000000000", "message": "Done", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "39d6246349c8b02bae4281fda291f9d60acf410a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ac94d5e7", "line": 10, "range": {"start_line": 9, "start_character": 21, "end_line": 10, "end_character": 26}, "updated": "2020-01-29 13:37:55.000000000", "message": "nit: \"let the administrator specify\"", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "3a81b066da9e0d39448dbc1f15b2041bf6d69d88", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ec216db3", "line": 10, "range": {"start_line": 9, "start_character": 21, "end_line": 10, "end_character": 26}, "in_reply_to": "3fa7e38b_ac94d5e7", "updated": "2020-01-29 14:17:07.000000000", "message": "Done", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "39d6246349c8b02bae4281fda291f9d60acf410a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4c9761eb", "line": 15, "range": {"start_line": 15, "start_character": 18, "end_line": 15, "end_character": 24}, "updated": "2020-01-29 13:37:55.000000000", "message": "nit: \"source\"", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "3a81b066da9e0d39448dbc1f15b2041bf6d69d88", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8c16b957", "line": 15, "range": {"start_line": 15, "start_character": 18, "end_line": 15, "end_character": 24}, "in_reply_to": "3fa7e38b_4c9761eb", "updated": "2020-01-29 14:17:07.000000000", "message": "Done", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "39d6246349c8b02bae4281fda291f9d60acf410a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cc8a71bb", "line": 16, "range": {"start_line": 16, "start_character": 31, "end_line": 16, "end_character": 62}, "updated": "2020-01-29 13:37:55.000000000", "message": "nit: \"does not exceed\"", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "3a81b066da9e0d39448dbc1f15b2041bf6d69d88", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6c0fbd37", "line": 16, "range": {"start_line": 16, "start_character": 31, "end_line": 16, "end_character": 62}, "in_reply_to": "3fa7e38b_cc8a71bb", "updated": "2020-01-29 14:17:07.000000000", "message": "If it somehow exceeds is only in the case where the user had for instance 10 replicas of a given share and the database migration was applied. Other than the mentioned case, it would never exceed. So I think I'll rephrase it in another way. Thanks for pointing this out, so I can improve the sentence :)", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "39d6246349c8b02bae4281fda291f9d60acf410a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4cb0c18d", "line": 18, "range": {"start_line": 18, "start_character": 57, "end_line": 18, "end_character": 62}, "updated": "2020-01-29 13:37:55.000000000", "message": "to", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "3a81b066da9e0d39448dbc1f15b2041bf6d69d88", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0c0ac925", "line": 18, "range": {"start_line": 18, "start_character": 57, "end_line": 18, "end_character": 62}, "in_reply_to": "3fa7e38b_4cb0c18d", "updated": "2020-01-29 14:17:07.000000000", "message": "Done", "commit_id": "bb82d3730d0ce94004b10592dc1f2834654a4db4"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "6d6e4d2644fdbb9a12fb3bca11e309fb9a5ecd56", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_47973aeb", "line": 5, "range": {"start_line": 5, "start_character": 25, "end_line": 5, "end_character": 35}, "updated": "2020-01-29 14:36:19.000000000", "message": "\"This is\" or \"It is\"", "commit_id": "d77d2efea4d692395c3a83126954a7ae7e486ba3"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a880a8247520f713d54456f49c3a4246528cb7ba", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5952be12", "line": 5, "range": {"start_line": 5, "start_character": 25, "end_line": 5, "end_character": 35}, "in_reply_to": "3fa7e38b_47973aeb", "updated": "2020-01-29 14:39:26.000000000", "message": "Done", "commit_id": "d77d2efea4d692395c3a83126954a7ae7e486ba3"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "6d6e4d2644fdbb9a12fb3bca11e309fb9a5ecd56", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_075ce249", "line": 28, "range": {"start_line": 27, "start_character": 66, "end_line": 28, "end_character": 31}, "updated": "2020-01-29 14:36:19.000000000", "message": "\"if the administrator needs\" or \"if the administrators need\"", "commit_id": "d77d2efea4d692395c3a83126954a7ae7e486ba3"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a880a8247520f713d54456f49c3a4246528cb7ba", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_396822ba", "line": 28, "range": {"start_line": 27, "start_character": 66, "end_line": 28, "end_character": 31}, "in_reply_to": "3fa7e38b_075ce249", "updated": "2020-01-29 14:39:26.000000000", "message": "Done", "commit_id": "d77d2efea4d692395c3a83126954a7ae7e486ba3"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f40dce4b5b5c6ccfddf6362a120b13505141308b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_edc16482", "line": 1, "range": {"start_line": 1, "start_character": 17, "end_line": 1, "end_character": 23}, "updated": "2020-01-29 19:49:42.000000000", "message": "number", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5221ec4e", "line": 1, "range": {"start_line": 1, "start_character": 17, "end_line": 1, "end_character": 23}, "in_reply_to": "3fa7e38b_edc16482", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f40dce4b5b5c6ccfddf6362a120b13505141308b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_cdf588ca", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 0}, "updated": "2020-01-29 19:49:42.000000000", "message": "Another problem that we have currently is the lack of end user visibility when it comes to what backends support. \n\nFor example, with ZFSOnLinux or NetApp, the user can have as many replicas for a given share as there are pools that support replication between them. However, for Huawei, the user can only have two replicas. There's no mechanism to convey this currently - for example, if there are 3 NetApp pools, the user can have one primary share and two replicas - creating a fourth one will fail asynchronously. This isn't desirable - if we're going to make a tenant visible extra-spec, users can be better informed; and since the extra-spec will be checked at teh API, we'll be able to fail fast and early, providing synchronous errors as opposed to a vague asynchronous failure.", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_19a85b89", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 0}, "in_reply_to": "3fa7e38b_cdf588ca", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f40dce4b5b5c6ccfddf6362a120b13505141308b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2d39bca0", "line": 15, "range": {"start_line": 15, "start_character": 61, "end_line": 15, "end_character": 64}, "updated": "2020-01-29 19:49:42.000000000", "message": "remove \"if\"", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_121b741d", "line": 15, "range": {"start_line": 15, "start_character": 61, "end_line": 15, "end_character": 64}, "in_reply_to": "3fa7e38b_2d39bca0", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f40dce4b5b5c6ccfddf6362a120b13505141308b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ad4ccc3f", "line": 16, "range": {"start_line": 16, "start_character": 60, "end_line": 16, "end_character": 66}, "updated": "2020-01-29 19:49:42.000000000", "message": "nit: number", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f20fb8d1", "line": 16, "range": {"start_line": 16, "start_character": 60, "end_line": 16, "end_character": 66}, "in_reply_to": "3fa7e38b_ad4ccc3f", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "7ef43f5dd39dfea39d084d13ae855603d6b12cda", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6e5800fc", "line": 29, "range": {"start_line": 22, "start_character": 35, "end_line": 29, "end_character": 26}, "updated": "2020-01-30 13:18:43.000000000", "message": "Don't think that admins that don't have this limitation will fill about that, since they are will need to update all already created share-types to an specific value. Do you plan to provide a config option for this parameter?", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3922f7a7", "line": 29, "range": {"start_line": 22, "start_character": 35, "end_line": 29, "end_character": 26}, "in_reply_to": "3fa7e38b_6e5800fc", "updated": "2020-02-06 14:19:16.000000000", "message": "Yes, I do, it was also discussed a long time ago. Thanks for bringing this up.", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f40dce4b5b5c6ccfddf6362a120b13505141308b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_239d4bb9", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 0}, "updated": "2020-01-29 19:49:42.000000000", "message": "What's the error code and message and API impact?", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_b90ca73a", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 0}, "in_reply_to": "3fa7e38b_239d4bb9", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "50826e296ecc6a8c2ce6b65eff27a38cbf9a095d", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_99a34745", "line": 31, "updated": "2020-01-30 12:07:36.000000000", "message": "Add sth talking about the admin intervention need", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "a725f64a5561936f94908f6df4382ace06e45c84", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_593493ab", "line": 31, "in_reply_to": "3fa7e38b_99a34745", "updated": "2020-02-06 14:19:16.000000000", "message": "Done", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "40d7126fdcb2e40279e7d51cf33ac9e98cffc2b4", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3faa306d", "line": 34, "updated": "2020-01-30 15:56:37.000000000", "message": "add an 'alternatives' session talking about the solution using the quota system.", "commit_id": "a144f0c2a999e9cee4b28a44f86e804e61cedae2"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "5777848b48c755965240d2e238afbaf0fd07cf31", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_410251bb", "line": 59, "range": {"start_line": 59, "start_character": 19, "end_line": 59, "end_character": 22}, "updated": "2020-02-06 15:24:09.000000000", "message": "I would expect status code 400", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "c5c134325588eb169b2b9bba9007839ba6931857", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_65baf6ba", "line": 59, "range": {"start_line": 59, "start_character": 19, "end_line": 59, "end_character": 22}, "in_reply_to": "3fa7e38b_410251bb", "updated": "2020-02-06 17:46:48.000000000", "message": "You're right. Thanks for pointing this out. I've added the right name but added 404 instead of 400.", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "5777848b48c755965240d2e238afbaf0fd07cf31", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_21b635fe", "line": 63, "range": {"start_line": 63, "start_character": 65, "end_line": 63, "end_character": 68}, "updated": "2020-02-06 15:24:09.000000000", "message": "nit: word can be removed", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "c5c134325588eb169b2b9bba9007839ba6931857", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_25e63e4b", "line": 63, "range": {"start_line": 63, "start_character": 65, "end_line": 63, "end_character": 68}, "in_reply_to": "3fa7e38b_21b635fe", "updated": "2020-02-06 17:46:48.000000000", "message": "Done", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "5777848b48c755965240d2e238afbaf0fd07cf31", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_e1533ddd", "line": 66, "range": {"start_line": 66, "start_character": 32, "end_line": 66, "end_character": 46}, "updated": "2020-02-06 15:24:09.000000000", "message": "I may want to set exactly 1 (or even 0). Where does this come from?", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "c5c134325588eb169b2b9bba9007839ba6931857", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_c5e3aa9f", "line": 66, "range": {"start_line": 66, "start_character": 32, "end_line": 66, "end_character": 46}, "in_reply_to": "3fa7e38b_e1533ddd", "updated": "2020-02-06 17:46:48.000000000", "message": "This is a possibility. I don't see any problem coming if we allow the user set this value as 0.", "commit_id": "98de9a8e7203b8101cd60bce8c8b7af51314b256"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "452f8860e64516ffa89a392b10e73cd425b9d877", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_959339a4", "line": 37, "range": {"start_line": 30, "start_character": 35, "end_line": 37, "end_character": 26}, "updated": "2020-02-13 12:02:31.000000000", "message": "I still miss some place saying that the default value for max_replica_per_share could be configured by the admin (instead of 2). In this way the admin that don't have this limitation wont need to care about this new extra-spec, and set a different value all the time that will create a new share-type or modify all already created share-types.", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "0f14bb57a99d14c32af7e355df993bb5b3b2d5e7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_aeddc63f", "line": 37, "range": {"start_line": 30, "start_character": 35, "end_line": 37, "end_character": 26}, "in_reply_to": "3fa7e38b_959339a4", "updated": "2020-02-13 14:49:37.000000000", "message": "Done", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "452f8860e64516ffa89a392b10e73cd425b9d877", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_35d12557", "line": 39, "range": {"start_line": 38, "start_character": 64, "end_line": 39, "end_character": 17}, "updated": "2020-02-13 12:02:31.000000000", "message": "backend property?", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "0f14bb57a99d14c32af7e355df993bb5b3b2d5e7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f8670422", "line": 39, "range": {"start_line": 38, "start_character": 64, "end_line": 39, "end_character": 17}, "in_reply_to": "3fa7e38b_35d12557", "updated": "2020-02-13 14:49:37.000000000", "message": "Done", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "452f8860e64516ffa89a392b10e73cd425b9d877", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b541950a", "line": 43, "range": {"start_line": 43, "start_character": 50, "end_line": 43, "end_character": 61}, "updated": "2020-02-13 12:02:31.000000000", "message": "only replicas for now?", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "0f14bb57a99d14c32af7e355df993bb5b3b2d5e7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_787314e6", "line": 43, "range": {"start_line": 43, "start_character": 50, "end_line": 43, "end_character": 61}, "in_reply_to": "3fa7e38b_b541950a", "updated": "2020-02-13 14:49:37.000000000", "message": "Done", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "452f8860e64516ffa89a392b10e73cd425b9d877", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_556f0160", "line": 59, "range": {"start_line": 59, "start_character": 17, "end_line": 59, "end_character": 35}, "updated": "2020-02-13 12:02:31.000000000", "message": "I think that a 403 Forbidden will fit better since the user request is correct, but the limit of replicas was reached.", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "0f14bb57a99d14c32af7e355df993bb5b3b2d5e7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_cb1fd408", "line": 59, "range": {"start_line": 59, "start_character": 17, "end_line": 59, "end_character": 35}, "in_reply_to": "3fa7e38b_556f0160", "updated": "2020-02-13 14:49:37.000000000", "message": "Yeah, that makes sense.", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "452f8860e64516ffa89a392b10e73cd425b9d877", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b5c7553d", "line": 64, "range": {"start_line": 64, "start_character": 19, "end_line": 64, "end_character": 42}, "updated": "2020-02-13 12:02:31.000000000", "message": "This should be a 400 BadRequest since the user sent an invalid request/value.", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "0f14bb57a99d14c32af7e355df993bb5b3b2d5e7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_cbd4b420", "line": 64, "range": {"start_line": 64, "start_character": 19, "end_line": 64, "end_character": 42}, "in_reply_to": "3fa7e38b_b5c7553d", "updated": "2020-02-13 14:49:37.000000000", "message": "Makes sense.", "commit_id": "af70826a874b4b607ce872af8ad5b25f60bffdc7"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "fb9e42004bf71e91f2e4bb16aaabecd2df0c7ee6", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_89d6c4c3", "line": 43, "range": {"start_line": 43, "start_character": 11, "end_line": 43, "end_character": 65}, "updated": "2020-02-13 15:57:36.000000000", "message": "consist of defining a project quota for share replicas", "commit_id": "c2f70d78b625ed3cb775d5fe3a4018cbc624a9d9"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "e5c47a2de03cf2896fa847cddeaf988e5151f514", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_3fdc9ee0", "line": 43, "range": {"start_line": 43, "start_character": 11, "end_line": 43, "end_character": 65}, "in_reply_to": "3fa7e38b_89d6c4c3", "updated": "2020-02-13 17:11:59.000000000", "message": "Done", "commit_id": "c2f70d78b625ed3cb775d5fe3a4018cbc624a9d9"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "794e52c10ee7ce81daefdcc05a50cb1ef48963e9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7409d426", "line": 19, "range": {"start_line": 19, "start_character": 20, "end_line": 19, "end_character": 41}, "updated": "2020-02-13 21:48:00.000000000", "message": "max_replicas_per_share", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "6686ce4ac4b652240b24336b5251d66b0c9cd67a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_5832bf0f", "line": 19, "range": {"start_line": 19, "start_character": 20, "end_line": 19, "end_character": 41}, "in_reply_to": "3fa7e38b_7409d426", "updated": "2020-02-14 20:25:06.000000000", "message": "Done", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "794e52c10ee7ce81daefdcc05a50cb1ef48963e9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_d423e8a8", "line": 25, "range": {"start_line": 25, "start_character": 68, "end_line": 25, "end_character": 72}, "updated": "2020-02-13 21:48:00.000000000", "message": "administrator", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "6686ce4ac4b652240b24336b5251d66b0c9cd67a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_381b4384", "line": 25, "range": {"start_line": 25, "start_character": 68, "end_line": 25, "end_character": 72}, "in_reply_to": "3fa7e38b_d423e8a8", "updated": "2020-02-14 20:25:06.000000000", "message": "Done", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "794e52c10ee7ce81daefdcc05a50cb1ef48963e9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_944ed06a", "line": 52, "range": {"start_line": 51, "start_character": 66, "end_line": 52, "end_character": 24}, "updated": "2020-02-13 21:48:00.000000000", "message": "users", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "6686ce4ac4b652240b24336b5251d66b0c9cd67a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_9815974e", "line": 52, "range": {"start_line": 51, "start_character": 66, "end_line": 52, "end_character": 24}, "in_reply_to": "3fa7e38b_944ed06a", "updated": "2020-02-14 20:25:06.000000000", "message": "Done", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "794e52c10ee7ce81daefdcc05a50cb1ef48963e9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7460f4d0", "line": 67, "range": {"start_line": 67, "start_character": 32, "end_line": 67, "end_character": 59}, "updated": "2020-02-13 21:48:00.000000000", "message": "Interesting, setting this to 0 can turn off replication? What does setting this to 1 mean?\n\nMy thinking is that we'd allow setting this value to '2' because we'd consider a replicated share to have 1 active replica and 1 passive/inactive replica in simple dr cases.", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "6686ce4ac4b652240b24336b5251d66b0c9cd67a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_3bbc9d05", "line": 67, "range": {"start_line": 67, "start_character": 32, "end_line": 67, "end_character": 59}, "in_reply_to": "3fa7e38b_555b7253", "updated": "2020-02-14 20:25:06.000000000", "message": "Thanks for your opinion here, Maurice.", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "b81251bc38ba91b6b5d7cb862c6e6a106388668f", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_555b7253", "line": 67, "range": {"start_line": 67, "start_character": 32, "end_line": 67, "end_character": 59}, "in_reply_to": "3fa7e38b_7460f4d0", "updated": "2020-02-14 05:28:38.000000000", "message": "Thanks for that explanation, I never used replication tbh thus I asked why this can't be 1 or even 0 (in an earlier patch set).\n\nBoth values would mean turning off replication (I realize just now that the share itself automatically gets an active replica representation), which already can be done easier by omitting the replication_type extra spec.\n\ntl;dr: I agree with 'greater than 1'", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "6686ce4ac4b652240b24336b5251d66b0c9cd67a", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_9bcd91bb", "line": 67, "range": {"start_line": 67, "start_character": 32, "end_line": 67, "end_character": 59}, "in_reply_to": "3fa7e38b_7460f4d0", "updated": "2020-02-14 20:25:06.000000000", "message": "Yeah, thinking again I also think that 0 would turn off replication.\nAnd about the max_replica_per_share min value, being greater than or equal to 2 makes more sense.", "commit_id": "5451a2c513195e28cedb6437475179560e8a9e5c"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f05ef12e99d826e79a0dde598e992f75669e2e56", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_bb040d7e", "line": 20, "range": {"start_line": 20, "start_character": 44, "end_line": 20, "end_character": 65}, "updated": "2020-02-14 20:36:02.000000000", "message": "max_replicas_per_share", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "f82fc06bfa703f302e84e7fca79ea0e58522ec72", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_8648d861", "line": 20, "range": {"start_line": 20, "start_character": 44, "end_line": 20, "end_character": 65}, "in_reply_to": "3fa7e38b_bb040d7e", "updated": "2020-02-14 21:23:05.000000000", "message": "Done", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f05ef12e99d826e79a0dde598e992f75669e2e56", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_5bf7198f", "line": 23, "range": {"start_line": 23, "start_character": 52, "end_line": 23, "end_character": 73}, "updated": "2020-02-14 20:36:02.000000000", "message": "max_replicas_per_share", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "f82fc06bfa703f302e84e7fca79ea0e58522ec72", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_a64b945b", "line": 23, "range": {"start_line": 23, "start_character": 52, "end_line": 23, "end_character": 73}, "in_reply_to": "3fa7e38b_5bf7198f", "updated": "2020-02-14 21:23:05.000000000", "message": "Done", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f05ef12e99d826e79a0dde598e992f75669e2e56", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_dbea299f", "line": 45, "range": {"start_line": 45, "start_character": 27, "end_line": 45, "end_character": 48}, "updated": "2020-02-14 20:36:02.000000000", "message": "max_replicas_per_share", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "f82fc06bfa703f302e84e7fca79ea0e58522ec72", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_464e606d", "line": 45, "range": {"start_line": 45, "start_character": 27, "end_line": 45, "end_character": 48}, "in_reply_to": "3fa7e38b_dbea299f", "updated": "2020-02-14 21:23:05.000000000", "message": "Done", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f05ef12e99d826e79a0dde598e992f75669e2e56", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_3bf01d92", "line": 63, "range": {"start_line": 63, "start_character": 19, "end_line": 63, "end_character": 40}, "updated": "2020-02-14 20:36:02.000000000", "message": "max_replicas_per_share", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "f82fc06bfa703f302e84e7fca79ea0e58522ec72", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_66511c0c", "line": 63, "range": {"start_line": 63, "start_character": 19, "end_line": 63, "end_character": 40}, "in_reply_to": "3fa7e38b_3bf01d92", "updated": "2020-02-14 21:23:05.000000000", "message": "Done", "commit_id": "fdf46eb34a3c38d55c129e399169ce49f77f20b0"}]}}, "openstack%2Fpuppet-openstack-integration~stable%2Fstein~I480391556e809b9d2f2bc693453f0fff2be9b0ab": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:02:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-16 23:24:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Ftrain~I480391556e809b9d2f2bc693453f0fff2be9b0ab": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:02:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-16 23:25:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Fqueens~I480391556e809b9d2f2bc693453f0fff2be9b0ab": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:02:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-16 23:24:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~stable%2Frocky~I480391556e809b9d2f2bc693453f0fff2be9b0ab": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:02:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-16 23:24:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fdiskimage-builder~master~I9ab6588f20302b4808b09dc060aced5fd267a3d2": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 23:37:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-02-14 13:14:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 1, "date": "2020-02-14 21:22:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21909, "name": "Bob Fournier", "email": "bfournie@redhat.com", "username": "bfournie"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}], "comments": {}}, "x%2Ftobiko~master~Ib00cba30569c4971811f444697d10e12384ed81e": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 20:04:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Fpuppet-octavia~master~I4fc556fad4f5051a7a0272f1cb2001afa6d0b05e": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 20:34:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-16 23:24:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~Idd69c687232a10fcb6db79a8b835a1576b7558dd": {"owner_id": 17216, "owner_name": "Martin Schuppert", "owner_email": "mschuppert@redhat.com", "labels": [{"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 2, "date": "2020-02-16 20:56:56.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frequirements~master~Ia9c24da703c46420eb041aa5d591c9cf43b9d9a7": {"owner_id": 11692, "owner_name": "C\u00e9dric OLLIVIER", "owner_email": "ollivier.cedric@gmail.com", "labels": [{"value": 1, "date": "2020-02-16 22:29:01.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11692, "name": "C\u00e9dric OLLIVIER", "email": "ollivier.cedric@gmail.com", "username": "col"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14749, "name": "Juha Kosonen", "email": "juha.kosonen@nokia.com", "username": "jukosone"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11131, "name": "OpenStack Proposal Bot", "username": "proposal-bot", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-16 22:38:48.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fpuppet-glance~master~Ifb3bbd3a07ccddafa757cfbc1bec358f49a95c65": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 1, "date": "2020-02-14 18:30:33.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-02-16 20:35:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-13 17:02:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fnova~master~Id65c78b3b330b90389d391e365ed12841abe4a0f": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~master~Ie0a2307d0689e408a4fee19dfb171924e53b1c92": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Frequirements~master~I95c0a3b14d890bfbb3e7f30812450b5c1398772f": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-05-23 23:37:02.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}, {"value": -1, "date": "2019-05-24 00:09:40.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}], "comments": {}}, "openstack%2Frequirements~stable%2Fqueens~I1ecbc47f6344749e73720d982700368be227fbd0": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 15:53:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-16 17:25:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "x%2Ftobiko~master~If8c218d7fa29414d6af13d2adcf6f0e3bfda24de": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 2, "date": "2020-02-14 15:08:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~I286c71edf120e11d8e51c792e6078dc60147f026": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 16:30:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~I49b95bf7a03e39db3c2cbb91b2167c7645b09136": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 16:30:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I9dc5bbd4de28e92e2b6161eb12cb92680f4363bd": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 18:38:25.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I585abc3e6a3b9b8ae9183e0b5170df2e39301e17": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-16 16:28:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frequirements~stable%2Fqueens~Ib32e1a0b464984f74b5b7d40e58e6607de6cf318": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-02-16 15:53:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Frequirements~stable%2Fstein~I8e95dc48b8ba2a7e16f1d34eb5ad0e87a3e96f4f": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-14 10:14:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 1, "date": "2020-01-24 13:44:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 1, "date": "2020-01-17 13:33:24.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "date": "2020-02-13 16:03:31.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-02-16 15:48:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "x%2Ftobiko~master~I8b9bf03df90819175acc754d1a656a039ffd9edd": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 13:23:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Frequirements~stable%2Fnewton~Ic58bd79a192e6624b63a640cb5189d6d0f816250": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16312, "name": "Alfredo Moralejo", "email": "amoralej@redhat.com", "username": "amoralej"}, {"value": 1, "date": "2019-11-19 15:56:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": -2, "date": "2020-01-20 16:57:55.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "starlingx%2Felection~master~I6340a6e604873efbe5d838731aa51d32bbe69f7e": {"owner_id": 31099, "owner_name": "Ochuko Benemoh", "owner_email": "ochuko.benemoh@cengn.ca", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-13 17:47:36.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29357, "name": "Bill Zvonar", "email": "bill.zvonar@windriver.com"}, {"value": -1, "date": "2019-10-14 21:37:58.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": -2, "date": "2019-10-13 21:23:22.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9562, "name": "Ildiko Vancsa", "email": "ildiko.vancsa@gmail.com", "username": "ildikov"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}], "comments": {"candidates/2019_H2/networking/tsc/ochuko.benemoh@cengn.ca": [{"author": {"_account_id": 9562, "name": "Ildiko Vancsa", "email": "ildiko.vancsa@gmail.com", "username": "ildikov"}, "change_message_id": "fd3fda589e6f6073e4791f60881fde6ac835c5ae", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_607ff9de", "line": 5, "range": {"start_line": 1, "start_character": 0, "end_line": 5, "end_character": 167}, "updated": "2019-10-13 17:56:32.000000000", "message": "Please keep line length at 80 characters, it makes it easier to read it through in the different tools.", "commit_id": "d3ba32b482c2656c31d75afbc9866981831ed35f"}]}}, "openstack%2Fopenstack-ansible~stable%2Fstein~Ifeed116a026042ae32985aaa7ff3f167ef3923f4": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 20:11:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-02-16 02:51:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Ftrain~I010b7a7265018df465e9f7e8e927fad778b4c349": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 10:59:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-02-16 02:52:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "x%2Fvmware-nsx~stable%2Ftrain~I01bfb5bd530c63ca8b635bbebcac47659187077e": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 12:02:14.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~Ide7c0e510c659e417ff150d6e7119d09996ac3e7": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-16 09:29:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 4571, "name": "Steve Baker", "email": "sbaker@redhat.com", "username": "steve-stevebaker"}, {"value": 1, "date": "2020-02-15 05:39:29.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 1, "date": "2020-02-14 07:15:06.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "6da25b8f57954318830bf4671585cca5d4ddadf6", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a78abd0f", "line": 10, "updated": "2020-02-14 07:15:06.000000000", "message": "any more info? does it explode?", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "bff074f39f25a81a9bb01df87844cb6ef062cc13", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6c56dd5f", "line": 10, "in_reply_to": "3fa7e38b_66e4bca7", "updated": "2020-02-15 05:39:29.000000000", "message": "ack happening due to https://opendev.org/openstack/tripleo-quickstart-extras/src/branch/master/roles/overcloud-deploy/tasks/create-scripts.yml#L66, and all red except the fix patch:- https://review.rdoproject.org/zuul/builds?job_name=tripleo-ci-centos-7-ovb-1ctlr_1comp-featureset001%20\n\ni also see there is 1ctlr_1comp_64gb.yml which also don't have topology_map https://opendev.org/openstack/tripleo-quickstart/src/branch/master/config/nodes/1ctlr_1comp_64gb.yml, i don't know where that's used, but if used with fs001 that will also see this issue.", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "e22fe18d6a6c05fd01d9c6435d5372292e3a725a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_66e4bca7", "line": 10, "in_reply_to": "3fa7e38b_a6ee3487", "updated": "2020-02-14 22:39:50.000000000", "message": "This job passes with current patch: https://review.rdoproject.org/zuul/build/0409be47378345a1a624285bf182b2af", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "9a2c19a3ecb445585f6166a50f9f671060521293", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a6ee3487", "line": 10, "in_reply_to": "3fa7e38b_a78abd0f", "updated": "2020-02-14 22:38:53.000000000", "message": "Yes, job with 1ctrl_1comp nodes fails, since we enable baremetal deploy, but didn't specify topology map.", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}], "config/nodes/1ctlr_1comp.yml": [{"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "e73c1c6a4473d238b0b48312636ee1aa8bb2fcbc", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d5e44244", "line": 17, "updated": "2020-02-14 03:18:03.000000000", "message": "Shouldn't controller/compute scale default to 1 like it's in those roles, looks duplicated if made compulsory.", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "6da25b8f57954318830bf4671585cca5d4ddadf6", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e76e7563", "line": 17, "in_reply_to": "3fa7e38b_d5e44244", "updated": "2020-02-14 07:15:06.000000000", "message": "yeah they do default to 1 but i am guessing from the commit message there is a failure in the deploy now if we don't specify it.\n\nShould not cause any problem anyway when this is defined it just gets translated to a tripleo-heat-template environment file.\n\nNo harm being explicit especially when there seems to be a valid reason for it but maybe sshnaidm can add some more info in the commit message.", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "bff074f39f25a81a9bb01df87844cb6ef062cc13", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2c4c65c7", "line": 17, "in_reply_to": "3fa7e38b_e76e7563", "updated": "2020-02-15 05:39:29.000000000", "message": "afaik topology map need to be defined only when it deviates from default role counts(1ctlr, 1comp), to unblock it could be done, but doesn't seem ideal.", "commit_id": "71ed15f17aa8630ec29f9b7f7236d0593ddd58c0"}]}}, "x%2Fvmware-nsx~master~I51b5604d89a075fef4a286fbb9cdbbfd791a45bb": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fvmware-nsx~master~I01bfb5bd530c63ca8b635bbebcac47659187077e": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 2, "date": "2020-02-16 07:53:17.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"doc/source/devstack.rst": [{"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_0a204df9", "line": 303, "range": {"start_line": 303, "start_character": 40, "end_line": 303, "end_character": 46}, "updated": "2020-01-31 02:18:52.000000000", "message": "cluster", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_ea1611a2", "line": 303, "range": {"start_line": 303, "start_character": 23, "end_line": 303, "end_character": 27}, "updated": "2020-01-31 02:18:52.000000000", "message": "with policy it doesn't have to be UUID, lets change to ID?", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_7ddf3739", "line": 303, "range": {"start_line": 303, "start_character": 40, "end_line": 303, "end_character": 46}, "in_reply_to": "3fa7e38b_0a204df9", "updated": "2020-02-02 07:44:54.000000000", "message": "Done", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_9ddc7344", "line": 303, "range": {"start_line": 303, "start_character": 23, "end_line": 303, "end_character": 27}, "in_reply_to": "3fa7e38b_ea1611a2", "updated": "2020-02-02 07:44:54.000000000", "message": "Done", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}], "vmware_nsx/plugins/nsx_p/plugin.py": [{"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_6a9c610d", "line": 978, "range": {"start_line": 978, "start_character": 13, "end_line": 978, "end_character": 74}, "updated": "2020-01-31 02:18:52.000000000", "message": "There is policy API /infra/sites/default/enforcement-points/default/edge-clusters/\n<cluster-id>/edge-nodes/", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "38cdaad1cf09b6deb3fdc049cecfc917ce0b35d1", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_dd818bfc", "line": 978, "range": {"start_line": 978, "start_character": 13, "end_line": 978, "end_character": 74}, "in_reply_to": "3fa7e38b_5de6fb15", "updated": "2020-02-02 08:03:08.000000000", "message": "This api will get us the transport nodes ids,  but still missing the api to get the TA of each node, because there is no api to get a transport node via policy.", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_5de6fb15", "line": 978, "range": {"start_line": 978, "start_character": 13, "end_line": 978, "end_character": 74}, "in_reply_to": "3fa7e38b_6a9c610d", "updated": "2020-02-02 07:44:54.000000000", "message": "Thanks. I'll check it.", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_ca78f5c3", "line": 1055, "range": {"start_line": 1055, "start_character": 15, "end_line": 1055, "end_character": 35}, "updated": "2020-01-31 02:18:52.000000000", "message": "Can this be False here? Looks like all relevant flows already had this check", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_bdae0f9f", "line": 1055, "range": {"start_line": 1055, "start_character": 15, "end_line": 1055, "end_character": 35}, "in_reply_to": "3fa7e38b_ca78f5c3", "updated": "2020-02-02 07:44:54.000000000", "message": "it can also be called from add_router_interface, where it is not mandatory.", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_4a0c0544", "line": 1320, "range": {"start_line": 1319, "start_character": 1, "end_line": 1320, "end_character": 43}, "updated": "2020-01-31 02:18:52.000000000", "message": "I don't think you can change subnet ip version", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_fd99e77f", "line": 1320, "range": {"start_line": 1319, "start_character": 1, "end_line": 1320, "end_character": 43}, "in_reply_to": "3fa7e38b_4a0c0544", "updated": "2020-02-02 07:44:54.000000000", "message": "You are right. I'll remove it from the v3_common as well.", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_050b5e23", "line": 1335, "range": {"start_line": 1335, "start_character": 20, "end_line": 1335, "end_character": 70}, "updated": "2020-01-31 02:18:52.000000000", "message": "looks like some validation code can be reused with MP code, but I understand it may result in more complexity..", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_e52ac276", "line": 1618, "range": {"start_line": 1618, "start_character": 27, "end_line": 1618, "end_character": 65}, "updated": "2020-01-31 02:18:52.000000000", "message": "nit: this is policy only, using cfg.CONF.nsx_p.dhcp_lease_time could improve readability a tiny bit", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_1d9f2365", "line": 1618, "range": {"start_line": 1618, "start_character": 27, "end_line": 1618, "end_character": 65}, "in_reply_to": "3fa7e38b_e52ac276", "updated": "2020-02-02 07:44:54.000000000", "message": "Done", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_454f1669", "line": 1669, "updated": "2020-01-31 02:18:52.000000000", "message": "I feel like policy transaction may be helpful to reduce roundtrips - perhaps in caller function", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_bda36fb0", "line": 1669, "in_reply_to": "3fa7e38b_454f1669", "updated": "2020-02-02 07:44:54.000000000", "message": "I tried it and failed with something. I'll leave it to future improvements as it is not that simple here.", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}], "vmware_nsx/shell/admin/plugins/nsxp/resources/networks.py": [{"author": {"_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, "change_message_id": "9f8a260b3bc6abcd0900cecf506cb2d9a8714436", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_c5b0e644", "line": 68, "updated": "2020-01-31 02:18:52.000000000", "message": "should we also check backend version here?", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}, {"author": {"_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, "change_message_id": "014eb8e5b7a0ef30cbb19df70009c493050254d3", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_dda8ab8c", "line": 68, "in_reply_to": "3fa7e38b_c5b0e644", "updated": "2020-02-02 07:44:54.000000000", "message": "Done", "commit_id": "da7cac61425eba7842376d4400c6131b5a2d5354"}]}}, "openstack%2Fcyborg~master~I09db889fe665c6246ec9503af92c909e7d0da24f": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 14:33:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-16 11:14:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "c2ab4f41c6185d51da26aa083e32a60241dc4e7c", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_58a418a4", "line": 9, "range": {"start_line": 9, "start_character": 3, "end_line": 9, "end_character": 9}, "updated": "2020-02-13 13:30:21.000000000", "message": "You've dug deep in this problem. Can you add more info about the problem and the clue in the commit message?\nWhere do you find the timeout problem? How you draw this conclusion? List the main source patches and also the key clue that comes to the conclusion.", "commit_id": "db0efe85f57543a5a974c85b9a696b3a3227934d"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "0fb979a54c41cfe6b32c9d77d94ea4d51c3b0246", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ce53626d", "line": 9, "range": {"start_line": 9, "start_character": 3, "end_line": 9, "end_character": 9}, "in_reply_to": "3fa7e38b_58a418a4", "updated": "2020-02-13 15:01:18.000000000", "message": "> You've dug deep in this problem. Can you add more info about the\n > problem and the clue in the commit message?\n > Where do you find the timeout problem? How you draw this\n > conclusion? List the main source patches and also the key clue that\n > comes to the conclusion.\n\nIMHO no need to add the info to this message.\nA Standard engineering debug method can debug it. \n\nI did not find every commit has add develop method to commit message.\n\nLet me explain:\nActually, we have already have timeout when py37 enable. \nPlease see my summary comments. \nFor it is random, so we did not pay attention to on it.\nJust recheck it every time, we thought this is the fault of CI Gate. \n\nBut a later a patch add a basepython in tox, then all timeout disappears. \nAnd then an new patch ignore basepython commit, timeout come out again. \n\nDuring these period\uff0c We make many change commit, so that maybe inadvertently eliminate some timeout UT.\nBut this one still remain at last. \n\nmost of us did not use Py37 or Py38. If you use Py37/Py38, you can catch this issue. \n\nSo suggest all developers:\n1. Move to Py38, it backwards compatible with Py36/Py37.\n2. Pay attention to timeout, look into it before recheck.\n\nAll these no need in the commit message.", "commit_id": "db0efe85f57543a5a974c85b9a696b3a3227934d"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "d3abe66d9afcab7334cc6d475ffbbb08dae358fb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_e3dbd01c", "line": 9, "range": {"start_line": 9, "start_character": 3, "end_line": 9, "end_character": 9}, "in_reply_to": "3fa7e38b_ce53626d", "updated": "2020-02-13 19:11:12.000000000", "message": "Yumeng, to add some context:\n\nhttps://zuul.opendev.org/t/openstack/builds?job_name=openstack-tox-py37&result=TIMED_OUT\n\nshows that a lot of Cyborg patches timed out on py37. Sme neutron patches used to time out but that's because they were exceeding the job's time limit and they (will) fix it by increasing the timeout. But Cyborg py37 usually takes just a few minutes, whereas the time out is 40 minutes: so increasing the timeout is not the right solution for us. \n\nSome IRC logs for reference:\n[1] First discussion with infra team:\n\n http://eavesdrop.openstack.org/irclogs/%23openstack-infra/%23openstack-infra.2020-01-22.log.html#t2020-01-22T15:22:32\n\n[2] Last discussion with infra team so far:\n\n http://eavesdrop.openstack.org/irclogs/%23openstack-infra/%23openstack-infra.2020-02-12.log.html#t2020-02-12T16:46:18", "commit_id": "db0efe85f57543a5a974c85b9a696b3a3227934d"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "7c978d95d9c13282604637005e61305fc6e891ee", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b2bc326b", "line": 14, "range": {"start_line": 9, "start_character": 0, "end_line": 14, "end_character": 46}, "updated": "2020-02-14 16:39:52.000000000", "message": "The whole history can be 3 stage:\n1. After we enable py37 there are some random timeout as follow:\nhttps://review.opendev.org/#/c/679406/  On Sep 19 11:30 AM\nhttps://review.opendev.org/#/c/688239/  On Oct 12 3:31 PM\nhttps://review.opendev.org/#/c/688231/  On Oct 28 11:38 PM Oct 29 9:11 AM Oct 29 12:05 PM\nhttps://review.opendev.org/#/c/685542/  On Nov 14 12:31 AM Nov 14 7:42 AM\nhttps://review.opendev.org/#/c/691872/  On Oct 29 11:55 PM\nhttps://review.opendev.org/#/c/690509/  On Nov 15 4:33 PM\n\n2. After this https://review.opendev.org/#/c/688593/ timeout Disappeared for a while. This patch is merged on Nov 19 5:05 PM.\nThis patch set a wrong python path evn.\n\n3. After another patch https://review.opendev.org/#/c/696397\uff0c timeout comes out again. \nThe intention of this patch is to suppress confusing pep8 message, but it also fix python path evn unintentionally.", "commit_id": "bfaae7ada37113f438b75c6672e537775d4f2d87"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "fa93900ff1b0f284dba4899bcd772abb44a5bdfe", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8009a7db", "line": 47, "range": {"start_line": 9, "start_character": 0, "end_line": 47, "end_character": 86}, "updated": "2020-02-14 11:02:56.000000000", "message": "IMHO, need to describe these, no helpful for others to get \nexperience if you wonder how to debug the issue.\n\nI really use bisection to narrow down the scope issue.\nIf you know well about threadpool lib, just ctr+c signal can more easily to find the issue directly by the call trace stack. \n\nI found the reason:\nThe thread pool lib always loop to check if there are new jobs.\nThe action of testunit framework in py37 is different with py36. If there are thread pool run, the testunit will never return. \n\nyou can a simple test as follow in this file:\n\ndef job1(t1=0):\n    print(time.time())\n    print(\"sleep %s second\" % t1)\n    time.sleep(t1)\n    print(time.time())\n    return \"Hello, world\"\n\nclass TestExtARQObject(base.DbTestCase):\n    def test_foo(self):\n        print(\"Test Foo\")\n\n    def test_bar(self):\n        print(\"Test bar\")\n\n    def test_apply_patch_fpga_arq_monitor_job(self):\n        works = utils.ThreadWorks()\n        job = works.spawn(job1, 1)\n        return job", "commit_id": "bfaae7ada37113f438b75c6672e537775d4f2d87"}], "cyborg/tests/unit/objects/test_extarq.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "524e86cf109f73879fb981c85e3197fb21913305", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9579f930", "side": "PARENT", "line": 248, "updated": "2020-02-13 12:01:46.000000000", "message": "In this test, which code impact the py37 failed? Anyone can give guess?", "commit_id": "deed9c822e3dc54a522ede0d8fafda5890075803"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "40d7d6f82ef523cb42935f027e00e176469c0a38", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_234c8895", "side": "PARENT", "line": 248, "in_reply_to": "3fa7e38b_63c7e03e", "updated": "2020-02-13 19:30:40.000000000", "message": "> Not exactly at present.\n > Guess extarq_get call query.with_for_update in \"cyborg/db/sqlalchemy/api.py\"\n > \n > but not know what's the difference between py3.6 and py3.7\n\nnot the issue of with_for_update", "commit_id": "deed9c822e3dc54a522ede0d8fafda5890075803"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "c7bcc62aac7e853946c94a5bfba77f6b01de47bd", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a693a64c", "side": "PARENT", "line": 248, "in_reply_to": "3fa7e38b_9579f930", "updated": "2020-02-13 20:03:28.000000000", "message": "> In this test, which code impact the py37 failed? Anyone can give\n > guess?\n\nThis case can run successfully independent.\nIt can also can run successfully with each other.\nBut it can not run  successfully with any 2 others.\n\neven it can not works well the simple 2 UTs.\n+    def test_foo(self):\n+        print(\"test\")\n\n+    def test_bar(self):\n+        print(\"test\")\n\nThe unittest framework can test it well, and no error for it.  But it can not get conclusion result for more than 2 cases(include this one), unittest will hang on return(result).", "commit_id": "deed9c822e3dc54a522ede0d8fafda5890075803"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "425f430431d226940d2052157a5ea606c2a670b6", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_63c7e03e", "side": "PARENT", "line": 248, "in_reply_to": "3fa7e38b_9579f930", "updated": "2020-02-13 19:27:31.000000000", "message": "> In this test, which code impact the py37 failed? Anyone can give\n > guess?\nNot exactly at present. \nGuess extarq_get call query.with_for_update in \"cyborg/db/sqlalchemy/api.py\"\n\nbut not know what's the difference between py3.6 and py3.7", "commit_id": "deed9c822e3dc54a522ede0d8fafda5890075803"}], "tox.ini": [{"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "e82191ccbdcd0e40c5e9d69d1ee13abb6a1537cb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f4c2b601", "line": 8, "range": {"start_line": 8, "start_character": 29, "end_line": 8, "end_character": 33}, "updated": "2020-02-13 05:22:53.000000000", "message": "it is revert here.", "commit_id": "db0efe85f57543a5a974c85b9a696b3a3227934d"}]}}, "openstack%2Fneutron~stable%2Fqueens~I53e20be9b306bf9d3b34ec6a31e3afabd5a0fd6f": {"owner_id": 9531, "owner_name": "liuyulong", "owner_email": "i@liuyulong.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 2, "date": "2020-01-30 11:04:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}, {"value": 2, "date": "2020-01-30 23:48:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}], "comments": {}}, "openstack%2Frequirements~stable%2Fpike~Ifb805954ff36420004d552a690046d8ddf3bed5c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1916, "name": "Guang Yee", "email": "gyee@suse.com", "username": "guang-yee"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-16 06:29:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "68df8ccd9044a183250ac2b9066fb3a8828b8794", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fbc53e3f", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 6}, "updated": "2020-01-17 10:31:54.000000000", "message": "nits", "commit_id": "13c65d05ee188c3f955a0e0e2cb0803c3464e828"}]}}, "openstack%2Frequirements~stable%2Fqueens~Ifb805954ff36420004d552a690046d8ddf3bed5c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1916, "name": "Guang Yee", "email": "gyee@suse.com", "username": "guang-yee"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-16 06:29:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "ed99ce438c0560a260c639c4fd8c4c26a19a438e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7b95ce93", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 6}, "updated": "2020-01-17 10:05:40.000000000", "message": "nits", "commit_id": "faf67d455c29ee5311e405d2856b5d8caf3ebacc"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "8122253003ae8381e9c418dac41bae5d0410d4f0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9be68a49", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 6}, "in_reply_to": "3fa7e38b_7b95ce93", "updated": "2020-01-17 10:09:46.000000000", "message": "Such a typo is not worth a -1, please remove your -1.\n\nIt's fine to comment.", "commit_id": "faf67d455c29ee5311e405d2856b5d8caf3ebacc"}]}}, "openstack%2Frequirements~stable%2Frocky~I4ef04c4fad5ffa0ba195fe6975397d9bb4afc70c": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 06:28:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Idd69c687232a10fcb6db79a8b835a1576b7558dd": {"owner_id": 17216, "owner_name": "Martin Schuppert", "owner_email": "mschuppert@redhat.com", "labels": [{"value": 2, "date": "2020-02-16 08:24:58.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-02-15 18:16:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}], "comments": {}}, "openstack%2Fkolla~stable%2Ftrain~I0e8adfb4f0cdca748a7391085c059e366f34cb44": {"owner_id": 30523, "owner_name": "Dincer Celik", "owner_email": "hello@dincercelik.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:22:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-10 17:21:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}], "comments": {}}, "x%2Fvmware-nsx~stable%2Fstein~I01bfb5bd530c63ca8b635bbebcac47659187077e": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-16 07:57:54.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Ftrain~Ifeed116a026042ae32985aaa7ff3f167ef3923f4": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 17:38:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-16 02:51:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Ftrain~I41664e54cbdcce5d83f88373f378f4bfe28515c7": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 2, "date": "2020-02-15 13:50:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-02-16 02:49:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Fstein~I50931e0f68176bbaebfb68eec9f84241816c7fe3": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 21:43:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-16 02:48:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Fironic-inspector~master~I6f539c471bceeb542838c5c7f93a7fe19cd77bb6": {"owner_id": 29792, "owner_name": "Jerry Wang", "owner_email": "jerry.a.wang@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fironic-python-agent~master~I68390637a1f92eaf814ce2187c1a17b18178f33e": {"owner_id": 29792, "owner_name": "Jerry Wang", "owner_email": "jerry.a.wang@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29792, "name": "Jerry Wang", "email": "jerry.a.wang@intel.com", "username": "junyiwan-gtc"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "5c3c90d240e2960d8ae8c2d17788b84e78c7e446", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ac9935cf", "line": 8, "updated": "2020-02-15 03:07:29.000000000", "message": "Please add a story/task tag when you revise this next.", "commit_id": "275740c706d6068d450c008861f6fb4eb64a2bd8"}], "ironic_python_agent/hardware.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "5c3c90d240e2960d8ae8c2d17788b84e78c7e446", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0caac9d1", "line": 474, "updated": "2020-02-15 03:07:29.000000000", "message": "?Persistent memory?\n\nOddly, I suspect a doc string might be god since many may not know what it is.", "commit_id": "275740c706d6068d450c008861f6fb4eb64a2bd8"}, {"author": {"_account_id": 29792, "name": "Jerry Wang", "email": "jerry.a.wang@intel.com", "username": "junyiwan-gtc"}, "change_message_id": "db843899a0383fedce7095151a4f26d0117c46d3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cca3519b", "line": 474, "in_reply_to": "3fa7e38b_0caac9d1", "updated": "2020-02-15 04:49:26.000000000", "message": "Yes. Would add it in future when I plan upstream", "commit_id": "275740c706d6068d450c008861f6fb4eb64a2bd8"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "5c3c90d240e2960d8ae8c2d17788b84e78c7e446", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2ca54501", "line": 886, "updated": "2020-02-15 03:07:29.000000000", "message": "I'm guessing more goes here?", "commit_id": "275740c706d6068d450c008861f6fb4eb64a2bd8"}, {"author": {"_account_id": 29792, "name": "Jerry Wang", "email": "jerry.a.wang@intel.com", "username": "junyiwan-gtc"}, "change_message_id": "db843899a0383fedce7095151a4f26d0117c46d3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4cf7618f", "line": 886, "in_reply_to": "3fa7e38b_2ca54501", "updated": "2020-02-15 04:49:26.000000000", "message": "This only for test the data path. Would add real code to detect AEP in future", "commit_id": "275740c706d6068d450c008861f6fb4eb64a2bd8"}]}}, "openstack%2Fzun-tempest-plugin~master~If4cec36beab64c83a59ebc7cf5c98f3d15ba328b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-24 04:34:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Frequirements~master~I07b4fdf5beedc3480afb9ca0a41252c11084dc12": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 19:47:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ie6c29df1ec70d97ad22f9c71c4f35a8928c8f160": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 15:40:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-14 23:18:53.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "zuul%2Fzuul~master~Idbd63f15b0cde3d77fe969c7650f4eb18aec1ef6": {"owner_id": 2475, "owner_name": "Antoine Musso", "owner_email": "hashar@free.fr", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-30 15:07:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30637, "name": "Jan Kubovy", "email": "jan.kubovy@bmw.de", "username": "kubovy"}, {"value": 2, "date": "2020-01-28 15:05:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 0, "_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, {"value": 2, "date": "2020-02-15 20:14:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"zuul/cmd/client.py": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "774137c2d48666f587aefc2fa245177ea2b38d2a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_42e74cd8", "line": 152, "updated": "2020-01-27 17:06:59.000000000", "message": "Maybe update this to 'Zuul CLI Client' ?", "commit_id": "5be019abaa59f64c4a70ac0403baa355bd0bb411"}, {"author": {"_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, "change_message_id": "8cecb210e23c1d9b7aba6a63658da822f4c6b9a2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1f1a027b", "line": 152, "in_reply_to": "3fa7e38b_42e74cd8", "updated": "2020-01-28 09:16:41.000000000", "message": "Indeed :) Updated.", "commit_id": "5be019abaa59f64c4a70ac0403baa355bd0bb411"}], "zuul/lib/fingergw.py": [{"author": {"_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, "change_message_id": "8cecb210e23c1d9b7aba6a63658da822f4c6b9a2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7f0a1627", "line": 162, "updated": "2020-01-28 09:16:41.000000000", "message": "Prefix with 'Zuul' for consistency with other clients:\n\n - Finger Gateway\n + Zuul Finger Gateway", "commit_id": "5be019abaa59f64c4a70ac0403baa355bd0bb411"}], "zuul/web/__init__.py": [{"author": {"_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, "change_message_id": "8cecb210e23c1d9b7aba6a63658da822f4c6b9a2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ba017c05", "line": 1089, "updated": "2020-01-28 09:16:41.000000000", "message": "- Zuul Web\n + Zuul Web Server", "commit_id": "5be019abaa59f64c4a70ac0403baa355bd0bb411"}]}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Ief80c917803c2143e459a74079159d958d18f153": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 18:36:34.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fmicroversion-parse~master~I74cdd7462cd5134b22d0c6b13aafd0e88ef60e1c": {"owner_id": 27954, "owner_name": "Mois\u00e9s Guimar\u00e3es de Medeiros", "owner_email": "guimaraes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 14:27:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 16:44:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-14 17:05:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}], "comments": {"microversion_parse/__init__.py": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "d679fbe335d2cbbe6ac896db65e972c4eb5df562", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3204c218", "line": 28, "updated": "2020-02-14 16:44:50.000000000", "message": "as good a time as any for an unrelated typo fix like this :)", "commit_id": "2c36df6bf33e42c379fbd8228fbe63c77b3714b1"}]}}, "openstack%2Ftempest~master~Ia25c8022f6bf2a0015641ef097f09b29f34e6d16": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-14 13:30:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 2, "date": "2020-02-14 13:30:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Ftrain~Id11adaa426487ed4f3ce4148c84f750cba1c0c11": {"owner_id": 30133, "owner_name": "Piotr Kopec", "owner_email": "pkopec17@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-05 21:35:29.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 2, "date": "2020-02-03 14:01:25.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frally~master~Ibc901c400e55f201eaaf25eaa1c3eed17b4e0480": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 17:06:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Frally~master~I05be118bb9ed25bf991a7838abc3e358c679638e": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 16:57:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fopenstack-ansible-os_keystone~stable%2Ftrain~I9f6d57bec158375e4593a48bc2045f929ac70d80": {"owner_id": 29865, "owner_name": "Georgina Shippey", "owner_email": "georgina.shippey@outlook.com", "labels": [{"value": 2, "date": "2020-02-03 10:24:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-03 13:30:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "_account_id": 30324, "name": "Kanishk Godha", "email": "kanishkg@vexxhost.com", "username": "kanishk.godha"}], "comments": {}}, "openstack%2Fdevstack~master~I7bdfc408b7c18273639ec26eade475856ac43593": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 5196, "name": "Matthew Treinish", "email": "mtreinish@kortar.org", "username": "treinish"}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-01-23 13:05:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-01-23 12:05:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 1, "date": "2020-01-27 09:10:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, {"value": 1, "date": "2020-02-03 15:10:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 2, "date": "2020-02-13 19:22:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2020-01-23 09:14:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9ca771d6f2069e4e68d1d4b3b41bd9a60bc74afe", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_42343efb", "line": 7, "updated": "2019-11-21 09:27:40.000000000", "message": "How about we make this \"Always install python3\"\n\nSince we run with USE_PYTHON3=True by default now, that would be a logical followup and not specifically targeted to any distro.\n\nJust needs to be combined with https://review.opendev.org/693137", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "8c830b81a7f112b9021fa9327cd87b6b871993c6", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_60f31da1", "line": 12, "updated": "2019-11-07 06:09:30.000000000", "message": "I've pushed back on this before; I don't see the point of testing devstack on centos7 with python3 ... it's not used in any actual situations.\n\nAt this point, it probably means dropping the job if we have no interest in python2 for U", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "fc299ce5ba2cb563cb4fafe68e736fc9215c0428", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8b77553c", "line": 12, "in_reply_to": "3fa7e38b_60f31da1", "updated": "2019-11-07 17:00:58.000000000", "message": "I'm not sure what \"not used in any actual situations\" means. Centos w/ EPEL is pretty common. I know of at least one major company that uses Openstack w/ Centos 7. Not sure if they use python3 or not, but they definitely use EPEL--and if we are dropping python2 support...I don't see why we wouldn't test it.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "0a3f1b22f2e88b147165d87cb0a3fcffbd4f0a06", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_d7de4a3d", "line": 12, "in_reply_to": "3fa7e38b_8b77553c", "updated": "2019-11-07 21:56:30.000000000", "message": "If you're using openstack on centos, surely you're using RDO and that doesn't support the epel python3.  I just don't think there's any realistic deployment method of openstack with centos7+python3 so I don't see it's not worth person-hours to work on it.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "20f66c749b924e8d87f8d059441f28d3d7c70783", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_a570f841", "line": 12, "in_reply_to": "3fa7e38b_d7de4a3d", "updated": "2019-11-14 06:15:02.000000000", "message": "Ian you are making too much assumptions here. DevStack must provide what OpenStack developers wants from it. It doesn't matter the reason why we want Python3 on CentOS 7. The point is the decision is on DevStack users and not on us. It has been a very desired feature and RDO cannot provide the same experience as DevStack just because it is not DevStack. As Python developer I want to stop using Python 2 because it is wasting my time supporting both language dialects, but in the same time I want to test my code on CentOS because it carries different binary code (kernel, OVS, compiler, ssl, etc.) than Ubuntu. I want to test my code on both distros because it is a good thing to do and it is convenient to me. What do you know about what is convenient to me and other DevStack users need?", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "e82497ed3fd2667ae95a899a65618241a1c14862", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_55716faa", "line": 11, "range": {"start_line": 10, "start_character": 49, "end_line": 11, "end_character": 69}, "updated": "2020-01-23 09:01:48.000000000", "message": "but only for fedora?", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "c8cd80a2a3524d057711ccf9d84f5f8c7146dc91", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_cece3057", "line": 11, "range": {"start_line": 10, "start_character": 49, "end_line": 11, "end_character": 69}, "in_reply_to": "3fa7e38b_2ead84a3", "updated": "2020-01-23 13:16:33.000000000", "message": "Ah, just like is_ubuntu matches debian. -2 for naming ;p", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "0763603e2343bcfcd21a3880f37eed64652a3030", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9314dfa0", "line": 11, "range": {"start_line": 10, "start_character": 49, "end_line": 11, "end_character": 69}, "in_reply_to": "3fa7e38b_55716faa", "updated": "2020-01-23 12:05:46.000000000", "message": "They did get installed earlier already for the other distros, so I'd say this wording is fine.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "e3e738df7a7ac305872c8c76ccf98c4f24fa4562", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2ead84a3", "line": 11, "range": {"start_line": 10, "start_character": 49, "end_line": 11, "end_character": 69}, "in_reply_to": "3fa7e38b_735e0352", "updated": "2020-01-23 12:55:02.000000000", "message": "is_fedora covers all rpm-based distros, including centos.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "a96a114d9364ee968a04f763dd356299ebdb3da7", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_735e0352", "line": 11, "range": {"start_line": 10, "start_character": 49, "end_line": 11, "end_character": 69}, "in_reply_to": "3fa7e38b_9314dfa0", "updated": "2020-01-23 12:13:43.000000000", "message": "For CentOS? Where? :D", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "e82497ed3fd2667ae95a899a65618241a1c14862", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_156777ee", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 48}, "updated": "2020-01-23 09:01:48.000000000", "message": "this looks like a separate issue to me", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "1ffa663d64b6e112de2f0d32867389c100e5fa62", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_60e78447", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 48}, "in_reply_to": "3fa7e38b_156777ee", "updated": "2020-02-03 15:10:05.000000000", "message": "Things will fail w/o this change. So even if it was a separate change, this change would be dependent on it (and nothing else would). So it seemed best to keep the changes together. Just changing one thing wouldn't actually make anything that was broken start working.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "f6c981a8ebfa0e4444ff156d4c5b5a68ffbc8a10", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e19db3ba", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 48}, "in_reply_to": "3fa7e38b_60e78447", "updated": "2020-02-03 20:13:21.000000000", "message": "I understand your logic but it has even been proposed earlier independently: https://review.opendev.org/687588\n\nAtm the change is a bit convoluted as it:\n\n- does what subject says\n- changes logic regarding py3/py2 installation\n- changes default py3 version\n\nquite a bit for the original subject...\nPlease let's keep it more organized in the future.\n\nIt has one +2, passed CI, its direction is the right one for devstack master and it is no candidate for backport so should be fine in general. I am a little worried about the other issue I've just commented on.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}], "inc/python": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "39dc331787c6d493e95668a689069c2703546a42", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b293d24e", "line": 556, "range": {"start_line": 556, "start_character": 24, "end_line": 556, "end_character": 45}, "updated": "2019-10-16 15:08:07.000000000", "message": "Why don't these show up in the package list?\n\nhttps://zuul.opendev.org/t/openstack/build/8f4f5dd05ad4475281723caf40ae3f7c/log/controller/logs/rpm-qa.txt.gz\n\nThe is_fedora function handles CentOS as well.", "commit_id": "5f4acc7c54a135b4108cf75b6bed303d38c4d6d6"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "c4b63ee47d4696ab301daae4561b2a040da1e02f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_92ded60e", "line": 556, "range": {"start_line": 556, "start_character": 24, "end_line": 556, "end_character": 45}, "in_reply_to": "3fa7e38b_b293d24e", "updated": "2019-10-16 15:10:19.000000000", "message": "I guess maybe because the job isn't using python3.", "commit_id": "5f4acc7c54a135b4108cf75b6bed303d38c4d6d6"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9ca771d6f2069e4e68d1d4b3b41bd9a60bc74afe", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_822556c1", "line": 556, "updated": "2019-11-21 09:27:40.000000000", "message": "Can we do this for any fedora-type distro or will this break on older or newer ones?", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "ae3e76d41c06f851f890ae9a45c54f9a567b66d4", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_41a9bc75", "line": 556, "in_reply_to": "3fa7e38b_822556c1", "updated": "2020-01-23 00:39:29.000000000", "message": "It should work for any. I've tested on f29 and centos7 so far. But the centos8 package python36-devel provides python3-devl as well, so yum/dnf install python3 will install python36 etc.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}], "stack.sh": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9ca771d6f2069e4e68d1d4b3b41bd9a60bc74afe", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_c50d9835", "line": 422, "updated": "2019-11-21 09:27:40.000000000", "message": "Since the pkg we install isn't always called \"python3\", I'd say drop the is_installed check. Installation is idempotent so that shouldn't hurt. We'll also need to install python3 for our scripts if python3_enabled is false.\n\nInstead we can move the \"install_package python\" line from above into an \"if ! python3_enabled\" block.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "ae3e76d41c06f851f890ae9a45c54f9a567b66d4", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_41f77c8f", "line": 422, "in_reply_to": "3fa7e38b_5ce31635", "updated": "2020-01-23 00:39:29.000000000", "message": "Maybe, but that isn't how it works for any other distro and I'd prefer not to make unnecessary unrelated style changes if possible since getting this through at all is less than ideally simple.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "c54eb29e2e87303fac18f2ebc4a34d1ee756d8aa", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_5ce31635", "line": 422, "in_reply_to": "3fa7e38b_c50d9835", "updated": "2019-12-10 09:15:13.000000000", "message": "I think logic would be simpler if install_python3 function would check if python3 is installed and just call it here as it is.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "ae3e76d41c06f851f890ae9a45c54f9a567b66d4", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_925e204f", "line": 422, "in_reply_to": "3fa7e38b_c50d9835", "updated": "2020-01-23 00:39:29.000000000", "message": "Sounds good. rpm -q is a pretty terrible way to see if a package is installed since it doesn't take into account \"Provides\" etc.", "commit_id": "6f05154544634b405445764744c8d413e8108da7"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "e82497ed3fd2667ae95a899a65618241a1c14862", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f5389bcb", "line": 418, "range": {"start_line": 418, "start_character": 0, "end_line": 418, "end_character": 15}, "updated": "2020-01-23 09:01:48.000000000", "message": "previously only python3_enabled triggered this, now both paths do (see install_prereqs)", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "0763603e2343bcfcd21a3880f37eed64652a3030", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_134eafc1", "line": 418, "range": {"start_line": 418, "start_character": 0, "end_line": 418, "end_character": 15}, "in_reply_to": "3fa7e38b_f5389bcb", "updated": "2020-01-23 12:05:46.000000000", "message": "Hmm, yes, one should clean up the duplicate call in tools/install_prereqs.sh which happens after this, but I'd be fine with doing that in a followup.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "f6c981a8ebfa0e4444ff156d4c5b5a68ffbc8a10", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_61df8367", "line": 422, "range": {"start_line": 420, "start_character": 0, "end_line": 422, "end_character": 2}, "updated": "2020-02-03 20:13:21.000000000", "message": "This makes py2 not install. I wonder if it does not break something in devstack that we have not ported yet. CI images obviosly include python so it's a noop.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "4ce31d53094de4e27bc4343f5afba5a8968d426f", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_849ea952", "line": 422, "range": {"start_line": 420, "start_character": 0, "end_line": 422, "end_character": 2}, "in_reply_to": "3fa7e38b_61df8367", "updated": "2020-02-13 16:20:20.000000000", "message": "This was changed as per aprevious review. Originally it just added the install_python3 -- https://review.opendev.org/#/c/688799/4..5/stack.sh. If Jens is ok w/ changing this back, I'm happy to do it. Just don't want to get in a situation where different reviewers want different things. :) I'm also more than happy for someone else to take this over and make whatever changes they'd like to see.", "commit_id": "78cf6f642aea91385dfbe6e1fa594e9f5373e69c"}]}}, "openstack%2Fopenstack-ansible~master~I94575912a805f378103ca049a201a303ac11cf62": {"owner_id": 25023, "owner_name": "Jonathan Rosser", "owner_email": "jonathan.rosser@rd.bbc.co.uk", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "zuul%2Fzuul-jobs~master~Ib30e409044ccc48b4c19beae36f1bcd453ebef8e": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 23:08:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-14 23:12:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-14 23:08:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"roles/install-docker/tasks/docker-setup.yaml": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "0339043192af348a350800d0f17c00dbaa539c59", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_c1e41e0e", "line": 15, "updated": "2020-02-05 05:41:15.000000000", "message": "I thought, wow, there's gotta be a better way to do that; and sure enough others thought that too and there is some fun reading in https://github.com/ansible/ansible/pull/52931 :/", "commit_id": "eb61b80538282b6a2f0c18617314b8e7d5e75e81"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "ebb7666a6714d7da3e0c966e812db84e49f9671b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1632685e", "line": 15, "in_reply_to": "3fa7e38b_7875d7fe", "updated": "2020-02-05 22:14:47.000000000", "message": "i certainly wouldn't insist on it, but it does look useful overall, and it seems like ansible won't include it?", "commit_id": "eb61b80538282b6a2f0c18617314b8e7d5e75e81"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "557a96e5b0692ea4eed57c4dc477a9ebeb53267c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_7875d7fe", "line": 15, "in_reply_to": "3fa7e38b_c1e41e0e", "updated": "2020-02-05 13:05:33.000000000", "message": "Arg, would be nice if they explained how to use the module. Should we vendor https://github.com/particledecay/ansible-jsonpatch ?", "commit_id": "eb61b80538282b6a2f0c18617314b8e7d5e75e81"}], "roles/use-buildset-registry/tasks/main.yaml": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "415de10825b7fb00e8ee6e5622cb652323b51e54", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_1a463458", "line": 69, "updated": "2020-02-03 22:59:36.000000000", "message": "I don't think we should make this configuration change here as this isn't related to using the buildset registry but is specific to how the zuul operator (and zuul itself) wants to operate in Docker. Specifically zuul scheduler wants to connect to its own port 4730 for gearman.\n\nCan we make this change closer to where it makes sense? We are merging these configs so this should be safe.", "commit_id": "90d1fc604bc20b766928e6cf01cf844ce244c573"}, {"author": {"_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, "change_message_id": "ead56aacafe7ab62b88aa79e4295b62d77f2eccf", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_da397ca2", "line": 69, "in_reply_to": "3fa7e38b_1a463458", "updated": "2020-02-03 23:16:26.000000000", "message": "Done", "commit_id": "90d1fc604bc20b766928e6cf01cf844ce244c573"}]}}, "zuul%2Fzuul-jobs~master~Ieb2efa0e097cc76dc9b67389e86c2646dfc0c00d": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 2, "date": "2020-02-14 23:08:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-14 23:09:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~I0b51165ea4d541b0cd2f5820a64cd7a82f23c6c9": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 13:42:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-13 23:14:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I58102d33845b870722e229b29b9812e47e0ee180": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}], "comments": {}}, "airship%2Fairshipctl~master~I202da62c77ec277312518fead09f0f3ef32ccde8": {"owner_id": 28618, "owner_name": "Drew Walters", "owner_email": "drewwalters@microsoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-02-14 17:35:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 2, "date": "2020-02-15 10:30:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"roles/airshipctl-build-images/tasks/main.yaml": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "da180f0837ff5a4c36d922b98f039f23a2e0f93f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c45101d7", "line": 13, "range": {"start_line": 13, "start_character": 8, "end_line": 13, "end_character": 12}, "updated": "2020-02-13 16:14:55.000000000", "message": "Build", "commit_id": "574a9655b6a6a7ebfcd73656bb8af076f4000512"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "c04748e450fd5ed5291ba6408444fa12f17eae9c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_24bb35e4", "line": 13, "range": {"start_line": 13, "start_character": 8, "end_line": 13, "end_character": 12}, "in_reply_to": "3fa7e38b_c45101d7", "updated": "2020-02-13 16:16:40.000000000", "message": "> Build\n\nFixed", "commit_id": "574a9655b6a6a7ebfcd73656bb8af076f4000512"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "8ddbe606726f42e22576b70fdcd1f5af5adb1afe", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_64428d95", "line": 19, "updated": "2020-02-13 16:31:11.000000000", "message": "we should make sure that our requested image is built imho, we can get its tag by running `make print-docker-image-tag`", "commit_id": "dd4cb5d44636487a64e33d2a5225477b8bb4f37f"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "242590e7d8718b07001dc4572e3e8eb832d8e909", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5f915a4f", "line": 19, "in_reply_to": "3fa7e38b_64428d95", "updated": "2020-02-13 16:57:57.000000000", "message": "> we should make sure that our requested image is built imho, we can\n > get its tag by running `make print-docker-image-tag`\n\nNice! Didn't know about that one. I also added it to the change based on this one.", "commit_id": "dd4cb5d44636487a64e33d2a5225477b8bb4f37f"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "de229ed93dea9bf535b2ba912e3f8edb63d028f3", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3a8a6cbc", "line": 19, "updated": "2020-02-13 17:24:31.000000000", "message": "i think you need chdir to zuul.project.src_dir for make to work", "commit_id": "0f53741cb3382c2512a8446544c57c5e667fc4d7"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "3aadc98cc4bfb955a4d215928473cad160d07697", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_062dda8e", "line": 19, "in_reply_to": "3fa7e38b_3a8a6cbc", "updated": "2020-02-13 19:35:06.000000000", "message": "> i think you need chdir to zuul.project.src_dir for make to work\n\nWoops. Fixed.", "commit_id": "0f53741cb3382c2512a8446544c57c5e667fc4d7"}]}}, "zuul%2Fzuul~master~I9fadb72a8b375631b24ea0cfcc17f6d54183a308": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2018-10-17 04:32:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2018-10-16 20:50:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"web/src/pages/Builds.jsx": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "720378a8ea84ffe3bc794b295e0bd60d24210b53", "unresolved": false, "patch_set": 1, "id": "3f79a3b5_e428d8ee", "line": 77, "range": {"start_line": 77, "start_character": 8, "end_line": 77, "end_character": 17}, "updated": "2018-10-15 14:22:43.000000000", "message": "Link to= is for navigating internally. I think here you actually just want <a href= instead of Link. (the generated html in this case is incorrect)", "commit_id": "bb6a8f94eff02a16dc7defb2f7a892c47d6f2ab1"}, {"author": {"_account_id": 10731, "name": "David Pursehouse", "email": "david.pursehouse@gmail.com", "username": "david.pursehouse"}, "change_message_id": "a93b860cde8a8eecd9cd5ae598da90c195c9e12f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2c56a52c", "line": 77, "updated": "2020-02-15 07:03:20.000000000", "message": "Would it be possible to add a tooltip with the change subject on the change number link?", "commit_id": "3dded2796ad9ea61a2d364731615053db4d5bac7"}]}}, "openstack%2Fkeystonemiddleware~stable%2Fpike~Ib9a62a4cd0b7b9ffb9fa2d6440e8072d45ee0fee": {"owner_id": 19156, "owner_name": "Leehom Li", "owner_email": "feli5_li@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 16:35:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-01-29 16:47:28.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Fcinder~stable%2Fstein~I2bf964d5a7b2048db9be1ea3eb97cd517e112c5b": {"owner_id": 27615, "owner_name": "Rajat Dhasmana", "owner_email": "rajatdhasmana@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-02-12 17:32:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:48:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~Ifc31f0309341406b640f74f6e796f0c35f63874b": {"owner_id": 29122, "owner_name": "Raghavendra Tilay", "owner_email": "raghavendra-uddhav.tilay@hpe.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 2, "date": "2020-02-10 12:52:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 13:03:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29122, "name": "Raghavendra Tilay", "email": "raghavendra-uddhav.tilay@hpe.com", "username": "raghavendrat"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29502, "name": "Sneha Rai", "email": "sneha.rai@hpe.com", "username": "sneharai"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila~master~I8c29760479f9c874d618e2c15ebab75bffeb3cbb": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-02-13 21:47:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-02-13 17:44:12.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 21:45:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"manila/db/sqlalchemy/models.py": [{"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "b7486086ba28762882a57ff531a2c70dc7fe2441", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_43f424d0", "updated": "2020-02-13 18:55:57.000000000", "message": "Should we consider replace all other lazy loadings by eager loadings? Also considering the performance impact?", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "688ee7acb7c659192b726acc70c0669bd230a056", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2921c9b2", "in_reply_to": "3fa7e38b_29146998", "updated": "2020-02-13 21:45:04.000000000", "message": "Agree, thanks for looking on this. For sure we should consider the performance when proposing new enhancements and I'm ok with this fix to unblock the gate.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fd6f296f0662615e1bc20c2b9dd7c93ce56f7500", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_29146998", "in_reply_to": "3fa7e38b_43f424d0", "updated": "2020-02-13 21:24:18.000000000", "message": "Not en-masse, we should audit the others, I think inherent references like the ones in these models may have grown beyond the assumptions we made when we added them. \n\nI started looking at the queries and performance, will propose enhancements soon.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "b7486086ba28762882a57ff531a2c70dc7fe2441", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c30014b4", "line": 943, "range": {"start_line": 942, "start_character": 0, "end_line": 943, "end_character": 60}, "updated": "2020-02-13 18:55:57.000000000", "message": "1) Is there any benefit on using 'joined' against 'subquery' eager loading modes? I'm asking because in [0], was choosed 'subquery' (eager) to replace the 'immediate' (lazy).\n\n[0] https://review.opendev.org/#/c/702639/", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "688ee7acb7c659192b726acc70c0669bd230a056", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_890b1d2b", "line": 943, "range": {"start_line": 942, "start_character": 0, "end_line": 943, "end_character": 60}, "in_reply_to": "3fa7e38b_a956195c", "updated": "2020-02-13 21:45:04.000000000", "message": "Thanks for the clarifying this. May the guys from [0] have some outputs to help us on this.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fd6f296f0662615e1bc20c2b9dd7c93ce56f7500", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_a956195c", "line": 943, "range": {"start_line": 942, "start_character": 0, "end_line": 943, "end_character": 60}, "in_reply_to": "3fa7e38b_c30014b4", "updated": "2020-02-13 21:24:18.000000000", "message": "Depends on how big we expect these tables to become. We take a hit with each of these methods - Looking at the way the share networks are accessed, I think eager joining is what we expected to do, always - since we're seldom looking at an individual resource (network or subnet) - we're always grabbing details from both resources at each use.. \n\nI would need to perform some load/performance testing to prove one way is better than the other - in simple tests, splitting the queries (subquery) did not outperform  the \"joined\" behavior.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "99dd2143d826bb099d896d1b88a73f3f93aa9405", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e09986ce", "line": 1224, "updated": "2020-02-13 17:44:12.000000000", "message": "only the above", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "99dd2143d826bb099d896d1b88a73f3f93aa9405", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_40d89a7e", "line": 1224, "updated": "2020-02-13 17:44:12.000000000", "message": "there is no need for the lazy parameter here as you've done in [1]? \n[1] https://review.opendev.org/#/c/707282/6/manila/db/sqlalchemy/models.py@942", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "47532a53a6302b265443aad809e8270c040858b4", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_af1cd964", "line": 1224, "in_reply_to": "3fa7e38b_c9c27502", "updated": "2020-02-13 22:59:52.000000000", "message": "Oh, alright. Thanks for explaining.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fd6f296f0662615e1bc20c2b9dd7c93ce56f7500", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c9c27502", "line": 1224, "in_reply_to": "3fa7e38b_e09986ce", "updated": "2020-02-13 21:24:18.000000000", "message": "It appears that we don't always need the snapshots when we retrieve a share group object. We might be okay making a round trip to the database when accessing snapshots. That's why I removed the eager loading from earlier reviews.", "commit_id": "ef6b9a0c72a0e47d7345286911a3d882ee1f1909"}]}}, "openstack%2Fmanila~stable%2Ftrain~Ib79ae3f08843414a552c89cd9a254b5e562123b8": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:46:55.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fmanila~master~Ib79ae3f08843414a552c89cd9a254b5e562123b8": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 20:45:17.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 20:45:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-02-04 18:24:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fcinder~master~Iacd69df2c10f83f286acc4b2a0f6d92f8f19caf2": {"owner_id": 31449, "owner_name": "vrushti", "owner_email": "vrushtidhola25@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 16:21:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:03:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "4f6c2e4e81428b9b0c14072a8b5bac34743980c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_83dd836f", "line": 7, "updated": "2020-02-10 13:02:00.000000000", "message": "Hard to tell from this summary line what this means. Maybe append \"for force delete api-ref\"?", "commit_id": "599a0dc84906258f92f652f1fa13c5b22a53b426"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "4f6c2e4e81428b9b0c14072a8b5bac34743980c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c3929ba0", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 18}, "updated": "2020-02-10 13:02:00.000000000", "message": "For the linkage to the launchpad bug to be picked up, this needs to be in the format:\n\nCloses: #1860134", "commit_id": "599a0dc84906258f92f652f1fa13c5b22a53b426"}]}}, "openstack%2Fcinder~stable%2Ftrain~Ifc31f0309341406b640f74f6e796f0c35f63874b": {"owner_id": 29122, "owner_name": "Raghavendra Tilay", "owner_email": "raghavendra-uddhav.tilay@hpe.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 2, "date": "2020-02-11 16:19:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-02-11 14:54:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 29122, "name": "Raghavendra Tilay", "email": "raghavendra-uddhav.tilay@hpe.com", "username": "raghavendrat"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila~master~I7839549ef7dd04614520f4afecf16dd776c51fbf": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:48:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 30407, "name": "haixin", "email": "haix09@chinatelecom.cn", "username": "haixin"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 01:14:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I1cc710dbe87e9e23fbed63dcd5f1017978393c66": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:48:32.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I33369712370b86feca843f118f35063d0993adcb": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:49:15.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I2c3d6e4234bf7185b8da3c8e1701069c3a165ffc": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:50:03.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I9fa29e9e5ed7dd2c620b56efab559f4cec25aced": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:51:00.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~I6e1debce1ac379d15190db82299bdd92c9ff7734": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 13:54:18.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-10 13:52:46.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fmanila~stable%2Ftrain~Iad9f742c1dd2dfc9b99f0756123af0cf51389c55": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 11:45:09.000000000", "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}], "comments": {}}, "openstack%2Fcinder~stable%2Fstein~I516b7c82b05b26e81195f7f106d43a9e0804082d": {"owner_id": 20813, "owner_name": "Sofia Enriquez", "owner_email": "lsofia.enriquez@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 1, "date": "2020-02-10 02:30:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, {"value": 2, "date": "2020-02-12 14:44:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:49:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-07 22:24:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "date": "2020-02-10 15:29:53.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28403, "name": "Naoki Saito", "email": "nasaito@nec.com", "username": "n-saito"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "e3aacc59d090172dca6d94bc3303eeb01380bae8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a6ffc267", "line": 29, "range": {"start_line": 29, "start_character": 1, "end_line": 29, "end_character": 53}, "updated": "2020-02-04 15:58:55.000000000", "message": "Note: this conflict is due to not having formatting patch Ia06940cff7c3b71938eddb271d2cb8170e02e954 in Stein.", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}], "cinder/tests/unit/backup/drivers/test_backup_ceph.py": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "e3aacc59d090172dca6d94bc3303eeb01380bae8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2677523f", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "updated": "2020-02-04 15:58:55.000000000", "message": "original patch had the following formatting here:\n\nmeta = linuxrbd.RBDImageMetadata(image, 'pool_foo',\n                                 'user_foo', 'conf_foo')", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, "change_message_id": "5cd12cedea439af32e143b41d8f6a532cafab5f3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ec631117", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_17dd666d", "updated": "2020-02-10 02:29:59.000000000", "message": "Got it, thanks Elod", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, "change_message_id": "0324b0e96a67f0f58a0e5b6f33bbfe6899065202", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_77de1a3d", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_17dd666d", "updated": "2020-02-07 14:45:07.000000000", "message": "Uh, you are totally right, sorry. I checked the wrong snippet.", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, "change_message_id": "0de1adaca67a7290158875e85db77e87ac3305e0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_78b877e6", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_2677523f", "updated": "2020-02-05 12:50:00.000000000", "message": "Hi, Elod,  I checked the Ia06940cff7c3b71938eddb271d2cb8170e02e954 patch, seems it don't change the formatting here. It changed the #838.  So I think this patch we don't need to change here, right?", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "529e0399144b06bb46f7cda6c0b8d76f1551f166", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_17dd666d", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_347420cd", "updated": "2020-02-07 14:40:31.000000000", "message": "@wanghao @Luigi:\n\nIt's not a big deal, it just differs a bit from the cherry-picked patch formatting, please see the exact line to see what I meant:\n\nhttps://review.opendev.org/#/c/627941/58/cinder/tests/unit/backup/drivers/test_backup_ceph.py@846", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "aa8847df1547f0ce2b766cef7a95b9fade23c73b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c9797181", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_6e672354", "updated": "2020-02-07 18:46:36.000000000", "message": "Thanks!", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, "change_message_id": "0bef6f43e296668bb57a8b600ec8d04cc178fb03", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6e672354", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_77de1a3d", "updated": "2020-02-07 18:19:38.000000000", "message": "I'll fix it. I think I kept the old code here while solving the conflicts.", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}, {"author": {"_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, "change_message_id": "880db56444c71ab90a08db2376852525da784f9c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_347420cd", "line": 846, "range": {"start_line": 843, "start_character": 0, "end_line": 846, "end_character": 64}, "in_reply_to": "3fa7e38b_78b877e6", "updated": "2020-02-07 14:25:14.000000000", "message": "Elod, it seems that the code formatting matches the original patch:\nhttps://review.opendev.org/#/c/627941/58/cinder/tests/unit/backup/drivers/test_backup_ceph.py", "commit_id": "6cc8adb132b91be68c0b22c750417efb97f08ce0"}]}}, "openstack%2Fmanila~master~I1cc710dbe87e9e23fbed63dcd5f1017978393c66": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 21:40:01.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 2, "date": "2020-02-04 23:07:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 2, "date": "2020-02-04 21:56:17.000000000", "_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 21:44:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fcinder~master~I8f0b25d12046f5d91a0e5bc38ae9eb9c416b1ba3": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-05 14:05:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12032, "name": "Datera CI", "email": "datera-openstack-ci@datera.io", "username": "datera-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-05 14:14:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-02-05 14:15:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11611, "name": "Nimble Storage CI", "email": "openstack-ci@nimblestorage.com", "username": "nimbleci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22126, "name": "Huawei FusionStorage CI", "email": "294958976@qq.com", "username": "hustnw", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 2, "date": "2020-02-04 19:45:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 20284, "name": "huawei-cinder-ci", "email": "liuxinguo@huawei.com", "username": "huawei-cinder-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28403, "name": "Naoki Saito", "email": "nasaito@nec.com", "username": "n-saito"}], "comments": {"cinder/tests/unit/volume/test_volume.py": [{"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "223ebc9dc89044a9d080d16c75c17aa2d281ff86", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_00931e5b", "line": 2788, "updated": "2020-02-04 14:13:44.000000000", "message": "It's not a reasonable thing to do, they are using the wrong method to get that data, the one you set below would be the right one.", "commit_id": "7dba4daa618393cc1e7f4a161ee614f93da5c64c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "223ebc9dc89044a9d080d16c75c17aa2d281ff86", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c0866616", "line": 2797, "range": {"start_line": 2789, "start_character": 0, "end_line": 2797, "end_character": 68}, "updated": "2020-02-04 14:13:44.000000000", "message": "We should just remove these lines and leave the code you have added below", "commit_id": "7dba4daa618393cc1e7f4a161ee614f93da5c64c"}, {"author": {"_account_id": 9535, "name": "Gorka Eguileor", "email": "geguileo@redhat.com", "username": "Gorka"}, "change_message_id": "223ebc9dc89044a9d080d16c75c17aa2d281ff86", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e0704244", "line": 2809, "updated": "2020-02-04 14:13:44.000000000", "message": "Changing the data we return with the method would have performance implications throughout all the Cinder code.\n\nThis test is just wrong, and all new code should be using OVOs, where this error will not happen, since the data is lazy loaded on demand.", "commit_id": "7dba4daa618393cc1e7f4a161ee614f93da5c64c"}], "tox.ini": [{"author": {"_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, "change_message_id": "601065b2d69bfd0138d69defee56b9304ca66260", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c454a158", "line": 33, "updated": "2020-01-28 06:34:03.000000000", "message": "Why not to add 'pip install SQLAlchemy===1.3.13' here instead of changing upper constraints?", "commit_id": "7dba4daa618393cc1e7f4a161ee614f93da5c64c"}, {"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "7758cc9bf9d3583bf3d05e84bebf1ac68da373b2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_afa059f3", "line": 33, "in_reply_to": "3fa7e38b_c454a158", "updated": "2020-01-28 14:53:34.000000000", "message": "Didn't think of that!", "commit_id": "7dba4daa618393cc1e7f4a161ee614f93da5c64c"}]}}, "openstack%2Fmanila~master~I33369712370b86feca843f118f35063d0993adcb": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 09:58:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-02-04 20:46:57.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-02-04 20:31:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 21:03:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "81c3670eb384b324db82ec7dc7d01b7aad5df2ed", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6c076872", "line": 16, "range": {"start_line": 16, "start_character": 31, "end_line": 16, "end_character": 39}, "updated": "2020-02-04 20:31:57.000000000", "message": "psycopg2-binary", "commit_id": "3e82f118b7f7d8094a7e65260a3280a13c4b4df1"}]}}, "openstack%2Fmanila~master~I2c3d6e4234bf7185b8da3c8e1701069c3a165ffc": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 2, "date": "2020-02-04 09:58:02.000000000", "_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 21:25:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-02-04 21:40:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fmanila~master~I9fa29e9e5ed7dd2c620b56efab559f4cec25aced": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 09:58:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-02-04 20:49:33.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-02-04 20:29:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 29631, "name": "Arthur Nascimento Santos", "email": "arthurs@netapp.com", "username": "throne82"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 21:07:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fmanila~master~I6e1debce1ac379d15190db82299bdd92c9ff7734": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 09:58:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 1, "date": "2020-02-04 20:52:32.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 2, "date": "2020-02-04 18:29:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 29631, "name": "Arthur Nascimento Santos", "email": "arthurs@netapp.com", "username": "throne82"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 21:01:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {}}, "openstack%2Fmanila~master~Iad9f742c1dd2dfc9b99f0756123af0cf51389c55": {"owner_id": 1004, "owner_name": "Mohammed Naser", "owner_email": "mnaser@vexxhost.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 12:27:55.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 2, "date": "2020-02-04 15:24:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 29631, "name": "Arthur Nascimento Santos", "email": "arthurs@netapp.com", "username": "throne82"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 20:38:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}], "comments": {"manila/share/drivers/service_instance.py": [{"author": {"_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, "change_message_id": "d13786b48a931171a3a548a2a39796fa74150cbe", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b4061a22", "line": 72, "updated": "2020-02-03 19:08:50.000000000", "message": "s/100/'100'/g", "commit_id": "d9af7c3555f667050fffca27e50fd1ff0141531f"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0186389affb6681a726563e4ca599550bbe7c2f6", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_c469a58d", "line": 72, "in_reply_to": "3fa7e38b_b4061a22", "updated": "2020-02-03 21:10:08.000000000", "message": "Good catch, although it seems to work fine on the CI... a couple of places that need to be fixed as well:\n\n\nhttps://github.com/openstack/manila/blob/a7aa8470972303ab144ed46df576569abd494c04/manila/tests/share/drivers/test_service_instance.py#L50-L51\n\nhttps://github.com/openstack/manila/blob/198bea78ac01aaf8a703ca7878b2a85a1b59667e/doc/source/configuration/tables/manila-generic.inc#L51-L52", "commit_id": "d9af7c3555f667050fffca27e50fd1ff0141531f"}, {"author": {"_account_id": 6413, "name": "Victoria Martinez de la Cruz", "email": "victoria@redhat.com", "username": "vkmc"}, "change_message_id": "53533c3226bd61b646e346a614fdcffa0402a411", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_84a2cd96", "line": 72, "in_reply_to": "3fa7e38b_c469a58d", "updated": "2020-02-03 21:15:45.000000000", "message": "Missed those. Maybe there is some sort of casting?", "commit_id": "d9af7c3555f667050fffca27e50fd1ff0141531f"}]}}, "openstack%2Fcinder~stable%2Frocky~Ibfa6c4ba2f162681756ec3203991351345b65346": {"owner_id": 27615, "owner_name": "Rajat Dhasmana", "owner_email": "rajatdhasmana@gmail.com", "labels": [{"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24230, "name": "NetApp E-Series CI", "email": "ng-openstack-eseries-ci@netapp.com", "username": "netapp-eseries-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 2, "date": "2020-02-04 20:59:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 18883, "name": "IBM Storage CI", "email": "IBM_CI@il.ibm.com", "username": "ibm_storage_ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 2, "date": "2020-02-06 16:47:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28403, "name": "Naoki Saito", "email": "nasaito@nec.com", "username": "n-saito"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, "change_message_id": "fe03c918a38cc96ce12f6e9b80051ab4a10cceca", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d58be213", "line": 19, "updated": "2020-01-28 16:32:40.000000000", "message": "Conflicts:\n    test-requirements.txt\n\nNote: conflict is due to gate fixing patch in Stein\nI9f0fec25444ed865d56d0d250fb6d840ab5b4095, which is\nnot applicable in Rocky.", "commit_id": "3aec8eeb21948ada4e1b3b8f58b680c5cb5ac9e7"}, {"author": {"_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, "change_message_id": "e4986b932f52f00e856d9308037a56682d39b2cd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1524100d", "line": 19, "in_reply_to": "3fa7e38b_d58be213", "updated": "2020-01-29 07:47:45.000000000", "message": "Done", "commit_id": "3aec8eeb21948ada4e1b3b8f58b680c5cb5ac9e7"}]}}, "openinfra%2Fopenstackid~master~Iaf23a0fcb599753c778108e29e03c8dcd573a4dc": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 03:00:03.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fkeystonemiddleware~stable%2Fpike~I73bde68be53afff4e8dff12d756b8381f34b2adb": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:26:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 1446, "name": "Bernhard M. Wiedemann", "email": "bmwiedemann@zq1.de", "username": "ubuntubmw"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Foctavia~stable%2Frocky~Ifacbd1953c3d8719539a9f4012eb34669bb164e2": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 2, "date": "2020-02-14 19:45:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-14 20:21:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-15 01:42:40.000000000", "_account_id": 2245, "name": "Jacky Hu", "email": "hudayou@hotmail.com", "username": "hudayou"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "openstack%2Fnova~master~Ie7b230bc6143dd61207744060da400f1531db5d3": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2018-04-04 20:55:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/virt/ironic/test_client_wrapper.py": [{"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "59d3619c769934f8ab2153d9aaad6d362f45f327", "unresolved": false, "patch_set": 7, "id": "bf659307_e7266c17", "line": 185, "range": {"start_line": 185, "start_character": 24, "end_line": 185, "end_character": 42}, "updated": "2018-03-23 19:25:16.000000000", "message": "this should be renamed since the reset has been factored out, but the test stil validates that we are able to have different microversions.", "commit_id": "d1201319788b9f16513781cb193c10aedf19d5bf"}], "nova/virt/ironic/client_wrapper.py": [{"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dabbf07366a62d3a14817e6299c0ac8137e538ed", "unresolved": false, "patch_set": 1, "id": "df7087c5_8261453c", "line": 76, "updated": "2018-03-21 11:55:18.000000000", "message": "tuple? set is unordered, that'd be weird :)\n\nDo we even pass a tuple anywhere? Feels like we can just drop this block.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "1cca0b941bd6d0948408fb50bd32f51657d6f198", "unresolved": false, "patch_set": 1, "id": "df7087c5_155fa372", "line": 76, "in_reply_to": "df7087c5_8261453c", "updated": "2018-03-21 20:46:40.000000000", "message": "I'm good with dropping it. I was thinking in a different direction on this, but then I decided that microversion=None should just be the queue to re-assert the overall library default.... which I don't really want to change.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0c50fc25216cf263cdb06d9daa640ef134930d34", "unresolved": false, "patch_set": 8, "id": "bf659307_42aaa385", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "updated": "2018-03-23 22:13:54.000000000", "message": "Ew, so now we're caching a whole client for each microversion we use?\n\nI pawed through the ironicclient code a little bit, hoping to find that you could pass a microversion per HTTP request, which is how we would do it via ksa adapter.  You technically could, but it'd have to be done by setting the header explicitly.  Not sure if that's less ugly.  But you could do that in .client() below and then not have to do this caching of multiple sessions.\n\nThis is of course assuming you can't update the ironicclient code itself to make that easier.  Could you?", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "96a24e59e89e72e3f071cfdc9cc8bebfc4c80555", "unresolved": false, "patch_set": 8, "id": "bf659307_cd708d0b", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_3ad640f3", "updated": "2018-03-29 23:36:09.000000000", "message": "Sorry for the delay, folks.\n\nI took a deeper look at this, and whereas the client itself would accept a header if you just used it to call the primitives, the actual target methods (dynamically resolved through _multi_getattr - ew!) don't take headers or kwargs into which we could stuff them.\n\nSo I'm afraid I have to concede that the best we can do here is separate clients.", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "e0c240c08bd039aabd3087d18093eaeebf36474b", "unresolved": false, "patch_set": 8, "id": "bf659307_54a23d9c", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_42aaa385", "updated": "2018-03-26 11:48:02.000000000", "message": "> Ew, so now we're caching a whole client for each microversion we use?\n\nWhat's the big deal with it? Now we're using 1 version anyway, we'll use 2 or 3 in the future. Or do we plan on really keeping compatibility with every version we had?\n\n> My impression from ironic contributors is that they will only accept it as arguments updated on each method in the library, which I think won't get review bandwidth anyway.\n\nThat's the API SIG recommendation, so I guess I have to stand behind it :) and I will certainly commit to review it, no matter how painful.\n\nBut I was thinking about another workaround (or shortcut): we can update ironicclient to allow copies of it with a new version:\n\n return self._cached_client.with_version('1.42')\n\ninternally it will do something like\n\n def with_version(self, new_version):\n     new = copy.copy(self)\n     new.http_client = copy.copy(self.http_client)\n     new.http_client.os_baremetal_api_version = new_version\n     return new\n\nThis will probably have the same memory footprint as the previous solution with reset_microversion, but it's not going to be racy.", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "84f24145e20daf971ae1811c240dde4a7f6bfc7f", "unresolved": false, "patch_set": 8, "id": "bf659307_183dfaba", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_42aaa385", "updated": "2018-03-24 00:07:43.000000000", "message": "Agreed, I'm not a fan of it.\n\nI'm basically looking for past of least resistance. Every path I've taken, I've gotten resistance on. I had no resistance rewriting the nova interactions in rest until the realization that we would need a thousand or more lines of unit test changes to be reviewed first.\n\nMy impression from ironic contributors is that they will only accept it as arguments updated on each method in the library, which I think won't get review bandwidth anyway.\n\nI'm also not sure setting headers would work because we would need to do away with caching for it to be fresh for every request, plus that would bypass our microverison handling code. I'm not sure there is a happy path here. :(", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "72c68ea0469a4b004a490f5592925f2d78bb57dd", "unresolved": false, "patch_set": 8, "id": "bf659307_3ad640f3", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_54a23d9c", "updated": "2018-03-28 17:53:15.000000000", "message": "Dmitry, I was thinking n-1 would be fine. Ideally though with api-sig discussions from Denver, I think it would be compatibility until they are no longer compatible by design change (which could be n-1!) .\n\nBuilding code into ironicclient to hand back a modified copy to solve something that is essentially specific to this driver doesn't feel right, but I'm happy to do it if it allows us to move forward.\n\nEric, what are your thoughts at this point?", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "5195636bf941194b79882b23212e4acf6f703d81", "unresolved": false, "patch_set": 8, "id": "bf659307_8c4f9791", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_6d32a112", "updated": "2018-04-04 18:25:35.000000000", "message": "We discussed this before [0] and we agreed to go the more expedient way to fix the problem in the driver for now instead of creating a hard dependency on ironicclient changes. The changes in ironicclient will need some time and care to be implemented properly and I'd rather not rush through that just to avoid a bit of temporary non-idealness here.\n\nEarlier you mentioned we could just set the header explicitly in _get_client to avoid caching multiple client objects. Can we just do that?\n\n[0] http://eavesdrop.openstack.org/irclogs/%23openstack-ironic/%23openstack-ironic.2018-03-19.log.html#t2018-03-19T19:44:32", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c4de304a7d656dd1778cc5f8fd95d0454fc321b1", "unresolved": false, "patch_set": 8, "id": "bf659307_6d32a112", "line": 65, "range": {"start_line": 65, "start_character": 30, "end_line": 65, "end_character": 32}, "in_reply_to": "bf659307_cd708d0b", "updated": "2018-03-29 23:57:04.000000000", "message": "By way of apology for holding this patch up for a week, I made this for you [1], which could be used here [2].\n\n[1] https://review.openstack.org/557850\n[2] https://review.openstack.org/#/c/554762/8/nova/virt/ironic/driver.py@1088", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0c50fc25216cf263cdb06d9daa640ef134930d34", "unresolved": false, "patch_set": 8, "id": "bf659307_22c20f87", "line": 117, "range": {"start_line": 117, "start_character": 20, "end_line": 117, "end_character": 52}, "updated": "2018-03-23 22:13:54.000000000", "message": "I think by doing this you may be precluding making calls at lower microversions (e.g. 1.35 like you're doing in driver.py).\n\nI could be wrong, though.", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "84f24145e20daf971ae1811c240dde4a7f6bfc7f", "unresolved": false, "patch_set": 8, "id": "bf659307_987a6a86", "line": 117, "range": {"start_line": 117, "start_character": 20, "end_line": 117, "end_character": 52}, "in_reply_to": "bf659307_22c20f87", "updated": "2018-03-24 00:07:43.000000000", "message": "We don't use it since we have our own microversion handling code. This is truly just getting the endpoint AIUI. :\\", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}], "nova/virt/ironic/driver.py": [{"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dabbf07366a62d3a14817e6299c0ac8137e538ed", "unresolved": false, "patch_set": 1, "id": "df7087c5_e2f7e158", "line": 1088, "updated": "2018-03-21 11:55:18.000000000", "message": "Any particular reason to choose 1.35 here?", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "1a8a0bbc1bb85e8100d1e0c4ab37f7f2575c1807", "unresolved": false, "patch_set": 1, "id": "df7087c5_d03b79c5", "line": 1088, "in_reply_to": "df7087c5_15d483bc", "updated": "2018-03-21 20:59:07.000000000", "message": "That change was only about rebuild, which doesn't apply here. Passing 1.35 here is fine, it just doesn't change anything about this call.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "ba1cef47df6811d37bb8318a5e200c8c73457981", "unresolved": false, "patch_set": 1, "id": "df7087c5_eb348c4c", "line": 1088, "in_reply_to": "df7087c5_d03b79c5", "updated": "2018-03-22 21:58:53.000000000", "message": "Ahh, yes, but it is handy to drop the version here to cause it to fail if it is going to fail... at least for testing right now. :)", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "1cca0b941bd6d0948408fb50bd32f51657d6f198", "unresolved": false, "patch_set": 1, "id": "df7087c5_15d483bc", "line": 1088, "in_reply_to": "df7087c5_e2f7e158", "updated": "2018-03-21 20:46:40.000000000", "message": "Just the last time we touched node/provision/state endpoint.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dabbf07366a62d3a14817e6299c0ac8137e538ed", "unresolved": false, "patch_set": 1, "id": "df7087c5_22c0797c", "line": 1577, "updated": "2018-03-21 11:55:18.000000000", "message": "nit: available", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, "change_message_id": "dabbf07366a62d3a14817e6299c0ac8137e538ed", "unresolved": false, "patch_set": 1, "id": "df7087c5_625c31ed", "line": 1579, "updated": "2018-03-21 11:55:18.000000000", "message": "I'd probably go with log.warning.\n\nAlso, can we say what the behavior is instead of 'pike behavior'? Maybe \"configdrive will not be passed\" or \"initial configdrive will be used instead\" or something.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "1cca0b941bd6d0948408fb50bd32f51657d6f198", "unresolved": false, "patch_set": 1, "id": "df7087c5_75e4dfac", "line": 1579, "in_reply_to": "df7087c5_625c31ed", "updated": "2018-03-21 20:46:40.000000000", "message": "Yeah, it is a tolerable error which means warning. I'll change in a future rev.", "commit_id": "c824a8b0538f00f568555efa4e425e89ea23b68e"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0c50fc25216cf263cdb06d9daa640ef134930d34", "unresolved": false, "patch_set": 8, "id": "bf659307_62824752", "line": 1428, "updated": "2018-03-23 22:13:54.000000000", "message": "<gasp> unrelated (but nice) whitespace change", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "84f24145e20daf971ae1811c240dde4a7f6bfc7f", "unresolved": false, "patch_set": 8, "id": "bf659307_58d05251", "line": 1428, "in_reply_to": "bf659307_62824752", "updated": "2018-03-24 00:07:43.000000000", "message": "Doh! :)", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "ac743094a72b4c37a8779f24852b15ae934e28f2", "unresolved": false, "patch_set": 8, "id": "bf659307_333a5f34", "line": 1581, "updated": "2018-04-05 01:03:09.000000000", "message": "I thought what we had discussed was that instead of doing this and passing a microversion, we would have something like this, where we just handle errors in the driver and let ironicclient use its automatic version handling. Is there something I'm missing about why the below wouldn't work?\n\n  try:\n      self.ironicclient.call(\"node.set_provision_state\",\n                             node_uuid, ironic_states.REBUILD,\n                             configdrive=configdrive_value)\n  except ironic.exc.UnsupportedVersion:\n      # Fall back to trying without a configdrive value.\n      self.ironicclient.call(\"node.set_provision_state\",\n                             node_uuid,\n                             ironic_states.REBUILD)\n except (..., ...):\n     ...", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0c50fc25216cf263cdb06d9daa640ef134930d34", "unresolved": false, "patch_set": 8, "id": "bf659307_22944f8b", "line": 1843, "range": {"start_line": 1843, "start_character": 71, "end_line": 1843, "end_character": 77}, "updated": "2018-03-23 22:13:54.000000000", "message": "except", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "0c50fc25216cf263cdb06d9daa640ef134930d34", "unresolved": false, "patch_set": 8, "id": "bf659307_c290f398", "line": 1845, "range": {"start_line": 1845, "start_character": 78, "end_line": 1845, "end_character": 79}, "updated": "2018-03-23 22:13:54.000000000", "message": "strike", "commit_id": "8856845eb3ac23fd2552564d489eac998fe049a3"}]}}, "openstack%2Fkeystone~stable%2Frocky~Iddc364d8c934b6e54d1e8c75b8b159faadbf865d": {"owner_id": 5046, "owner_name": "Lance Bragstad", "owner_email": "lbragstad@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-02-11 16:17:40.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}], "comments": {}}, "openinfra%2Fopenstackid~master~I3a42d1787a225b62ba9c88eac0789e30edf1791f": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-15 02:20:59.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fswift~master~I8f42127fd6eb930282161930c65e8614f3e3175f": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-02-12 09:38:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9625, "name": "Thiago da Silva", "email": "thiagodasilva@gmail.com", "username": "thiago"}, {"value": 2, "date": "2020-02-13 00:39:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {}}, "openstack%2Ftripleo-validations~master~I3066d0194a4b5f2ea221d88c180d9273a72ee9c8": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-14 23:24:59.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2020-02-14 10:28:09.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 2, "date": "2020-02-13 10:33:12.000000000", "_account_id": 11491, "name": "Gael Chamoulaud", "email": "gchamoul@redhat.com", "username": "gchamoul"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Id70b10fe2bbd9b28d9231e90e5ba940071e753a2": {"owner_id": 8449, "owner_name": "Marios Andreou", "owner_email": "marios@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 2, "date": "2020-02-13 21:12:08.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-14 03:15:11.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-13 21:09:39.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"roles/build-containers/defaults/main.yaml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "f95697400041ca87905c93ab7f6ad93d9355ed61", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_c256dc5d", "line": 25, "updated": "2020-02-13 09:03:39.000000000", "message": "as per ykarel comment this should go into vars/main not defaults.", "commit_id": "53a394d1444739aef0963a56f478812c8eefb883"}], "roles/build-containers/tasks/venv_setup.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "3115e3d25a616a4172818a09e11acae04a28653f", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_82d30463", "line": 6, "range": {"start_line": 6, "start_character": 79, "end_line": 6, "end_character": 82}, "updated": "2020-02-13 08:16:21.000000000", "message": "hmmm not sure why it didn't like that \nhttps://storage.bhs.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_1f9/706572/19/check/tripleo-build-containers-centos-7/1f9829b/job-output.txt\n\n2020-02-12 21:41:00.540208 | primary |   \"msg\": \"The task includes an option with an undefined variable. The error was: 'dict object' has no attribute '7'\\n\\nThe error appears to be in '/var/lib/zuul/builds/1f9829b2604c4e17bac86bbb657d0a60/untrusted/project_2/opendev.org/openstack/tripleo-ci/roles/build-containers/tasks/venv_setup.yml': line 1, column 3, but may\\nbe elsewhere in the file depending on the exact syntax problem.\\n\\nThe offending line appears to be:\\n\\n\\n- name: Install deps from upper-constraints\\n  ^ here\\n\"\n\n\nI added the same in https://review.opendev.org/#/c/701937/7/roles/build-containers/templates/build.sh.j2@24  after your comment and i thought it was working", "commit_id": "f88ceee01de1f61c676c4a7552ea3aa199a43f0a"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "f95697400041ca87905c93ab7f6ad93d9355ed61", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_4242ec94", "line": 6, "range": {"start_line": 6, "start_character": 79, "end_line": 6, "end_character": 82}, "in_reply_to": "3fa7e38b_0205d478", "updated": "2020-02-13 09:03:39.000000000", "message": "ack nice catch", "commit_id": "f88ceee01de1f61c676c4a7552ea3aa199a43f0a"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "e3597b187676f71251f575955181c5f29f6d9545", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_0205d478", "line": 6, "range": {"start_line": 6, "start_character": 79, "end_line": 6, "end_character": 82}, "in_reply_to": "3fa7e38b_82d30463", "updated": "2020-02-13 08:51:10.000000000", "message": "because of variable precedence https://github.com/openstack/tripleo-ci/blob/master/roles/build-containers/vars/main.yaml#L9-L11", "commit_id": "f88ceee01de1f61c676c4a7552ea3aa199a43f0a"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "d9a40aa88db0b112d371a3d2bb128f76cbc9e90e", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_62ffe834", "line": 6, "range": {"start_line": 6, "start_character": 80, "end_line": 6, "end_character": 86}, "updated": "2020-02-13 09:08:06.000000000", "message": "and it should be |int not string wasn't working cos of comments on v18", "commit_id": "53a394d1444739aef0963a56f478812c8eefb883"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "ccfe4a630e9cd3ffc21b3168d8836290c43b46e9", "unresolved": false, "patch_set": 21, "id": "3fa7e38b_6b9fc04d", "line": 1, "updated": "2020-02-13 13:59:27.000000000", "message": "ykarel zbr.. wdyt? do i need to add a task above this to install six> 1.14 as a workaround?", "commit_id": "978710342389bd68ae75de09f832c4acafda18ff"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "a868980b67180322f985e581d8ad7e0a57cf5fb7", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_4e6f7260", "line": 4, "updated": "2020-02-13 14:51:44.000000000", "message": "https://storage.gra.cloud.ovh.net/v1/AUTH_dcaab5e32b234d56b626f72581e3644c/zuul_opendev_logs_055/706572/23/check/tripleo-build-containers-centos-8/0555265/job-output.txt\n\n2020-02-13 14:33:46.136005 | primary |   \"msg\": \"stdout: Collecting six>=1.14.0\\n  Downloading http://mirror.regionone.limestone.openstack.org/pypifiles/packages/65/eb/1f97cb97bfc2390a276969c6fae16075da282f5058082d4cb10c6c5c1dba/six-1.14.0-py2.py3-none-any.whl\\nInstalling collected packages: six\\n\\n:stderr: Exception:\\nTraceback (most recent call last):\\n  File \\\"/usr/lib/python3.6/site-packages/pip/basecommand.py\\\", line 215, in main\\n    status = self.run(options, args)\\n  File \\\"/usr/lib/python3.6/site-packages/pip/commands/install.py\\\", line 365, in run\\n    strip_file_prefix=options.strip_file_prefix,\\n  File \\\"/usr/lib/python3.6/site-packages/pip/req/req_set.py\\\", line 789, in install\\n    **kwargs\\n  File \\\"/usr/lib/python3.6/site-packages/pip/req/req_install.py\\\", line 854, in install\\n    strip_file_prefix=strip_file_prefix\\n  File \\\"/usr/lib/python3.6/site-packages/pip/req/req_install.py\\\", line 1069, in move_wheel_files\\n    strip_file_prefix=strip_file_prefix,\\n  File \\\"/usr/lib/python3.6/site-packages/pip/wheel.py\\\", line 345, in move_wheel_files\\n    clobber(source, lib_dir, True)\\n  File \\\"/usr/lib/python3.6/site-packages/pip/wheel.py\\\", line 323, in clobber\\n    shutil.copyfile(srcfile, destfile)\\n  File \\\"/usr/lib64/python3.6/shutil.py\\\", line 121, in copyfile\\n    with open(dst, 'wb') as fdst:\\nPermissionError: [Errno 13] Permission denied: '/usr/local/lib/python3.6/site-packages/six.py'\\n\"", "commit_id": "7fd382488d712b2e8d86fc68afe97ede946d5793"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "bb856dc69eb1ecb1668ba1b8791f3e261e00a403", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_e93bb896", "line": 4, "in_reply_to": "3fa7e38b_4e6f7260", "updated": "2020-02-13 15:23:47.000000000", "message": "17:21 < marios|ruck> ykarel: zbr: so wdyt? should I add 'become' there... or '--user' for \n                     https://review.opendev.org/#/c/706572/23/roles/build-containers/tasks/venv_setup.yml ?\n17:21 < marios|ruck> zbr: or should i just wait? \n17:22 < marios|ruck> zbr: :)\n17:22 <@zbr> marios|ruck: neither, wait for my fix.", "commit_id": "7fd382488d712b2e8d86fc68afe97ede946d5793"}], "zuul.d/build-containers.yaml": [{"author": {"_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, "change_message_id": "e006cf6ace60122dad1485718133ba1535e81665", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a36694ef", "line": 33, "range": {"start_line": 33, "start_character": 35, "end_line": 33, "end_character": 43}, "updated": "2020-02-07 17:08:21.000000000", "message": "if we are switching names without -buildah suffix, let's make it explicit somewhere ?", "commit_id": "1366995b52753b6636f7d049a7382d9872af9013"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "27d10a0a09591b1cba7a0eda52ae709e71d95425", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_43b32036", "line": 33, "range": {"start_line": 33, "start_character": 35, "end_line": 33, "end_character": 43}, "in_reply_to": "3fa7e38b_a36694ef", "updated": "2020-02-07 17:13:44.000000000", "message": "yeah i was in 2 minds about including buildah. Its just that we won't have a centos-8 *non* buildah job right?\n\nfor centos 7 we had to differentiate but for centos8 like rhel its always buildah?", "commit_id": "1366995b52753b6636f7d049a7382d9872af9013"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "a3d5ad25aef604594d561f07ef9afa5f877107ff", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6e508360", "line": 132, "updated": "2020-02-07 18:23:47.000000000", "message": "what about setting kolla_base_tag? or that being set somewhere?", "commit_id": "1366995b52753b6636f7d049a7382d9872af9013"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "4115fa5a47a6c1862c4fcb8a660d7d9ae37344a0", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_efac63a9", "line": 47, "range": {"start_line": 47, "start_character": 9, "end_line": 47, "end_character": 49}, "updated": "2020-02-10 03:49:23.000000000", "message": "job doesn't exist so can be removed, and i think can be added as a followup when it's ready to use.", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "41b1f9a0e78b086e7f3a03d469c1685a098824a2", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_3bbcf9d9", "line": 47, "range": {"start_line": 47, "start_character": 9, "end_line": 47, "end_character": 49}, "in_reply_to": "3fa7e38b_efac63a9", "updated": "2020-02-10 10:45:19.000000000", "message": "ack, looks like wes updated this after I left. there was a train but it was removed  https://review.opendev.org/#/c/706572/4/zuul.d/build-containers.yaml@132", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "4115fa5a47a6c1862c4fcb8a660d7d9ae37344a0", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_8fe4cf0c", "line": 130, "range": {"start_line": 130, "start_character": 4, "end_line": 130, "end_character": 54}, "updated": "2020-02-10 03:49:23.000000000", "message": "i think better to run against train only after it's ready, as i think it will need further work on kolla/tripleo-common side. If it's ready and tested already ok to add now.", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "b88cca61e11279fe6cf54a84dc1c537a708d9576", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_3bf07966", "line": 130, "range": {"start_line": 130, "start_character": 4, "end_line": 130, "end_character": 54}, "in_reply_to": "3fa7e38b_1b9c9d6e", "updated": "2020-02-10 10:59:24.000000000", "message": "then need to add train to branch regex to not run against train branches.", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "096b1dc5af5f7b6fdffa3d00fbc5a3dc3a524c3b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_8d88546c", "line": 130, "range": {"start_line": 130, "start_character": 4, "end_line": 130, "end_character": 54}, "in_reply_to": "3fa7e38b_3bf07966", "updated": "2020-02-10 11:18:59.000000000", "message": "ack forgot thanks", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "41b1f9a0e78b086e7f3a03d469c1685a098824a2", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_1b9c9d6e", "line": 130, "range": {"start_line": 130, "start_character": 4, "end_line": 130, "end_character": 54}, "in_reply_to": "3fa7e38b_8fe4cf0c", "updated": "2020-02-10 10:45:19.000000000", "message": "yeah looks like that is the intention here was updated after i left. Original request was for master/train but indeed let's get master going first no idea what the state of train for kolla build is now.", "commit_id": "d69b9ce6b227196a40b37c4018f35dfaee1644be"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "14f465f5fd1a47a8fb7217df8b549b557ba30726", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_b578a67c", "line": 142, "range": {"start_line": 142, "start_character": 6, "end_line": 142, "end_character": 56}, "updated": "2020-02-14 03:15:11.000000000", "message": "this needs to be changed once promotion pipeline is in place and containers are ready for current-tripleo.", "commit_id": "4308d080ebc9555335a130c577e35fc01697f767"}, {"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "112eb280f15ac403b441ffb8d33ce68cb761b7be", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_2cad4c31", "line": 142, "range": {"start_line": 142, "start_character": 6, "end_line": 142, "end_character": 56}, "in_reply_to": "3fa7e38b_b578a67c", "updated": "2020-02-14 15:36:43.000000000", "message": "yup yup", "commit_id": "4308d080ebc9555335a130c577e35fc01697f767"}]}}, "x%2Fmicrostack~master~Ief7e8951fdf18856baa21eaee0c4ab0f5a5a5fcd": {"owner_id": 26040, "owner_name": "Pete Vander Giessen", "owner_email": "pete.vandergiessen@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I2feb9e81bc40e44cb2c7a2972366fa4b16590227": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-02-12 18:15:31.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-12 18:15:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fironic~master~Ib1ed0a35955ab7c53b814048887e725234699d9a": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-14 20:14:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ief80c917803c2143e459a74079159d958d18f153": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:24:50.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-14 21:48:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Foctavia~stable%2Fstein~I86899a455ec9214c2492a173fd531801ac1a347d": {"owner_id": 1131, "owner_name": "Brian Haley", "owner_email": "haleyb.dev@gmail.com", "labels": [{"value": 2, "date": "2020-02-14 21:37:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-13 17:28:15.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "starlingx%2Finteg~master~Ice87cdcdec80c2533a5d01fd5fcac54ee91f6723": {"owner_id": 28652, "owner_name": "Jim Somerville", "owner_email": "jim.somerville@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-14 23:03:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 2, "date": "2020-02-14 22:20:54.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Freleases~master~Id76edc6c21d6fc7bfe58f86a50908d9d0e0e24d8": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 6484, "name": "Feilong Wang", "email": "hustemb@gmail.com", "username": "flwang"}, {"value": 2, "date": "2020-02-14 22:31:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 15312, "name": "hao.wang", "email": "512868516@qq.com"}], "comments": {}}, "openstack%2Fswift~master~I4c8a3756afccb2b42acbd9aeac5908f3d4febcae": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:52:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-02-14 20:23:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {}}, "openstack%2Freleases~master~I9bda1e59885d0bc0b76a9d2a22aae1b664ab97cc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 12076, "name": "Zhiyuan Cai", "email": "luckyvega.g@gmail.com", "username": "zhiyuan_cai"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 09:21:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 22:32:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 13154, "name": "chi zhang", "email": "Chi.Zhang1@huawei.com", "username": "chizhang"}], "comments": {}}, "x%2Fnetworking-vpp~master~Ifd0adc35d4ec5a52e5600de9ed971438a7c9a334": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-14 07:04:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 22:36:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {}}, "openstack%2Fironic~master~I425baa7c7294c6c8a707e89df63a17da8e49b666": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:31:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": 2, "date": "2020-02-13 21:24:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"ironic/drivers/modules/redfish/utils.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "325b237a7d7090fbaeda8455756449eb5a33511d", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3950655f", "line": 260, "updated": "2020-02-11 17:17:34.000000000", "message": "maybe s/discover/default/ ?", "commit_id": "3908968ea30ae936882f9b63c78327b728862088"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "facf07c34a44ab89bc7b28f0327a49e70d026c23", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e5053469", "line": 129, "updated": "2020-02-12 12:13:02.000000000", "message": "nit: use the redfish_system_id variable here", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "cc4e00eb15793436f31ef8dff7ba97489f02a6bf", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2b80fd48", "line": 129, "in_reply_to": "3fa7e38b_e5053469", "updated": "2020-02-12 13:56:28.000000000", "message": "Done", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}], "releasenotes/notes/optional-redfish-system-id-3f6e8b0ac989cb9b.yaml": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "facf07c34a44ab89bc7b28f0327a49e70d026c23", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_853b2034", "line": 4, "updated": "2020-02-12 12:13:02.000000000", "message": "nit: \"has been made\"", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "cc4e00eb15793436f31ef8dff7ba97489f02a6bf", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cb8e0979", "line": 4, "in_reply_to": "3fa7e38b_853b2034", "updated": "2020-02-12 13:56:28.000000000", "message": "Done", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "facf07c34a44ab89bc7b28f0327a49e70d026c23", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_25102cab", "line": 5, "updated": "2020-02-12 12:13:02.000000000", "message": "nit: \"the target BMC\"", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "cc4e00eb15793436f31ef8dff7ba97489f02a6bf", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4be8d913", "line": 5, "in_reply_to": "3fa7e38b_25102cab", "updated": "2020-02-12 13:56:28.000000000", "message": "Done", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "facf07c34a44ab89bc7b28f0327a49e70d026c23", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4513e8b7", "line": 6, "updated": "2020-02-12 12:13:02.000000000", "message": "s/automatically grab and use/assume/ ?", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "cc4e00eb15793436f31ef8dff7ba97489f02a6bf", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cbd36962", "line": 6, "in_reply_to": "3fa7e38b_4513e8b7", "updated": "2020-02-12 13:56:28.000000000", "message": "Done", "commit_id": "92ab74f1d7c9db453e3bce721092bf236be82c6e"}]}}, "openstack%2Freleases~master~Idda492f80f62dd180c809d1256b90e3dda78c5f0": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 8716, "name": "Sampath Priyankara", "email": "sam47priya@gmail.com", "username": "sampath"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:18:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 22:29:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Icb34dbb86ec93398c53932644b7cd8620a62a614": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 09:31:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 18955, "name": "dharmendra", "email": "dharmendra.kushwaha@gmail.com", "username": "dharmendra"}, {"value": 2, "date": "2020-02-14 22:29:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Id1f01506e80f2a3b07e0982e1b74f6ee73fa229c": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18591, "name": "Eric Kao", "email": "ekcs.openstack@gmail.com", "username": "ekcs"}, {"value": 2, "date": "2020-02-11 10:41:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 22:28:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I54273e912ce257330a9d6bbc25919310939f0e0a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:32:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 22:27:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 19298, "name": "Nicolas Bock", "email": "nicolas.bock@canonical.com", "username": "nicolasbock"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Freleases~master~I4dbafeb3d50c06ec9268c346213a85927fdf619a": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21054, "name": "gengchc", "email": "578043796@qq.com", "username": "gengchc"}, {"value": 2, "date": "2020-02-11 10:25:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 13940, "name": "Saad Zaher", "email": "eng.szaher@gmail.com", "username": "szaher"}, {"value": 2, "date": "2020-02-14 22:26:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Iebf980d67a36e2709ffe2ce7fb954159eaa1bd46": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:20:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, {"value": 2, "date": "2020-02-14 22:22:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstack-ansible~stable%2Ftrain~I50931e0f68176bbaebfb68eec9f84241816c7fe3": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 19:33:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-14 18:33:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Frocky~Iccf4298c4f9306eb0a95b6712815778555ef44fc": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 20:54:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-14 16:03:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Ftrain~Iccf4298c4f9306eb0a95b6712815778555ef44fc": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 20:54:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-14 16:02:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Freleases~master~Ieede715fcd27ee3122b75dad39c91fb60dee0280": {"owner_id": 15554, "owner_name": "Bence Romsics", "owner_email": "bence.romsics@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 1, "date": "2020-02-14 10:26:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-14 08:42:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-02-13 17:12:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 2, "date": "2020-02-14 21:57:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Fstein~Iccf4298c4f9306eb0a95b6712815778555ef44fc": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 20:54:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-14 16:02:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}], "comments": {}}, "openstack%2Fswift~master~Ic0f54f393002e2170e7f1459625ee5a2b37df900": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-02-14 20:37:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {}}, "openstack%2Fdevstack~master~I372bde6a1753884efaf15da5fab48f1bddb4dab5": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:13:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 1, "date": "2020-02-14 19:00:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-14 19:59:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "airship%2Fshipyard~master~Ib34a2f63721dd731ab1c754f481128510bb83129": {"owner_id": 30445, "owner_name": "Narla Sandeep Narla Saibaba", "owner_email": "nn597f@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~Ic41d4597e9033f9d7847bb6c10c25f443fbd5b0e": {"owner_id": 20778, "owner_name": "Damien Ciabrini", "owner_email": "dciabrin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-23 15:30:04.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-23 16:31:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 2, "date": "2020-01-24 15:05:52.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "44bebffc68a8f9c6c560acbc30f52b11e73bc459", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_4d0ec333", "line": 56, "range": {"start_line": 51, "start_character": 0, "end_line": 56, "end_character": 53}, "updated": "2020-01-23 16:01:25.000000000", "message": "this really looks like belonging to internal to OCF & pacemaker things.", "commit_id": "3230f005c1d51863a2c2484fe4c05471f5dc25dc"}, {"author": {"_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, "change_message_id": "3e20502138affc2745c6681e7563325606a140a9", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_ad31775a", "line": 56, "range": {"start_line": 51, "start_character": 0, "end_line": 56, "end_character": 53}, "in_reply_to": "3fa7e38b_4d0ec333", "updated": "2020-01-23 16:30:15.000000000", "message": "The use case here is:\n  . I need a means to wait until an A/P resource is restart as Master, no matter where.\n  . I want to stop waiting as soon as the restart to Master is effective.\n\nSo the new script pacemaker_wait_bundle.sh is essentially adding this capability on top of pacemaker/pcs available commands.", "commit_id": "3230f005c1d51863a2c2484fe4c05471f5dc25dc"}], "container_config_scripts/pacemaker_wait_bundle.sh": [{"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "68b673d2e0d969f84b8eaf9886ccea37636f54a1", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_4dd6c3c6", "line": 209, "updated": "2020-01-23 16:35:19.000000000", "message": "nit: this can be reduced to a single call then parsing from a file :)", "commit_id": "3230f005c1d51863a2c2484fe4c05471f5dc25dc"}, {"author": {"_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, "change_message_id": "ebcc51da54b7ed353c81e7dc85b193c65d687d58", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_4a09c92f", "line": 314, "updated": "2020-01-23 16:00:26.000000000", "message": "all this coordination above looks to me like it should belong to internal OCF and pcmk resources management logic. Why controlling that in t-h-t?", "commit_id": "3230f005c1d51863a2c2484fe4c05471f5dc25dc"}, {"author": {"_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, "change_message_id": "d52cab0a16db0a965ce97043aabe6cb699fcca37", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_36f147df", "line": 314, "in_reply_to": "3fa7e38b_4a09c92f", "updated": "2020-01-24 14:30:05.000000000", "message": "The use case is to ensure that a HA service will not be disrupted globally when it has to be restarted during a minor update. The goal is to ensure that there is at least one node that provide full service during the entire minor update.\n\nThe constraint being that pacemaker restart operation are all asynchronous. So when running a \"pcs restart galera-bundle\", pcs never waits until galera gets back to master.\n\nThe orchestrator of minor update is ansible, so we must come up with a means of \"pausing\" the playbook until the service has restarted into the desired state.\n\nTo do that, we implement a script that allows you to do that, and we call that script appropriately depending on the type of HA services (A/P, A/P with master/slave state, clone...). Each HA service is responsible for how long it should make ansible wait.\n\nSide note: resource agents have no means to signal ansible to pause/resume based on the internal state of a resource. Besides, they only help pacemaker in orchestrating monitoring/stop/start/restart. So I think they shouldn't encode any orchestration semantics.", "commit_id": "3230f005c1d51863a2c2484fe4c05471f5dc25dc"}]}}, "openstack%2Fkuryr-kubernetes~master~I5bffda72cc8f1e348581ef38cb68cb8336e2af59": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 1, "date": "2020-02-06 09:19:58.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-06 09:21:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-14 14:59:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "x%2Fmicrostack~master~I060c1a0095470639f9158cb9e9ebe8281a65a678": {"owner_id": 26040, "owner_name": "Pete Vander Giessen", "owner_email": "pete.vandergiessen@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 19:29:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26040, "name": "Pete Vander Giessen", "email": "pete.vandergiessen@canonical.com", "username": "petevg"}], "comments": {}}, "openstack%2Fkayobe~master~I768ce8db9cec1c70d94f271997bbcc64d370403e": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:53:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-14 17:28:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~Iba87e39857269441cad76a33b7a52fcae30dddba": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 20:54:25.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Fconfig~master~I3c25c57edcdd50c5e76e17da658c7985821a3436": {"owner_id": 31485, "owner_name": "Thomas Gao", "owner_email": "Thomas.Gao@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 23:51:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, {"value": 2, "date": "2020-02-11 13:54:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 1, "date": "2020-02-11 14:36:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28917, "name": "Joseph Richard", "email": "joseph.richard@windriver.com", "username": "jrichard"}, {"value": 2, "date": "2020-02-14 19:20:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28675, "name": "Teresa Ho", "email": "teresa.ho@windriver.com", "username": "tho"}], "comments": {"sysinv/sysinv/sysinv/sysinv/tests/api/test_interface.py": [{"author": {"_account_id": 28917, "name": "Joseph Richard", "email": "joseph.richard@windriver.com", "username": "jrichard"}, "change_message_id": "db8ed059d7481f1e5e73e04a4d9357f1656356ba", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6484580f", "line": 2147, "updated": "2020-01-16 21:06:02.000000000", "message": "Can you add similar testcases for vf_driver?", "commit_id": "b82c7345ece02457234d4aa4c25cf54846688a7f"}, {"author": {"_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, "change_message_id": "9e9edaaca6b595a8b68c724d06c7468bef3cc732", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_41a358fe", "line": 2167, "updated": "2020-02-04 16:27:00.000000000", "message": "Can you break this out into a separate test?", "commit_id": "4907e8f657db9bbac5c73f8bbe1b189496a2e9e0"}, {"author": {"_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, "change_message_id": "9e9edaaca6b595a8b68c724d06c7468bef3cc732", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_01ad60e6", "line": 2209, "updated": "2020-02-04 16:27:00.000000000", "message": "Can you break this out into a separate test?", "commit_id": "4907e8f657db9bbac5c73f8bbe1b189496a2e9e0"}, {"author": {"_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, "change_message_id": "9e9edaaca6b595a8b68c724d06c7468bef3cc732", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e18a8463", "line": 2247, "updated": "2020-02-04 16:27:00.000000000", "message": "How about another test for clearing the VF driver? (set it to vfio first)", "commit_id": "4907e8f657db9bbac5c73f8bbe1b189496a2e9e0"}, {"author": {"_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, "change_message_id": "2fec8cf61c56843758279f2b0227f27f8ee3f508", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ec4c5f98", "line": 2121, "updated": "2020-02-10 20:51:01.000000000", "message": "Comment Nit: patch to set numvfs\n\n(may not always be 5)", "commit_id": "8c285c1451253b811044ba80d452416125d31a23"}, {"author": {"_account_id": 24777, "name": "Steven Webster", "email": "steven.webster@windriver.com", "username": "swebster"}, "change_message_id": "2fec8cf61c56843758279f2b0227f27f8ee3f508", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ac4bc783", "line": 2168, "updated": "2020-02-10 20:51:01.000000000", "message": "Comment Nit: class data -> class data but with sriov_vf_driver", "commit_id": "8c285c1451253b811044ba80d452416125d31a23"}]}}, "openstack%2Fkayobe~master~Ida5b60b723c8208bb7305c3d669eafdab6dbbe01": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:52:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-14 17:28:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~Iec6ffb775596763c7909a2237511e474f3cef9e8": {"owner_id": 8449, "owner_name": "Marios Andreou", "owner_email": "marios@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 1, "date": "2020-02-14 13:26:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 2, "date": "2020-02-14 13:27:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-02-14 15:06:51.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-14 13:27:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10022, "name": "Gabriele Cerami", "email": "gcerami@redhat.com", "username": "panda"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "opendev%2Fsystem-config~master~I04024832302a472c900f614ce03251766bc23d70": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 20:54:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-13 17:21:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-validations~stable%2Ftrain~I0c41ec100a42a9fc4520c3bf8069a6ec45d054c7": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 07:03:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-13 17:23:27.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-validations~stable%2Ftrain~I4fea9095f02b6e71caf5c61125579413f5663523": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 08:10:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-13 17:23:25.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fkeystone~stable%2Frocky~Icfce3b14abb55c6fef3de1b314cee22fc8b1d08c": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-02-11 16:37:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "opendev%2Fsystem-config~master~I67d33b4c542182a2474ac0d2416357541b1c3a47": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-13 20:54:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-14 18:44:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {"playbooks/roles/gerrit/templates/redirect.vhost.j2": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "d28b6f1d59b9166cc76e50520ae90f33ae2beb4f", "unresolved": false, "patch_set": 12, "id": "3fa7e38b_57d95325", "line": 9, "updated": "2020-02-12 19:56:48.000000000", "message": "Oh! I misread the error context, I think it's here. This (and the line below it) look like ERB not Jinja2.", "commit_id": "635da42591c68e5bd1db9229f0414f97c9f4f652"}]}}, "openstack%2Ftripleo-validations~stable%2Ftrain~Ib758906a08dd611589394c77c627510d667034e9": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 08:10:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-14 10:30:38.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 2, "date": "2020-02-13 17:23:23.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-validations~stable%2Ftrain~I88724e66679498ff8492f507fba84b76a7142bc8": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 08:11:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-13 17:23:22.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-validations~stable%2Ftrain~I19bb587ece403f86ddd0bbe174c282326500cfd3": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 07:02:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 1, "date": "2020-02-14 10:30:26.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 2, "date": "2020-02-13 17:23:20.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fmanila-specs~master~Icbdaaf4c4d1063c6251de30a95283d9e08177b9d": {"owner_id": 30002, "owner_name": "Douglas Viroel", "owner_email": "viroel@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26968, "name": "Amit O", "email": "oamit.work@gmail.com", "username": "amito"}, {"value": 0, "_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, {"value": 2, "date": "2020-02-13 15:12:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 1, "date": "2020-02-13 15:17:22.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, {"value": 1, "date": "2020-02-13 16:02:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, {"value": 0, "_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, {"value": 2, "date": "2020-02-13 14:42:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "5a9c298ca88e5cb030460e85648d3a86e8138a57", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_4e6532af", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 0}, "updated": "2020-02-13 14:43:38.000000000", "message": "Partially-Implements: bp create-share-from-snapshot-in-another-pool-or-backend", "commit_id": "74ad6da38306e39842978edf4858635f1b6a4bdb"}], "specs/ussuri/create-share-from-snapshot-in-another-pool.rst": [{"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5aaffa7b", "line": 57, "range": {"start_line": 56, "start_character": 70, "end_line": 57, "end_character": 5}, "updated": "2020-01-30 18:45:21.000000000", "message": "Do you mean \"source share's back end\"?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_96da1f48", "line": 57, "range": {"start_line": 56, "start_character": 70, "end_line": 57, "end_character": 5}, "in_reply_to": "3fa7e38b_5aaffa7b", "updated": "2020-01-31 14:22:08.000000000", "message": "Done, thanks", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "457996c61385b15fbbd08221d51fce15262c7b7d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_734efcc2", "line": 61, "range": {"start_line": 61, "start_character": 28, "end_line": 61, "end_character": 32}, "updated": "2020-01-23 20:27:44.000000000", "message": "nit: maybe 'more than'?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_36dfab3a", "line": 61, "range": {"start_line": 61, "start_character": 28, "end_line": 61, "end_character": 32}, "in_reply_to": "3fa7e38b_734efcc2", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_9ada521a", "line": 91, "range": {"start_line": 91, "start_character": 13, "end_line": 91, "end_character": 17}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: do", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_56dca742", "line": 91, "range": {"start_line": 91, "start_character": 13, "end_line": 91, "end_character": 17}, "in_reply_to": "3fa7e38b_9ada521a", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "457996c61385b15fbbd08221d51fce15262c7b7d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a1980276", "line": 111, "range": {"start_line": 111, "start_character": 37, "end_line": 111, "end_character": 61}, "updated": "2020-01-23 20:27:44.000000000", "message": "I think we can gather some people to think about this filter name... I was not able to think in a new name for this and suggest something.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "799ab5b32b3602b5ec4dbeb18b29b862d56fa1ae", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_446de3c9", "line": 111, "range": {"start_line": 111, "start_character": 37, "end_line": 111, "end_character": 61}, "in_reply_to": "3fa7e38b_a1980276", "updated": "2020-01-30 19:50:45.000000000", "message": "If nobody propose another class name, we can let the discussion to the implementation change.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3a7b1ef4", "line": 135, "range": {"start_line": 135, "start_character": 34, "end_line": 135, "end_character": 35}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: will be", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_16e62f15", "line": 135, "range": {"start_line": 135, "start_character": 34, "end_line": 135, "end_character": 35}, "in_reply_to": "3fa7e38b_3a7b1ef4", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "457996c61385b15fbbd08221d51fce15262c7b7d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_13ff8803", "line": 146, "range": {"start_line": 146, "start_character": 24, "end_line": 146, "end_character": 27}, "updated": "2020-01-23 20:27:44.000000000", "message": "nit: is", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d6b977eb", "line": 146, "range": {"start_line": 146, "start_character": 24, "end_line": 146, "end_character": 27}, "in_reply_to": "3fa7e38b_13ff8803", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d5a09b39", "line": 147, "range": {"start_line": 147, "start_character": 11, "end_line": 147, "end_character": 16}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: pool", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_76ae83a2", "line": 147, "range": {"start_line": 147, "start_character": 11, "end_line": 147, "end_character": 16}, "in_reply_to": "3fa7e38b_d5a09b39", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d54e5b8f", "line": 148, "range": {"start_line": 148, "start_character": 25, "end_line": 148, "end_character": 26}, "updated": "2020-01-30 18:45:21.000000000", "message": "I'm missing a word here - maybe 'link' or 'network'?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_16bf0fcb", "line": 148, "range": {"start_line": 148, "start_character": 25, "end_line": 148, "end_character": 26}, "in_reply_to": "3fa7e38b_d54e5b8f", "updated": "2020-01-31 14:22:08.000000000", "message": "Sure, I think that 'data link' solves", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18058, "name": "Lucio Seki", "email": "lucioseki@gmail.com", "username": "lseki"}, "change_message_id": "1ff33dc158d33b3888e8c62d3a8cc723de3a896a", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_39514564", "line": 155, "range": {"start_line": 155, "start_character": 12, "end_line": 155, "end_character": 24}, "updated": "2020-01-23 21:23:39.000000000", "message": "nit: an efficient", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b6995b81", "line": 155, "range": {"start_line": 155, "start_character": 12, "end_line": 155, "end_character": 24}, "in_reply_to": "3fa7e38b_39514564", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_902551b0", "line": 184, "range": {"start_line": 184, "start_character": 64, "end_line": 184, "end_character": 66}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: a", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d69e5767", "line": 184, "range": {"start_line": 184, "start_character": 64, "end_line": 184, "end_character": 66}, "in_reply_to": "3fa7e38b_902551b0", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 29632, "name": "Carlos Eduardo", "email": "ces.eduardo98@gmail.com", "username": "silvacarlos"}, "change_message_id": "457996c61385b15fbbd08221d51fce15262c7b7d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_be967b9f", "line": 221, "range": {"start_line": 221, "start_character": 5, "end_line": 221, "end_character": 29}, "updated": "2020-01-23 20:27:44.000000000", "message": "Same as above", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f042850e", "line": 238, "range": {"start_line": 209, "start_character": 0, "end_line": 238, "end_character": 14}, "updated": "2020-01-30 18:45:21.000000000", "message": "Why isn't 1. done by the (still to be named) ``CreateFromSnapshotFilter``, too (or partly by the ``AvailabilityZoneFilter``) ? I would prefer to avoid the departure from the conventional scheduler behaviour.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f66fd35e", "line": 238, "range": {"start_line": 209, "start_character": 0, "end_line": 238, "end_character": 14}, "in_reply_to": "3fa7e38b_16f15ae0", "updated": "2020-01-31 14:22:08.000000000", "message": "This part was rewritten and now should explain better how we plan to improve the scheduler instead of change its behavior.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "799ab5b32b3602b5ec4dbeb18b29b862d56fa1ae", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_16f15ae0", "line": 238, "range": {"start_line": 209, "start_character": 0, "end_line": 238, "end_character": 14}, "in_reply_to": "3fa7e38b_f042850e", "updated": "2020-01-30 19:50:45.000000000", "message": "For sure this section needs to be rewritten because is causing confusion. We plan to keep the same scheduler flow and include the new `CreateFromSnapshotFilter`. The `AvailabilityZoneFilter`will continue to filter hosts using the AZ parameter before the new filter be called.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5057d9ca", "line": 246, "range": {"start_line": 246, "start_character": 52, "end_line": 246, "end_character": 59}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: back end", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b6871b0b", "line": 246, "range": {"start_line": 246, "start_character": 52, "end_line": 246, "end_character": 59}, "in_reply_to": "3fa7e38b_5057d9ca", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f06b6584", "line": 249, "range": {"start_line": 249, "start_character": 0, "end_line": 249, "end_character": 8}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: back ends", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d68c172f", "line": 249, "range": {"start_line": 249, "start_character": 0, "end_line": 249, "end_character": 8}, "in_reply_to": "3fa7e38b_f06b6584", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0768a4d2f8db30aed1ddb9390ffb62558709b4ad", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a3b7fb21", "line": 337, "range": {"start_line": 319, "start_character": 0, "end_line": 337, "end_character": 7}, "updated": "2020-01-29 19:57:19.000000000", "message": "Will this be a synchronous API call to the share manager/backend that's creating this snapshot asynchronously?\n\nIf yes, what are your thoughts on alternatives to avoid problems that synchronous API calls that go over service boundaries can create?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f843bfe33f19bf8b339cb113e68c26f48f238841", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_96b6aa8c", "line": 337, "range": {"start_line": 319, "start_character": 0, "end_line": 337, "end_character": 7}, "in_reply_to": "3fa7e38b_8103cd75", "updated": "2020-01-30 20:12:54.000000000", "message": "Could we have the periodic check update the progress so that, this is no longer a call to the share manager, but a request to check the database for the last update?\n\nWe don't lose much; since the periodic thread is poking the backend for status anyway?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "deecce73b9359e6b0d01c3df71fd1b383044cec5", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5d6cca04", "line": 337, "range": {"start_line": 319, "start_character": 0, "end_line": 337, "end_character": 7}, "in_reply_to": "3fa7e38b_96b6aa8c", "updated": "2020-01-31 10:49:08.000000000", "message": "Yes, we will avoid more calls to the manager/backend and it will provide a faster answer to the user, however the user couldn't have the most update progress since the check interval could be configured to a high value. By checking the database I think that we also need to provide the `updated_at` in the `create_get_progress` response. Thanks for the thoughts.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "799ab5b32b3602b5ec4dbeb18b29b862d56fa1ae", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_8103cd75", "line": 337, "range": {"start_line": 319, "start_character": 0, "end_line": 337, "end_character": 7}, "in_reply_to": "3fa7e38b_a3b7fb21", "updated": "2020-01-30 19:50:45.000000000", "message": "Yes, it will be synchronous and we expect that this operation doesn't take too long.\nToday we rely on driver's implementation to handle requests and return as soon as possible, but this could let the share-manager stuck for a while. Don't think that we have a small solution for that right now, but we could mitigate it using different thread or even thread pools.\nNot sure if I got your question...", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_101721f2", "line": 342, "range": {"start_line": 342, "start_character": 36, "end_line": 342, "end_character": 40}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: do", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7691a345", "line": 342, "range": {"start_line": 342, "start_character": 36, "end_line": 342, "end_character": 40}, "in_reply_to": "3fa7e38b_101721f2", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 18816, "name": "Maurice Escher", "display_name": "carthaca", "email": "maurice.escher@sap.com", "username": "mapocace"}, "change_message_id": "1ff867917ba0680e7ac854315ced7602db8a04d8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f0de053c", "line": 348, "range": {"start_line": 348, "start_character": 5, "end_line": 348, "end_character": 19}, "updated": "2020-01-30 18:45:21.000000000", "message": "nit: prerequisites", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_96969f3d", "line": 348, "range": {"start_line": 348, "start_character": 5, "end_line": 348, "end_character": 19}, "in_reply_to": "3fa7e38b_f0de053c", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "0768a4d2f8db30aed1ddb9390ffb62558709b4ad", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_83367fb2", "line": 386, "range": {"start_line": 386, "start_character": 0, "end_line": 386, "end_character": 10}, "updated": "2020-01-29 19:57:19.000000000", "message": "Why is this optional?", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "f843bfe33f19bf8b339cb113e68c26f48f238841", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b6bba672", "line": 386, "range": {"start_line": 386, "start_character": 0, "end_line": 386, "end_character": 10}, "in_reply_to": "3fa7e38b_04312bef", "updated": "2020-01-30 20:12:54.000000000", "message": "+1, please remove..", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "799ab5b32b3602b5ec4dbeb18b29b862d56fa1ae", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_04312bef", "line": 386, "range": {"start_line": 386, "start_character": 0, "end_line": 386, "end_character": 10}, "in_reply_to": "3fa7e38b_83367fb2", "updated": "2020-01-30 19:50:45.000000000", "message": "Meaning that this is not mandatory for the main feature, since user will be able to continue creating shares from snapshot without a new manila-client version. I can remove this 'optionally' since it will be implemented anyway, to avoid confusion.", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "3fc4de78b3c9b9c511f3b4bfe242bed29242a7bd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_369b2b66", "line": 386, "range": {"start_line": 386, "start_character": 0, "end_line": 386, "end_character": 10}, "in_reply_to": "3fa7e38b_b6bba672", "updated": "2020-01-31 14:22:08.000000000", "message": "Done", "commit_id": "ec049ba7ce348f8487d4ac30d79f1ca007dfecea"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "39b58f2c4df1d0ce0256d06965e7d919901b13b5", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2b2e618d", "line": 302, "range": {"start_line": 302, "start_character": 0, "end_line": 302, "end_character": 5}, "updated": "2020-01-31 20:10:04.000000000", "message": "This is no longer true; if the progress field will be stored in the database.\n\nWill the progress field be part of the \"ShareInstance\" model? If yes, then the \"updated_at\" field is already present on that model; and needs to accurately be updated. \n\nIf that's the case, no new API is necessary? What do you think of this?", "commit_id": "66be989b28659e36895c488c41d58f9a984533c9"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "6fd95d155b8c614e8efeae4f66788662c827ff2a", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2b6661be", "line": 302, "range": {"start_line": 302, "start_character": 0, "end_line": 302, "end_character": 5}, "in_reply_to": "3fa7e38b_2b2e618d", "updated": "2020-01-31 20:27:38.000000000", "message": "True. Yes, 'ShareInstance' model. If nobody disagree we can just remove the new API method and update 'ShareInstance' model and view. More simple and easy to use.", "commit_id": "66be989b28659e36895c488c41d58f9a984533c9"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "fb3b7cb1c26584ce5b83cd65840ef64de801c2d9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_abf8117e", "line": 302, "range": {"start_line": 302, "start_character": 0, "end_line": 302, "end_character": 5}, "in_reply_to": "3fa7e38b_2b6661be", "updated": "2020-01-31 20:50:36.000000000", "message": "+1\n\nIf necessary, we can add a client side helper to just display the progress fields:\n\n openstack share show-create-progress --share <SHARE_ID/SHARE_NAME>\n manila show-share-progress <SHARE_ID/SHARE_NAME>", "commit_id": "66be989b28659e36895c488c41d58f9a984533c9"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d2aef58e628a93d8079f3d774ed8d82875f1428a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_36cc44bd", "line": 217, "range": {"start_line": 217, "start_character": 3, "end_line": 217, "end_character": 7}, "updated": "2020-02-06 02:25:02.000000000", "message": "Alongside", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "73d7661c97e72e4c9936478037e4c7ddd7e6fe83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1047c554", "line": 217, "range": {"start_line": 217, "start_character": 3, "end_line": 217, "end_character": 7}, "in_reply_to": "3fa7e38b_36cc44bd", "updated": "2020-02-06 12:25:51.000000000", "message": "Done", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d2aef58e628a93d8079f3d774ed8d82875f1428a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_56cf80b1", "line": 231, "range": {"start_line": 231, "start_character": 39, "end_line": 231, "end_character": 40}, "updated": "2020-02-06 02:25:02.000000000", "message": "We do intend on enabling this by default, correct?", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "73d7661c97e72e4c9936478037e4c7ddd7e6fe83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_9063b5de", "line": 231, "range": {"start_line": 231, "start_character": 39, "end_line": 231, "end_character": 40}, "in_reply_to": "3fa7e38b_56cf80b1", "updated": "2020-02-06 12:25:51.000000000", "message": "Yes, this will not be an optional weigher, will be enabled by default and 'skipped' if no parent snapshot is provided.", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d2aef58e628a93d8079f3d774ed8d82875f1428a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_df3063ed", "line": 341, "range": {"start_line": 341, "start_character": 0, "end_line": 341, "end_character": 0}, "updated": "2020-02-06 02:25:02.000000000", "message": "I think you're proposing a new driver interface that can be invoked by the share manager periodically to check for the status of a share from snapshot that will take a while; but you haven't indicated that in this section.", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "73d7661c97e72e4c9936478037e4c7ddd7e6fe83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_70587924", "line": 341, "range": {"start_line": 341, "start_character": 0, "end_line": 341, "end_character": 0}, "in_reply_to": "3fa7e38b_df3063ed", "updated": "2020-02-06 12:25:51.000000000", "message": "For sure, I forgot to mention the new driver interface that is mandatory when using the asynchronous answer. Thanks for finding this issue.", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d2aef58e628a93d8079f3d774ed8d82875f1428a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_1f54bbfc", "line": 400, "range": {"start_line": 399, "start_character": 6, "end_line": 400, "end_character": 20}, "updated": "2020-02-06 02:25:02.000000000", "message": "No longer the case..\n\nGET /v2/shares/<ID>\nshould get you the progress, at a new version of the manila API.", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "73d7661c97e72e4c9936478037e4c7ddd7e6fe83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_10958594", "line": 400, "range": {"start_line": 399, "start_character": 6, "end_line": 400, "end_character": 20}, "in_reply_to": "3fa7e38b_1f54bbfc", "updated": "2020-02-06 12:25:51.000000000", "message": "Forgot this one, thanks.", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}, "change_message_id": "d2aef58e628a93d8079f3d774ed8d82875f1428a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3f7097a7", "line": 413, "range": {"start_line": 412, "start_character": 6, "end_line": 413, "end_character": 31}, "updated": "2020-02-06 02:25:02.000000000", "message": "This ability exists now..", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}, {"author": {"_account_id": 30002, "name": "Douglas Viroel", "email": "viroel@gmail.com", "username": "dviroel"}, "change_message_id": "73d7661c97e72e4c9936478037e4c7ddd7e6fe83", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_b0a351fd", "line": 413, "range": {"start_line": 412, "start_character": 6, "end_line": 413, "end_character": 31}, "in_reply_to": "3fa7e38b_3f7097a7", "updated": "2020-02-06 12:25:51.000000000", "message": "Done, thanks", "commit_id": "02b9562107cb8998bcf5d70af67dc76548583734"}]}}, "openstack%2Ftripleo-common~master~I98a0071e8b9abdd9ccd6205eb109204d293177c8": {"owner_id": 8833, "owner_name": "Rabi Mishra", "owner_email": "ramishra@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2020-02-03 13:39:11.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-02-03 13:44:19.000000000", "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 2, "date": "2020-02-03 14:03:21.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 1, "date": "2020-02-03 12:27:20.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11090, "name": "Sergii Golovatiuk", "email": "sgolovat@redhat.com", "username": "holser"}], "comments": {}}, "openstack%2Ftripleo-validations~stable%2Ftrain~I098242d77ab7061cb0dc775c222572d10144a248": {"owner_id": 11491, "owner_name": "Gael Chamoulaud", "owner_email": "gchamoul@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 07:03:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 2, "date": "2020-02-11 00:03:25.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~I46c42cbfd86896bbf8e23ba659b4d03abf74b90d": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 18:46:59.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "starlingx%2Foidc-auth-armada-app~master~I93a37fde66414d5557dc96fb00f002621005e80b": {"owner_id": 28675, "owner_name": "Teresa Ho", "owner_email": "teresa.ho@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 18:38:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}], "comments": {}}, "openstack%2Fkeystone~stable%2Fstein~I654f8d7a2f9651478ba87da2895b3cffce290061": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": {}, "comments": {}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~I93ee6343a66de1adcaca800e0614da72a4df60d9": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 1, "date": "2020-02-13 13:37:05.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 16:36:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-13 16:15:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {}}, "openstack%2Frally~master~I1a0e50e38fea1e7539e0c505bec36f68450bdd48": {"owner_id": 17499, "owner_name": "Filippo Inzaghi", "owner_email": "zhao.daqing@99cloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~If4b275d3caf6098e7774d938ab89333396fbc15d": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 00:34:31.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fironic~master~Ifb6258df26236cf376742a051602321e9b67a52c": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-13 00:43:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fironic-tempest-plugin~master~I1199bd817438dfefdd96199dc52f438b184ad9df": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:08:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-12 14:14:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"ironic_tempest_plugin/tests/scenario/ironic_standalone/test_cleaning.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "0d0a15ad826256414450cb4df9cd457be3e5bfd9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3c612939", "line": 112, "updated": "2020-02-12 09:08:55.000000000", "message": "maybe use self.addCleanup?", "commit_id": "2f2f21d7c0a9f2e8978aeb0c0308822cf8e30d5c"}]}}, "openstack%2Fironic~master~I5c0d23f8cf9f377f013a96bfe30189df25f9c7c5": {"owner_id": 15519, "owner_name": "Iury Gregory Melo Ferreira", "owner_email": "iurygregory@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-13 22:14:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fnova~master~I4b2d321b7243ec149e9445035d1feb7a425e9a4b": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-12 19:33:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 18:25:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "ff1c7dfd273feb7a2145e50db9eea82e41b02fc3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c7c60716", "line": 384, "range": {"start_line": 384, "start_character": 57, "end_line": 384, "end_character": 66}, "updated": "2020-02-11 22:48:55.000000000", "message": "functional", "commit_id": "ffe09c4c819e4493276d85a7ca155460bbe346f2"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "ff1c7dfd273feb7a2145e50db9eea82e41b02fc3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a7c18bff", "line": 384, "range": {"start_line": 384, "start_character": 21, "end_line": 384, "end_character": 25}, "updated": "2020-02-11 22:48:55.000000000", "message": "jobs", "commit_id": "ffe09c4c819e4493276d85a7ca155460bbe346f2"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "e744b2639cd08efe8192cc031da45beb4a5ce1a0", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a7466b7d", "line": 384, "range": {"start_line": 384, "start_character": 57, "end_line": 384, "end_character": 66}, "in_reply_to": "3fa7e38b_c7c60716", "updated": "2020-02-11 23:05:10.000000000", "message": "Done", "commit_id": "ffe09c4c819e4493276d85a7ca155460bbe346f2"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "92dd396699c1ff34f1afabbe8429d71563a5e524", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3f135bb9", "line": 26, "updated": "2020-02-12 10:03:38.000000000", "message": "Could you keep this alphabetical?", "commit_id": "0d83cdc94d6d6f3452b18c91e4217319caa5ad5c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a6b3366b3110989b126f160e74b4b742b7a32011", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_237ee1e1", "line": 26, "in_reply_to": "3fa7e38b_3f135bb9", "updated": "2020-02-12 16:32:28.000000000", "message": "Done", "commit_id": "0d83cdc94d6d6f3452b18c91e4217319caa5ad5c"}], "/COMMIT_MSG": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "92dd396699c1ff34f1afabbe8429d71563a5e524", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9f3a8f32", "line": 10, "range": {"start_line": 10, "start_character": 36, "end_line": 10, "end_character": 49}, "updated": "2020-02-12 10:03:38.000000000", "message": "Policy-only", "commit_id": "0d83cdc94d6d6f3452b18c91e4217319caa5ad5c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a6b3366b3110989b126f160e74b4b742b7a32011", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_637859f6", "line": 10, "range": {"start_line": 10, "start_character": 36, "end_line": 10, "end_character": 49}, "in_reply_to": "3fa7e38b_9f3a8f32", "updated": "2020-02-12 16:32:28.000000000", "message": "Done", "commit_id": "0d83cdc94d6d6f3452b18c91e4217319caa5ad5c"}]}}, "openstack%2Fsenlin~master~I7882ebeb194137e682bdb7ab90f03587c636a7f8": {"owner_id": 27224, "owner_name": "Duc Truong", "owner_email": "duc.openstack@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 17:08:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 0, "_account_id": 27224, "name": "Duc Truong", "email": "duc.openstack@gmail.com", "username": "dtruong2"}, {"value": 2, "date": "2020-02-14 08:57:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, {"value": 0, "_account_id": 28691, "name": "Bo Tran", "email": "ministry.96.nd@gmail.com", "username": "ministry"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}, "change_message_id": "9d2e881ae8d3096ad01a7319bcaa7e605129abe0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6b426095", "line": 9, "range": {"start_line": 9, "start_character": 43, "end_line": 9, "end_character": 50}, "updated": "2020-02-13 14:15:44.000000000", "message": "role?", "commit_id": "0c9ecf510209075dab347e8596df350a6cd4c1c0"}], "senlin/db/sqlalchemy/api.py": [{"author": {"_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}, "change_message_id": "9d2e881ae8d3096ad01a7319bcaa7e605129abe0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_719ed855", "line": 94, "range": {"start_line": 94, "start_character": 6, "end_line": 94, "end_character": 45}, "updated": "2020-02-13 14:15:44.000000000", "message": "Better to encapsulate this as a function\uff1f", "commit_id": "0c9ecf510209075dab347e8596df350a6cd4c1c0"}, {"author": {"_account_id": 27224, "name": "Duc Truong", "email": "duc.openstack@gmail.com", "username": "dtruong2"}, "change_message_id": "399f6c9c9ea5783c5e5be149fe30400425de64fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_83645c21", "line": 94, "range": {"start_line": 94, "start_character": 6, "end_line": 94, "end_character": 45}, "in_reply_to": "3fa7e38b_719ed855", "updated": "2020-02-13 19:29:25.000000000", "message": "Done", "commit_id": "0c9ecf510209075dab347e8596df350a6cd4c1c0"}]}}, "openstack%2Foctavia~stable%2Fqueens~Ifacbd1953c3d8719539a9f4012eb34669bb164e2": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 2, "date": "2020-02-10 16:49:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-02-10 16:58:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10850, "name": "German Eichberger", "email": "german.eichberger@gmail.com", "username": "german"}], "comments": {}}, "openstack%2Fnova~stable%2Fqueens~I70e06c607045a1c0842f13069e51fef438012a9c": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:21:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:21:13.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fpymod2pkg~master~I4559595b1fddebece98ab453fbc0f688b4ef2574": {"owner_id": 13294, "owner_name": "Javier Pe\u00f1a", "owner_email": "jpena@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "starlingx%2Fconfig~master~Ia5418794a44e7821933e8335d5c5db25b58a739f": {"owner_id": 28459, "owner_name": "Bob Church", "owner_email": "robert.church@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 13:26:40.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 1, "date": "2020-02-14 15:03:27.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 2, "date": "2020-02-14 17:07:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "501427e08af66c8e96c7e72ae73c2b86fdb86ddb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_eea5feb3", "line": 28, "updated": "2020-02-13 14:54:09.000000000", "message": "Please add a reference here to the two upstream bugs:\nhttps://github.com/kubernetes/kubernetes/issues/80745\nhttps://github.com/kubernetes/kubernetes/issues/85334", "commit_id": "cbd7745a2770c134a66b68ea4671ea71d095a991"}], "sysinv/sysinv/sysinv/sysinv/common/kubernetes.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "21d01b6500311cbc085b101ab50301cbd53de09a", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e6bc3e6c", "line": 599, "range": {"start_line": 599, "start_character": 16, "end_line": 599, "end_character": 24}, "updated": "2020-02-13 20:35:36.000000000", "message": "nit: typo 'api_response' here and below", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, "change_message_id": "be9917baf863ffae9e7f02eb258ac0a92a606b06", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b4674c23", "line": 599, "range": {"start_line": 599, "start_character": 16, "end_line": 599, "end_character": 24}, "in_reply_to": "3fa7e38b_e6bc3e6c", "updated": "2020-02-13 23:32:51.000000000", "message": "will update", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "c8eb5ec0e4781363f55438209059dfdd834e0f03", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_296a294f", "line": 602, "range": {"start_line": 602, "start_character": 0, "end_line": 602, "end_character": 17}, "updated": "2020-02-13 21:06:06.000000000", "message": "This would make lines 603-608 unreachable?", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, "change_message_id": "be9917baf863ffae9e7f02eb258ac0a92a606b06", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_547298e5", "line": 602, "range": {"start_line": 602, "start_character": 0, "end_line": 602, "end_character": 17}, "in_reply_to": "3fa7e38b_296a294f", "updated": "2020-02-13 23:32:51.000000000", "message": "will update", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}], "sysinv/sysinv/sysinv/sysinv/conductor/kube_app.py": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "21d01b6500311cbc085b101ab50301cbd53de09a", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e64afe7f", "line": 2032, "updated": "2020-02-13 20:35:36.000000000", "message": "I supppose it's ok to delete failed pods with this reason in a different namespace (or not kube-system) from the application", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, "change_message_id": "be9917baf863ffae9e7f02eb258ac0a92a606b06", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d45e884f", "line": 2032, "in_reply_to": "3fa7e38b_e64afe7f", "updated": "2020-02-13 23:32:51.000000000", "message": "Yes. You don't want any pods left in this state or it will impact armada/tiller operations.", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}], "sysinv/sysinv/sysinv/sysinv/conductor/kube_pod_helper.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "501427e08af66c8e96c7e72ae73c2b86fdb86ddb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0e865a17", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 43}, "updated": "2020-02-13 14:54:09.000000000", "message": "Remove vim config", "commit_id": "cbd7745a2770c134a66b68ea4671ea71d095a991"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "501427e08af66c8e96c7e72ae73c2b86fdb86ddb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ae8b861f", "line": 3, "range": {"start_line": 3, "start_character": 16, "end_line": 3, "end_character": 20}, "updated": "2020-02-13 14:54:09.000000000", "message": "2020", "commit_id": "cbd7745a2770c134a66b68ea4671ea71d095a991"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "c8eb5ec0e4781363f55438209059dfdd834e0f03", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_698b4121", "line": 79, "range": {"start_line": 79, "start_character": 0, "end_line": 79, "end_character": 29}, "updated": "2020-02-13 21:06:06.000000000", "message": "shouldn't greenthread.sleep be used instead?", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, "change_message_id": "be9917baf863ffae9e7f02eb258ac0a92a606b06", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7456b42d", "line": 79, "range": {"start_line": 79, "start_character": 0, "end_line": 79, "end_character": 29}, "in_reply_to": "3fa7e38b_698b4121", "updated": "2020-02-13 23:32:51.000000000", "message": "this is monkey patched so it uses sleep from eventlet.greenthread.", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, "change_message_id": "c8eb5ec0e4781363f55438209059dfdd834e0f03", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_8900fd00", "line": 112, "range": {"start_line": 111, "start_character": 0, "end_line": 112, "end_character": 20}, "updated": "2020-02-13 21:06:06.000000000", "message": "remove", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}, {"author": {"_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, "change_message_id": "be9917baf863ffae9e7f02eb258ac0a92a606b06", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_142660cd", "line": 112, "range": {"start_line": 111, "start_character": 0, "end_line": 112, "end_character": 20}, "in_reply_to": "3fa7e38b_8900fd00", "updated": "2020-02-13 23:32:51.000000000", "message": "OK. But in general, I prefer to explicitly handle custom exceptions that may be thrown and explicitly decide not to do anything (i.e. conscious decision vs inept omission)", "commit_id": "40efc0e5dbd1a09ba3a5d695c29d016e211d7e9a"}], "sysinv/sysinv/sysinv/sysinv/conductor/manager.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "501427e08af66c8e96c7e72ae73c2b86fdb86ddb", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ae99466b", "line": 5141, "updated": "2020-02-13 14:54:09.000000000", "message": "I know you have it in the commit message, but I think it would be nice to reference the upstream bugs here as well.", "commit_id": "cbd7745a2770c134a66b68ea4671ea71d095a991"}]}}, "openstack%2Freleases~master~I434cd81df8ec12bfad2f3202fe0e78a27bf4b3bc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13629, "name": "Zhipeng", "email": "huangzhipeng@huawei.com", "username": "zhipengh"}, {"value": 1, "date": "2020-02-14 16:36:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-02-11 10:36:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-14 17:06:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fnetworking-midonet~master~I3fd1d585d174a6434dfdb8d779d71ecf2b9cbc85": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 2, "date": "2019-12-16 04:17:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 156, "name": "Ryu Ishimoto", "email": "ryu@midokura.com", "username": "ryu-midokura"}, {"value": 0, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-16 02:13:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}], "comments": {}}, "starlingx%2Fmetal~master~Iefb17e9aa76c45f2ceadf83f23b1231ae82f000f": {"owner_id": 28464, "owner_name": "Eric MacDonald", "owner_email": "eric.macdonald@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 15:47:35.000000000", "_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, {"value": 2, "date": "2020-02-14 17:05:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, {"value": 0, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}], "comments": {"mtce-common/src/common/nodeBase.cpp": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "7671afde7ab62ac697c5d5309729b3697a5dbfbb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2978f0f4", "line": 328, "range": {"start_line": 328, "start_character": 47, "end_line": 328, "end_character": 53}, "updated": "2020-02-13 15:55:45.000000000", "message": "nit:  is this 'getter'", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "9da6f848559cfe0ed8a0972dcf13db9cc3d98a54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ac5b7cf6", "line": 328, "range": {"start_line": 328, "start_character": 47, "end_line": 328, "end_character": 53}, "in_reply_to": "3fa7e38b_2978f0f4", "updated": "2020-02-14 15:07:04.000000000", "message": "Not part of this update but I'll clean this up anyway.", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "cb5a35ce86653ea95a104b8fcabd3524f51b699b", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8cac8087", "line": 328, "range": {"start_line": 328, "start_character": 47, "end_line": 328, "end_character": 53}, "in_reply_to": "3fa7e38b_ac5b7cf6", "updated": "2020-02-14 15:19:20.000000000", "message": "Will update this if there are other changes requiring a new patch. Not worth uploading a new patch just for this. Until then, no change planned here.", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}], "mtce/src/maintenance/mtcNodeHdlrs.cpp": [{"author": {"_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, "change_message_id": "7671afde7ab62ac697c5d5309729b3697a5dbfbb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_09273420", "line": 5147, "updated": "2020-02-13 15:55:45.000000000", "message": "Is the MTC_TASK_UPDATE_DELAY still required if mtcInvAPi_update_task() is skipped?", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "9da6f848559cfe0ed8a0972dcf13db9cc3d98a54", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6c06e4ce", "line": 5147, "in_reply_to": "3fa7e38b_09273420", "updated": "2020-02-14 15:07:04.000000000", "message": "No, will optimize. Thank you.", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "cb5a35ce86653ea95a104b8fcabd3524f51b699b", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8c93204d", "line": 5147, "in_reply_to": "3fa7e38b_6c06e4ce", "updated": "2020-02-14 15:19:20.000000000", "message": "Actually, looking more closely, the task delay also acts as a delay in the FSM giving the operation time to complete before moving on to the next phase. Removing it might change the timing of the FSM thereby requiring soak testing. We are powering on the host and changing this timer is not going to speed up the power on of the host.\n\nI know the name '_TASK_UPDATE_DELAY' is therefore misleading but not worth changing at this point as it is used like this in multiple places throughout the code.", "commit_id": "da7b2e94f136fa9faf7ff691f175b2ca9b1605b1"}]}}, "starlingx%2Felection~master~I79c292fba6404a7406702c96872a5f684058e466": {"owner_id": 29025, "owner_name": "Yang Liu", "owner_email": "yang.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 16:25:34.000000000", "_account_id": 29357, "name": "Bill Zvonar", "email": "bill.zvonar@windriver.com"}, {"value": 0, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 2, "date": "2020-02-14 15:28:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9562, "name": "Ildiko Vancsa", "email": "ildiko.vancsa@gmail.com", "username": "ildikov"}], "comments": {}}, "openstack%2Fnova-specs~master~I8416ceb88b9e9e6498a81c678944bc5d96700fc3": {"owner_id": 28889, "owner_name": "Guo Jingyu", "owner_email": "guojy8993@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 16:12:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-14 16:03:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 26490, "name": "Jason SUN", "email": "sunjia@inspur.com", "username": "sunjia"}, {"value": 0, "_account_id": 30395, "name": "Arthur Dayne", "display_name": "Arthur Dayne", "email": "palagend@foxmail.com", "username": "acewit"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "d0562a26e116ed40afb0ba81ad729514ad929fe3", "unresolved": false, "patch_set": 27, "id": "3fa7e38b_d2b68e26", "line": 7, "range": {"start_line": 7, "start_character": 1, "end_line": 7, "end_character": 63}, "updated": "2020-02-14 15:59:16.000000000", "message": "you need to change this title", "commit_id": "48d5a1cdc3ad223024bfe2bd3d9d69128c4195f3"}], "specs/stein/approved/nova-support-webvnc-with-password-anthentication.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_0dcac245", "line": 24, "updated": "2018-12-11 01:39:03.000000000", "message": "I think here you need to describe in more detail the shortcomings of the current \"noVNC\", so that the reviewer can understand the current phenomenon of 'noVNC' more clearly.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_c1fa6d73", "line": 24, "in_reply_to": "3f79a3b5_0dcac245", "updated": "2019-04-09 22:56:37.000000000", "message": "+1. I assume the current situation is that anyone who uses the VNC console link will be connected to the instance, no password required. It would be helpful to explain the current behavior in this spec.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_a14081a3", "line": 31, "updated": "2019-04-09 22:56:37.000000000", "message": "Here you should elaborate a bit about what is the current behavior and safety of the noVNC console and what the new behavior would be and how it benefits the user.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_cd87eab3", "line": 40, "range": {"start_line": 36, "start_character": 0, "end_line": 40, "end_character": 14}, "updated": "2018-12-11 01:39:03.000000000", "message": "The change of the novaclient should be after ``nova-api``, ``nova-compute``, I think you can move this to line:53.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_c1890dca", "line": 62, "range": {"start_line": 62, "start_character": 0, "end_line": 62, "end_character": 4}, "updated": "2019-04-09 22:56:37.000000000", "message": "If you are proposing to add vnc password to the request_spec, that would be data model impact that you would need to describe here.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_e1ff6931", "line": 67, "range": {"start_line": 67, "start_character": 0, "end_line": 67, "end_character": 4}, "updated": "2019-04-09 22:56:37.000000000", "message": "If you a proposing a new vnc password request parameter to the create server API, you will have REST API impact that you need to describe here. Adding the parameter would require a new API microversion:\n\nhttps://docs.openstack.org/nova/latest/contributor/microversions.html", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_a1a3a142", "line": 72, "range": {"start_line": 72, "start_character": 0, "end_line": 72, "end_character": 4}, "updated": "2019-04-09 22:56:37.000000000", "message": "If this change improves vnc console security, it should be described here.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_6db0168d", "line": 85, "range": {"start_line": 85, "start_character": 35, "end_line": 85, "end_character": 36}, "updated": "2018-12-11 01:39:03.000000000", "message": "Add a space.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_2da69e56", "line": 85, "range": {"start_line": 85, "start_character": 36, "end_line": 85, "end_character": 37}, "updated": "2018-12-11 01:39:03.000000000", "message": "It's", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_8d5c9258", "line": 88, "range": {"start_line": 88, "start_character": 10, "end_line": 88, "end_character": 14}, "updated": "2018-12-11 01:39:03.000000000", "message": "It's", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_5017ed42", "line": 105, "range": {"start_line": 105, "start_character": 4, "end_line": 105, "end_character": 5}, "updated": "2018-12-11 01:39:03.000000000", "message": "Please remove the redundant space, otherwise an exception will occur after the document is output.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bd5eaea0fc32b65a046407da8fed2b3440ce4e80", "unresolved": false, "patch_set": 7, "id": "5fc1f717_a1516132", "line": 155, "updated": "2019-04-09 22:56:37.000000000", "message": "Is there some documentation about the vnc auth type that you can include in the references section? And why is it needed in addition to the vencrypt scheme?", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_103ad5c3", "line": 173, "updated": "2018-12-11 01:39:03.000000000", "message": "You should add a blank line after this line.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_d02a1d77", "line": 174, "range": {"start_line": 174, "start_character": 4, "end_line": 174, "end_character": 5}, "updated": "2018-12-11 01:39:03.000000000", "message": "Please remove the redundant space, otherwise an exception will occur after the document is output.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_906fc5c5", "line": 187, "range": {"start_line": 187, "start_character": 4, "end_line": 187, "end_character": 5}, "updated": "2018-12-11 01:39:03.000000000", "message": "ditto.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7a2ef73ac95ede6ad38617f7693cf13f8c5bbf2c", "unresolved": false, "patch_set": 7, "id": "3f79a3b5_1063b5df", "line": 204, "range": {"start_line": 204, "start_character": 4, "end_line": 204, "end_character": 5}, "updated": "2018-12-11 01:39:03.000000000", "message": "ditto.", "commit_id": "6602df7a5779333501cda377b5101e3fd13a93e4"}], "specs/train/approved/nova-support-webvnc-with-password-anthentication.rst": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_d2caa06c", "line": 19, "updated": "2019-07-26 23:54:24.000000000", "message": "Note to reviewers: without this kind of proposed password behavior, if the user of a vnc console forgets to logout of the OS before closing their vnc console, any person with the console access url will be able to access the already-logged-in OS without any additional auth.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "07366ca0c19c269178a6b4934eb29ef9ff82d212", "unresolved": false, "patch_set": 11, "id": "7faddb67_7d4c9f75", "line": 19, "in_reply_to": "7faddb67_d2caa06c", "updated": "2019-08-16 07:53:20.000000000", "message": "yes, and issue https://bugs.launchpad.net/nova/+bug/1447679 \nshows the same concern.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_72488ccb", "line": 44, "range": {"start_line": 44, "start_character": 42, "end_line": 44, "end_character": 66}, "updated": "2019-07-26 23:54:24.000000000", "message": "To be clear, what config option are you thinking about here? The auth_schemes option? Noting that nova-api does not itself use the auth_schemes option, it is used by the nova-novncproxy service only.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "07366ca0c19c269178a6b4934eb29ef9ff82d212", "unresolved": false, "patch_set": 11, "id": "7faddb67_5df3e309", "line": 44, "range": {"start_line": 44, "start_character": 42, "end_line": 44, "end_character": 66}, "in_reply_to": "7faddb67_72488ccb", "updated": "2019-08-16 07:53:20.000000000", "message": "It's switch-option stuff, e.g: support_vnc_password = [true/false]; \nOf course, this option will be documented in Configuration Guide, and the option help message will tell cloud administrators that novncproxy's `auth_schemes` is `releated option`: to make the feature function well, the options should work together.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_9272e848", "line": 46, "updated": "2019-07-26 23:54:24.000000000", "message": "I think we will not want to make the 'vnc password' feature configurable via config option because that is not good for interoperability and consistency among openstack clouds. Instead, the way we encourage to do this is to create a policy rule that will control whether the 'vnc password' is supported.\n\nBut, I want to ask, what determine's whether 'vnc password' is available? Does it require a minimum Libvirt and/or QEMU version? Is it something that can be checked from the libvirt driver? If so, we might have possibility to check whether the driver supports it when we call nova-compute synchronously during the get_vnc_console compute API call. That would be a dynamic way to find out support vs no support.\n\nIf it is not purely a matter of driver support and is also something an operator would like to configure, then we would want to go with the policy rule in addition.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "93e54a1ca1758a7e557cdbbeab1f2b708bc66cfa", "unresolved": false, "patch_set": 11, "id": "7faddb67_3dd86750", "line": 46, "in_reply_to": "7faddb67_9272e848", "updated": "2019-08-16 09:04:12.000000000", "message": "1. As far as i know `policy rule`, it's about RBAC (nova.policy). Is there any docs (or files, cases) about policy usage of enable/disable features ?\n\n2. Libvirt 0.9.3+ will be alright. See https://libvirt.org/formatdomain.html#elementsGraphics ; \n\n3. About libvirt/qemu version check, if this feature is enable by switch-option or policy rule as mentioned above,compute driver need to compare current libvirt version with required minimum version, something like this:\n\n'''\nrequired_min_version = (0, 9, 3)\nif current_version < required_min_version:\n    raise exception.UnsupportedVersion()\n'''\n\n4. Note, instances with vnc password can co-exist with ones without vnc password(I will explain the reason in following texts), and the get-vnc-console action is not affected by this feature. Hypervisor version validations only happend when compute-service boots new instances (in which case, grapnics releated libvirt XML will be generated).", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_75763609", "line": 52, "updated": "2019-07-26 23:54:24.000000000", "message": "Can you please add some explanation to the spec about how the new auth scheme is related to adding the password support?\n\nI do not know very much about this, but my understanding is the already existing vencrypt scheme can encrypt the communications from the nova-novncproxy service to the guest vnc console. And the addition of password support should be only a matter of adding the relevant XML into the libvirt guest <graphics> config. How is the rfb.VNC auth scheme related to this? An explanation about this will be helpful to the spec.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "883373d9c59a5a2756f76284dc846b4610a3f339", "unresolved": false, "patch_set": 11, "id": "7faddb67_23d92482", "line": 52, "in_reply_to": "7faddb67_75763609", "updated": "2019-08-16 10:56:53.000000000", "message": "1. About RFB security handshake, see section 7.1 in doc https://tools.ietf.org/html/rfc6143\n\n2. I will explain how novncproxy works in two steps: \n\na. components of nova-novncproxy:\n(1) websockify: See https://github.com/novnc/websockify\n(2) novnc: Html5 vnc client with websocket support.\n(3) RFB version&security handshake negotiation framework: As mediator between novnc client(browser) and vnc server(in compute nodes), It negotiates with novnc as `vnc server` to get RFB protocol version and security types(none, vnc, vencrypt and so on)suprorted by client, and negotiates with vnc server(of some instance) to get the same infomation, then make two sides reach a consensus on RFB version and Security Type.\n\nWhen endpoint user visits guest desktop via console url, novncproxy will check if this security type is in support list(i.e: CONF.vnc.auth_scemes) and if there exists corresponding SecurityHandshake handler. \n\nIf the requirements above are all satisfied,novncproxy loads corresponding RFB SecurityHandShake handler by security type, then handler will takes over security handshake jobs. If handshake succeeds, endpoint user can access guest desktop. Otherwise, it drop requests.\n\nb. how it works:\nLet's take `vencrypt` as an example, the loaded security handshake handler will check security type subversion, SSL items, and wrap a SSLSocket. See module `nova.console.rfb.authvencrypt` for details.\n\n3. If a instance is booted with vnc password, the compute service will launched a VNC service(listening <node ip>:59XX) for the guest only supporting `vnc` security type. When endpoint user visit this guest, novncproxy knows that security type `vnc` will be OK for both sides.However, `vnc` is not in `CONF.vnc.auth_scemes` and security handshake handler not implemented for now.\n\nImplementing the handler, and adding `vnc` to auth_schemes list will be part of the work to implement the feature.\n\n4. Does novnc project supports VNC security type and can novncproxy work well ? Yes! \n\nSee https://github.com/novnc/noVNC/blob/master/vnc.html (keywords: `noVNC_password_input`). \n\nAnd this feature has been proven in our cloud products (Inspur Inc).", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "ae234f2b702c5c0abd934ff06bb0cda40be418c5", "unresolved": false, "patch_set": 11, "id": "7faddb67_ae3bbb99", "line": 108, "range": {"start_line": 107, "start_character": 54, "end_line": 108, "end_character": 36}, "updated": "2019-08-16 11:37:27.000000000", "message": "As melanie witt advised, leave this option only used by novncproxy service. nova-api can dectect `vnc password` capability by new switch option or policy rule.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_72dacc17", "line": 112, "updated": "2019-07-26 23:54:24.000000000", "message": "++ thank you for the clear example.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_b5558e52", "line": 142, "updated": "2019-07-26 23:54:24.000000000", "message": "Can you add some text here to clarify which API will get the 'vnc password' passed? Is it the POST /servers API (create server)?", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "ae234f2b702c5c0abd934ff06bb0cda40be418c5", "unresolved": false, "patch_set": 11, "id": "7faddb67_ee6533b0", "line": 142, "in_reply_to": "7faddb67_b5558e52", "updated": "2019-08-16 11:37:27.000000000", "message": "Yes, as section `Documentation Impact` shows.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_35c75e15", "line": 154, "updated": "2019-07-26 23:54:24.000000000", "message": "Sorry, can you please explain what is the difference between the 'vencrypt' and 'vnc' (vnc.AuthType.VNC) auth_schemes?", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "ae234f2b702c5c0abd934ff06bb0cda40be418c5", "unresolved": false, "patch_set": 11, "id": "7faddb67_6e84e30b", "line": 154, "in_reply_to": "7faddb67_35c75e15", "updated": "2019-08-16 11:37:27.000000000", "message": "As to vencrypt, its handler module mainly provides SSL items check and wraps a secure socket between vncproxy server and vnc server(so channel can avoids being spied or illegal access by visiting {Host_IP}:59XX, but doesn't help solve the concern in https://bugs.launchpad.net/nova/+bug/1447679).\n\nAnd in my plan, the `vnc` handler module will do password authentication jobs.It can solve the concern in bug/1447679, though it's not as safe as vencrypt in securing channel(however, with the use of host firewalld service, this will not a big deal, and of course, this's another issue)", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_f5e6a6e8", "line": 218, "updated": "2019-07-26 23:54:24.000000000", "message": "I think here is another place that would be good for adding documentation for the new feature:\n\nhttps://docs.openstack.org/nova/latest/admin/remote-console-access.html#novnc-based-vnc-console", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "ae234f2b702c5c0abd934ff06bb0cda40be418c5", "unresolved": false, "patch_set": 11, "id": "7faddb67_8e2a7fe4", "line": 218, "in_reply_to": "7faddb67_f5e6a6e8", "updated": "2019-08-16 11:37:27.000000000", "message": "OK, i will carry on.", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "fd7a25c73b6cc26530e73a46070930da288abec5", "unresolved": false, "patch_set": 11, "id": "7faddb67_1538223b", "line": 229, "updated": "2019-07-26 23:54:24.000000000", "message": "++ thank you for helpful doc references", "commit_id": "23abd5730d2e95e6b5a62590f3fdbda3e0b62a3a"}], "specs/ussuri/approved/nova-support-webvnc-with-password-anthentication.rst": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab6f2d182e1febbbb150d06d3eee5f7fe05ca5d9", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_28ae8a80", "line": 15, "range": {"start_line": 15, "start_character": 38, "end_line": 15, "end_character": 61}, "updated": "2019-11-05 10:49:28.000000000", "message": "Would it be worth making this configurable? Optional by default but operators could still make it mandatory and enforce the use of these additional VNC passwords?", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "a309296f2f2cb47e7104ea07a2c790a20e296f81", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_caa0a394", "line": 15, "range": {"start_line": 15, "start_character": 38, "end_line": 15, "end_character": 61}, "in_reply_to": "3fa7e38b_28ae8a80", "updated": "2019-11-14 03:41:32.000000000", "message": "Hi Yarwood, I think you are right. It's necessary to add extra option (e.g. CONF.api.force_vnc_password=<True|False> ) to control whether or not to enforce the use of VNC password.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab6f2d182e1febbbb150d06d3eee5f7fe05ca5d9", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4883c603", "line": 27, "range": {"start_line": 27, "start_character": 22, "end_line": 27, "end_character": 44}, "updated": "2019-11-05 10:49:28.000000000", "message": "Potentially not safe depending on how the instance is configured.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab6f2d182e1febbbb150d06d3eee5f7fe05ca5d9", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_88921e4a", "line": 54, "range": {"start_line": 54, "start_character": 29, "end_line": 54, "end_character": 46}, "updated": "2019-11-05 10:49:28.000000000", "message": "python-openstackclient as well?", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "a309296f2f2cb47e7104ea07a2c790a20e296f81", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3f12d7b5", "line": 54, "range": {"start_line": 54, "start_character": 29, "end_line": 54, "end_character": 46}, "in_reply_to": "3fa7e38b_88921e4a", "updated": "2019-11-14 03:41:32.000000000", "message": "Done", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab6f2d182e1febbbb150d06d3eee5f7fe05ca5d9", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4898a667", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 17}, "updated": "2019-11-05 10:49:28.000000000", "message": "How and where are we going to securely store the password?", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cbc28a428df7015dd3ac60f1e9922cce185add56", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a515aa9d", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 17}, "in_reply_to": "3fa7e38b_4898a667", "updated": "2019-11-06 21:07:25.000000000", "message": "If I understand correctly, the password simply gets passed down to the libvirt driver for inclusion in the domain XML (see the 'vnc' section here):\n\nhttps://libvirt.org/formatdomain.html#elementsGraphics\n\nAnd that is the only place it will be stored (in clear text).\n\nMy understanding is that the vnc password mechanism is meant to be an improvement over no password at all, and is not comprehensively secure.\n\nBut I realize I'm making a lot of assumptions here, and it would be best if this spec were updated to explain the details explicitly.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "a309296f2f2cb47e7104ea07a2c790a20e296f81", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_eadf9f35", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 17}, "in_reply_to": "3fa7e38b_a515aa9d", "updated": "2019-11-14 03:41:32.000000000", "message": "Hi Mel, I need to point out that the `clear text` vnc password only appears once when assembling graphics XML to boot a instance. Then the password will be securely kept by libvirtd and won't be displayed in the result of `virsh dumpxml <instance UUID>` or instance XMLs managed by libvirt/qemu in local filesystem any more.\n\nThanks for your review.  I'll provide more details to improve the spec.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "e6ce6fdd53bae518a6a86b0c185d16dad0eebaa6", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_d6b977cb", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 17}, "in_reply_to": "3fa7e38b_a515aa9d", "updated": "2019-11-07 09:14:29.000000000", "message": "Thanks Mel! Yeah we should really call that out the fact that the password isn't stored anywhere outside of the domain XML here. I find it odd that Libvirt doesn't accept secrets for the password but that's a limitation on their side and not with this spec.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "a309296f2f2cb47e7104ea07a2c790a20e296f81", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_8ac70b65", "line": 66, "range": {"start_line": 65, "start_character": 0, "end_line": 66, "end_character": 17}, "in_reply_to": "3fa7e38b_d6b977cb", "updated": "2019-11-14 03:41:32.000000000", "message": "Thanks for your review. I'll provide more information to improve the spec.", "commit_id": "545bbfd3beec55812fc2c70def0fd117200ef7d6"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "9b450da50d2042d3dfb4478ac1a307e8967b2681", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_ffca5845", "line": 46, "range": {"start_line": 46, "start_character": 2, "end_line": 46, "end_character": 30}, "updated": "2019-12-16 06:46:07.000000000", "message": "so do you store this metadata into the db? and can I get that metadata from the Nova API again? If we didn't store that into the db, that is a little strange, and we can update the metadata through the API. If we can show that from the metadata API again, then the clear text is problem also. So I'm thinking we just add new field to the create server API.\n\nOr can we change the password on the fly? if yes, then we can use the existing remote console API.\nI checked the doc, there is API looks like for that https://libvirt.org/html/libvirt-libvirt-domain.html#virDomainUpdateDeviceFlags", "commit_id": "53f165281b19100870e03041e69359076844cae4"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "3c7950a8c6049428c212a3df9e98eec5b50fb0dc", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_66947142", "line": 46, "range": {"start_line": 46, "start_character": 2, "end_line": 46, "end_character": 30}, "in_reply_to": "3fa7e38b_702427c4", "updated": "2020-02-04 08:25:56.000000000", "message": "Have great conversation with Jingyu and Brin. I just feel the metadata of instance may not the right place. So i'm looking for whether there is better place to add this feature. The remote console API is what I'm thinking. But yes, both way has pros/cons. Later Brin and Jingyu will bring up an email to look for more suggestion from others.", "commit_id": "53f165281b19100870e03041e69359076844cae4"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "3014025a2750548bd99ca247af85577febb8dc1f", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_702427c4", "line": 46, "range": {"start_line": 46, "start_character": 2, "end_line": 46, "end_character": 30}, "in_reply_to": "3fa7e38b_ffca5845", "updated": "2020-02-04 03:50:36.000000000", "message": "Hi, Alex. I'd like to take `admin_pass` as an example to implement this spec:\n(1) store the initial `vnc_passwd` just the same way.\n(2) Extra api (e.g: reset-vnc-passwd) will be provided later after the spec to change the password on the fly: libvirt API will be called to update `graphics` element of domain defination.", "commit_id": "53f165281b19100870e03041e69359076844cae4"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "e10bcbf31225c9d8f64ce8d42f29634e6e3e161c", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_216dfc99", "line": 15, "range": {"start_line": 15, "start_character": 23, "end_line": 15, "end_character": 61}, "updated": "2020-02-04 16:56:51.000000000", "message": "\"and note that this is optional.\"", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "138ef72316571a2bfb563151d495f6022fcdead1", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_fa420a67", "line": 15, "range": {"start_line": 15, "start_character": 23, "end_line": 15, "end_character": 61}, "in_reply_to": "3fa7e38b_216dfc99", "updated": "2020-02-06 11:17:01.000000000", "message": "Done", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "e10bcbf31225c9d8f64ce8d42f29634e6e3e161c", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_016240a8", "line": 25, "range": {"start_line": 25, "start_character": 60, "end_line": 25, "end_character": 70}, "updated": "2020-02-04 16:56:51.000000000", "message": "convenient", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "138ef72316571a2bfb563151d495f6022fcdead1", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_ba549224", "line": 25, "range": {"start_line": 25, "start_character": 60, "end_line": 25, "end_character": 70}, "in_reply_to": "3fa7e38b_016240a8", "updated": "2020-02-06 11:17:01.000000000", "message": "Done", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}, "change_message_id": "e10bcbf31225c9d8f64ce8d42f29634e6e3e161c", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_01e56007", "line": 27, "range": {"start_line": 25, "start_character": 72, "end_line": 27, "end_character": 45}, "updated": "2020-02-04 16:56:51.000000000", "message": "How would they get the access_url? The token is time limited and noVNC can be configured to use HTTPS. How does a password enhance this security?", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "d52e96fccb6ffacaeb59ce1a2f7afb48b0f509bc", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_672a1a98", "line": 27, "range": {"start_line": 25, "start_character": 72, "end_line": 27, "end_character": 45}, "in_reply_to": "3fa7e38b_01e56007", "updated": "2020-02-05 10:06:58.000000000", "message": "Thanks Matthew for you review.\nJust image the cases/people:\na. A designing cloud administrator who is too curious about tenants' business.\nb. Cloud administrator's desktop is hacked, and console   \n urls of VMs are leaked.\n\nAnd i'll upload a new patch to fix spelling the mistake.", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "138ef72316571a2bfb563151d495f6022fcdead1", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_2dfcee09", "line": 27, "range": {"start_line": 25, "start_character": 72, "end_line": 27, "end_character": 45}, "in_reply_to": "3fa7e38b_01e56007", "updated": "2020-02-06 11:17:01.000000000", "message": "Thanks Matthew for you review.\nJust imagine the cases:\na. A designing cloud administrator who is too curious about tenants' business.\nb. Cloud administrator's desktop is hacked, and console urls of VMs are leaked.", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "138ef72316571a2bfb563151d495f6022fcdead1", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_cd02fa08", "line": 27, "range": {"start_line": 25, "start_character": 72, "end_line": 27, "end_character": 45}, "in_reply_to": "3fa7e38b_672a1a98", "updated": "2020-02-06 11:17:01.000000000", "message": "Done", "commit_id": "3a628476f4c33fa11bf8abb747c568a79c85196f"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_ed752f98", "line": 27, "range": {"start_line": 26, "start_character": 5, "end_line": 27, "end_character": 8}, "updated": "2020-02-11 15:38:06.000000000", "message": "I think the cloud administrator has the access right to change the libvirt domain definition for any instance so she can change the passwd in the graphic tag as well. So this does not protect from a curious admin. \n\nIt could protect against a case when the access_url + token is published. But it would be nice to describe how that is possible. E.g. the user uses a shared compute with other users and the browser history contains such url? (I'm totally guessing here)", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "190c8b39ec6107c3433c119991a126508d257021", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_db8d5029", "line": 27, "range": {"start_line": 26, "start_character": 5, "end_line": 27, "end_character": 8}, "in_reply_to": "3fa7e38b_ed752f98", "updated": "2020-02-14 12:43:13.000000000", "message": "1. It's not easy for curious administrator to spy on tenants' business without alerting tenants.\nIn this case, a tenant can easily knows that vnc password was hacked by someone else. \n\n2. Sharing computer; Sharing message containing access url among incorrect contact/work groups.", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "dad7cd90bfa99dd42d37be4f243d82959381d064", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_0daaee6b", "line": 27, "range": {"start_line": 26, "start_character": 5, "end_line": 27, "end_character": 8}, "in_reply_to": "3fa7e38b_ed752f98", "updated": "2020-02-12 22:22:27.000000000", "message": "I agree that given default conditions with a token auth TTL of 10 minutes [1], the window of danger of leak of access_url + token is pretty small. That is, if the user accidentally exposes the password that exposure lasts for only 10 minutes maximum. But, if the cloud admin has configured a long TTL, any mistake of exposing the access_url + token is going to provide open access for as long as the TTL. And there isn't a way for a user to revoke it other than to delete the instance (or contact their support staff to manually remove the token auth record from the database).\n\nAll that said, I agree this problem description doesn't seem to be providing much detail about the use case and what scenario is desired to guard against.\n\n[1] https://docs.openstack.org/nova/latest/configuration/config.html#consoleauth.token_ttl", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_f34bcc82", "line": 44, "range": {"start_line": 44, "start_character": 31, "end_line": 44, "end_character": 40}, "updated": "2020-02-11 15:38:06.000000000", "message": "openstack", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "665b090b28f18165453ca5a2f78c54e136ce1cae", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_9fe28f01", "line": 44, "range": {"start_line": 44, "start_character": 31, "end_line": 44, "end_character": 40}, "in_reply_to": "3fa7e38b_f34bcc82", "updated": "2020-02-12 09:48:20.000000000", "message": "Done", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_4d9243a2", "line": 46, "range": {"start_line": 45, "start_character": 27, "end_line": 46, "end_character": 27}, "updated": "2020-02-11 15:38:06.000000000", "message": "Why not? I understand that it is then a bigger change but that is the way how we add new boot time parameters to nova.", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "dad7cd90bfa99dd42d37be4f243d82959381d064", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_2d9a4a11", "line": 46, "range": {"start_line": 45, "start_character": 27, "end_line": 46, "end_character": 27}, "in_reply_to": "3fa7e38b_4d9243a2", "updated": "2020-02-12 22:22:27.000000000", "message": "Yeah, I would at least like to treat this change similar to how we treat adminPassword [1] which seems like a very similar feature to me. adminPassword is a request parameter for the server create API.\n\nIt also has an API for showing and clearing the password [2] and change it [3]. I do recognize though that the ability to show/clear/change vnc password would not fit in easily with the existing APIs as they are all specifically about admin password.\n\nAll this said, I really prefer Alex's proposal from the ML thread [4] because it addresses the clarify of having an API request parameter and also provides a way for users to change the vnc password if they forget it.\n\n[1] https://docs.openstack.org/api-ref/compute/?expanded=create-server-detail#id11\n[2] https://docs.openstack.org/api-ref/compute/?expanded=#servers-password-servers-os-server-password\n[3] https://docs.openstack.org/api-ref/compute/?expanded=#change-administrative-password-changepassword-action\n[4] http://lists.openstack.org/pipermail/openstack-discuss/2020-February/012352.html", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_933cd8ea", "line": 58, "range": {"start_line": 58, "start_character": 53, "end_line": 58, "end_character": 63}, "updated": "2020-02-11 15:38:06.000000000", "message": "definition", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "665b090b28f18165453ca5a2f78c54e136ce1cae", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_bfdd0b40", "line": 58, "range": {"start_line": 58, "start_character": 53, "end_line": 58, "end_character": 63}, "in_reply_to": "3fa7e38b_933cd8ea", "updated": "2020-02-12 09:48:20.000000000", "message": "Done", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_137788d4", "line": 64, "updated": "2020-02-11 15:38:06.000000000", "message": "So this is a password that can only be set at boot time, cannot be read back and cannot be changed later. What if the user forgets the password? \n\nAlso the password travels through the POST request from the client to the nova-api. So if that considered secure enough then why don't we allow reading back the password in GET /servers/{server-uuid} ? In that case the same password would travel in a very similar form in a very similar connection.", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "dad7cd90bfa99dd42d37be4f243d82959381d064", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_92511934", "line": 64, "in_reply_to": "3fa7e38b_137788d4", "updated": "2020-02-12 22:22:27.000000000", "message": "+1 to this, it would not be a very friendly user experience to not ever be able to retrieve the password or change it. I could imagine users (assuming a long TTL) opening tickets for support with \"I forgot my vnc password\" and creating extra work for support staff to get their password out of guest XML and tell them or change guest XML manually to \"reset password\".\n\nHere's links to how we handle server admin passwords GET (show password) [1] (returns encrypted and user uses their private key to decrypt, novaclient and osc does this) and POST (change password) [2].\n\n[1] https://docs.openstack.org/api-ref/compute/?expanded=show-server-password-detail#show-server-password\n[2] https://docs.openstack.org/api-ref/compute/?expanded=change-administrative-password-changepassword-action-detail#change-administrative-password-changepassword-action", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "c9d661ab1e725c9c51eb353011f13245c0e86655", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_6dd4df4b", "line": 68, "updated": "2020-02-11 15:38:06.000000000", "message": "So one alternative is what Alex is suggesting [1]\n\n[1] http://lists.openstack.org/pipermail/openstack-discuss/2020-February/012352.html", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "dad7cd90bfa99dd42d37be4f243d82959381d064", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_c80e0432", "line": 68, "in_reply_to": "3fa7e38b_6dd4df4b", "updated": "2020-02-12 22:22:27.000000000", "message": "I prefer Alex's suggested approach from this email, I think it would be the most clear, simple, and friendly way to provide the vnc password feature.", "commit_id": "ce6ef3d0be950769f9bb4ed53f37898f1ae8234e"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_00cdb759", "line": 18, "range": {"start_line": 18, "start_character": 48, "end_line": 18, "end_character": 49}, "updated": "2020-02-14 11:09:41.000000000", "message": "white space", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "04566cb6e0a974c10e58f21a31c8fefe491bafb7", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_1dd680c5", "line": 26, "range": {"start_line": 25, "start_character": 5, "end_line": 26, "end_character": 8}, "updated": "2020-02-14 10:32:41.000000000", "message": "Comments from previous patch set was not answered https://review.opendev.org/#/c/623120/19/specs/ussuri/approved/nova-support-webvnc-with-password-anthentication.rst@27", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "414a995f386b2cea775dcdd8b59cade22ce84e5f", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_9d9030f5", "line": 46, "range": {"start_line": 46, "start_character": 53, "end_line": 46, "end_character": 68}, "updated": "2020-02-14 10:26:02.000000000", "message": "We don't have this API, or are you proposing adding that API?\n\nActually, my suggestion is this API https://docs.openstack.org/api-ref/compute/?expanded=create-console-detail#create-console", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "414a995f386b2cea775dcdd8b59cade22ce84e5f", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_fd9da4fc", "line": 52, "range": {"start_line": 52, "start_character": 10, "end_line": 52, "end_character": 43}, "updated": "2020-02-14 10:26:02.000000000", "message": "I prefer to not persistent it into the DB.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "414a995f386b2cea775dcdd8b59cade22ce84e5f", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_5d9638f0", "line": 52, "range": {"start_line": 52, "start_character": 48, "end_line": 52, "end_character": 71}, "updated": "2020-02-14 10:26:02.000000000", "message": "expose at where?", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "04566cb6e0a974c10e58f21a31c8fefe491bafb7", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_5de15896", "line": 53, "updated": "2020-02-14 10:32:41.000000000", "message": "If I can reset the password the I'm less in need to query it. But I'm also OK if I can query it.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "04566cb6e0a974c10e58f21a31c8fefe491bafb7", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_1dad2031", "line": 53, "range": {"start_line": 51, "start_character": 45, "end_line": 53, "end_character": 37}, "updated": "2020-02-14 10:32:41.000000000", "message": "So if this is in the instance metadata then it is by default changeable to the user via the PUT /servers/{server_id}/metadata \nWe have today a change_instance_metadata RPC call to the compute which can be used to let the compute and then the libvirt driver know that the password needs to be changed in the domain XML.\n\nLet's agree on the metadata key name.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "04566cb6e0a974c10e58f21a31c8fefe491bafb7", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_1d20c0b0", "line": 64, "updated": "2020-02-14 10:32:41.000000000", "message": "OK it seems that if we add the password to the instance metadata then the password information will end up in the virt driver during the get_vnc_console RPC call.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_c088ff21", "line": 68, "updated": "2020-02-14 11:09:41.000000000", "message": "The alternative is add the vnc_passwd key in metadata as description in PS20, but from this way, the use cannot reset his vnc password, so add vnc_passwd to the POST /servers/{server_id}/remote-consoles request is better than that way.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "190c8b39ec6107c3433c119991a126508d257021", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_1bb20832", "line": 68, "in_reply_to": "3fa7e38b_c088ff21", "updated": "2020-02-14 12:43:13.000000000", "message": "Done", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "04566cb6e0a974c10e58f21a31c8fefe491bafb7", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_a0faa30d", "line": 78, "updated": "2020-02-14 10:32:41.000000000", "message": "Please describe the metadata key here as well as the change to the POST /servers/{server_id}/remote-consoles request. The POST /servers/{server_id}/remote-consoles changes also means we need a new API microversion.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "414a995f386b2cea775dcdd8b59cade22ce84e5f", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_9d5ef04e", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 4}, "updated": "2020-02-14 10:26:02.000000000", "message": "There is API change, and need microversion.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "190c8b39ec6107c3433c119991a126508d257021", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_9bc6f89a", "line": 78, "range": {"start_line": 78, "start_character": 0, "end_line": 78, "end_character": 4}, "in_reply_to": "3fa7e38b_9d5ef04e", "updated": "2020-02-14 12:43:13.000000000", "message": "Done", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "190c8b39ec6107c3433c119991a126508d257021", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_3bc10482", "line": 78, "in_reply_to": "3fa7e38b_a0faa30d", "updated": "2020-02-14 12:43:13.000000000", "message": "Done", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_e06e5b63", "line": 119, "updated": "2020-02-14 11:09:41.000000000", "message": "This is need to add a blank line above \".. code-block:: ini\" to resolve the docs failed.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 28889, "name": "Guo Jingyu", "email": "guojy8993@163.com", "username": "pandatt"}, "change_message_id": "190c8b39ec6107c3433c119991a126508d257021", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_5bbc0006", "line": 119, "in_reply_to": "3fa7e38b_e06e5b63", "updated": "2020-02-14 12:43:13.000000000", "message": "Done", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_c08d5f29", "line": 194, "range": {"start_line": 194, "start_character": 2, "end_line": 194, "end_character": 23}, "updated": "2020-02-14 11:09:41.000000000", "message": "ditto.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_40996f68", "line": 200, "range": {"start_line": 200, "start_character": 2, "end_line": 200, "end_character": 30}, "updated": "2020-02-14 11:09:41.000000000", "message": "add a blank line on this.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_a0b383eb", "line": 211, "range": {"start_line": 211, "start_character": 2, "end_line": 211, "end_character": 21}, "updated": "2020-02-14 11:09:41.000000000", "message": "ditto.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_20cc7360", "line": 231, "range": {"start_line": 231, "start_character": 3, "end_line": 231, "end_character": 6}, "updated": "2020-02-14 11:09:41.000000000", "message": "Redundant indentation.", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fcd48cf0d0bb1954ad60657da53b2fdaafd15a78", "unresolved": false, "patch_set": 22, "id": "3fa7e38b_80ac4787", "line": 235, "range": {"start_line": 235, "start_character": 7, "end_line": 235, "end_character": 12}, "updated": "2020-02-14 11:09:41.000000000", "message": "Ussuri", "commit_id": "951515d0d122f3f627b8e5a264342663a5dbc4ee"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_d6e76544", "line": 36, "range": {"start_line": 36, "start_character": 0, "end_line": 36, "end_character": 44}, "updated": "2020-02-14 13:05:56.000000000", "message": "You can write something like this: \"The end user can set a vnc console password to avoid the console access url stolen by other user\"?\n\nAlso can add \"The end user can reset the vnc console password when he forget\"", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_1bfa0811", "line": 37, "range": {"start_line": 36, "start_character": 45, "end_line": 37, "end_character": 50}, "updated": "2020-02-14 13:05:56.000000000", "message": "remove this", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_366599e2", "line": 44, "range": {"start_line": 44, "start_character": 39, "end_line": 44, "end_character": 46}, "updated": "2020-02-14 13:05:56.000000000", "message": "s/Console/console/", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_f65aa11c", "line": 47, "range": {"start_line": 47, "start_character": 2, "end_line": 47, "end_character": 7}, "updated": "2020-02-14 13:05:56.000000000", "message": "s/extra/Extra", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_566055d0", "line": 51, "range": {"start_line": 51, "start_character": 30, "end_line": 51, "end_character": 37}, "updated": "2020-02-14 13:05:56.000000000", "message": "s/console/Console/", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_d63525a8", "line": 53, "range": {"start_line": 53, "start_character": 2, "end_line": 53, "end_character": 41}, "updated": "2020-02-14 13:05:56.000000000", "message": "We should mention this is only implement for libvirt virt driver. For the other driver, we should return failure.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_56bcd505", "line": 56, "range": {"start_line": 53, "start_character": 46, "end_line": 56, "end_character": 25}, "updated": "2020-02-14 13:05:56.000000000", "message": "you can talk about the libvirt virt dirver implement under the \"Implementation\" section.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_969fadb0", "line": 66, "range": {"start_line": 66, "start_character": 0, "end_line": 66, "end_character": 46}, "updated": "2020-02-14 13:05:56.000000000", "message": "you needn't mention it is coming from 20th patchset...", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_3637d9e6", "line": 93, "range": {"start_line": 93, "start_character": 28, "end_line": 93, "end_character": 37}, "updated": "2020-02-14 13:05:56.000000000", "message": "we should define the format of this. It would be good we know the schema of vnc password supported by vnc.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_9609eddb", "line": 97, "range": {"start_line": 97, "start_character": 38, "end_line": 97, "end_character": 42}, "updated": "2020-02-14 13:05:56.000000000", "message": "I guess you want to say the type other than 'vnc'?\n\nAnd looks like the `{\"type\": \"novnc\"}` is the only type supported, right?", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_16609d9d", "line": 103, "range": {"start_line": 103, "start_character": 3, "end_line": 103, "end_character": 36}, "updated": "2020-02-14 13:05:56.000000000", "message": "`HTTPBadRequest 400` will be returned.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_f64b8125", "line": 104, "updated": "2020-02-14 13:05:56.000000000", "message": "for the unsupported virt driver, we should return `HTTPNotImplemented 501`", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_fbfe0c05", "line": 108, "range": {"start_line": 108, "start_character": 0, "end_line": 108, "end_character": 4}, "updated": "2020-02-14 13:05:56.000000000", "message": "remove this", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_7b3d3ce4", "line": 154, "range": {"start_line": 153, "start_character": 0, "end_line": 154, "end_character": 23}, "updated": "2020-02-14 13:05:56.000000000", "message": "Probably just keep this empty. This isn't developer impact.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_3b090431", "line": 159, "range": {"start_line": 159, "start_character": 0, "end_line": 159, "end_character": 4}, "updated": "2020-02-14 13:05:56.000000000", "message": "we should bump service object version and rpc version for the 'get_vnc_console' rpc call. Then only when the cluster fully upgrade to Ussuri release, the call can be success. otherwise return failure for the request.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_f6414138", "line": 224, "range": {"start_line": 220, "start_character": 2, "end_line": 224, "end_character": 67}, "updated": "2020-02-14 13:05:56.000000000", "message": "this can be added to `the end user impact` section", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_163dfdb7", "line": 237, "range": {"start_line": 228, "start_character": 0, "end_line": 237, "end_character": 5}, "updated": "2020-02-14 13:05:56.000000000", "message": "you already talk about the API detail at API impact section, then you needn't repeat it at here.", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "21827a906039c05e78b2ee07fc3f358ef15ebe09", "unresolved": false, "patch_set": 23, "id": "3fa7e38b_b67189ad", "line": 245, "range": {"start_line": 242, "start_character": 21, "end_line": 245, "end_character": 36}, "updated": "2020-02-14 13:05:56.000000000", "message": "you needn't repeat this again", "commit_id": "81b3da1c85ee3c31bab59912044339a3597b8adc"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "ee158bc6e62eb461de208e41b3b06cf9867e8f9e", "unresolved": false, "patch_set": 25, "id": "3fa7e38b_313a8334", "line": 107, "range": {"start_line": 106, "start_character": 4, "end_line": 107, "end_character": 42}, "updated": "2020-02-14 14:25:19.000000000", "message": "I still don't understand this.", "commit_id": "ada554feb99481f29f4cabca28f623fcc12e10b9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "ee158bc6e62eb461de208e41b3b06cf9867e8f9e", "unresolved": false, "patch_set": 25, "id": "3fa7e38b_11e667dc", "line": 110, "range": {"start_line": 110, "start_character": 19, "end_line": 110, "end_character": 26}, "updated": "2020-02-14 14:25:19.000000000", "message": "oh...this isn't vnc specific. so...spice support, does RDP support also?\n\nIf the spice support this also, then we shouldn't call it as \"vnc_password\", maybe just password, right?", "commit_id": "ada554feb99481f29f4cabca28f623fcc12e10b9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "59276310ea662c35aeabacb2aa3426a027f3392c", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_6ca264ae", "line": 8, "range": {"start_line": 8, "start_character": 14, "end_line": 8, "end_character": 19}, "updated": "2020-02-14 15:15:24.000000000", "message": "since you want to support the spice also. i just think we should only call out noVNC, maybe just call it as 'remote console password', it is more generic.", "commit_id": "8405d328d3ad8e653df42691dc40809a4579191b"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "06c13a8a622c011ae2bbd30922e05c720a19ec1a", "unresolved": false, "patch_set": 28, "id": "3fa7e38b_72d79a22", "line": 26, "range": {"start_line": 25, "start_character": 24, "end_line": 26, "end_character": 24}, "updated": "2020-02-14 16:12:27.000000000", "message": "the solution still not prevent admins to be curious. It only forces the admin to change the vnc password that will make it obvious that the admin did that.", "commit_id": "33a13a1aabee9d89a88c3b7e3e18244b2bd6a0c1"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "06c13a8a622c011ae2bbd30922e05c720a19ec1a", "unresolved": false, "patch_set": 28, "id": "3fa7e38b_929c9670", "line": 90, "range": {"start_line": 90, "start_character": 27, "end_line": 90, "end_character": 33}, "updated": "2020-02-14 16:12:27.000000000", "message": "nit: Console", "commit_id": "33a13a1aabee9d89a88c3b7e3e18244b2bd6a0c1"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "06c13a8a622c011ae2bbd30922e05c720a19ec1a", "unresolved": false, "patch_set": 28, "id": "3fa7e38b_12cbc672", "line": 102, "range": {"start_line": 102, "start_character": 19, "end_line": 102, "end_character": 48}, "updated": "2020-02-14 16:12:27.000000000", "message": "I don't know what this means.", "commit_id": "33a13a1aabee9d89a88c3b7e3e18244b2bd6a0c1"}]}}, "openstack%2Fnova~stable%2Fqueens~Ic749c49e227e41732dbe04acea303b303acd264a": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fnova~stable%2Frocky~Ic749c49e227e41732dbe04acea303b303acd264a": {"owner_id": 10135, "owner_name": "Lee Yarwood", "owner_email": "lyarwood@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "airship%2Fairshipctl~master~I4fee6887d6638233e367631934e0532e56121241": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fopenstack-ansible~master~I50931e0f68176bbaebfb68eec9f84241816c7fe3": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:30:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, {"value": 2, "date": "2020-02-13 21:28:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17799, "name": "Logan V", "email": "logan2211@gmail.com", "username": "Logan2211"}], "comments": {}}, "openstack%2Frally~master~Ibe003c26ef973b18decaa16c03b3589b4002157e": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 15:54:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fnova-specs~master~I33301cbb02941d8498c17fb19ea07f0c0cae0bfc": {"owner_id": 782, "owner_name": "John Garbutt", "owner_email": "john@johngarbutt.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 0, "_account_id": 136, "name": "Tim Bell", "email": "tim.bell@cern.ch", "username": "tim-bell"}, {"value": 0, "_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, {"value": 0, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 0, "_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 2, "date": "2020-02-13 19:23:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 20498, "name": "Spyros Trigazis", "email": "strigazi@gmail.com", "username": "strigazi"}, {"value": 1, "date": "2020-02-13 21:59:23.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, {"value": 2, "date": "2020-02-14 15:53:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "_account_id": 26936, "name": "Surya Seetharaman", "email": "suryaseetharaman.9@gmail.com", "username": "tssurya"}, {"value": 2, "date": "2020-02-14 10:26:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 1207, "name": "Duncan Thomas", "email": "duncan.thomas@gmail.com", "username": "duncan-thomas"}, {"value": 0, "_account_id": 2033, "name": "Belmiro Moreira", "email": "moreira.belmiro.email.lists@gmail.com", "username": "moreira-belmiro-email-lists"}, {"value": 0, "_account_id": 11057, "name": "sajeesh cs", "email": "sajeesh.cs@cern.ch", "username": "sajeeshcs"}], "comments": {"specs/stein/approved/unified-limits-stein.rst": [{"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "8232f2440b996a99012bfdfead760ecf8227e96f", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_16343148", "line": 46, "updated": "2018-09-19 17:58:43.000000000", "message": "Isn't \"Can have some amount of hierarchy\" a driving use case here as well?", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a6f6b20f6b00546a2231b79a5e837bf46ee4fd47", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9cdfd70a", "line": 46, "in_reply_to": "3f79a3b5_16343148", "updated": "2018-09-21 13:43:14.000000000", "message": "ah, that is what I meant by line 44, but its not very clear I guess.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "61a9867378fa6217dadef6ad210f55846435bad5", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_b8597829", "line": 46, "in_reply_to": "3f79a3b5_9cdfd70a", "updated": "2018-09-21 16:53:39.000000000", "message": "Yeah I guess I missed the \"non-flat\" bit. Still, including something with \"hierarch...\" would probably be good.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "e72977919a35db833f2c6c2a28a0b6de74a82f80", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_44ddafdb", "line": 76, "range": {"start_line": 74, "start_character": 2, "end_line": 76, "end_character": 26}, "updated": "2018-09-25 13:51:25.000000000", "message": "already deprecated at 2.57", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_3ca9ea23", "line": 76, "range": {"start_line": 74, "start_character": 2, "end_line": 76, "end_character": 26}, "in_reply_to": "3f79a3b5_44ddafdb", "updated": "2018-10-29 16:07:51.000000000", "message": "ah, OK.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "e72977919a35db833f2c6c2a28a0b6de74a82f80", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_24a75353", "line": 81, "range": {"start_line": 81, "start_character": 41, "end_line": 81, "end_character": 52}, "updated": "2018-09-25 13:51:25.000000000", "message": "What is 'rate limits' pointed to? Nova already removed the stuff related rate limits.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9c483e8a", "line": 81, "range": {"start_line": 81, "start_character": 41, "end_line": 81, "end_character": 52}, "in_reply_to": "3f79a3b5_24a75353", "updated": "2018-10-29 16:07:51.000000000", "message": "All the above a really rate limits rather than quotas of resource. I say that because they are really just stopping the number of things in the DB, rather than real resource usage.\n\nI should really call that something different... its way too confusing as it is, given the history you point out.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "e72977919a35db833f2c6c2a28a0b6de74a82f80", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_e42cfbb3", "line": 94, "range": {"start_line": 94, "start_character": 12, "end_line": 94, "end_character": 19}, "updated": "2018-09-25 13:51:25.000000000", "message": "s/nothing/note/?", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_bc4bba83", "line": 94, "range": {"start_line": 94, "start_character": 12, "end_line": 94, "end_character": 19}, "in_reply_to": "3f79a3b5_e42cfbb3", "updated": "2018-10-29 16:07:51.000000000", "message": "oops, yes.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "8232f2440b996a99012bfdfead760ecf8227e96f", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_b6277d12", "line": 168, "updated": "2018-09-19 17:58:43.000000000", "message": "This is the thing that migrates existing limits over to keystone, right?\n\nDoes it delete them from nova once keystone claims to have them? Probably should, right?\n\nAlso probably good to be able to migrate a specific tenant instead of just \"all or nothing\".", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9c16fe57", "line": 168, "in_reply_to": "3f79a3b5_42f60760", "updated": "2018-10-29 16:07:51.000000000", "message": "So the per region is already covered, because keystone stores the limits per Nova endpoint.\n\nSo here the nova.conf contains the appropriate keystone region, so you need to run this per nova endpoint.\n\n...This is so complicated I should mention it though!!!", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, "change_message_id": "0ca35510d0769463974aefb53ec62a0e05e009c3", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_42f60760", "line": 168, "in_reply_to": "3f79a3b5_9c16f7a6", "updated": "2018-09-25 08:20:30.000000000", "message": "I think that here should be mentioned an optional region argument. In some for multi-region clouds, operators use single keystone for all regions. They shouldn't lose the ability to set different limits in different regions.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a6f6b20f6b00546a2231b79a5e837bf46ee4fd47", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_9c16f7a6", "line": 168, "in_reply_to": "3f79a3b5_b6277d12", "updated": "2018-09-21 13:43:14.000000000", "message": "No, that is nova-manage quota_migrate I describe below.\n\nI should probably drop this tool as it is distracting, its a wrapper about keystone client to push info into the keystone API about Nova specific keys, for the given endpoint.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 16150, "name": "Lei Zhang", "email": "lei.a.zhang@intel.com", "username": "leizhang"}, "change_message_id": "e6e7f3f499c153ea6c2f3ad9cf9cd8cc6f736965", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_743704b1", "line": 180, "updated": "2018-09-27 11:05:16.000000000", "message": "Does the older microversion behaviors remain the same if unified limits config is not enabled, which is, still using the old code to store quotas in DB", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_220a241d", "line": 180, "in_reply_to": "3f79a3b5_743704b1", "updated": "2018-10-29 16:07:51.000000000", "message": "Yes, it should stay the same. I can add that clarification in.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 16150, "name": "Lei Zhang", "email": "lei.a.zhang@intel.com", "username": "leizhang"}, "change_message_id": "e6e7f3f499c153ea6c2f3ad9cf9cd8cc6f736965", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_74286484", "line": 190, "updated": "2018-09-27 11:05:16.000000000", "message": "If unified limits is not enabled in config, any request to this new API will be ignored or perhaps returned with a http 405, right?", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_421ac06a", "line": 190, "in_reply_to": "3f79a3b5_74286484", "updated": "2018-10-29 16:07:51.000000000", "message": "We shouldn't use 405 (that means POST isn't allowed but GET would work) so I think it would be 400, but you are correct, we should add that detail.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "8232f2440b996a99012bfdfead760ecf8227e96f", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_b66c5d36", "line": 229, "updated": "2018-09-19 17:58:43.000000000", "message": "Matt should look at this. I know we discussed this, but I think some tooling places a lot of weight on a warning result, so it might be wrong for us to warn about a stein thing during an upgrade from rocky, since they can't do anything in rocky yet (i.e. before the upgrade).", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "231963fca675e38b05d20d14eb8154350f9d6113", "unresolved": false, "patch_set": 3, "id": "3f79a3b5_a24cf474", "line": 229, "in_reply_to": "3f79a3b5_b66c5d36", "updated": "2018-10-29 16:07:51.000000000", "message": "hmm, interesting, I should find out more about that.", "commit_id": "4f577449fed4431ede9cf7a9af23a10ba4426083"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "83883690052b0e4aee336244895b83ee39f7525a", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_23f8d47c", "line": 205, "range": {"start_line": 203, "start_character": 0, "end_line": 205, "end_character": 33}, "updated": "2018-10-30 15:05:47.000000000", "message": "This is a new *compute API*, right? Because on line 315 below, you write:\n\n\"TODO: should Keystone really call Nova to check usage and display the usage info in a unified way. Should it just be custom tooling via CLI tools, etc?\"\n\nUnder no circumstances do I believe that Keystone should be calling to Nova (or Placement) to get usage information.", "commit_id": "3c8529ab44369aeac5689189df44431e4389f0eb"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "83883690052b0e4aee336244895b83ee39f7525a", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_03f9184e", "line": 216, "range": {"start_line": 207, "start_character": 0, "end_line": 216, "end_character": 1}, "updated": "2018-10-30 15:05:47.000000000", "message": "I'm actually a little reticent to mix limits and usage information in a single /limits API resource endpoint.\n\nI personally believe that Horizon/UI toolkits and higher-level orchestration services are the more appropriate place to merge/munge the data from multiple API responses, instead of combined API resource responses as the above proposal shows. (It mixes limits and usage information in a single GET /limits API endpoint response)\n\nThe placement API already contains an API for /usages that can be filtered by project (and optionally, the user).\n\nWhat the placement API cannot return is any of the following:\n\n* A count of instances (with something called \"consumer types\" it might be possible to do this in the future, though)\n* A time-range-filtered response as the GET /os-simple-tenant-usage compute API currently returns. It's unclear that Placement would ever actually have the information available to it to calculate this kind of filter)", "commit_id": "3c8529ab44369aeac5689189df44431e4389f0eb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "9f6fc57bbabd9818bc4c2d61282e841b4681f9b3", "unresolved": false, "patch_set": 4, "id": "3f79a3b5_648d4b35", "line": 216, "range": {"start_line": 207, "start_character": 0, "end_line": 216, "end_character": 1}, "in_reply_to": "3f79a3b5_03f9184e", "updated": "2018-11-01 09:40:21.000000000", "message": "I hate the idea of a proxy API too. But this is where I remember the discussion at the PTG landing, so its what I put in here as a starting point.\n\nThe alternative I suggested is having a standard usage API that some higher level entity can query, but that didn't seem to go down well.\n\nNow, we could try to assume placement knows about all usage tracked in unified limits, but the discussion with Cinder seemed to suggest that isn't happening any time soon.\n\nWhat would you prefer, dropping this API for now, and see how we tie this all together later? I am quite a fan of that approach myself.", "commit_id": "3c8529ab44369aeac5689189df44431e4389f0eb"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_47969a4e", "line": 70, "range": {"start_line": 70, "start_character": 42, "end_line": 70, "end_character": 48}, "updated": "2019-04-30 23:46:57.000000000", "message": "ram", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_27992678", "line": 101, "range": {"start_line": 101, "start_character": 0, "end_line": 101, "end_character": 6}, "updated": "2019-04-30 23:46:57.000000000", "message": "defined", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_07aae26f", "line": 103, "updated": "2019-04-30 23:46:57.000000000", "message": "Why not? The API shows that registered limits and project limits have to be queried separately, implying that we would know whether it's a registered limit or a project limit:\n\nhttps://developer.openstack.org/api-ref/identity/v3/index.html?expanded=#show-registered-limit-details\nhttps://developer.openstack.org/api-ref/identity/v3/index.html?expanded=#show-registered-limit-details\n\nOr did you mean something else?", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_7fb47ed1", "line": 103, "in_reply_to": "ffb9cba7_07aae26f", "updated": "2019-05-01 21:05:23.000000000", "message": "hmm, good point...\n\nI was thinking about us always just making the single API call to get a the list of limits for a specific token.\n\n... but you are correct, we could use the admin API to double check things.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "6d0a9ec4e6ef08f47e8253fec69b8bf4fccdc34d", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_fa15dce5", "line": 103, "in_reply_to": "ffb9cba7_7fb47ed1", "updated": "2019-05-01 21:37:49.000000000", "message": "Related to my other comment later in the file, I understand now that the API call to /limits will return a registered limit if a project override doesn't exist. So I agree, we may as well treat it so that the operator must migrate everything first before turning on unified limits.\n\nAnother thought, we could detect migration doneness by checking that all legacy nova limits are gone from the database (assuming that the nova-manage migration will delete legacy limits after confirming they've been moved to keystone).", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_8732525d", "line": 213, "range": {"start_line": 213, "start_character": 24, "end_line": 213, "end_character": 48}, "updated": "2019-04-30 23:46:57.000000000", "message": "These are counted per user (all members of server group filtered on user)", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_1fcd4265", "line": 213, "range": {"start_line": 213, "start_character": 24, "end_line": 213, "end_character": 48}, "in_reply_to": "ffb9cba7_8732525d", "updated": "2019-05-01 21:05:23.000000000", "message": "ah, ooops, thanks.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_e71a2eca", "line": 225, "updated": "2019-04-30 23:46:57.000000000", "message": "I wouldn't have expected we'd want to do this. Shouldn't the limits be changed only via the unified limits API? That is, operators should call the keystone API to create new limits or change limits. And if anything, deprecate the configuration file setting of any quota limits.\n\n(later)\n\nOr is this just saying use the config option values as a default if an operator has never added any quota limits to the keystone limits API?", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_5fce5a2d", "line": 225, "in_reply_to": "ffb9cba7_e71a2eca", "updated": "2019-05-01 21:05:23.000000000", "message": "Sorry, bad wording. The idea is these don't get migrated to keystone, and we drop the Nova API support to change the config.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_2771260d", "line": 237, "updated": "2019-04-30 23:46:57.000000000", "message": "Sorry, I don't quite understand why recheck_quota wouldn't work for cores, ram, and instance counts via unified limits? Is it because oslo.limit will take care of that for us via verify()?", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_9fbff25f", "line": 237, "in_reply_to": "ffb9cba7_2771260d", "updated": "2019-05-01 21:05:23.000000000", "message": "Sorry, I mean just for this small subset of deprecated items.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 1207, "name": "Duncan Thomas", "email": "duncan.thomas@gmail.com", "username": "duncan-thomas"}, "change_message_id": "33c807a31669bcdf91bcb1cec0f705bfab28161a", "unresolved": false, "patch_set": 6, "id": "3f79a3b5_70d4741e", "line": 363, "range": {"start_line": 361, "start_character": 0, "end_line": 363, "end_character": 42}, "updated": "2018-11-09 17:01:57.000000000", "message": "I'm pretty sure that this has been answered elsewhere, but I've been out of the loop for a while and I think there's value in calling it out here.\n\nBased on reading the proposed code, this new approach will have races such that it is possible to (probably only sightly) exceed limits via multiple parallel requests, since there's no reservation system and a noticeable gap (seconds are conceivable) between time-of-check and time-of-use. Is this correct?", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_9f32920f", "line": 363, "range": {"start_line": 361, "start_character": 0, "end_line": 363, "end_character": 42}, "in_reply_to": "3f79a3b5_70d4741e", "updated": "2019-05-01 21:05:23.000000000", "message": "It has the same issues as our existing code. Granted the old code appeared less racey, on first inspection.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cccc2e96c51552b9ad07e3e03ffd8c1581c0efa2", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_278da6d2", "line": 403, "updated": "2019-04-30 23:46:57.000000000", "message": "I don't quite understand this. Is this implying that if there's a registered limit for a resource in keystone, then a query for a per project limit for the resource would return the registered limit if a per project limit has not been created?", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "df8339c3d838e22f9a44957fb191516895016920", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_bf20b6ad", "line": 403, "in_reply_to": "ffb9cba7_278da6d2", "updated": "2019-05-01 21:05:23.000000000", "message": "Yes, I believe that is the case. You just get the \"active\" list of limits.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "6d0a9ec4e6ef08f47e8253fec69b8bf4fccdc34d", "unresolved": false, "patch_set": 6, "id": "ffb9cba7_ba6684c0", "line": 403, "in_reply_to": "ffb9cba7_bf20b6ad", "updated": "2019-05-01 21:37:49.000000000", "message": "I confirmed today with Lance that indeed, this is how the API works (and I think makes sense). If there's a registered limit for a resource in keystone (aka default limit) then a query for a per project limit for the resource returns the registered limit if there's no override available.", "commit_id": "9f508adf196f6c2254b332a9b66aec9e9a7af286"}], "specs/train/approved/unified-limits-nova.rst": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_0c881b1d", "line": 21, "updated": "2019-05-22 19:57:13.000000000", "message": "++", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_4c937350", "line": 55, "range": {"start_line": 55, "start_character": 17, "end_line": 55, "end_character": 20}, "updated": "2019-05-22 19:57:13.000000000", "message": "?", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_acfa2f72", "line": 58, "updated": "2019-05-22 19:57:13.000000000", "message": "Note that this would include both: (1) resource classes that are baked into the flavor like cores and ram (disk would be a new one that we don't currently support today) and (2) resource classes that are included in flavor extra_specs.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_e08a1468", "line": 58, "in_reply_to": "bfb3d3c7_acfa2f72", "updated": "2019-05-28 20:15:12.000000000", "message": "Yes, that is my intent there.\n\nIdeally any that are *implied* by the flavor too, but first things first.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_2f907143", "line": 88, "updated": "2019-05-22 19:57:13.000000000", "message": "Note that until consumer types are available in placement, we must obtain server count from the API database in nova.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_e0ef741b", "line": 88, "in_reply_to": "bfb3d3c7_2f907143", "updated": "2019-05-28 20:15:12.000000000", "message": "Yeah, I went for that here:\nhttps://review.opendev.org/#/c/615180", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, "change_message_id": "bb42ff1c681dc0815a1d0f7468a7f02209825534", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_27cef1b3", "line": 107, "range": {"start_line": 107, "start_character": 3, "end_line": 107, "end_character": 7}, "updated": "2019-05-29 15:54:02.000000000", "message": "*figure?", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_0c39fb3f", "line": 109, "updated": "2019-05-22 19:57:13.000000000", "message": "Nice find.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_60db847b", "line": 109, "in_reply_to": "bfb3d3c7_0c39fb3f", "updated": "2019-05-28 20:15:12.000000000", "message": "It totally changed my plans :)", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_cc3a0333", "line": 121, "range": {"start_line": 121, "start_character": 23, "end_line": 121, "end_character": 32}, "updated": "2019-05-22 19:57:13.000000000", "message": "respect", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_8c4babae", "line": 124, "updated": "2019-05-22 19:57:13.000000000", "message": "Hm, while this makes sense considering the behavior of counting quota usage from placement (doubling of allocations during a move), note that we are _not_ actually checking old flavor + new flavor against the quota limit during the initial check. The recheck however would catch it because it does a \"zero\" delta check and usage [after claiming resources in placement] will reflect old flavor + new flavor.\n\nAlso note that we ideally _don't_ want to be quota checking or counting old flavor + new flavor during an unconfirmed resize, but we currently have no way of excluding migration-only placement allocations. That possibility comes later if/when consumer types is added to placement: https://review.opendev.org/654799\n\nAll of that aside, I'm now wondering if I should be changing the math for how we do the initial quota check for resize in the count quota usage from placement patch series.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_e0d8d47b", "line": 124, "in_reply_to": "bfb3d3c7_8c4babae", "updated": "2019-05-28 20:15:12.000000000", "message": "So I change that in the POC, for just the new flow:\nhttps://review.opendev.org/#/c/615180\n\nWe could call that a bug in the proposed new flow... but it's too tricky to fix that with the current separation of concerns.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_ec9fc700", "line": 131, "range": {"start_line": 131, "start_character": 18, "end_line": 131, "end_character": 22}, "updated": "2019-05-22 19:57:13.000000000", "message": "the", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_6f4bc958", "line": 153, "updated": "2019-05-22 19:57:13.000000000", "message": "As far as I understand it, we should get two-level hierarchy for free, assuming oslo.limit already has support. That is, we pass a counting method to oslo.limit which takes a project, and if oslo.limit is configured for two-level hierarchy mode, it will obtain the list of projects that need counting from keystone and then call our counting method once per project and do the appropriate math with the results and then enforce.\n\nBut as I typed all that, I'm thinking there's probably no support for that yet in oslo.limit, so your statement here is accurate.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, "change_message_id": "bb42ff1c681dc0815a1d0f7468a7f02209825534", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_47d6852a", "line": 153, "in_reply_to": "bfb3d3c7_20ba6c09", "updated": "2019-05-29 15:54:02.000000000", "message": "There's no support for anything in oslo.limit yet, but that fits my understanding of the intended behavior.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_20ba6c09", "line": 153, "in_reply_to": "bfb3d3c7_6f4bc958", "updated": "2019-05-28 20:15:12.000000000", "message": "Yeah, +1. I am trying to write the oslo.limit callback so that would work:\nhttps://github.com/JohnGarbutt/oslo.limit/commit/a5b908046fd904c25b6cd15c65266c747774b5ab", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_6fb9892c", "line": 172, "range": {"start_line": 172, "start_character": 32, "end_line": 172, "end_character": 48}, "updated": "2019-05-22 19:57:13.000000000", "message": "per server group, per user :)", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "15c370e7b5760633d9a85060125843a7ece1fcc2", "unresolved": false, "patch_set": 9, "id": "9fb8cfa7_a13edf26", "line": 172, "range": {"start_line": 172, "start_character": 32, "end_line": 172, "end_character": 48}, "in_reply_to": "bfb3d3c7_204fcc34", "updated": "2019-06-04 22:56:42.000000000", "message": "Ohhh, right, I see now. My bad.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_204fcc34", "line": 172, "range": {"start_line": 172, "start_character": 32, "end_line": 172, "end_character": 48}, "in_reply_to": "bfb3d3c7_6fb9892c", "updated": "2019-05-28 20:15:12.000000000", "message": "So I am changing that here. I should make it clear that is a change.\n\nAs on operator, I want members of a server group, not per user. Seems like a bug in the current system frankly.\n\nIf you let people add users, suddenly they are allowed bigger server groups than you expect, causing all sorts of bigger packing issues than you expected.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_af98e1bf", "line": 190, "range": {"start_line": 190, "start_character": 37, "end_line": 190, "end_character": 45}, "updated": "2019-05-22 19:57:13.000000000", "message": "updated", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_2f6151aa", "line": 206, "updated": "2019-05-22 19:57:13.000000000", "message": "Hm, I don't quite agree with this proposal because I think it's common for users to want to see limits and usage rolled up together and today our /limits API does that and will easily be adapted to call keystone for limits. This is transparent to the REST API related code because it calls nova.quota.* APIs and I expect those are the ones that will change to call keystone if 'quota.enforce_unified_limits = True'. So the /limits API will reflect the results correctly and transparently. The /limits API similarly calls nova.quota.* APIs for resource counts, which also works seamlessly whether 'quota.count_usage_from_placement' is True or not.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "15c370e7b5760633d9a85060125843a7ece1fcc2", "unresolved": false, "patch_set": 9, "id": "9fb8cfa7_a1a25f99", "line": 206, "in_reply_to": "bfb3d3c7_20726c4a", "updated": "2019-06-04 22:56:42.000000000", "message": "The sentence on L208 says that the APIs will be removed (which I assume means return 404) in a new microversion as part of this spec, which to me means they will not work as they do today with the new microversion.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_20726c4a", "line": 206, "in_reply_to": "bfb3d3c7_2f6151aa", "updated": "2019-05-28 20:15:12.000000000", "message": "To be clear, the APIs all still work as they do today, it would just be a hint to users (like with the neutron proxy APIs), that this is no longer the best way to do it.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "bcb046f1541afa52c06482f363f071ef2f8fbd0e", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_8f171dee", "line": 211, "updated": "2019-05-22 19:57:13.000000000", "message": "I'd prefer not to get rid of the /limits API because I think seeing usage and limits side-by-side is a common use case not fulfilled by anything else.\n\nif this is simultaneously proposing to add a command (or modify the existing one) in OSC to support showing limits and usage together, I could possibly see it being OK. But I don't think we should remove it in a new microversion until an alternative is made available.\n\nAlso note, an OSC rollup command will not solve the problem of being able to get a rollup summary via the REST API if not using a CLI. That means horizon will have to do separate queries to keystone and placement.\n\nAnother note, until we have consumer types in placement, we can't count instances from placement. So I think it's too early on to remove /limits in a microversion.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "872d0a904a3babcec840d19c7ab986dac62bab4d", "unresolved": false, "patch_set": 9, "id": "bfb3d3c7_e0345495", "line": 211, "in_reply_to": "bfb3d3c7_8f171dee", "updated": "2019-05-28 20:15:12.000000000", "message": "The instance count thing is a worry. The user can just list instances and get their current count.\n\nThe real reason I really want to kill it is because its miss-leading in the non-flat case. It says you can build things, but the parent limit applies, and you can't.\n\nI kinda see this as something keystone might want to be responsible for the API, so it deals with all those differences. But I think they felt strongly about pushing that issue to the client for now, while we work it out.\n\n... but honestly, I am fine with not removing it yet, until we have the full story worked out.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "15c370e7b5760633d9a85060125843a7ece1fcc2", "unresolved": false, "patch_set": 9, "id": "9fb8cfa7_a1d01ff9", "line": 211, "in_reply_to": "bfb3d3c7_e0345495", "updated": "2019-06-04 22:56:42.000000000", "message": "OK, if it will be misleading, I understand now why you would like to remove it.\n\nBut I don't yet understand what this looks like when we call keystone for the limits in a two-level hierarchy context -- what will it return to us for a limit? I would have thought what it returns would reflect what would be enforced if the user were to ask for resources, and thus not be misleading. This may just be me not fully understanding behavior in a two-level hierarchy.", "commit_id": "1d654ba40b513501474f9953cf45676b818899ec"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_21798ffb", "line": 98, "updated": "2019-06-04 23:38:04.000000000", "message": "And also the user_id data migration, which was added in Stein.\n\nNote that 'nova-status upgrade check' will not guarantee that the migration has been completed -- only a blocker migration can do that, and from what we discussed on the counting quotas from placement patch series, Train is too aggressive for adding a blocker migration. 'nova-status upgrade check' can at best advise an operator to complete certain actions before carrying out an upgrade to Train. We'll want to consult with mriedem on whether the upgrade check should be a warning or a failure for the queued_for_delete and user_id data migrations.\n\nWhat will we do if the data migration hasn't been completed? Same as we're doing in the counting quota usage from placement series? Falling back to old system 'if not queued_for_delete_user_id_populated'?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "a22597e33c7bc7f1bca7c6064daaa66cc0484e75", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_bb283a86", "line": 98, "in_reply_to": "9fb8cfa7_129852be", "updated": "2019-06-05 15:18:12.000000000", "message": "I'm pretty sure he meant anytime in Train was considered too aggressive for a blocker migration (where a Train 'nova-manage api_db sync' will raise/fail until operator completes particular Stein data migration). But we should double check with mriedem to make sure.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_129852be", "line": 98, "in_reply_to": "9fb8cfa7_21798ffb", "updated": "2019-06-05 09:39:24.000000000", "message": "I thought it was beginning of train that was too aggressive, but I am OK with that.\n\nMy current patch just throws an exception if there exisits any non-migrated thing.\n\nI think that is OK, given you need to do a bunch of keystone migrations to use this stuff anyways. We could maybe do the check in that tooling too, i.e. fail to migrate if the above data migration is not complete? Probably over thinking it there.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_21f0af67", "line": 104, "updated": "2019-06-04 23:38:04.000000000", "message": "We'll also need to ensure that if CONF.quota.enforce_unified_limits=True then CONF.quota.count_usage_from_placement=True too. Maybe add a note that we will do some kind of config option validation and fail service start (or something?) if there's a mismatch?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "1fc85bf501a003dedf018e535f648b41bb055454", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_f428ea34", "line": 104, "in_reply_to": "9fb8cfa7_18f94c4c", "updated": "2019-06-06 17:03:02.000000000", "message": "I mean this really:\nhttps://review.opendev.org/#/c/615180/9/nova/limits/keystone.py\n\nBasically the current quota code uses the NoOp driver, and it's a parallel implementation that only knows how to count in placement.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_52cc8abb", "line": 104, "in_reply_to": "9fb8cfa7_21f0af67", "updated": "2019-06-05 09:39:24.000000000", "message": "I think we just ignore the count_usage_from_placement config, as by definition we always use placement with the unified limits code.\n\nI think the best approach is to keep this as totally separate quota code.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "a22597e33c7bc7f1bca7c6064daaa66cc0484e75", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_18f94c4c", "line": 104, "in_reply_to": "9fb8cfa7_52cc8abb", "updated": "2019-06-05 15:18:12.000000000", "message": "OK, so you mean we'll do something like this to guard counting quota usage from placement:\n\n if CONF.quota.count_usage_from_placement OR CONF.quota.enforce_unified_limits:", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "089b08c798cc56e1dacf1a605bd699883ce39b6b", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_963a09e5", "line": 130, "updated": "2019-06-04 13:36:49.000000000", "message": "zeno's paradox?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_b26386b1", "line": 130, "in_reply_to": "9fb8cfa7_21950fe5", "updated": "2019-06-05 09:39:24.000000000", "message": "Actually, we end up having to optionally call oslo.limit in the second place to do the re-check... been working through that in the WIP patch.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_21950fe5", "line": 130, "in_reply_to": "9fb8cfa7_963a09e5", "updated": "2019-06-04 23:38:04.000000000", "message": "I googled and still not sure what you mean by that. :P But this is just saying that 'recheck' is optional in oslo.limit so we'll continue to recheck or not based on what the operator has configured in nova.conf. We'll just be telling oslo.limit whether to recheck or not since we'll no longer have our own quota enforce code.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "9cf5769deb97ea57dec34cc94c90b92985753fc0", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_92be8263", "line": 130, "in_reply_to": "9fb8cfa7_b26386b1", "updated": "2019-06-05 09:58:16.000000000", "message": "Ah, you mean the tortoise and the hair thing... Well, we wait for the hair to overtake, so its fine... (hides).", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_c173d3e6", "line": 226, "range": {"start_line": 226, "start_character": 0, "end_line": 226, "end_character": 11}, "updated": "2019-06-04 23:38:04.000000000", "message": "Did you mean the limits API? Because otherwise, getting the server count via 'server list' would involve the caller having to parse the response and count the number of servers, unless I'm missing something.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "a22597e33c7bc7f1bca7c6064daaa66cc0484e75", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_58ad842f", "line": 226, "range": {"start_line": 226, "start_character": 0, "end_line": 226, "end_character": 11}, "in_reply_to": "9fb8cfa7_32f476cf", "updated": "2019-06-05 15:18:12.000000000", "message": "Yeah... just thinking that UX will not be well liked by operators.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "1fc85bf501a003dedf018e535f648b41bb055454", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_54d77624", "line": 226, "range": {"start_line": 226, "start_character": 0, "end_line": 226, "end_character": 11}, "in_reply_to": "9fb8cfa7_58ad842f", "updated": "2019-06-06 17:03:02.000000000", "message": "Agreed, it is horrible.\n\nI think we need some API to aggregate this stuff between all the difference services. Starting with some client side libs to work out what we would do in the service. But thats all after we get this merged in Nova (and I plan to do something similar in Glance).", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_32f476cf", "line": 226, "range": {"start_line": 226, "start_character": 0, "end_line": 226, "end_character": 11}, "in_reply_to": "9fb8cfa7_c173d3e6", "updated": "2019-06-05 09:39:24.000000000", "message": "I my head they use the SDK then do len(instances), but yeah that is the best we have right now.\n\nI am basically trying to say, don't use the Proxy APIs, unless you have to.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_34046b15", "line": 258, "updated": "2019-06-04 23:38:04.000000000", "message": "I had been thinking we would deprecate /os-quota-sets and /os-quota-class-sets because all they do is let people modify the in-database quota limits. But, I can't help but think that would seem kind of wrong if unified limits in nova are optional and opt-in. And would be more appropriate when we get to the point where quota.enforce_unified_limits is the default. Am I thinking about that right?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_722bce2f", "line": 258, "in_reply_to": "9fb8cfa7_34046b15", "updated": "2019-06-05 09:39:24.000000000", "message": "I was thinking the same thing, sort it out when we make it the default.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_a15fbf3f", "line": 260, "range": {"start_line": 259, "start_character": 42, "end_line": 260, "end_character": 47}, "updated": "2019-06-04 23:38:04.000000000", "message": "This might answer my earlier question about why/how the GET /limits view could be misleading. The limits should be OK but the usage wouldn't be correct, because only oslo.limit will be doing all the math needed for the usage. So the problem would be it would show hierarchical limits but not hierarchical usage. Hmm.\n\nBut I guess, at present, we it's not yet possible to do the two-level hierarchy in oslo.limit, but when it becomes possible, that's when we should consider deprecating the /limits API.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_321d560f", "line": 260, "range": {"start_line": 259, "start_character": 42, "end_line": 260, "end_character": 47}, "in_reply_to": "9fb8cfa7_a15fbf3f", "updated": "2019-06-05 09:39:24.000000000", "message": "Ah... I had not thought of making olso.limit tell us the usage, that seems a very good way to do it.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "68e532c414f3aa2236a794d6b5339c0449ee4999", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_d4562f07", "line": 268, "range": {"start_line": 265, "start_character": 60, "end_line": 268, "end_character": 33}, "updated": "2019-06-04 23:38:04.000000000", "message": "As mentioned earlier, in theory I would be +1 for deprecating /os-quota-sets and /os-quota-class-sets APIs to return 404 in a new microversion, but I worry that doesn't correlate with unified limits usage being optional and opt-in. That is, a user in the position of running Train with defaults gets rejected in the new microversion to update quota limits and at the same time cannot use unified limits because they didn't opt-in.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_72e0aefb", "line": 268, "range": {"start_line": 265, "start_character": 60, "end_line": 268, "end_character": 33}, "in_reply_to": "9fb8cfa7_d4562f07", "updated": "2019-06-05 09:39:24.000000000", "message": "Yeah, I think we deprecate it once we make unified limits the default.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_b4c29b84", "line": 290, "range": {"start_line": 290, "start_character": 7, "end_line": 290, "end_character": 17}, "updated": "2019-06-05 00:00:14.000000000", "message": "Heh, we don't ever want to say \"skip level\" anymore. :) It's \"fast-forward upgrades\" to ensure ppl don't get confused that they cannot actually \"skip\" any release's code/db sync/data migration.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_32e23603", "line": 290, "range": {"start_line": 290, "start_character": 7, "end_line": 290, "end_character": 17}, "in_reply_to": "9fb8cfa7_b4c29b84", "updated": "2019-06-05 09:39:24.000000000", "message": "ah, oops :)", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_343c6b92", "line": 297, "range": {"start_line": 297, "start_character": 21, "end_line": 297, "end_character": 42}, "updated": "2019-06-05 00:00:14.000000000", "message": "Maybe better named as generate_registered_limits as the output will be some formatted thing representing the limits for keystone-manage to consume, right?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_f2eb3ed9", "line": 297, "range": {"start_line": 297, "start_character": 21, "end_line": 297, "end_character": 42}, "in_reply_to": "9fb8cfa7_343c6b92", "updated": "2019-06-05 09:39:24.000000000", "message": "good call.", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_944af724", "line": 302, "range": {"start_line": 302, "start_character": 21, "end_line": 302, "end_character": 39}, "updated": "2019-06-05 00:00:14.000000000", "message": "Maybe generate_project_limits?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_b2bf06cf", "line": 302, "range": {"start_line": 302, "start_character": 21, "end_line": 302, "end_character": 39}, "in_reply_to": "9fb8cfa7_944af724", "updated": "2019-06-05 09:39:24.000000000", "message": "+1", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_1405a7c2", "line": 354, "range": {"start_line": 354, "start_character": 28, "end_line": 354, "end_character": 33}, "updated": "2019-06-05 00:00:14.000000000", "message": "Train", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_d40e2fe4", "line": 361, "updated": "2019-06-05 00:00:14.000000000", "message": "This is no longer true, right?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_32cb1673", "line": 361, "in_reply_to": "9fb8cfa7_d40e2fe4", "updated": "2019-06-05 09:39:24.000000000", "message": "oops", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "089b08c798cc56e1dacf1a605bd699883ce39b6b", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_3119e778", "line": 429, "range": {"start_line": 429, "start_character": 2, "end_line": 429, "end_character": 8}, "updated": "2019-06-04 13:36:49.000000000", "message": "two t?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_92a1a2ac", "line": 429, "range": {"start_line": 429, "start_character": 2, "end_line": 429, "end_character": 8}, "in_reply_to": "9fb8cfa7_3119e778", "updated": "2019-06-05 09:39:24.000000000", "message": "oops", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "d28f645fa5247bce8a2c5d341fc81020327bacb4", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_142e0743", "line": 434, "range": {"start_line": 434, "start_character": 15, "end_line": 434, "end_character": 24}, "updated": "2019-06-05 00:00:14.000000000", "message": "What's os_limits?", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "637f0e05c0689e4e23a2e5a5d5162ddfe2c3ace1", "unresolved": false, "patch_set": 10, "id": "9fb8cfa7_52ab2a88", "line": 434, "range": {"start_line": 434, "start_character": 15, "end_line": 434, "end_character": 24}, "in_reply_to": "9fb8cfa7_142e0743", "updated": "2019-06-05 09:39:24.000000000", "message": "I have no idea", "commit_id": "bda93e9a38964e83e84ffdae7a1ec84cfe41138f"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_3fcd9f30", "line": 18, "range": {"start_line": 18, "start_character": 40, "end_line": 18, "end_character": 46}, "updated": "2019-06-12 16:47:47.000000000", "message": "nit: limit*\n\nKeystone doesn't have the concept of a \"quota\" per se. We have limits on resources and leave the usage and claim calculation to the service.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_404982b4", "line": 18, "range": {"start_line": 18, "start_character": 40, "end_line": 18, "end_character": 46}, "in_reply_to": "9fb8cfa7_3fcd9f30", "updated": "2019-06-13 13:48:06.000000000", "message": "True..., bad wording.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_5f7f33aa", "line": 37, "range": {"start_line": 37, "start_character": 2, "end_line": 37, "end_character": 12}, "updated": "2019-06-12 16:47:47.000000000", "message": "Inconsistent*?\n\nThese are a list of short-comings with the previous approach, right?", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_80d8daee", "line": 37, "range": {"start_line": 37, "start_character": 2, "end_line": 37, "end_character": 12}, "in_reply_to": "9fb8cfa7_5f7f33aa", "updated": "2019-06-13 13:48:06.000000000", "message": "Yeah, oops. For some reason I wrote this line as a requirement not a problem (facepalm).", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_c2102c51", "line": 135, "range": {"start_line": 135, "start_character": 20, "end_line": 135, "end_character": 74}, "updated": "2019-06-12 16:47:47.000000000", "message": "Does this mean you'll need oslo.limit to do the recheck right away? Or are you planning on writing the recheck into nova and pulling it into oslo.limit later?", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_8b10fb4f", "line": 135, "range": {"start_line": 135, "start_character": 20, "end_line": 135, "end_character": 74}, "in_reply_to": "9fb8cfa7_c2102c51", "updated": "2019-06-13 13:48:06.000000000", "message": "The recheck is actually in a difference process (nova-conductor vs nova-api), so it is the second one.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_e80c2f95", "line": 171, "range": {"start_line": 169, "start_character": 43, "end_line": 171, "end_character": 61}, "updated": "2019-06-12 16:47:47.000000000", "message": "This is already supported in keystone.\n\nThe way we were thinking about doing this was to have oslo.limit query keystone for the limit model [0][1][2]. Then they would query for the limits associated to a particular project. If the enforcement model is hierarchical, oslo.limit asks for the project hierarchy with all limits.\n\nAt that point, it's a matter of having oslo.limit iterate the list of projects and calculate usage. If oslo.limit has a calculate_usage_for_projects() callback from the service, that could be used.\n\n[0] https://developer.openstack.org/api-ref/identity/v3/index.html#get-enforcement-model\n[1] http://specs.openstack.org/openstack/keystone-specs/specs/keystone/stein/domain-level-limit.html\n[2] http://specs.openstack.org/openstack/keystone-specs/specs/keystone/rocky/strict-two-level-enforcement-model.html", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_2b1b0f73", "line": 171, "range": {"start_line": 169, "start_character": 43, "end_line": 171, "end_character": 61}, "in_reply_to": "9fb8cfa7_e80c2f95", "updated": "2019-06-13 13:48:06.000000000", "message": "Agreed.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_e85aef80", "line": 209, "range": {"start_line": 208, "start_character": 0, "end_line": 209, "end_character": 68}, "updated": "2019-06-12 16:47:47.000000000", "message": "This might be because I'm not entirely familiar with the background, but is there a reason why moving to unified limits wouldn't maintain this behavior?", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_ab6e1fc6", "line": 209, "range": {"start_line": 208, "start_character": 0, "end_line": 209, "end_character": 68}, "in_reply_to": "9fb8cfa7_e85aef80", "updated": "2019-06-13 13:48:06.000000000", "message": "The idea is just to try and make them as simple as possible to maintain, and note move this subset of limits to keystone, as no operators are known to need to change these values on a per project basis.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_08d3c3d6", "line": 232, "range": {"start_line": 232, "start_character": 11, "end_line": 232, "end_character": 51}, "updated": "2019-06-12 16:47:47.000000000", "message": "nit:\n\nWhen placement implements*\n\nor\n\nUntil placement implements*", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_2b622fd9", "line": 232, "range": {"start_line": 232, "start_character": 11, "end_line": 232, "end_character": 51}, "in_reply_to": "9fb8cfa7_08d3c3d6", "updated": "2019-06-13 13:48:06.000000000", "message": "oops, yes.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_53a72cbe", "line": 312, "range": {"start_line": 312, "start_character": 69, "end_line": 312, "end_character": 72}, "updated": "2019-06-12 16:47:47.000000000", "message": "It here is the nova-manage command, right? Not the keystone-manage command?\n\nIIRC, we were going to have nova-manage dump output to a file. Then keystone will write a `keystone-manage import_limits nova-limits.json` that places the limits in keystone's database directly.\n\nIs that still the plan?", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_4bb2034b", "line": 312, "range": {"start_line": 312, "start_character": 69, "end_line": 312, "end_character": 72}, "in_reply_to": "9fb8cfa7_53a72cbe", "updated": "2019-06-13 13:48:06.000000000", "message": "Sorry, what you say is the plan, this older wording is very missleading, will fix it.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "8a179d9823732607df8c3443367ecf5050f63b63", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_7376f040", "line": 330, "range": {"start_line": 330, "start_character": 45, "end_line": 330, "end_character": 70}, "updated": "2019-06-12 16:47:47.000000000", "message": "I hate to be that guy... but what happens if we're dealing with a project that's been deleted in keystone? Is it possible for nova to have quotas for non-existent projects? In that case, would:\n\n\n* operator generates limits for a non-existent project\n* operator attempts to import limits in keystone\n* keystone fails because the project doesn't exist\n* operator prunes quota and limits for the project in nova\n* retry steps 1 and 2", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "ca57eacbbcc523e6e3fcb2ff2e8e5f52bd661a72", "unresolved": false, "patch_set": 11, "id": "9fb8cfa7_2b90ef94", "line": 330, "range": {"start_line": 330, "start_character": 45, "end_line": 330, "end_character": 70}, "in_reply_to": "9fb8cfa7_7376f040", "updated": "2019-06-13 13:48:06.000000000", "message": "Yeah, good point, that is totally a thing.\n\nMaybe we reverse that, get list of project from keystone, iterate through, and see what is left at the end.", "commit_id": "ef28ae67f3813d2f0ec981309f01b143ab4046cb"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_d3c3d756", "line": 110, "range": {"start_line": 110, "start_character": 1, "end_line": 110, "end_character": 40}, "updated": "2019-07-03 01:39:21.000000000", "message": "i assume this is read by the nova api?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_e8bffda7", "line": 110, "range": {"start_line": 110, "start_character": 1, "end_line": 110, "end_character": 40}, "in_reply_to": "9fb8cfa7_d3c3d756", "updated": "2019-07-03 14:33:18.000000000", "message": "Sort of, this is what is used today anywhere we check quotas, usually this is in the nova-api process, although not always (once in nova-conductor).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_b39bc371", "line": 115, "range": {"start_line": 115, "start_character": 0, "end_line": 115, "end_character": 40}, "updated": "2019-07-03 01:39:21.000000000", "message": "i guess we will deprecate this when we enable unified limits by default and remove both this and hte new option above when that is the only thing we support.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_4832c960", "line": 115, "range": {"start_line": 115, "start_character": 0, "end_line": 115, "end_character": 40}, "in_reply_to": "9fb8cfa7_b39bc371", "updated": "2019-07-03 14:33:18.000000000", "message": "Yes, it has no meaning in the new quota code, it would get deprecated when we deprecate the old quota code (in a release or so in the future).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_13788f29", "line": 118, "range": {"start_line": 118, "start_character": 16, "end_line": 118, "end_character": 31}, "updated": "2019-07-03 01:39:21.000000000", "message": "no cores maps to both VCPUs + PCPUs\n\nfor the transition we shoudl double the quota and give you \"cores\" quato fo both as we dont know if you were using cpu pinning or not.\n\nthis is an implementation detail so its not something i will -1 over but if you respin the patch it would be good to update this.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_53860716", "line": 118, "range": {"start_line": 118, "start_character": 60, "end_line": 118, "end_character": 69}, "updated": "2019-07-03 01:39:21.000000000", "message": "this may become harder to tack when we support hugepages in placment depending on how we model that but this makes sense for now.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_8828c1ee", "line": 118, "range": {"start_line": 118, "start_character": 60, "end_line": 118, "end_character": 69}, "in_reply_to": "9fb8cfa7_53860716", "updated": "2019-07-03 14:33:18.000000000", "message": "In some ways it is simpler, we quota on what is claimed in placement, whatever that happens to be.\n\nACK on both quota resources for PCPU, we could transition that way.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_d3de77d9", "line": 124, "range": {"start_line": 124, "start_character": 17, "end_line": 124, "end_character": 25}, "updated": "2019-07-03 00:32:12.000000000", "message": "nix", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_f3c85b57", "line": 137, "range": {"start_line": 135, "start_character": 39, "end_line": 137, "end_character": 20}, "updated": "2019-07-03 01:39:21.000000000", "message": "so we should be checking before and after.\nbefore we first call /allocation_candiates to see if we have enough quota left to fulfil the request and after we claim an allocation candidate to ensure we did not race with a concurrent spawn.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_93979fec", "line": 145, "range": {"start_line": 144, "start_character": 63, "end_line": 145, "end_character": 28}, "updated": "2019-07-03 00:32:12.000000000", "message": "Note: today with counting usage via placement, we compare the upsize delta against the limit and we count old + new flavor for usage. We will be able to do better in the future once consumer types are available in placement:\n\nhttps://docs.openstack.org/placement/latest/specs/train/approved/2005473-support-consumer-types.html", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_c84559b6", "line": 145, "range": {"start_line": 144, "start_character": 63, "end_line": 145, "end_character": 28}, "in_reply_to": "9fb8cfa7_93979fec", "updated": "2019-07-03 14:33:18.000000000", "message": "+1", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_8608bf91", "line": 155, "range": {"start_line": 155, "start_character": 65, "end_line": 155, "end_character": 69}, "updated": "2019-07-03 01:39:21.000000000", "message": "delete the repeated from", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_53a12746", "line": 155, "range": {"start_line": 155, "start_character": 44, "end_line": 155, "end_character": 54}, "updated": "2019-07-03 00:32:12.000000000", "message": "nix?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_66034b78", "line": 155, "range": {"start_line": 155, "start_character": 44, "end_line": 155, "end_character": 54}, "in_reply_to": "9fb8cfa7_53a12746", "updated": "2019-07-03 01:39:21.000000000", "message": "yes and inventory should be plural?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_73030b78", "line": 185, "range": {"start_line": 184, "start_character": 2, "end_line": 185, "end_character": 13}, "updated": "2019-07-03 01:39:21.000000000", "message": "for v1 this makes sense.\n\nfor routed network or for neutorn subnet pools we talked about have a shareing resouce provider or IP at the ptg so we might have a generic limit of ip after those are counted in placmenet but fixed ip vs floaing ip may not be needed.\n\nif in the future we support resouce class + a triat we could many support both but i dont think this is need for v1 so it makes sense to make them out of scope.\n\nan ip espcially a public ipv4 adress is a countable thing.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_68854dcf", "line": 185, "range": {"start_line": 184, "start_character": 2, "end_line": 185, "end_character": 13}, "in_reply_to": "9fb8cfa7_73030b78", "updated": "2019-07-03 14:33:18.000000000", "message": "I should be clear, these are Nova limits no entires in the nova-network database, it has nothing to do with neutron, that is different.\n\nWhatever a port starts need in placement, we could start checking and quotering, but yeah, for v1 I want to keep it simple and focus on what in the flavor.\n\ni.e. I agree with you, I think :)", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_93331f14", "line": 227, "updated": "2019-07-03 00:32:12.000000000", "message": "I hesitate a bit about this based on an old bug someone filed demonstrating how excessively they were able to exceed the keypairs quota limit by making parallel requests:\n\nhttps://bugs.launchpad.net/nova/+bug/1301532\n\nBut perhaps no one is so concerned about it these days?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_a6f06393", "line": 227, "in_reply_to": "9fb8cfa7_93331f14", "updated": "2019-07-03 01:39:21.000000000", "message": "well keyparis are cheap and likely should never had a quota.\n\nbut if we wanted to track things like quotas on key pairs we could technicaly create an RP per poject and have a invtory of custom_keypair and have placmenet do the accounting but i honestly dont think we shoudl really care about quotas on that spefic resouce. i know we said we were not going to do that but if we need to that is one way to do it.\n\nlooking at the config items below on line 230-240 i dont think there really is an concern with any of those.\nbut i dont know. i would personally prefer to remove thos quotas entirely but thats just me.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_e8f7fd58", "line": 227, "in_reply_to": "9fb8cfa7_a6f06393", "updated": "2019-07-03 14:33:18.000000000", "message": "We should still be careful... but I don't care too much, because you can only do that trick once for each project you have access to (or for each user in the keypair case).\n\nI cared more about things that have a \"real\" cost, like CPUs, hence I propose we keep it for instances.\n\nIts a cost vs code complexity thing for me (obviously).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2f056181714f23b4832f98a84ba659f83ba29f84", "unresolved": false, "patch_set": 12, "id": "7faddb67_9ad9fd23", "line": 227, "in_reply_to": "9fb8cfa7_e8f7fd58", "updated": "2019-07-03 20:45:51.000000000", "message": "OK, I am cool with that. Just wanted to mention just in case.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_e6389bd5", "line": 269, "updated": "2019-07-03 00:32:12.000000000", "message": "Hm, realizing this is a tough one, \"requests to change any other quotas will be silently ignored\" -- bad user experience. But what is our alternative? Since enforce_unified_limits is configurable, if we wanted to have the /os-quota*-sets APIs reject in cases where it would be a silent no-op, we'd be making API behavior depend on a config option, which is a no-no.\n\nI dunno... feel like I'm wondering now if it _would_ be better to deprecate the /os-quota*-sets APIs in a new microversion even though enforce_unified_limits is opt-in. But actually that doesn't work because there's no way for e.g. horizon to discover whether the nova it's talking to is configured to enforce_unified_limits or not. So it wouldn't know which API (nova vs keystone) to use to update limits. That's a nonstarter.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_6816ad58", "line": 269, "in_reply_to": "9fb8cfa7_260b137e", "updated": "2019-07-03 14:33:18.000000000", "message": "So... I think ignoring isn't too bad, as we return what we \"changed\" so the UI would show we ignored your change... Did I convince you yet? I am not sure I convinced myself yet.\n\nWhen I deprecated the old API (my preference, I think...) I added a new API that tells you if we are using unified limits or not. Its a dumb API, but I don't see how else API users can find out.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2f056181714f23b4832f98a84ba659f83ba29f84", "unresolved": false, "patch_set": 12, "id": "7faddb67_daf8d57d", "line": 269, "in_reply_to": "9fb8cfa7_6816ad58", "updated": "2019-07-03 20:45:51.000000000", "message": "Yeah, I'm torn about this point. I pinged alex_xu asking him to come look at this, I'd like to see what he has to say. I think we could use some thoughts from the API gang here.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_260b137e", "line": 269, "in_reply_to": "9fb8cfa7_e6389bd5", "updated": "2019-07-03 01:39:21.000000000", "message": "well the other proablem is even if we have a new micorverion were we reject with an error we technicaly should still allow you to set it via the old microverion without an error so we could retun a 404 or perferably a 410 Gone based on the config but that would break tool too.\n\njust ignoring the request on the other hand kind of side steps the issue but i wonder what we would expect if\nset a quota to 10 from a default of 100 and then did a get\nwould it be 10 or 100 for the legacy quotas that are not one of cpu ram and instance.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_06a92fdc", "line": 281, "range": {"start_line": 281, "start_character": 11, "end_line": 281, "end_character": 15}, "updated": "2019-07-03 00:32:12.000000000", "message": "use?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_932552b1", "line": 281, "range": {"start_line": 281, "start_character": 11, "end_line": 281, "end_character": 15}, "in_reply_to": "9fb8cfa7_06a92fdc", "updated": "2019-07-03 14:33:18.000000000", "message": "+1 oops", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_66810b4e", "line": 283, "updated": "2019-07-03 00:32:12.000000000", "message": "I'm wondering what will the change be over in horizon and the clients be at this point. Because they can't know for sure whether nova is configured to enforce_unified_limits or not.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "16c60fa9ee861157e063ccee255be1abdcac8e3c", "unresolved": false, "patch_set": 12, "id": "7faddb67_92f9884e", "line": 283, "in_reply_to": "7faddb67_dacf7555", "updated": "2019-07-10 12:56:33.000000000", "message": "Yeah, +1 all that. I had forgotten about the discovery angle, so I should add that so I don't forget again.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2f056181714f23b4832f98a84ba659f83ba29f84", "unresolved": false, "patch_set": 12, "id": "7faddb67_dacf7555", "line": 283, "in_reply_to": "9fb8cfa7_136722ed", "updated": "2019-07-03 20:45:51.000000000", "message": "OK, so on this bullet point we can assume we will deprecate and point everyone to the keystone APIs _after_ we have a plan for how horizon and the clients should handle it. Was just concerned about potentially leaving horizon and clients in a bind telling them to talk to keystone when there's not a way for them to know whether they should talk to keystone (underlying enforce_unified_limits config).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_a61e23b9", "line": 283, "in_reply_to": "9fb8cfa7_66810b4e", "updated": "2019-07-03 01:39:21.000000000", "message": "ideally we whoudl have a way to discover this from the api but that brings us back to config values should not change api behavior. so im not sure.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_136722ed", "line": 283, "in_reply_to": "9fb8cfa7_a61e23b9", "updated": "2019-07-03 14:33:18.000000000", "message": "Yeah, I did have an API for that in a previous version.\n\nBut I think for this release, we don't make them change anything, until we decide what we really want (but needs fixing before we can deprecate the old code).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_a6bce306", "line": 305, "updated": "2019-07-03 00:32:12.000000000", "message": "I wondered similar, if it would be worth extending the /limits API to have the hierarchy and various resource class limits from keystone if configured, as a stop gap until a unified API solution is thought through... but again that introduces API inconsistency based on configuration setting.\n\nThe more I think about it, the more I think we have to give up the idea of a unified API for looking at limits and usage side-by-side. Because there's no place it could live, it seems. Can't live in keystone, and that's the only close-ish place that makes sense. Maybe it will have to be a client thing, horizon and OSC only.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2f056181714f23b4832f98a84ba659f83ba29f84", "unresolved": false, "patch_set": 12, "id": "7faddb67_9af25d9a", "line": 305, "in_reply_to": "9fb8cfa7_7380de47", "updated": "2019-07-03 20:45:51.000000000", "message": "Ack on all of this.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_7380de47", "line": 305, "in_reply_to": "9fb8cfa7_86975fec", "updated": "2019-07-03 14:33:18.000000000", "message": "I hadn't thought about sean's idea before... and interesting hybrid... but the current concensus with keystone is to leave this as an SDK issue (for the moment). What breaks is with project B, you can't get the usage of your parent A from Nova to work out why you have an issue... so it probably has be some sort of keystone proxy, but they don't want to build that right now (which makes sense).", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_86975fec", "line": 305, "in_reply_to": "9fb8cfa7_a6bce306", "updated": "2019-07-03 01:39:21.000000000", "message": "ya i was thinking of something similar. maybe we could use the hypermidia part of Rest and have a new microverion that when used will retrun a link to keystone limits endpoint if keysone is used and itself if nova limits are used.\n\nkind of like the links section\n\n\"links\": [\n                {\n                    \"href\": \"http://openstack.example.com/v2.1/\",\n                    \"rel\": \"self\"\n                }\n            ],\n\nwe could retrun a link to the api endpoint that shoudl be used used for quota?\n\n\nso for the nova limits we would get abck\n\n\n{\n   \"links\": [\n                {\n                    \"href\": \"http://openstack.example.com/v2.1/limits/\",\n                    \"rel\": \"self\"\n                }\n               {\n                    \"href\": \"http://openstack.example.com/v2.1/limits\",\n                    \"rel\": \"limits_endpoint\"\n                }\n\n            ],\n\n    \"limits\": {\n        \"absolute\": {\n            \"maxImageMeta\": 128,\n            \"maxPersonality\": 5,\n            \"maxPersonalitySize\": 10240,\n            \"maxSecurityGroupRules\": 20,\n            \"maxSecurityGroups\": 10,\n            \"maxServerMeta\": 128,\n            \"maxTotalCores\": 20,\n            \"maxTotalFloatingIps\": 10,\n            \"maxTotalInstances\": 10,\n            \"maxTotalKeypairs\": 100,\n            \"maxTotalRAMSize\": 51200,\n            \"maxServerGroups\": 10,\n            \"maxServerGroupMembers\": 10,\n            \"totalCoresUsed\": 0,\n            \"totalInstancesUsed\": 0,\n            \"totalRAMUsed\": 0,\n            \"totalSecurityGroupsUsed\": 0,\n            \"totalFloatingIpsUsed\": 0,\n            \"totalServerGroupsUsed\": 0\n        },\n        \"rate\": []\n    }\n}\n\nand for keystone unifed limts we would get back\n\n{\n   \"links\": [\n                {\n                    \"href\": \"http://openstack.example.com/v2.1/limits/\",\n                    \"rel\": \"self\"\n                }\n               {\n                    \"href\": \"http://openstack.example.com/keystone/limits/\",\n                    \"rel\": \"limits_endpoint\"\n                }\n \n            ],\n\n    \"limits\": {\n        \"absolute\": {\n            \"maxTotalCores\": 20,\n            \"maxTotalInstances\": 10,\n            \"maxTotalRAMSize\": 51200,\n        },\n        \"rate\": []\n    }\n}", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6d21bf84c17c52308a19d0ea7ed593148c81ea59", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_c68c77d9", "line": 307, "updated": "2019-07-03 01:39:21.000000000", "message": "its late so ill stop reviewing here and review the  rest tomorrow but over all im in favor of the proposal and i hope we can make progress on this in Train.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_263eb38b", "line": 358, "range": {"start_line": 358, "start_character": 29, "end_line": 358, "end_character": 33}, "updated": "2019-07-03 00:32:12.000000000", "message": "warn", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "4767e1d8c7bfba3a9c70cccd6419f52882294919", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_8662ffac", "line": 375, "range": {"start_line": 373, "start_character": 0, "end_line": 375, "end_character": 59}, "updated": "2019-07-03 00:32:12.000000000", "message": "I don't understand this bit. If enforce_unified_limits is False, then the operator is using the legacy quota system and will still need access to the no-op quota driver to stop enforcing quotas, no?", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2f056181714f23b4832f98a84ba659f83ba29f84", "unresolved": false, "patch_set": 12, "id": "7faddb67_5a2aa5e7", "line": 375, "range": {"start_line": 373, "start_character": 0, "end_line": 375, "end_character": 59}, "in_reply_to": "9fb8cfa7_33c0267d", "updated": "2019-07-03 20:45:51.000000000", "message": "Ack, thanks.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a7674f0b66e200bb75f5ccb302daf9e41a5d3043", "unresolved": false, "patch_set": 12, "id": "9fb8cfa7_33c0267d", "line": 375, "range": {"start_line": 373, "start_character": 0, "end_line": 375, "end_character": 59}, "in_reply_to": "9fb8cfa7_8662ffac", "updated": "2019-07-03 14:33:18.000000000", "message": "Hmm... I broke this sentence somehwere.\n\nI was trying to say, if enforce_unified_limits=True, then we do not actually make use of quota.driver, we override it to be the noop driver.\n\nYou are correct, when False we respect the config as we do today.", "commit_id": "98a5a193c6ea179db4e926b41d4ff0d9f1220042"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_3ce99bb6", "line": 198, "range": {"start_line": 197, "start_character": 0, "end_line": 198, "end_character": 44}, "updated": "2019-07-25 23:41:15.000000000", "message": "If I understand correctly, there will be no registered limits for all the below limits in oslo.limits and nova is responsible to count the quota checks for them as it is doing currently?  Only change for them is that user will not be able to update and get them via API?", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3ac138447b066854598739a06fa28fb60b05b1fc", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_183c8e90", "line": 198, "range": {"start_line": 197, "start_character": 0, "end_line": 198, "end_character": 44}, "in_reply_to": "3fa7e38b_7d383bd2", "updated": "2019-10-29 17:16:29.000000000", "message": "ok got it.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_7d383bd2", "line": 198, "range": {"start_line": 197, "start_character": 0, "end_line": 198, "end_character": 44}, "in_reply_to": "7faddb67_3ce99bb6", "updated": "2019-10-25 16:03:13.000000000", "message": "Yes\n\nBut... oslo.limits tries to count things in a given project (or groups of projects), but these are all counting things in a single API request, so its not really in scope for oslo.limits.\n\nThey are not really quotas, they are more like the limit we have that returns a max of 2000 instance rows in one set of results, but on the input. (i.e. they are here purely to protect the database, not real resource usage).", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_3a275e15", "line": 204, "range": {"start_line": 204, "start_character": 12, "end_line": 204, "end_character": 30}, "updated": "2019-07-25 23:41:15.000000000", "message": "is this mean nova will still count keys_pairs per user not project ?", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3ac138447b066854598739a06fa28fb60b05b1fc", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_d8491632", "line": 204, "range": {"start_line": 204, "start_character": 12, "end_line": 204, "end_character": 30}, "in_reply_to": "3fa7e38b_3d2e438c", "updated": "2019-10-29 17:16:29.000000000", "message": "so in this case, the single configuration will apply to all users.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "79cc293b35b31d75b45c27e0706e77a31d35c4de", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_8a1d8163", "line": 204, "range": {"start_line": 204, "start_character": 12, "end_line": 204, "end_character": 30}, "in_reply_to": "3fa7e38b_d8491632", "updated": "2019-10-29 19:37:07.000000000", "message": "Yes.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_3d2e438c", "line": 204, "range": {"start_line": 204, "start_character": 12, "end_line": 204, "end_character": 30}, "in_reply_to": "7faddb67_3a275e15", "updated": "2019-10-25 16:03:13.000000000", "message": "This isn't a change, key pairs are owned by users, not projects.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_9a5e9274", "line": 238, "range": {"start_line": 236, "start_character": 2, "end_line": 238, "end_character": 55}, "updated": "2019-07-25 23:41:15.000000000", "message": "qupta.key_pairs also in this list", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_1dbb470f", "line": 238, "range": {"start_line": 236, "start_character": 2, "end_line": 238, "end_character": 55}, "in_reply_to": "7faddb67_9a5e9274", "updated": "2019-10-25 16:03:13.000000000", "message": "oops, yes.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_fc9c635c", "line": 240, "range": {"start_line": 240, "start_character": 40, "end_line": 240, "end_character": 76}, "updated": "2019-07-25 23:41:15.000000000", "message": "are we going to change the response in this case ? or silently ignored without user notification.\n\nI think siletly ignore is better and not to change the response based on config. Documenting the behaviour in api-ref should be enough for user notification.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3ac138447b066854598739a06fa28fb60b05b1fc", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_33fbab7b", "line": 240, "range": {"start_line": 240, "start_character": 40, "end_line": 240, "end_character": 76}, "in_reply_to": "3fa7e38b_7d703b73", "updated": "2019-10-29 17:16:29.000000000", "message": "got it. make sense.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_7d703b73", "line": 240, "range": {"start_line": 240, "start_character": 40, "end_line": 240, "end_character": 76}, "in_reply_to": "7faddb67_fc9c635c", "updated": "2019-10-25 16:03:13.000000000", "message": "Sorry, I am not sure I undertand you here.\n\nMy take is: DB is no longer updated or read by any other part of the code (except the migration tools). For me it makes little sense for the API to read the DB anymore. If we do read it, we return a value to user can't update, isn't used by the code, and is missleading to the operator (i.e. we now apply a totally different limit, i.e. what is in the configuration). In addition, I believe the default behaviour is that the API returns the default configuration value, where operators have not set that value.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_fa2d46a8", "line": 253, "range": {"start_line": 252, "start_character": 19, "end_line": 253, "end_character": 20}, "updated": "2019-07-25 23:41:15.000000000", "message": "+1. or it should be easily done on SDK or client side. we can add '--count' arg in 'openstack server list' CLI which can just return len(response['servers']).", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_1dfee7ae", "line": 253, "range": {"start_line": 252, "start_character": 19, "end_line": 253, "end_character": 20}, "in_reply_to": "7faddb67_fa2d46a8", "updated": "2019-10-25 16:03:13.000000000", "message": "+1, just the scope already is a bit big :)", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b64b27bca5a833aeaf0e24a977612d671c5d5c3", "unresolved": false, "patch_set": 13, "id": "7faddb67_9c4e8fbf", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 55}, "updated": "2019-07-25 23:41:15.000000000", "message": "Few questions for more clarification on changes in API in each phase.\n\n1. overall proposal is to proxy the APIs and then deprecate without microversion?\n\n2. when you say proxy APIs to keystone and placements, how about\n GET quotas for all those limits which are not going to be in new\n quota system @L200 (servers_groups etc). will existing GET \n/os-quota-sets/{tenant_id} and GET /os-quota-sets/{tenant_id}/detail\n APIs keep working from nova code for them as it is ?\n   - This will not require microversion bump because of no change in\n behaviour or interface.\n\n3. Once the use of unified limits is the default, you mentioned\n that \"we will deprecate the quotas APIs in favour of\n keystone and placement APIs\". I hope, APIs will be deprecated without\n microverison bump and just mark deprecated in api-ref only? \n But can we remove them in this phase? remove means keep url but return\n 410(like we did for certificate, cloudpipe APIs). Because this is the\n phase where all operators are moved to new unified limits and we do not\n need to keep old APIs and system? In your alternate section, I understand\n that the operator requested for current tooling working only till the\n transition period? \n I mean keep proxy APIs only till transition period?", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "79cc293b35b31d75b45c27e0706e77a31d35c4de", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_4a3b09d0", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 55}, "in_reply_to": "3fa7e38b_0ee3e806", "updated": "2019-10-29 19:37:07.000000000", "message": "+1 lets add that.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "6b2a54720d750fa4fb8882505f15422c2706f14c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_0ee3e806", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 55}, "in_reply_to": "3fa7e38b_38e70ae6", "updated": "2019-10-29 17:38:29.000000000", "message": "'- at some cycle in future - remove the APIs.'\n\nRemoving API means returning the 410 and keep the API url. same as we did for cloudpipe, nova-cert, and now nova-net APIs", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3ac138447b066854598739a06fa28fb60b05b1fc", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_38e70ae6", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 55}, "in_reply_to": "3fa7e38b_7dc83b54", "updated": "2019-10-29 17:16:29.000000000", "message": "I agree with the approach. writing down the notes from the hangout call.\n- proxying API is not changing the API so no microversion required that time. \n- Ussuri cycle \n  - proxy the API if `quota.enforce_unified_limits = True` and updates to quota will be ignored. non-unified limits (L197) will operate on configured values only. -L266, 277\n- next cycle (V) - unifed limits is the default. deprecate the APIs and return 404 saying to start using the new unified limits system. This will happen with microversion. older microversion will keep proxying the APIs\n- at some cycle in future - remove the APIs.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "a716b6cfd0f925022abdb55d6201ce463b5240f4", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_7dc83b54", "line": 284, "range": {"start_line": 255, "start_character": 0, "end_line": 284, "end_character": 55}, "in_reply_to": "7faddb67_9c4e8fbf", "updated": "2019-10-25 16:03:13.000000000", "message": "Overall I see this like 2.36, i.e. the nova-network deprecation. The APIs still keep working, but will 404 when you access a new microversion, to message that we want to remove them evertually. At a later time, we do the 410 GONE trick, if we think we can really remove them (i.e. once horizon and openstack cli no longer depends on those APIs).\n\nFundamentally Keystone API can't tell you about usage, that is a service API issue. In theory placement will give you all you need to know (for Nova), so we may start exposing the placement API to end users, for that purpose.\n\nIn all likelihood, we will find a new API that all services that adopt unified limits will need to add in their API, so the openstack client can easily talk to all services, but there is zero consenus on that at this point.\n\n1) answered above, hopefully.\n\n2) that is the plan, we keep it all working in proxy mode, ideally with no microversion bump. I may need to express that more clearly in the spec somehow\n\n3) I don't think we can do 410, the first phase is to copy 2.36 and do the proxy APIs just return 404 in a newer microversion.\n\nHopefully that helps? I am up for having a google hangout to go through the details with a few of us.", "commit_id": "0dd28516da05ea01f6dce2ae4c037bdefc8f8ca5"}], "specs/ussuri/approved/unified-limits-nova.rst": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3ac138447b066854598739a06fa28fb60b05b1fc", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_93505f34", "line": 523, "range": {"start_line": 523, "start_character": 7, "end_line": 523, "end_character": 12}, "updated": "2019-10-29 17:16:29.000000000", "message": "Ussuri", "commit_id": "66d97522e5df07d82b38c576c4a065a24cc34781"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "13c3dfcca170e72208e9a50f120f7456ee57a357", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_2a2ecd8b", "line": 523, "range": {"start_line": 523, "start_character": 7, "end_line": 523, "end_character": 12}, "in_reply_to": "3fa7e38b_93505f34", "updated": "2019-10-29 19:37:39.000000000", "message": "heh, good spot, thanks.", "commit_id": "66d97522e5df07d82b38c576c4a065a24cc34781"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e6fb2545", "line": 63, "range": {"start_line": 63, "start_character": 15, "end_line": 63, "end_character": 23}, "updated": "2020-02-10 14:18:05.000000000", "message": "or others...", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8d66debb", "line": 65, "range": {"start_line": 65, "start_character": 0, "end_line": 65, "end_character": 68}, "updated": "2020-01-27 10:49:28.000000000", "message": "It would be helpful to enumerate these quota types here. They're listed later but for someone not as familiar with keystone (like me), every little extra detail helps", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_a8a0688f", "line": 65, "range": {"start_line": 65, "start_character": 0, "end_line": 65, "end_character": 68}, "in_reply_to": "3fa7e38b_8d66debb", "updated": "2020-01-27 12:34:49.000000000", "message": "I would rather not repeat this detail here, as it seems like a distraction to me, but I could.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_66c73513", "line": 65, "range": {"start_line": 65, "start_character": 0, "end_line": 65, "end_character": 68}, "in_reply_to": "3fa7e38b_a8a0688f", "updated": "2020-02-10 14:18:05.000000000", "message": "Well,just provide an internal link then ;)", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4d0226bc", "line": 73, "range": {"start_line": 72, "start_character": 0, "end_line": 73, "end_character": 71}, "updated": "2020-01-27 10:49:28.000000000", "message": "This reads strangely", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_a8b948c5", "line": 73, "range": {"start_line": 72, "start_character": 0, "end_line": 73, "end_character": 71}, "in_reply_to": "3fa7e38b_4d0226bc", "updated": "2020-01-27 12:34:49.000000000", "message": "What would make it better? A full stop after the first Keystone?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e6d245cf", "line": 73, "range": {"start_line": 72, "start_character": 0, "end_line": 73, "end_character": 71}, "in_reply_to": "3fa7e38b_a8b948c5", "updated": "2020-02-10 14:18:05.000000000", "message": "Not sure I see a problem here.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8d149eeb", "line": 94, "range": {"start_line": 94, "start_character": 2, "end_line": 94, "end_character": 16}, "updated": "2020-01-27 10:49:28.000000000", "message": "``literal`` (double backticks)", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e680059f", "line": 98, "range": {"start_line": 98, "start_character": 0, "end_line": 98, "end_character": 48}, "updated": "2020-02-10 14:18:05.000000000", "message": "++", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8de9fee4", "line": 99, "range": {"start_line": 99, "start_character": 0, "end_line": 99, "end_character": 52}, "updated": "2020-01-27 10:49:28.000000000", "message": "What's this referring to? A link to the migration code itself is fine", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ade4fa0b", "line": 100, "range": {"start_line": 100, "start_character": 32, "end_line": 100, "end_character": 39}, "updated": "2020-01-27 10:49:28.000000000", "message": "``literal``", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e6a9e524", "line": 104, "updated": "2020-02-10 14:18:05.000000000", "message": "A link to the `Upgrade`_ section could help.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0664411f", "line": 108, "updated": "2020-02-10 14:18:05.000000000", "message": "I suspect a default value of False of course ;-)", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0daf4e9d", "line": 110, "updated": "2020-01-27 10:49:28.000000000", "message": "literal here too. Alternatively, consider indenting this and using '::' above (so it's a code block)", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8dc25e53", "line": 112, "range": {"start_line": 112, "start_character": 54, "end_line": 112, "end_character": 67}, "updated": "2020-01-27 10:49:28.000000000", "message": "Can you link here, e.g.\n\n  `later section <name of section you're referring to>`__", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_adbddad1", "line": 113, "range": {"start_line": 113, "start_character": 48, "end_line": 113, "end_character": 67}, "updated": "2020-01-27 10:49:28.000000000", "message": "will have a hard dependency on", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4d9ea669", "line": 114, "range": {"start_line": 114, "start_character": 28, "end_line": 114, "end_character": 29}, "updated": "2020-01-27 10:49:28.000000000", "message": ";", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c2bef3cdf51d4cb510e93bd67d9d594b2ff55e23", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_21b395ee", "line": 115, "range": {"start_line": 115, "start_character": 1, "end_line": 115, "end_character": 39}, "updated": "2020-01-20 06:58:12.000000000", "message": "I remember the False value for this option is for edge usecase, I guess that Dan or Redhat people need, is that usecase already abandoned?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f09bdb60", "line": 115, "range": {"start_line": 115, "start_character": 1, "end_line": 115, "end_character": 39}, "in_reply_to": "3fa7e38b_21b395ee", "updated": "2020-01-22 11:28:57.000000000", "message": "My understanding is that it was to support a smooth upgrade, we needed to have this data migration before it would work, and until that worked we had to fall back to the old way of doing things:\nhttps://specs.openstack.org/openstack/nova-specs/specs/stein/approved/count-quota-usage-from-placement.html#upgrade-impact", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "650ca2a832f1db18152251cbecdbd3a97800fc32", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c648228b", "line": 115, "range": {"start_line": 115, "start_character": 1, "end_line": 115, "end_character": 39}, "in_reply_to": "3fa7e38b_cd913655", "updated": "2020-01-28 13:15:50.000000000", "message": "I'm thinking of this https://review.opendev.org/#/c/638073/21/nova/conf/workarounds.py@253\n\nBut looks like it already removed...", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cd913655", "line": 115, "range": {"start_line": 115, "start_character": 1, "end_line": 115, "end_character": 39}, "in_reply_to": "3fa7e38b_f09bdb60", "updated": "2020-01-27 10:49:28.000000000", "message": "``literal``", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4d878613", "line": 118, "updated": "2020-01-27 10:49:28.000000000", "message": "A table of old vs. new somewhere in this document would be very helpful and could be used in docs later", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c2bef3cdf51d4cb510e93bd67d9d594b2ff55e23", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c1408107", "line": 124, "range": {"start_line": 124, "start_character": 48, "end_line": 124, "end_character": 53}, "updated": "2020-01-20 06:58:12.000000000", "message": "double 'we'", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_90a4e7a5", "line": 124, "range": {"start_line": 124, "start_character": 48, "end_line": 124, "end_character": 53}, "in_reply_to": "3fa7e38b_c1408107", "updated": "2020-01-22 11:28:57.000000000", "message": "oops, could fix in a follow up.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ed9af25d", "line": 187, "updated": "2020-01-27 10:49:28.000000000", "message": "All of these could be ``literal`` s", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0d92ee4a", "line": 190, "range": {"start_line": 190, "start_character": 58, "end_line": 190, "end_character": 66}, "updated": "2020-01-27 10:49:28.000000000", "message": "misuse", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4db546cf", "line": 241, "updated": "2020-01-27 10:49:28.000000000", "message": "As above, a table with the old quota and the new representation of it (i.e. \"keystone quota X\", \"config option Y\" or \"removed\") would be awesome", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "f6d3825d3f45ed60deaef655f144145ddc54bdbe", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c231b10c", "line": 248, "range": {"start_line": 247, "start_character": 41, "end_line": 248, "end_character": 64}, "updated": "2019-11-27 20:40:02.000000000", "message": "I would be interested in knowing the background of this statement and whether it's been resolved yet.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "bd70521ba64d5718b67cd520469e591b8b3c4e0a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d6fe2903", "line": 248, "range": {"start_line": 247, "start_character": 41, "end_line": 248, "end_character": 64}, "in_reply_to": "3fa7e38b_c231b10c", "updated": "2019-12-02 14:40:43.000000000", "message": "The background is that placement API is usually/currently admin only. But ideally it would be good to have end user's query that directly for unified limits. Although there are ways around that (proxy, etc).\n\nI haven't push this conversation very hard yet, as it doesn't feel like a blocker right now, as I think the Nova API gives you all the info you need right now.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c2bef3cdf51d4cb510e93bd67d9d594b2ff55e23", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e1549dc8", "line": 248, "range": {"start_line": 247, "start_character": 41, "end_line": 248, "end_character": 64}, "in_reply_to": "3fa7e38b_d6fe2903", "updated": "2020-01-20 06:58:12.000000000", "message": "The placement API already supports policy configuration, so it should be ok? we only need expose /usages API to the end user. \n\nFor UX, that isn't good, the user needs two separated calls to query the limit and the usage. The only expectation is the vendor build limit/usage info on their own panel.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_70de0b11", "line": 248, "range": {"start_line": 247, "start_character": 41, "end_line": 248, "end_character": 64}, "in_reply_to": "3fa7e38b_e1549dc8", "updated": "2020-01-22 11:28:57.000000000", "message": "To be clear, the existing API will work for now, until we have a better approach.\n\nThe data is now split between two services, so unless we do a proxy API, making the user make mutliple calls is the preffered approach.\n\nCurrently you have to call every single project (Cinder, Neutron, Nova) to understand your limits. Eventually that will now be a single call to keystone. You can then compare that against polling the current usage of each project more frequently. So in realtity its like 5 API calls becoing 6 API calls.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_edc3d237", "line": 251, "range": {"start_line": 251, "start_character": 38, "end_line": 251, "end_character": 53}, "updated": "2020-01-27 10:49:28.000000000", "message": "I don't know what this means :)", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_684cb09c", "line": 251, "range": {"start_line": 251, "start_character": 38, "end_line": 251, "end_character": 53}, "in_reply_to": "3fa7e38b_edc3d237", "updated": "2020-01-27 12:34:49.000000000", "message": "I can try find a link, there was an in progress spec somewhere. Basically linking various usage records to a single consumer (i.e. instance uuid), so we can list instance uuids.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_a6744dce", "line": 259, "updated": "2020-02-10 14:18:05.000000000", "message": "++", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c2bef3cdf51d4cb510e93bd67d9d594b2ff55e23", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_419fb163", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "updated": "2020-01-20 06:58:12.000000000", "message": "why we didn't proxy the update?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_5002ef73", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "in_reply_to": "3fa7e38b_419fb163", "updated": "2020-01-22 11:28:57.000000000", "message": "Because these quotas are no longer enforced, it seems more correct to always reply with \"unlimited\" as that is actually what the system will do. If we were to udpate the database, but the code ignore it, I think we would be breaking the API contract more, leading to a lot of confusion.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8dd33e02", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "in_reply_to": "3fa7e38b_5002ef73", "updated": "2020-01-27 10:49:28.000000000", "message": "FWIW, we explicitly fail if you attempt to set the networks quota now. Any reason we couldn't do this for the other quota types?\n\nhttps://github.com/openstack/nova/commit/6fe31d97542467656cdecd90c2e0a9057a4f7480#diff-3be7bba431b21b03c699a6f0a9f33a3fR201", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "3592d1cd948c940f831ef4563b77d1421b69cef3", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_34d91c80", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "in_reply_to": "3fa7e38b_86546a57", "updated": "2020-02-13 21:59:23.000000000", "message": "I agree that we should not break these API now. at least for migration period. we can do later by deprecating, 404 or 410.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e86e60fc", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "in_reply_to": "3fa7e38b_8dd33e02", "updated": "2020-01-27 12:34:49.000000000", "message": "It would break horizon, as it will set all of these via the existing APIs. The operators were unhappy with that approach, as it would also break their existing tooling.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "650ca2a832f1db18152251cbecdbd3a97800fc32", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_86546a57", "line": 269, "range": {"start_line": 268, "start_character": 53, "end_line": 269, "end_character": 38}, "in_reply_to": "3fa7e38b_e86e60fc", "updated": "2020-01-28 13:15:50.000000000", "message": "Can we assume the operator's tool or script can handle 400 correctly?, like this https://github.com/openstack/nova/blob/master/nova/api/openstack/compute/quota_sets.py#L63", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8dec9ebc", "line": 294, "range": {"start_line": 293, "start_character": 0, "end_line": 294, "end_character": 59}, "updated": "2020-01-27 10:49:28.000000000", "message": "Yes, but we do allow breaking changes for deprecated functionality. See the use of HTTP 410 (Gone) for removed APIs. This is similarly removed functionality and I see no reason to not hard fail rather than pretend the API is doing something it's not doing. This leads to situations like the above:\n\n1. Set 'injected_file_content_bytes' to N,\n2. Attempt to inject a file of N*2 bytes\n3. Attempt succeeds. Confusion.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6831100a", "line": 294, "range": {"start_line": 293, "start_character": 0, "end_line": 294, "end_character": 59}, "in_reply_to": "3fa7e38b_8dec9ebc", "updated": "2020-01-27 12:34:49.000000000", "message": "Operators at several summit sessions (myself included) pushed back on the idea of breaking all existing scripts to stop this confusion.\n\nNote, that there is a step 1b here: API returns updated values, showing that the API request didn't do anything.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ade71ad7", "line": 300, "range": {"start_line": 300, "start_character": 15, "end_line": 300, "end_character": 23}, "updated": "2020-01-27 10:49:28.000000000", "message": "However,", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4d28e6ec", "line": 300, "range": {"start_line": 300, "start_character": 43, "end_line": 300, "end_character": 51}, "updated": "2020-01-27 10:49:28.000000000", "message": "consensus", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_462c79b1", "line": 304, "updated": "2020-02-10 14:18:05.000000000", "message": "*me* nods", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6d14c29f", "line": 341, "range": {"start_line": 341, "start_character": 13, "end_line": 341, "end_character": 28}, "updated": "2020-01-27 10:49:28.000000000", "message": "could you give an example (for use in documentation later)?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_283798ff", "line": 341, "range": {"start_line": 341, "start_character": 13, "end_line": 341, "end_character": 28}, "in_reply_to": "3fa7e38b_6d14c29f", "updated": "2020-01-27 12:34:49.000000000", "message": "its not yet been implemented, so I didn't want to add a bad example here.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ed36724f", "line": 344, "updated": "2020-01-27 10:49:28.000000000", "message": "Any reason we want this to be in 'nova-manage' rather than 'nova-status'. Is this something someone will want to run on an e.g. brand new V deployment? If so, could you add that here?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c80a8425", "line": 344, "in_reply_to": "3fa7e38b_ed36724f", "updated": "2020-01-27 12:34:49.000000000", "message": "This tool is about reading out stale data stored in the DB. In a brand new deployement, this should be setup by the same code that registered the nova endpoints in keystone.\n\nIt seemed to fit nova-manage as its related to cleaning up the DB, similar to offline data migrations, but due to the requirements of skip-level stuff and this been cross service (nova-> keystone), we can't use APIs, hence the nova-manage and keystone manage things.\n\nAs I see it, nova status only returs ok/warn/error, so it probably needs to be updated to warn if the stale quota data hasn't been deleted in the DB, in the relase before we move to turn this quota method on by default.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_ad15da96", "line": 381, "range": {"start_line": 379, "start_character": 0, "end_line": 381, "end_character": 45}, "updated": "2020-01-27 10:49:28.000000000", "message": "We can't remove this because it's still used while ``quota.enforce_unified_limits = True``, yes?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "1bf188ad57979ba75eabb281cab5e7629c3bb073", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4e853d52", "line": 381, "range": {"start_line": 379, "start_character": 0, "end_line": 381, "end_character": 45}, "in_reply_to": "3fa7e38b_6e3d99ba", "updated": "2020-01-27 12:44:33.000000000", "message": "Oops, I meant we can't remove because it's still used while quota.enforce_unified_limits=**False**`` (i.e. we're using the legacy behavior). Per my reading of this, this was all opt-in _for now_", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6e3d99ba", "line": 381, "range": {"start_line": 379, "start_character": 0, "end_line": 381, "end_character": 45}, "in_reply_to": "3fa7e38b_ad15da96", "updated": "2020-01-27 12:34:49.000000000", "message": "No, these are not used at all when you use unified limits. The quota is checked using oslo.limit, and that code knows how to get this info from keystone.\n\nLets cantch up... there is clearly something missing leading you here?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c2bef3cdf51d4cb510e93bd67d9d594b2ff55e23", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_6172ed4c", "line": 407, "range": {"start_line": 407, "start_character": 27, "end_line": 407, "end_character": 34}, "updated": "2020-01-20 06:58:12.000000000", "message": "In Ussuri I guess.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_10f8f77b", "line": 407, "range": {"start_line": 407, "start_character": 27, "end_line": 407, "end_character": 34}, "in_reply_to": "3fa7e38b_6172ed4c", "updated": "2020-01-22 11:28:57.000000000", "message": "Oops, yes, can I fix that in a follow up patch.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "382a42409a34c2cf538de0ad88cc1dc81309e435", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_82f368e8", "line": 414, "range": {"start_line": 414, "start_character": 5, "end_line": 414, "end_character": 42}, "updated": "2020-01-20 09:41:17.000000000", "message": "When we set this as True, I guess we should check the keystone version, ensure the limit are supported, since unified limit doesn't introduce at the beginning of keystone v3 API https://docs.openstack.org/api-ref/identity/v3/index.html#what-s-new-in-version-3-10-queens\n\nOr we assume nova always the same version with keystone?\n\nAlso see there are few changes in unified limit API in the recent release, probably those will be handled inside oslo.limit API, and some of the handling are done in quota proxy API.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "439bcc5aa63c7bf51e789dd86f91d73ea196ea0b", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8e61f5d6", "line": 414, "range": {"start_line": 414, "start_character": 5, "end_line": 414, "end_character": 42}, "in_reply_to": "3fa7e38b_0d7c2ee8", "updated": "2020-01-27 12:34:49.000000000", "message": "I don't know how we implement that when none of the APIs are available.\n\nTo be clear, its not a problem for this release, its an issue when we come to make this the default behaviour.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "519c8a94a5ce2f82190f37fa4699524028f42a45", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_0d7c2ee8", "line": 414, "range": {"start_line": 414, "start_character": 5, "end_line": 414, "end_character": 42}, "in_reply_to": "3fa7e38b_102d57fb", "updated": "2020-01-27 10:49:28.000000000", "message": "This should probably a nova-status check", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, "change_message_id": "e5058e4b29070a27943fd5fcbff0300a4c7741a4", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_102d57fb", "line": 414, "range": {"start_line": 414, "start_character": 5, "end_line": 414, "end_character": 42}, "in_reply_to": "3fa7e38b_82f368e8", "updated": "2020-01-22 11:28:57.000000000", "message": "Good point. oslo.limit should check keystone is new enough (it doesn't right now).\n\nThe recent changes are easy to work around in oslo.limit, as I understand it (basically added the option of additional enforcement models).\n\nMind you we only support N-1 releases of most projects, so I don't see it as a blocker, more a very worthy robustness check.\n\nCan we add this in a follow up patch?", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "9323e35b1d159b01e81dde0dd43359b70226f737", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c61f096f", "line": 467, "updated": "2020-02-10 14:18:05.000000000", "message": "that's probably here that you should summarize the upgrade changes.", "commit_id": "91bf2d3d32b3e53be439f9fb56fc8ff1bc7f338c"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "47c471d7a6b01f4dfa619842cf2ff5a45ecbd41b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e360b036", "line": 291, "range": {"start_line": 291, "start_character": 41, "end_line": 291, "end_character": 48}, "updated": "2020-02-13 19:23:26.000000000", "message": "proxying", "commit_id": "f03efd11a5cda7a288517e1be25310a4fefcb584"}]}}, "openstack%2Fdiskimage-builder~master~I627c5d4df12712f87a9cb4f98faa8ff0f0b78d9d": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-14 02:57:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"diskimage_builder/elements/simple-pip/environment.d/51-pip-and-virutalenv-default.bash": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "b930f089a390460d672e49c9ffcbce087d2629e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b8c74c3d", "line": 1, "updated": "2020-02-13 13:07:01.000000000", "message": "nit: The file name for this element is misspelled\n\nmv 51-pip-and-virutalenv-default.bash 51-pip-and-virtualenv-default.bash", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "58efaa1d1458535c13a9c0ee5b85b260d472a215", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6928287e", "line": 1, "in_reply_to": "3fa7e38b_b8c74c3d", "updated": "2020-02-13 15:13:29.000000000", "message": "Done", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}], "diskimage_builder/elements/simple-pip/pkg-map": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "b930f089a390460d672e49c9ffcbce087d2629e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f808647f", "line": 1, "updated": "2020-02-13 13:07:01.000000000", "message": "The pep8 test is failing", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "b930f089a390460d672e49c9ffcbce087d2629e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_581978cf", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 25}, "updated": "2020-02-13 13:07:01.000000000", "message": "comma missing at the end of this line", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "58efaa1d1458535c13a9c0ee5b85b260d472a215", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c9191c76", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 25}, "in_reply_to": "3fa7e38b_581978cf", "updated": "2020-02-13 15:13:29.000000000", "message": "Done", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "b930f089a390460d672e49c9ffcbce087d2629e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d82c8801", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 26}, "updated": "2020-02-13 13:07:01.000000000", "message": "Excuse my ignorance, but what is this doing?", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "58efaa1d1458535c13a9c0ee5b85b260d472a215", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_292790b7", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 26}, "in_reply_to": "3fa7e38b_d82c8801", "updated": "2020-02-13 15:13:29.000000000", "message": "Being stupid.", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}], "diskimage_builder/elements/simple-pip/source-repository-pip-and-virtualenv": [{"author": {"_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, "change_message_id": "b930f089a390460d672e49c9ffcbce087d2629e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_18754000", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 18}, "updated": "2020-02-13 13:07:01.000000000", "message": "Should this be 'simple-pip' ?", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "58efaa1d1458535c13a9c0ee5b85b260d472a215", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_492d2c8e", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 18}, "in_reply_to": "3fa7e38b_18754000", "updated": "2020-02-13 15:13:29.000000000", "message": "Done", "commit_id": "6edc3f238689cc08a0aec7d4c7c8b568c8add205"}]}}, "openstack%2Fopenstack-ansible-ops~master~I57ac8582c4cc8a6fe5826fdbffbac4ab4e98ac78": {"owner_id": 29864, "owner_name": "Sam Choraria", "owner_email": "sam.choraria@bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 15:35:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 0, "_account_id": 29864, "name": "Sam Choraria", "email": "sam.choraria@bbc.co.uk", "username": "samc-bbc"}, {"value": 2, "date": "2020-02-11 17:45:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {"elk_metrics_7x/roles/elastic_packetbeat/defaults/main.yml": [{"author": {"_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, "change_message_id": "4bca9169d19578d0ec15d9a618e5399320a990ee", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_64b2bbea", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 13}, "updated": "2020-02-11 11:52:10.000000000", "message": "could you try to namespace the var, perhaps packetbeat_ignored_ports?", "commit_id": "be9594f181733f72147f53d16a38e3c20a155eb7"}]}}, "openstack%2Fkolla-ansible~master~Iccf4298c4f9306eb0a95b6712815778555ef44fc": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:51:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 1, "date": "2020-02-14 08:23:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26740, "name": "Rafal Czubak", "email": "r.czubak@samsung.com", "username": "r.czubak"}, {"value": 1, "date": "2020-02-14 08:25:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25988, "name": "Lukasz Obratanski", "email": "l.obratanski@samsung.com"}, {"value": 2, "date": "2020-02-14 08:42:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 1, "date": "2020-02-14 08:50:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31621, "name": "Simon Andrejko", "email": "s.andrejko@partner.samsung.com"}, {"value": 1, "date": "2020-02-14 08:24:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29815, "name": "Kazimierz Balos", "email": "k.balos@samsung.com"}, {"value": 1, "date": "2020-02-14 08:32:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29858, "name": "Maciej Siczek", "email": "m.siczek@samsung.com"}, {"value": 1, "date": "2020-02-14 08:36:51.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31619, "name": "Grzegorz Sikorski", "email": "g.sikorski@samsung.com", "username": "gregors"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "57150fae8af740e8509333653806cf07709add05", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6adecc0f", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 18}, "updated": "2020-02-14 08:51:13.000000000", "message": "looks like we may consider merging those two?", "commit_id": "eff22e7c56ba35870475dd92d9d89fde1b48de4c"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "23ca35eeea488457bdc59789b60bb3195629a7f7", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1d3c40be", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 18}, "in_reply_to": "3fa7e38b_6adecc0f", "updated": "2020-02-14 09:34:03.000000000", "message": "Nah, their roles are clearly different.", "commit_id": "eff22e7c56ba35870475dd92d9d89fde1b48de4c"}]}}, "zuul%2Fzuul~master~I24d48955efe9f27f3d2bd876b27d39b55f79ca17": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 10:43:11.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 27582, "name": "Simon Westphahl", "email": "simon.westphahl@bmw.de", "username": "simon.westphahl"}, {"value": 1, "date": "2020-02-13 10:32:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, {"value": 2, "date": "2020-02-12 21:18:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-14 14:49:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Frpm-packaging~master~Ia99a42ac268e867bd1285583c1fb8a3d541720a2": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 14:07:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 2, "date": "2020-02-14 14:00:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~stable%2Fqueens~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:58:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~stable%2Frocky~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:57:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~master~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:58:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~stable%2Fstein~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:58:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "x%2Fbrowbeat~master~Ib647d93144a02a6be7340991c31f65842fdf3f29": {"owner_id": 24, "owner_name": "Chuck Short", "owner_email": "charles.short@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-07 13:03:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 16845, "name": "Sindhur", "email": "smalleni@redhat.com", "username": "smalleni"}, {"value": 2, "date": "2020-02-14 15:08:35.000000000", "_account_id": 24, "name": "Chuck Short", "email": "charles.short@windriver.com", "username": "zulcss"}], "comments": {}}, "starlingx%2Fconfig~master~I50a1ca43c43c3bba30730c616b3788664920d0c9": {"owner_id": 31484, "owner_name": "Jessica Castelino", "owner_email": "jessica.castelino@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 2, "date": "2020-02-14 13:23:41.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-14 14:08:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "99a2911553a452c6473e788e3b247073136ce995", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_867a2aec", "line": 14, "updated": "2020-02-13 20:23:03.000000000", "message": "commit message too wide here", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e9b651db", "line": 14, "in_reply_to": "3fa7e38b_867a2aec", "updated": "2020-02-13 22:12:07.000000000", "message": "Done", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}], "api-ref/source/api-ref-sysinv-v1-config.rst": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "02113f581d4fce2b16d0a8d34425b5adc3639f73", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e64bde5a", "line": 10292, "updated": "2020-02-13 19:43:28.000000000", "message": "API Documentation is corrected to reflect the correct endpoint.", "commit_id": "69e4f61a73bb195a02aa7a699748a5680cbfcb7e"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "02113f581d4fce2b16d0a8d34425b5adc3639f73", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c67102ad", "line": 10358, "updated": "2020-02-13 19:43:28.000000000", "message": "API Documentation is corrected to reflect the correct HTTP methods used by the RESTful API.", "commit_id": "69e4f61a73bb195a02aa7a699748a5680cbfcb7e"}], "sysinv/sysinv/sysinv/sysinv/api/controllers/v1/host_fs.py": [{"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "02113f581d4fce2b16d0a8d34425b5adc3639f73", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e682fe50", "line": 157, "updated": "2020-02-13 19:43:28.000000000", "message": "Fixed an error in source code which was accessing lvg object instead of host_fs object.", "commit_id": "69e4f61a73bb195a02aa7a699748a5680cbfcb7e"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "02113f581d4fce2b16d0a8d34425b5adc3639f73", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c67fc266", "line": 211, "updated": "2020-02-13 19:43:28.000000000", "message": "Fixed an error in source code which was accessing lvg object instead of host_fs object.", "commit_id": "69e4f61a73bb195a02aa7a699748a5680cbfcb7e"}, {"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "40b674565dc9d74a9d6d5d8863db5902967fea9b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_09e88ddd", "line": 2, "range": {"start_line": 2, "start_character": 16, "end_line": 2, "end_character": 20}, "updated": "2020-02-13 20:56:28.000000000", "message": "Update the Copyright date", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_74bc7406", "line": 2, "range": {"start_line": 2, "start_character": 16, "end_line": 2, "end_character": 20}, "in_reply_to": "3fa7e38b_09e88ddd", "updated": "2020-02-13 22:12:07.000000000", "message": "Done", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "40b674565dc9d74a9d6d5d8863db5902967fea9b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_491d250e", "line": 157, "updated": "2020-02-13 20:56:28.000000000", "message": "what does \"marker\" do? Maybe its not needed and should be removed if we have never hit this issue before?", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b4098cdb", "line": 157, "in_reply_to": "3fa7e38b_491d250e", "updated": "2020-02-13 22:12:07.000000000", "message": "As per my understanding, markers may be acting like pointers to the last retrieved entry from database when many entries of host filesystem exists in DB. However, I am not sure of this as I am not the original developer for this piece of code.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "44c25ee5754b135b8de78aaeff92b145f59709f6", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d4ce888d", "line": 157, "in_reply_to": "3fa7e38b_491d250e", "updated": "2020-02-13 22:09:18.000000000", "message": "marker is used for \"paging\" results.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "ace37eb9a4fa16b275ac25e85cf7b89e3d24e9ef", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_116ae74e", "line": 157, "in_reply_to": "3fa7e38b_b4098cdb", "updated": "2020-02-14 14:14:21.000000000", "message": "We should probably add unit test cases with paging. And update the documentation to include this option?", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "40b674565dc9d74a9d6d5d8863db5902967fea9b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0913ad03", "line": 205, "updated": "2020-02-13 20:56:28.000000000", "message": "I would remove this API since its not being used.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "44c25ee5754b135b8de78aaeff92b145f59709f6", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d4b768f7", "line": 205, "in_reply_to": "3fa7e38b_0913ad03", "updated": "2020-02-13 22:09:18.000000000", "message": "I would not remove it.\nI would leave it so that other consumers (horizon, external clients) can query it this way.  Currently the CLI uses the list call and then  filters the response.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f4886421", "line": 205, "in_reply_to": "3fa7e38b_0913ad03", "updated": "2020-02-13 22:12:07.000000000", "message": "Right now there exists a CLI command host-fs-show which should have ideally called this API endpoint. Instead, it inefficiently fetches all the host filesystems from the DB and manually filters to the one requested. In my opinion it would be worthwhile to keep this piece of code and modify the CLI command to utilize this.\n\nHowever, if you and the other reviewers still feel I should delete this piece of code, then I'll make the changes in the next patch set.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "fd60df92cde1f32ec0f28e7f369f1e300c2bd854", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f14b8b25", "line": 205, "in_reply_to": "3fa7e38b_f4886421", "updated": "2020-02-14 14:00:30.000000000", "message": "Horizon does not use this particular API. I am fine with keeping it and changing the CLI to use this API.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}], "sysinv/sysinv/sysinv/sysinv/api/controllers/v1/utils.py": [{"author": {"_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}, "change_message_id": "40b674565dc9d74a9d6d5d8863db5902967fea9b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_49e20504", "line": 19, "range": {"start_line": 19, "start_character": 25, "end_line": 19, "end_character": 26}, "updated": "2020-02-13 20:56:28.000000000", "message": "Update the Copyright date", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "52602d4ad13a081a2453c6f306d94c0a0f95eb09", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_46ad1230", "line": 466, "range": {"start_line": 466, "start_character": 31, "end_line": 466, "end_character": 33}, "updated": "2020-02-13 20:30:26.000000000", "message": "Might be good to add a one line comment explaining why the // is being used.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b4c66c9a", "line": 466, "range": {"start_line": 466, "start_character": 31, "end_line": 466, "end_character": 33}, "in_reply_to": "3fa7e38b_46ad1230", "updated": "2020-02-13 22:12:07.000000000", "message": "Done", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}], "sysinv/sysinv/sysinv/sysinv/tests/api/test_host_fs.py": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "99a2911553a452c6473e788e3b247073136ce995", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_46ff5234", "line": 32, "updated": "2020-02-13 20:23:03.000000000", "message": "not that it matters, but we usually line up these (dbbase would align with base)", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_49c76547", "line": 32, "in_reply_to": "3fa7e38b_46ff5234", "updated": "2020-02-13 22:12:07.000000000", "message": "Done", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "99a2911553a452c6473e788e3b247073136ce995", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a656465c", "line": 38, "updated": "2020-02-13 20:23:03.000000000", "message": "Is this the API prefix?  I assume this is why the url utility methods below, are mostly not using this value.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_69c26137", "line": 38, "in_reply_to": "3fa7e38b_a656465c", "updated": "2020-02-13 22:12:07.000000000", "message": "Yes, that is the API prefix as can be seen in the documentation:\n\nhttps://docs.starlingx.io/api-ref/config/api-ref-sysinv-v1-config.html#host-filesystem", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "99a2911553a452c6473e788e3b247073136ce995", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a699661d", "line": 45, "range": {"start_line": 45, "start_character": 4, "end_line": 45, "end_character": 23}, "updated": "2020-02-13 20:23:03.000000000", "message": "test_fetch_host_fs_object  is not using this.\nNone of your unit tests are using expected_api_fields or hidden_api_fields", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_549378a4", "line": 45, "range": {"start_line": 45, "start_character": 4, "end_line": 45, "end_character": 23}, "in_reply_to": "3fa7e38b_a699661d", "updated": "2020-02-13 22:12:07.000000000", "message": "Removed these two variables.", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "99a2911553a452c6473e788e3b247073136ce995", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2669f621", "line": 199, "updated": "2020-02-13 20:23:03.000000000", "message": "I think you want to remove this print statement prior to submission", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "0ed5f6151624c665fad04e0b7adde22bfb558538", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3484bc56", "line": 199, "in_reply_to": "3fa7e38b_2669f621", "updated": "2020-02-13 22:12:07.000000000", "message": "Done", "commit_id": "8f6cad35304f6c0d2a0164b7b88e6e69d1f66076"}]}}, "starlingx%2Froot~master~Ibacdfc7f06a464c7ef62e0a681f4f99e634057f2": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 21:13:50.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-14 14:41:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 1, "date": "2020-02-14 14:36:01.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}], "comments": {"build-tools/patch-iso": [{"author": {"_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, "change_message_id": "0cdbe1e24905ef7b8035d9cfc837149374edf39e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a93700db", "line": 132, "range": {"start_line": 131, "start_character": 0, "end_line": 132, "end_character": 24}, "updated": "2020-02-13 15:16:00.000000000", "message": "Are these utilities installed in the stx-tool Dockerfile ?", "commit_id": "d02fd0c39e6c9ee12afffd7fee2a8ebfbaf23e03"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "a6bc1c78d5823f2bf9a41b184426c4b7516d0815", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0902d472", "line": 132, "range": {"start_line": 131, "start_character": 0, "end_line": 132, "end_character": 24}, "in_reply_to": "3fa7e38b_a93700db", "updated": "2020-02-13 15:44:07.000000000", "message": "Provided by the libguestfs-tools package, yes", "commit_id": "d02fd0c39e6c9ee12afffd7fee2a8ebfbaf23e03"}]}}, "openstack%2Fpuppet-openstack_extras~stable%2Ftrain~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:58:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Fnova~master~I8e3fbc6f8b052ead6e80d4243f76581960210277": {"owner_id": 14070, "owner_name": "Eric Fried", "owner_email": "openstack@fried.cc", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-06 15:24:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-10-30 23:05:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 7546, "name": "Blair Bethwaite", "email": "blair.bethwaite@gmail.com", "username": "blairo"}, {"value": 2, "date": "2020-01-07 04:23:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2019-10-30 23:14:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 3031, "name": "Sam Morrison", "email": "sorrison@gmail.com", "username": "sorrison"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-11-05 07:59:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fpython-dracclient~master~I9b6b88826b9902a059e1bf537e51d9f97c9389ba": {"owner_id": 29405, "owner_name": "Rachit Kapadia", "owner_email": "kapadiarachit007@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, {"value": 2, "date": "2020-02-14 14:11:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, {"value": 2, "date": "2020-02-14 14:22:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, "change_message_id": "1e1ecf68e616be5acbc9882bd97600f559575d64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_34427c94", "line": 7, "updated": "2020-02-13 22:38:17.000000000", "message": "Can you change the above line to:\nAdded ``bus`` attribute to PhysicalDisks for NVMe drives.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, "change_message_id": "5bbd1141865ed992161c61e4aa5bdf74436e39e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7ded3421", "line": 7, "in_reply_to": "3fa7e38b_34427c94", "updated": "2020-02-14 09:47:03.000000000", "message": "Done.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, "change_message_id": "1e1ecf68e616be5acbc9882bd97600f559575d64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f4ee2488", "line": 11, "updated": "2020-02-13 22:38:17.000000000", "message": "Let's change the above paragraph to:\nThis patch adds `bus` to PhysicalDisks so clients can determine the PCI bus ID of NVMe drives.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, "change_message_id": "5bbd1141865ed992161c61e4aa5bdf74436e39e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_dd88e86c", "line": 11, "in_reply_to": "3fa7e38b_f4ee2488", "updated": "2020-02-14 09:47:03.000000000", "message": "Done.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}], "dracclient/resources/raid.py": [{"author": {"_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, "change_message_id": "1e1ecf68e616be5acbc9882bd97600f559575d64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f412a4b2", "line": 144, "updated": "2020-02-13 22:38:17.000000000", "message": "Rachit, can you add a .upper() on the line above to ensure that we return the bus ID in upper case?  This should not affect clients since the iDRAC is returning it in upper case, but will protect us in the future if the iDRAC starts returning it in lower case.  This also guarantees that the case will be consistent with the case we return bus ID in for NVMe drives below.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, "change_message_id": "5bbd1141865ed992161c61e4aa5bdf74436e39e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1dd8c07d", "line": 144, "in_reply_to": "3fa7e38b_f412a4b2", "updated": "2020-02-14 09:47:03.000000000", "message": "Done.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 10644, "name": "David Paterson", "email": "davpat2112@yahoo.com", "username": "dpaterson"}, "change_message_id": "0604b94b97d07aadbf2a5014395ff07a316545f3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_790a5d29", "line": 273, "updated": "2020-02-11 17:30:20.000000000", "message": "What are we making it uppercase?  Is this an existing pattern we use in dracclient?", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, "change_message_id": "5bbd1141865ed992161c61e4aa5bdf74436e39e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_dddd486e", "line": 273, "in_reply_to": "3fa7e38b_5164154d", "updated": "2020-02-14 09:47:03.000000000", "message": "Yes..Nice approach.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, "change_message_id": "16120ce82db62539351a105e3551f3520a023635", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5164154d", "line": 273, "in_reply_to": "3fa7e38b_790a5d29", "updated": "2020-02-11 20:44:18.000000000", "message": "I checked, and the iDRAC returns the bus ID in DCIM_ControllerView in upper case.  I wanted to ensure that it is returned in upper case here as well for consistency.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 10250, "name": "Christopher Dearborn", "email": "Christopher.Dearborn@dell.com", "username": "cdearbor"}, "change_message_id": "1e1ecf68e616be5acbc9882bd97600f559575d64", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_34691c22", "line": 275, "updated": "2020-02-13 22:38:17.000000000", "message": "I don't think you need the 2 lines above, because the else clause will only be entered if bus is None, so there's no need to set it to None again in the else clause.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}, {"author": {"_account_id": 29405, "name": "Rachit Kapadia", "email": "kapadiarachit007@gmail.com", "username": "rachit7194"}, "change_message_id": "5bbd1141865ed992161c61e4aa5bdf74436e39e6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fdd8447d", "line": 275, "in_reply_to": "3fa7e38b_34691c22", "updated": "2020-02-14 09:47:03.000000000", "message": "Done.", "commit_id": "3d892698ea509169374644b5b16b44221e5ae52a"}]}}, "openstack%2Fkolla~master~I9568261fdbbe4b9156d0e07c414ec911ca2e8557": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 08:54:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-14 08:54:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "d29f56291e67d185d52943cae6c7548699f03714", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_23c1f24f", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "updated": "2020-02-13 11:04:04.000000000", "message": "either remove all images or write which ones you remove", "commit_id": "5e6ca802076adb3fa0f91afa7be2ae50005e9e59"}, {"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "210c44408e22dc0fcb1dfc08b7a5dfe273f6745a", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_6aa9ec75", "line": 9, "range": {"start_line": 9, "start_character": 39, "end_line": 9, "end_character": 76}, "updated": "2020-02-14 08:50:03.000000000", "message": "it is not a part of that patch anymore", "commit_id": "c2bb8e0843c72997cdc77ea160c0e3a3cfb346f1"}], "releasenotes/notes/remove-ceph-afff3cd8775e3a41.yaml": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "51bddb2f371e50e0c20732e21651d7d0352b00b7", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c351fe0d", "line": 4, "updated": "2020-02-13 10:47:47.000000000", "message": "Deprecated Kolla Ceph ...", "commit_id": "5e6ca802076adb3fa0f91afa7be2ae50005e9e59"}, {"author": {"_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, "change_message_id": "be079730580ab663852ec554873bf9abd50b42aa", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c33b3e97", "line": 4, "in_reply_to": "3fa7e38b_c351fe0d", "updated": "2020-02-13 10:59:16.000000000", "message": "They were never deprecated.", "commit_id": "5e6ca802076adb3fa0f91afa7be2ae50005e9e59"}]}}, "openstack%2Fdevstack~stable%2Frocky~I58619915dd1032f3a7202a78b193ed8c66dabd24": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 2, "date": "2020-02-13 15:13:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 10459, "name": "Luigi Toscano", "email": "ltoscano@redhat.com", "username": "ltoscano"}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 2, "date": "2020-01-29 19:51:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fec2api-tempest-plugin~master~I4099975ee86bd4e1ce576dcafc102626833e6971": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18810, "name": "alexey-mr", "email": "alexey.morlang@gmail.com", "username": "alexey-mr"}, {"value": 2, "date": "2020-02-14 13:50:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}], "comments": {}}, "starlingx%2Fconfig~master~I6a5905a4d97df5b9e73e165580801c865006f316": {"owner_id": 31484, "owner_name": "Jessica Castelino", "owner_email": "jessica.castelino@windriver.com", "labels": [{"value": 0, "_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 13:21:55.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-14 13:38:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "74abc1bfda6411ee90efa54fa6d6ecbab2d54b28", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_546ff891", "line": 7, "updated": "2020-02-13 22:04:36.000000000", "message": "I would change this line to instead just be an indication of the change you are making or the bug you are fixing.", "commit_id": "8633358bf91ad9de93efebfe789a5e5ab6a0da39"}, {"author": {"_account_id": 31484, "name": "Jessica Castelino", "email": "jessica.castelino@windriver.com", "username": "jcasteli"}, "change_message_id": "9af678c5205580515da8686f858bcff124315db1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_74f0f492", "line": 7, "in_reply_to": "3fa7e38b_546ff891", "updated": "2020-02-13 22:23:00.000000000", "message": "Done", "commit_id": "8633358bf91ad9de93efebfe789a5e5ab6a0da39"}]}}, "x%2Ftobiko~master~Iacb0a18db5d87d447f7d565493a966bce759c880": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:59:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}], "comments": {}}, "openstack%2Fec2-api~master~I74519f2d30f133705510035c32161b042fc61b98": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31572, "name": "Dmitry_Eremeev", "email": "deremeev@progmaticlab.com", "username": "Dmitry_Eremeev"}], "comments": {}}, "openstack%2Fpython-tripleoclient~stable%2Ftrain~Id349dbc8a554c2fa542b986062e708bbc14da714": {"owner_id": 20172, "owner_name": "Michele Baldessari", "owner_email": "michele@acksyn.org", "labels": [{"value": 0, "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 1, "date": "2020-02-12 10:11:49.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28223, "name": "Cedric Jeanneret", "display_name": "cjeanner (Tengu)", "email": "cjeanner@redhat.com", "username": "cjeanner"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-12 10:12:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-02-12 10:11:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 2, "date": "2020-02-12 11:15:49.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "2fc25f95326b99c5449da8c90b50efc41cb521fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3f94bbe6", "line": 13, "updated": "2020-02-12 10:10:19.000000000", "message": "Closes-Bug: #1862188", "commit_id": "99f50c6f136fc4eaf38c21c5a916a172c9fa1393"}]}}, "x%2Fcharm-ovn-central~master~I300af4bbfeb6a309d103d00fe3362364a1d7cbb3": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 2, "date": "2020-02-14 13:32:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}, {"value": 1, "date": "2020-02-14 12:19:20.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 6737, "name": "Edward Hope-Morley", "email": "edward.hope-morley@canonical.com", "username": "hopem"}], "comments": {}}, "starlingx%2Ffault~master~I70b961e9df5743c5cf6553e3fedfb89cd7c09d6c": {"owner_id": 30675, "owner_name": "xiaodonghu", "owner_email": "nwos_hxd@fiberhome.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": -1, "date": "2019-08-14 13:56:00.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "181a997f20ec625a64b99c17d42822d088749d2e", "unresolved": false, "patch_set": 1, "id": "7faddb67_6edf673a", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 9}, "updated": "2019-07-25 05:54:35.000000000", "message": "It should be \"Closes-Bug\"", "commit_id": "475c8278749e5c1557694bfc4d53d98d28bb923f"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "181a997f20ec625a64b99c17d42822d088749d2e", "unresolved": false, "patch_set": 1, "id": "7faddb67_8ed2e333", "line": 10, "range": {"start_line": 10, "start_character": 11, "end_line": 10, "end_character": 13}, "updated": "2019-07-25 05:54:35.000000000", "message": "Please remove them.", "commit_id": "475c8278749e5c1557694bfc4d53d98d28bb923f"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "392c03ba2156a00a5908c4cb433434efe688a119", "unresolved": false, "patch_set": 2, "id": "7faddb67_6240d608", "updated": "2019-07-25 11:15:34.000000000", "message": "Commit messages should provide a brief explaination of the issue and how this update fixes it.\n\nhttps://wiki.openstack.org/wiki/GitCommitMessages", "commit_id": "597f83ebebda775068c7969b1ec7e74814351194"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "392c03ba2156a00a5908c4cb433434efe688a119", "unresolved": false, "patch_set": 2, "id": "7faddb67_22c5fe8e", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 29}, "updated": "2019-07-25 11:15:34.000000000", "message": "Title is not an 'action' based message\n\nhttps://wiki.openstack.org/wiki/GitCommitMessages", "commit_id": "597f83ebebda775068c7969b1ec7e74814351194"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "392c03ba2156a00a5908c4cb433434efe688a119", "unresolved": false, "patch_set": 2, "id": "7faddb67_e2be06fe", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 9}, "updated": "2019-07-25 11:15:34.000000000", "message": "Closes-Bug", "commit_id": "597f83ebebda775068c7969b1ec7e74814351194"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "9d3ff36a10b03bfb7271afc339b3114fcd2c8e19", "unresolved": false, "patch_set": 4, "id": "7faddb67_5623e7be", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 9}, "updated": "2019-08-14 13:56:00.000000000", "message": "Closes-Bug", "commit_id": "12ed07734c8f384c946ae44109c0c9fb49857e28"}]}}, "starlingx%2Fansible-playbooks~master~Ifad0ecd474bef71d929bf80e05993ce9efe70d84": {"owner_id": 29846, "owner_name": "Tingjie Chen", "owner_email": "tingjie.chen@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-08-14 12:43:02.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29846, "name": "Tingjie Chen", "email": "tingjie.chen@intel.com", "username": "tingjiec"}], "comments": {}}, "x%2Fstackalytics~master~I78ed6319c34e12715e1916e1ef540fb63acb96a3": {"owner_id": 9569, "owner_name": "Sergey Nikitin", "owner_email": "nikitinserv@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 13:06:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I5f7971d2a6a277a7e9d40ae6ca28f04d30dee03c": {"owner_id": 19779, "owner_name": "Chason Chan", "owner_email": "chason.chan@foxmail.com", "labels": {}, "comments": {}}, "openstack%2Fneutron~master~Ia121ec5146c1d35b3282e44fd1eb98932939ea8c": {"owner_id": 11975, "owner_name": "Slawek Kaplonski", "owner_email": "skaplons@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-02-13 10:12:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-02-13 13:45:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 1, "date": "2020-02-13 14:44:00.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-14 09:47:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 1, "date": "2020-02-13 10:04:45.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, {"value": 0, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"devstack/ovn-octavia-provider.conf.sample": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_64dd51dd", "line": 1, "updated": "2020-02-04 00:37:45.000000000", "message": "I'm going to remove this as I think it should be in the ovn-octavia-provider repo.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "devstack/ovn.conf.sample": [{"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "36b550a4bf8baf692ce4a1345549bdf6bbafd465", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3641f609", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 1}, "updated": "2020-01-13 18:49:39.000000000", "message": "heh, looks like Lucas has a change that offers a file similar to this, but under a different name -- which I like better than ovn.conf.sample. Can we please use that instead?", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_44605535", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 1}, "in_reply_to": "3fa7e38b_3641f609", "updated": "2020-02-04 00:37:45.000000000", "message": "Will remove this as there are two other sample files now", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/containers.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_99aa406b", "line": 5, "range": {"start_line": 1, "start_character": 0, "end_line": 5, "end_character": 71}, "updated": "2020-02-03 14:50:45.000000000", "message": "Do we want to migrate deprecated doc files to neutron?", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_575c8519", "line": 5, "range": {"start_line": 1, "start_character": 0, "end_line": 5, "end_character": 71}, "in_reply_to": "3fa7e38b_99aa406b", "updated": "2020-02-04 00:37:45.000000000", "message": "I'll remove this and put the last two lines in source/admin/config-trunking.rst", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/dpdk.rst": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "d16526f6793b18ee4984e97b213afd5232b4bec7", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_53cfab25", "line": 4, "range": {"start_line": 4, "start_character": 0, "end_line": 4, "end_character": 5}, "updated": "2020-02-04 17:38:18.000000000", "message": "s/DPDK", "commit_id": "5135dd2b32f1bd0be86ee1bc5cf2bb157a37dff1"}], "doc/source/admin/ovn/features.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f4cfb9af", "line": 24, "updated": "2020-02-03 14:50:45.000000000", "message": "May be worth mentioning this: https://review.opendev.org/703376", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7a4df33a", "line": 24, "range": {"start_line": 24, "start_character": 2, "end_line": 24, "end_character": 19}, "updated": "2020-02-03 14:50:45.000000000", "message": "Not supporting metadata sounds to be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f77b3177", "line": 24, "in_reply_to": "3fa7e38b_f4cfb9af", "updated": "2020-02-04 00:37:45.000000000", "message": "I will remove Metadata as that change should merge soon.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/index.rst": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "d16526f6793b18ee4984e97b213afd5232b4bec7", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_9358c389", "line": 4, "range": {"start_line": 4, "start_character": 3, "end_line": 4, "end_character": 11}, "updated": "2020-02-04 17:38:18.000000000", "message": "s/Driver to match others", "commit_id": "5135dd2b32f1bd0be86ee1bc5cf2bb157a37dff1"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "c2339c7ef14704d6eaadfe68237476ae952044ac", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_8256a42a", "line": 1, "range": {"start_line": 1, "start_character": 0, "end_line": 1, "end_character": 2}, "updated": "2020-02-13 09:53:03.000000000", "message": "This looks unnecessary.", "commit_id": "e2dbc11d59dd754837eb45a29ac7034b1c0a82ef"}], "doc/source/admin/ovn/ovn.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d4263d6b", "line": 16, "range": {"start_line": 16, "start_character": 2, "end_line": 16, "end_character": 62}, "updated": "2020-02-03 14:50:45.000000000", "message": "Link broken, this one seems to work:\n\nhttp://docs.openvswitch.org/en/stable/tutorials/ovn-sandbox/", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d7eb950e", "line": 16, "range": {"start_line": 16, "start_character": 2, "end_line": 16, "end_character": 62}, "in_reply_to": "3fa7e38b_d4263d6b", "updated": "2020-02-04 00:37:45.000000000", "message": "Done", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_541a4d19", "line": 20, "range": {"start_line": 20, "start_character": 2, "end_line": 20, "end_character": 64}, "updated": "2020-02-03 14:50:45.000000000", "message": "Same here:\n\nhttp://docs.openvswitch.org/en/stable/tutorials/ovn-openstack/", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d7c4f596", "line": 20, "range": {"start_line": 20, "start_character": 2, "end_line": 20, "end_character": 64}, "in_reply_to": "3fa7e38b_541a4d19", "updated": "2020-02-04 00:37:45.000000000", "message": "Done", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b4daa147", "line": 32, "range": {"start_line": 32, "start_character": 27, "end_line": 32, "end_character": 34}, "updated": "2020-02-03 14:50:45.000000000", "message": "This page does not seem to have anything about ovn (probably since the ovn repo migration). I'm not sure where that content was moved to.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_373549a8", "line": 32, "range": {"start_line": 32, "start_character": 27, "end_line": 32, "end_character": 34}, "in_reply_to": "3fa7e38b_b4daa147", "updated": "2020-02-04 00:37:45.000000000", "message": "I am going to leave this one alone as there will eventually be a new location for those docs.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/launch-instance-provider-network.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_746c2905", "line": 346, "range": {"start_line": 344, "start_character": 52, "end_line": 346, "end_character": 17}, "updated": "2020-02-03 14:50:45.000000000", "message": "This sounds outdated since the native dhcp feature.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d752b5da", "line": 346, "range": {"start_line": 344, "start_character": 52, "end_line": 346, "end_character": 17}, "in_reply_to": "3fa7e38b_746c2905", "updated": "2020-02-04 00:37:45.000000000", "message": "I will have to let Lucas comment on this file, so for now I'll leave alone.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_943e85e1", "line": 575, "range": {"start_line": 574, "start_character": 5, "end_line": 575, "end_character": 33}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated too.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/launch-instance-selfservice-network.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_344f918d", "line": 312, "range": {"start_line": 312, "start_character": 43, "end_line": 312, "end_character": 78}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d70715c8", "line": 312, "range": {"start_line": 312, "start_character": 43, "end_line": 312, "end_character": 78}, "in_reply_to": "3fa7e38b_344f918d", "updated": "2020-02-04 00:37:45.000000000", "message": "Same comment here as last file.  At worst, we at least get the docs migrated then fix them.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f42ed9a8", "line": 545, "range": {"start_line": 544, "start_character": 5, "end_line": 545, "end_character": 37}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/provider-networks.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7a15f33d", "line": 35, "range": {"start_line": 35, "start_character": 27, "end_line": 35, "end_character": 28}, "updated": "2020-02-03 14:50:45.000000000", "message": "Out of curiosity: What does this dot mean? I do use this syntax, but I was never able to find its meaning in ovs-vsctl docs.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1a071f1a", "line": 35, "range": {"start_line": 35, "start_character": 22, "end_line": 35, "end_character": 26}, "updated": "2020-02-03 14:50:45.000000000", "message": "This would be clearer in an unabbreviated format: Open_vSwitch.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_37b6a9dd", "line": 35, "range": {"start_line": 35, "start_character": 22, "end_line": 35, "end_character": 26}, "in_reply_to": "3fa7e38b_1a071f1a", "updated": "2020-02-04 00:37:45.000000000", "message": "Done", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b7c61941", "line": 35, "range": {"start_line": 35, "start_character": 27, "end_line": 35, "end_character": 28}, "in_reply_to": "3fa7e38b_7a15f33d", "updated": "2020-02-04 00:37:45.000000000", "message": "I don't know myself, but it's everywhere :)", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5a26f7bb", "line": 52, "range": {"start_line": 52, "start_character": 22, "end_line": 52, "end_character": 26}, "updated": "2020-02-03 14:50:45.000000000", "message": "Open_vSwitch", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f7e491e1", "line": 52, "range": {"start_line": 52, "start_character": 22, "end_line": 52, "end_character": 26}, "in_reply_to": "3fa7e38b_5a26f7bb", "updated": "2020-02-04 00:37:45.000000000", "message": "Done", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1a6e3fc8", "line": 303, "range": {"start_line": 293, "start_character": 0, "end_line": 303, "end_character": 51}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3acbfba7", "line": 313, "range": {"start_line": 311, "start_character": 0, "end_line": 313, "end_character": 64}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/refarch.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7a1413eb", "line": 10, "range": {"start_line": 10, "start_character": 10, "end_line": 10, "end_character": 73}, "updated": "2020-02-03 14:50:45.000000000", "message": "This needs to be updated. I don't see a change migrating this folder yet.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_da0c1c46", "line": 10, "range": {"start_line": 10, "start_character": 10, "end_line": 10, "end_character": 73}, "in_reply_to": "3fa7e38b_7a1413eb", "updated": "2020-02-04 00:37:45.000000000", "message": "I created https://review.opendev.org/#/c/705587/", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/routers.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ddd2e15f", "line": 358, "range": {"start_line": 358, "start_character": 23, "end_line": 358, "end_character": 39}, "updated": "2020-02-03 14:50:45.000000000", "message": "May be outdated.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/refarch/selfservice-networks.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "47c1ea9074c1dee4027788deb337e311a0bd7318", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fdaa3d6b", "line": 197, "range": {"start_line": 197, "start_character": 0, "end_line": 197, "end_character": 61}, "updated": "2020-02-03 14:50:45.000000000", "message": "This would be nice to have since IIUC the agentless dhcp is the preferred deployment model now.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_55155d3d", "line": 197, "range": {"start_line": 197, "start_character": 0, "end_line": 197, "end_character": 61}, "in_reply_to": "3fa7e38b_fdaa3d6b", "updated": "2020-02-04 00:37:45.000000000", "message": "I think we can address this in a follow-on unless we have some existing text to quickly add.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/admin/ovn/troubleshooting.rst": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "c2339c7ef14704d6eaadfe68237476ae952044ac", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_7da54900", "line": 36, "updated": "2020-02-13 09:53:03.000000000", "message": "L.28-38 belongs to L.26, so it looks better to indent these lines.", "commit_id": "e2dbc11d59dd754837eb45a29ac7034b1c0a82ef"}], "doc/source/admin/ovn/tutorial.rst": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "07ea2105797c98602a636072b97396ebb020df98", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_94f8c57e", "line": 8, "range": {"start_line": 8, "start_character": 28, "end_line": 8, "end_character": 94}, "updated": "2020-02-03 14:45:33.000000000", "message": "Since ovn was moved to its own repo this link is not working, the new rst is here:\nhttps://github.com/ovn-org/ovn/blob/master/Documentation/tutorials/ovn-openstack.rst\n\nBut to tell the truth I don't where is the built doc for it.", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "7f4f1e5e414b341618b7ff77b9733befadd6494f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_552ebd8d", "line": 8, "range": {"start_line": 8, "start_character": 28, "end_line": 8, "end_character": 94}, "in_reply_to": "3fa7e38b_94f8c57e", "updated": "2020-02-04 00:37:45.000000000", "message": "Done", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}], "doc/source/contributor/internals/ovn/l3_ha_rescheduling.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_089c925a", "line": 161, "range": {"start_line": 161, "start_character": 11, "end_line": 161, "end_character": 156}, "updated": "2020-02-05 15:56:58.000000000", "message": "The same from the neutron repo:\n\nhttps://opendev.org/openstack/neutron/src/commit/f73f39f2cfcd4eace2bda14c99ead9a8cc8560f4/neutron/common/ovn/constants.py#L171", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_d6a370fc", "line": 161, "range": {"start_line": 161, "start_character": 11, "end_line": 161, "end_character": 156}, "in_reply_to": "3fa7e38b_089c925a", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_08c5723e", "line": 162, "range": {"start_line": 162, "start_character": 11, "end_line": 162, "end_character": 103}, "updated": "2020-02-05 15:56:58.000000000", "message": "The same from the neutron repo:\n\nhttps://opendev.org/openstack/neutron/src/commit/f73f39f2cfcd4eace2bda14c99ead9a8cc8560f4/neutron/services/ovn_l3/plugin.py#L318", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_76b2bc4c", "line": 162, "range": {"start_line": 162, "start_character": 11, "end_line": 162, "end_character": 103}, "in_reply_to": "3fa7e38b_08c5723e", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_e8e7b6d6", "line": 165, "range": {"start_line": 165, "start_character": 11, "end_line": 165, "end_character": 103}, "updated": "2020-02-05 15:56:58.000000000", "message": "Broken link because the project was moved to the x/ namespace:\n\nhttps://opendev.org/x/osops-tools-contrib/src/branch/master/neutron/dhcp_agents_balancer.py", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_96adf8e8", "line": 165, "range": {"start_line": 165, "start_character": 11, "end_line": 165, "end_character": 103}, "in_reply_to": "3fa7e38b_e8e7b6d6", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}], "doc/source/contributor/internals/ovn/metadata_api.rst": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_28194e8a", "line": 60, "range": {"start_line": 60, "start_character": 4, "end_line": 60, "end_character": 89}, "updated": "2020-02-05 15:56:58.000000000", "message": "This code changed since it was linked, this is my guess of what was originally linked:\n\nhttps://opendev.org/openstack/neutron/src/commit/f73f39f2cfcd4eace2bda14c99ead9a8cc8560f4/neutron/agent/metadata/agent.py#L175", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_5681c04b", "line": 60, "range": {"start_line": 60, "start_character": 4, "end_line": 60, "end_character": 89}, "in_reply_to": "3fa7e38b_28194e8a", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}], "doc/source/install/ovn/tripleo_install.rst": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "85658103fa633a7071658b15d640ebaacd7d86c2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5079ebc3", "line": 138, "updated": "2020-02-04 03:37:00.000000000", "message": "I hacked this just to see if it gets us past the pdf error", "commit_id": "05103016b8b51840562bfdf9272593f5c4f93b1d"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "85658103fa633a7071658b15d640ebaacd7d86c2", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b06cdf05", "line": 199, "updated": "2020-02-04 03:37:00.000000000", "message": "This too", "commit_id": "05103016b8b51840562bfdf9272593f5c4f93b1d"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_3b2e76f9", "line": 49, "range": {"start_line": 49, "start_character": 48, "end_line": 49, "end_character": 62}, "updated": "2020-02-05 15:56:58.000000000", "message": "I guess the tripleo plugin could used from the neutron repo now.", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_1625885b", "line": 49, "range": {"start_line": 49, "start_character": 48, "end_line": 49, "end_character": 62}, "in_reply_to": "3fa7e38b_3b2e76f9", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "7bf47e811c46d6f134292c3600ddef1e9ab9a292", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_1b337a61", "line": 66, "range": {"start_line": 66, "start_character": 15, "end_line": 66, "end_character": 45}, "updated": "2020-02-05 15:56:58.000000000", "message": "Here too.", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9298cf821e0993770092a72b831a877b44a4636f", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_b61b541b", "line": 66, "range": {"start_line": 66, "start_character": 15, "end_line": 66, "end_character": 45}, "in_reply_to": "3fa7e38b_1b337a61", "updated": "2020-02-05 21:59:40.000000000", "message": "Done", "commit_id": "8d475331a71f08d9aaad2992f03d50b8c7e6511f"}], "doc/source/ovn/index.rst": [{"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "65b1952ce8efff4402a76b2aac6163a7013bfe8f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c2250318", "line": 2, "updated": "2020-01-16 16:11:01.000000000", "message": "neutron or Neutron?", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "9449486960016b9493dc799af1ee5fc84aafa98e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_82e4eba9", "line": 2, "in_reply_to": "3fa7e38b_c2250318", "updated": "2020-01-16 16:17:35.000000000", "message": "i think that can stay neutron since it's not displayed anywhere is it?", "commit_id": "5844a9d125d9650caa03395801c638622f42415a"}, {"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "d16526f6793b18ee4984e97b213afd5232b4bec7", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_d3107bad", "line": 5, "range": {"start_line": 5, "start_character": 4, "end_line": 5, "end_character": 11}, "updated": "2020-02-04 17:38:18.000000000", "message": "Think this should this be 'Driver' to match the top-level index.rst change, will fix", "commit_id": "5135dd2b32f1bd0be86ee1bc5cf2bb157a37dff1"}], "doc/source/ovn/migration.rst": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "d16526f6793b18ee4984e97b213afd5232b4bec7", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_737c27ea", "line": 15, "range": {"start_line": 15, "start_character": 41, "end_line": 15, "end_character": 44}, "updated": "2020-02-04 17:38:18.000000000", "message": "s/the OVN", "commit_id": "5135dd2b32f1bd0be86ee1bc5cf2bb157a37dff1"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "c2339c7ef14704d6eaadfe68237476ae952044ac", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_3d84b156", "line": 54, "updated": "2020-02-13 09:53:03.000000000", "message": "One more space is needed to avoid meaningless vertical lines in the rendered HTML.", "commit_id": "e2dbc11d59dd754837eb45a29ac7034b1c0a82ef"}]}}, "x%2Fstackalytics~master~I0a447b54429d42a7bdd53211891cdce28136fc08": {"owner_id": 31528, "owner_name": "Daniel Tapia", "owner_email": "danielarthurt@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31528, "name": "Daniel Tapia", "email": "danielarthurt@gmail.com", "username": "danielarthurt"}, {"value": 0, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 2, "date": "2020-02-14 12:51:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Fstein~I097082112b857444c3e2f73896be5832a776743b": {"owner_id": 22076, "owner_name": "Kevin Zhao", "owner_email": "kevin.zhao@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:21:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-14 10:03:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30523, "name": "Dincer Celik", "email": "hello@dincercelik.com", "username": "osmanlicilegi"}, {"value": 2, "date": "2020-02-14 11:41:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 0, "_account_id": 28374, "name": "Viktor Michalek", "email": "viktor.michalek@ultimum.io", "username": "viktormichalek"}], "comments": {}}, "openstack%2Fpython-zaqarclient~master~Iced54e7d270e389a23db2a19394025710565923d": {"owner_id": 8846, "owner_name": "Hao Wang", "owner_email": "sxmatch1986@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 03:35:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8846, "name": "Hao Wang", "display_name": "Hao Wang", "email": "sxmatch1986@gmail.com", "username": "sxmatch"}, {"value": 2, "date": "2020-02-13 01:27:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 1, "date": "2020-02-13 01:51:19.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}], "comments": {}}, "openstack%2Fopenstack-ansible~master~I8310c2485f2bfb9b283068d43c8acd35f29197c3": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-18 08:47:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-01-27 11:34:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29865, "name": "Georgina Shippey", "email": "georgina.shippey@outlook.com", "username": "gshippey"}, {"value": 0, "date": "2020-01-17 10:18:20.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {"tests/roles/bootstrap-host/templates/user_variables_ceph.yml.j2": [{"author": {"_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, "change_message_id": "cdaafea91db7196f2ef62db7daf9a7081a4de289", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b695ad96", "line": 18, "range": {"start_line": 18, "start_character": 81, "end_line": 18, "end_character": 88}, "updated": "2020-01-16 12:40:00.000000000", "message": "this probably should be br-stor", "commit_id": "e2fee48efe116be9e3f1b09db568df9e88bd14da"}]}}, "openstack%2Frally~master~Ie139aa08b2653029f36b890d5a81b5596a350915": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:58:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Fneutron~master~I02ce4d6b84242c42ec26954eeb9b776cb779bff4": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 2, "date": "2020-02-14 10:41:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-02-14 09:18:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-02-14 08:02:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {}}, "openstack%2Fnova~stable%2Frocky~I5b8fa4233d297722c3af08176901d12887bae3de": {"owner_id": 9708, "owner_name": "Balazs Gibizer", "owner_email": "gibizer@gmail.com", "labels": [{"value": 0, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-02-12 14:51:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 2, "date": "2020-02-12 16:39:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/consoleauth/test_consoleauth.py": [{"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "2198cc279a80bc43ee6b95545b10b2e9bcc15231", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c3726de4", "line": 92, "range": {"start_line": 92, "start_character": 42, "end_line": 92, "end_character": 49}, "updated": "2020-02-12 16:39:29.000000000", "message": "secret", "commit_id": "08f1f914cc219cf526adfb08c46b8f40b4e78232"}]}}, "openstack%2Frally~master~I00abce40d333352b25848cfe941f845746bffa8c": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:58:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {".zuul.d/zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1b7b69490cf61b997fd27eb29301d09465567987", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_2ebd5666", "line": 7, "range": {"start_line": 1, "start_character": 2, "end_line": 7, "end_character": 0}, "updated": "2020-02-13 15:05:37.000000000", "message": "extra keys not allowed @ data['pre']", "commit_id": "e7e94ef65078a05be899dc3aed4d9bb3279d1344"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1b7b69490cf61b997fd27eb29301d09465567987", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_aea86620", "line": 12, "range": {"start_line": 8, "start_character": 2, "end_line": 12, "end_character": 0}, "updated": "2020-02-13 15:05:37.000000000", "message": "Job rally-install-base not defined", "commit_id": "e7e94ef65078a05be899dc3aed4d9bb3279d1344"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1b7b69490cf61b997fd27eb29301d09465567987", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_ceafe22a", "line": 17, "range": {"start_line": 13, "start_character": 2, "end_line": 17, "end_character": 0}, "updated": "2020-02-13 15:05:37.000000000", "message": "Job rally-install-base not defined", "commit_id": "e7e94ef65078a05be899dc3aed4d9bb3279d1344"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1b7b69490cf61b997fd27eb29301d09465567987", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_eeb2de94", "line": 22, "range": {"start_line": 18, "start_character": 2, "end_line": 22, "end_character": 0}, "updated": "2020-02-13 15:05:37.000000000", "message": "Job rally-install-base not defined", "commit_id": "e7e94ef65078a05be899dc3aed4d9bb3279d1344"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "1b7b69490cf61b997fd27eb29301d09465567987", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_8ead6a33", "line": 27, "range": {"start_line": 23, "start_character": 2, "end_line": 27, "end_character": 0}, "updated": "2020-02-13 15:05:37.000000000", "message": "Job rally-install-base not defined", "commit_id": "e7e94ef65078a05be899dc3aed4d9bb3279d1344"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "13cdbc4ca8553306a2e3f23eada4324fb3a077ea", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_2e30f605", "line": 8, "range": {"start_line": 1, "start_character": 2, "end_line": 8, "end_character": 0}, "updated": "2020-02-13 15:09:24.000000000", "message": "extra keys not allowed @ data['pre']", "commit_id": "93862829bfc85d8530c1fc6f5c0643cc88db3735"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "13cdbc4ca8553306a2e3f23eada4324fb3a077ea", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ae1b8681", "line": 13, "range": {"start_line": 9, "start_character": 2, "end_line": 13, "end_character": 0}, "updated": "2020-02-13 15:09:24.000000000", "message": "Job rally-install-base not defined", "commit_id": "93862829bfc85d8530c1fc6f5c0643cc88db3735"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "13cdbc4ca8553306a2e3f23eada4324fb3a077ea", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ce32820e", "line": 18, "range": {"start_line": 14, "start_character": 2, "end_line": 18, "end_character": 0}, "updated": "2020-02-13 15:09:24.000000000", "message": "Job rally-install-base not defined", "commit_id": "93862829bfc85d8530c1fc6f5c0643cc88db3735"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "13cdbc4ca8553306a2e3f23eada4324fb3a077ea", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ee35fef5", "line": 23, "range": {"start_line": 19, "start_character": 2, "end_line": 23, "end_character": 0}, "updated": "2020-02-13 15:09:24.000000000", "message": "Job rally-install-base not defined", "commit_id": "93862829bfc85d8530c1fc6f5c0643cc88db3735"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "13cdbc4ca8553306a2e3f23eada4324fb3a077ea", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_8e200ab3", "line": 28, "range": {"start_line": 24, "start_character": 2, "end_line": 28, "end_character": 0}, "updated": "2020-02-13 15:09:24.000000000", "message": "Job rally-install-base not defined", "commit_id": "93862829bfc85d8530c1fc6f5c0643cc88db3735"}]}}, "openstack%2Ftripleo-heat-templates~master~Idd69c687232a10fcb6db79a8b835a1576b7558dd": {"owner_id": 17216, "owner_name": "Martin Schuppert", "owner_email": "mschuppert@redhat.com", "labels": [{"value": 2, "date": "2020-02-13 07:07:54.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20733, "name": "Rajesh Tailor", "email": "ratailor@redhat.com", "username": "rajesht"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-14 08:23:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 1, "date": "2020-02-14 09:43:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30133, "name": "Piotr Kopec", "email": "pkopec17@gmail.com", "username": "pkopec"}, {"value": 0, "_account_id": 17216, "name": "Martin Schuppert", "email": "mschuppert@redhat.com", "username": "mcschupp"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fkolla-ansible~master~If354fbdeb2fd8d026faa0210b84da0a688c3ae0a": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 10:40:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-14 10:36:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "2a79acf7c19242b888b316310b9a0dd0afdc3bc6", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_44fbff78", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 3}, "updated": "2020-02-11 11:56:23.000000000", "message": "WIP", "commit_id": "f8beaad4d61bce609bf323fff4c6aa2812b447e4"}], "tests/deploy-ceph-ansible.sh": [{"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "beeb95662f88f3b8af16d8c56d941e57d1158151", "unresolved": false, "patch_set": 24, "id": "3fa7e38b_c6e4a244", "line": 12, "updated": "2020-02-13 19:43:06.000000000", "message": "just grab this from ansible", "commit_id": "0bd078f93ecb6102b694afe7022b2286ce51b45b"}]}}, "zuul%2Fzuul~master~If0d5877f65296ee2a9f7f0298f8bc6664e6c2a4c": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2475, "name": "Antoine Musso", "email": "hashar@free.fr", "username": "hashar"}, {"value": 2, "date": "2020-02-14 05:14:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-13 21:30:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "x%2Fstackalytics~master~I53cbbdb4daf4f3d9ae5d24f502871a7a5b865ca1": {"owner_id": 13587, "owner_name": "Jean-Daniel Bonnetot", "owner_email": "jean-daniel.bonnetot@corp.ovh.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 11:12:11.000000000", "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}], "comments": {}}, "x%2Fstackalytics~master~If7bb6c51448b9606587bc60e2ba3f83c5ccfaa23": {"owner_id": 31502, "owner_name": "Andrey Zaikin", "owner_email": "zed.0xff@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, {"value": 0, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}, {"value": 2, "date": "2020-02-14 10:49:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}], "comments": {}}, "x%2Fstackalytics~master~I583c2f956cb99ecb4d37cef0e64a406cbe6ce1d9": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15341, "name": "Jim Phillips", "email": "jphillips@mirantis.com", "username": "jphillips"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, {"value": 0, "_account_id": 7624, "name": "Herman Narkaytis", "email": "hnarkaytis@mirantis.com", "username": "hnarkaytis"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 2, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25731, "name": "Stacey Fletcher", "email": "staceylynnfletcher@gmail.com", "username": "StaceyFletcher"}, {"value": 1, "date": "2020-02-14 10:50:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "x%2Fstackalytics~master~I5cd406ea6e96a50d3fc0c6713a8eae29313515b1": {"owner_id": 2475, "owner_name": "Antoine Musso", "owner_email": "hashar@free.fr", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}], "comments": {"stackalytics/dashboard/templates/cncf.html": [{"author": {"_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, "change_message_id": "ac5dcc6665f83f0b5044cd1b7fa5da3d597476e4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_065c9d56", "line": 25, "updated": "2020-02-04 09:20:37.000000000", "message": "this function renders the content into \"timeline\" div, so something like https://opendev.org/x/stackalytics/src/tag/1.0.0/stackalytics/dashboard/templates/layout.html#L84-L86 is also needed.", "commit_id": "6c23137d14dabe5018c36b3ae1641b27c63db37c"}]}}, "openstack%2Ftripleo-heat-templates~master~I6b6c676880ccc8cbed23af135e5865c222a8f1d0": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 16:46:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-02-13 15:07:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I978eeda59fb55e9037ca4dd4b159a2b23765ae99": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-02-12 02:47:02.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-02-14 07:52:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "x%2Fstackalytics~master~Id70f378b1e17141b4cfee77c29419b13474a8354": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30172, "name": "Ian H Pittwood", "email": "ian.h.pittwood@accenture.com"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15341, "name": "Jim Phillips", "email": "jphillips@mirantis.com", "username": "jphillips"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": -1, "date": "2020-02-11 19:29:02.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7624, "name": "Herman Narkaytis", "email": "hnarkaytis@mirantis.com", "username": "hnarkaytis"}, {"value": 1, "date": "2020-02-11 17:24:12.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25731, "name": "Stacey Fletcher", "email": "staceylynnfletcher@gmail.com", "username": "StaceyFletcher"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I9e71c31b1139bceafd653531e21ce527a8deb985": {"owner_id": 30857, "owner_name": "Gongjun Song", "owner_email": "gongjun.song@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fmanila~master~Id150e188606dff392cf779100f474f0e338c7858": {"owner_id": 29632, "owner_name": "Carlos Eduardo", "owner_email": "ces.eduardo98@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fstackalytics~master~Ie58a3e2432ae15bbf43e378d33f98aebf2b3b857": {"owner_id": 5950, "owner_name": "Ilya Shakhat", "owner_email": "shakhat@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 10:23:06.000000000", "_account_id": 5950, "name": "Ilya Shakhat", "email": "shakhat@gmail.com", "username": "shakhat"}, {"value": 0, "_account_id": 9569, "name": "Sergey Nikitin", "email": "nikitinserv@gmail.com", "username": "snikitin"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Frocky~Ic3292fe00742f7719d379b6ac4a023dc8b050700": {"owner_id": 22997, "owner_name": "xinliang", "owner_email": "xinliang.liu@linaro.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 09:37:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-14 08:11:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22997, "name": "xinliang", "email": "xinliang.liu@linaro.org", "username": "xinliang.liu"}], "comments": {}}, "openstack%2Fnova-specs~master~I8697bf3ca72c94c55be0597441921d39fe6f2d70": {"owner_id": 4393, "owner_name": "Dan Smith", "owner_email": "dms@danplanet.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-11-11 19:14:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 1, "date": "2019-11-27 02:29:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9452, "name": "James Penick", "email": "penick@verizonmedia.com", "username": "epim"}, {"value": 2, "date": "2020-02-14 09:04:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 2, "date": "2020-02-14 09:55:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "date": "2019-11-27 00:23:54.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2020-01-08 07:44:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8064, "name": "Jake Yip", "email": "jake.yip@unimelb.edu.au", "username": "jake"}, {"value": 1, "date": "2020-01-31 08:14:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 2033, "name": "Belmiro Moreira", "email": "moreira.belmiro.email.lists@gmail.com", "username": "moreira-belmiro-email-lists"}, {"value": 0, "date": "2020-02-13 19:02:02.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c216583750ebe7d24e41c4f90b3c3b7bd6bc0304", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bf9859cb", "line": 8, "updated": "2020-01-30 23:02:32.000000000", "message": "Whoever respins this next, please add\n\nblueprint nova-audit\n\nfor tracking purposes. Thanks!", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}], "specs/ussuri/approved/nova-audit.rst": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1f664df0", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 32}, "updated": "2019-11-06 18:13:08.000000000", "message": "For the most part the nova-manage commands are only run on-demand and you'd have to setup the external tooling to do it periodically. I'm guessing the one exception here for native periodic ability in nova is the discover_hosts periodic in the scheduler.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d3697a27852485eaa4b251261ecab223c7902cf8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7f474179", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 32}, "in_reply_to": "3fa7e38b_1f664df0", "updated": "2019-11-06 18:22:20.000000000", "message": "Well, I know people run archive and discover_hosts from cron or ansible, so..", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3fc9c978", "line": 21, "updated": "2019-11-06 18:13:08.000000000", "message": "Maybe this is where you'd want to reference https://review.opendev.org/#/c/655908/ as an example of why this is coming up now.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5fa125f7", "line": 49, "range": {"start_line": 49, "start_character": 9, "end_line": 49, "end_character": 17}, "updated": "2019-11-06 18:13:08.000000000", "message": "link to https://docs.openstack.org/nova/latest/cli/nova-manage.html", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_3f6309e0", "line": 63, "range": {"start_line": 63, "start_character": 23, "end_line": 63, "end_character": 26}, "updated": "2019-11-06 18:13:08.000000000", "message": "no", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9fb8fde8", "line": 68, "range": {"start_line": 68, "start_character": 0, "end_line": 68, "end_character": 7}, "updated": "2019-11-06 18:13:08.000000000", "message": "https://review.opendev.org/#/c/655908/ isn't a current one, but it's proposed and at least a few operators have now indicated they have hit a case where they have an instance mapping with no cell_id set and no build request and the instance isn't found in any cell db, so it's a useful thing to have. It might be worth mentioning in here somewhere as a thing that could be integrated into audit in the future, unless it just becomes part of map_instances or verify_instance. If you want to omit it that's fine since it seems we don't know yet if it should be a new thing or munged into one of the existing commands.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1f940d8c", "line": 77, "updated": "2019-11-06 18:13:08.000000000", "message": "This also runs through all cells but I've got a todo in that code to make it possible to run on a specific cell. The audit service could just handle that itself though by iterating cells and within each cell, iterate instances and call with a specific instance in each loop, like the heal instance info cache periodic works in compute today.\n\nObviously we still want to be able to run this directly via CLI because it has the --dry-run option in case someone wants a report of what's busted but doesn't yet want to change anything.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_df8d157d", "line": 104, "updated": "2019-11-06 18:13:08.000000000", "message": "And we already have a config option for this:\n\nhttps://docs.openstack.org/nova/latest/configuration/config.html#scheduler.discover_hosts_in_cells_interval\n\nI'm assuming part of the plan would be to re-use that and eventually deprecate it from the scheduler and move it to the audit service.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9fe55d41", "line": 110, "range": {"start_line": 110, "start_character": 22, "end_line": 110, "end_character": 31}, "updated": "2019-11-06 18:13:08.000000000", "message": "a runtime", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_dfe2f530", "line": 112, "updated": "2019-11-06 18:13:08.000000000", "message": "Would we also have config on *when* to run this during the day? Like midnight?", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d3697a27852485eaa4b251261ecab223c7902cf8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_df551520", "line": 112, "in_reply_to": "3fa7e38b_dfe2f530", "updated": "2019-11-06 18:22:20.000000000", "message": "I dunno, maybe we'd need it for things like that.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9f86bd16", "line": 180, "range": {"start_line": 180, "start_character": 52, "end_line": 180, "end_character": 59}, "updated": "2019-11-06 18:13:08.000000000", "message": "command/service?", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1fc88d54", "line": 189, "updated": "2019-11-06 18:13:08.000000000", "message": "So would the existence of nova-audit as a service mean something like https://review.opendev.org/#/c/655908/ would now just be done as part of the daemon or would it also be optional as a specific CLI that can be run like it's proposed in nova-manage now?\n\n(later)\n\nOK I guess the upgrade impact below says that new things like https://review.opendev.org/#/c/655908/ would just go into nova-audit now.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d3697a27852485eaa4b251261ecab223c7902cf8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9f2d5db0", "line": 189, "in_reply_to": "3fa7e38b_1fc88d54", "updated": "2019-11-06 18:22:20.000000000", "message": "I would think we'd want to not keep adding them in both places. Not even for the code duplication, but for the operator confusion.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_df9af56d", "line": 193, "updated": "2019-11-06 18:13:08.000000000", "message": "egads", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1fcded5d", "line": 197, "updated": "2019-11-06 18:13:08.000000000", "message": "I'm not sure I love the idea of deprecating and move the db archive/purge commands to a new nova-audit thing alone since those are more db management than audit things IMO. I would think the audit daemon could run archive/purge as well but there isn't a harm in leaving those in nova-manage db.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d3697a27852485eaa4b251261ecab223c7902cf8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5f6925f6", "line": 197, "in_reply_to": "3fa7e38b_1fcded5d", "updated": "2019-11-06 18:22:20.000000000", "message": "Sure, that's fine. I really had the \"heal\" commands in mind when I wrote this. I'd expect you'd want to be able to run this:\n\n  nova-audit --only-tasks=archive", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "27daec26d361199b08900de69e309f9dcea0c246", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_df72f512", "line": 237, "range": {"start_line": 237, "start_character": 0, "end_line": 237, "end_character": 4}, "updated": "2019-11-06 18:13:08.000000000", "message": "FWIW, with the newer heal type commands I've mostly entirely gone to functional testing for that stuff since when they deal with multiple cells I don't really trust unit testing.\n\nhttps://github.com/openstack/nova/blob/master/nova/tests/functional/test_nova_manage.py\n\nBut I guess this is just saying unit testing for the new command interface/daemon and actually calling out to existing things like heal_allocations would just be mocked out? I think there is value in functional testing over unit testing given the complexity of a new service regardless.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d3697a27852485eaa4b251261ecab223c7902cf8", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ff79f1c4", "line": 237, "range": {"start_line": 237, "start_character": 0, "end_line": 237, "end_character": 4}, "in_reply_to": "3fa7e38b_df72f512", "updated": "2019-11-06 18:22:20.000000000", "message": "I was thinking functional tests for the actual tasks, but mostly just unit for the actual service.", "commit_id": "0e9d9ddb8d7c0ff433a4a91da5d86edc298f4c5f"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "6fc36fab94c17c94c0167f46e2cff6caf04a922c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3f59c95a", "line": 139, "updated": "2019-11-06 18:25:53.000000000", "message": "This is an interesting idea and it makes me wonder if operators might prefer something like this where they can choose how they run it periodically (cron, etc) instead of having a prescribed service. There's pros and cons to both. I tend to think having the service would be nicer and easier.\n\nI'm interested to hear what operators think about it.", "commit_id": "7e0cf21bde5b7c1864a46806aaaeb6234c4d9997"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "3c600abc7024089bde29b05a108042041b16c61f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4a6c05d0", "line": 139, "in_reply_to": "3fa7e38b_3f59c95a", "updated": "2019-11-06 18:41:12.000000000", "message": "Well, I put this last on the list of alternatives because I think it's a terrible idea, given the giant mess that is nova-manage today. It has very inconsistent requirements for which config you point it to for each of its commands, etc. But, I put it here for completeness :)", "commit_id": "7e0cf21bde5b7c1864a46806aaaeb6234c4d9997"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "a1a1a9e68bff7320103197342acfc242dff6028e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_eab13146", "line": 139, "in_reply_to": "3fa7e38b_4a6c05d0", "updated": "2019-11-06 18:49:45.000000000", "message": "Sorry, I didn't mean only the nova-manage option really (the nova-manage option was just easiest for me to visualize the concept) but rather the idea of a \"unified interface\" without the daemon, in general.\n\nAnd that I tend to think having the daemon and scheduling available is nicer and easier. Though now that I say that, it seems it could easily be built to be able to be used in either way, as a daemon or not. (If there is any interest in a non-daemon).", "commit_id": "7e0cf21bde5b7c1864a46806aaaeb6234c4d9997"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "782bdb62f93e9636745cc6f62e5a7d04828d5f96", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6af461f2", "line": 139, "in_reply_to": "3fa7e38b_ca8d557d", "updated": "2019-11-06 18:56:32.000000000", "message": "Oh, my bad. For whatever reason, it didn't stand out to me that this proposal is already covering the case where someone would rather run all the things in a cron (same as what the daemon would do) instead of deploying a new service.", "commit_id": "7e0cf21bde5b7c1864a46806aaaeb6234c4d9997"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "ffd67e2f35d0b8abe22b97dbec1cb5691b2cc6bd", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ca8d557d", "line": 139, "in_reply_to": "3fa7e38b_eab13146", "updated": "2019-11-06 18:52:33.000000000", "message": "Yeah, which is why in the proposed change section I said the command needs to be able to run as a daemon, but also in one-shot mode so you can do your own scheduling if you want (L60) in this version. Daemon for easy just-run-this 90% of the cases. One-shot for people that need super control of when each thing runs, or still want to run these things manually but with a more consistent interface.", "commit_id": "7e0cf21bde5b7c1864a46806aaaeb6234c4d9997"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_870aeb1d", "line": 57, "updated": "2019-11-07 13:20:18.000000000", "message": "OK with this I could see a simple eventlet-based (oslo.esrvice Service like our other non-API services) that just has periodic task wrappers over the existing nova-manage commands.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6a3f8053896459a4481384d274502f7ade9cfde9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_42c94177", "line": 57, "in_reply_to": "3fa7e38b_271e970d", "updated": "2019-11-07 14:59:44.000000000", "message": "I wasn't really planning to make each thing an oslo.service periodic, fwiw. I don't have it all fleshed out in my head yet, but I think we could probably stand to write this daemon differently than we would for an rpc-using service that needs eventlet, et al.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "85920c665731ee2885a6974a5d296853628481fb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_dd4b0826", "line": 57, "in_reply_to": "3fa7e38b_42c94177", "updated": "2020-02-14 09:55:34.000000000", "message": "We could discuss the details within the implementation changes.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2080e8442cfa1ba059d960b13392bd518c4d470f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_271e970d", "line": 57, "in_reply_to": "3fa7e38b_870aeb1d", "updated": "2019-11-07 13:43:13.000000000", "message": "I think this is noisy overkill, see my comment below. But agree that if this is done an oslo.service.Service is the easy way to go.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a724c7b3", "line": 60, "updated": "2019-11-07 13:20:18.000000000", "message": "And this could be a new nova-audit command that is just a meta command that runs the existing nova-manage commands. Obvious the devil is in the details on this one, like:\n\n* What does it do for options? I assume defaults for any options but what about things that require input, like a cell or instance? I guess the meta command would just take care of that, e.g. iterating cells and instances within cells for a command that needs that. If there are common options, like --verbose, then we could pass that through from the nova-audit meta command.\n* What happens if any individual command fails? Do we stop or roll up the results of all at the end in a report/summary style output that is machine readable (sort of like how online_data_migrations and nova-status works)?", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "799a81bfdc5a1c3fc0249f265dd5ddb885655656", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_67c80fa8", "line": 60, "in_reply_to": "3fa7e38b_a724c7b3", "updated": "2019-11-07 13:21:44.000000000", "message": "> * What does it do for options? I assume defaults for any options\n > but what about things that require input, like a cell or instance?\n > I guess the meta command would just take care of that, e.g.\n > iterating cells and instances within cells for a command that needs\n > that. If there are common options, like --verbose, then we could\n > pass that through from the nova-audit meta command.\n\nI thought about this later but I suppose the meta command would rely on config options for anything not provided directly by the user on the CLI.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2080e8442cfa1ba059d960b13392bd518c4d470f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_476dd397", "line": 63, "updated": "2019-11-07 13:43:13.000000000", "message": "Having a daemon that needs to stay alive seems excessive if we can rely on the presence of cron. Then, each time the thing runs it records that is ran so when it starts up the next it can do its own comparison against config to know what it should do (so one cron job can deal with all job types, not a cron job per type, as that would invalidate the whole point).", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2738d7d2", "line": 63, "range": {"start_line": 63, "start_character": 12, "end_line": 63, "end_character": 33}, "updated": "2019-11-07 13:20:18.000000000", "message": "Not all of the nova-manage commands have a --dry-run option. I'm assuming as part of this we'd add --dry-run capabilities to the existing commands that don't have one and then nova-audit could be run with a --dry-run option that just gets passed through?", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6a3f8053896459a4481384d274502f7ade9cfde9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_82b739f6", "line": 63, "in_reply_to": "3fa7e38b_476dd397", "updated": "2019-11-07 14:59:44.000000000", "message": "The problem with doing that is that if we always only run from cron, we have to persist lots of things somewhere in order to make sure the next time we're run, we know whether or not it's time to do a thing, where to restart, etc.\n\nWe have some tasks that need to run every ten minutes (host discovery) and some that run every few days (db archival) and some that need to run one instance per minute (heal allocations). If we're only ever run from cron via a single invocation, we need to be run every minute, and we need to persist when the last time we ran the first two, and the instance pointer of the last healed allocation somewhere. If we do it all in memory, that's massively easier.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "85920c665731ee2885a6974a5d296853628481fb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7d5454c5", "line": 63, "in_reply_to": "3fa7e38b_82b739f6", "updated": "2020-02-14 09:55:34.000000000", "message": "Again, that's kind of details we can agree during the implementation phase.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "ffe1b7587a436fea1b8fd342d5f68dd04d7c7af3", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_39bec900", "line": 77, "range": {"start_line": 76, "start_character": 39, "end_line": 77, "end_character": 5}, "updated": "2019-11-27 03:41:41.000000000", "message": "If one second for one instance(or we want a shorter cycle?), then 1000 instances need 16 mins.  In this 16mins, if there any other instance on that node to consume the left resource on the node, then the heal will fail. For more large scale, this doesn't sound very useful.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "cbc903a0a0c70f3743171a7fd600f805e2283771", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_03894c6e", "line": 77, "range": {"start_line": 76, "start_character": 39, "end_line": 77, "end_character": 5}, "in_reply_to": "3fa7e38b_39bec900", "updated": "2020-02-13 18:41:35.000000000", "message": "Sorry, I missed this comment from a long while ago.\n\nI wouldn't expect a cycle time shorter than 1 second for anything :) But yeah, if there were 1000 instances in need of healing I agree that would be a pretty long time to get all healed. I would think the expectation here is that not a large percentage of instances would be in need of healing, so each interval you check and find an instance that needs healing and heal it, only one healing per interval. And most of the time you will not find anything to heal.\n\nBut, really we could just have another config option related to nova-audit config that controls how many instances to heal in one batch. The default would be 1 but if you are an operator who regularly has a large percentage of instances in need of healing, you could set the value higher to suit your environment and tune it.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2080e8442cfa1ba059d960b13392bd518c4d470f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a7ce07b5", "line": 108, "updated": "2019-11-07 13:43:13.000000000", "message": "++\n\nWe should make sure that we're not duplicating effort/activity", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "85920c665731ee2885a6974a5d296853628481fb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5d0638ce", "line": 144, "updated": "2020-02-14 09:55:34.000000000", "message": "FWIW, I think we could provide a configurable way for ops to tell their wanted peridiocal check for every command, but that's possibly something we can defer in another change.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2080e8442cfa1ba059d960b13392bd518c4d470f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c706a3ce", "line": 158, "updated": "2019-11-07 13:43:13.000000000", "message": "if the \"just from cron or cli\" option is taken, than having it as part of nova-manage seems an easy way to go (no need to move existing nova-manage code to a shared location, for example).", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6a3f8053896459a4481384d274502f7ade9cfde9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_02c34959", "line": 158, "in_reply_to": "3fa7e38b_c706a3ce", "updated": "2019-11-07 14:59:44.000000000", "message": "I actually *want* to move the nova-manage stuff, because nova-manage has become a total wasteland of crazy.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c777839f", "line": 181, "updated": "2019-11-07 13:20:18.000000000", "message": "I do think this would be useful if you're running it as a service that is just running periodic tasks in case one of them fails. Otherwise we'll likely just be logging errors in the nova-audit service logs on each periodic run unless whatever is tripping the error goes away, e.g. bad instance is deleted or something. But I agree it's something that could be built in a later phase.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2080e8442cfa1ba059d960b13392bd518c4d470f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_670b2fd5", "line": 181, "updated": "2019-11-07 13:43:13.000000000", "message": "Yes, exactly: Avoid doing now if nobody cares.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_87718bab", "line": 216, "range": {"start_line": 215, "start_character": 10, "end_line": 216, "end_character": 63}, "updated": "2019-11-07 13:20:18.000000000", "message": "OK this means existing external-to-nova operator-owned maintenance tasks, e.g. scripts run in a cron, ansible tasks, etc.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_07b27b4a", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "updated": "2019-11-07 13:20:18.000000000", "message": "This is the one sticking point I have with this spec.\n\nI really like the idea of the proposed change points above, (1) new service that runs the existing things in configurable periodic tasks, (2) meta command that runs all of the existing commands with defaults, simple common options, or configs, (3) the ability to do #2 but in --dry-run mode for all of them.\n\nI think all of that can be done without deprecating and moving the existing nova-manage commands. That feels like unnecessary churn to me for little gain, especially for operators that have already built tooling around those existing commands. Not doing this deprecate/move would also avoid the upgrade impact, you'd just opt in when you're ready to deploy and start using the new service/command. It seems the one benefit of moving everything is a unified interface but I think (2 - the meta command) gives us that for those that don't care about the granular details of each individual command.\n\nAnyway, I'm kind of -1 on this point of deprecating and moving the existing commands given the service/meta command can be built on the existing stuff pretty easily today and except for the external interface, how that new service/command is implemented is all under the covers from the user so I don't see the need for the churn.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "6a3f8053896459a4481384d274502f7ade9cfde9", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_42e061f9", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_07b27b4a", "updated": "2019-11-07 14:59:44.000000000", "message": "I think the benefit of this is diminished if we don't try to move people to using the new unified thing. I'm not really in a rush to *remove* the things we have today from nova-manage, but I would expect we should mark and deprecate them as \"not the best way\" once the alternative exists. It's not about removing duplicative code, but about confusion surrounding what the best way do to a thing is, whether or not the two methods are equivalent, and I think that if we keep the above-listed items in nova-manage forever, we're just creating a new thing without achieving the goal of unification and standardization.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "3c2108612e6a9abe1bf43a711896f422230acc20", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c2c8d122", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_42e061f9", "updated": "2019-11-07 15:23:07.000000000", "message": "I would prefer to add the new thing, gain adoption, get feedback, and then if people (operators mostly since they are the ones consuming this) want the work of a unified interface, do that in round 2. I think it adds too much noise to the easy big gain in what's proposed besides also munging the \"deprecate and unify everything\" part of this, especially since I don't know that I think things like db archive/purge should be moved (ever) to an \"audit\" command. I know you have a note about that below, I'm just reiterating.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "b1380f64bb7cfa75c4b37b513c3f7afdc5d02f74", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ce0f9b86", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_4ec3ab58", "updated": "2019-11-07 18:31:52.000000000", "message": "My 0.5 cents: personally, I'd want to defer to operators on when/if to deprecate the nova-manage stuff and get some of their comments on this spec as to whether they like the new service idea, in general. I'm thinking of, for example, mnaser, belmoira, eandersson to comment on this spec.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "512d64a5ef84ffcdb0f3fd06e0d764dd996e031f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_aeb25f05", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_88bf5bfb", "updated": "2019-11-07 18:06:28.000000000", "message": "I thought 1 and 2 in the proposed changes section are separate things. 1 being a new service. 2 being a new command (nova-audit) which is a wrapper over the existing nova-manage commands listed in this spec. And the 3rd proposed change is a dry-run option for #2 (the new command).\n\nThat all seems worthwhile to me along with the config options and such if you run it as a service (#1).\n\nDeprecating and moving all of the existing nova-manage commands listed here seems like it's not something that needs to be done in the first pass, if ever (to me).\n\nIt's just my opinion. I -1ed because if I'm going to vote, I vote to drop the deprecate/move part of this, at least for the first iteration until, like I said, there is adoption and feedback on the new thing and then determine if there is (enough) value in the churn on moving everything from nova-manage to nova-audit CLI-wise.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "29cd68693e029a52a5f479c0ee92884f2dc22877", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_4ec3ab58", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_aeb25f05", "updated": "2019-11-07 18:07:30.000000000", "message": "BTW, if enough other cores *want* to move forward with the deprecation/move of CLI from nova-manage -> nova-audit, then they should say so, +1 and override me and I can yield on this point.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "2b7afbc9cf98436a46555d40f806656c9e5cb25b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_88bf5bfb", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_c2c8d122", "updated": "2019-11-07 15:50:29.000000000", "message": "Are you saying you think we should just make a daemon wrapper around the existing nova-manage commands? Meaning only the first bullet of the \"three things\" in the proposed change section? That's not really the biggest win of what I'm proposing here, IMHO. If that's all we care about, we might as well just give people a sample crontab to install that runs things we think need running at various intervals.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "d06ac6dcf94b9755763e99c907cb046734ae8cb8", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ee2db7ae", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_ce0f9b86", "updated": "2019-11-07 18:46:55.000000000", "message": "Okay, I guess I'm way on a different page here. The current mess of overlapping and confusing nova-manage commands is the major problem to me. The scheduling part is not hard and, as has been said, could be done with cron if it was clear what to run, when, and how often. So it sounds like I should just drop this idea and we should focus on documentation and samples of how to schedule the existing commands.\n\nIf all we're doing is (effectively) calling nova-manage from this audit service, we're just reimplementing cron, which makes no sense. It's definitely not something I'm interested in working on.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "85920c665731ee2885a6974a5d296853628481fb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fdf4c4ce", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_d95f584b", "updated": "2020-02-14 09:55:34.000000000", "message": "I think we can reasonably assume a transition period where the existing commands would still allow to run checks by hand while the daemon would run and then we could discuss on when we would like them to be deprecated.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "da716573361415db4decc88448240fe5de89d5e4", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f1cef6b5", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_ee2db7ae", "updated": "2019-11-07 19:06:19.000000000", "message": "I don't think we're on a different page. To me, the point of this proposal is to make life better for operators and I feel hesitant to speak for them or guess about what they want. My expectation is that they will like this proposal and support deprecation of the nova-manage stuff, but I might be wrong.\n\nThe point of my last comment was just to acknowledge that I saw this convo and that I would base my own vote on operators comments on this spec. I'm not trying to derail anything here.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "ef24e292eb794b4826c92fc804685cf8d353977f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_d95f584b", "line": 219, "range": {"start_line": 216, "start_character": 64, "end_line": 219, "end_character": 21}, "in_reply_to": "3fa7e38b_f1cef6b5", "updated": "2019-11-08 15:15:30.000000000", "message": "I see value in unifying everything into a single place and doing it within nova so everyone doesn't have to re-invent the same wheel, and that also means people get the new things (like heal_instance_mappings) for free when they upgrade rather than having to scour release notes or finding a new command after they've already ran into a problem.\n\nI'll drop my -1 until others (cores/operators) take a look at this and can weigh in. I don't expect much feedback until late next week at the earliest given the summit/ptg is done and people are heading home, but I don't want my -1 to keep people from reading this and providing feedback.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "995a2d45ff76ea8737f78aa4306e52061d22e889", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_b0ebaddb", "line": 231, "updated": "2019-11-27 00:17:01.000000000", "message": "So is melwitt the owner on this now or what?", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, "change_message_id": "033a7589cf31ea7e2ba94e0e380a512cae782989", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_90f0f168", "line": 231, "in_reply_to": "3fa7e38b_b0ebaddb", "updated": "2019-11-27 00:40:33.000000000", "message": "I hope to not be, but I don't want to see this idea die.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "2b0498e04cfef0cdd185dc6bd5cb141e85d08a4b", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c7ea230d", "line": 247, "updated": "2019-11-07 13:20:18.000000000", "message": "Yeah this is good.\n\nI also thought about deploying the nova-audit service in devstack so it's running in daemon mode. That would get run in the gate but I'm not sure how much help it would be in the gate since we already run periodic tasks in the compute and stuff but those don't really show up if they fail for tempest runs because they are happening out of band from what tempest is doing. We do seem them spew errors in the logs at times, but people mostly only notice that when investigating the logs for some other gate (tempest) failure.\n\nSo maybe just adding nova-audit to devstack as optional but not a default enabled service in gate runs is the way to go. Obviously optional. I'm just thinking out loud here.", "commit_id": "d649a3544bc386f5d71428d652750cc3c41e11aa"}]}}, "openstack%2Fheat~master~Ib2ac05e4f89fe8eb159e4cb871828ce07bd03089": {"owner_id": 8289, "owner_name": "huangtianhua", "owner_email": "tiantian223@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7404, "name": "Ethan Lynn", "email": "xuanlangjian@gmail.com", "username": "GaryLynn"}, {"value": 2, "date": "2020-02-14 08:21:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 10487, "name": "Kanagaraj Manickam", "email": "mkr1481@gmail.com", "username": "kanagarajm"}, {"value": 2, "date": "2020-01-09 16:35:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 0, "_account_id": 27427, "name": "David Peacock", "email": "dpeacock@redhat.com", "username": "davidjpeacock"}, {"value": 0, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {"heat/engine/resources/openstack/designate/recordset.py": [{"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "ed47756f243688ee819d9060bf952e520bb83907", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_514c0674", "line": 160, "range": {"start_line": 160, "start_character": 11, "end_line": 160, "end_character": 23}, "updated": "2020-02-14 08:21:34.000000000", "message": "Not ideal change, but since no likely self.resource_id from handle_delete will be False, I guess it's no harm to do this way", "commit_id": "c2ff04ec69eea03c7bcd46234911dbcc77c85bd4"}], "heat/engine/resources/openstack/heat/remote_stack.py": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "3b37f08240721d2ed05bfc114ac61d3c88a63d74", "unresolved": false, "patch_set": 2, "id": "df87a7cf_f9c5b25c", "line": 178, "updated": "2017-12-01 22:43:23.000000000", "message": "I'd prefer an explicit 'return None' at the end of the method.", "commit_id": "a2be16fb2e68efb820f0810b05ee72accad58821"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "3b37f08240721d2ed05bfc114ac61d3c88a63d74", "unresolved": false, "patch_set": 2, "id": "df87a7cf_59aa9e85", "line": 267, "range": {"start_line": 267, "start_character": 36, "end_line": 267, "end_character": 48}, "updated": "2017-12-01 22:43:23.000000000", "message": "Maybe we should just call this resource_id?", "commit_id": "a2be16fb2e68efb820f0810b05ee72accad58821"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "ed47756f243688ee819d9060bf952e520bb83907", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_cae7c044", "line": 318, "range": {"start_line": 318, "start_character": 8, "end_line": 318, "end_character": 19}, "updated": "2020-02-14 08:21:34.000000000", "message": "not required actually:)", "commit_id": "c2ff04ec69eea03c7bcd46234911dbcc77c85bd4"}]}}, "openstack%2Fpuppet-tripleo~master~I3d28680b4cf18c06b799e329639bb424e63d1368": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-30 01:39:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-02-07 22:18:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fmistral~stable%2Fstein~I82255e97b73f7a31937ee219ff4bb3b10bc3ae35": {"owner_id": 31596, "owner_name": "Ilya Zubov", "owner_email": "zubov@selectel.ru", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}], "comments": {}}, "openstack%2Fdevstack~stable%2Frocky~I4707554e65a3b2ca7ee008cafbcc9bcf21f40a14": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-06-04 07:07:36.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}, "openstack%2Fec2-api~master~I5ab6b6720ae75d9f036b41c84b11e0fe0608b0d1": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18810, "name": "alexey-mr", "email": "alexey.morlang@gmail.com", "username": "alexey-mr"}, {"value": 2, "date": "2020-02-14 08:21:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}, {"value": 0, "_account_id": 31572, "name": "Dmitry_Eremeev", "email": "deremeev@progmaticlab.com", "username": "Dmitry_Eremeev"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I097082112b857444c3e2f73896be5832a776743b": {"owner_id": 28374, "owner_name": "Viktor Michalek", "owner_email": "viktor.michalek@ultimum.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-10-03 11:33:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2019-10-03 11:33:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fnova-specs~master~Id87e1b458b043d5128069d2b1b887a4850591d9a": {"owner_id": 782, "owner_name": "John Garbutt", "owner_email": "john@johngarbutt.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 14:06:28.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 782, "name": "John Garbutt", "email": "john@johngarbutt.com", "username": "johngarbutt"}, {"value": 2, "date": "2020-01-27 13:24:28.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 2, "date": "2020-01-27 10:10:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {"specs/ussuri/approved/unified-limits-nova.rst": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5ad3dd8acdd60a2a020e91838f87b688fbcd484a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a34e7f8d", "line": 470, "range": {"start_line": 470, "start_character": 4, "end_line": 470, "end_character": 5}, "updated": "2020-01-22 11:57:35.000000000", "message": "to", "commit_id": "50ebe0171b0ee98cf74280a714a93ab8e84aff75"}]}}, "openstack%2Fpuppet-openstack_extras~stable%2Fpike~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpuppet-openstack_extras~stable%2Focata~Ief909c8303d7d29dcd0c19ee4cb4974667eadbcb": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fneutron~master~I8e8e5cd8c4027cce58c7073002120d14f251463d": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 1, "date": "2020-02-12 13:07:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 2, "date": "2020-02-12 20:18:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-12 23:43:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 1, "date": "2020-02-13 10:37:12.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fec2api-tempest-plugin~master~Ibe564b0edb64eaf2240f077f4adf042689ed6057": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18810, "name": "alexey-mr", "email": "alexey.morlang@gmail.com", "username": "alexey-mr"}, {"value": 2, "date": "2020-02-14 08:21:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}], "comments": {}}, "openstack%2Fxstatic-angular-gettext~master~Iae603434f1897fcbf47cf37bbedf5956848a5bd2": {"owner_id": 8648, "owner_name": "Radomir Dopieralski", "owner_email": "openstack@dopieralski.pl", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8648, "name": "Radomir Dopieralski", "email": "openstack@dopieralski.pl", "username": "thesheep"}, {"value": 2, "date": "2020-01-27 09:30:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fheat~master~I8e5cb027beebce39921d336fb3845125b0efc5bc": {"owner_id": 30515, "owner_name": "Sampat Ponnaganti", "owner_email": "sp810x@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30495, "name": "Nafiz Haider", "email": "nafizhaider22@gmail.com", "username": "nafh27"}, {"value": 2, "date": "2020-02-14 06:03:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 0, "_account_id": 27427, "name": "David Peacock", "email": "dpeacock@redhat.com", "username": "davidjpeacock"}, {"value": 0, "_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}], "comments": {"heat/engine/clients/os/keystone/__init__.py": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f43e2b6937e3d93dec0780788fe594cc012d4812", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_9656cdcc", "line": 171, "updated": "2020-01-09 21:42:02.000000000", "message": "It seems like we could just call self.client().client.users.find() instead of filtering the list ourselves? Would probably be more efficient as well.\n\nThis appears to be what osc is doing to get the case-insensitive behaviour:\nhttps://opendev.org/openstack/osc-lib/src/branch/master/osc_lib/utils/__init__.py#L240-L242\n\n(They are definitely not doing a case-insensitive compare on the client side in cases where find() doesn't work: https://opendev.org/openstack/osc-lib/src/branch/master/osc_lib/utils/__init__.py#L280-L282)\n\nIf that works then I don't think we'd even need the config option, since we'd be leaving it up to Keystone to do the Right Thing.", "commit_id": "a089565d95fd844782c3e14299b962b04ae4ca5b"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "5dbd9067450e315961902eee8bf9a417e9b682c4", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_a41ba581", "line": 170, "range": {"start_line": 169, "start_character": 16, "end_line": 170, "end_character": 57}, "updated": "2020-02-13 16:41:14.000000000", "message": "just use pass here and line 171 will do the works for you", "commit_id": "f9e761a1e6c028390afd69105827756bcbb03d24"}, {"author": {"_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}, "change_message_id": "cbc5d4ca7a51495c374c4221fb4ecbc23180613a", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_ffb7e6f6", "line": 170, "range": {"start_line": 169, "start_character": 16, "end_line": 170, "end_character": 57}, "in_reply_to": "3fa7e38b_a41ba581", "updated": "2020-02-13 16:56:25.000000000", "message": "Done", "commit_id": "f9e761a1e6c028390afd69105827756bcbb03d24"}], "heat/tests/clients/test_keystone_client.py": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "aa14fb846d49203a0034c9f69a7a5927af3a45ab", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_e0dda2de", "line": 915, "updated": "2020-02-04 14:49:07.000000000", "message": "It doesn't return None if it's not found, it raises a NotFound exception:\n\nhttps://github.com/openstack/python-keystoneclient/blob/master/keystoneclient/base.py#L504", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}, "change_message_id": "448ad39109946c92734cbc1516bfa2950ebc8c5c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_aee0bb94", "line": 915, "in_reply_to": "3fa7e38b_e0dda2de", "updated": "2020-02-07 18:23:11.000000000", "message": "Done", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "aa14fb846d49203a0034c9f69a7a5927af3a45ab", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_40f8364a", "line": 939, "updated": "2020-02-04 14:49:07.000000000", "message": "ditto", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}, "change_message_id": "448ad39109946c92734cbc1516bfa2950ebc8c5c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_cee5f7a4", "line": 939, "in_reply_to": "3fa7e38b_40f8364a", "updated": "2020-02-07 18:23:11.000000000", "message": "Done", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}], "releasenotes/notes/support_case_insensitive_user_name_search-92d6126d8be2ce4f.yaml": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "aa14fb846d49203a0034c9f69a7a5927af3a45ab", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_80b4ee82", "line": 2, "updated": "2020-02-04 14:49:07.000000000", "message": "I think it's fair to list this under \"fixes\" rather than \"features\".", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}, "change_message_id": "448ad39109946c92734cbc1516bfa2950ebc8c5c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_0ec78f13", "line": 2, "in_reply_to": "3fa7e38b_80b4ee82", "updated": "2020-02-07 18:23:11.000000000", "message": "Done", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "aa14fb846d49203a0034c9f69a7a5927af3a45ab", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_9b6f7fc6", "line": 5, "updated": "2020-02-04 14:49:07.000000000", "message": "This doesn't really mean a lot to a reader of the release notes. How about something like:\n\n  On clouds where Keystone usernames are `case-insensitive\n  <https://docs.openstack.org/keystone/latest/admin/case-insensitive.html>`_,\n  Heat will now allow usernames with any case as property and\n  parameter values where a Keystone user is expected\n  (i.e. a ``keystone.user`` custom constraint applies).\n  Previously the case had to match the case with which the name\n  was stored in Keystone, even if Keystone itself was\n  case-insensitive.", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}, {"author": {"_account_id": 30515, "name": "Sampat Ponnaganti", "email": "sp810x@att.com", "username": "sp810x@att.com"}, "change_message_id": "448ad39109946c92734cbc1516bfa2950ebc8c5c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_4e434798", "line": 5, "in_reply_to": "3fa7e38b_9b6f7fc6", "updated": "2020-02-07 18:23:11.000000000", "message": "Done", "commit_id": "427f895086ebd6a67c09602396974d46f568bc5c"}]}}, "opendev%2Fsandbox~master~Id34ce480e7364c5494e796e6abdca26e1d3f7d78": {"owner_id": 31596, "owner_name": "Ilya Zubov", "owner_email": "zubov@selectel.ru", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10068, "name": "Welcome, new contributor!", "username": "welcome-message"}], "comments": {}}, "openstack%2Ftempest~master~I07af81cbdbbf101e1b6d54a75cae890a8b5f0e55": {"owner_id": 30643, "owner_name": "wanglbj", "owner_email": "wanglbj@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-07 07:25:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20190, "name": "zhufl", "email": "zhu.fanglei@zte.com.cn", "username": "zhufl"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 0, "_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, {"value": 2, "date": "2020-02-14 05:03:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 0, "_account_id": 30643, "name": "wanglbj", "email": "wanglbj@inspur.com", "username": "wanglbj"}], "comments": {"tempest/tests/lib/services/network/test_agents_client.py": [{"author": {"_account_id": 22873, "name": "Martin Kopec", "email": "mkopec@redhat.com", "username": "mkopec"}, "change_message_id": "a499e63a5b358839229d838397949a88321e373d", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ba4d47c6", "line": 23, "range": {"start_line": 23, "start_character": 4, "end_line": 23, "end_character": 58}, "updated": "2020-02-10 08:06:50.000000000", "message": "maybe this is no longer needed, instead of FAKE_AGENT_ID var FAKE_SHOW_DATA['agent']['id'] could be used?\n\notherwise the change looks good", "commit_id": "468f8fb18c77e1ba08310a5f9f12b4f3d179aa9f"}, {"author": {"_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, "change_message_id": "d6ec54fb016287fd441fb5659e84b20901669780", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_604ba028", "line": 127, "updated": "2020-02-10 09:42:56.000000000", "message": "Why use this instead of FAKE_SHOW_DATA['agent']['id'] ?", "commit_id": "468f8fb18c77e1ba08310a5f9f12b4f3d179aa9f"}, {"author": {"_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, "change_message_id": "d6ec54fb016287fd441fb5659e84b20901669780", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_80481c2b", "line": 136, "updated": "2020-02-10 09:42:56.000000000", "message": "ditto", "commit_id": "468f8fb18c77e1ba08310a5f9f12b4f3d179aa9f"}]}}}