{"openstack%2Fcharm-octavia~master~I3c7540e53f6ddbf4dcc9736bae72e27b7d6fdd27": {"owner_id": 13686, "owner_name": "Frode Nordahl", "owner_email": "frode.nordahl@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 07:06:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 0, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}, {"value": 2, "date": "2020-02-14 07:09:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}], "comments": {}}, "openstack%2Ftempest~master~I75868d5c9b6630fe78958ff89e58a0aced09a6b3": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 5196, "name": "Matthew Treinish", "email": "mtreinish@kortar.org", "username": "treinish"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-02-12 01:22:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-14 05:01:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "deed69158543ce26efdc0d7e331e1a0a41250546", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_eabbcabb", "line": 153, "range": {"start_line": 153, "start_character": 56, "end_line": 153, "end_character": 60}, "updated": "2020-02-12 00:05:44.000000000", "message": "I got confused with this \"py27\". Because we change to use python3 for this test?", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9b88c8c89ad3e31dc43444044cf0ddffa2f6ef88", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_ea450a9d", "line": 153, "range": {"start_line": 153, "start_character": 56, "end_line": 153, "end_character": 60}, "in_reply_to": "3fa7e38b_eabbcabb", "updated": "2020-02-12 00:10:40.000000000", "message": "Done", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "deed69158543ce26efdc0d7e331e1a0a41250546", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_aad712f4", "line": 511, "range": {"start_line": 511, "start_character": 56, "end_line": 511, "end_character": 60}, "updated": "2020-02-12 00:05:44.000000000", "message": "ditto", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9b88c8c89ad3e31dc43444044cf0ddffa2f6ef88", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_0a43c698", "line": 511, "range": {"start_line": 511, "start_character": 56, "end_line": 511, "end_character": 60}, "in_reply_to": "3fa7e38b_aad712f4", "updated": "2020-02-12 00:10:40.000000000", "message": "Done", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, "change_message_id": "04fe246db257b5576803b4ed4396e022a626208c", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_9596caed", "line": 95, "range": {"start_line": 95, "start_character": 32, "end_line": 95, "end_character": 37}, "updated": "2020-02-14 05:01:10.000000000", "message": "were", "commit_id": "551e8d7a5938f5f44ae3f29d9283e78501d321ab"}], "setup.cfg": [{"author": {"_account_id": 5196, "name": "Matthew Treinish", "email": "mtreinish@kortar.org", "username": "treinish"}, "change_message_id": "1dcd0a99320c0460c694498554e83db9779d86f8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6621ca4f", "line": 19, "updated": "2020-02-04 15:49:23.000000000", "message": "If we're really only compatible with >=3.6 should we set:\n\nrequires-python = >=3.6\n\nhere?", "commit_id": "aa3605ccb1e42c36c7f49bc8f19c99690f758196"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "1cc156923d7e105c6a0a1cb9db554bb22b49dfb3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e6413aa9", "line": 19, "in_reply_to": "3fa7e38b_6621ca4f", "updated": "2020-02-04 15:56:13.000000000", "message": "yeah, i did not enforce that due to stable/rocky Tempest pin patch is not yet merged. https://review.opendev.org/#/c/705098/\n\nBut let's do that and we can merge stable/rocky patch in parallel.", "commit_id": "aa3605ccb1e42c36c7f49bc8f19c99690f758196"}], "setup.py": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "deed69158543ce26efdc0d7e331e1a0a41250546", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_8afb3678", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 68}, "updated": "2020-02-12 00:05:44.000000000", "message": "Is this description not true anymore?", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "523f44efb3c72fcb3824c98d0f4a5bbd322792df", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2a5a4250", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 68}, "in_reply_to": "3fa7e38b_4a4d3ec3", "updated": "2020-02-12 01:22:31.000000000", "message": "This command looks like updating whole setup.py? I don't know how to keep it up-to-date, though. https://opendev.org/openstack/requirements/src/branch/master/openstack_requirements/cmds/update.py", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9b88c8c89ad3e31dc43444044cf0ddffa2f6ef88", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_4a4d3ec3", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 68}, "in_reply_to": "3fa7e38b_8afb3678", "updated": "2020-02-12 00:10:40.000000000", "message": "do not know maybe for pbr version ?", "commit_id": "bddbb80bffcee87932aa6f2644f3b194e6819991"}]}}, "x%2Fnetworking-vpp~master~Ib6ce0fb2b064e796b028e1bc0361468fedf4027c": {"owner_id": 26839, "owner_name": "Onong Tayeng", "owner_email": "onong.tayeng@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1356, "name": "Naveen Joy", "email": "najoy@cisco.com", "username": "najoy"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 25380, "name": "Jean-Bernard Beuque", "email": "jbeuque@cisco.com", "username": "jbeuque"}, {"value": 0, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 01:07:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, {"value": 0, "_account_id": 23331, "name": "Jerome Tollet", "email": "jerome.tollet@gmail.com"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "58bbd120db24f5a7a23a99dacfaa07bc6d9ae102", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_79c5045d", "line": 7, "range": {"start_line": 7, "start_character": 14, "end_line": 7, "end_character": 39}, "updated": "2020-02-03 12:00:19.000000000", "message": "isn't that python2 as well? Let's remove it also", "commit_id": "254c937d52642a91dc514cf401efae276145cfcc"}, {"author": {"_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, "change_message_id": "738c309912e1e9cb4fd1046f75054d49062d2432", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a345869d", "line": 7, "range": {"start_line": 7, "start_character": 14, "end_line": 7, "end_character": 39}, "in_reply_to": "3fa7e38b_79c5045d", "updated": "2020-02-03 16:27:54.000000000", "message": "Thank you.", "commit_id": "254c937d52642a91dc514cf401efae276145cfcc"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "d68d1171ca984786e9d243a8ce8932bca181608b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_858b7c67", "line": 2, "range": {"start_line": 2, "start_character": 4, "end_line": 2, "end_character": 26}, "updated": "2020-02-06 07:42:49.000000000", "message": "remove that line, it should never be here.", "commit_id": "6102e0e67aa0cc7fa2e2660c35c9947b4b499b0a"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "d68d1171ca984786e9d243a8ce8932bca181608b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e58cb082", "line": 10, "range": {"start_line": 9, "start_character": 11, "end_line": 10, "end_character": 28}, "updated": "2020-02-06 07:42:49.000000000", "message": "voting jobs should be in both check and gate, let's use template...", "commit_id": "6102e0e67aa0cc7fa2e2660c35c9947b4b499b0a"}, {"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "94c14af4a4c116f128899aef83973561b49050a6", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_253e488a", "line": 10, "range": {"start_line": 1, "start_character": 2, "end_line": 10, "end_character": 0}, "updated": "2020-02-06 07:54:48.000000000", "message": "The project template \"openstack-python-ussuri-jobs\" was not found.", "commit_id": "3765965b1e41f617f0324e71f3e4cea098222e63"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "c7104dd85a8ea3f68d43721590b82929bf759e7d", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_67192574", "line": 2, "range": {"start_line": 2, "start_character": 0, "end_line": 2, "end_character": 26}, "updated": "2020-02-14 05:56:05.000000000", "message": "this should really not be in here, let me send a followup change", "commit_id": "bf4b277a381ddc2134aee61a6e7fdf9ab6bb9a86"}], "setup.py": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "cb6ac4ac55319136c87b4a2c648bff65fb60e19b", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b96520e4", "line": 20, "updated": "2020-02-12 17:49:12.000000000", "message": "And yet we require 2.0 in the requirements.txt.", "commit_id": "6120b58feb73625894c98fc565a0743c3f5b9ba2"}], "tox.ini": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4043ad217c7ea991bf6e607bbf6c1360a594447a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b6884d1a", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 0}, "updated": "2020-02-04 18:21:54.000000000", "message": "need to add ignore_basepython_conflict = True to avoid py version conflict.", "commit_id": "b42601f3d67cac4faff2195e1d48ff9686efb2a2"}, {"author": {"_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, "change_message_id": "90a6abf12b0e157c462161802de64c41f78a7678", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_815e2676", "line": 5, "range": {"start_line": 5, "start_character": 0, "end_line": 5, "end_character": 0}, "in_reply_to": "3fa7e38b_b6884d1a", "updated": "2020-02-05 06:18:24.000000000", "message": "Thank you.", "commit_id": "b42601f3d67cac4faff2195e1d48ff9686efb2a2"}]}}, "airship%2Fairshipctl~master~I6381c9fe9eeba938e855bf7d7ea52cd22a5c08b6": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 1, "date": "2020-02-12 15:04:36.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-13 20:30:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-14 05:53:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "openstack%2Fglance~master~I1e90ceee1f87291668e447f180f37bb809763836": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-14 03:45:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Ie51f76e55a98a9bf7004f24d07ef103a76e0b1e7": {"owner_id": 8449, "owner_name": "Marios Andreou", "owner_email": "marios@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 16:03:38.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 1, "date": "2020-02-14 03:13:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Ie7a1ed7e4bed829badd03bb9e177318b995618dd": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16515, "name": "mbu", "email": "mat.bultel@gmail.com", "username": "matbu"}], "comments": {}}, "openstack%2Fneutron~stable%2Ftrain~I51eef168fa8c18a3e4cee57c9ff86046ea9203fd": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-02-13 22:41:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 20:27:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}], "comments": {}}, "openstack%2Fopenstack-ansible-ops~master~Ie39fc10f5749c9636c890a0417fc532f77562144": {"owner_id": 31004, "owner_name": "Duncan Martin Walker", "owner_email": "Duncan.Walker02@bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 20:09:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-14 03:31:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {"elk_metrics_7x/installHeartbeat.yml": [{"author": {"_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}, "change_message_id": "66e1f1917c93314e38579a54b56329b5d9e6a3f0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7541ce07", "line": 20, "range": {"start_line": 20, "start_character": 6, "end_line": 20, "end_character": 11}, "updated": "2020-02-14 03:31:18.000000000", "message": "not sure why do we need block here but ok", "commit_id": "c43903e5c5d262d6ab09452e053afcfa1f8d26a4"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I95f85c66e30abe154d59736395c7d1096f51127a": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-27 19:48:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-01-27 21:17:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I129d7355364c87c40f51372b402620790a31ec81": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 21:04:27.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-13 21:16:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-13 02:36:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fglance~master~I00c77b8f7001d8fa0fde4083c2ee88c370c14a09": {"owner_id": 5202, "owner_name": "Erno Kuvaja", "owner_email": "jokke@usr.fi", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:55:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-02-13 17:00:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fpuppet-openstack-integration~master~I480391556e809b9d2f2bc693453f0fff2be9b0ab": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16312, "name": "Alfredo Moralejo", "email": "amoralej@redhat.com", "username": "amoralej"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 2, "date": "2020-02-13 17:03:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fdesignate~master~I4f6c6c1c96251bfc4f7ad3bb6b0bd2025397fa03": {"owner_id": 8099, "owner_name": "Graham Hayes", "owner_email": "gr@ham.ie", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 02:46:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 2, "date": "2020-02-13 18:55:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {"doc/source/admin/backends/akamai_v2.rst": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9c2f1f7e5a1ce4e9e17662fd2f435764d2439cb9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_742006b2", "line": 16, "updated": "2020-02-13 06:12:52.000000000", "message": "Wrong label", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}, {"author": {"_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, "change_message_id": "5abf4150f534d3e42f62d5d92f1bb6542e696ba3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6e734ee6", "line": 16, "in_reply_to": "3fa7e38b_742006b2", "updated": "2020-02-13 15:12:06.000000000", "message": "Done", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}], "doc/source/admin/support-matrix.ini": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9c2f1f7e5a1ce4e9e17662fd2f435764d2439cb9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_14199285", "line": 78, "range": {"start_line": 77, "start_character": 0, "end_line": 78, "end_character": 134}, "updated": "2020-02-13 06:12:52.000000000", "message": "If it is known broken, why don't we remove it?", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}, {"author": {"_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, "change_message_id": "5abf4150f534d3e42f62d5d92f1bb6542e696ba3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ee409e60", "line": 78, "range": {"start_line": 77, "start_character": 0, "end_line": 78, "end_character": 134}, "in_reply_to": "3fa7e38b_14199285", "updated": "2020-02-13 15:12:06.000000000", "message": "I want to do that in a separate patch - I am not 100% sure if there is some customers where the old API is still active", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}, {"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9c2f1f7e5a1ce4e9e17662fd2f435764d2439cb9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f415d64c", "line": 81, "updated": "2020-02-13 06:12:52.000000000", "message": "Won't this be untested, too? Also, can we add some Akamai contact as maintainer? I have a hard time including proprietary drivers with no way to test them, let's at least make clear their status.", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}, {"author": {"_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, "change_message_id": "5abf4150f534d3e42f62d5d92f1bb6542e696ba3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ae56262a", "line": 81, "in_reply_to": "3fa7e38b_f415d64c", "updated": "2020-02-13 15:12:06.000000000", "message": "yeap, it loads this from the driver itself if it is not overridden here, and the driver has the status of untested", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}], "releasenotes/notes/akamai-v2-5a3edb35f59a17c2.yaml": [{"author": {"_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, "change_message_id": "9c2f1f7e5a1ce4e9e17662fd2f435764d2439cb9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d40e9a3a", "line": 4, "range": {"start_line": 4, "start_character": 14, "end_line": 4, "end_character": 21}, "updated": "2020-02-13 06:12:52.000000000", "message": "backend\n\nAlso add a note about the old driver being broken?", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}, {"author": {"_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}, "change_message_id": "5abf4150f534d3e42f62d5d92f1bb6542e696ba3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6e4cae96", "line": 4, "range": {"start_line": 4, "start_character": 14, "end_line": 4, "end_character": 21}, "in_reply_to": "3fa7e38b_d40e9a3a", "updated": "2020-02-13 15:12:06.000000000", "message": "yup - good idea", "commit_id": "cf1a9d8cbc65d8043bd974e1ed6522782bef6ca7"}]}}, "openstack%2Fheat~master~I42a1832119822b2d9ae0b209c6a10515430105bb": {"owner_id": 7404, "owner_name": "Ethan Lynn", "owner_email": "xuanlangjian@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7404, "name": "Ethan Lynn", "email": "xuanlangjian@gmail.com", "username": "GaryLynn"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 1, "date": "2020-02-12 17:16:11.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}], "comments": {"heat/engine/clients/client_plugin.py": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "024dbf34756eb86dd33f1ffdbfe31647d8fa62e7", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_30acfae9", "line": 190, "updated": "2020-02-11 14:19:48.000000000", "message": "simpler syntax:\n\n  return isinstance(exception, (requests.ConnectionError, exceptions.ConnectionError))", "commit_id": "1d36d46b07d3448dfd1cf204a7887dce56f1b95d"}, {"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "a3f5851cbc940b467ce1cdc7f1125fc3ac29478a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ab0e2d30", "line": 190, "range": {"start_line": 190, "start_character": 38, "end_line": 190, "end_character": 76}, "updated": "2020-02-12 13:46:57.000000000", "message": "Did you see issue on master? Did you try increasing 'client_retry_limit' in heat.conf?\n\nWe do allow keystone retries[1] with[2][3]\n\n\n[1] https://github.com/openstack/keystoneauth/blob/master/keystoneauth1/session.py#L1026-L1028\n\n[2] https://github.com/openstack/heat/blob/stable/queens/heat/engine/clients/os/nova.py#L90\n\n[3] https://github.com/openstack/heat/commit/54f1119d695270bc0b92a27c84e332b102846b51#diff-c23b69996a4fccb21697528e1901f0a5 (not backported)\n\nGood to have details of issues you faced and surely a bug would help.", "commit_id": "e3f2ae09140938669078f11212a024776910984e"}, {"author": {"_account_id": 7404, "name": "Ethan Lynn", "email": "xuanlangjian@gmail.com", "username": "GaryLynn"}, "change_message_id": "362a7fea0d106a64de4c5331986e0ce4364d4c61", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_da15514d", "line": 190, "range": {"start_line": 190, "start_character": 38, "end_line": 190, "end_character": 76}, "in_reply_to": "3fa7e38b_ab0e2d30", "updated": "2020-02-14 02:56:15.000000000", "message": "Thanks for pointing out the links, I encounter this issue on queens. \n\nFrom the codes you pasted, I guess this issue was fixed in master.", "commit_id": "e3f2ae09140938669078f11212a024776910984e"}]}}, "x%2Fnetworking-vpp~master~I71aa431d8cf041fd381d0d0bf0a1383f90003253": {"owner_id": 26839, "owner_name": "Onong Tayeng", "owner_email": "onong.tayeng@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1356, "name": "Naveen Joy", "email": "najoy@cisco.com", "username": "najoy"}, {"value": 0, "_account_id": 22328, "name": "Alexandru Avadanii", "email": "alexandru.avadanii@enea.com", "username": "AlexandruAvadanii"}, {"value": 0, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 02:33:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, {"value": 0, "_account_id": 23331, "name": "Jerome Tollet", "email": "jerome.tollet@gmail.com"}], "comments": {"networking_vpp/agent/server.py": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "865518a101798394c0431876ce1b2c428a1d8cb5", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3ad7c5bf", "line": 1969, "updated": "2020-02-14 02:33:18.000000000", "message": "OK, we'll get mypy on the job and go to using ipaddress more consistently, I think.", "commit_id": "85b98f33f3271739acda51374aa737658816a6e7"}], "networking_vpp/agent/vpp.py": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "865518a101798394c0431876ce1b2c428a1d8cb5", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_daeb1178", "line": 168, "updated": "2020-02-14 02:33:18.000000000", "message": "We should talk to Ole about exposing enums.", "commit_id": "85b98f33f3271739acda51374aa737658816a6e7"}, {"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "865518a101798394c0431876ce1b2c428a1d8cb5", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_faee0d88", "line": 289, "updated": "2020-02-14 02:33:18.000000000", "message": "Unicode?  Really?", "commit_id": "85b98f33f3271739acda51374aa737658816a6e7"}]}}, "x%2Fnetworking-vpp~master~Ie25bd4a3c700271047a5a1c52b6973a9ca633200": {"owner_id": 1356, "owner_name": "Naveen Joy", "owner_email": "najoy@cisco.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 09:21:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 02:27:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {}}, "openstack%2Fdiskimage-builder~master~I3b8d48402ca4fc438ca672e35d46709e496b3297": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}], "comments": {}}, "x%2Ftobiko~master~Ia1b081d113711eab6ea44bff07b73d9d1aec1ea2": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 18894, "name": "Toni Freger", "email": "tfreger@redhat.com"}, {"value": 0, "_account_id": 19118, "name": "Eran Kuris", "email": "ekuris@redhat.com", "username": "ekuris"}, {"value": 0, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 31450, "name": "Alex Katz", "email": "akatz@redhat.com", "username": "akatz"}, {"value": 0, "_account_id": 31291, "name": "Eduardo Olivares", "email": "eolivare@redhat.com", "username": "eolivare"}, {"value": 0, "_account_id": 29350, "name": "Roman Safronov", "email": "rsafrono@redhat.com", "username": "rsafrono"}, {"value": 2, "date": "2020-02-13 22:33:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 29088, "name": "Candido Campos Rivas", "email": "ccamposr@redhat.com", "username": "ccamposr"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {"tobiko/tests/functional/tripleo/test_overcloud.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "69ad5eef52a835695f81e8881032928fafa4c6eb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4e4772a5", "line": 168, "range": {"start_line": 168, "start_character": 0, "end_line": 168, "end_character": 30}, "updated": "2020-02-13 15:01:27.000000000", "message": "I don't think this is really necessary, You will fail in line above if that is the case so here You don't need this \"fake\" assert", "commit_id": "8cee7b6a86d97e0fc5aa06074d86c3f71c9f2de3"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "69ad5eef52a835695f81e8881032928fafa4c6eb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0e5e5a78", "line": 168, "range": {"start_line": 157, "start_character": 0, "end_line": 168, "end_character": 30}, "updated": "2020-02-13 15:01:27.000000000", "message": "indentation is wrong here probably", "commit_id": "8cee7b6a86d97e0fc5aa06074d86c3f71c9f2de3"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "840f86098c7428e7a5fd2ddf11d0662c95eea574", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_29d23034", "line": 168, "range": {"start_line": 157, "start_character": 0, "end_line": 168, "end_character": 30}, "in_reply_to": "3fa7e38b_0e5e5a78", "updated": "2020-02-13 15:31:42.000000000", "message": "thanks , edited to quickly : )\nDone", "commit_id": "8cee7b6a86d97e0fc5aa06074d86c3f71c9f2de3"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "840f86098c7428e7a5fd2ddf11d0662c95eea574", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c9d4bc20", "line": 168, "range": {"start_line": 168, "start_character": 0, "end_line": 168, "end_character": 30}, "in_reply_to": "3fa7e38b_4e4772a5", "updated": "2020-02-13 15:31:42.000000000", "message": "Done", "commit_id": "8cee7b6a86d97e0fc5aa06074d86c3f71c9f2de3"}]}}, "x%2Fnetworking-vpp~master~I5828933ad368ecba220059af8a5d9776c19e552e": {"owner_id": 1356, "owner_name": "Naveen Joy", "owner_email": "najoy@cisco.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 02:16:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {"devstack/functions": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "2d419ae3e0df2d8bcfddd376057d5c6b1cc92f58", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d7ff8332", "line": 37, "updated": "2020-02-14 01:11:49.000000000", "message": "We probably don't need the python2 package if this gets put in after the py3 conversion.", "commit_id": "e6876b6b9e7a82ff44e18c4e861d45812eb4891d"}, {"author": {"_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, "change_message_id": "b1e572349be25291860621225626d026888c4c71", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3d56f1fa", "line": 34, "updated": "2020-02-13 09:28:24.000000000", "message": "This will work for Ubuntu but not for centos. I think the python3 package name for centos is vpp-api-python3. Please verify and update.", "commit_id": "33b06e86dd652ea694eff8e4ee77b22b622f1e71"}]}}, "openinfra%2Fopenstackid-resources~master~Iffa45ab7a82f090441ec5327c4b1866ceaf94642": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 02:20:58.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fpython-senlinclient~master~I829811df362bcfd7d074523958d2aa5232da6f09": {"owner_id": 27224, "owner_name": "Duc Truong", "owner_email": "duc.openstack@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 02:04:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 0, "_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}, {"value": 1, "date": "2020-02-12 23:16:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~Id4fee2008fd7544ccbf865084949c767013ca3fa": {"owner_id": 29161, "owner_name": "Rahul Khiyani", "owner_email": "rahul.khiyani@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22636, "name": "Cliff Parsons", "email": "cliffhparsons@aol.com", "username": "cliffparsons"}, {"value": 2, "date": "2020-02-13 22:41:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 2, "date": "2020-02-13 22:41:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {"ingress/values_overrides/apparmor.yaml": [{"author": {"_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}, "change_message_id": "d1e5249d713e5547f9e4f8558bb5d8f49c214af2", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_5a1de10d", "line": 7, "range": {"start_line": 6, "start_character": 0, "end_line": 7, "end_character": 23}, "updated": "2020-02-14 01:32:17.000000000", "message": "is this even a valid pod name?", "commit_id": "ae41873341978649c97b226dace763571a5d84f3"}]}}, "x%2Fnetworking-vpp~master~I49b73fe20e6b544751bb1b03f8452ac88224fa13": {"owner_id": 26839, "owner_name": "Onong Tayeng", "owner_email": "onong.tayeng@gmail.com", "labels": [{"value": 1, "date": "2020-02-14 01:06:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 1356, "name": "Naveen Joy", "email": "najoy@cisco.com", "username": "najoy"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 01:06:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, {"value": 1, "date": "2020-02-14 01:06:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23331, "name": "Jerome Tollet", "email": "jerome.tollet@gmail.com"}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I40ece825d75b6884714b9121d8d501efcbce2f53": {"owner_id": 29161, "owner_name": "Rahul Khiyani", "owner_email": "rahul.khiyani@att.com", "labels": [{"value": 2, "date": "2020-02-13 21:06:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 00:12:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I76cd51df4ff26b22f3d9b590ceded848581d4c3d": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-07 22:18:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-02-07 20:47:47.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I33530e6e3f7ac156e07545b0455c99bb7d2274ef": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 21:27:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Icc80c239f507a1a4e50298345a94aba4fabed80d": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 21:27:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Fnetworking-vpp~master~Ic8886109119e5189ded7ab75e7746d69b3b49d24": {"owner_id": 2874, "owner_name": "yong sheng gong", "owner_email": "gong.yongsheng@99cloud.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-14 00:23:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {}}, "x%2Fnetworking-vpp~master~I474a5d57eac9def5adb43120f1d70907460c1568": {"owner_id": 3217, "owner_name": "Ian Wells", "owner_email": "", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1356, "name": "Naveen Joy", "email": "najoy@cisco.com", "username": "najoy"}, {"value": 0, "_account_id": 26839, "name": "Onong Tayeng", "email": "onong.tayeng@gmail.com", "username": "onong"}, {"value": 2, "date": "2020-02-14 00:24:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {}}, "starlingx%2Fdocs~master~Ib0d7784937da36557d4c365a758dde27534074e7": {"owner_id": 29319, "owner_name": "Kristal Dale", "owner_email": "kristal.dale@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 19:55:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-14 00:25:30.000000000", "_account_id": 29319, "name": "Kristal Dale", "email": "kristal.dale@intel.com", "username": "kdale"}, {"value": 0, "_account_id": 28465, "name": "Dariush Eslimi", "email": "Dariush.Eslimi@windriver.com", "username": "deslimi"}, {"value": 0, "_account_id": 28466, "name": "Bin Qian", "email": "bin.qian@windriver.com", "username": "bqian"}, {"value": 1, "date": "2020-02-12 20:30:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18675, "name": "Sharath Rao", "email": "sharath.rao@ericsson.com", "username": "sharath.rao"}], "comments": {"doc/source/developer_resources/mirror_repo.rst": [{"author": {"_account_id": 28465, "name": "Dariush Eslimi", "email": "Dariush.Eslimi@windriver.com", "username": "deslimi"}, "change_message_id": "2ec53a751a05419b4f9059b2fa25ce91e6b847a4", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7e00156a", "line": 14, "range": {"start_line": 14, "start_character": 55, "end_line": 14, "end_character": 107}, "updated": "2020-02-10 18:38:40.000000000", "message": "Missing words: which is the user the zuul job will use to sync the repo.", "commit_id": "d47fa24be029dbd09d22e7a0f3dbc931e32592be"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "22da915b58f3c003aed52328d1f18d33620cc6b8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_817ed46a", "line": 81, "range": {"start_line": 81, "start_character": 19, "end_line": 81, "end_character": 20}, "updated": "2020-02-10 19:11:36.000000000", "message": "I think this colon is throwing off the formatting - look at the generated doc and fix.", "commit_id": "75d865989b1f240f2a2a2bec1bc792fb17c666c4"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "6a500e014f34cbd8db9fe8dde3207e2cc2302bf7", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_07a994dc", "line": 81, "range": {"start_line": 81, "start_character": 19, "end_line": 81, "end_character": 20}, "in_reply_to": "3fa7e38b_817ed46a", "updated": "2020-02-10 21:04:42.000000000", "message": "You didn't fix this.", "commit_id": "75d865989b1f240f2a2a2bec1bc792fb17c666c4"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "22da915b58f3c003aed52328d1f18d33620cc6b8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c1ae0ce4", "line": 82, "range": {"start_line": 82, "start_character": 4, "end_line": 82, "end_character": 89}, "updated": "2020-02-10 19:11:36.000000000", "message": "This link doesn't work in the generated doc.", "commit_id": "75d865989b1f240f2a2a2bec1bc792fb17c666c4"}]}}, "openstack%2Ftripleo-common~stable%2Ftrain~I560eaff21c22d2ab70c657b35a3d43a76003e6ba": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-13 20:46:28.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I228b01009e7d9980bee5480778dbc88b9e226297": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-12 11:31:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ifdebecc8c7975b6f5cfefb14b0133be247b7abf0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-12 11:31:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcoverage2sql~master~I7e523bff1144d827dd1377c00d4a51512e265a85": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 23:37:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}], "comments": {"setup.cfg": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "bf0ed16a4b32b0dcb438de54a17979baee7817ec", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e97df8e4", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 23}, "updated": "2020-02-13 15:47:55.000000000", "message": "is it ok to drop py3.5 ? if any user of py3.5 like stable/rocky jobs on xenial then we can keep it and if deps allow.\n\nLike: https://review.opendev.org/#/c/707646/", "commit_id": "157f0c0ae720044a5fc250a3a98488215d7f6ab1"}, {"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "47df3e1edf14c59691ed2b97424700b8b37dd5c8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2f0ea9d7", "line": 9, "range": {"start_line": 9, "start_character": 0, "end_line": 9, "end_character": 23}, "in_reply_to": "3fa7e38b_e97df8e4", "updated": "2020-02-13 23:37:22.000000000", "message": "I think we can drop py3.5 because coverage2sql isn't used yet.", "commit_id": "157f0c0ae720044a5fc250a3a98488215d7f6ab1"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I7ad50d62e6177f109f513c4c11f611be60e570f2": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:24:51.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fnova~master~If20071d8e7ce6c0a4efd14a7fa6d9adef3c9fba6": {"owner_id": 5314, "owner_name": "Brian Rosmaita", "owner_email": "rosmaita.fossdev@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": -1, "date": "2020-02-10 16:05:52.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 1, "date": "2020-02-06 16:27:04.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Frocky~I0cf45085c6d9f278fffb6f55ea8d2159dd425746": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-13 17:09:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Finteg~f%2Fcentos8~I11159c53ff9deab552e5eeab96a51732ec72815b": {"owner_id": 30437, "owner_name": "chendongqi", "owner_email": "chen.dq@neusoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 02:17:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 02:17:27.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 30437, "name": "chendongqi", "email": "chen.dq@neusoft.com", "username": "Dq.Chen"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "991514a562e799f664443986ef4887f1a4e95f88", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cac4fc96", "line": 12, "range": {"start_line": 10, "start_character": 0, "end_line": 12, "end_character": 49}, "updated": "2019-12-30 17:29:08.000000000", "message": "Where is this?  I did not see this in the specfile changes", "commit_id": "a48a4c7df0351f98e52aaeb69ee3e4738242bffb"}, {"author": {"_account_id": 30437, "name": "chendongqi", "email": "chen.dq@neusoft.com", "username": "Dq.Chen"}, "change_message_id": "5da84eea484eafe12e7dd1c03ecf29057b4467c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_45e9dde1", "line": 12, "range": {"start_line": 10, "start_character": 0, "end_line": 12, "end_character": 49}, "in_reply_to": "3fa7e38b_cac4fc96", "updated": "2019-12-31 03:43:31.000000000", "message": "Sorry i missed it", "commit_id": "a48a4c7df0351f98e52aaeb69ee3e4738242bffb"}], "virt/libvirt/centos/build_srpm.data": [{"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "991514a562e799f664443986ef4887f1a4e95f88", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4adfac66", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 15}, "updated": "2019-12-30 17:29:08.000000000", "message": "Are we updating libvirt?  If not, then this should remain 101?  I see the update to gnulib, but not libvirt itself.", "commit_id": "a48a4c7df0351f98e52aaeb69ee3e4738242bffb"}]}}, "openstack%2Fpython-dracclient~master~I078c58f143878a487d669fdb69a41ce49f2783bf": {"owner_id": 17499, "owner_name": "Filippo Inzaghi", "owner_email": "zhao.daqing@99cloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2018-12-13 14:21:28.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26285, "name": "wu.chunyang", "email": "wchy1001@gmail.com", "username": "wu.chunyang"}, {"value": -1, "date": "2018-12-14 12:30:28.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": -1, "date": "2019-04-29 12:30:11.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28935, "name": "98k", "email": "18552437190@163.com", "username": "98k"}], "comments": {}}, "starlingx%2Froot~master~I7659695c701ccf3bfe8255b24ad0b1896b59cc23": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 22:31:27.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-13 15:10:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {}}, "zuul%2Fzuul~master~Iebd6dafd9e040b6c443ebe1ed1e2702d37804399": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:19:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-13 21:35:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Freleases~master~I9afd8bfda79e63536ab11d6947875026095887b1": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 21:33:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {}}, "openstack%2Frpm-packaging~master~I1612490877a3696ffed2804e3e65037d1268d347": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "date": "2020-02-13 16:54:53.000000000", "permitted_voting_range": {"min": 0, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 2, "date": "2020-02-13 18:30:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Fqueens~Ie576537d77b57927d430f20b274d1cb5d351241e": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-13 17:23:40.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpaunch~stable%2Fstein~I2e49d4dd5b385237f4f79929c70365424f6fa22d": {"owner_id": 28223, "owner_name": "Cedric Jeanneret", "owner_email": "cjeanner@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-12 15:03:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5241, "name": "Martin Magr", "email": "mmagr@redhat.com", "username": "mmagr"}, {"value": 2, "date": "2020-02-12 15:34:15.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-common~stable%2Frocky~Ie576537d77b57927d430f20b274d1cb5d351241e": {"owner_id": 6469, "owner_name": "Carlos Gon\u00e7alves", "owner_email": "cgoncalves@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-13 17:23:44.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~I3e353cb96a4e222368ab63c9486d1462d335a0e1": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:49:13.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I858a7b8745688c6271b01795460ab4adbf3f2be5": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-07 22:14:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 2, "date": "2020-02-13 17:23:54.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-quickstart-extras~master~I23dd5fc3855d1f538267e52f81c66ec11669373d": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-02-12 19:47:28.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 29755, "name": "wesgerrit hayutin", "email": "wesgerrithayutin@gmail.com"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 2, "date": "2020-02-13 17:22:53.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "opendev%2Fsystem-config~master~Iacb0812f475c178189d2233b3a2324337f3bb419": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-13 20:50:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-13 20:51:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "airship%2Fairshipctl~master~I85c9bdd47b5aaba90df5458b20c90ff5c912c05f": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 2, "date": "2020-02-13 20:57:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-02-13 20:42:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 1, "date": "2020-02-13 20:43:14.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I595a998196b6de386a4ff345c39fe1e6a9ed62c6": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 09:25:08.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 2, "date": "2020-02-12 19:11:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-13 16:48:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Ib25c24078a8ee6bb6400e78999149ba186818c05": {"owner_id": 13861, "owner_name": "yatin", "owner_email": "ykarel@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8175, "name": "Rafael Folco", "email": "rfolco@redhat.com", "username": "rfolco"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-13 08:01:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-13 16:48:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 1, "date": "2020-02-13 12:13:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 2, "date": "2020-02-13 07:20:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "7d1a76164c03aae4d7f3d4dd2c2aa6042c006188", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c637dbe3", "line": 10, "updated": "2020-02-12 16:42:38.000000000", "message": "just wondering if this should be split into two this bit ^^^ here and the 'rework ansible/docker registry' as another.\n\ninline comment but i need to revisit it tomorrow morning thanks", "commit_id": "eefeeac2e6f93f62e6614b63bac838d85cdbf845"}], "roles/build-containers/tasks/pre.yaml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "7d1a76164c03aae4d7f3d4dd2c2aa6042c006188", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a3fad10e", "side": "PARENT", "line": 12, "updated": "2020-02-12 16:42:38.000000000", "message": "there was a reason we did it that way - i have to go dig that up but just noting my hesitation for this bit", "commit_id": "915c591169aca7909190146ddadbc9c399c0c88b"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "080887a8000eaa8d8ac41cf79b72259a1eb86a5e", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_f75dd87b", "updated": "2020-02-13 07:20:36.000000000", "message": "tl;dr: whatever it was we don't need it any more?\n\nWRT my comment on v4... i just went digging and found where this was added but I can't find the discussion around why it was done like this.\n\nAdded there https://review.opendev.org/#/c/614392/31/playbooks/tripleo-buildcontainers/pre.yaml  and then yatin fixed a bug with https://review.opendev.org/#/c/662021/1/roles/build-containers/tasks/pre.yaml  (the one he referenced in commit message)\n\nWhatever it was looks like it is no longer needed... the jobs are green with this. The code is much nicer without the extra install/remove ansible and using ansible-role-container-registry", "commit_id": "9acd92ab3bfd9f78dfb1b0b9bc6c36f2bbaef33f"}], "roles/build-containers/tasks/venv_setup.yml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "080887a8000eaa8d8ac41cf79b72259a1eb86a5e", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_7751e862", "line": 11, "updated": "2020-02-13 07:20:36.000000000", "message": "this is the urgent bit... its still 2 different reviews and should be split imho.\n\nthis one first with the addition of ansible-role-collect-logs into a second review", "commit_id": "9acd92ab3bfd9f78dfb1b0b9bc6c36f2bbaef33f"}, {"author": {"_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, "change_message_id": "ff6d0d87a62e2100c7a6b4cfbd36672c5bb1f399", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_17ef5486", "line": 11, "in_reply_to": "3fa7e38b_7751e862", "updated": "2020-02-13 07:30:20.000000000", "message": "@marios rocky(six < 1.12 in rocky) container-build jobs need ansible-role-container-registry fix together, since both fixes needs changing build-containers role, and hence running all branches jobs, so if we split in two, jobs will not pass in one of the patch that's why i pushed it together.", "commit_id": "9acd92ab3bfd9f78dfb1b0b9bc6c36f2bbaef33f"}]}}, "openstack%2Fpuppet-tripleo~master~If4b275d3caf6098e7774d938ab89333396fbc15d": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-06 22:06:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "airship%2Fdivingbell~master~I1835bd9bfc79dc15f23c9174605b156662ffce5b": {"owner_id": 28618, "owner_name": "Drew Walters", "owner_email": "drewwalters@microsoft.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26365, "name": "Bryan Strassner", "email": "strassner.bryan@gmail.com", "username": "bryan-strassner"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 2, "date": "2019-12-20 22:34:17.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"doc/source/index.rst": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "76e231cff854e0895e00c2a3e5db11fa3798e028", "unresolved": false, "patch_set": 1, "id": "7faddb67_c5645b24", "line": 160, "range": {"start_line": 160, "start_character": 8, "end_line": 160, "end_character": 15}, "updated": "2019-08-23 15:29:26.000000000", "message": "manage", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "b23ef82cad10d38de4759da31ea543f949e79c29", "unresolved": false, "patch_set": 1, "id": "7faddb67_0950862b", "line": 160, "range": {"start_line": 160, "start_character": 8, "end_line": 160, "end_character": 15}, "in_reply_to": "7faddb67_c5645b24", "updated": "2019-09-05 16:17:46.000000000", "message": "> manage\n\nFixed.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "c72a972002bb9281d76091bc30fc7620f14d4136", "unresolved": false, "patch_set": 1, "id": "7faddb67_b005dc12", "line": 165, "range": {"start_line": 165, "start_character": 35, "end_line": 165, "end_character": 43}, "updated": "2019-08-23 18:19:07.000000000", "message": "\"and downgrades\"", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "b23ef82cad10d38de4759da31ea543f949e79c29", "unresolved": false, "patch_set": 1, "id": "7faddb67_6936da04", "line": 165, "range": {"start_line": 165, "start_character": 35, "end_line": 165, "end_character": 43}, "in_reply_to": "7faddb67_b005dc12", "updated": "2019-09-05 16:17:46.000000000", "message": "> \"and downgrades\"\n\nAdded.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "c72a972002bb9281d76091bc30fc7620f14d4136", "unresolved": false, "patch_set": 1, "id": "7faddb67_104f106b", "line": 177, "range": {"start_line": 177, "start_character": 0, "end_line": 177, "end_character": 9}, "updated": "2019-08-23 18:19:07.000000000", "message": "Add another note below that packages can/will be downgraded if an explicit version is supplied that's older than the package version installed.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "b23ef82cad10d38de4759da31ea543f949e79c29", "unresolved": false, "patch_set": 1, "id": "7faddb67_ec689888", "line": 177, "range": {"start_line": 177, "start_character": 0, "end_line": 177, "end_character": 9}, "in_reply_to": "7faddb67_104f106b", "updated": "2019-09-05 16:17:46.000000000", "message": "> Add another note below that packages can/will be downgraded if an\n > explicit version is supplied that's older than the package version\n > installed.\n\nDone.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "c72a972002bb9281d76091bc30fc7620f14d4136", "unresolved": false, "patch_set": 1, "id": "7faddb67_50b2684b", "line": 180, "range": {"start_line": 178, "start_character": 0, "end_line": 180, "end_character": 31}, "updated": "2019-08-23 18:19:07.000000000", "message": "Note that there is an opportunity for package mismatch in the following situation:\n1. A node has a more recent version of package(s) installed than is available in the apt repo(s)\n2. The package version is not explicitly pinned (i.e. package version is omitted).\nIn this case, performing an apt upgrade will not roll back the node's package versions to the latest package versions available on the apt repo(s); in this case apt will only roll forward, thus there can be version mismatches in this rainy day scenario.\n(We may want to look at adding a check in the future that would log any such mismatches where node package versions exceed those package versions from apt repos)", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "b23ef82cad10d38de4759da31ea543f949e79c29", "unresolved": false, "patch_set": 1, "id": "7faddb67_6c0a68d1", "line": 180, "range": {"start_line": 178, "start_character": 0, "end_line": 180, "end_character": 31}, "in_reply_to": "7faddb67_50b2684b", "updated": "2019-09-05 16:17:46.000000000", "message": "> Note that there is an opportunity for package mismatch in the\n > following situation:\n > 1. A node has a more recent version of package(s) installed than is\n > available in the apt repo(s)\n > 2. The package version is not explicitly pinned (i.e. package\n > version is omitted).\n > In this case, performing an apt upgrade will not roll back the\n > node's package versions to the latest package versions available on\n > the apt repo(s); in this case apt will only roll forward, thus\n > there can be version mismatches in this rainy day scenario.\n > (We may want to look at adding a check in the future that would log\n > any such mismatches where node package versions exceed those\n > package versions from apt repos)\n\nSummarized the above content in the existing note.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "76e231cff854e0895e00c2a3e5db11fa3798e028", "unresolved": false, "patch_set": 1, "id": "7faddb67_057a73b9", "line": 197, "range": {"start_line": 194, "start_character": 0, "end_line": 197, "end_character": 36}, "updated": "2019-08-23 15:29:26.000000000", "message": "Duplicates content from lines 185-186.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}, {"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "b23ef82cad10d38de4759da31ea543f949e79c29", "unresolved": false, "patch_set": 1, "id": "7faddb67_8c0d64e8", "line": 197, "range": {"start_line": 194, "start_character": 0, "end_line": 197, "end_character": 36}, "in_reply_to": "7faddb67_057a73b9", "updated": "2019-09-05 16:17:46.000000000", "message": "> Duplicates content from lines 185-186.\n\nRemoved.", "commit_id": "73038cb30f50c6df652c018b33d63052dfda454b"}]}}, "airship%2Fdeckhand~master~I89a3fea9723359aec188ed9aa00ec8a6f222421d": {"owner_id": 28618, "owner_name": "Drew Walters", "owner_email": "drewwalters@microsoft.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-06 20:53:36.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 1, "date": "2020-02-06 20:35:29.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28719, "name": "Phil Sphicas", "email": "phil.sphicas@att.com", "username": "ps3910"}, {"value": 1, "date": "2020-02-06 21:02:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28664, "name": "Ahmad Mahmoudi", "email": "ahmad.mahmoudi@att.com", "username": "ahmad"}, {"value": 1, "date": "2020-02-06 20:27:01.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, {"value": 1, "date": "2020-02-10 16:27:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 1, "date": "2020-02-06 21:46:37.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28628, "name": "Michael Beaver", "email": "mibeaver@microsoft.com", "username": "MichaelBeaver"}, {"value": 1, "date": "2020-02-06 20:29:41.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31362, "name": "Andrew Schiefelbein", "email": "as3525@att.com", "username": "aschiefe"}], "comments": {}}, "x%2Franger~master~I1b481c49d4402438c8aa91a8ebd8b6dbe797997b": {"owner_id": 29585, "owner_name": "Jeremy Houser", "owner_email": "jeremyhouser@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 20:09:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19391, "name": "Chi Lo", "email": "cl566n@att.com", "username": "cl566n"}, {"value": 0, "_account_id": 24999, "name": "Hari", "email": "hosingh000@gmail.com", "username": "hosingh000"}, {"value": 2, "date": "2020-02-13 19:52:43.000000000", "_account_id": 21111, "name": "STEW TY", "email": "punsoca@gmail.com", "username": "stewie925"}, {"value": 0, "_account_id": 29585, "name": "Jeremy Houser", "email": "jeremyhouser@protonmail.com", "username": "jh629g"}], "comments": {"orm/base_config.py": [{"author": {"_account_id": 24999, "name": "Hari", "email": "hosingh000@gmail.com", "username": "hosingh000"}, "change_message_id": "520c910fc5310c6ee62e9381de9c9cfe83cc1e6c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_e76303ab", "line": 284, "range": {"start_line": 284, "start_character": 24, "end_line": 284, "end_character": 31}, "updated": "2020-02-11 22:29:00.000000000", "message": "guess name is Default , id is default", "commit_id": "94ad3c3087a1a3df7f44edacbd0e5ea3d6374a82"}], "orm/services/region_manager/rms/model/model.py": [{"author": {"_account_id": 21111, "name": "STEW TY", "email": "punsoca@gmail.com", "username": "stewie925"}, "change_message_id": "464110af431eefeaff76d2e495ff9815260dccb0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_76f71c5c", "line": 56, "updated": "2020-02-05 22:30:24.000000000", "message": "this  is duplicated in line #63 - we can remove this and keep the other", "commit_id": "4fb715565f9a20a27ca19aa684ef6892b1bed8fe"}], "orm/services/region_manager/scripts/db_scripts/create_db.sql": [{"author": {"_account_id": 24999, "name": "Hari", "email": "hosingh000@gmail.com", "username": "hosingh000"}, "change_message_id": "520c910fc5310c6ee62e9381de9c9cfe83cc1e6c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c250800c", "line": 33, "range": {"start_line": 33, "start_character": 8, "end_line": 33, "end_character": 17}, "updated": "2020-02-11 22:29:00.000000000", "message": "please change it to domain name as it is not id", "commit_id": "1c67e45ec42e5534388c4616e70e35ac167c2007"}], "setup.cfg": [{"author": {"_account_id": 24999, "name": "Hari", "email": "hosingh000@gmail.com", "username": "hosingh000"}, "change_message_id": "520c910fc5310c6ee62e9381de9c9cfe83cc1e6c", "unresolved": false, "patch_set": 13, "id": "3fa7e38b_e7e6a314", "side": "PARENT", "line": 29, "range": {"start_line": 29, "start_character": 16, "end_line": 29, "end_character": 17}, "updated": "2020-02-11 22:29:00.000000000", "message": "this code is already merged, I guess", "commit_id": "a41951c6f78536fa5d73eb872d78ae0f90721e2f"}]}}, "openstack%2Fopenstack-helm~master~I7e7d5209227b0e34131b7715dbd3faa6066a94b7": {"owner_id": 28402, "owner_name": "Mingyuan Qi", "owner_email": "mingyuan.qi@intel.com", "labels": [{"value": 2, "date": "2020-02-13 19:27:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-13 15:24:05.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30777, "name": "Steven Fitzpatrick", "email": "steven@fitzpatrick.wtf", "username": "sf280x"}, {"value": 1, "date": "2020-02-05 18:32:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 1, "date": "2020-02-13 09:23:46.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29013, "name": "Alex Grudev", "email": "alex.grudev@gmail.com", "username": "ogrudev"}, {"value": 2, "date": "2020-01-01 00:23:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}, {"value": 0, "_account_id": 28402, "name": "Mingyuan Qi", "email": "mingyuan.qi@intel.com", "username": "myqi"}], "comments": {}}, "openstack%2Fmistral~master~Ie3169ec884ec9a0e7e50327dd03cd78dcda0a39b": {"owner_id": 8731, "owner_name": "Renat Akhmerov", "owner_email": "renat.akhmerov@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 15:20:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, {"value": 0, "_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, {"value": 2, "date": "2020-02-13 12:58:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29124, "name": "Oleg Ovcharuk", "email": "vgvoleg@gmail.com", "username": "vgvoleg"}, {"value": 0, "_account_id": 15895, "name": "Adriano Petrich", "email": "apetrich@redhat.com", "username": "apetrich"}, {"value": 0, "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 2, "date": "2020-02-13 10:55:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21970, "name": "Andras Kovi", "email": "akovi@nokia.com", "username": "andras.kovi"}], "comments": {"mistral/tests/unit/engine/test_disabled_yaql_conversion.py": [{"author": {"_account_id": 19134, "name": "Eyal", "email": "eyalb1@gmail.com", "username": "eyalb"}, "change_message_id": "93958600f127ab4eca799bad5ead725a71b238f7", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_d688f3c4", "line": 42, "range": {"start_line": 42, "start_character": 8, "end_line": 42, "end_character": 25}, "updated": "2020-02-12 07:41:56.000000000", "message": "nit: I think this comment is redundant the method speaks for itself", "commit_id": "dfdda87a3107cfe946ac4e44eb8aab0b555f34a7"}], "mistral/tests/unit/expressions/test_yaql_expression.py": [{"author": {"_account_id": 29124, "name": "Oleg Ovcharuk", "email": "vgvoleg@gmail.com", "username": "vgvoleg"}, "change_message_id": "a74367dd7954aae0f8e7a5b4cad904c54e788b28", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_dd96bda0", "line": 332, "updated": "2020-02-13 09:28:26.000000000", "message": "I think it is redundant, your defaut value is now True", "commit_id": "8b4edf93b4e3a4e11c5ed72399bbac347c6d3f5a"}, {"author": {"_account_id": 8731, "name": "Renat Akhmerov", "email": "renat.akhmerov@gmail.com", "username": "rakhmerov"}, "change_message_id": "5d53de2284f4930696adea21ac3d97d8bd2d9883", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a8a94178", "line": 332, "in_reply_to": "3fa7e38b_dd96bda0", "updated": "2020-02-13 10:30:45.000000000", "message": "The default value may change and the test won't know about it :) That's why it's better to decouple it from the default values and set what this test really expects. In case if the default value changes and the test still works, it can even hide the bug in the code.", "commit_id": "8b4edf93b4e3a4e11c5ed72399bbac347c6d3f5a"}]}}, "airship%2Fairshipctl~master~Iafab45d09682007919229aab94d970b550f6635d": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-13 19:45:15.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 2, "date": "2020-02-13 20:03:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-13 13:40:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"roles/airship-airshipctl-gather-configs/tasks/main.yaml": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "01a6347cf3c99067b734d8056f10d26acd18cc82", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a63ba697", "updated": "2020-02-13 19:45:15.000000000", "message": "nit: missing license header", "commit_id": "44267cbae98c2c1a4bc3b8c9feaa31e3534838e4"}]}}, "openstack%2Fkolla-ansible~master~I2c20bfda66996b58760f24bf4c41122874d27b41": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 14:46:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-13 19:28:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I632a3ef5ec137df10f647335f6354589c2316fd0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 6681, "name": "Brent Eagles", "email": "beagles@redhat.com", "username": "beagles"}, {"value": 2, "date": "2020-02-13 16:47:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Iea081ecb3fc021fc796c93631ed6f663fd9580db": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2020-02-12 19:10:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "airship%2Fairshipui~master~I13e6743b819b48d8e40fb83241ca4e4c5d95a174": {"owner_id": 31362, "owner_name": "Andrew Schiefelbein", "owner_email": "as3525@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31362, "name": "Andrew Schiefelbein", "email": "as3525@att.com", "username": "aschiefe"}], "comments": {}}, "openstack%2Ftripleo-common~master~I3a39d197ffd33097c53162e2a1ba451766cdcf99": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-11 00:05:53.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-04 13:14:17.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "9ff70d605866d9765c7f1d1d8cf1f33167fcb1ea", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cd45dd9d", "line": 13, "updated": "2020-02-11 00:05:53.000000000", "message": "Don't you need an entry for >='3.4'?", "commit_id": "a6ee198ad6408f212ce33431a8d2251db9db5bc1"}]}}, "openstack%2Ftripleo-ci~master~Ib2a2dcb9255ae993d0a3225451f432ba516858d3": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Ftobiko~master~I886a16f9d4df25384262fe111b15166ac7ba367e": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:48:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "x%2Ftobiko~master~I2816d03c26e8eeca92c99116e28be52f98aa5141": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19118, "name": "Eran Kuris", "email": "ekuris@redhat.com", "username": "ekuris"}, {"value": 0, "_account_id": 18894, "name": "Toni Freger", "email": "tfreger@redhat.com"}, {"value": 2, "date": "2020-02-13 17:47:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 4727, "name": "Itzik Brown", "email": "itzikb@redhat.com", "username": "itzikb1"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {"tobiko/docker/__init__.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_1a0fbb8b", "line": 24, "range": {"start_line": 24, "start_character": 21, "end_line": 24, "end_character": 38}, "updated": "2020-02-10 09:28:22.000000000", "message": "Please revert this. I prefer it to be more verbose to help reading and understanding code. There are many clients in Tobiko, this function shoudn't be an exception.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_18c8194b", "line": 24, "range": {"start_line": 24, "start_character": 21, "end_line": 24, "end_character": 38}, "in_reply_to": "3fa7e38b_1a0fbb8b", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}], "tobiko/openstack/topology/_topology.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3a14f79e", "line": 123, "range": {"start_line": 123, "start_character": 57, "end_line": 123, "end_character": 67}, "updated": "2020-02-10 09:28:22.000000000", "message": "get_docker_client", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_f8665d56", "line": 123, "range": {"start_line": 123, "start_character": 57, "end_line": 123, "end_character": 67}, "in_reply_to": "3fa7e38b_3a14f79e", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}], "tobiko/podman/__init__.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_da04c36e", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 10}, "updated": "2020-02-10 09:28:22.000000000", "message": "get_podman_client", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_b8e9c5ac", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 10}, "in_reply_to": "3fa7e38b_da04c36e", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}], "tobiko/podman/_client.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_7a158f94", "line": 79, "range": {"start_line": 79, "start_character": 8, "end_line": 79, "end_character": 32}, "updated": "2020-02-10 09:28:22.000000000", "message": "Is there any place do you check this operation has been already executed before?", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_12d550b8", "line": 79, "range": {"start_line": 79, "start_character": 8, "end_line": 79, "end_character": 32}, "in_reply_to": "3fa7e38b_7a158f94", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}], "tobiko/tests/faults/ha/test_cloud_recovery.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_1a749b03", "line": 66, "range": {"start_line": 66, "start_character": 23, "end_line": 66, "end_character": 51}, "updated": "2020-02-10 09:28:22.000000000", "message": "I would prefer keep this similar to other Tobiko APIs:\n  get_computes_containers_dict -> list_computes_containers\n\nIt should return a tobiko.Selection object (a subclass of python list class).", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_529508e1", "line": 66, "range": {"start_line": 66, "start_character": 23, "end_line": 66, "end_character": 51}, "in_reply_to": "3fa7e38b_1a749b03", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_da52836a", "line": 72, "range": {"start_line": 71, "start_character": 8, "end_line": 72, "end_character": 76}, "updated": "2020-02-10 09:28:22.000000000", "message": "I would prefer using a naming like: assert_equal_... or something that tells which kind of state is the same. For example: assert_equal_container_state. I prefer be more coherent with python testing APIs", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_928f00d2", "line": 72, "range": {"start_line": 71, "start_character": 8, "end_line": 72, "end_character": 76}, "in_reply_to": "3fa7e38b_da52836a", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}], "tobiko/tripleo/containers.py": [{"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_950dbc37", "line": 15, "range": {"start_line": 15, "start_character": 6, "end_line": 15, "end_character": 30}, "updated": "2020-02-10 09:28:22.000000000", "message": "We do need to know witch containers are not in healthy state.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3114e041", "line": 15, "range": {"start_line": 15, "start_character": 6, "end_line": 15, "end_character": 30}, "in_reply_to": "3fa7e38b_950dbc37", "updated": "2020-02-13 00:57:29.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_da31230b", "line": 28, "range": {"start_line": 19, "start_character": 0, "end_line": 28, "end_character": 21}, "updated": "2020-02-10 09:28:22.000000000", "message": "I think we should just return a cotainers client in Topology nodes. The implementation of such class shouldn't bother in upper levels.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4d7a4d27", "line": 28, "range": {"start_line": 19, "start_character": 0, "end_line": 28, "end_character": 21}, "in_reply_to": "3fa7e38b_da31230b", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_9a5acb4e", "line": 33, "range": {"start_line": 33, "start_character": 4, "end_line": 33, "end_character": 26}, "updated": "2020-02-10 09:28:22.000000000", "message": "list_running_conatiners(client=None)", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4d9b2dc6", "line": 33, "range": {"start_line": 33, "start_character": 4, "end_line": 33, "end_character": 26}, "in_reply_to": "3fa7e38b_9a5acb4e", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_5af45356", "line": 53, "range": {"start_line": 53, "start_character": 4, "end_line": 53, "end_character": 34}, "updated": "2020-02-10 09:28:22.000000000", "message": "I think this should be a method of topology class.\n\n  tobology.list_comtainers(group=None)\n\nThe advantage of doing it there is that we can have two separate implementations for tripleo and non-tripleo configurations as TripleO topology is build on top of base topology class.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_6d9aa912", "line": 53, "range": {"start_line": 53, "start_character": 4, "end_line": 53, "end_character": 34}, "in_reply_to": "3fa7e38b_5af45356", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_b538f8ca", "line": 57, "range": {"start_line": 57, "start_character": 4, "end_line": 57, "end_character": 23}, "updated": "2020-02-10 09:28:22.000000000", "message": "If it didn't worked once, what do you make thinking it can do it the second time? I think this kind of things should be done a far lower level. There are too many kind of error to be threaten here, we don't have control of what we are doing when such bad things are happening to make any kind of assumption.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_2d80319c", "line": 57, "range": {"start_line": 57, "start_character": 4, "end_line": 57, "end_character": 23}, "in_reply_to": "3fa7e38b_b538f8ca", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_7af10f64", "line": 60, "range": {"start_line": 60, "start_character": 12, "end_line": 60, "end_character": 36}, "updated": "2020-02-10 09:28:22.000000000", "message": "We don't need a dictionary. I think a tobiko.Select is a better option for this case. It is simpler to understand. As we are iterating objects always in the same order can simply compare two list of equal objects for state comparison. What I don't like of dictionary is:\n - dict API is less intuitive than list one\n - hashing algorithms of dict class make order of items kind of ramdom producing because they are not ordered collections. I do prefer using lists or OrderedDic class (only when a dict did improve our life, not in this case).", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "65b2e1ce99db12d25fd12872a012bb56a4643010", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_4af309e9", "line": 60, "range": {"start_line": 60, "start_character": 12, "end_line": 60, "end_character": 36}, "in_reply_to": "3fa7e38b_7af10f64", "updated": "2020-02-11 13:36:18.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_fa689ff3", "line": 70, "range": {"start_line": 70, "start_character": 8, "end_line": 70, "end_character": 61}, "updated": "2020-02-10 09:28:22.000000000", "message": "I thing this check should be performed at lower level, for example inside get_running_containers function.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "65b2e1ce99db12d25fd12872a012bb56a4643010", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_aaa07df3", "line": 70, "range": {"start_line": 70, "start_character": 8, "end_line": 70, "end_character": 61}, "in_reply_to": "3fa7e38b_adbd0168", "updated": "2020-02-11 13:36:18.000000000", "message": "done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_adbd0168", "line": 70, "range": {"start_line": 70, "start_character": 8, "end_line": 70, "end_character": 61}, "in_reply_to": "3fa7e38b_fa689ff3", "updated": "2020-02-11 00:19:16.000000000", "message": "I'll implement this at the podman client level", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_f56bd0b4", "line": 74, "range": {"start_line": 74, "start_character": 10, "end_line": 74, "end_character": 36}, "updated": "2020-02-10 09:28:22.000000000", "message": "The error you are raising doesn't tell us nothing about what happened! It is going to be hard to understand problems when they occurs.", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_0dac5534", "line": 74, "range": {"start_line": 74, "start_character": 10, "end_line": 74, "end_character": 36}, "in_reply_to": "3fa7e38b_f56bd0b4", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_9564dce7", "line": 77, "range": {"start_line": 77, "start_character": 4, "end_line": 77, "end_character": 39}, "updated": "2020-02-10 09:28:22.000000000", "message": "def assert_equal_containers_state(expected_containers, actual_containers):", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_ed9e99f8", "line": 77, "range": {"start_line": 77, "start_character": 4, "end_line": 77, "end_character": 39}, "in_reply_to": "3fa7e38b_9564dce7", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_55b66428", "line": 81, "range": {"start_line": 81, "start_character": 4, "end_line": 81, "end_character": 49}, "updated": "2020-02-10 09:28:22.000000000", "message": "I would expect two lists, not dictionaries. For comparing them you can sort them before by some criteria. For example:\n \n def comparable_container_key(container):\n     return (container.hostname, container.name)  # some comparable parameters\n\n def sorted_container_list(containers):\n     return list(reversed(sorted(containers, key=comparable_container_key)))\n\n\n def assert_equal_containers_state(expected_containers, actual_containers):\n     # this compares\n     expected_containers = sorted_container_list(expected_containers)\n     actual_containers = sorted_container_list(actual_containers)\n     failures = []\n \n     expected = actual = None\n     while expected_containers or actual_containers:\n         if expected_containers and not expected:\n             expected = expected_containers.pop()\n         if actual_containers and not actual:\n             actual = actual_containers.pop()\n         # check here if they match the same container\n         expected_key = expected and comparable_container_key(expected)\n         actual_key = actual and comparable_container_key(actual)\n         if not expected_key or expected_key > actual_key:\n            # report containers that are in actual and not expected\n            actual = None  # continue with next actual\n            failures.append('expected container not found: {}'.format(expected_key))\n         elif not actual_key or actual_key > expected_key:\n            # report containers that are in expected and not in actual\n            expected = None # continue with next expected\n            failures.append('unexpected container found: {}'.format(actual_key))\n         else:\n             # they both exist\n             assert expected is not None and actual is not None \n             # they are the same container\n             assert expected_key == actual_key\n             if expected.state != actual.state:\n                 failures.append('container {} not on the same state: ... '.format(actual_key, ...))\n             expected = actual = None  # continue with next containers\n      \n    if failures:\n        tobiko.fail('container states mismatched:\\n{!s}', '\\n'.join(failures)", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_f123a8a8", "line": 81, "range": {"start_line": 81, "start_character": 4, "end_line": 81, "end_character": 49}, "in_reply_to": "3fa7e38b_55b66428", "updated": "2020-02-13 00:57:29.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_b5a6b80c", "line": 88, "range": {"start_line": 84, "start_character": 12, "end_line": 88, "end_character": 48}, "updated": "2020-02-10 09:28:22.000000000", "message": "This details should be provided in raised failure, not in log file!", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_112764b7", "line": 88, "range": {"start_line": 84, "start_character": 12, "end_line": 88, "end_character": 48}, "in_reply_to": "3fa7e38b_b5a6b80c", "updated": "2020-02-13 00:57:29.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_75acc0ea", "line": 89, "range": {"start_line": 89, "start_character": 12, "end_line": 89, "end_character": 44}, "updated": "2020-02-10 09:28:22.000000000", "message": "We should raise a test failure, not a generic XYZ error so that test runner marks the test case as failed and not as with errors. So please use function tobiko.fail(...)", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_b119b076", "line": 89, "range": {"start_line": 89, "start_character": 12, "end_line": 89, "end_character": 44}, "in_reply_to": "3fa7e38b_75acc0ea", "updated": "2020-02-13 00:57:29.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "0165bb18bc3c5c43c4251d1c2914e2e895d548ba", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e0ff90fc", "line": 92, "range": {"start_line": 90, "start_character": 8, "end_line": 92, "end_character": 23}, "updated": "2020-02-10 09:28:22.000000000", "message": "Returning value not required", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "0e54ab7b2d1a9bd5619ceb7c3c0e3062b15bd301", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_f28514ac", "line": 92, "range": {"start_line": 90, "start_character": 8, "end_line": 92, "end_character": 23}, "in_reply_to": "3fa7e38b_e0ff90fc", "updated": "2020-02-11 00:19:16.000000000", "message": "Done", "commit_id": "d024570869d2018731003815bd84df835ad90ef5"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "9439a8997bfd9a65800f6e67ecccf1f17fa45fc7", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_03764593", "line": 78, "range": {"start_line": 78, "start_character": 16, "end_line": 78, "end_character": 17}, "updated": "2020-02-12 16:44:05.000000000", "message": "linters might warn about this space...", "commit_id": "aca17f524e811cd2b72e2f5475a552920d5d2044"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_ce404d61", "line": 78, "range": {"start_line": 78, "start_character": 16, "end_line": 78, "end_character": 17}, "in_reply_to": "3fa7e38b_03764593", "updated": "2020-02-13 00:57:29.000000000", "message": "Done", "commit_id": "aca17f524e811cd2b72e2f5475a552920d5d2044"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "9439a8997bfd9a65800f6e67ecccf1f17fa45fc7", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_86148343", "line": 105, "range": {"start_line": 102, "start_character": 8, "end_line": 105, "end_character": 57}, "updated": "2020-02-12 16:44:05.000000000", "message": "What's about None with these bitwise?\n\nI mean `comparable_container_key` doesn't return default value so it will return None in this case and so for some reasons in some specific situations you will check something similar `actual_key > None` which will raise a `TypeError`.\n\nI think it could be more safe to \"bitwise\" with the `&` operator which will also raise a TypeError but it can be more merely surrounded and isolated by some try/except statement and so allow you to do the right action then.\n\nwill give something like:\n\n```\ntry:\n   expected_key = excpected_container & comparable_container_key(\n            excpected_container)\nexcept TypeError:\n   log.error(\"unrecognized container runtime blablabla...\")\ntry:\n   actual_key = actual_container & comparable_container_key(actual_container)\nexcept TypeError:\n   log.error(\"unrecognized container runtime blablabla...\")\n```\n\nThe major difference to bitwise with `and` or `&` is that in the case where your container runtime is misconfigured (or things like that) you risk to throw TypeError in your \"if\" condition and then you risk to introduce more difficult situation to debug.", "commit_id": "aca17f524e811cd2b72e2f5475a552920d5d2044"}, {"author": {"_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, "change_message_id": "b08ddbd644e46da1fb71827d00e15990e00dc6fb", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_d1030c0a", "line": 105, "range": {"start_line": 102, "start_character": 8, "end_line": 105, "end_character": 57}, "in_reply_to": "3fa7e38b_86148343", "updated": "2020-02-13 00:57:29.000000000", "message": "Thanks !\nSo I decided on  redoing this section , the cognitive complexity here is way too much and the implementation is too low level, I'm switching to using padas.dataframes , by merging them I ca get a columns diff easily and with out fear of future bugs", "commit_id": "aca17f524e811cd2b72e2f5475a552920d5d2044"}, {"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "9bfd1af0c013b136178764ef11af509256eddee9", "unresolved": false, "patch_set": 26, "id": "3fa7e38b_f1cde8b9", "line": 105, "range": {"start_line": 102, "start_character": 8, "end_line": 105, "end_character": 57}, "in_reply_to": "3fa7e38b_d1030c0a", "updated": "2020-02-13 01:27:40.000000000", "message": "Yes I think this code will be more understandable by developers without bitwise.\n\nThe main culpitre here is that python handle bitwise  differently if you chose to use `&` or `and`:\n\n```\n$ python -c \"c=1 & 1;print(c)\"\n1\n$ python -c \"c=1 & 0;print(c)\"\n0\n$ python -c \"c=1 & None;print(c)\"\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: unsupported operand type(s) for &: 'int' and 'NoneType'\n$ python -c \"c=1 and None;print(c)\"\nNone\n```\n\nAnd coupled with an implicit return to None in your function `comparable_container_key` and a following condition that expect integer only then we facing a possible bug.\n\n```\n$ python3 -c 'c=1 & None;a = \"sup\" if (1 > c) else \"not sup\";print(a)'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: unsupported operand type(s) for &: 'int' and 'NoneType'\n$ python3 -c 'c=1 & 0;a = \"sup\" if (1 > c) else \"not sup\";print(a)' \nsup\n$ python3 -c 'c=1 and None;a = \"sup\" if (1 > c) else \"not sup\";print(a)'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\nTypeError: unorderable types: int() > NoneType()\n```\n\nAnd the same code works as expected with py2...\n\n```\n$ python -c 'c=1 and None;a = \"sup\" if (1 > c) else \"not sup\";print(a)'\nsup\n```\n\nSo yes I think we really should stay away from this code and these multiple possible behaviours.\n\nAnyway it's an interesting things to know and to take care in future developments.", "commit_id": "aca17f524e811cd2b72e2f5475a552920d5d2044"}]}}, "openstack%2Ftripleo-quickstart~master~I49bebc7b9cb0cb6312613cd9a11b8783b3de3cd5": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I4616e6e97e4a55d11d85fc8ce718e4fb9d6db6ea": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Freleases~master~I686f98758aa6371d7921fe38151909e5162ab4f5": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:17:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ib367b6109cd4fdde40c64fcab575ab55fced4b2b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:13:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I5524048c0b318d03038431cacde558b0df0cb13d": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:13:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I9e999b4a97aedb946bdd0cd0ef5011911739b302": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:13:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I3b506c11ba494ac5f9006eedac809502571182dd": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:13:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I4cc6bd650704c9bcf52d93a1ef288b49d33b202d": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:13:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fairshipctl~master~Iaf7be55cfa95b53820a93882e73494471ce848e0": {"owner_id": 23781, "owner_name": "Stanislav Egorov", "owner_email": "realsystem@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}], "comments": {}}, "openstack%2Fkayobe~master~Ieef73950f89e4dfb727ddc59ef2750d9b81f3c58": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 15:32:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 1, "date": "2020-02-13 15:32:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-13 15:32:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17669, "name": "Doug Szumski", "email": "doug@stackhpc.com", "username": "DougSzumski"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Fnetworking-ovn~master~I259c92116f7d3186ae5af45f1407052eb57ac0ba": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -2, "date": "2020-01-03 13:57:32.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 1, "date": "2019-12-20 10:11:07.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "date": "2019-12-19 18:53:11.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "63485c35dd1783cac051872fd6142b5b4fbe63f2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8565b2e4", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 11}, "updated": "2019-12-23 14:43:09.000000000", "message": "Why not Closes-Bug?", "commit_id": "9584a951c32d3f620ffb0cb0d5910fe528cf3a90"}], "networking_ovn/ovsdb/commands.py": [{"author": {"_account_id": 11952, "name": "Flavio Fernandes", "email": "flavio@flaviof.com", "username": "ffernand"}, "change_message_id": "09dbd1fb5611003646da3c9197c73b03e993db3c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6d267bbc", "line": 633, "range": {"start_line": 633, "start_character": 27, "end_line": 633, "end_character": 41}, "updated": "2019-12-19 18:53:11.000000000", "message": "Is this the most specific we can be about the exception we will get on a double delete situation? If so, lgtm.", "commit_id": "9584a951c32d3f620ffb0cb0d5910fe528cf3a90"}, {"author": {"_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, "change_message_id": "79d7e4bfc161004fd3a56033131052a0ab95ff56", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b8b58f1b", "line": 633, "range": {"start_line": 633, "start_character": 27, "end_line": 633, "end_character": 41}, "in_reply_to": "3fa7e38b_6d267bbc", "updated": "2019-12-19 20:16:52.000000000", "message": "I think so, it references this: https://github.com/openvswitch/ovs/blob/24e6970809483d256c38cfd029ae9469b0d3e961/python/ovs/db/idl.py#L1217\n\nThere are two assertions, but it should be impossible to hit the other one inside a Command 's run_idl() (without literally *nothing* working).", "commit_id": "9584a951c32d3f620ffb0cb0d5910fe528cf3a90"}, {"author": {"_account_id": 15554, "name": "Bence Romsics", "email": "bence.romsics@gmail.com", "username": "ebenrom"}, "change_message_id": "63485c35dd1783cac051872fd6142b5b4fbe63f2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e56ee6c6", "line": 635, "updated": "2019-12-23 14:43:09.000000000", "message": "Should we add a log line (maybe on a level that's logged by default) about the double delete? Based on the bug report it seems to me we don't fully understand what conditions lead to the double delete. If we make the double delete silent we will likely never get to understand the root cause.", "commit_id": "9584a951c32d3f620ffb0cb0d5910fe528cf3a90"}]}}, "openstack%2Fossa~master~I0928e9c37127299794d36bf21678744800bdeb16": {"owner_id": 9311, "owner_name": "Tristan Cacqueray", "owner_email": "tdecacqu@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 18:56:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~I4d539031b2acd8b59bd46da7640a8f9ef25911c2": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 19:03:43.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Frocky~I35778278f2f928f8c01f7719c9877e1e8ac89fa1": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:09:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Frocky~Id73e8ae40f4db67247bde36156e3b84c456b9f29": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:09:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fsushy~stable%2Ftrain~I637f11ff9ceab398077eae19db83db396356c8dc": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 01:37:35.000000000", "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}], "comments": {}}, "airship%2Fshipyard~master~I142a3e731b244f6c446e349d9d9cc07f79d893f2": {"owner_id": 28664, "owner_name": "Ahmad Mahmoudi", "owner_email": "ahmad.mahmoudi@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}], "comments": {}}, "airship%2Fdeckhand~master~I61a1bf0185ef9900dca932531d25fdd2bde14854": {"owner_id": 28664, "owner_name": "Ahmad Mahmoudi", "owner_email": "ahmad.mahmoudi@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla-ansible~master~I41c2fb7d476d553aeaca34feef1d045967c284fb": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 14:47:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-13 16:49:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fnova-specs~master~I474826eadde4ac47aa4b89e1b7fbffdfe39a4e11": {"owner_id": 27614, "owner_name": "ya.wang", "owner_email": "me@littleya.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, {"value": -1, "date": "2020-01-27 12:33:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12860, "name": "Dongcan Ye", "email": "yedongcan@yeah.net", "username": "yedongcan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, {"value": -1, "date": "2020-01-20 03:15:24.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_49437e12", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 50}, "updated": "2019-11-12 16:19:00.000000000", "message": "Suggest to write a small summary of the spec in the commit:\n\n  Add \"live migration without performance impact\" spec.\n\n  This spec proposes a way to selectively disable live\n  migration-related features, post-copy and auto-converge. \n  It is useful for guest workloads that cannot tolerate any \n  potential performance impact.", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6602030f", "line": 13, "updated": "2020-01-20 03:15:24.000000000", "message": "Lack of the \"APIImpact\" tag.", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}], "specs/ussuri/approved/live-migration-no-performance-impact.rst": [{"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_49905e97", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 36}, "updated": "2019-11-12 16:19:00.000000000", "message": "Suggest: \"Live migration without performance impact\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e17a7a23", "line": 8, "range": {"start_line": 8, "start_character": 0, "end_line": 8, "end_character": 36}, "in_reply_to": "3fa7e38b_49905e97", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_5681d99f", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 27}, "updated": "2019-11-12 16:19:00.000000000", "message": "Consistency nit: \"Auto-converge and \"post-copy\".\n\n(All occurrences.)", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0176b640", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 27}, "in_reply_to": "3fa7e38b_5681d99f", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_960e718a", "line": 17, "range": {"start_line": 16, "start_character": 50, "end_line": 17, "end_character": 9}, "updated": "2019-11-12 16:19:00.000000000", "message": "\" that allow long-running live migration jobs to complete successfully.\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_21965240", "line": 17, "range": {"start_line": 16, "start_character": 50, "end_line": 17, "end_character": 9}, "in_reply_to": "3fa7e38b_960e718a", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_76b5f57d", "line": 19, "range": {"start_line": 19, "start_character": 9, "end_line": 19, "end_character": 76}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"on the destination node and access the guest memory from the source node on-demand\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_61da0a1e", "line": 19, "range": {"start_line": 19, "start_character": 9, "end_line": 19, "end_character": 76}, "in_reply_to": "3fa7e38b_76b5f57d", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b65fed73", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 13}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"configuration\" --> \"configuration attribute on compute nodes\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9683d1cb", "line": 21, "range": {"start_line": 21, "start_character": 62, "end_line": 21, "end_character": 70}, "updated": "2019-11-12 16:19:00.000000000", "message": "s/instance/instances/", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_81ddc614", "line": 21, "range": {"start_line": 21, "start_character": 62, "end_line": 21, "end_character": 70}, "in_reply_to": "3fa7e38b_9683d1cb", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_21e412e0", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 13}, "in_reply_to": "3fa7e38b_b65fed73", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d6f06969", "line": 24, "range": {"start_line": 24, "start_character": 18, "end_line": 24, "end_character": 23}, "updated": "2019-11-12 16:19:00.000000000", "message": "s/which/is/", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e1cd9a5e", "line": 24, "range": {"start_line": 24, "start_character": 18, "end_line": 24, "end_character": 23}, "in_reply_to": "3fa7e38b_d6f06969", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f6fa4541", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 12}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"the instance\" --> \"the instance running the application\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_01c9d64f", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 12}, "in_reply_to": "3fa7e38b_f6fa4541", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_16a4c14a", "line": 34, "range": {"start_line": 33, "start_character": 23, "end_line": 34, "end_character": 31}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"I want the user to be able to tag an instance to not have performance impact due to live migration options\".", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e1691a26", "line": 34, "range": {"start_line": 33, "start_character": 23, "end_line": 34, "end_character": 31}, "in_reply_to": "3fa7e38b_16a4c14a", "updated": "2019-11-13 05:08:09.000000000", "message": "> \"I want the user to be able to tag an instance to not have\n > performance impact due to live migration options\".\n\nThe usage of the tag is telling operator \"please use no-performance-impact parameter\" during live migrate to avoid performance impact, it's not means use the parameter mandatory and not affect any nova service internal. Operator may ignore it for higher priority operations.\n\nSo I think 'request' is a good word here.", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d631490c", "line": 36, "range": {"start_line": 36, "start_character": 18, "end_line": 36, "end_character": 76}, "updated": "2019-11-12 16:19:00.000000000", "message": "This needs rephrasing.  The proposed 'no_performance_impact' is not guaranteeing \"success\" of live migration; it's removing potential performance due to auto-converge / post-copy.\n\nMaybe rephrase it to:\n\n\"As an operator, when possible, I want the live migration to succeed without incurring much performance penalty or taking too much time.\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_01d316d5", "line": 36, "range": {"start_line": 36, "start_character": 18, "end_line": 36, "end_character": 76}, "in_reply_to": "3fa7e38b_d631490c", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_763895ed", "line": 39, "range": {"start_line": 38, "start_character": 13, "end_line": 39, "end_character": 36}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"I want the live migration to not impact performance-sensitive guest workloads.\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_41d10ecc", "line": 39, "range": {"start_line": 38, "start_character": 13, "end_line": 39, "end_character": 36}, "in_reply_to": "3fa7e38b_763895ed", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d61aa97a", "line": 45, "range": {"start_line": 44, "start_character": 22, "end_line": 45, "end_character": 5}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"add a parameter to avoid performance impact to live migration API call.\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c1dc1ee3", "line": 45, "range": {"start_line": 44, "start_character": 22, "end_line": 45, "end_character": 5}, "in_reply_to": "3fa7e38b_d61aa97a", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c9ff6efe", "line": 60, "range": {"start_line": 60, "start_character": 36, "end_line": 60, "end_character": 62}, "updated": "2019-11-12 16:19:00.000000000", "message": "Please spell out the actual parameter: ``no_performance_impact``", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a18fa2cb", "line": 60, "range": {"start_line": 60, "start_character": 36, "end_line": 60, "end_character": 62}, "in_reply_to": "3fa7e38b_c9ff6efe", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_69067a1f", "line": 61, "range": {"start_line": 61, "start_character": 16, "end_line": 61, "end_character": 30}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"somewhere else\" is not helpful; please state where.", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_24f0a0fd", "line": 61, "range": {"start_line": 61, "start_character": 16, "end_line": 61, "end_character": 30}, "in_reply_to": "3fa7e38b_69067a1f", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8909762c", "line": 63, "range": {"start_line": 62, "start_character": 4, "end_line": 63, "end_character": 37}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"[...] whether to add the new parameter before live migration starts, to avoid performance impact\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c18adeba", "line": 63, "range": {"start_line": 62, "start_character": 4, "end_line": 63, "end_character": 37}, "in_reply_to": "3fa7e38b_8909762c", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c94d2e72", "line": 65, "range": {"start_line": 65, "start_character": 8, "end_line": 65, "end_character": 58}, "updated": "2019-11-12 16:19:00.000000000", "message": "Maybe you can state an _example_ \"form\"?", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_64cf78b3", "line": 65, "range": {"start_line": 65, "start_character": 8, "end_line": 65, "end_character": 58}, "in_reply_to": "3fa7e38b_c94d2e72", "updated": "2019-11-13 05:08:09.000000000", "message": "> Maybe you can state an _example_ \"form\"?\n\nI think place this in document is better :)", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e9190a7a", "line": 73, "range": {"start_line": 73, "start_character": 2, "end_line": 73, "end_character": 39}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"This can work, but it exposes the\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_01fc763d", "line": 73, "range": {"start_line": 73, "start_character": 2, "end_line": 73, "end_character": 39}, "in_reply_to": "3fa7e38b_e9190a7a", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c928ce86", "line": 77, "range": {"start_line": 76, "start_character": 25, "end_line": 77, "end_character": 22}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"But it has the problem as above - exposing hypervisor features to end users.\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_01aa3619", "line": 77, "range": {"start_line": 76, "start_character": 25, "end_line": 77, "end_character": 22}, "in_reply_to": "3fa7e38b_89289633", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e1aefa2d", "line": 77, "range": {"start_line": 76, "start_character": 25, "end_line": 77, "end_character": 22}, "in_reply_to": "3fa7e38b_c928ce86", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "07f739d1764ecbdca7b5696536bb158f74b5c50b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_89289633", "line": 77, "range": {"start_line": 76, "start_character": 25, "end_line": 77, "end_character": 22}, "in_reply_to": "3fa7e38b_c928ce86", "updated": "2019-11-12 16:22:54.000000000", "message": "Missing word in my correction: \"the problem\" --> the same problem\"", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_49393ecd", "line": 93, "range": {"start_line": 93, "start_character": 57, "end_line": 93, "end_character": 72}, "updated": "2019-11-12 16:19:00.000000000", "message": "live-migrating", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c1f5fe52", "line": 93, "range": {"start_line": 93, "start_character": 57, "end_line": 93, "end_character": 72}, "in_reply_to": "3fa7e38b_49393ecd", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c9768ea4", "line": 145, "range": {"start_line": 145, "start_character": 26, "end_line": 145, "end_character": 34}, "updated": "2019-11-12 16:19:00.000000000", "message": "instances", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_219c120d", "line": 145, "range": {"start_line": 145, "start_character": 26, "end_line": 145, "end_character": 34}, "in_reply_to": "3fa7e38b_c9768ea4", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e9602ad2", "line": 149, "range": {"start_line": 147, "start_character": 1, "end_line": 149, "end_character": 12}, "updated": "2019-11-12 16:19:00.000000000", "message": "\"Operator needs to filter out instances with **requested no  performance impact\" before live-migrating an instance.\"\n\n(The goal of avoiding performance impact is implicit with the tag.)", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_81638619", "line": 149, "range": {"start_line": 147, "start_character": 1, "end_line": 149, "end_character": 12}, "in_reply_to": "3fa7e38b_e9602ad2", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 6962, "name": "Kashyap Chamarthy", "email": "kchamart@redhat.com", "username": "kashyapc"}, "change_message_id": "afa2dcbbf15b2561587a37f0af049892e4a95e8b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_29ac02ed", "line": 191, "range": {"start_line": 191, "start_character": 42, "end_line": 191, "end_character": 56}, "updated": "2019-11-12 16:19:00.000000000", "message": "live migration", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}, {"author": {"_account_id": 27614, "name": "ya.wang", "email": "me@littleya.com", "username": "ya.wang"}, "change_message_id": "146f90c2ad570917c8481a4b5e5a906c5d580946", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8195c6e5", "line": 191, "range": {"start_line": 191, "start_character": 42, "end_line": 191, "end_character": 56}, "in_reply_to": "3fa7e38b_29ac02ed", "updated": "2019-11-13 05:08:09.000000000", "message": "Done", "commit_id": "e57f6a6040cbafd1f1071ed75d64556b59db2e78"}], "specs/ussuri/approved/live-migration-without-performance-impact.rst": [{"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "6930d5da94cbbc8e8dc8720df22c015b97239714", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4cecbeba", "line": 54, "range": {"start_line": 52, "start_character": 58, "end_line": 54, "end_character": 21}, "updated": "2019-11-15 04:13:24.000000000", "message": "that means the user wants to give a try, if the live-migration can't finish, the user still have the chance to cancel. This is the workflow what we expected, right?", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "d95149f6c773c9ca0e6f9f565c5bfd6431ae3db5", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ea7d386d", "line": 59, "range": {"start_line": 58, "start_character": 67, "end_line": 59, "end_character": 49}, "updated": "2019-11-18 02:54:43.000000000", "message": "Can I call the force complete migration API if I set this new parameter as true? I guess we can, that is choice for the operator.", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "d81db2b89e35ba7de58939934a94b2a9334a9e96", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_49a2059c", "line": 66, "range": {"start_line": 63, "start_character": 4, "end_line": 66, "end_character": 50}, "updated": "2019-11-22 19:43:31.000000000", "message": "I guess it's for each operator to decide how this user -> operator communication will happen, and we don't want to be prescriptive?\n\nThinking out loud here, but what if instead of the new API param, we add an image prop, say \"performance_sensitive\", and then any live migration we do, if the instance has that image property, we disable post-copy and/or auto-converge? We could then give the operator a way to *override* that image property with a new API param to force post-copy and/or auto-converge.\n\nI guess the problem with that idea is that once an instance is booted, if we want to tag it as performance-sensitive, we need to set the new image property and rebuild...", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "877cc227d74030056547691166dec0c5d6d97d35", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8ab468f2", "line": 66, "range": {"start_line": 63, "start_character": 4, "end_line": 66, "end_character": 50}, "in_reply_to": "3fa7e38b_49a2059c", "updated": "2019-11-23 21:08:52.000000000", "message": "Thinking about this some more, image properties or flavor extra specs would be a bad solution for this, because we need something that can be changed during a server's life without affecting the server itself. Maybe server metadata? Though to my knowledge we never use server metadata for any semantics.", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "b63340eea8410811cd11f342917f745e01fedc21", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2a88306f", "line": 131, "range": {"start_line": 131, "start_character": 23, "end_line": 131, "end_character": 30}, "updated": "2019-11-18 02:52:58.000000000", "message": "nit, those APIs have not sorting query parameter.", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "4ca4b1cf116923b4891303c07a47b6bd3c8879cb", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cc350e47", "line": 171, "range": {"start_line": 171, "start_character": 0, "end_line": 171, "end_character": 4}, "updated": "2019-11-15 04:16:15.000000000", "message": "How do you pass the 'no_performance_impact' down to the compute node? I guess that is pass by rpc call parameter?", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "d50e78c98e5f09243021af2a9d754070af78cef9", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0a9a14c4", "line": 171, "range": {"start_line": 171, "start_character": 0, "end_line": 171, "end_character": 4}, "in_reply_to": "3fa7e38b_cc350e47", "updated": "2019-11-18 02:49:02.000000000", "message": "Oops, sorry, I saw you change the DB schema for pass the parameter down.", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 8864, "name": "Artom Lifshitz", "email": "alifshit@redhat.com", "username": "artom"}, "change_message_id": "d81db2b89e35ba7de58939934a94b2a9334a9e96", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_29c0e949", "line": 172, "updated": "2019-11-22 19:43:31.000000000", "message": "Alex sort of raises the valid point of what happens when the source and/or destination is an old compute in a rolling upgrade situation and doesn't understand the new DB field. The answer is obviously \"nothing, we do an old-style live-migration with all the performance impact that this implies\", but maybe we want a way to communicate that to the operator and/or user?", "commit_id": "a9165b73240bc688d60e44ab556ee77dddc6e180"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a65a3b4e", "line": 52, "range": {"start_line": 52, "start_character": 2, "end_line": 52, "end_character": 31}, "updated": "2020-01-20 03:15:24.000000000", "message": "It's fuzzy (contains sentence L25-L30), it corresponds to which configuration when it's set True/False? `live_migration_permit_post_copy`_ or `live_migration_permit_auto_converge`_?\nPlease note this lcear in this spec.\n\n_`live_migration_permit_post_copy`:https://docs.openstack.org/nova/train/configuration/config.html#libvirt.live_migration_permit_post_copy\n_`live_migration_permit_auto_converge`:https://docs.openstack.org/nova/train/configuration/config.html#libvirt.live_migration_permit_auto_converge", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e63593f7", "line": 63, "range": {"start_line": 63, "start_character": 13, "end_line": 63, "end_character": 32}, "updated": "2020-01-20 03:15:24.000000000", "message": "Alternative, I think we can add this *tag* to the instance's metadata, which we get detailes of the server.", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9fe9f0bf394ca45b0dfae485b62e25ffc33f22f2", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_41fd7105", "line": 69, "range": {"start_line": 68, "start_character": 60, "end_line": 69, "end_character": 49}, "updated": "2020-01-20 03:20:28.000000000", "message": "live-migration is the administrative role action, should we expose this parameter to the owner/operator? mainly in GET API list in `REST API impact`", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_46610710", "line": 91, "updated": "2020-01-20 03:15:24.000000000", "message": "You will change the exist live-migrate action api, so need to add a new microversion for this.", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_06122f62", "line": 205, "range": {"start_line": 205, "start_character": 2, "end_line": 205, "end_character": 79}, "updated": "2020-01-20 03:15:24.000000000", "message": "This filter depends on the server's tag, right?", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "de35c96b91f38821fae893e8aadeda1d2e1050ec", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c603b710", "line": 207, "range": {"start_line": 207, "start_character": 2, "end_line": 207, "end_character": 17}, "updated": "2020-01-20 03:15:24.000000000", "message": "I think you should add the unit tests, and functional tests.", "commit_id": "2f99f5edff11f1ba06e81ed443ae9d7940e5edfd"}]}}, "openstack%2Fsushy~stable%2Ftrain~I8d1e1691a0bb2b6315894c85569a73633d34c1cb": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 01:34:25.000000000", "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}], "comments": {}}, "starlingx%2Futilities~master~I14565a8762136c412a13d3553c9a8b2c86b4b5e3": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-13 18:06:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-02-13 17:48:07.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Fnova~master~I24e0a3dcbf956362f0b4c2d80e618993a528afb0": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b5576af733cecbcfb633a76d683b1830b52f6db7", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9d2cb04a", "line": 20, "updated": "2019-12-12 17:16:06.000000000", "message": "This can be removed now.", "commit_id": "66d7a20a9579ca02eeff6f73e03fd6014a23d07b"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "5edb43fae32db0694f3af173ebc69ceb0e43d6a5", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1b4f688c", "line": 20, "in_reply_to": "3fa7e38b_9d2cb04a", "updated": "2019-12-12 19:36:28.000000000", "message": "Done", "commit_id": "66d7a20a9579ca02eeff6f73e03fd6014a23d07b"}], "nova/tests/functional/integrated_helpers.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "91ca5618b6793e1e5563c23534222a6a29e32efd", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_d6076580", "line": 102, "updated": "2019-12-12 20:16:51.000000000", "message": "I need to split this out.", "commit_id": "832cd805aea35caf9b22818f1089f189d0dc01cf"}], "nova/tests/functional/test_scheduler.py": [{"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b5576af733cecbcfb633a76d683b1830b52f6db7", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7db3f409", "line": 160, "range": {"start_line": 159, "start_character": 18, "end_line": 160, "end_character": 25}, "updated": "2019-12-12 17:16:06.000000000", "message": "This is going to have to be fixed:\n\nhttps://review.opendev.org/#/c/697694/1/nova/tests/functional/integrated_helpers.py@a98", "commit_id": "66d7a20a9579ca02eeff6f73e03fd6014a23d07b"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "5edb43fae32db0694f3af173ebc69ceb0e43d6a5", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5b596058", "line": 160, "range": {"start_line": 159, "start_character": 18, "end_line": 160, "end_character": 25}, "in_reply_to": "3fa7e38b_7db3f409", "updated": "2019-12-12 19:36:28.000000000", "message": "Done", "commit_id": "66d7a20a9579ca02eeff6f73e03fd6014a23d07b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b0f1696b7d59104c148266ae8929e47b77cc8ae0", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_850fd52d", "line": 158, "range": {"start_line": 158, "start_character": 12, "end_line": 158, "end_character": 29}, "updated": "2019-12-31 01:07:03.000000000", "message": "It's depends on https://review.opendev.org/#/c/698813/, and you are already rebased on it.", "commit_id": "3e17951ec98049b1c33703f59c17221cdf66c7f9"}]}}, "openstack%2Fnova~master~I2deeae11022a01298f0275dbc2e9d247893aa814": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-13 10:42:08.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 1, "date": "2019-12-31 01:05:08.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 1, "date": "2020-01-02 14:06:27.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 1, "date": "2020-01-17 18:26:40.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openstack%2Ftripleo-upgrade~stable%2Fqueens~Ic420c0717165e01df99ad2368a23fc9fc10e71c1": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-02-07 16:46:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "openstack%2Ftripleo-upgrade~stable%2Fqueens~I421ebecfc5504ac2fd225de0c4fb0cbf735bbdaf": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 2, "date": "2020-02-13 13:41:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fqueens~I6bd11bdf9c74db24c0d21fa600030e9f3b144df0": {"owner_id": 6796, "owner_name": "Giulio Fidente", "owner_email": "gfidente@redhat.com", "labels": [{"value": 0, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 10:15:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11166, "name": "Lukas Bezdicka", "email": "social@v3.sk", "username": "xbezdick"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 1, "date": "2020-02-13 07:23:28.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 8042, "name": "Ji\u0159\u00ed Str\u00e1nsk\u00fd", "email": "jistr@redhat.com", "username": "jistr"}, {"value": 0, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-02-12 13:27:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"docker/services/ceph-ansible/ceph-rgw.yaml": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "7a2809ffd3ead46f04583dadb71755171b88dc3e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_25ffd335", "line": 82, "updated": "2020-01-24 11:39:08.000000000", "message": "should I add a when to run this only on one particular step?", "commit_id": "6b1acf15196844f359b1b6e518e759cecf876259"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "3bd2b47418bde5f26c4b41609db1a35a5ac92aab", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0544179e", "line": 91, "updated": "2020-01-24 11:36:35.000000000", "message": "still have to figure what the existing service_name is set to on queens deployments", "commit_id": "6b1acf15196844f359b1b6e518e759cecf876259"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "7adb9ac49caf424827f69c783e5348fdab4765c3", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_85cd6730", "line": 100, "updated": "2020-01-24 11:37:12.000000000", "message": "same code repeated two more times for every endpoint interface", "commit_id": "6b1acf15196844f359b1b6e518e759cecf876259"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "f47103242fd3dd62dcbfbda72b0f916c36aec174", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e5dbfbe7", "line": 100, "in_reply_to": "3fa7e38b_85cd6730", "updated": "2020-01-24 11:38:07.000000000", "message": "I can try a heat for/repeat but there are some case mismatches in Internal vs internal to be resolved", "commit_id": "6b1acf15196844f359b1b6e518e759cecf876259"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "a26d896126399ba44e89be67f9495ddbc57daa6f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_31762a0e", "line": 82, "updated": "2020-01-25 16:53:36.000000000", "message": "not sure if it is necessary/best to have a when condition on a particular step?", "commit_id": "e5c4ddd4d777a0e231dedc8ff9831563d856fc03"}, {"author": {"_account_id": 8042, "name": "Ji\u0159\u00ed Str\u00e1nsk\u00fd", "email": "jistr@redhat.com", "username": "jistr"}, "change_message_id": "2249ff8c5dad6e6e39dc16c95c125f8dc62adfa2", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ce87b4b3", "line": 81, "updated": "2020-01-30 13:41:40.000000000", "message": "These should probably have a `when` with step info and also condition to run on RGW service's bootstrap host only?", "commit_id": "bd801ed08bac8750e97d739c303e1df9bbea532e"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "dc39c915707fa0f50f7cd1ccaf908facefff5194", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0e1aac7f", "line": 81, "in_reply_to": "3fa7e38b_ce87b4b3", "updated": "2020-01-30 13:47:30.000000000", "message": "ah right because these are not on undercloud, but overcloud nodes\n\ndoes it seem reasonable approach though or would you do this differently? not sure if we can plug it into any task executed on undercloud in a different way, doesn't look like in queens?", "commit_id": "bd801ed08bac8750e97d739c303e1df9bbea532e"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "794a4f9b4d76bd65d6597ed775fa875c05b13689", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5dbb5bbd", "line": 87, "updated": "2020-02-02 08:22:23.000000000", "message": "this only seems to work with a version of python2-openstacksdk which we don't have in queens though ;(\n\nI'll have to replace it with standard shell/command tasks I think", "commit_id": "bd801ed08bac8750e97d739c303e1df9bbea532e"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "c8217c407ea4e1135f5fc2d3350bf7920f7f6f22", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fdb487f6", "line": 92, "updated": "2020-02-02 07:29:59.000000000", "message": "I have to mangle this as well, it will be already the new endpoint uri in the heat resource ... so auth will fail", "commit_id": "bd801ed08bac8750e97d739c303e1df9bbea532e"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "4e742f259119932829b69ebe90b757d6bca38a65", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7dc89775", "line": 92, "in_reply_to": "3fa7e38b_fdb487f6", "updated": "2020-02-02 07:34:37.000000000", "message": "wrong, this is what the object-store url will become not the auth url ... all good here", "commit_id": "bd801ed08bac8750e97d739c303e1df9bbea532e"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "3f54fd3a01518f96d7fb9622b487ef04c6ae76cd", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a8c9ecab", "line": 81, "updated": "2020-02-03 08:28:45.000000000", "message": "Jiri, I tested this manually and it seems to work well\n\nthe only thing I am still unsure about is if I need to use 'become: true' or if that setting is inherited during update/upgrade/ffwd ?\n\nif it's not necessary then this seems good to go to me", "commit_id": "2400e3b9e648f11c26ee3d849e70b2126406e715"}, {"author": {"_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, "change_message_id": "bc8ba4a012ea05cc95a84739bca6ce01198c9465", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_edd228cf", "line": 130, "updated": "2020-02-10 11:56:20.000000000", "message": "@Lukas, could these tasks break the FFWD from 10 to 13?If I remember correctly we did run them for every release right? shouldn't we add a condition \"when release == 'pike'\" ?", "commit_id": "2400e3b9e648f11c26ee3d849e70b2126406e715"}, {"author": {"_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, "change_message_id": "f910c00838cde6f1677ba03ab57327fa1311c499", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ad22f0b5", "line": 130, "in_reply_to": "3fa7e38b_edd228cf", "updated": "2020-02-10 12:03:00.000000000", "message": "(01:00:34 PM) lbezdick: jfrancoa: yeah this will run like 3 times\n(01:01:05 PM) lbezdick: jfrancoa: I think that code shouldn't go to ffwd tasks at all\n(01:01:16 PM) jfrancoa: lbezdick: ok, thanks for the info...I didn't remember if it was like this or not...feel free to -1 it then\n(01:01:34 PM) lbezdick: jfrancoa: upgrade tasks should be enough\n(01:01:36 PM) lbezdick: gfidente: ^^\n(01:02:14 PM) lbezdick: gfidente: in ffwd upgrade tasks we shut down everything on OC, step5 is definetly no touchy for API\n(01:02:23 PM) lbezdick: gfidente: and it would run multiple times", "commit_id": "2400e3b9e648f11c26ee3d849e70b2126406e715"}]}}, "openstack%2Fsushy~stable%2Ftrain~I3e9e2ee0867f59684c24e60772a5318801891521": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 01:36:17.000000000", "_account_id": 6618, "name": "Ruby Loo", "email": "opensrloo@gmail.com", "username": "rloo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}], "comments": {}}, "openstack%2Fnova-specs~master~I4e160ac115a1e6717df5bd5daeccaba83bf916a5": {"owner_id": 6873, "owner_name": "Matt Riedemann", "owner_email": "mriedem.os@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8745, "name": "Lars Kellogg-Stedman", "email": "lars@redhat.com", "username": "lars"}, {"value": 1, "date": "2019-12-31 01:08:49.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7386, "name": "Tzu-Mainn Chen", "email": "tzumainn@redhat.com", "username": "tzumainn"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10343, "name": "Jim Rollenhagen", "email": "jim@jimrollenhagen.com", "username": "jimrollenhagen"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2033, "name": "Belmiro Moreira", "email": "moreira.belmiro.email.lists@gmail.com", "username": "moreira-belmiro-email-lists"}], "comments": {"specs/ussuri/approved/ironic-tenant-filter.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7fffddf9092597de017c87424939ecbfe0137a2b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b406c573", "line": 180, "range": {"start_line": 180, "start_character": 7, "end_line": 180, "end_character": 91}, "updated": "2019-12-30 12:29:11.000000000", "message": "it need to be changed for \"id8\": https://docs.openstack.org/ironic/latest/contributor/webapi-version-history.html#id8", "commit_id": "7a8e1a94a2208a71c3823154e3b8503f92b2e9ed"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "b530e03ae8b4c6897bdd4c2045a6b3d603dd00f3", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cf072ec8", "line": 180, "range": {"start_line": 180, "start_character": 7, "end_line": 180, "end_character": 91}, "in_reply_to": "3fa7e38b_b406c573", "updated": "2019-12-30 14:49:22.000000000", "message": "Done, not sure how I messed that up.", "commit_id": "7a8e1a94a2208a71c3823154e3b8503f92b2e9ed"}]}}, "openstack%2Fnova-specs~master~I0c4ffe349dc9381c83c836efb4af99d072169c88": {"owner_id": 30209, "owner_name": "Huaqiang", "owner_email": "huaqiang.wang@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12860, "name": "Dongcan Ye", "email": "yedongcan@yeah.net", "username": "yedongcan"}, {"value": 0, "_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, {"value": 0, "_account_id": 7160, "name": "arkady kanevsky", "email": "akanevsk@redhat.com", "username": "arkady"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 2, "date": "2020-02-13 16:11:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "_account_id": 27654, "name": "Hongbin Lu", "email": "kira034@163.com", "username": "hongbin.lu"}, {"value": 2, "date": "2020-02-13 17:42:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "4c37ccab27ed456b2551192ca5ffbff1103e0b15", "unresolved": false, "patch_set": 5, "id": "7faddb67_3f6c3035", "line": 11, "updated": "2019-07-25 20:26:03.000000000", "message": "Blueprint: use-pcpu-and-vcpu-in-one-instance", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "81cdaa3a8e57eb01e07f1d7942641b6f14c1048f", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_289b1816", "line": 14, "range": {"start_line": 14, "start_character": 37, "end_line": 14, "end_character": 63}, "updated": "2020-01-27 12:15:24.000000000", "message": "Can you update these to use 'bp/use-pcpu-and-vcpu-in-one-instance' so we can find them easier?", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "471e339152a6bc212ae4664471a70df0788f1431", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_f242aa92", "line": 14, "range": {"start_line": 14, "start_character": 37, "end_line": 14, "end_character": 63}, "in_reply_to": "3fa7e38b_289b1816", "updated": "2020-01-29 05:07:22.000000000", "message": "> Can you update these to use 'bp/use-pcpu-and-vcpu-in-one-instance'\n > so we can find them easier?\n\nI have move the code under topic 'bp/use-pcpu-and-vcpu-in-one-instance'. Please notice that these patches are for spec@ver14. I'll make a update to reflect the design of ver17.\n\nthanks", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}], "specs/train/approved/use-pcpu-vcpu-in-one-instance.rst": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_5b5dc3ea", "line": 16, "range": {"start_line": 16, "start_character": 24, "end_line": 16, "end_character": 28}, "updated": "2019-07-02 18:19:03.000000000", "message": "remaining", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bcc05f45ed4534d1bcf7e5c3885beeec7d0a54fa", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_39648de5", "line": 23, "range": {"start_line": 23, "start_character": 28, "end_line": 23, "end_character": 35}, "updated": "2019-07-03 09:35:02.000000000", "message": ". However, with", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bcc05f45ed4534d1bcf7e5c3885beeec7d0a54fa", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_596dc1ca", "line": 23, "range": {"start_line": 23, "start_character": 3, "end_line": 23, "end_character": 8}, "updated": "2019-07-03 09:35:02.000000000", "message": "all", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_5b2b8332", "line": 51, "range": {"start_line": 51, "start_character": 26, "end_line": 51, "end_character": 42}, "updated": "2019-07-02 18:19:03.000000000", "message": "Is there a precedent for this? We usually don't allow users (via the image) to request resources except as allowed by the admin (via the flavor).\n\nI recognize that it's more like \"configuring\" resources already requested via the flavor; but IMO it's giving too much power to the user, who could abuse this to simply request all of their CPUs be dedicated.\n\n[Later] Is hw_cpu_policy already a thing in image metadata? If so, I guess this isn't any worse.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_555ee776", "line": 51, "range": {"start_line": 51, "start_character": 26, "end_line": 51, "end_character": 42}, "in_reply_to": "9fb8cfa7_5b2b8332", "updated": "2019-07-04 08:12:51.000000000", "message": "`hw_cpu_policy` an existing property: https://docs.openstack.org/glance/latest/admin/useful-image-properties.html.\n\nI do not object to removing 'hw_cpus.dedicated' since it might arise concern.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bcc05f45ed4534d1bcf7e5c3885beeec7d0a54fa", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_39924da1", "line": 55, "updated": "2019-07-03 09:35:02.000000000", "message": "I don't get why this is necessary. Why can't we request PCPU/VCPU resources like any other resource?\n\n    resources:VCPU=2\n    resources:PCPU=4\n\nAnd just rely on these being in a specific order, i.e. VCPUs will always be allocated first", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_308265ca", "line": 55, "in_reply_to": "9fb8cfa7_39924da1", "updated": "2019-07-04 08:12:51.000000000", "message": "It is necessary.\nI guest ``resource::PCPU=2`` only specifies the PCPU number of instance required, but here we want to be possible to tell which instance CPUs are pinning to the PCPUs exactly. For example pinning two PCPUs to the instance's first and last vCPUs.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_7b30c79f", "line": 58, "updated": "2019-07-02 18:19:03.000000000", "message": "otherwise.... exception? (yes)\n\nBut again, I'm pretty sure we should not allow this to be requested via image metadata at all.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bcc05f45ed4534d1bcf7e5c3885beeec7d0a54fa", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_99e6d94a", "line": 58, "in_reply_to": "9fb8cfa7_7b30c79f", "updated": "2019-07-03 09:35:02.000000000", "message": "Also, what about 'hw:cpu_policy'? We were planning to make this legacy behavior", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_10696924", "line": 58, "in_reply_to": "9fb8cfa7_7b30c79f", "updated": "2019-07-04 08:12:51.000000000", "message": "Will discard 'hw_cpus.dedicated'.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_70c69d19", "line": 58, "in_reply_to": "9fb8cfa7_99e6d94a", "updated": "2019-07-04 08:12:51.000000000", "message": "The implementation of proposing spec depends on the changes made to `hw:cpu_policy` by `CPU resource tracking`_.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_e522df51", "line": 65, "range": {"start_line": 65, "start_character": 47, "end_line": 65, "end_character": 60}, "updated": "2019-07-02 12:09:35.000000000", "message": "we don't have cpuset field in the flavor. but I know what your mean. The id shouldn't be greater than flavor.vcpus.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_95c0dfe2", "line": 65, "range": {"start_line": 65, "start_character": 47, "end_line": 65, "end_character": 60}, "in_reply_to": "9fb8cfa7_e522df51", "updated": "2019-07-04 08:12:51.000000000", "message": "Change it to --->\n\nThe CPUs specified in ``<cpuset string>`` are expected to be a subset of the instance CPUs.\n\n------\nthe above covers the case that all instance CPUs are allocated from PCPU since `a set is a subset of itself`, right?", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_966a327f", "line": 68, "updated": "2019-07-02 18:19:03.000000000", "message": "How does the VM find out which CPU IDs correspond to shared and which to dedicated?", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "47b82315eb61f41947f768a580d3cf241cd07492", "unresolved": false, "patch_set": 2, "id": "7faddb67_32e6e5ea", "line": 68, "in_reply_to": "7faddb67_9050f934", "updated": "2019-07-04 10:41:42.000000000", "message": "> Or If you mean the application inside the VM gets to know which\n > host CPU ID it running on,\n\nThis is what I meant. Not specifically which host CPU, but just that e.g. CPU 0 is a dedicated one, so it should use that one for performance critical processes.\n\n > then it might need to access instance\n > metadata REST API. And the host CPU information should be\n > registered in metadata, and this should be task to be done.\n\nOkay. I don't know how metadata works, but if that's the way to do it, great. (There seems to be debate above.)", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "3a4b7f3d2ef27689facca134d9f06a5b5f084487", "unresolved": false, "patch_set": 2, "id": "7faddb67_90d6b94f", "line": 68, "in_reply_to": "9fb8cfa7_19dae978", "updated": "2019-07-04 04:21:04.000000000", "message": "@Stephen, why expose that via metadata is wrong?", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_9050f934", "line": 68, "in_reply_to": "9fb8cfa7_966a327f", "updated": "2019-07-04 08:12:51.000000000", "message": "If I understand you correctly, do you want me to take one or more examples to tell which instance CPU is being used in as 'shared' or 'dedicated' when 'hw:cpus.dedicated' is specified?\n\nI have one example in the following paragraphs, and I need to add one more to cover the multiple instance NUMA nodes case.\n\nHere is the example I want to add:\n\n flavor:\n      vcpus=8\n      memory_mb=512\n      extra_specs:\n        hw:cpus.dedicated=0-1,4\n        hw:numa_nodes=2\n\nIn the instance above, there are two NUMA nodes and CPUs are equally divided across the NUMA nodes, that implies \n    hw:numa_cpus.0=0-3\n  and\n    hw:numa_cpus.1=4-7\n\nthe instance flavor has made CPU 0,1,4 are dedicated CPUs, so \nfor instance NUMA node0, PCPUs=(0,1) and VCPUs=(2,3); for instance NUMA node1 the PCPUS=(4) and VCPUs=(5,6,7).\n\nOr If you mean the application inside the VM gets to know which host CPU ID it running on, then it might need to access instance metadata REST API. And the host CPU information should be registered in metadata, and this should be task to be done.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "bcc05f45ed4534d1bcf7e5c3885beeec7d0a54fa", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_19dae978", "line": 68, "in_reply_to": "9fb8cfa7_966a327f", "updated": "2019-07-03 09:35:02.000000000", "message": "It can't, unless we want to expose this via metadata and that seems wrong", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_dbc8d357", "line": 78, "range": {"start_line": 78, "start_character": 26, "end_line": 78, "end_character": 29}, "updated": "2019-07-02 18:19:03.000000000", "message": "To be clear, this is saying that within the *instance* the CPUs with IDs 0 and 2 will come from the host's [compute]cpu_dedicated_set (and IDs 1 and 3 will come from [compute]cpu_shared_set). These numbers do not (and must not) have any relation to the physical CPU IDs on the hypervisor.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_b92dddfe", "line": 78, "range": {"start_line": 78, "start_character": 26, "end_line": 78, "end_character": 29}, "in_reply_to": "9fb8cfa7_dbc8d357", "updated": "2019-07-04 08:12:51.000000000", "message": "I'll add some explanation to this example. \n\nSince the instance ``dedicated``/``shared`` vCPUs should not have a mapping with certain CPUs in host's cpu_dedicated_set/cpu_shared_set, but if the instance has multiple NUMA nodes then the ``dedicated`` and ``shared`` instance vCPU that belong to the same instance NUMA cell should locate in same host NUMA cell. Example2:\n\n    flavor:\n      vcpus=4\n      memory_mb=512\n      extra_specs:\n        hw:cpus.dedicated=0,2\n        hw:numa_nodes=2\n\nHere requesting an instance with two NUMA nodes, vCPU 0 and 1 are in instance NUMA cell 0, and vCPU 2 and 3 are in another instance NUMA cell. And also expecting the vCPU 0,2 to be allocated from cpu_dedicated_set, vCPU 1,3 to be allocated from cpu_shared_set. And this example also requests vCPU0 and 1 should reside on one host NUMA node since vCPU 0 and 1 belong to the one instance NUMA node. \nvCPU 2 and 3 are also required to be scheduled on host CPUs that belong to one host NUMA node.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_1b32eb5f", "line": 79, "updated": "2019-07-02 18:19:03.000000000", "message": "Because the original spec [1] allows resources:PCPU in the flavor, we should consider a few different combinations:\n\n- Should it be legal to include resources:PCPU=$dedicated_count? So in this example:\n\n    flavor:\n      vcpus=4\n      memory_mb=512\n      extra_specs:\n        resources:PCPU=2  # <== this\n        hw:cpus.dedicated=0,2\n\n- Does it make sense to allow vcpu=X and resources:PCPU=Y where Y < X *without* also specifying hw:cpus.dedicated? I assume it is important for the VM to know *which* of its logical CPUs are dedicated, so if we allowed the dedicated cpuset to be absent, there would have to be a documented convention for which logical CPU IDs we pick to be dedicated, e.g. \"the first Y\". So in this example:\n\n    flavor:\n      vcpus=4\n      memory_mb=512\n      extra_specs:\n        resources:PCPU=2\n\n...implicitly means logical CPUs 0,1 are dedicated, and 2,3 are shared.\n\nOr we can make either/both of these generate an error.\n\nDiscuss.\n\n[1] http://specs.openstack.org/openstack/nova-specs/specs/train/approved/cpu-resources.html#example-flavor-configurations", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "8eee9671567119d45f94cfa458520ea2c787a604", "unresolved": false, "patch_set": 2, "id": "7faddb67_37c81454", "line": 79, "in_reply_to": "9fb8cfa7_1b32eb5f", "updated": "2019-07-04 12:18:35.000000000", "message": "I still think we shouldn't allow the user specify the 'resoruces:RC' directly. For example, we only support numa instance. If the user only specified resources:PCPU=2, what we can do? fill the numa part into the resources? \n\nI prefer to keep those extra specs. And we translate those extra spec into placement request. I and Sean talk about this few times. like it also provides upgrade chance for the future if we want to change the way how to construct placement request.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_d69f4a4f", "line": 94, "updated": "2019-07-02 18:19:03.000000000", "message": "FWIW, I think it should be an error to specify hw:cpu_policy ``shared`` *or* ``dedicated`` when requesting a mix like this. So either we need a new value, like ``mixed``, or we should require hw:cpu_policy to be absent.\n\nOr we can go with Alex's suggestion below in Alternatives.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_e595ff40", "line": 95, "updated": "2019-07-02 12:09:35.000000000", "message": "emulator thread policy only can be isolated when the cpu policy is dedicated. With this spec, we can set the emulator thread policy to isoalted when hw:cpu.dedicated I guess.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_45ddeb3e", "line": 99, "range": {"start_line": 99, "start_character": 1, "end_line": 99, "end_character": 4}, "updated": "2019-07-02 12:09:35.000000000", "message": "contribute another idea\n\nwe can extend the existed hw:cpu_policy.\n\nhw:cpu_policy=dedicated:<cpu id string>,shared:<cpu id string>\n\nThis keeps the backward compatibility, and needn't to deal with some strange combination like hw:cpu_policy=shared and hw:cpu.dedicated is set.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "08239e9534b4d4eb79f43ce3685696808af5534e", "unresolved": false, "patch_set": 2, "id": "7faddb67_ca09cadd", "line": 99, "range": {"start_line": 99, "start_character": 1, "end_line": 99, "end_character": 4}, "in_reply_to": "7faddb67_c62a378f", "updated": "2019-07-22 07:58:49.000000000", "message": "To remove redundancy, how about just adding one instance CPU allocation policy to current policies?\n\n  +'dedicated::<cpuset string>'\n\nThe instance is either to be a ``dedicated`` CPU or a ``shared`` CPU, once the ``dedicated`` CPU list is determined, the ``shared`` CPU list could be derived by \n``instance.cpuset``-``dedicated.<cpuset.string>``.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_76ba1ec1", "line": 99, "range": {"start_line": 99, "start_character": 1, "end_line": 99, "end_character": 4}, "in_reply_to": "9fb8cfa7_45ddeb3e", "updated": "2019-07-02 18:19:03.000000000", "message": "or\n\n hw:cpu_policy.dedicated=<cpuset>\n hw:cpu_policy.shared=<cpuset>", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_c62a378f", "line": 99, "range": {"start_line": 99, "start_character": 1, "end_line": 99, "end_character": 4}, "in_reply_to": "9fb8cfa7_76ba1ec1", "updated": "2019-07-04 08:12:51.000000000", "message": "I prefer the way from Alex.\n\ncurrently, we have two choices for 'hw:cpu_policy':\n-. 'dedicated'\n-. 'shared'\n\nAnd Alex is suggesting adding another two choices, which becomes:\n-. 'dedicated'\n-. 'shared'\n+. 'dedicated.<cpuset string>'\n+. 'shared.<cpuset string>'\n\nIt can only select one policy and avoids the trouble of handling the case that has two kinds of CPU allocation policies at the same time. It also maintains the compatibility to current policy.\n\nFor Eric's suggestion, it still needs to answer how to process the CPU allocation policy when specifying 'hw:cpu_policy=dedicated' and 'hw:cpu_policy.dedicated=<cpuset subset string>'. while 'hw_cpu_policy=dedicated' means all instance CPUs are dedicated CPUs, and in another property you just want partial CPUs to be dedicated CPUs.\nComparing with the proposal of 'hw:cpus.dedicated=<cpuset string>' there is not much difference.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_85c0c351", "line": 105, "range": {"start_line": 104, "start_character": 1, "end_line": 105, "end_character": 45}, "updated": "2019-07-02 12:09:35.000000000", "message": "maybe we needn't. InstanceNUMACell.cpu_pinning_raw can only store part of vcpus. It means those vcpus are dedicated. And we can easy calculate out the shared vcpu by InstaceNUMACell.cpuset - InstaceNUMACell.cpu_pinning_raw.keys()", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_233a1de7", "line": 105, "range": {"start_line": 104, "start_character": 1, "end_line": 105, "end_character": 45}, "in_reply_to": "9fb8cfa7_85c0c351", "updated": "2019-07-04 08:12:51.000000000", "message": "Seems it is a way to avoid the change to InstanceNUMACell object.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_a5c62767", "line": 137, "range": {"start_line": 137, "start_character": 15, "end_line": 137, "end_character": 42}, "updated": "2019-07-02 12:09:35.000000000", "message": "so we are proposing modifying the NUMA topology filter. We need to mention that in the proposal section explicitly", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_c303090f", "line": 137, "range": {"start_line": 137, "start_character": 15, "end_line": 137, "end_character": 42}, "in_reply_to": "9fb8cfa7_a5c62767", "updated": "2019-07-04 08:12:51.000000000", "message": "OK, will add details in 'Proposed Changes' section.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "c4e13f6a51836c29e428933fa44297247c1e23df", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_8593e34e", "line": 165, "range": {"start_line": 163, "start_character": 41, "end_line": 165, "end_character": 15}, "updated": "2019-07-02 12:09:35.000000000", "message": "the shared vcpu will map to the CONF.compute.shared_cpu_set. The dedicated vcpu will map to the CONF.compute.dedicated_cpu_set. we will have same logic in this spec.", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "bc4572da3356f51a959c42ae42d99d1fd9dbddaf", "unresolved": false, "patch_set": 2, "id": "9fb8cfa7_bb15dfe7", "line": 213, "range": {"start_line": 213, "start_character": 27, "end_line": 213, "end_character": 124}, "updated": "2019-07-02 18:19:03.000000000", "message": "http://specs.openstack.org/openstack/nova-specs/specs/train/approved/cpu-resources.html", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "b796d7ffa2f3f2ac437e368dcf48a14604295b75", "unresolved": false, "patch_set": 2, "id": "7faddb67_030a8125", "line": 213, "range": {"start_line": 213, "start_character": 27, "end_line": 213, "end_character": 124}, "in_reply_to": "9fb8cfa7_bb15dfe7", "updated": "2019-07-04 08:12:51.000000000", "message": "got", "commit_id": "d4431ca5c213499e91fac0f079dd569861e19bd9"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_ea76aaa4", "line": 58, "range": {"start_line": 56, "start_character": 2, "end_line": 58, "end_character": 45}, "updated": "2019-07-12 12:48:19.000000000", "message": "i dont think we shoudl  mode it like this\n\nwe should have a hw:cpu_dedicated_mask to mirror the hw:cpu_realtime_mask", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_a264e74a", "line": 58, "range": {"start_line": 56, "start_character": 2, "end_line": 58, "end_character": 45}, "in_reply_to": "7faddb67_ea76aaa4", "updated": "2019-07-19 03:26:58.000000000", "message": "hw:cpu_dedicated_mask sounds good also.\n\nSo we only allow to set hw:cpu_dedicated_mask when hw:cpu_policy is dedicated, right?", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_2a784228", "line": 87, "range": {"start_line": 87, "start_character": 8, "end_line": 87, "end_character": 29}, "updated": "2019-07-12 12:48:19.000000000", "message": "im not really sure that this makes sense\n\nmirror the\nhw:numa_cpus extraspec\nand have\nhw:numa_dedicated_cpus\n\nif we have this however we dont need \n\nthe previes extraspec change\nhw:cpu_policy=dedicated:<cpuset string>\nor my  version hw:cpu_dedicated_mask\n\nwe need to also support the dot notation.\n\ne.g.\nhw:numa_dedicated_cpus.0=0\nhw:numa_dedicated_cpus.1=2 \n\nthis would be the same as the above but done expcitly.\n\nby the way without setting anything else the vm will also still have 4 sockets each with 1 core and 1 thread.\nwe should not change that as part of this spec.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_02de1bd9", "line": 87, "range": {"start_line": 87, "start_character": 8, "end_line": 87, "end_character": 29}, "in_reply_to": "7faddb67_2a784228", "updated": "2019-07-19 03:26:58.000000000", "message": "I guess Huaqiang forget to update at here. he should write 'hw:cpu_policy=dedicated:<cpuset string>'\n\n@Sean\nI'm not sure we should support dot notation. It sounds like we bring some extra trouble for the user. And the user needs to calculate which cpu id is in numa0, which cpu id is in numa1. But actually they are needless info.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_13da534b", "line": 124, "range": {"start_line": 120, "start_character": 0, "end_line": 124, "end_character": 60}, "updated": "2019-07-12 12:48:19.000000000", "message": "conflatinting this with priorities is confusing.\n\nfor now they are just two different type of resouces PCPUs and VCPUs im aware of the other cpu priority work that intel is doing but please dont conflate these two things.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_a2f2a76e", "line": 124, "range": {"start_line": 120, "start_character": 0, "end_line": 124, "end_character": 60}, "in_reply_to": "7faddb67_13da534b", "updated": "2019-07-19 03:26:58.000000000", "message": "yea, agree with you.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_f3a217ae", "line": 128, "range": {"start_line": 126, "start_character": 3, "end_line": 128, "end_character": 15}, "updated": "2019-07-12 12:48:19.000000000", "message": "we could jsut have that be in this spec. i was going to suggest just report the info in the metadta service.\n\nther is no need to have another spec unless you plan to do this in U and not train. if that is the case just state that this will be done in U and decalre it out of scope for now.\n\ni dont think its that much extra work to add the cpu masks to the metadata so i would jsut do this.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_f38bf71b", "line": 139, "range": {"start_line": 139, "start_character": 30, "end_line": 139, "end_character": 62}, "updated": "2019-07-12 12:48:19.000000000", "message": "we do not have a reserved group\n\nwe have dedicated and shared. you reserve cpus by not adding them to either.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_f3b9b7cb", "line": 141, "range": {"start_line": 140, "start_character": 54, "end_line": 141, "end_character": 48}, "updated": "2019-07-12 12:48:19.000000000", "message": "technically you are not ment to start the codeing until after the spec is appoved but maybe you are refering to\nhttps://specs.openstack.org/openstack/nova-specs/specs/train/approved/cpu-resources.html\n\nas still in coding?", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_c29a4312", "line": 141, "range": {"start_line": 140, "start_character": 54, "end_line": 141, "end_character": 48}, "in_reply_to": "7faddb67_f3b9b7cb", "updated": "2019-07-19 03:26:58.000000000", "message": "yes, he is referring to that spec.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_d3e91bb7", "line": 142, "range": {"start_line": 141, "start_character": 49, "end_line": 142, "end_character": 65}, "updated": "2019-07-12 12:48:19.000000000", "message": "with https://specs.openstack.org/openstack/nova-specs/specs/train/approved/cpu-resources.html all vCPU and pCPU inventories will be on the compute node RP and the numa topology filter will continue to filter host on the numa constraints. so i think this is all going to be done as part of that spec but i suspect your going to have a dependency on  https://review.opendev.org/#/c/552924/ \nwhich introduces NUMA topologies to placement if you want to do anything more complex then what will be don in the cpu resouce tracking spec.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_a2c067e2", "line": 142, "range": {"start_line": 141, "start_character": 49, "end_line": 142, "end_character": 65}, "in_reply_to": "7faddb67_d3e91bb7", "updated": "2019-07-19 03:26:58.000000000", "message": "emm...it doesn't sound like a dependence for this spec. I guess the main part is let the virt driver can pin part of its vcpus to pcpus.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_538d2bd1", "line": 163, "range": {"start_line": 154, "start_character": 0, "end_line": 163, "end_character": 31}, "updated": "2019-07-12 12:48:19.000000000", "message": "this is confusign to me.\n\nwe kind of want to remove teh emulator thread policy entirely.\n\nif you set hw:emulator_threads_policy=isolate yes the emulator would be schduled to a dedicated PCPU\n\nbut the defualt is share and since cpu_shared_policy will almost always be set going forward that will mean the defualt behavior is to run the emulator threads on the shared cpu set\nbased on https://specs.openstack.org/openstack/nova-specs/specs/rocky/approved/libvirt-emulator-threads-policy.html\n\ni would just remove this section", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_427413cf", "line": 163, "range": {"start_line": 154, "start_character": 0, "end_line": 163, "end_character": 31}, "in_reply_to": "7faddb67_538d2bd1", "updated": "2019-07-19 03:26:58.000000000", "message": "I guess we don't have any proposal for remove the emulate thread policy now? So in the future we dont' want to support the dedicated emulator thread?", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b206efb74fa9201d5021c0d92c1f6286292f362c", "unresolved": false, "patch_set": 3, "id": "7faddb67_9323a3bd", "line": 171, "range": {"start_line": 171, "start_character": 25, "end_line": 171, "end_character": 42}, "updated": "2019-07-12 12:48:19.000000000", "message": "if it was not clear above i really really hate the current proposal to cram the core mask into the hw:cpu_policy\n\nbut as i pointed out on line we should have 1 addtional extra sepc\nhw:numa_dedicated_cpus[.<numa node>]=<list of cores>\n\ne.g\nhw:numa_dedicated_cpus=1-3\nhw:numa_dedicated_cpus.0=2,3\nhw:numa_dedicated_cpus.1=6,7", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "64cb78c560d5cf966344658328df7e6ebf05836e", "unresolved": false, "patch_set": 3, "id": "7faddb67_82476b77", "line": 171, "range": {"start_line": 171, "start_character": 25, "end_line": 171, "end_character": 42}, "in_reply_to": "7faddb67_9323a3bd", "updated": "2019-07-19 03:26:58.000000000", "message": "may only concern is that numa node id info is useless.", "commit_id": "99a209d7a99abeab7a3aefb9c05c5435ab8bb588"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "08239e9534b4d4eb79f43ce3685696808af5534e", "unresolved": false, "patch_set": 4, "id": "7faddb67_d5dae677", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 33}, "updated": "2019-07-22 07:58:49.000000000", "message": "If copy the rules from 'hw:cpu_realtime_mask' totally, it is not valid.\n\n@Sean @Alex,\n\nThe 'cpu_realtime_mask' specifies the non-realtime vCPUs, and is required to start with a '^'. Refer to section **CPU real-time policy** in https://docs.openstack.org/nova/latest/user/flavors.html\n\nFor making vCPU 0,2 as non-realtime CPUs, the extra specs should be used like these::\n\n    hw:cpu_realtime=yes\n    hw:cpu_realtime_mask=^0,^2\n\nI don't think 'cpu_realtime_mask' presents an intuitive way to define the non-realtime vCPUs since it must have a '^' prefix before the CPU list.\n\nCan we also accept cpu set string that does not prefix with a '^' sign, and perform following operation for final dedicated CPU list (only valid when hw:cpu_policy=decated):\n\n    Real_Dedicated_CPUs = all_instance_cpus AND \n \"vCPU in 'hw:cpu_realtime_mask'\"\n\nOne example is: \n\n    flavor.cpus=6\n    hw:cpu_policy=dedicated\n    hw:cpu_dedicated_mask=0-2  <- ^3-5 here has same effect\n\nvCPU 0-2 will be the dedicated vCPUs and vCPU 3-5 will be the shared vCPUs.", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1b6126a62533816667fcb6828d8df4b29015cfa3", "unresolved": false, "patch_set": 4, "id": "7faddb67_22dc1045", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 33}, "in_reply_to": "7faddb67_38976e93", "updated": "2019-07-26 04:30:50.000000000", "message": "@Sean, the cpu_realtime_mask is special one I think https://github.com/openstack/nova/blob/master/nova/virt/hardware.py#L1470, \n\n\"parse_cpu_spec(\"0-%d,%s\" % (flavor.vcpus - 1, mask))\"\n\nWe added all the vcpu ids in the code, that mean if you just input \"1,3\", Then the code convert it to \"0-4,1,3\". Then it is meaningless. It is meanful when you use '^'.", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "15476090576fae9649d2a2bf6237b962c698b784", "unresolved": false, "patch_set": 4, "id": "7faddb67_38976e93", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 33}, "in_reply_to": "7faddb67_757def6c", "updated": "2019-07-25 15:17:35.000000000", "message": "i think you missed my comment.\n^ is not required by cpu_realtime_mask\nwe support anything that is valide in the vcpu_pin_set.\n\nwe should just reuse the functionality\n\nthe example used for realtime mask uses the negation because in general wee will want all cpus to be realtime except a limmited set.\n\nwe shoudl jsut use the same function as i said above", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "e6459f73ab35f94fea2852faeac5dfb46f8cdadc", "unresolved": false, "patch_set": 4, "id": "7faddb67_757def6c", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 33}, "in_reply_to": "7faddb67_d5dae677", "updated": "2019-07-25 14:35:04.000000000", "message": "I agree completely with this. 'cpu_realtime_mask' is definitely not intuitive and shouldn't be copied. +1 to not needing the '^'", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8bd206d7294eee54b3ee75324b7928a5c0dde092", "unresolved": false, "patch_set": 4, "id": "7faddb67_a389f026", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 33}, "in_reply_to": "7faddb67_d5dae677", "updated": "2019-07-25 14:34:53.000000000", "message": "the  hw:cpu_realtime_mask does not require teh ^\n\n^ means not\n\nyou can write\n\nhw:cpu_realtime_mask=^0,^2\nas  hw:cpu_realtime_mask=1,3\nand its the same assuming 4 cpus.\n\nwe assumed that its more common for the majority of the cores to be realtime to the negation with ^ was shown\n\nbut as far as i know we already support \n\nranges e.g. 1-4\nlists e.g. 1,2,3,4\nnegations e.g. ^3\n\nand cobmibiation of the above.\n\nso i would expect that we would support the same for\nhw:cpu_dedicated_mask.\n\nalso the mose comon case i know of is that we would reserve core 0 for the os on a shared core\n\nso i expect the most common case for hw:cpu_dedicated_mask\n\nwill be hw:cpu_dedicated_mask=^0\n\ne.g. all core excpt the first are pinned and the house keeping core which is almost always core 0 would be form the shared set. that would be the same as hw:cpu_dedicated_mask=1-3 agin assuming 4 cpus totoal.\n\n\nwe use the same cpu spec pasrser as we use for pasting the vcpu pin set to pars the mask \n\nhttps://github.com/openstack/nova/blob/2c0cb71fb0ac0d502dc9fed24211e1ef15407b8f/nova/virt/hardware.py#L1470\n\n\nwhich is implemented here \nhttps://github.com/openstack/nova/blob/2c0cb71fb0ac0d502dc9fed24211e1ef15407b8f/nova/virt/hardware.py#L74-L133\n\nso we should just use that function to parse the \nhw:cpu_dedicated_mask too.", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8bd206d7294eee54b3ee75324b7928a5c0dde092", "unresolved": false, "patch_set": 4, "id": "7faddb67_e3060821", "line": 132, "range": {"start_line": 132, "start_character": 0, "end_line": 132, "end_character": 17}, "updated": "2019-07-25 14:34:53.000000000", "message": "the hos numa cell is alreay being updated by the cpu resouce tracking spec to track shared and dedicated cpu sets", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8bd206d7294eee54b3ee75324b7928a5c0dde092", "unresolved": false, "patch_set": 4, "id": "7faddb67_95598b36", "line": 132, "range": {"start_line": 132, "start_character": 24, "end_line": 132, "end_character": 40}, "updated": "2019-07-25 14:34:53.000000000", "message": "the instance numa toploty should not need to be updated\n\nwe already track the pinned cores in the instance numa toplogy https://github.com/openstack/nova/blob/2c0cb71fb0ac0d502dc9fed24211e1ef15407b8f/nova/objects/instance_numa_topology.py#L54\n\nand the shared cores are just the remainder.\n\nwe also will have the mask in the flavor so we should not need any canges to the instance numa cell object", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "1b6126a62533816667fcb6828d8df4b29015cfa3", "unresolved": false, "patch_set": 4, "id": "7faddb67_42dfcc39", "line": 132, "range": {"start_line": 132, "start_character": 0, "end_line": 132, "end_character": 17}, "in_reply_to": "7faddb67_e3060821", "updated": "2019-07-26 04:30:50.000000000", "message": "Yea, I agree with you, after reviewed Stephen's patch, I think we have everything we need in the model. And yes, we can reuse the cpu_pinning_raw.", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8bd206d7294eee54b3ee75324b7928a5c0dde092", "unresolved": false, "patch_set": 4, "id": "7faddb67_15b35b4f", "line": 146, "range": {"start_line": 143, "start_character": 0, "end_line": 146, "end_character": 65}, "updated": "2019-07-25 14:34:53.000000000", "message": "this is what we do today the only differenece is that we will nolonger have an entry for all guest vcpu in mearly the pinned ones that are declared in the mask.", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "8bd206d7294eee54b3ee75324b7928a5c0dde092", "unresolved": false, "patch_set": 4, "id": "7faddb67_75a40f09", "line": 148, "range": {"start_line": 147, "start_character": 20, "end_line": 148, "end_character": 77}, "updated": "2019-07-25 14:34:53.000000000", "message": "we could but we dont need too.\nthe shared set will be caulated but looking at the numa local subset of the host shared_cpu_set config option", "commit_id": "831b9d003995b57b548a2779801f9de43b1243ca"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_158cbb7d", "line": 11, "range": {"start_line": 11, "start_character": 56, "end_line": 11, "end_character": 59}, "updated": "2019-07-25 15:11:00.000000000", "message": "drop", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_b5e84716", "line": 12, "range": {"start_line": 12, "start_character": 4, "end_line": 12, "end_character": 7}, "updated": "2019-07-25 15:11:00.000000000", "message": "drop", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_d5eb830f", "line": 12, "range": {"start_line": 12, "start_character": 28, "end_line": 12, "end_character": 32}, "updated": "2019-07-25 15:11:00.000000000", "message": "making", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_55d79350", "line": 34, "range": {"start_line": 34, "start_character": 43, "end_line": 34, "end_character": 47}, "updated": "2019-07-25 15:11:00.000000000", "message": "provide", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_35dc5773", "line": 34, "range": {"start_line": 34, "start_character": 22, "end_line": 34, "end_character": 27}, "updated": "2019-07-25 15:11:00.000000000", "message": "quickly ?", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_75cbafa4", "line": 36, "range": {"start_line": 36, "start_character": 12, "end_line": 36, "end_character": 26}, "updated": "2019-07-25 15:11:00.000000000", "message": "to CPUs that are", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_556eb396", "line": 56, "range": {"start_line": 53, "start_character": 50, "end_line": 56, "end_character": 43}, "updated": "2019-07-25 15:11:00.000000000", "message": "I'm okay with the 'hw:cpu_dedicated_mask' extra spec, but I'd much rather we introduced a new policy to define this. How about 'hw:cpu_policy=combined'? If 'hw:cpu_policy=combined' is defined, 'hw:cpu_dedicated_mask' must be defined. If it isn't defined, defining 'hw:cpu_dedicated_mask' would be an error.", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "d31b4fe77f53ea3162d96c7459f1ed9ae51e9dac", "unresolved": false, "patch_set": 5, "id": "7faddb67_e36ca109", "line": 56, "range": {"start_line": 53, "start_character": 50, "end_line": 56, "end_character": 43}, "in_reply_to": "7faddb67_556eb396", "updated": "2019-07-29 10:44:19.000000000", "message": "@Stephen,\n\nI think 'hw:cpu_dedicated_mask' along with 'hw:cpu_policy=dedicated' will be simpler when considering the impact of upgrade. I also record your suggestion of this comment as an alternative in V6 with a slight difference that using 'mixed' instead of 'combined' for wording, please review.\n\nThanks", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "acc1965d2c13ec4a7aeb0d2828466ee9b92c5cce", "unresolved": false, "patch_set": 5, "id": "7faddb67_6310c7a9", "line": 56, "range": {"start_line": 53, "start_character": 50, "end_line": 56, "end_character": 43}, "in_reply_to": "7faddb67_556eb396", "updated": "2019-07-26 13:30:08.000000000", "message": "I understand that a new 'combined' policy will not change the definition of original 'dedicated' policy, and we still can call an instance with all vCPUs allocated from host's dedicated cpu group 'dedicated' instance. Not a bad idea.", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "f1dc8bda6812ef44a9364f9411f54aae4217d4a1", "unresolved": false, "patch_set": 5, "id": "7faddb67_9dc3b489", "line": 56, "range": {"start_line": 53, "start_character": 50, "end_line": 56, "end_character": 43}, "in_reply_to": "7faddb67_e36ca109", "updated": "2019-07-30 16:05:24.000000000", "message": "Have reviewed. I don't think upgrade impacts are a serious concern here. If users want to use these new flavor extra specs for existing instances, they will need to resize their instances. As such, they will have an opportunity to switch the value of 'hw:cpu_policy' from 'dedicated' to 'mixed' while they are settting 'hw:cpu_dedicated_mask'. If anything, upgrades will be simpler with a different policy since it will be clearer to the user that this is a new thing that wasn't possible previously.", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_f5c47f42", "line": 65, "range": {"start_line": 65, "start_character": 57, "end_line": 65, "end_character": 60}, "updated": "2019-07-25 15:11:00.000000000", "message": "do not", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_95e98bb8", "line": 65, "range": {"start_line": 65, "start_character": 33, "end_line": 65, "end_character": 34}, "updated": "2019-07-25 15:11:00.000000000", "message": "missing space after full stop", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_d51ce378", "line": 88, "range": {"start_line": 88, "start_character": 43, "end_line": 88, "end_character": 66}, "updated": "2019-07-25 15:11:00.000000000", "message": "to arbitrary host CPUs\n\n(we don't allow a way to say \"pin guest core N to host core M and that can't change)", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "8fe9de506e6785a4ce87699fad7995949d81b767", "unresolved": false, "patch_set": 5, "id": "7faddb67_f506bf20", "line": 127, "range": {"start_line": 127, "start_character": 59, "end_line": 127, "end_character": 62}, "updated": "2019-07-25 15:11:00.000000000", "message": "two", "commit_id": "642712e5bc2f77697d37883a0697e9533de2eadd"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "369d7b7d4d51d1fc15824f3e78cb3101b1e7e72d", "unresolved": false, "patch_set": 6, "id": "7faddb67_bbd326d5", "line": 50, "range": {"start_line": 50, "start_character": 2, "end_line": 50, "end_character": 11}, "updated": "2019-07-30 03:42:18.000000000", "message": "nit:s/dedicated/Dedicated", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1926fdd2e31389be52b27525f04af043d7152d3c", "unresolved": false, "patch_set": 6, "id": "7faddb67_c7ce2e59", "line": 50, "range": {"start_line": 50, "start_character": 2, "end_line": 50, "end_character": 11}, "in_reply_to": "7faddb67_1fa81f1e", "updated": "2019-07-31 01:19:35.000000000", "message": "I am ok.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "d2415088ccbc71f91ebbbe28dc3455abf88a1370", "unresolved": false, "patch_set": 6, "id": "7faddb67_1fa81f1e", "line": 50, "range": {"start_line": 50, "start_character": 2, "end_line": 50, "end_character": 11}, "in_reply_to": "7faddb67_bbd326d5", "updated": "2019-07-30 14:19:21.000000000", "message": "these are enum values and should be lowercase", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "1f005dc25a7997abd5315af58706e52976c56428", "unresolved": false, "patch_set": 6, "id": "7faddb67_a32469c7", "line": 61, "range": {"start_line": 61, "start_character": 4, "end_line": 61, "end_character": 25}, "updated": "2019-07-29 10:47:01.000000000", "message": "typo\n\nhw_cpu_dedicated_mask=<cpu set string>", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "0ba93058c881e707675a54e166fc739993574ca7", "unresolved": false, "patch_set": 6, "id": "7faddb67_fd9bc8c5", "line": 65, "range": {"start_line": 65, "start_character": 60, "end_line": 65, "end_character": 61}, "updated": "2019-07-30 16:03:00.000000000", "message": "nit: drop", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "c3ac6bf687be0067c1a5c0237750c8b9eb608288", "unresolved": false, "patch_set": 6, "id": "7faddb67_21b4c7d0", "line": 65, "range": {"start_line": 65, "start_character": 60, "end_line": 65, "end_character": 61}, "in_reply_to": "7faddb67_fd9bc8c5", "updated": "2019-07-31 14:06:40.000000000", "message": "Done", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "369d7b7d4d51d1fc15824f3e78cb3101b1e7e72d", "unresolved": false, "patch_set": 6, "id": "7faddb67_76a943db", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "updated": "2019-07-30 03:42:18.000000000", "message": "Recently, at the test site of one of our telecom customers, the system was required to meet the processing time-delay scenario.\n\nAt this time, we need to separately reserve the CPU to provide computing services (improve performance) for the host. This requires planning the vm's vCPU to be assigned to the corresponding pCPU, because the dedicated vCPU is set for the vm (flavor), but can not be assigned to the corresponding pCPU, can not predict the use of pCPU, can not do in the physical node Isolation allows the physical node to use this pCPU without other processes.\n\nFor example: If the vm's flavor-extra_spec is {'extra_spec':{'hw:cpu_policy'='dedicated', 'hw:cpu_dedicated_mask'='0-1,5', 'hw:numa_nodes'=1}} and physical node's {'pcpu': 0-5}, then after the vm is deployed, it will occupy 3 of the '0-5', but the corresponding relationship between the vCPU and the pCPU needs to be known after the vm is booted. Once the number of vms increases, the collection is very Inconvenient, if you can bind to the pCPU by specifying the vCPU, then this will make this scenario application friendly (currently it may increase the number of flavors of the same specification, unless [1] can be implemented).\n[1] https://review.opendev.org/#/c/663563/", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "a33c40dbe37cf03132a8d0ece0a4a09ecb6594fe", "unresolved": false, "patch_set": 6, "id": "7faddb67_045439fd", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_07e9a6b5", "updated": "2019-07-31 14:29:50.000000000", "message": "ok that is what this spec is intended to provide so i think we shoudl abandon this https://blueprints.launchpad.net/nova/+spec/specify-vcpu-bands-to-pcpu blueprint as it add confution since it implies this work is not sufficient.\n\nwe already have \nhttps://blueprints.launchpad.net/nova/+spec/use-pcpu-and-vcpu-in-one-instance\n\nto tack this work.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "1926fdd2e31389be52b27525f04af043d7152d3c", "unresolved": false, "patch_set": 6, "id": "7faddb67_07e9a6b5", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_2b735918", "updated": "2019-07-31 01:19:35.000000000", "message": "> @brin if you are not asking for a way to specify the mapping \n > between vcpu to pcpu in the flavor i retact my statemnet but i \n > also want to be clear in the point above that we do not \n > intened to allow modifying the mapping of guest cpus to host \n > cpus outside of request some geust cpus be from the dedicated \n > set and others form teh shared set.\n\n@sean-k-mooney, I know *specify* vcpu to pcpu will undermine the architecture of nova, this is not I want to say.\n\n > I thought we were providing a way for the admin to say which \n > host CPUs were going to be \"dedicated\" (PCPUs) and which \n > \"shared\" (VCPUs). So if my instance requests PCPU:2,VCPU:3, \n > they'll get two CPUs pinned from the dedicated pool and three \n > virtual processor units floating across the shared pool.\n\nI agree with @efried, that's what I mean.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "8dab1dde1fa182fa2a6a3a1091eeead7fe6aa534", "unresolved": false, "patch_set": 6, "id": "7faddb67_3dc2c035", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_2b735918", "updated": "2019-07-30 16:22:00.000000000", "message": "> you can map the high priorti cores to the cpu_dedicated_set\n > and the low priortiy core to the shared set but nova/placmeent will\n > not be aware of that unless you add a custom trati so it is\n > incorrect to say \"PCPU:2,VCPU:3\" is a request two \"high priority\"\n > and three \"normal priority\" core. it might result in that be we\n > should not conflate the two thing.\n > \n > if you reqested\n > \"PCPU:2,VCPU:3,CUSTOM_CPU_PRIORITISATION=required\"\n > wher CUSTOM_CPU_PRIORITISATION is a trait that is only set on host\n > that have that mapping it would be ok to phase that as 'a request\n > two \"high priority\" and three \"normal priority\" cores' in your\n > private cloud but i hope we will not encurage that pharsing without\n > a trait in any documentation or reference architectures as its\n > misleading otherwise as placmente and nova is not making any\n > guratee about core pirority. i also think it should be an error to\n > specify \"PCPU:2,VCPU:3\" if you dont have hw:cpu_policy=dedicated.\n\nYeah, totally this. I wasn't trying to describe the full design of that use case, just enough of the bones of it to make sure that we were still able to cover it. \"Conflating\" PCPU<=>high-priority/VCPU<=>normal is how Jay suggested it be done, but the details (including a custom trait, how to set the CPU priorities, how to configure the cpu sets, how to build the flavors, etc.) will be a 100% downstream matter.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "0ba93058c881e707675a54e166fc739993574ca7", "unresolved": false, "patch_set": 6, "id": "7faddb67_cb15e54a", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_5070c408", "updated": "2019-07-30 16:03:00.000000000", "message": "> I thought we were providing a way for the admin to say which host\n > CPUs were going to be \"dedicated\" (PCPUs) and which \"shared\"\n > (VCPUs). So if my instance requests PCPU:2,VCPU:3, they'll get two\n > CPUs pinned from the dedicated pool and three virtual processor\n > units floating across the shared pool.\n > \n > True, you can't say which *specific* dedicated host procs you're\n > going to get -- but you're guaranteed that whichever they are,\n > they'll be from the dedicated set.\n > \n > Right???\n\nYes. This reads as if Brin Zhang was asking for the other option, a way to explicitly pin guest core N to host core M, which isn't an option for the reasons Sean points out. However, while we are planning to expose which guest cores are pinned and which are not, we should be clear that we're still not going to expose which host cores these individual guest cores are pinned to because that's not something we're going to do, right?", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "ac743354055c626540e55ce3a9838fbd9495bc87", "unresolved": false, "patch_set": 6, "id": "7faddb67_2b735918", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_5070c408", "updated": "2019-07-30 15:55:41.000000000", "message": "yes you can provided a mask per host to declare what cpus on that host can be used to pin vm cpus.\ngoing forward we will use the cpu_dedicated_set for that and currently you can use the vcpu_pin_set.\n\nhttps://blueprints.launchpad.net/nova/+spec/specify-vcpu-bands-to-pcpu has little detail of the usecase but given it was filed 4 weeks ago and we have had the ablity to spcify the cpu set in the config since juno i interpereted\n\nbrin's statment:\n\"Once the number of vms increases, the collection is very Inconvenient, if you can bind to the pCPU by specifying the vCPU, then this will make this scenario application friendly (currently it may increase the number of flavors of the same specification, unless [1] can be implemented). [1] https://review.opendev.org/#/c/663563/\"\n\nto implies a desire to be able to specify the vcpu to pcpu mapping via the flavor and not the config.\n\nif all that is being asked for is the ablity to declare what cpus are allows for shared and dedicated cpus via the config and ask for an amount of them then that is fine.\n\n\nthe high and low priortio core is a seperate topic.\n\nyou can map the high priorti cores to the cpu_dedicated_set \nand the low priortiy core to the shared set but nova/placmeent will not be aware of that unless you add a custom trati so it is incorrect to say \"PCPU:2,VCPU:3\" is a request two \"high priority\" and three \"normal priority\" core. it might result in that be we should not conflate the two thing.\n\nif you reqested \n\"PCPU:2,VCPU:3,CUSTOM_CPU_PRIORITISATION=required\"\nwher CUSTOM_CPU_PRIORITISATION is a trait that is only set on host that have that mapping it would be ok to phase that as 'a request two \"high priority\" and three \"normal priority\" cores' in your private cloud but i hope we will not encurage that pharsing without a trait in any documentation or reference architectures as its misleading otherwise as placmente and nova is not making any guratee about core pirority. i also think it should be an error to specify \"PCPU:2,VCPU:3\" if you dont have hw:cpu_policy=dedicated.\n\n@brin if you are not asking for a way to specify the mapping between vcpu to pcpu in the flavor i retact my statemnet but i also want to be clear in the point above that we do not intened to allow modifying the mapping of guest cpus to host cpus outside of request some geust cpus be from the dedicated set and others form teh shared set.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "d2415088ccbc71f91ebbbe28dc3455abf88a1370", "unresolved": false, "patch_set": 6, "id": "7faddb67_bf154b4b", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_5ffa1775", "updated": "2019-07-30 14:19:21.000000000", "message": "@brin as an admin only interface we will be exposing this info but we will never allow you to explictly specify what host cores a guest is pinned to on a per instance basis.\n\nwe have rejected that several times so any attempt to force specific cores to be used via flaovr extra specs will be -3'd\n\nif you want that level of contol you should use libvirt directly as it is expcltily breaking the cloud abstraction and is not in the scope of nova to provide support for.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "e4ab3af3b7465fe95afaa6113b9a9f043886cf1b", "unresolved": false, "patch_set": 6, "id": "7faddb67_91088928", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_76a943db", "updated": "2019-07-30 05:43:09.000000000", "message": "Hi Brin,\n\nMy understanding is that your customer wants the vCPU is pinning to a pre-defined pCPU, but in current Nova there is no way to bind the vCPU to some given host pCPU, right?\n\nWe are planned to let instance to know the result of pCPU-vCPU mapping after the instance is ready through 'meta-data' APIs, refer to  'RestAPI Impact' section. So inside the instance it is possible to know which pCPU is associated with the pCPU,  Can this satisfy your customer's requirement?\n\nBut you can not choose the target host NUMA node for better memory or IO affinity, that might be a problem. And I noticed the community is proposing specs to solve this problem by adding NUMA PRs in placement.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "6c38278fe604d266723ffb2ae834332096315021", "unresolved": false, "patch_set": 6, "id": "7faddb67_5ffa1775", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_91088928", "updated": "2019-07-30 12:44:33.000000000", "message": "> My understanding is that your customer wants the vCPU is \n > pinning to a pre-defined pCPU, but in current Nova there is no \n > way to bind the vCPU to some given host pCPU, right?\n\nYeah, 'the vCPU is pinning to a pre-defined pCPU' this will make nova simpler.\n\n > So inside the instance it is possible to know which pCPU is \n > associated with the pCPU,  Can this satisfy your customer's \n > requirement?\n\nYes, if you can explicitly show the mapping between vCPU and pCPU, then it has made great progress.\n\nThe previously drafted bp [1] was submitted to achieve the mapping between vCPU and pCPU. It seems that *this* spec has been implemented.\n\n[1] https://blueprints.launchpad.net/nova/+spec/specify-vcpu-bands-to-pcpu", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "fb7f984ea0fc6245059493b5aeab24b94de1e8c0", "unresolved": false, "patch_set": 6, "id": "7faddb67_5070c408", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_bf154b4b", "updated": "2019-07-30 15:04:13.000000000", "message": "I don't understand.\n\nI thought we were providing a way for the admin to say which host CPUs were going to be \"dedicated\" (PCPUs) and which \"shared\" (VCPUs). So if my instance requests PCPU:2,VCPU:3, they'll get two CPUs pinned from the dedicated pool and three virtual processor units floating across the shared pool.\n\nTrue, you can't say which *specific* dedicated host procs you're going to get -- but you're guaranteed that whichever they are, they'll be from the dedicated set.\n\nRight???\n\nBecause if so, this satisfies the use case just fine. The admin sets up specific CPUs to be e.g. \"high priority\" and then tells Nova that those are supposed to be the \"dedicated\" ones. The rest are then \"shared\". So you can ask for two \"high priority\" and three \"normal\" procs by saying PCPU:2,VCPU:3.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "f6807d011d4495dae841d131055072fed187b246", "unresolved": false, "patch_set": 6, "id": "7faddb67_3df08091", "line": 85, "range": {"start_line": 85, "start_character": 0, "end_line": 85, "end_character": 12}, "in_reply_to": "7faddb67_cb15e54a", "updated": "2019-07-30 16:26:06.000000000", "message": "that is not something we are going to do in this spec.\nhttps://review.opendev.org/#/c/621476/\nwould provide an admin only api to view that mapping for debug use only.\n\nit is a read only view and will not allow modifying the mapping.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "0ba93058c881e707675a54e166fc739993574ca7", "unresolved": false, "patch_set": 6, "id": "7faddb67_7d411839", "line": 125, "range": {"start_line": 107, "start_character": 0, "end_line": 125, "end_character": 66}, "updated": "2019-07-30 16:03:00.000000000", "message": "Personally, I *much* prefer this option. Stating that an instance's cores are dedicated when a mask is stating that only some of them are actually dedicated sounds confusing at best and possibly problematic (for those who mistakenly think this will work for older versions of nova that support plain old 'dedicated' policy) at worse. Is there a good technical reason we can't do this?", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "a33c40dbe37cf03132a8d0ece0a4a09ecb6594fe", "unresolved": false, "patch_set": 6, "id": "7faddb67_01118b5d", "line": 125, "range": {"start_line": 107, "start_character": 0, "end_line": 125, "end_character": 66}, "in_reply_to": "7faddb67_61be3fb5", "updated": "2019-07-31 14:29:50.000000000", "message": "i personally am neutral on this point\n\ni get why stephen wants it and i think it would simplfy the code in some respecst as the mixed behavior would only take effect if the mixed policy is set so that means we dont need to modify any of the logic for the existing shared or dedicated policy so im fine with that.\n\nto ues this feature you have to update your flavor or images anyway so so i dont consider this to have any upgade impact.\n\nso i have a slight preference for it just because its easyier to document but its not enough form me to say we must add a new type., but i dont have any reasons to not add a new type so no objections from me.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "c3ac6bf687be0067c1a5c0237750c8b9eb608288", "unresolved": false, "patch_set": 6, "id": "7faddb67_0eb53a7e", "line": 125, "range": {"start_line": 107, "start_character": 0, "end_line": 125, "end_character": 66}, "in_reply_to": "7faddb67_7d411839", "updated": "2019-07-31 14:06:40.000000000", "message": "@Stephen I don't", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "c3ac6bf687be0067c1a5c0237750c8b9eb608288", "unresolved": false, "patch_set": 6, "id": "7faddb67_61be3fb5", "line": 125, "range": {"start_line": 107, "start_character": 0, "end_line": 125, "end_character": 66}, "in_reply_to": "7faddb67_7d411839", "updated": "2019-07-31 14:06:40.000000000", "message": "@Stephen, technically we can do it. \n\nI need to update this spec to next version before this Thursday's Nova team meeting. If nobody objects *this alternative* before that time, I will make the alternative as the primary proposal.", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "369d7b7d4d51d1fc15824f3e78cb3101b1e7e72d", "unresolved": false, "patch_set": 6, "id": "7faddb67_fb651e1e", "line": 203, "range": {"start_line": 203, "start_character": 31, "end_line": 203, "end_character": 40}, "updated": "2019-07-30 03:42:18.000000000", "message": "The display here [1] is very unfriendly. Maybe we can s/``VCPUs``/``VCP``s\n\n[1]http://logs.openstack.org/56/668656/6/check/openstack-tox-docs/312da7b/html/specs/train/approved/use-pcpu-vcpu-in-one-instance.html#work-items", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "0ba93058c881e707675a54e166fc739993574ca7", "unresolved": false, "patch_set": 6, "id": "7faddb67_3d47204f", "line": 203, "range": {"start_line": 203, "start_character": 31, "end_line": 203, "end_character": 40}, "in_reply_to": "7faddb67_100c8ca3", "updated": "2019-07-30 16:03:00.000000000", "message": "What he said ^", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "b9da83b2feb399af0700b49cb60859d695f762cb", "unresolved": false, "patch_set": 6, "id": "7faddb67_100c8ca3", "line": 203, "range": {"start_line": 203, "start_character": 31, "end_line": 203, "end_character": 40}, "in_reply_to": "7faddb67_fb651e1e", "updated": "2019-07-30 14:58:27.000000000", "message": "To make this render sanely, there has to be whitespace after the closing ``, but you can escape the whitespace so it doesn't show up in the rendered version:\n\n ``VCPU``\\ s", "commit_id": "ee47ff8a10ab2f6bc0d8d442d126badfc42b9252"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_44c1aa53", "line": 15, "range": {"start_line": 15, "start_character": 75, "end_line": 15, "end_character": 76}, "updated": "2019-08-02 14:00:27.000000000", "message": "and expose this information via the metadata API.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_95702074", "line": 15, "range": {"start_line": 15, "start_character": 75, "end_line": 15, "end_character": 76}, "in_reply_to": "7faddb67_44c1aa53", "updated": "2019-08-05 06:11:55.000000000", "message": "Done", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_a4c73e96", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "updated": "2019-08-02 14:00:27.000000000", "message": "We might want to be a bit stronger here. You *must* specify 'hw:cpu_dedicated_mask' or 'hw_cpu_dedicated_mask' if you specify 'hw:cpu_policy=mixed' or 'hw_cpu_policy=mixed', respectively.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_2407cecc", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "updated": "2019-08-02 14:00:27.000000000", "message": "What happens if both the extra spec and image metadata are defined?", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "04c046e23c4a4c39f8ba09fc80e6a399303dc259", "unresolved": false, "patch_set": 7, "id": "7faddb67_7561e404", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "in_reply_to": "7faddb67_2407cecc", "updated": "2019-08-05 05:05:49.000000000", "message": "> What happens if both the extra spec and image metadata are defined?\n\nIf the mask is different between flavor and image, then we reject the request. Just like other hw: extra spec and image properties.\n\nBut I think if the hw:cpu_policy is mixed, then we can have hw_cpu_dedicated_mask.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_158f502a", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "in_reply_to": "7faddb67_2407cecc", "updated": "2019-08-05 06:11:55.000000000", "message": "The existing logic for handling the policy conflicts from flavor and image property is \n\n-------------------------------------------------------\nImage\\Flavor      Dedicated      Shared     Not-Defined\nDedicated             D            Inv         D  \nShared                D            S           S\nNot-Defined           D            S           S\n\nWith the third 'mixed' policy, We'd like to propose new policy matrix as\n\n-------------------------------------------------------------\nImage\\Flavor     Dedicated  Mixed Shared  Not-Defined\nDedicated            D       Inv   Inv      D\nMixed                D       M     Inv      M\nShared               D       M     S        S\nNot-Defined          D       M     S        S\n\n*D=Dedicated\n*M=Mixed\n*Inv=invalid\n*S=Shared\n\nAnother thing if both 'hw:cpu_dedicated_mask' and 'hw_cpu_dedicated_mask' are found, they are required to be identical.\nAnd\n'hw:cpu_dedicated_mask' and 'hw_cpu_dedicated_mask' are only meaningful when CPU policy is 'mixed'.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 7, "id": "7faddb67_40bab26e", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "in_reply_to": "7faddb67_55fb88bc", "updated": "2019-08-07 12:45:21.000000000", "message": "i think the logic encoded in patchset 11 is incorrect.\n\nif the image and flavor values are bot set and do not have the same value we shoudl raise an exception.\n\nif either the image or flavor is set to mixed then\n'hw:cpu_dedicated_mask' or 'hw_cpu_dedicated_mask'\nmust be set.\n\nsetting 'hw:cpu_dedicated_mask' and 'hw_cpu_dedicated_mask' when the cpu policy is not mixed shoudl be an error.\n\ni have commented on the table in v11 with the change that i think are needed.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "04c046e23c4a4c39f8ba09fc80e6a399303dc259", "unresolved": false, "patch_set": 7, "id": "7faddb67_955ca04b", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "in_reply_to": "7faddb67_a4c73e96", "updated": "2019-08-05 05:05:49.000000000", "message": "> We might want to be a bit stronger here. You *must* specify\n > 'hw:cpu_dedicated_mask' or 'hw_cpu_dedicated_mask' if you specify\n > 'hw:cpu_policy=mixed' or 'hw_cpu_policy=mixed', respectively.\n\n+1", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_55fb88bc", "line": 78, "range": {"start_line": 75, "start_character": 0, "end_line": 78, "end_character": 35}, "in_reply_to": "7faddb67_a4c73e96", "updated": "2019-08-05 06:11:55.000000000", "message": "Agree", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_443c4a92", "line": 100, "range": {"start_line": 100, "start_character": 0, "end_line": 100, "end_character": 23}, "updated": "2019-08-02 14:00:27.000000000", "message": "I'd drop this. It's not relevant", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_f5907445", "line": 100, "range": {"start_line": 100, "start_character": 0, "end_line": 100, "end_character": 23}, "in_reply_to": "7faddb67_443c4a92", "updated": "2019-08-05 06:11:55.000000000", "message": "It could be dropped based on the following thinkings, and I'll state these in the spec. \n-. Instance with mixed CPU policy should have at least one dedicated vCPU, which is determined by 'empty or invalid <cpu set string> is not allowed'.\n-. A mixed instance means a numa-awareness instance.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_6452a6e0", "line": 103, "range": {"start_line": 103, "start_character": 4, "end_line": 103, "end_character": 22}, "updated": "2019-08-02 14:00:27.000000000", "message": "``dedicated`` CPUs (PCPUs)", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_15943036", "line": 103, "range": {"start_line": 103, "start_character": 4, "end_line": 103, "end_character": 22}, "in_reply_to": "7faddb67_6452a6e0", "updated": "2019-08-05 06:11:55.000000000", "message": "Done", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_44652ab4", "line": 105, "range": {"start_line": 105, "start_character": 0, "end_line": 105, "end_character": 15}, "updated": "2019-08-02 14:00:27.000000000", "message": "``shared`` CPUs (VCPUs)", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_045bb2f5", "line": 109, "updated": "2019-08-02 14:00:27.000000000", "message": "nit: newline under here", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_646b8684", "line": 130, "updated": "2019-08-02 14:00:27.000000000", "message": "This was rejected at it overloads the 'dedicated' policy to mean two things, depending on the value of another configuration option.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_67ee28ee", "line": 131, "updated": "2019-08-02 14:00:27.000000000", "message": "Another option is to support booting mixed instances by specifying them explicitly using 'resources:PCPU:{amount}' and 'resources:VCPU:{amount}'. This was rejected because it doesn't allow you to specify which guest cores are dedicated and which are shared", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "8c30601fd1df40659f338d069719fb9228d4c9c4", "unresolved": false, "patch_set": 7, "id": "7faddb67_e69c48c1", "line": 131, "in_reply_to": "7faddb67_15367004", "updated": "2019-08-06 02:40:16.000000000", "message": "Maybe not.\n\nWe need not implement any proposal from the alternative section since it is objected, right?", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "9747e326935255a8285f413313911d679b8415b3", "unresolved": false, "patch_set": 7, "id": "7faddb67_171ae26d", "line": 131, "in_reply_to": "7faddb67_22e9e2e1", "updated": "2019-08-06 04:06:12.000000000", "message": "> > Another option is to support booting mixed instances by\n > specifying\n > > them explicitly using 'resources:PCPU:{amount}' and\n > > 'resources:VCPU:{amount}'. This was rejected because it doesn't\n > > allow you to specify which guest cores are dedicated and which\n > are\n > > shared\n > \n > Is there a solid reason for why it is important to be able to\n > define that mapping? I mean, I get that all these virtual instances\n > will eventually be defined with all the legacy hardware attributes\n > so we might as well relent. But really, would it not be okay to\n > just define a policy and say that N dedicated cpus will be evenly\n > distributed between the numa nodes, or be allocated on the node\n > with the largest amount of memory, or something like that?\n > \n > The amount of super-detailed definition of what cores are where\n > that has to be defined for an instance like this just seems to be\n > approaching a point where we're losing the flexibility of having\n > virtual infrastructure in the first place.\n\nTry to remember that I prefer to let the user choose which vcpus are dedicated explicitly instead of coding some logic inside nova. \n\nI don't know whether the user will want the 2 dedicated cpus on numa node1 and no dedicated cpu on numa node2. So just leave the guest definition to the user. This gives the user more flexibility, and the user needn't learn that logic inside nova(like, the user need to learn, the dedicated vcpus may go to the numa node which has large amount memory). And that didn't add any more burden to our code, so why we want to limit our usecases.\n\nI'm ok with not allowing user definition detail if people want. I just thought the explicitly chose by user avoids the hardcoding some logic inside nova and no limits future usecases.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "8c30601fd1df40659f338d069719fb9228d4c9c4", "unresolved": false, "patch_set": 7, "id": "7faddb67_9cb3590a", "line": 131, "in_reply_to": "7faddb67_22e9e2e1", "updated": "2019-08-06 02:40:16.000000000", "message": "Evenly distribute vCPU and PCPU among NUMA nodes might be simpler. \n\nBut considering the selection of PCPU and VCPU, which is specified through `CONFIG.compute.cpu_dedicated_set` and `CONFIG.compute.cpu_dedicated_set`, which contains the host CPU placement information, the host provides the ability of unbalanced PCPU/VCPU distribution, so we think instance could also obtain the capability of creating instance of unbalanced `dedicated` CPUs.\n\nWe also noticed some developer reported the necessity of knowing the pCPU-vCPU mapping for telecom customers.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, "change_message_id": "83f4f8eb82b503f3ade5a4123ec5501e348a3725", "unresolved": false, "patch_set": 7, "id": "7faddb67_22e9e2e1", "line": 131, "in_reply_to": "7faddb67_67ee28ee", "updated": "2019-08-05 18:00:24.000000000", "message": "> Another option is to support booting mixed instances by specifying\n > them explicitly using 'resources:PCPU:{amount}' and\n > 'resources:VCPU:{amount}'. This was rejected because it doesn't\n > allow you to specify which guest cores are dedicated and which are\n > shared\n\nIs there a solid reason for why it is important to be able to define that mapping? I mean, I get that all these virtual instances will eventually be defined with all the legacy hardware attributes so we might as well relent. But really, would it not be okay to just define a policy and say that N dedicated cpus will be evenly distributed between the numa nodes, or be allocated on the node with the largest amount of memory, or something like that?\n\nThe amount of super-detailed definition of what cores are where that has to be defined for an instance like this just seems to be approaching a point where we're losing the flexibility of having virtual infrastructure in the first place.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_b5af5c7b", "line": 131, "in_reply_to": "7faddb67_67ee28ee", "updated": "2019-08-05 06:11:55.000000000", "message": "Will add this as an option.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "04c046e23c4a4c39f8ba09fc80e6a399303dc259", "unresolved": false, "patch_set": 7, "id": "7faddb67_15367004", "line": 131, "in_reply_to": "7faddb67_67ee28ee", "updated": "2019-08-05 05:05:49.000000000", "message": "so we will have a explicitly checking if `resources:PCPU` and `resources:VCPU` in the extra spec?", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_87e9e4e3", "line": 142, "range": {"start_line": 142, "start_character": 35, "end_line": 142, "end_character": 51}, "updated": "2019-08-02 14:00:27.000000000", "message": "``meta_data.json``", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_15bd10b6", "line": 142, "range": {"start_line": 142, "start_character": 35, "end_line": 142, "end_character": 51}, "in_reply_to": "7faddb67_87e9e4e3", "updated": "2019-08-05 06:11:55.000000000", "message": "Done", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_27bef0d4", "line": 147, "updated": "2019-08-02 14:00:27.000000000", "message": "This will require a new version, right?", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5276df0a510bd9627c679297020166f2878bcf1c", "unresolved": false, "patch_set": 7, "id": "7faddb67_205248df", "line": 147, "in_reply_to": "7faddb67_27bef0d4", "updated": "2019-08-05 06:11:55.000000000", "message": "Yes. A new 'OpenStack' version will be appended. Will be fixed in next update.", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "34483e05547c7f242938ebc3d2855ba56fd2c832", "unresolved": false, "patch_set": 7, "id": "7faddb67_e7b3f808", "line": 220, "updated": "2019-08-02 14:00:27.000000000", "message": "nit: newline under here", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "8c30601fd1df40659f338d069719fb9228d4c9c4", "unresolved": false, "patch_set": 7, "id": "7faddb67_fc512d0f", "line": 220, "in_reply_to": "7faddb67_e7b3f808", "updated": "2019-08-06 02:40:16.000000000", "message": "Done", "commit_id": "3cc95940e8623c46f8039e9e5e4cc1a0e4ed1cd0"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_26fd4b6e", "line": 85, "range": {"start_line": 85, "start_character": 42, "end_line": 85, "end_character": 49}, "updated": "2019-08-07 16:36:24.000000000", "message": "invalid should be mixed\n\"it's fine to allow hw_cpu_policy=mixed given hw_cpu_policy=dedicated is already allowed\"", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_4085d2ce", "line": 85, "range": {"start_line": 85, "start_character": 66, "end_line": 85, "end_character": 73}, "updated": "2019-08-07 12:45:21.000000000", "message": "this should be dedicated", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_506fe1fb", "line": 85, "range": {"start_line": 85, "start_character": 66, "end_line": 85, "end_character": 73}, "in_reply_to": "7faddb67_4085d2ce", "updated": "2019-08-07 16:36:24.000000000", "message": "Agree.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_c070e20b", "line": 87, "range": {"start_line": 87, "start_character": 30, "end_line": 87, "end_character": 39}, "updated": "2019-08-07 12:45:21.000000000", "message": "dedicated should be invalid", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_807bcaf2", "line": 87, "range": {"start_line": 87, "start_character": 66, "end_line": 87, "end_character": 74}, "updated": "2019-08-07 12:45:21.000000000", "message": "shared shoudl be mixed", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "112c1129e3628f93248602e5e843d57d43f61359", "unresolved": false, "patch_set": 11, "id": "7faddb67_9c01f207", "line": 87, "range": {"start_line": 87, "start_character": 30, "end_line": 87, "end_character": 39}, "in_reply_to": "7faddb67_7049bd8c", "updated": "2019-08-07 17:25:52.000000000", "message": "yes the current code is give preference to the flavour  so this is correct", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_107169df", "line": 87, "range": {"start_line": 87, "start_character": 66, "end_line": 87, "end_character": 74}, "in_reply_to": "7faddb67_807bcaf2", "updated": "2019-08-07 16:36:24.000000000", "message": "Agree.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_7049bd8c", "line": 87, "range": {"start_line": 87, "start_character": 30, "end_line": 87, "end_character": 39}, "in_reply_to": "7faddb67_c070e20b", "updated": "2019-08-07 16:36:24.000000000", "message": "If we copying the existing rule that if 'hw:cpu_policy=dedicated' and 'hw_cpu_policy=shared' and the cpu policy is 'dedicated', then here should be 'dedicated'.\n\nAs discussed, we need to throw a warning for any conflicts.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_80642a4b", "line": 89, "range": {"start_line": 89, "start_character": 30, "end_line": 89, "end_character": 39}, "updated": "2019-08-07 12:45:21.000000000", "message": "dedicated should be invalid", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_405e3277", "line": 89, "range": {"start_line": 89, "start_character": 42, "end_line": 89, "end_character": 47}, "updated": "2019-08-07 12:45:21.000000000", "message": "mixed should be invalid", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_46ec078f", "line": 89, "range": {"start_line": 89, "start_character": 42, "end_line": 89, "end_character": 47}, "in_reply_to": "7faddb67_405e3277", "updated": "2019-08-07 16:36:24.000000000", "message": "'dedicated' is the current rule.\n\nhttps://github.com/openstack/nova/blob/master/nova/virt/hardware.py#L1327-L1338", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_a6fa9b40", "line": 89, "range": {"start_line": 89, "start_character": 30, "end_line": 89, "end_character": 39}, "in_reply_to": "7faddb67_80642a4b", "updated": "2019-08-07 16:36:24.000000000", "message": "Following the current 'flavor first' behavior, 'mixed' is the choice.\n\nAgain, we need to throw a warning.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "112c1129e3628f93248602e5e843d57d43f61359", "unresolved": false, "patch_set": 11, "id": "7faddb67_5c24daaf", "line": 89, "range": {"start_line": 89, "start_character": 30, "end_line": 89, "end_character": 39}, "in_reply_to": "7faddb67_a6fa9b40", "updated": "2019-08-07 17:25:52.000000000", "message": "yes after looking at the code only the rightmost colum was wrong\n\nif the flavor is undefined we use the image values if defined\n\ni agree with your responces.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_80650a20", "line": 101, "range": {"start_line": 100, "start_character": 0, "end_line": 101, "end_character": 47}, "updated": "2019-08-07 12:45:21.000000000", "message": "i think this should raise an error\nthis is highly uninititive and i think we will have may bug related to this if we just ignore the value.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_804e6a94", "line": 105, "range": {"start_line": 102, "start_character": 1, "end_line": 105, "end_character": 25}, "updated": "2019-08-07 12:45:21.000000000", "message": "+1", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_466f27fc", "line": 105, "range": {"start_line": 102, "start_character": 1, "end_line": 105, "end_character": 25}, "in_reply_to": "7faddb67_2db52e7f", "updated": "2019-08-07 16:36:24.000000000", "message": "About the 'dedicated' cpu mask, we still have an unsolved review from V7. I'll ask the opinion. Then I'll address the comments about cpu masks.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5e90e2274bde6b3a75cac81dc17de1d933149695", "unresolved": false, "patch_set": 11, "id": "7faddb67_2db52e7f", "line": 105, "range": {"start_line": 102, "start_character": 1, "end_line": 105, "end_character": 25}, "in_reply_to": "7faddb67_804e6a94", "updated": "2019-08-07 14:06:48.000000000", "message": "we should say if the result after combine hw_cpu_policy and hw:cpu_polcy is mixed, There must be a hw_cpu_dedicated_mask or hw:cpu_dedicated_mask", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5e90e2274bde6b3a75cac81dc17de1d933149695", "unresolved": false, "patch_set": 11, "id": "7faddb67_ad4cbec8", "line": 106, "updated": "2019-08-07 14:06:48.000000000", "message": "And cpu_policy is mixed, both hw:cpu_dedicated_mask and hw_cpu_dedicated_mask are specified, the hw_cpu_dedicated_mask is valid one. This matches the current realtime mask logic.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "b607dca019752e26ddd53a415b2309fa5d525b49", "unresolved": false, "patch_set": 11, "id": "7faddb67_a056062a", "line": 115, "range": {"start_line": 113, "start_character": 0, "end_line": 115, "end_character": 31}, "updated": "2019-08-07 12:45:21.000000000", "message": "this is implied by using cpu pinning but its good to restate that we are not chaning existing behavior.", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "6ac27ef1b7ad38f2155dd348e1548366c5e5183c", "unresolved": false, "patch_set": 11, "id": "7faddb67_c6a55749", "line": 115, "range": {"start_line": 113, "start_character": 0, "end_line": 115, "end_character": 31}, "in_reply_to": "7faddb67_a056062a", "updated": "2019-08-07 16:36:24.000000000", "message": "How about restating in a note section and telling 'due to cpu pinning ...'", "commit_id": "57b179687a43d5b4cb0b4844140bf88aa09a75f2"}], "specs/ussuri/approved/use-pcpu-vcpu-in-one-instance.rst": [{"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "98f079644693a0d2b57f82d3487738cfb8f77928", "unresolved": false, "patch_set": 12, "id": "3fa7e38b_858b20be", "line": 74, "range": {"start_line": 74, "start_character": 42, "end_line": 74, "end_character": 49}, "updated": "2019-10-14 11:31:37.000000000", "message": "@sean I know we had discussed the matrix in table 11 and achieved agreement at that time. But after I re-examined the table again. Now I still think the final policy is 'invalid' when 'hw_cpu_policy=dedicated' and 'hw:cpu_policy=mixed\". \n\nIn set 11, we have agreed that it could be 'mixed'. I don't think so now by considering the fact that the requirement of ``dedicated`` is more strict than the requirement of ``shared`` by occupying the host CPU exclusively. The setting from image property 'hw_cpu_policy' requires a strict policy, while the flavor property 'hw:cpu_policy' expresses a looser requirement. The requirements from two sides conflict with each other. \n\nI feel that 'invalid' may be a satisfying result if 'hw_cpu_policy=dedicated' and 'hw:cpu_policy=mixed\". Anyway if you think the result of 'mixed' here also makes sense, I would like to change back to 'mixed'.", "commit_id": "21ce64f0033ff1a48380122a14b25ef3a01248c9"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "98f079644693a0d2b57f82d3487738cfb8f77928", "unresolved": false, "patch_set": 12, "id": "3fa7e38b_254eec96", "line": 80, "range": {"start_line": 80, "start_character": 66, "end_line": 80, "end_character": 70}, "updated": "2019-10-14 11:31:37.000000000", "message": "@sean, we also have an agreement to set this case to 'shared' when both 'hw:cpu_policy' and ''hw_cpu_policy' are not specified explicitly.\n\nBut I think it should be 'none', a cpu policy value of 'none' is meanful after 'CPU resource' spec is accepted. \n\ncode: https://opendev.org/openstack/nova/src/branch/master/nova/virt/hardware.py#L1810-L1816\n\nAn effectively cpu_policy=dedicated if instance only requests PCPU resource at the case of no policy specified in both 'hw_cpu_policy' and 'hw:cpu_policy'.", "commit_id": "21ce64f0033ff1a48380122a14b25ef3a01248c9"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_49123a63", "line": 38, "range": {"start_line": 31, "start_character": 0, "end_line": 38, "end_character": 68}, "updated": "2019-12-09 17:22:39.000000000", "message": "i understand why you used ovs as it has a clean split betwen the data plane workload and the contolplane but jsut to make it clear of other you are refering to running ovs in a vm as a vnf or a proxy for a vnf workload that has a similar contol plane data plane split.\n\nyou are not referring to running multiple copies of ovs on the host.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_1aa3f0b2", "line": 38, "range": {"start_line": 31, "start_character": 0, "end_line": 38, "end_character": 68}, "in_reply_to": "3fa7e38b_49123a63", "updated": "2019-12-12 07:56:52.000000000", "message": "You absolutely caught my idea. It is about mixing control plane with data plane.\n\nAnd what I want to state that a lot of workloads, which contains multiple threads, due to performance requirement require partial threads to be high performance and don't care about the performance of other threads too much. OVS, or OVS-DPDK, is just an example of this case that everybody knows well: polling mode driver(PMD) thread is required to be pinned on a dedicated host, and other ovs component could be scheduled on general host CPUs.\n\nI'll refine this use case in wording.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_6425dbad", "line": 44, "updated": "2019-12-09 17:22:39.000000000", "message": "a third usecase which might be more compleing is realtime guests.\n\nin a realtime vm today we can alaredy partion which core will run with realtime priortiy using a mask. in most realtime vnf\noften 1 to 2 core are dedicated to manamanent/operationg system use while the application uses the rest.\nin such a case the management cores are typically excluded from the realtime set but with this feature the management cores could be assignedn to shared vcpus and the realtime core can be pinned. \n\nthat would allow greater density of deployments as the management cores will nolonger consume a full host hardware thread/logical core.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_c026caba", "line": 44, "in_reply_to": "3fa7e38b_6425dbad", "updated": "2019-12-12 07:56:52.000000000", "message": "I probably not catch your idea.\n\nWhat you mentioned 'management/operating system core' refers to the cores for vm emulator/io threads, do I understand you correctly?\n\nIf so, a vm is realtime means the vm cpu policy is 'dedicated', and how do vm management/os threads run on host cores is determined by emulator thread policy. If emulator thread policy is shared, and we have revered some host cores as VCPU resources through setting 'conf.compute.cpu_shared_set', then the management cores are assigned to shared vcpus. This feature *is now supported*  after 'cpu resources' spec is implemented.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_9e97ad47", "line": 44, "in_reply_to": "3fa7e38b_c026caba", "updated": "2020-01-28 10:14:28.000000000", "message": "I think I understand now. The 'management/operating system core' is not the emulator thread, it refers to NFV OS.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_246923bf", "line": 57, "range": {"start_line": 57, "start_character": 47, "end_line": 57, "end_character": 55}, "updated": "2019-12-09 17:22:39.000000000", "message": "host CPU whitelisted by the [compute]/cpu_dedicated_set, ...", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e04e666c", "line": 57, "range": {"start_line": 57, "start_character": 47, "end_line": 57, "end_character": 55}, "in_reply_to": "3fa7e38b_246923bf", "updated": "2019-12-12 07:56:52.000000000", "message": "Done", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_046427e4", "line": 58, "range": {"start_line": 58, "start_character": 18, "end_line": 58, "end_character": 62}, "updated": "2019-12-09 17:22:39.000000000", "message": "will be soft pinned to float over the cores defined by the [compute]/cpu_shared_set.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_603a76c4", "line": 58, "range": {"start_line": 58, "start_character": 18, "end_line": 58, "end_character": 62}, "in_reply_to": "3fa7e38b_046427e4", "updated": "2019-12-12 07:56:52.000000000", "message": "Done", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_04a987db", "line": 59, "range": {"start_line": 58, "start_character": 63, "end_line": 59, "end_character": 43}, "updated": "2019-12-09 17:22:39.000000000", "message": "delete the rest of the sentence the allocation ratio is not relevent here.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_0045c243", "line": 59, "range": {"start_line": 58, "start_character": 63, "end_line": 59, "end_character": 43}, "in_reply_to": "3fa7e38b_04a987db", "updated": "2019-12-12 07:56:52.000000000", "message": "Done", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5df84d7cf023125f2d7ab910f6f833eff7a7044f", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_c7d3675e", "line": 76, "range": {"start_line": 76, "start_character": 66, "end_line": 76, "end_character": 72}, "updated": "2020-01-07 08:06:11.000000000", "message": "I think this depends on whether the hw:pinvcpu defined.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "70a6056a094b699538064a83694fbadb2ef0d9c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a33df129", "line": 76, "range": {"start_line": 76, "start_character": 66, "end_line": 76, "end_character": 72}, "in_reply_to": "3fa7e38b_0378857b", "updated": "2020-01-08 00:06:41.000000000", "message": "Got your idea.\n\nThen we should mention in the paragraph following the table that 'hw:cpu_policy=mixed' or 'hw_cpu_policy=mixed' should be used with a definition of 'hw:pinvcpus' or 'hw_pinvcpus'.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "252fc6d67a90aa525d9f3b73e21fb3355827648e", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_0378857b", "line": 76, "range": {"start_line": 76, "start_character": 66, "end_line": 76, "end_character": 72}, "in_reply_to": "3fa7e38b_7ccfa153", "updated": "2020-01-07 23:11:13.000000000", "message": "if we only have hw:cpu_policy=mixed, but without resources:PCPU and hw:pinvcpu, then we don't know how many and which vcpu is dedicated.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "2f5fba8bfdcaf880601b518713052d04f43a7473", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_7ccfa153", "line": 76, "range": {"start_line": 76, "start_character": 66, "end_line": 76, "end_character": 72}, "in_reply_to": "3fa7e38b_c7d3675e", "updated": "2020-01-07 15:15:08.000000000", "message": "Hi Alex,\n\nIn the current proposal, we have two ways to create the 'mixed' instance, one is through `hw:cpu_policy='mixed' flavor and hw:pinvcpu flavor, another way is through 'resources:PCPU=xx' alone with 'resources:VCPU=xx'. There is no explicit definition of 'hw:pinvcpu' in later way.\n\nSo, the 'mixed' policy is not depending on 'hw:pinvcpu'.\n\nsean-k-mooney thought we shouldn't support the second way for creating the 'mixed' instance. I am inclined to agree with him. But need more review for this.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_44f1bfff", "line": 80, "range": {"start_line": 80, "start_character": 66, "end_line": 80, "end_character": 71}, "updated": "2019-12-09 17:22:39.000000000", "message": "nit: \"none\" is fine but i would prefer \"undefined\"", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "2f5fba8bfdcaf880601b518713052d04f43a7473", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_1cc54d0a", "line": 80, "range": {"start_line": 80, "start_character": 66, "end_line": 80, "end_character": 71}, "in_reply_to": "3fa7e38b_27d91b83", "updated": "2020-01-07 15:15:08.000000000", "message": "hi Alex,\n\nFrom the logic in https://opendev.org/openstack/nova/src/branch/master/nova/virt/hardware.py#L1832-L1866, if cpu policy is not explicitly defined in flavor or image, the actual instance CPU seems to be determined by `resources:PCPU` and `resources:VCPU`. It is possible to be 'dedicated' if `resources:PCPU` is provided and `resources:VCPU` is not provided in the flavor extra spec list.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5df84d7cf023125f2d7ab910f6f833eff7a7044f", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_27d91b83", "line": 80, "range": {"start_line": 80, "start_character": 66, "end_line": 80, "end_character": 71}, "in_reply_to": "3fa7e38b_40adfae7", "updated": "2020-01-07 08:06:11.000000000", "message": "whatever, the actual behavior is 'shared'", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_40adfae7", "line": 80, "range": {"start_line": 80, "start_character": 66, "end_line": 80, "end_character": 71}, "in_reply_to": "3fa7e38b_44f1bfff", "updated": "2019-12-12 07:56:52.000000000", "message": "I can change from 'none' to 'undefined' in wording here. \n\nBut the result of 'get_cpu_policy_constraint' should be 'None' if this function hasn't found 'hw:cpu_policy' and 'hw_cpu_policy' in flavor and image metadata. Is this ok?", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_c4b5af1a", "line": 101, "range": {"start_line": 94, "start_character": 0, "end_line": 101, "end_character": 6}, "updated": "2019-12-09 17:22:39.000000000", "message": "so what you are trying to express here is there wont be a change to the object itself just how an exisitng field is used.\n\ninstead of all cpus having a pinning in the list only the pinned cpus will be listed in the mixed case.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_8078d27d", "line": 101, "range": {"start_line": 94, "start_character": 0, "end_line": 101, "end_character": 6}, "in_reply_to": "3fa7e38b_c4b5af1a", "updated": "2019-12-12 07:56:52.000000000", "message": "Yes.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e4478b1d", "line": 107, "range": {"start_line": 106, "start_character": 0, "end_line": 107, "end_character": 50}, "updated": "2019-12-09 17:22:39.000000000", "message": "+1\n\nyep i think this is honestly the primary motivator for this feature. the other use case that are listed are valid but i don't think they as important as this use case.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_6091169a", "line": 107, "range": {"start_line": 106, "start_character": 0, "end_line": 107, "end_character": 50}, "in_reply_to": "3fa7e38b_e4478b1d", "updated": "2019-12-12 07:56:52.000000000", "message": "But I still not understand the use case you mentioned in above paragraph, see my reply there.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_cdbb9372", "line": 131, "range": {"start_line": 131, "start_character": 11, "end_line": 131, "end_character": 19}, "updated": "2019-12-09 17:22:39.000000000", "message": "pinvcpu is kind of confusing\n\nif this is a count i would spell it out\n\nhw:pinned_cpu_count.\n\nthat said i still kind of think a mask is better\n\nhw:pinned_cpu_mask=0x2 to pin core 1 but not core 0\nthat siad see my suggestion below\ni dont think having hw:pinvcpus=<vCPU amount> is a good\nway to express it", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "c2318c64628050e05209d8e47a87a9770e275873", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_34a60e56", "line": 131, "range": {"start_line": 131, "start_character": 11, "end_line": 131, "end_character": 19}, "in_reply_to": "3fa7e38b_2e16c1f3", "updated": "2019-12-11 12:26:05.000000000", "message": "i dont think it is worth the extra code complexity but more over i think pinvcpus is problematic.\n\nfrom a placement point of view we use the VCPU resouce class for shared cpus form Train on and PCPU resouce class for pinned cpus.\n\npinvcpu is therefore confusing in that context as you are combining vcpu(shared/flaoting) with pin.\n\nnow i know your intent was to have vcpu refer to the guest virtual cpus and its usage in the flavor.vcpu but since i could not get people to change the placement resouce class to SCPU for shared cpus i think the battel to keeping vcpu to mean virtual CPUs and tied to flaovr.vcpus has been lost.\n\ni dont think this feature(mixed cpus) will be  used by anyone that does not care about which CPUs are pinned. i could be wrong but i think it that is very unlikely.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_800e923a", "line": 131, "range": {"start_line": 131, "start_character": 11, "end_line": 131, "end_character": 19}, "in_reply_to": "3fa7e38b_34a60e56", "updated": "2019-12-12 07:56:52.000000000", "message": "@sean\nyou know about my thought over why I name it as 'hw:pinvcpus', just leveaging 'flavor.vcpus'. \nAnd I also accept your thinking about why 'pinvcpus' is not a good idea.\n\n@sean and @Luyao,\nWe have proposed the way to express pinned CPUs in way of vCPU mask, please refer to the 'alternative' section for more information.\nI remember at that time we thought just evenly distribute dedicated vCPUs among NUMA nodes is good enough. Now with the suggestion of Sean's new 'hw:numa_pinned_cpus' property, we might need to review the option again. \n\nWelcome more reviews about this, specifying the count of 'dedicated' CPUs or the bitmask for which vCPUs are 'dedicated' ones.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5df84d7cf023125f2d7ab910f6f833eff7a7044f", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_873ecf87", "line": 131, "range": {"start_line": 131, "start_character": 11, "end_line": 131, "end_character": 19}, "in_reply_to": "3fa7e38b_800e923a", "updated": "2020-01-07 08:06:11.000000000", "message": "I'm ok with providing both the count of 'dedicated' CPU and the bitmask. Just like the numa extra spec, we can only specific the number of numa node, you also can specific how many cpu in each numa node. And I don't think that will add too much code for implementation, just some validation and checking in the API layer.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "fe83ddb0aec4e17b0683a95e7115a56894efbf08", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_2e16c1f3", "line": 131, "range": {"start_line": 131, "start_character": 11, "end_line": 131, "end_character": 19}, "in_reply_to": "3fa7e38b_cdbb9372", "updated": "2019-12-11 09:49:51.000000000", "message": "@sean mooney, I think it provides an easy way to config, maybe user don't care about the extremly accurate pinned cpus distribution.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5df84d7cf023125f2d7ab910f6f833eff7a7044f", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_27703b73", "line": 137, "range": {"start_line": 134, "start_character": 38, "end_line": 137, "end_character": 9}, "updated": "2020-01-07 08:06:11.000000000", "message": "I feel we have similar discussion before. My prefer is just having 'hw:pinvcpus'. When it is equal to flavor.vcpus, it means the dedicated., When it is equal to 0, it means the shared.\n\nthe relationship between hw:cpu_policy and hw:pinvcpus is just same as hw:numa_nodes and hw:numa_vcpu.[node]. \n\nBut i'm ok with this, since we already nail down to have a 'mixed' policy. I just thought it needn't to be introduce more complex rule in our extra spec.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "2f5fba8bfdcaf880601b518713052d04f43a7473", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_3f291b88", "line": 137, "range": {"start_line": 134, "start_character": 38, "end_line": 137, "end_character": 9}, "in_reply_to": "3fa7e38b_27703b73", "updated": "2020-01-07 15:15:08.000000000", "message": "I recalled the memory about that discussion. Both proposals have pros and cons. \n\nFor the proposal of extending the 'dedicated' policy with an extra 'hw:pinvcpus' extra spec, the advantage is fewer instance CPU policies, and the disadvantage is confusing user of creating a 'dedicated' instance with only partial instance CPUs pinned on host CPUs.\n\nFor the proposal of adding a new 'mixed' policy and specifying the dedicated CPU number in 'hw:pinvcpus', the disadvantage is a more complex table for solving the final policy, but the advantage is clearly telling user 'mixed' instance is for instance with dedicated cpu and shared cpu, and all cpus 'dedicated' instance are dedicated cpus.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_2dfee705", "line": 146, "range": {"start_line": 146, "start_character": 9, "end_line": 146, "end_character": 21}, "updated": "2019-12-09 17:22:39.000000000", "message": "so if we were too have a top level valable for this as i said above i think a mask is better but i also think it hosuld have numa in the name since all mixed vms will have an implcit numa toplogy.\n\nso i was suggesting hw:pinned_cpu_count but i woudl really\nprefer somthing like hw:numa_pinned_cpus=2.\n\nso i would express  this as\n\nflavor:\n      vcpus:8\n      memory_mb=512\n      extra_specs:\n        hw:cpu_policy=mixed\n        hw:numa_pinned_cpus=2\n        hw:numa_nodes=2\n\nhowever as i said above im not sure a count based approch is correct and instead think a mask/list based approch would be better so i would prefer \n\nflavor:\n      vcpus:8\n      memory_mb=512\n      extra_specs:\n        hw:cpu_policy=mixed\n        hw:numa_pinned_cpus=0,4\n        hw:numa_nodes=2", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e04d0699", "line": 146, "range": {"start_line": 146, "start_character": 9, "end_line": 146, "end_character": 21}, "in_reply_to": "3fa7e38b_2dfee705", "updated": "2019-12-12 07:56:52.000000000", "message": "you are right that in my proposal mixed instance must contain a numa topology. so 'hw_numa_pinned_cpus' is fine with me.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_303f1a23", "line": 174, "range": {"start_line": 174, "start_character": 0, "end_line": 174, "end_character": 63}, "updated": "2019-12-09 17:22:39.000000000", "message": "i have notes below but im not a fan of how this section works at all.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_c061ea12", "line": 174, "range": {"start_line": 174, "start_character": 0, "end_line": 174, "end_character": 63}, "in_reply_to": "3fa7e38b_303f1a23", "updated": "2019-12-12 07:56:52.000000000", "message": "I tend to agree with your proposal.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_0da52b48", "line": 188, "range": {"start_line": 188, "start_character": 5, "end_line": 188, "end_character": 21}, "updated": "2019-12-09 17:22:39.000000000", "message": "i would remove this entirely.\nyou should not have to spcify it twice.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 23598, "name": "Zhong Luyao", "email": "luyao.zhong@intel.com", "username": "ZhongLuyao"}, "change_message_id": "fe83ddb0aec4e17b0683a95e7115a56894efbf08", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_eed18930", "line": 188, "range": {"start_line": 188, "start_character": 5, "end_line": 188, "end_character": 21}, "in_reply_to": "3fa7e38b_0da52b48", "updated": "2019-12-11 09:49:51.000000000", "message": "agree", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_e00666cd", "line": 188, "range": {"start_line": 188, "start_character": 5, "end_line": 188, "end_character": 21}, "in_reply_to": "3fa7e38b_eed18930", "updated": "2019-12-12 07:56:52.000000000", "message": "this is not necessary if we already specified the pinned CPU for each NUMA node.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_d08c862f", "line": 195, "range": {"start_line": 194, "start_character": 8, "end_line": 195, "end_character": 29}, "updated": "2019-12-09 17:22:39.000000000", "message": "if we used the other name this would become\n\nhw:numa_pinned_cpus.0=1\nhw:numa_pinned_cpus.1=3,4\n\nbut here this is a list/mask not a count.\n\nin this example \nhw:numa_cpus.0=0-2\nhw:numa_cpus.1=3-7\ncontrol the numa affintiy fo the cpus\n\nso hw:numa_pincpus.N syntax is not really needed.\nyou just need to to know if the core should be pinned or not and you can manage the numa affinity via hw:numa_cpus value\n\nso i would express the same constratis as follows\n\n\nflavor:\n      vcpus:9\n      memory_mb=512\n      extra_specs:\n        hw:cpu_policy=mixed\n        hw:numa_nodes=2\n        hw:numa_pinned_cpus=1,3-4\n        hw:numa_cpus.0=0-2\n        hw:numa_cpus.1=3-7\n        hw:numa_mems.0=257\n        hw:numa_mems.1=256", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5df84d7cf023125f2d7ab910f6f833eff7a7044f", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_271efb0c", "line": 195, "range": {"start_line": 194, "start_character": 8, "end_line": 195, "end_character": 29}, "in_reply_to": "3fa7e38b_20a1de3a", "updated": "2020-01-07 08:06:11.000000000", "message": "Agree with Sean, we needn't hw:numa_pinned_cpus.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_20a1de3a", "line": 195, "range": {"start_line": 194, "start_character": 8, "end_line": 195, "end_character": 29}, "in_reply_to": "3fa7e38b_d08c862f", "updated": "2019-12-12 07:56:52.000000000", "message": "It is a nicer expression for multi-numa case.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_902e0ef7", "line": 203, "range": {"start_line": 202, "start_character": 53, "end_line": 203, "end_character": 27}, "updated": "2019-12-09 17:22:39.000000000", "message": "so i think that is a really bad user experience.\nit woudl be easy for the two to be out of sync which complicate things alot", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_00c4e25e", "line": 203, "range": {"start_line": 202, "start_character": 53, "end_line": 203, "end_character": 27}, "in_reply_to": "3fa7e38b_902e0ef7", "updated": "2019-12-12 07:56:52.000000000", "message": "Even making 'hw:pinvcpus' as an optional one, user might set it alone with 'hw:numa_pincps.X' at the same time, and code has to process this case and solves conflicts. \n\nWhile the 'hw:numa_pinned_cpus' will not bring this kind of trouble.\n\n'hw:numa_pinned_cpus' is a better choice for simplifying code logic for multi-numa case.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_30187acb", "line": 253, "range": {"start_line": 215, "start_character": 0, "end_line": 253, "end_character": 65}, "updated": "2019-12-09 17:22:39.000000000", "message": "i dont actully think we should support this.\n\nit will cause issues if we ever model numa in placement.\ni would move this to the alternitive section.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a37b9877", "line": 253, "range": {"start_line": 215, "start_character": 0, "end_line": 253, "end_character": 65}, "in_reply_to": "3fa7e38b_30187acb", "updated": "2019-12-12 07:56:52.000000000", "message": "If possible, can you explain why it will break the work for modeling NUMA in placement? This section became a way to create 'mixed' instance and listed here after we though it is only necessary to provide information of dedicated CPU count.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_f07bc2f0", "line": 258, "range": {"start_line": 258, "start_character": 67, "end_line": 258, "end_character": 73}, "updated": "2019-12-09 17:22:39.000000000", "message": "i think you mean dedicated", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_20f8febe", "line": 258, "range": {"start_line": 258, "start_character": 67, "end_line": 258, "end_character": 73}, "in_reply_to": "3fa7e38b_f07bc2f0", "updated": "2019-12-12 07:56:52.000000000", "message": "Yes, it is.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_50d896ee", "line": 281, "range": {"start_line": 280, "start_character": 0, "end_line": 281, "end_character": 55}, "updated": "2019-12-09 17:22:39.000000000", "message": "no we reject this only i you use hw:cpu_policy=dedicated.\n\ni think this is correct if we use hw:cpu_policy=mixed.\nwe might want to change the name to hw:numa_pinned_cpus\nto avoid the assocation with the dedicated policy but i think this is still the correct approch", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_c08d6a2a", "line": 281, "range": {"start_line": 280, "start_character": 0, "end_line": 281, "end_character": 55}, "in_reply_to": "3fa7e38b_50d896ee", "updated": "2019-12-12 07:56:52.000000000", "message": "Yes.\nIt was rejected because it changed the behavior of instance in the 'dedicated' policy that users are knowing well.\n\nWe want to name the instance of this case with another policy.\n\nWill refine it.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "1284738a63e6123e04efc397d98a0ae0686b31c7", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_30f4fa54", "line": 303, "range": {"start_line": 302, "start_character": 0, "end_line": 303, "end_character": 62}, "updated": "2019-12-09 17:22:39.000000000", "message": "i think this is an incorrect interoperation.\n\nthe proposal in bothe these alternatives was for \nhw:cpu_dedicated_mask to refer to the logical gust cpus.\nthe virt driver would still be free to manage the mapping to the host cpus.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "5d82c380b10d3270e4ed570beccf6ceb4fe24b7a", "unresolved": false, "patch_set": 14, "id": "3fa7e38b_a0fdce6d", "line": 303, "range": {"start_line": 302, "start_character": 0, "end_line": 303, "end_character": 62}, "in_reply_to": "3fa7e38b_30f4fa54", "updated": "2019-12-12 07:56:52.000000000", "message": "About the reason for why this alternative is dropped is discussed serval times in IRC and here\n(https://review.opendev.org/#/c/668656/7/specs/train/approved/use-pcpu-vcpu-in-one-instance.rst@131).\n\nSeems we need to reach some consistency with involved reviewers.\n\nI'll try to raise discussion in IRC.", "commit_id": "6050c2770c4b59dcf78612580b20e51ffbd36b81"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_6806f087", "line": 58, "range": {"start_line": 58, "start_character": 53, "end_line": 58, "end_character": 65}, "updated": "2020-01-27 12:14:01.000000000", "message": "style nit: this isn't a symbol or literal, so *italics* would look better", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_444191a6", "line": 58, "range": {"start_line": 58, "start_character": 53, "end_line": 58, "end_character": 65}, "in_reply_to": "3fa7e38b_6806f087", "updated": "2020-01-28 10:14:28.000000000", "message": "Done", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "2f257d87ff7f06c81b572ac5a9fd2548f2ab6130", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_78d1305a", "line": 78, "range": {"start_line": 78, "start_character": 66, "end_line": 78, "end_character": 72}, "updated": "2020-02-07 10:00:52.000000000", "message": "For the last 'shared'.\n\nIf there is no explicit instance CPU policy specified in flavor or image\nthe property, the flavor matrix result would be 'undefined', and the final\ninstance policy is further determined and resolved by ``resources:PCPU``\nand ``resources:VCPU`` specified in flavor extra specs. Refer to section\n``Creating CPU mixed instance with PCPU/VCPU bitmask information`` and\nthe spec `CPU resource tracking`_.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c8f60491", "line": 78, "range": {"start_line": 78, "start_character": 42, "end_line": 78, "end_character": 47}, "updated": "2020-01-27 12:14:01.000000000", "message": "any reason this can't be a conflict? We allow some combinations of shared and dedicated at the moment, but that's a mistake that we have to live with for legacy reasons, IMO", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_0449598c", "line": 78, "range": {"start_line": 78, "start_character": 42, "end_line": 78, "end_character": 47}, "in_reply_to": "3fa7e38b_c8f60491", "updated": "2020-01-28 10:14:28.000000000", "message": "I am not aware of the legacy reason for why it is allowed a shared policy in image property and a dedicated policy in flavor. \n\nMy logic for choosing the final policy from flavor and image properties is the flavor is applying a more strict *single CPU* policy than image property, and for each CPU, I think the dedicated policy is more strict than shared. In this 'mixed' case that you mentioned, in image property it requires all CPUs to be allocated from the shared pool, which is a looser policy, follow this logic I think it is valid to change some CPU policy to dedicated after you checked the policy settings in flavor, thus, in this instance some CPUs use dedicated policy, the remaining CPUs use shared policy, it creates an instance in a 'mixed' instance CPU allocation policy. This is consistent with the case of setting 'shared' in image property and 'dedicated' in flavor, in which, the image property requires all CPU to be in 'shared' policy while the flavor hopes all CPUS to be in a more strict 'dedicated' policy.\n\nI can change this to 'conflict' if you think we should make it to be.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e836604f", "line": 100, "range": {"start_line": 100, "start_character": 25, "end_line": 100, "end_character": 28}, "updated": "2020-01-27 12:14:01.000000000", "message": "drop this", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_041159af", "line": 100, "range": {"start_line": 100, "start_character": 25, "end_line": 100, "end_character": 28}, "in_reply_to": "3fa7e38b_e836604f", "updated": "2020-01-28 10:14:28.000000000", "message": "Done", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_a83ce82c", "line": 102, "range": {"start_line": 102, "start_character": 39, "end_line": 102, "end_character": 54}, "updated": "2020-01-27 12:14:01.000000000", "message": "did not allow", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_244c959b", "line": 102, "range": {"start_line": 102, "start_character": 39, "end_line": 102, "end_character": 54}, "in_reply_to": "3fa7e38b_a83ce82c", "updated": "2020-01-28 10:14:28.000000000", "message": "Done", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_280a3877", "line": 111, "updated": "2020-01-27 12:14:01.000000000", "message": "Instead of this, perhaps you could give an example of creating such a flavor using the CLI, e.g.\n\n  openstack flavor set --property resources:VPU=N ...", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "a7730f4b5e3c30662f61d23aee27fb01a580027e", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e2457173", "line": 111, "in_reply_to": "3fa7e38b_1f9be2c7", "updated": "2020-02-07 08:08:03.000000000", "message": "Later. Since placement-ess style interface would not be mixed with legacy flavor statements, it is feasible to do so.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_1f9be2c7", "line": 111, "in_reply_to": "3fa7e38b_280a3877", "updated": "2020-01-28 10:14:28.000000000", "message": "If we don't need to set any image property in creating a mixed instance, and all settings are given in flavor, we can do as you suggested.\n\nWe are close to the approach that doesn't require user to set cpu_policy as 'mixed' in flavor or image property explicitly, and don't use 'mixed' policy in flavor or image property is the recommending way, I think we can do it as you suggested", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_082e5cf8", "line": 118, "range": {"start_line": 118, "start_character": 4, "end_line": 118, "end_character": 13}, "updated": "2020-01-27 12:14:01.000000000", "message": "*mixed* (here and elsewhere for reasons given previously)", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_df230a56", "line": 118, "range": {"start_line": 118, "start_character": 4, "end_line": 118, "end_character": 13}, "in_reply_to": "3fa7e38b_082e5cf8", "updated": "2020-01-28 10:14:28.000000000", "message": "Done", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_e81f40b5", "line": 137, "range": {"start_line": 122, "start_character": 0, "end_line": 137, "end_character": 43}, "updated": "2020-01-27 12:14:01.000000000", "message": "No, please don't do this. Users should either think in terms of the legacy extra specs or they should think in terms of placement. They should not be able to mix them because it creates a whole load of conflicts we need to reason about and filter on. This is what we're currently doing and I see no reason to change that.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_dfb1ca01", "line": 137, "range": {"start_line": 122, "start_character": 0, "end_line": 137, "end_character": 43}, "in_reply_to": "3fa7e38b_e81f40b5", "updated": "2020-01-28 10:14:28.000000000", "message": "This means we must specify the 'resource:VCPU' and 'resource:PCPU' at the same time for a 'mixed' instance and don't do any attempt to infer the CPUs from a given mixed CPU policy, flavor,vcpus and emulator thread policy.\n\nEric also buys in this comment in his review in rev14.\n\nI'll remove this part.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_a815c896", "line": 141, "range": {"start_line": 139, "start_character": 0, "end_line": 141, "end_character": 22}, "updated": "2020-01-27 12:14:01.000000000", "message": "Nope. If you want to explicitly request this stuff, you must explicitly request it all. Things just get weird otherwise.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_9fc7d265", "line": 141, "range": {"start_line": 139, "start_character": 0, "end_line": 141, "end_character": 22}, "in_reply_to": "3fa7e38b_a815c896", "updated": "2020-01-28 10:14:28.000000000", "message": "will remove this paragraph since we think it requires to set both PCPU resources and VCPU resources for a mixed instance at the same time.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c8692426", "line": 150, "updated": "2020-01-27 12:14:01.000000000", "message": "Again, this differs from how we're doing things at the moment and shouldn't be allowed. If the user wants to request a CPU policy using the legacy extra specs, they're not allowed to use 'resources:(V|P)CPU'. If they want to use 'resources:(V|P)CPU', they must use 'trait:HW_CPU_HYPERTHREADING'.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "a7730f4b5e3c30662f61d23aee27fb01a580027e", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_6282e1a8", "line": 150, "in_reply_to": "3fa7e38b_ba2dfcfc", "updated": "2020-02-07 08:08:03.000000000", "message": "Later, I got your point.\n\nNot allow or recommend mixing legacy flavor extra specs with the extra specs that are specific for placement.\n\nHW_CPU_HYPERTHREADING is a trait for placement using, so do not mix this with 'hw:cpu_policy'. and recommend to use 'hw:cpu_policy' with 'hw:cpu_thread_policy'.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_ba2dfcfc", "line": 150, "in_reply_to": "3fa7e38b_c8692426", "updated": "2020-01-28 10:14:28.000000000", "message": "Not get your point here. (I also find the two paragraphs above need to be refined.)\n\nWhat I want to express is, 'vcpus' is an item existed, and must be present, in the flavor represents the CPUs that guest can see, it will be allocated from (P|V)CPU resources. If instance emulator policy is ISOLATE, it also requires another PCPU resource, we need to ensure that the sum of PCPU and VCPU resources should be equal to the value of 'flavor.vcpus' plus the extra PCPU resource for the emulator. \n\nIn the reviews, we are close to the approach that specifying both VCPU and PCPU resources in 'resources:(P|V)CPU' flavor, but it seems we still required to create a new CPU allocation policy 'mixed' to identify the new instance that has both PCPU resource and VCPU resource which is different from 'dedicated' or 'shared' instance. The cpu_policy is persisted in the database in the InstanceNUMACell object. The cpu policy is exposed to user already and cannot be used internally, but we don't encourage user to specify the mixed policy in the way such as 'hw:cpu_policy=mixed' or 'hw_cpu_policy=mixed', this policy could be derived from the fact that user want both PCPU and VCPU resources from flavor. \n\nRegarding your comment \"if they want to use 'resources:(V|P)CPU', they must use 'trait:HW_CPU_HYPERTHREADING'\". But we still can create 'dedicated' instance by a flavor with 'resources:PCPU'=N and 'hw:cpu_thread_policy=required', right? \nIn this case there is no HW_CPU_HYPERTHREADING trait.\nWhat I understand is we recommend to use the all either placement/tait style or legacy flavor style to create an instance. But currently we haven't ensured this in the design.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_a86aa814", "line": 163, "updated": "2020-01-27 12:14:01.000000000", "message": "Can you expand on what this means? I assume you mean the cores in 'hw:cpu_realtime_mask' must be taken from the dedicated set?", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_5a15e893", "line": 163, "in_reply_to": "3fa7e38b_a86aa814", "updated": "2020-01-28 10:14:28.000000000", "message": "realtime cpu cores in 'hw:cpu_realtime_mask' should be chosen from the 'dedicated' CPU set in the instance. and the instance 'dedicated' CPU set is a subset of CPU specified in host's '[compute] cpu_dedicated_set' configuration.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_68c7d012", "line": 218, "range": {"start_line": 217, "start_character": 0, "end_line": 218, "end_character": 62}, "updated": "2020-01-27 12:14:01.000000000", "message": "Nonsense :) We already do this for real-time CPUs and to map instance CPUs to a NUMA node (required for asymmetric NUMA topologies, option otherwise). Without this, how do we determine what guest CPUs are allocated from the share pool and which are allocated from the dedicated one?", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "a7730f4b5e3c30662f61d23aee27fb01a580027e", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c23715fd", "line": 218, "range": {"start_line": 217, "start_character": 0, "end_line": 218, "end_character": 62}, "in_reply_to": "3fa7e38b_18cc4788", "updated": "2020-02-07 08:08:03.000000000", "message": "Discussed and reached the agreement to evolve this spec with this alternative approach on Feb. 6th team meeting.\n  #link http://eavesdrop.openstack.org/meetings/nova/2020/nova.2020-02-06-14.00.log.html", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9a221a13d0b49dfbfe2da6ec65b78d42bd8128d2", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_83ebfc0e", "line": 218, "range": {"start_line": 217, "start_character": 0, "end_line": 218, "end_character": 62}, "in_reply_to": "3fa7e38b_68c7d012", "updated": "2020-01-28 11:33:34.000000000", "message": "Another reason for his kind interface is abandoned is we prefer placement-ess style interface than legacy flavor style interface. see discussion in http://eavesdrop.openstack.org/meetings/nova/2020/nova.2020-01-09-14.00.log.html#l-69 and http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-01-09.log.html#t2020-01-09T15:02:28\n\nFor the layout of PCPU and VCPU resource in each instance NUMA cell, we'll first distribute the VCPU resource then the PCPU resource across the NUMA cells in a round-robin way. For example, for an instance with 4 NUMA nodes, 7 VCPUs and 4 PCPUs, the CPU distribution would be:\nNUMA cell0: CPU0-2 --> (VCPU, VCPU, PCPU)\nNUMA cell1: CPU3-5 --> (VCPU, VCPU, PCPU)\nNUMA cell2: CPU6-8 --> (VCPU, VCPU, PCPU)\nNUMA cell3: CPU9,10 --> (VCPU, PCPU)", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "7971534325acb75317685320095e66cee0b00127", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_18cc4788", "line": 218, "range": {"start_line": 217, "start_character": 0, "end_line": 218, "end_character": 62}, "in_reply_to": "3fa7e38b_83ebfc0e", "updated": "2020-01-29 08:37:37.000000000", "message": "Later ...\n\nThis is not a proper example, because for an instance with symmetric NUMA topology, flavor.vcpus should be divided by numa.nodes with no remainder. So the example should be adjusted as: an instance with 4 NUMA nodes, contains 7VCPUs and 5 VCPUs, the CPU distribution would be:\nNUMA Cell0 CPU0-2 --> (VCPU, VCPU, PCPU)\nNUMA Cell1 CPU1-5 --> (VCPU, VCPU, PCPU)\nNUMA Cell2 CPU2-8 --> (VCPU, VCPU, PCPU)\nNUMA Cell3 CPU3-11 --> (VCPU, PCPU, PCPU)\n\nFor asymmetric NUMA topology instance which is created through syntax such as 'hw:numa_cpus.N=ncpu', here is an example for this:\nnuma_nodes=4\nnuma0 ncpus=2\nnuma1 ncpus=3\nnuma2 ncpu=4\nnuma3 ncpus=3\nresources:PCPU=3, resources:VCPU=9\n\nThe PCPU and VCPU distriction would be:\nNUMA Cell0 CPU0,1 --> (VCPU,VCPU)\nNUMA Cell1 CPU2-4 --> (VCPU,VCPU,VCPU)\nNUMA Cell2 CPU5-8 --> (VCPU,VCPU,PCPU,PCPU)\nNUMA Cell3 CPU9-11 -> \uff08VCPU,VCPU,PCPU)\n\nThe layout of PCPU and VCPU, especially the asymmetric NUMA instance case, is not intuitive to the end-user.\nI don't know if it is acceptable to mark the 'mixed' policy as unavailable to instance with asymmetric NUMA topology.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_28cd582e", "line": 225, "updated": "2020-01-27 12:14:01.000000000", "message": "To be clear, you're saying this field will not contain CPUs that are deemed \"shared\", yes?", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_71aed82f", "line": 225, "in_reply_to": "3fa7e38b_28cd582e", "updated": "2020-01-28 10:14:28.000000000", "message": "Yes.\n\nwill refine.", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "01559c6402af252fbde08bb54432962a420d72ff", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_c8d7e4bf", "line": 236, "range": {"start_line": 236, "start_character": 37, "end_line": 236, "end_character": 46}, "updated": "2020-01-27 12:14:01.000000000", "message": "metadata (I think)\n\nLater: nope, 'meta_data' is what we use. Grr", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "0838dd1877032d77e6fbfe762f1dc52464c9536b", "unresolved": false, "patch_set": 17, "id": "3fa7e38b_fac37404", "line": 236, "range": {"start_line": 236, "start_character": 37, "end_line": 236, "end_character": 46}, "in_reply_to": "3fa7e38b_c8d7e4bf", "updated": "2020-01-28 10:14:28.000000000", "message": "Done", "commit_id": "6112cc3ff51b2450f2d5a5162e973db8ece04f14"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "717e6a11a86301dff915b00ba1baacc26df9ba50", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_4c2b45e9", "line": 121, "range": {"start_line": 121, "start_character": 23, "end_line": 121, "end_character": 39}, "updated": "2020-02-10 02:09:27.000000000", "message": "maybe just call it as 'pinned_cpus', I don't think we should have 'numa' prefix, since the pinned cpu isn't related to NUMA.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "d558f2621a16a0d4d3fbdb4286ca32b6cb5ecdd4", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_2cb9297b", "line": 121, "range": {"start_line": 121, "start_character": 23, "end_line": 121, "end_character": 39}, "in_reply_to": "3fa7e38b_4c2b45e9", "updated": "2020-02-10 03:07:21.000000000", "message": "It is good for me.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "717e6a11a86301dff915b00ba1baacc26df9ba50", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_2c0fe98b", "line": 178, "range": {"start_line": 176, "start_character": 8, "end_line": 178, "end_character": 19}, "updated": "2020-02-10 02:09:27.000000000", "message": "we also required the \"hw:numa_pinned_cpu\" in the extra specs.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "d558f2621a16a0d4d3fbdb4286ca32b6cb5ecdd4", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_acfe7936", "line": 178, "range": {"start_line": 176, "start_character": 8, "end_line": 178, "end_character": 19}, "in_reply_to": "3fa7e38b_2c0fe98b", "updated": "2020-02-10 03:07:21.000000000", "message": "with the 'hw(:|_)pinned_cpu' it will be much easier to express 'which vCPU is pinned on which host CPU'. I don't find an easy-to-understand policy, including spreading vCPUs on NUMA cells in a round-robin way, to arrange the vCPUs when there are multiple NUMA cells in instance.\n\nBut I don't know whether it will violate the rule for avoiding mixing placement-ess style flavor with legacy flavors.\n\nI tend to take your advice.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "717e6a11a86301dff915b00ba1baacc26df9ba50", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_ac22f900", "line": 189, "range": {"start_line": 185, "start_character": 0, "end_line": 189, "end_character": 46}, "updated": "2020-02-10 02:09:27.000000000", "message": "This sounds like part of \"Affect over emulator thread policy\", since it is rule also for using \"hw:\" extra specs.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "d558f2621a16a0d4d3fbdb4286ca32b6cb5ecdd4", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_8f3e0fb4", "line": 189, "range": {"start_line": 185, "start_character": 0, "end_line": 189, "end_character": 46}, "in_reply_to": "3fa7e38b_ac22f900", "updated": "2020-02-10 03:07:21.000000000", "message": "Yes. This part is duplicated with the section 'affect over emulator thread policy', will be removed.", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "717e6a11a86301dff915b00ba1baacc26df9ba50", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_2c74c903", "line": 269, "updated": "2020-02-10 02:09:27.000000000", "message": "and \"hw:pinned_cpus\"", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "d558f2621a16a0d4d3fbdb4286ca32b6cb5ecdd4", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_cca97525", "line": 269, "in_reply_to": "3fa7e38b_2c74c903", "updated": "2020-02-10 03:07:21.000000000", "message": "Done", "commit_id": "6886854260be2edf5991d7b254ef495bb6ca89f1"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_167e84e1", "line": 37, "range": {"start_line": 31, "start_character": 0, "end_line": 37, "end_character": 61}, "updated": "2020-02-12 15:29:53.000000000", "message": "yep this is a good usecase for this feature +1\n\nyou can substitue ovs in the above with your vnf of choice and it more or less holds true. realtime pinned cpus are needed for the dataplane processes and shared cores are suitable for the contolplane/management processes.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_1d4c553e", "line": 37, "range": {"start_line": 31, "start_character": 0, "end_line": 37, "end_character": 61}, "in_reply_to": "3fa7e38b_167e84e1", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_f6c88820", "line": 81, "range": {"start_line": 81, "start_character": 66, "end_line": 81, "end_character": 75}, "updated": "2020-02-12 15:29:53.000000000", "message": "nit: in practice if its not defiend in the image or flavor it will be shared.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "12e44e188457dbd2035f935051d89fd7d67eb40c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b8d3cc62", "line": 81, "range": {"start_line": 81, "start_character": 66, "end_line": 81, "end_character": 75}, "in_reply_to": "3fa7e38b_5565c1ae", "updated": "2020-02-13 12:42:57.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0ec4e589647baec293365baf2844dac4f9a0c7c3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_5565c1ae", "line": 81, "range": {"start_line": 81, "start_character": 66, "end_line": 81, "end_character": 75}, "in_reply_to": "3fa7e38b_71cc9861", "updated": "2020-02-13 11:58:45.000000000", "message": "it is shared unless you use ``resources:PCPU``\nand ``resources:VCPU``to define a policy implicitly.\nbut its fine as you have stated it i was assuming that those would not be used as i dont think operators should use them except for ironic.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_71cc9861", "line": 81, "range": {"start_line": 81, "start_character": 66, "end_line": 81, "end_character": 75}, "in_reply_to": "3fa7e38b_f6c88820", "updated": "2020-02-13 10:01:43.000000000", "message": "I don't think the final instance CPU allocation policy is 'shared' effectively in this case, which is explained in L91-L97.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b10e9a30", "line": 109, "range": {"start_line": 107, "start_character": 0, "end_line": 109, "end_character": 56}, "updated": "2020-02-12 15:29:53.000000000", "message": "i think its actully identical to what we do with dedicated instances. so ya this makes sense to me", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_f101686e", "line": 109, "range": {"start_line": 107, "start_character": 0, "end_line": 109, "end_character": 56}, "in_reply_to": "3fa7e38b_b10e9a30", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3124eab1", "line": 113, "range": {"start_line": 111, "start_character": 0, "end_line": 113, "end_character": 32}, "updated": "2020-02-12 15:29:53.000000000", "message": "and ya this is identical too so +1", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_11052479", "line": 113, "range": {"start_line": 111, "start_character": 0, "end_line": 113, "end_character": 32}, "in_reply_to": "3fa7e38b_3124eab1", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56cdf539900934e540620203b9fb9056592bab29", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_e67f77b9", "line": 122, "range": {"start_line": 121, "start_character": 37, "end_line": 122, "end_character": 19}, "updated": "2020-02-12 17:38:59.000000000", "message": "This doesn't make sense. You can only specify the number of CPUs (pinned or unpinned) via the flavor, so there's no point to set this value via the flavor when you don't know how many CPUs you're going to get. Can you drop this?", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0ec4e589647baec293365baf2844dac4f9a0c7c3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_f522ad52", "line": 122, "range": {"start_line": 121, "start_character": 37, "end_line": 122, "end_character": 19}, "in_reply_to": "3fa7e38b_d17d4ce5", "updated": "2020-02-13 11:58:45.000000000", "message": "i am kind of neutral on this. i am ok with leaving it but if stephen really want to not have it then im ok with that too.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_d17d4ce5", "line": 122, "range": {"start_line": 121, "start_character": 37, "end_line": 122, "end_character": 19}, "in_reply_to": "3fa7e38b_e67f77b9", "updated": "2020-02-13 10:01:43.000000000", "message": "I checked the current settings for realtime cpus and uneven numa node cpus, they all can be set through image properties. Specifically, 'hw_cpu_realtime_mask' for real-time cpus, and 'hw_numa_cpus.N' for the numa case. \n\nI think these two cases are just like the proposing 'hw_pinned_cpus', they all set some instance cpus as realtime or in some particular numa cell when the instance cpu number is unknown.\n\nBut after I read the discussion between you and Sean-k-mooney in IRC, link#http://eavesdrop.openstack.org/irclogs/%23openstack-nova/%23openstack-nova.2020-02-12.log.html, I decided to remove to this image property since you have all these considered.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2bd1274508ac7dd9695963a8a54cd6bcce47ae2c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_11bd2466", "line": 122, "range": {"start_line": 121, "start_character": 37, "end_line": 122, "end_character": 19}, "in_reply_to": "3fa7e38b_e67f77b9", "updated": "2020-02-13 02:54:04.000000000", "message": "good point...I'm thinking about this. I think it is allow the user snapshot the instance, and create image with their own perference. Also we have image meta for realtime_mask.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56cdf539900934e540620203b9fb9056592bab29", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_e6fa1742", "line": 126, "range": {"start_line": 126, "start_character": 0, "end_line": 126, "end_character": 1}, "updated": "2020-02-12 17:38:59.000000000", "message": "You need spaces after the '..', e.g.\n\n  .. code::\n\notherwise this renders as you've typed it here", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_71681821", "line": 126, "range": {"start_line": 126, "start_character": 0, "end_line": 126, "end_character": 1}, "in_reply_to": "3fa7e38b_e6fa1742", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56cdf539900934e540620203b9fb9056592bab29", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_46ba0b71", "line": 139, "range": {"start_line": 132, "start_character": 0, "end_line": 139, "end_character": 39}, "updated": "2020-02-12 17:38:59.000000000", "message": "Drop this, per above, or show a combination of image (for the policy) and flavor (for the actual pinned CPUs value)", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_31494a65", "line": 153, "range": {"start_line": 153, "start_character": 19, "end_line": 153, "end_character": 31}, "updated": "2020-02-12 15:29:53.000000000", "message": "nit: this is singular e.g. hw:numa_mem not hw:numa_mems", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b1f7708e", "line": 153, "range": {"start_line": 153, "start_character": 19, "end_line": 153, "end_character": 31}, "in_reply_to": "3fa7e38b_31494a65", "updated": "2020-02-13 10:01:43.000000000", "message": "done. thanks.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56cdf539900934e540620203b9fb9056592bab29", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_26410f63", "line": 188, "range": {"start_line": 188, "start_character": 0, "end_line": 188, "end_character": 68}, "updated": "2020-02-12 17:38:59.000000000", "message": "I don't like this. Again, this is an example of mixing old-style syntax with placement'y syntax. We shouldn't be doing that. Instead, can we automatically split the pinned cores between NUMA nodes and allocate the first cores in each node as unpinned and the remaining cores as unpinned?\n\nLater: looks like alex_xu already called this out. I think automatically doing this like I've suggested is okay so long as we document the behavior", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2bd1274508ac7dd9695963a8a54cd6bcce47ae2c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_d1678c22", "line": 188, "range": {"start_line": 188, "start_character": 0, "end_line": 188, "end_character": 68}, "in_reply_to": "3fa7e38b_26410f63", "updated": "2020-02-13 02:54:04.000000000", "message": "We can do a simple algo, like around-robin, and start from the beginning of the cpus. We don't need to be prefer algorithm at here, since we expect the user to use 'hw:pinned_cpus'", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "4e27a95f71f9db124f1846b947a41ad7049d6a2e", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_d6378cda", "line": 202, "range": {"start_line": 196, "start_character": 4, "end_line": 202, "end_character": 19}, "updated": "2020-02-12 14:31:08.000000000", "message": "If we want to use \"resources\", then we have to use \"extra spec\". Then we are into the case mix placement-ese and extra-specs. But looks like we have no choice.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_712018b2", "line": 202, "range": {"start_line": 196, "start_character": 4, "end_line": 202, "end_character": 19}, "in_reply_to": "3fa7e38b_51d16655", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_911b5482", "line": 202, "range": {"start_line": 196, "start_character": 4, "end_line": 202, "end_character": 19}, "in_reply_to": "3fa7e38b_d6378cda", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_51d16655", "line": 202, "range": {"start_line": 196, "start_character": 4, "end_line": 202, "end_character": 19}, "in_reply_to": "3fa7e38b_d6378cda", "updated": "2020-02-12 15:29:53.000000000", "message": "ya im more ok with that via the image but i dont see a way around it without blocking the placement syntax. i think we should jsut encurate not doing it this way.\nand just doing --property hw_cpu_policy=mixed \\        --property hw_pinned_cpus=2,7 \\\n\nat least for ussuri", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "56cdf539900934e540620203b9fb9056592bab29", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_a64c1f97", "line": 205, "range": {"start_line": 205, "start_character": 23, "end_line": 205, "end_character": 42}, "updated": "2020-02-12 17:38:59.000000000", "message": "must be greater than zero", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b43d1ee7", "line": 205, "range": {"start_line": 205, "start_character": 23, "end_line": 205, "end_character": 42}, "in_reply_to": "3fa7e38b_a64c1f97", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_315ceaee", "line": 259, "range": {"start_line": 259, "start_character": 10, "end_line": 259, "end_character": 14}, "updated": "2020-02-12 15:29:53.000000000", "message": "nit: to", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_51215cb1", "line": 259, "range": {"start_line": 259, "start_character": 10, "end_line": 259, "end_character": 14}, "in_reply_to": "3fa7e38b_315ceaee", "updated": "2020-02-13 10:01:43.000000000", "message": "Done", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "5a90713bed461d899f0e7991b0fde10d1ca23940", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3675c000", "line": 348, "updated": "2020-02-12 15:00:32.000000000", "message": "you need to bump service object version also. But that can be a follow-up patch to fix", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0ec4e589647baec293365baf2844dac4f9a0c7c3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b5c67568", "line": 348, "in_reply_to": "3fa7e38b_317860c0", "updated": "2020-02-13 11:58:45.000000000", "message": "it will be important to have that trait if you have mixed hypervisors. this will only be supported by libvirt so if you have libvirt and hyperv it will be used to ensure you land on the libvirt node so i think it makes sesne to have after upgrade too.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "60fbf9164761e6eec5ed7788021bd04d4b7e8a1c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_43fbdd13", "line": 348, "in_reply_to": "3fa7e38b_3675c000", "updated": "2020-02-12 15:58:35.000000000", "message": "im not strictly sure that is requried.\nyou need to extend the image metadata object field which would bump the object version and the notification objects will have to be extended as a result as will the numa toplogy object. but i think you just need to bump the object version for those not the service.\n\nif you were thinking of usign the service version as a proxy for suppot of mixed cpus a better way to do that is a comptue capablity trait like we do for multi attached volumes.\n\n------\noh later i see the service bump is called out on line 328 so we can ensure its only enabled when the entire cloud is upgraded.\n\nya if we use the comptue capablity trait i think we can skip that requirement and support this without the entire cloud been upgraded. when ever the shduler traslates the requiremetns it will just add required=COMPUTE_MIX_CPUS or whatever the trait woudl be.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "2bd1274508ac7dd9695963a8a54cd6bcce47ae2c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_317860c0", "line": 348, "in_reply_to": "3fa7e38b_43fbdd13", "updated": "2020-02-13 02:54:04.000000000", "message": "> im not strictly sure that is requried.\n > you need to extend the image metadata object field which would bump\n > the object version and the notification objects will have to be\n > extended as a result as will the numa toplogy object. but i think\n > you just need to bump the object version for those not the service.\n > \n > if you were thinking of usign the service version as a proxy for\n > suppot of mixed cpus a better way to do that is a comptue capablity\n > trait like we do for multi attached volumes.\n > \n > ------\n > oh later i see the service bump is called out on line 328 so we can\n > ensure its only enabled when the entire cloud is upgraded.\n > \n > ya if we use the comptue capablity trait i think we can skip that\n > requirement and support this without the entire cloud been\n > upgraded. when ever the shduler traslates the requiremetns it will\n > just add required=COMPUTE_MIX_CPUS or whatever the trait woudl be.\n\nBut COMPUTE_MIX_CPUS trait will be useless after upgrade, if it is still have important usecase after upgrade, I would say yes. But it is just for upgrade, then we will prefer to use service version.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "3bfd8b7a89f0b6aa5f58eceaeab3aa3e568b8bd4", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_185ea078", "line": 348, "in_reply_to": "3fa7e38b_b5c67568", "updated": "2020-02-13 13:09:28.000000000", "message": "But currently, only libvirt virt driver supports to report PCPU, so the trait becomes useless again. To avoid adding extra trait in the placement request which consume extra filtering or db query inside placement, still prefer to use service version.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "67941e04c42b6cfed393403a54880cf160d4a1f3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_1123ee58", "line": 377, "range": {"start_line": 376, "start_character": 1, "end_line": 377, "end_character": 5}, "updated": "2020-02-12 15:29:53.000000000", "message": "am that would be nice but for functional test i would like too see the intreee numa functional testes exteded to support mixed instances. white box is integration testing and it would be nice to have that in attion to the functional test but i dont think its required. at least upstream, downstream we would need to support testing this via whitebox before we could support it in the product so of you do feel like adding whtiebox integration tests i wont say no to them :)", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "9e05ab1550d8391f7deb4598544d6ffb14086f45", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_7709e82f", "line": 377, "range": {"start_line": 376, "start_character": 1, "end_line": 377, "end_character": 5}, "in_reply_to": "3fa7e38b_1123ee58", "updated": "2020-02-13 10:01:43.000000000", "message": "agree. will extend the intree numa functional test cases also.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "0ec4e589647baec293365baf2844dac4f9a0c7c3", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_b58bd51f", "line": 377, "range": {"start_line": 376, "start_character": 1, "end_line": 377, "end_character": 5}, "in_reply_to": "3fa7e38b_7709e82f", "updated": "2020-02-13 11:58:45.000000000", "message": "cool i would remove the reference to whitebox. please feel free to extend those test if you have time but we should not require you to in the spec. if the in tree functional tests are extended i think you have met the minium requirement for testing.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}, {"author": {"_account_id": 30209, "name": "Huaqiang", "email": "huaqiang.wang@intel.com", "username": "Huaqiang.Wang"}, "change_message_id": "12e44e188457dbd2035f935051d89fd7d67eb40c", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_3804bcc4", "line": 377, "range": {"start_line": 376, "start_character": 1, "end_line": 377, "end_character": 5}, "in_reply_to": "3fa7e38b_b58bd51f", "updated": "2020-02-13 12:42:57.000000000", "message": "Personally I agree with you. But the white-box test is proposed in Shanghai PDT meeting by Stephen, if I recalled correctly, I'll consult his opinion, if he still think it is a compulsive requirement for this spec.", "commit_id": "b55907d80f0d9749183f03ee4ac9c88ead731a88"}]}}, "openstack%2Ftripleo-common~stable%2Fqueens~Ic95d13cf60967c4d5c329f903f396b8bd14239be": {"owner_id": 6681, "owner_name": "Brent Eagles", "owner_email": "beagles@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-08 11:11:42.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "starlingx%2Fupstream~master~Ic43ba21acfe57f11bd60ad3c91b2588ebe8d4f7e": {"owner_id": 28468, "owner_name": "Tao Liu", "owner_email": "tao.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 16:14:44.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-13 17:39:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}], "comments": {}}, "openstack%2Fnova-specs~master~If2d28b796d782937647cf9d47a54ffb1db993411": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": -1, "date": "2020-01-30 13:15:31.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": -1, "date": "2020-01-13 10:36:42.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2019-12-16 07:38:54.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, {"value": -1, "date": "2020-01-10 12:41:49.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": -1, "date": "2020-01-27 12:58:35.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}], "comments": {"specs/ussuri/approved/allow-specify-user-to-reset-password.rst": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "35c3678864480d4f54599fb77c070bb73219a9ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1fa6b8c1", "line": 19, "range": {"start_line": 19, "start_character": 22, "end_line": 19, "end_character": 28}, "updated": "2019-10-29 16:06:57.000000000", "message": "windows?", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "35c3678864480d4f54599fb77c070bb73219a9ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_58052679", "line": 26, "updated": "2019-10-29 16:06:57.000000000", "message": "I think something is missing from the problem description. How this problem is the problem of OpenStack Nova. I think in the first sentence you need to talk about what OpenStack allows and not allows but is should", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "9d24f1cdafc2e11135febde4a83e041952f14310", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_363867d1", "line": 26, "in_reply_to": "3fa7e38b_008ac562", "updated": "2019-10-30 15:27:50.000000000", "message": "> Sure, but why does nova need to be the vehicle to do this? Couldn't\n\n+1000\n\nAlso I think this is relevant here https://docs.openstack.org/nova/latest/contributor/project-scope.html#no-more-orchestration", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9f4589308e9e1f39fc83abbb9214df4dfb23a6e2", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e3e20901", "line": 26, "in_reply_to": "3fa7e38b_008ac562", "updated": "2019-10-31 07:18:59.000000000", "message": "Yeah, we have tried to solve this problem in the above way, but our customers are not satisfied with this solution. When the nova was deployed in the customer's environment, it should be convenient and friendly to the customers. \n\n > I realize it would be convenient to just have nova do this since the framework is already in place\n\nThis is why we chose to implement this solution through nova and provide it to our customers through our dashboard. Our customers are quite satisfied with this.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "d450baf0f6b8701955350ea1ccb0cae5f999dce8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b3547b23", "line": 26, "in_reply_to": "3fa7e38b_58052679", "updated": "2019-10-29 17:14:19.000000000", "message": "When I first opened this I was going to say the same thing, why does nova need to support or care about this? That's why I mentioned it in the alternatives section below. I then got to reading the original spec for this API:\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/liberty/implemented/libvirt-set-admin-password.html\n\nAnd it's a bit of a slippery slope now because the argument could have been made then, why does nova need to care about this? And the alternative there says the same:\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/liberty/implemented/libvirt-set-admin-password.html#alternatives\n\ne.g. \"for an admin to bulk change the passwords across all their running guests, without having to login to the console of each guest manually/individually.\"\n\nI'm not really sold on expanding the use case for the changePassword API though since it's very heavily documented (in docs, code and CLI) that the API is for resetting the admin password and not random users within the guest. Adding this would be a total convenience that only the libvirt driver would implement (the only other driver that implements this API is the xenapi driver and that is deprecated).", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "e724b0225f1015fa000314ac37c48e4cc6a64094", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_96835b56", "line": 26, "in_reply_to": "3fa7e38b_857ec767", "updated": "2019-10-30 15:29:59.000000000", "message": "> In our existing customer environment, an administrator will issue\n > 500 VMs, or even more. For product security, users are not expected\n > to know the admin/administrator password. Therefore, when non-admin\n > forgets the password, it can directly Resetting your password\n > yourself is a good choice. If all of this work is done by an\n > administrator, it is conceivable that the administrator will be\n > mad.\n\nIf in this environment your admin needs to reconfigure or patch the software running in those 500 guests. How do you do that today?", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "85d4c8d508133b7c1443fc85c70bbef67b907916", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_008ac562", "line": 26, "in_reply_to": "3fa7e38b_857ec767", "updated": "2019-10-30 14:22:35.000000000", "message": "> In our existing customer environment, an administrator will issue\n > 500 VMs, or even more. For product security, users are not expected\n > to know the admin/administrator password. Therefore, when non-admin\n > forgets the password, it can directly Resetting your password\n > yourself is a good choice. If all of this work is done by an\n > administrator, it is conceivable that the administrator will be\n > mad.\n\nSure, but why does nova need to be the vehicle to do this? Couldn't you have a tool/portal (that's not nova) which takes the user password reset change request and ssh's into the guest and does that directly? Or just runs a virsh command on the compute host or if one doesn't exist you could write a python script that connects to libvirt and call setUserPassword on the domain object for the guest.\n\nI realize it would be convenient to just have nova do this since the framework is already in place, I just don't think it really fits with the project, but I don't feel that strongly that I'm -1 on it.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "bda90b9d5be6a440c400efbaba58246cf778095d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4363dd42", "line": 26, "in_reply_to": "3fa7e38b_96835b56", "updated": "2019-10-31 08:29:39.000000000", "message": "> If in this environment your admin needs to reconfigure or patch the software running in those 500 guests. How do you do that today?\n\nWe update the changePassword Action API, and allow the admin or owner to request his/her username and new password to reset its password. As your suggestion, I realize do this in a single API is better, I think it is necessary to make changes.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84e44b4f9338a99f772aa085feede9062ad5eebe", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3f5fe541", "line": 26, "in_reply_to": "3fa7e38b_b3547b23", "updated": "2019-10-30 08:39:25.000000000", "message": "I agree that we opened pandora's box with the liberty feature but I would like to draw the line here.\n\nIf there is push to add more automation to nova (which I disagree with) then instead of adding each automation use case one by one with a separate API why don't we add a single Nova API like \"run this script in my guest\". Then the problem would be solved for ever.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5271404526377b83695e1593082c668565bca5c0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_857ec767", "line": 26, "in_reply_to": "3fa7e38b_b3547b23", "updated": "2019-10-30 13:31:14.000000000", "message": "In our existing customer environment, an administrator will issue 500 VMs, or even more. For product security, users are not expected to know the admin/administrator password. Therefore, when non-admin forgets the password, it can directly Resetting your password yourself is a good choice. If all of this work is done by an administrator, it is conceivable that the administrator will be mad.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "35c3678864480d4f54599fb77c070bb73219a9ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d8f8367d", "line": 29, "range": {"start_line": 29, "start_character": 37, "end_line": 29, "end_character": 44}, "updated": "2019-10-29 16:06:57.000000000", "message": "allow?", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "35c3678864480d4f54599fb77c070bb73219a9ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_78cb421d", "line": 31, "updated": "2019-10-29 16:06:57.000000000", "message": "I don't think this is a feature that nova needs to support. The administrator can log in to the guest and can change the password of other users in the guest.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 6873, "name": "Matt Riedemann", "email": "mriedem.os@gmail.com", "username": "mriedem"}, "change_message_id": "9d45c0d7c595c4dc805b91bbe23a4447ff61f21d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_82ed6f26", "line": 48, "updated": "2019-10-29 13:53:05.000000000", "message": "Obviously the alternative is the admin or owner of the VM logs into it and changes the target user's password.", "commit_id": "817dfb6d2d5a8eefde8df145b83529d14dae8fce"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "a8d4dc960dbdd77ace7803e5be28b496de665d78", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_41139566", "line": 79, "updated": "2019-12-16 02:40:09.000000000", "message": "I may pick some detail here, like both adminPass and user_name and user_passwd specified. But it is fine. Probably we can support both.", "commit_id": "94af7089864b1351406ce081af95506dd6e53610"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "022395a0d64a201422b1b39aab9e7c7bc9b68b88", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_849afbc1", "line": 79, "in_reply_to": "3fa7e38b_41139566", "updated": "2019-12-16 03:05:18.000000000", "message": "This will add a new compute api to change the user's password, of course, if you want to change the admin user's password, it can be allowed.", "commit_id": "94af7089864b1351406ce081af95506dd6e53610"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "a8d4dc960dbdd77ace7803e5be28b496de665d78", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_a101290a", "line": 125, "updated": "2019-12-16 02:40:09.000000000", "message": "you also need to change the rpc api, to pass those username and password down to compute node.", "commit_id": "94af7089864b1351406ce081af95506dd6e53610"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "022395a0d64a201422b1b39aab9e7c7bc9b68b88", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_44a40308", "line": 125, "in_reply_to": "3fa7e38b_a101290a", "updated": "2019-12-16 03:05:18.000000000", "message": "Yes, it's shuold be declared.", "commit_id": "94af7089864b1351406ce081af95506dd6e53610"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_01ce125a", "line": 14, "range": {"start_line": 13, "start_character": 0, "end_line": 14, "end_character": 69}, "updated": "2020-01-10 12:41:49.000000000", "message": "this requires the guest to be deployed with the qemu guest agent correct. with out the guest agent i dont think libvirt can reset the password.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "079dd276626429149a16c62ff8c8ec3cbe03463d", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_fe8a611c", "line": 14, "range": {"start_line": 13, "start_character": 0, "end_line": 14, "end_character": 69}, "in_reply_to": "3fa7e38b_01ce125a", "updated": "2020-01-13 07:53:39.000000000", "message": "Yes, this requires the guest has been deployed with the qumu guest agent.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_a18ffe1f", "line": 24, "range": {"start_line": 24, "start_character": 9, "end_line": 24, "end_character": 48}, "updated": "2020-01-10 12:41:49.000000000", "message": "unfrotunetly yes although they should really be using ssh keys or x509 certs for powershell on windows.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "bc0822b7afde08811bf501aee189c4a353647fc8", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aeb03843", "line": 28, "range": {"start_line": 24, "start_character": 50, "end_line": 28, "end_character": 37}, "updated": "2020-01-30 13:15:31.000000000", "message": "This operation is controlled with policy which is admin or owner by default. So owner of project can still change the password (owner will be decided by project not user).\n\n'os_compute_api:os-admin-password'", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_81b522d2", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "updated": "2020-01-10 12:41:49.000000000", "message": "vms are owned by the project so if we did this it would allow any memeber of a project to reset the password of any vm in the project. is that what we want? the most comment case other then forget the password where this would come up is an employee leave but they did nto transfer the vm to another and reset the password before they left.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "6b670809debe804ad684899cb3f91cbd2fd8dc08", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_506a79ec", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_30f81d7d", "updated": "2020-01-30 19:12:42.000000000", "message": "that would reduce the security risk but if the vm is shared by multile user this still does not protect them form the user that created the vm changing there passwords on the vm.\n\ni really dont think this is something that should be in the scope of nova to manage.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "6b98798f34b361656b1345172656b3c508517078", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_eacff151", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_506a79ec", "updated": "2020-01-31 01:13:19.000000000", "message": "emm...without this feature, the user in the same project can use rescue mode to change the passwd file in the original root.  But yes, the VM is down in that moment.\n\nIt only guarantees a live VM can't change the password.\n\nI just think the per user VM model isn't we support today.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "bc0822b7afde08811bf501aee189c4a353647fc8", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_eed4f04e", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_80806ec0", "updated": "2020-01-30 13:15:31.000000000", "message": "yeah current policy[1] is admin or owner by default. we do not decide the owner from user but from project.\n\nis this proposal about restricting same project's user not to change password ? because all users under server owne project should be able to change passowrd.\n\n[1] 'os_compute_api:os-admin-password'", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "079dd276626429149a16c62ff8c8ec3cbe03463d", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_bebb89bc", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_81b522d2", "updated": "2020-01-13 07:53:39.000000000", "message": "A user in vm's system that he has the unique name, non-admin cannot reset the admin's password, I think it's security, because I cannot reset the other user's password, unless he told me the username.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b2c3e6a118752950ffa2a76fbab425f93823dcab", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_7cfc1d40", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_8ae8bd7e", "updated": "2020-02-01 09:11:57.000000000", "message": "Rescue will interrupt the VM business and use cases collected on the spot, this is not the feature the end user wants.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "e3d6546387e5d33cf8956237a0e754573ce2fa3c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_eed390d3", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_bebb89bc", "updated": "2020-01-13 11:46:06.000000000", "message": "security through obscurity is not security. i could just write a script to do this in a loop with a name list and then try to log in also on both windows and linux non admin account can be in the administrator group meaning the can elevate privladges usually by using there password which you just reset. i know the user names of several of my co workers because they are used on donwstream irc or in jira, when i worked at intel we have public home web shares at an internal webserver/<username> that we could use to share small scripts like local.confs.   the point being most of the time usernames are well know or guessable if you know the persons name so this is a security risk.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "03dad460eb32a5eadfcd4bcf8d57d067d1e5bf13", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8ae8bd7e", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_eacff151", "updated": "2020-01-31 01:34:31.000000000", "message": "well on that point other then live vm update.\nis this not covered by rescue as you just said.\n\nthe primary usecase is the user forgot the password and they dont want to file a support ticket. if they are not using full drive encryption within the guest then they can use rescue mode to change the password.\n\nif they are using full drive encryption they can still change the password if they know the drive encryption password.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 5754, "name": "Alex Xu", "email": "hejie.xu@intel.com", "username": "xuhj"}, "change_message_id": "b90a5078b2052586d84b8bcee26aa14307119693", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_80806ec0", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_eed390d3", "updated": "2020-01-16 06:01:18.000000000", "message": "I thought we allow any user in the project to operate the VMs, except we allow the user-based policy, but that we don't support yet.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "4525cb221dab8bcb5d55076b200b3e309da6b9a7", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_30f81d7d", "line": 36, "range": {"start_line": 33, "start_character": 0, "end_line": 36, "end_character": 35}, "in_reply_to": "3fa7e38b_eed4f04e", "updated": "2020-01-30 18:58:35.000000000", "message": "this policy is passing the user_id actually[1] so policy override to allow per user should work fine.\n\n[1] https://github.com/openstack/nova/blob/b8f4e469399d2b552023002564e992b3d7616687/nova/api/openstack/compute/admin_password.py#L44", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_c1d31a01", "line": 77, "range": {"start_line": 77, "start_character": 6, "end_line": 77, "end_character": 34}, "updated": "2020-01-10 12:41:49.000000000", "message": "this is the user in the vm.\n\nthis would only work if the vm supported local login by the way. i dont think we would expect this to work if the vm use kerberous or a windows domain login right?", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_61fca670", "line": 85, "range": {"start_line": 84, "start_character": 0, "end_line": 85, "end_character": 76}, "updated": "2020-01-10 12:41:49.000000000", "message": "see the issue with this is if that is a shared vm it would still  allow the non admin to reset the password of any user on the vm. that said i dont see a way to prevent that and still support letting the user reset there own accrount.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}, {"author": {"_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, "change_message_id": "634e47061928395933b0b8013a59cdc5e46e522c", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_8128c2ed", "line": 94, "range": {"start_line": 94, "start_character": 0, "end_line": 94, "end_character": 4}, "updated": "2020-01-10 12:41:49.000000000", "message": "i think there are several security impacts to this.\n\nas i said above vms are owned by projects not users so this api would presuable allow any user of the poject to reset an user in the vms password. that seam like a pretty big security whole if that vm is shared between users.\n\nin a public cloud env i see a need to be able to disable this feature i also think its likely that users would want to be able to disable this feature rather then have it contoled by the operator. as such i think we would need a hw_user_resetable_password image metadata property or something similar to allow them to enable this feature if they want it but i think it should be disabled by default.\n\nthe alternitve would be to make this an admin only api by default with a new policy rule and allow operators to allow this via modifying the policy rule if the choose.\n\nin either case i dont think we should enable this by default for all vms that have the qemu geust agent enabled.", "commit_id": "a5199d0955d55a52f840b176f6a993c930f34566"}]}}, "openstack%2Fnova-specs~master~I0d64d785dc96f37cb8a7d5ac182bc14dcc6502a6": {"owner_id": 1011, "owner_name": "Tushar Patil", "owner_email": "tushar.vitthal.patil@gmail.com", "labels": [{"value": 1, "date": "2019-11-27 10:07:03.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2019-12-09 15:20:59.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 25625, "name": "Tetsuro Nakamura", "email": "tetsuro.nakamura.bc@hco.ntt.co.jp", "username": "tetsuro0907"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11604, "name": "sean mooney", "email": "smooney@redhat.com", "username": "sean-k-mooney"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27302, "name": "Shilpa Devharakar", "email": "shilpa.devharakar@nttdata.com", "username": "shilpa.devharakar"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7a756328569d0d98a12c3aa0a1dcf66127ff3fb5", "unresolved": false, "patch_set": 2, "id": "5fc1f717_ce99481f", "line": 17, "updated": "2019-06-04 21:39:47.000000000", "message": "Please add\n\n blueprint: support-shared-storage-resource-provider", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}], "specs/train/approved/support-shared-storage-resource-provider.rst": [{"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_632426c7", "line": 78, "updated": "2019-04-05 16:16:22.000000000", "message": "There's another use cases here that applies to clustered hypervisors. At least vmware, but maybe powervm as well. In those environments it can be the case that clusters have more than one datastore and those datastores could (but don't always) span multiple clusters. In that kind of setup, using shared providers to represent all the datastores, even if they are only used by the one cluster is a useful solution.\n\nThis allows available disk to be reported.\n\nI've done some experiments in this vein at: https://github.com/cdent/placement-disk-models", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, "change_message_id": "4f3068d47dcd5e2defe91eb313eddd7b10eaa3a4", "unresolved": false, "patch_set": 1, "id": "5fc1f717_5672137e", "line": 96, "range": {"start_line": 96, "start_character": 28, "end_line": 96, "end_character": 33}, "updated": "2019-04-05 05:56:46.000000000", "message": "method", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_0330c255", "line": 97, "updated": "2019-04-05 16:16:22.000000000", "message": "If 1 is happening, why is 2 needed?", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_a368cef3", "line": 162, "updated": "2019-04-05 16:16:22.000000000", "message": "I think there's a potential performance concern if many compute nodes start using shared storage at the same time. There may be a thundering herd against /reshape that we need to think and warn about.", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_6388a6c5", "line": 175, "updated": "2019-04-05 16:16:22.000000000", "message": "It would be great if we could make this something the virtdriver can do, perhaps optionally. Maybe as a second phase.\n\nTo me, a virt driver knows what kind of storage it is sitting on. If it is not local, it should be able to see if there is already a resource provider representing that storage. If not, it should create one and make it a misc shares, create the aggregate and put itself and the compute node in the aggregate.\n\nIf the shared provider already exists, the compute-node should make sure it is in the associated aggregate.\n\nRequiring the operator do the work that we ought to be able to automate is sub-optimal.\n\nIf I remember correctly, efried already put some thought into this kind of thing when working on update_provider_tree.\n\nAll this, of course, assumes that a virtdriver can detect that it is using shared disk. This is obvious in some virtdrivers, but potentially not all.", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "892b24b74f38f9de7a60d5860d8d6a200b05af7e", "unresolved": false, "patch_set": 1, "id": "5fc1f717_54a18fa8", "line": 175, "in_reply_to": "5fc1f717_6388a6c5", "updated": "2019-04-08 07:11:29.000000000", "message": "I haven't included this point in the updated PS.\n\nWill need to check the feasibility before making changes to the specs.", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_43000a03", "line": 182, "updated": "2019-04-05 16:16:22.000000000", "message": "I'm intending to get update_provider_tree working for the vmware driver, in large part to support the use case I've mentioned above, but also because it needs to be done.", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "34b2405966f903ea6f3ad7ca72cc0eaa686ee416", "unresolved": false, "patch_set": 1, "id": "5fc1f717_06045014", "line": 215, "updated": "2019-04-05 16:16:22.000000000", "message": "I'd like to help out on this. I think getting shared disk working properly with nova and placement is one of the main benefits that placement was built to provide so finally getting it working will be great.", "commit_id": "75136a9a648a30399b18a557343368a9cb6172a3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_7841fe62", "line": 50, "range": {"start_line": 48, "start_character": 5, "end_line": 50, "end_character": 32}, "updated": "2019-04-09 11:56:09.000000000", "message": "I don't think this is true today. Nova does not delete the source allocation during the move. It just changes the owner of the source allocation from the instance to the migration. But the source host resources are allocated all the time during the resize, up until the resize is confirmed and the source host is cleaned up.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 2, "id": "3fce034c_d38cf180", "line": 50, "range": {"start_line": 48, "start_character": 5, "end_line": 50, "end_character": 32}, "in_reply_to": "5fc1f717_0edd10dc", "updated": "2019-04-16 09:30:34.000000000", "message": "I think the comment in [1] is not valid any more but it is worth to check with a test case if the move_allocation handles shared allocations properly. I think it will move the DISK_GB allocation to the migration_uuid as well, and then the scheduler will allocate another set if DISK_GB resources for the instance during the migration. I think this does not lead to inconsistency but it will create a doubled allocation against the sharing provider during the migration which might not be needed.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_0edd10dc", "line": 50, "range": {"start_line": 48, "start_character": 5, "end_line": 50, "end_character": 32}, "in_reply_to": "5fc1f717_7841fe62", "updated": "2019-04-09 13:32:27.000000000", "message": "I thought this issue is present in the code during moving allocations at [1]. Will confirm this point and remove it in the next PS accordingly.\n\n[1] : https://github.com/openstack/nova/blob/master/nova/conductor/tasks/migrate.py#L71", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_7b525814", "line": 93, "range": {"start_line": 93, "start_character": 25, "end_line": 93, "end_character": 35}, "updated": "2019-04-09 11:56:09.000000000", "message": "Does it mean that there will be a new config option? Or does it mean that the compute detects that there is a sharing RP with DISK_GB in its provider tree?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 2, "id": "3fce034c_93ec292a", "line": 93, "range": {"start_line": 93, "start_character": 25, "end_line": 93, "end_character": 35}, "in_reply_to": "5fc1f717_2e032c44", "updated": "2019-04-16 09:30:34.000000000", "message": "I see. Thanks.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_2e032c44", "line": 93, "range": {"start_line": 93, "start_character": 25, "end_line": 93, "end_character": 35}, "in_reply_to": "5fc1f717_7b525814", "updated": "2019-04-09 13:32:27.000000000", "message": "No need of new config option. Compute will detect it on startup using provider tree. But here, I'm assuming the configuration of shared storage RP in placement is done by operator outside nova.\n\nChris had raised this point in previous PS if it's possible to detect compute node is configured to use shared storage so that nova can add necessary configuration in placement as described in the \"Other Deployer Impact\" section. Basically all steps needed to configure shared storage RP should be automated by nova.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_5b3d1cb9", "line": 97, "updated": "2019-04-09 11:56:09.000000000", "message": "Will the compute service fail to start if there is not enough inventory to in the sharing RP to move every allocation from the compute RP to the sharing RP?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_6eb3749b", "line": 97, "in_reply_to": "5fc1f717_5b3d1cb9", "updated": "2019-04-09 13:32:27.000000000", "message": "During upgrade, all such corner cases will be handled.\n\nWe can easily find out how much disk_GB capacity is required to move all allocations from compute to shared storage RP before actually moving the allocations using reshape functionality.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 2, "id": "3fce034c_b3e60544", "line": 97, "in_reply_to": "5fc1f717_6eb3749b", "updated": "2019-04-16 09:30:34.000000000", "message": "Sure. But what nova compute will do when there is not enough resources on the sharing RP? I mean the deployer creates the sharing RP in placement with some DISK_GB inventory. Then the deployer restarts the nova-compute. Then nova-compute tries the reshape and fails as the there is not enough DISK_GB inventory on the sharing RP (e.g. the deployer made a mistake or the disk is overallocated). Will nova-compute continue the startup and use the non sharing RP for DISK_GB or will nova-compute simply exits to force the deployer to fix the inventory of the sharing RP?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_3b6930bd", "line": 108, "range": {"start_line": 103, "start_character": 71, "end_line": 108, "end_character": 27}, "updated": "2019-04-09 11:56:09.000000000", "message": "This feel like an implementation detail.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_9b7e2468", "line": 109, "updated": "2019-04-09 11:56:09.000000000", "message": "Do we have a separate bug here for the case when placement goes down during cold migration? Or the problem described in this section to specific somehow for sharing RPs? If yes, then please describe how this is specific to sharing RPs?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_7bc7b899", "line": 114, "updated": "2019-04-09 11:56:09.000000000", "message": "So if the user use force flag < 2.68 microversion the sharing RP handling will break. Can we reject forced live migration if the instance has allocation from a sharing RP instead?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_ae4b9c84", "line": 114, "in_reply_to": "5fc1f717_7bc7b899", "updated": "2019-04-09 13:32:27.000000000", "message": "I will make the change in the next PS.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_1bfb14be", "line": 123, "range": {"start_line": 123, "start_character": 0, "end_line": 123, "end_character": 73}, "updated": "2019-04-09 11:56:09.000000000", "message": "I think we need to be carefully document that in this case the local_gb field of the GET \n/os-hypervisors/detail API response will not talk about a disk resource that is local to the hypervisor. Also I would document that the free_disk_gb value of a hypervisor can change even if this hyperivsor is not changed at all by other hypervisors consuming resource from the same disk pool.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_9bddc442", "line": 164, "range": {"start_line": 163, "start_character": 67, "end_line": 164, "end_character": 39}, "updated": "2019-04-09 11:56:09.000000000", "message": "Do we have a way (other that documenting to not restart every  compute at once) to limit the performance impact?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_5bcc3c88", "line": 165, "range": {"start_line": 164, "start_character": 41, "end_line": 165, "end_character": 60}, "updated": "2019-04-09 11:56:09.000000000", "message": "What is the source of this performance impact? Does the placement allocation candidate query implementation become slower if we start using sharing RPs?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 2, "id": "3fce034c_d3995179", "line": 165, "range": {"start_line": 164, "start_character": 41, "end_line": 165, "end_character": 60}, "in_reply_to": "5fc1f717_51abbdd4", "updated": "2019-04-16 09:30:34.000000000", "message": "Cool thanks.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_51abbdd4", "line": 165, "range": {"start_line": 164, "start_character": 41, "end_line": 165, "end_character": 60}, "in_reply_to": "5fc1f717_5bcc3c88", "updated": "2019-04-09 13:32:27.000000000", "message": "I believe that shared storage RP will contain many allocations for different compute nodes so to find out the available capacity, the calculation might take a little extra time. I have checked the placement code and it seems that it is using sql.func to do all these calculations.\n\nI will simulate many compute nodes using single shared storage RP with multiple allocations for each compute node to find out if it's really impacting the performance or not and accordingly will update this performance section.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_dba58cb6", "line": 177, "range": {"start_line": 177, "start_character": 3, "end_line": 177, "end_character": 39}, "updated": "2019-04-09 11:56:09.000000000", "message": "Is it a nova host aggregate or only a placement aggregate?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "c5c1763be9485bfb8c105e576a0ca32afc598a99", "unresolved": false, "patch_set": 2, "id": "5fc1f717_71a6f9c2", "line": 177, "range": {"start_line": 177, "start_character": 3, "end_line": 177, "end_character": 39}, "in_reply_to": "5fc1f717_dba58cb6", "updated": "2019-04-09 13:32:27.000000000", "message": "It's a placement aggregate. I will make this point clear in the next PS.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "84d39ec2fd3a3883be7b3a44d80146a92b856bea", "unresolved": false, "patch_set": 2, "id": "5fc1f717_bb89a026", "line": 210, "updated": "2019-04-09 11:56:09.000000000", "message": "Do we need/want to add an offline method to make this transformation during a fast forward upgrade?", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "8d6e61691c509930b89b3622f2ad33a3ed247229", "unresolved": false, "patch_set": 2, "id": "5fc1f717_1b6f9428", "line": 210, "in_reply_to": "5fc1f717_bb05207c", "updated": "2019-04-09 12:07:41.000000000", "message": "I remember that we talked about FFU support for the first reshape code as well. And Matt noted the following in the rehape bp[1]:\n\n\"I'm deferring this to Train because although the libvirt driver implemented reshapes for VGPU inventory and allocations, the xenapi driver did not and there is no FFU support. -- mriedem 20190311\"\n\nSo at least we need  a global agreement about the FFU need for reshape.\n\n[1] https://blueprints.launchpad.net/nova/+spec/reshape-provider-tree", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2e2a168caa00d4f650f11c4ac9e968b8fb7b4ef0", "unresolved": false, "patch_set": 2, "id": "5fc1f717_bb05207c", "line": 210, "in_reply_to": "5fc1f717_bb89a026", "updated": "2019-04-09 12:02:08.000000000", "message": "I'm not convinced that if we have a reshaper, and the reshaper code lives forever, that we need to deal with a fast forward upgrade in these sorts of cases.\n\nWhatever version we eventually land on, a reshape will or will not happen, as required.", "commit_id": "5bfb9c347029d1ec5906d569731b086e61c6a498"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_cd80e98e", "line": 33, "range": {"start_line": 33, "start_character": 18, "end_line": 33, "end_character": 46}, "updated": "2019-04-15 12:31:10.000000000", "message": "supernit - Could you describe what `Patch [1]` actually was here so readers don't have to click through?", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_879f59b3", "line": 53, "range": {"start_line": 53, "start_character": 56, "end_line": 53, "end_character": 61}, "updated": "2019-04-21 15:12:47.000000000", "message": "s/it's/the/", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_e7adf5ea", "line": 63, "range": {"start_line": 63, "start_character": 3, "end_line": 63, "end_character": 10}, "updated": "2019-04-21 15:12:47.000000000", "message": "clusters", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_a7b7fd3a", "line": 63, "range": {"start_line": 63, "start_character": 20, "end_line": 63, "end_character": 24}, "updated": "2019-04-21 15:12:47.000000000", "message": "its", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_c7b47138", "line": 64, "range": {"start_line": 64, "start_character": 17, "end_line": 64, "end_character": 21}, "updated": "2019-04-21 15:12:47.000000000", "message": "s/it's/those/", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_67834558", "line": 71, "updated": "2019-04-21 15:12:47.000000000", "message": "\u2714", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_8788b971", "line": 73, "range": {"start_line": 73, "start_character": 0, "end_line": 73, "end_character": 7}, "updated": "2019-04-21 15:12:47.000000000", "message": "s/Upgrade/Move/", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_0794c98a", "line": 80, "updated": "2019-04-21 15:12:47.000000000", "message": "\u2714", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_87ed1927", "line": 85, "range": {"start_line": 85, "start_character": 29, "end_line": 85, "end_character": 34}, "updated": "2019-04-21 15:12:47.000000000", "message": "admins\n\nUsers don't call live-migrate.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_a7905d97", "line": 86, "range": {"start_line": 86, "start_character": 3, "end_line": 86, "end_character": 8}, "updated": "2019-04-21 15:12:47.000000000", "message": "avoid", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_785ad12a", "line": 88, "range": {"start_line": 87, "start_character": 54, "end_line": 88, "end_character": 68}, "updated": "2019-04-15 12:31:10.000000000", "message": "Is the above reshaping going to happen offline or when the compute first starts up? If the latter we could end up racing here and end up moving an instance before it's associated DISK_GB allocations have moved to the shared RP.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_67d10558", "line": 88, "range": {"start_line": 87, "start_character": 54, "end_line": 88, "end_character": 68}, "in_reply_to": "3fce034c_136fd992", "updated": "2019-04-21 15:12:47.000000000", "message": "@gibi is correct. Reshape happens before the nova-compute accepts user-facing operations:\n\nhttps://github.com/openstack/nova/blob/master/nova/compute/manager.py#L1254-L1260\n\nthe startup=True flag there is what triggers reshapes to be handled.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 3, "id": "3fce034c_136fd992", "line": 88, "range": {"start_line": 87, "start_character": 54, "end_line": 88, "end_character": 68}, "in_reply_to": "3fce034c_785ad12a", "updated": "2019-04-16 09:30:34.000000000", "message": "As far as I know reshape happens at nova-compute startup in the nova.compute.manager.ComputeManager.pre_start_hook() which runs _before_ the compute is reported state to the conductor. So the compute still be in down state operationally during reshape.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_07c28986", "line": 98, "updated": "2019-04-21 15:12:47.000000000", "message": "It's a shame we would still need to even use these fields from the compute_nodes cell DB table. :( Unfortunately, stuff like the os-hypervisors API is going to continue ignoring placement completely and calculating its responses using the values in the compute_nodes cell DB tables:\n\nhttps://developer.openstack.org/api-ref/compute/?expanded=list-hypervisors-details-detail#hypervisors-os-hypervisors\n\nhttps://github.com/openstack/nova/blob/master/nova/api/openstack/compute/hypervisors.py#L68", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "4867516074c2a2d8015a3cc3cc22bddb7bb54a79", "unresolved": false, "patch_set": 3, "id": "3fce034c_b3c92579", "line": 118, "range": {"start_line": 118, "start_character": 11, "end_line": 118, "end_character": 12}, "updated": "2019-04-16 09:30:34.000000000", "message": "if the server has allocation against a sharing provider, as ...", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_c7bb110c", "line": 119, "updated": "2019-04-21 15:12:47.000000000", "message": "For instances that use shared storage, the allocations won't actually change, though, so this isn't a problem UNLESS the destination compute host uses a *different* shared storage filer/provider than the source.\n\nAnd, of course, we have no way at all of knowing this might be the case UNLESS (live) migration  ALWAYS uses the scheduler, which ALWAYS talks to placement.\n\nWhich is, I suppose, what you're getting at here :)\n\nWhy do we add microversions again that allow users/admins to continue to put the system into a known bad state? :(", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "6fac890df0919afc632756b7a44e3c4e68df4391", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_45271966", "line": 119, "in_reply_to": "ffb9cba7_c7bb110c", "updated": "2019-04-22 03:24:23.000000000", "message": "Not adding a new microversion here. But yes, it will affect backward compatibility as it will return 400 error only in case where server has allocations against a shared storage resource provider. I have tried live migrating server in such scenario and observed it doesn't work at all so I don't think there is any issue in returning 400 error.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_7881714a", "line": 147, "range": {"start_line": 140, "start_character": 0, "end_line": 147, "end_character": 4}, "updated": "2019-04-15 12:31:10.000000000", "message": "I think this is all pretty tenuous and something you would already expect to see before this.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "9f4280723d19ef96832fa424d0c946712ae1f39b", "unresolved": false, "patch_set": 3, "id": "3fce034c_873aa395", "line": 147, "range": {"start_line": 140, "start_character": 0, "end_line": 147, "end_character": 4}, "in_reply_to": "3fce034c_7881714a", "updated": "2019-04-16 13:31:38.000000000", "message": "I think the main concern that needs to be explained here is not \"too many computes on one shared provider\" but the potentially thundering herd aspect of many computes doing a reshape at the same time.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_58ccb5bb", "line": 159, "range": {"start_line": 157, "start_character": 0, "end_line": 159, "end_character": 68}, "updated": "2019-04-15 12:31:10.000000000", "message": "TIL - might be useful to link the spec here for context.\n\nhttps://specs.openstack.org/openstack/nova-specs/specs/rocky/implemented/placement-mirror-host-aggregates.html", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_b8d6f926", "line": 180, "range": {"start_line": 179, "start_character": 3, "end_line": 180, "end_character": 20}, "updated": "2019-04-15 12:31:10.000000000", "message": "Do you just mean in the same aggregate as the shared storage RP or are you planning on adding a configurable to nova.conf to specify if a local or shared RP is being used? Something like:\n\n  [libvirt]\n  instances_path_resource_provider = local|shared\n\nOtherwise for Libvirt at least there's no real way of telling how the underlying instances_path has been configured on the host without casting across all the computes to ensure they all have the same share mounted.\n\nYou could even go one step further for Libvirt and call out the specific RP being used by `instances_path`.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "9f4280723d19ef96832fa424d0c946712ae1f39b", "unresolved": false, "patch_set": 3, "id": "3fce034c_a7f0ffca", "line": 180, "range": {"start_line": 179, "start_character": 3, "end_line": 180, "end_character": 20}, "in_reply_to": "3fce034c_b8d6f926", "updated": "2019-04-16 13:31:38.000000000", "message": "I suspect we're going to want different things for different hypervisors, and potentially even different configurations in the same hypervisor.\n\nIn an earlier review I had suggested that it would be great if it was possible for the hypervisor to decide for itself:\n\n* whether it was in a shared disk environment\n* whether it needs to create a shared provider for that disk (if it doesn't exist yet)\n* add itself to an aggregate\n\nWith the vmware hypervisor, for example, (and probably powervm too) all that ought to be possible. In  qemu/kvm, especially on NFS, it probably won't be but we don't want those limitations to require manual configuration for the other hypervisors.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "6fac890df0919afc632756b7a44e3c4e68df4391", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_450e39e6", "line": 180, "range": {"start_line": 179, "start_character": 3, "end_line": 180, "end_character": 20}, "in_reply_to": "3fce034c_b8d6f926", "updated": "2019-04-22 03:24:23.000000000", "message": "It will detect if the DISK_GB resource class is configured to use shared storage resource provider as done in patch [1].\n\nP.S. This patch was reverted back later. But this is how we can detect if a compute node is configured to use DISK_GB resources from a shared storage resource provider.\n\n[1] : https://review.opendev.org/#/c/560459/17/nova/compute/provider_tree.py", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_3890c94e", "line": 185, "range": {"start_line": 183, "start_character": 67, "end_line": 185, "end_character": 59}, "updated": "2019-04-15 12:31:10.000000000", "message": "For the Libvirt implementation we could verify the actual size of the underlying share pretty easily and correct the RP during the reshape to avoid this.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_d89e6562", "line": 187, "range": {"start_line": 187, "start_character": 27, "end_line": 187, "end_character": 33}, "updated": "2019-04-15 12:31:10.000000000", "message": "nit - they", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "6d49f98737137484f90c9b8d6115e4085a86154d", "unresolved": false, "patch_set": 3, "id": "3fce034c_988f7d22", "line": 190, "range": {"start_line": 190, "start_character": 7, "end_line": 190, "end_character": 17}, "updated": "2019-04-15 12:31:10.000000000", "message": "Unless they misconfigure the RP but as I said above I think we can potentially correct this during the reshape if required.", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_c750f1d7", "line": 225, "range": {"start_line": 224, "start_character": 1, "end_line": 225, "end_character": 48}, "updated": "2019-04-21 15:12:47.000000000", "message": "Yes, +100", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 7, "name": "Jay Pipes", "email": "jaypipes@gmail.com", "username": "jaypipes"}, "change_message_id": "2171118118ddd889a554321b824d18bf2522b275", "unresolved": false, "patch_set": 3, "id": "ffb9cba7_675fc5e5", "line": 227, "updated": "2019-04-21 15:12:47.000000000", "message": "well, to say we support shared storage and move operations...", "commit_id": "dc6ca1803d8a74cfe9b1d102fc89417725804280"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2feb9eb220bbf3fbc6f242d07e3f28486dffc494", "unresolved": false, "patch_set": 4, "id": "dfbec78f_a68fc421", "line": 149, "updated": "2019-05-07 18:49:12.000000000", "message": "Is this something you've measured or are you making an assumption? I think you're probably right that it has some impact but I would be surprised if it is enough for anyone to notice.", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "055d3bacba505f4007c705a3ebc5b2f11c3b00ca", "unresolved": false, "patch_set": 4, "id": "dfbec78f_ebc0122d", "line": 149, "in_reply_to": "dfbec78f_6920b8b1", "updated": "2019-05-08 18:35:21.000000000", "message": "Thanks for doing some real measurement, that's great.\n\nThose numbers make sense and seem pretty good to me.", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "ae021386dceb3299dfd083fd095d7ebc2a161c00", "unresolved": false, "patch_set": 4, "id": "dfbec78f_6920b8b1", "line": 149, "in_reply_to": "dfbec78f_a68fc421", "updated": "2019-05-08 08:28:43.000000000", "message": "Yes, we have measured the performance by simulating resource providers in multiple of 25 up to 200 in a multi thread program and noticed the performance degraded if we configure compute node RP with shared storage RP by 5-10% compare to local storage . \n\nHere, we have measured total time taken by the program to process 'n' number of allocation requests and observed that it always take more time if we configure shared storage RP.", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2feb9eb220bbf3fbc6f242d07e3f28486dffc494", "unresolved": false, "patch_set": 4, "id": "dfbec78f_26cc3469", "line": 160, "range": {"start_line": 160, "start_character": 7, "end_line": 160, "end_character": 11}, "updated": "2019-05-07 18:49:12.000000000", "message": "synced", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "ae021386dceb3299dfd083fd095d7ebc2a161c00", "unresolved": false, "patch_set": 4, "id": "dfbec78f_5fdd6512", "line": 160, "range": {"start_line": 160, "start_character": 7, "end_line": 160, "end_character": 11}, "in_reply_to": "dfbec78f_26cc3469", "updated": "2019-05-08 08:28:43.000000000", "message": "Done", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 11564, "name": "Chris Dent", "email": "cdent@anticdent.org", "username": "chdent"}, "change_message_id": "2feb9eb220bbf3fbc6f242d07e3f28486dffc494", "unresolved": false, "patch_set": 4, "id": "dfbec78f_8638803d", "line": 216, "updated": "2019-05-07 18:49:12.000000000", "message": "We need to add work items for the example tools described in http://lists.openstack.org/pipermail/openstack-discuss/2019-May/005829.html\n\nIt may also be useful to indicate that other virt drivers may use different techniques (also mentioned in that email).", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "ae021386dceb3299dfd083fd095d7ebc2a161c00", "unresolved": false, "patch_set": 4, "id": "dfbec78f_7fe069cd", "line": 216, "in_reply_to": "dfbec78f_8638803d", "updated": "2019-05-08 08:28:43.000000000", "message": "Done", "commit_id": "9627d969a392bbc11b4149304f9827ffb0b9fbd2"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7a756328569d0d98a12c3aa0a1dcf66127ff3fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_dea40e0b", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 1}, "updated": "2019-06-04 21:39:47.000000000", "message": "``literal`` (throughout)", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "fecec9b9e179f106b37af664f3464ebf1b923308", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_2496fd4d", "line": 17, "range": {"start_line": 17, "start_character": 0, "end_line": 17, "end_character": 1}, "in_reply_to": "9fb8cfa7_dea40e0b", "updated": "2019-06-12 08:33:42.000000000", "message": "I will address this comment in the next PS.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7a756328569d0d98a12c3aa0a1dcf66127ff3fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_5ee6de46", "line": 54, "range": {"start_line": 54, "start_character": 31, "end_line": 54, "end_character": 45}, "updated": "2019-06-04 21:39:47.000000000", "message": "?\n\nIs this a libvirt-ism?\n\nOr do you mean \"files the instance wants to write onto the thing it thinks of as its disk\"?", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "fecec9b9e179f106b37af664f3464ebf1b923308", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_648075c0", "line": 54, "range": {"start_line": 54, "start_character": 31, "end_line": 54, "end_character": 45}, "in_reply_to": "9fb8cfa7_5ee6de46", "updated": "2019-06-12 08:33:42.000000000", "message": "Yes, you are right.\n\nI will make this point clear in the next PS.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b480cbfdcd44af018fdcfeddac8ccbc0a86d62bd", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_ac8e1476", "line": 81, "updated": "2019-07-02 08:17:00.000000000", "message": "just to be sure: \nDo we only allow a single sharing RP providing DISK_GB resource for a compute? \nDo we only allow either local DISK_GB reported on the root RP or sharing RP providing DISK_GB but not a mix of the two for a single compute node?", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f9bce514f1004b28a99a043ca275c7706046480a", "unresolved": false, "patch_set": 5, "id": "7faddb67_18ecf2f1", "line": 81, "in_reply_to": "9fb8cfa7_1f640ee5", "updated": "2019-07-09 10:27:18.000000000", "message": "thanks", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_1f640ee5", "line": 81, "in_reply_to": "9fb8cfa7_ac8e1476", "updated": "2019-07-09 06:59:41.000000000", "message": ">> Do we only allow a single sharing RP providing DISK_GB resource for a compute? \n\nYes, as we need to mount the sharing storage disk on the instances_path of the compute node, I think only one sharing storage provider can be used here.\n\n>> Do we only allow either local DISK_GB reported on the root RP or sharing RP providing DISK_GB but not a mix of the two for a single compute node?\n\nSame as above.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7a756328569d0d98a12c3aa0a1dcf66127ff3fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_7eede2ed", "line": 89, "updated": "2019-06-04 21:39:47.000000000", "message": "what's going to happen to instances that migrate (unforced) >=2.68? The second use case sort of implies it might work?", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "7faddb67_fdf8eb49", "line": 89, "in_reply_to": "9fb8cfa7_0cc2c085", "updated": "2019-07-09 06:59:41.000000000", "message": "Agree, will update specs to include above possible cases as well.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c130b54104d08fbc662877d7ed0b844cfa791dc6", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_f85d0b79", "line": 89, "in_reply_to": "9fb8cfa7_4eceb082", "updated": "2019-06-25 17:54:14.000000000", "message": "But does this result in the infamous \"doubling of allocations\" on the shared storage?\n\nI think we need a bit of a deeper dive here to explain how migration/evacuation will work.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "fecec9b9e179f106b37af664f3464ebf1b923308", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_4eceb082", "line": 89, "in_reply_to": "9fb8cfa7_7eede2ed", "updated": "2019-06-12 08:33:42.000000000", "message": "Yes, it works as the call goes through scheduler where allocations are moved from source to destination.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "7faddb67_fddf8bd3", "line": 89, "in_reply_to": "9fb8cfa7_f85d0b79", "updated": "2019-07-09 06:59:41.000000000", "message": "For all move operations like Live migration, cold migration and resize, it will result in double allocations during the process of move operation. After the move operation is successful the migration record will be cleaned off thereby deleting all  associated allocations.\n\nIn case of evacuation, shelve/unshelve and rebuild, DISK_GB resource allocated from shared storage resource provider will not be doubled.\n\nWe have performed all actions on instance to confirm the behavior of how the allocations works. You can see the result here : http://paste.openstack.org/show/754191\n\nI will update specs to describe how allocations will work for different instance actions.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b480cbfdcd44af018fdcfeddac8ccbc0a86d62bd", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_0cc2c085", "line": 89, "in_reply_to": "9fb8cfa7_f85d0b79", "updated": "2019-07-02 08:17:00.000000000", "message": "Yeah, at least we have to describe what will happen if:\na) the source compute gets the DISK_GB from the same sharing RP than the dest compute. I think we can avoid doubling of allocation, and avoid copying the disk content.\nb) the source compute gets the DISK_GB from the a different sharing RP than the dest compute. I think we need to double the allocation as they are on different sharing RPs. Also we have to copy the disk content as well.\n\nMaybe similar cases needs to be considered like moving from a compute with sharing to a compute with local DISK_GB and vice versa.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "7a756328569d0d98a12c3aa0a1dcf66127ff3fb5", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_9ea2169a", "line": 98, "range": {"start_line": 96, "start_character": 0, "end_line": 98, "end_character": 73}, "updated": "2019-06-04 21:39:47.000000000", "message": "It will update them to what? If there's no local storage, they should be zeros, right?", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 14070, "name": "Eric Fried", "email": "openstack@fried.cc", "username": "efried"}, "change_message_id": "c130b54104d08fbc662877d7ed0b844cfa791dc6", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_18649f21", "line": 98, "range": {"start_line": 96, "start_character": 0, "end_line": 98, "end_character": 73}, "in_reply_to": "9fb8cfa7_07e5b6dc", "updated": "2019-06-25 17:54:14.000000000", "message": "I think this is has been one of the major sticking points of shared disk reporting, and is something we need to get right in this spec if it's going to be worth moving forward with.\n\nAttempting to calculate used and available storage in the cloud by asking the nodes - which is what we do today IIUC - is probably not the right long-term approach.\n\nI think there was talk in the past about simply deprecating the GET /os-hypervisors/detail API and obtaining the information directly from Placement.\n\nNeed someone who remembers more about that to weigh in.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "7faddb67_dd2e4fa4", "line": 98, "range": {"start_line": 96, "start_character": 0, "end_line": 98, "end_character": 73}, "in_reply_to": "9fb8cfa7_18649f21", "updated": "2019-07-09 06:59:41.000000000", "message": "Using following combinations of placement APIs should give us the same information as \"GET /os-hypervisors\" and \"GET /os-hypervisors/detail\" APIs.\n\n1. \"GET /resource_providers\"\n2. \"GET /resource_providers/{uuid}/inventories\" - For standard resource classes, mainly VCPU, Memory, DISK_GB\n3. \"GET /resource_providers/{uuid}/usages\" - For standard resource classes, mainly VCPU, Memory, DISK_GB\n\nSo deprecating \"GET /os-hypervisors/detail\" API and using placement APIs is a good direction.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "5b23c196595ccf5d758b4d463c4cfdb2d53addf8", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_07e5b6dc", "line": 98, "range": {"start_line": 96, "start_character": 0, "end_line": 98, "end_character": 73}, "in_reply_to": "9fb8cfa7_2efb3c79", "updated": "2019-06-17 01:52:00.000000000", "message": "a) \"local_gb\" and \"free_disk_gb\" set to 0\n\nb) \"local_gb\"  set to shared storage RP disk_GB inventory and \"free_disk_gb\" set to (total inventory - usage of shared storage RP for disk_GB)\n\nIn the above two solutions, it's not possible for operators to see the total capacity of Disk_GB inventory and total available Disk_GB inventory of the entire cluster unless we return which hypervisors are using shared storage RP in the \"GET /os-hypervisors/{hypervisor_id}\", \"GET /os-hypervisors/detail\" APIs.\n\nIf we store sharing storage RP \"uuid\" in the compute node db table, I think we can make that thing possible. In that case, we can return something like this:\n\n  {\n    \"hypervisor\": {\n        \"cpu_info\": {\n           .......\n        },\n        \"free_disk_gb\": 0,\n        \"local_gb\": 0,\n        \"local_gb_used\": 0,\n        \"sharing_storage_resource_provider_uuid\" = <uuid>,\n        \"sharing_storage\": {\n                \"free_disk_gb\": 2000,\n                \"local_gb\": 2048,\n                \"local_gb_used\": 48,\n            \n        }\n       \n        ......\n  }\n\nIn case of \"GET /os-hypervisors/detail\" API, the same \"sharing_storage\" block will repeated in list of hypervisors which are configured with the same sharing storage resource provider in placement but using sharing_storage_resource_provider_uuid, it should be possible to calculate total capacity of DISK_GB inventory and total available DISK_GB inventory of the entire cluster accurately.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "fecec9b9e179f106b37af664f3464ebf1b923308", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_2efb3c79", "line": 98, "range": {"start_line": 96, "start_character": 0, "end_line": 98, "end_character": 73}, "in_reply_to": "9fb8cfa7_9ea2169a", "updated": "2019-06-12 08:33:42.000000000", "message": "It's possible to find out whether a compute node is configured to use DISK_GB from a shared storage resource provider, so it's easy to set \"local_gb\" and \"free_disk_gb\" to 0.\n\nI'm checking if it's possible to get the disk_gb usage for a shared storage resource provider where compute node disk usage calculations are done. If that's possible, we can do something like this:\n\n  For example:\n  Shared storage \"XYZ\" disk capacity: 100 GB\n\n\n  Compute A: 10 instances using 1 GB each i.e. 10GB\n  Compute B: 20 instances using 1 GB each i.e. 20GB\n\n  Compute A and B are configured to use disk_GB from \"XYZ\" shared storage resource provider.\n\n  Compute A:\n  local_gb: 100 GB\n  free_disk_gb: local_gb - (disk_gb usage of shared resource provider) = 100 - 30 =   80GB\n  local_gb_used: 10GB\n\n\n  Compute B:\n  local_gb: 100 GB\n  free_disk_gb: local_gb - (disk_gb usage of shared resource provider) = 100 - 30 = 80GB\n  local_gb_used: 20GB\n\nI will update specs accordingly based on my above findings.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b480cbfdcd44af018fdcfeddac8ccbc0a86d62bd", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_0c47201f", "line": 121, "updated": "2019-07-02 08:17:00.000000000", "message": "I think it will be something similar to what we did with nested allocation + force in https://review.opendev.org/#/c/605785/", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_1f396e3e", "line": 121, "in_reply_to": "9fb8cfa7_0c47201f", "updated": "2019-07-09 06:59:41.000000000", "message": "In the beginning, we thought we will need to implement this check to return 400 error but later noticed becoz of the same patch, it's returning 400 error if it finds source compute node has allocations more than one resource provider[1].\n\n[1] : https://review.opendev.org/#/c/605785/16/nova/scheduler/utils.py@539", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "f9bce514f1004b28a99a043ca275c7706046480a", "unresolved": false, "patch_set": 5, "id": "7faddb67_58902a4f", "line": 121, "in_reply_to": "9fb8cfa7_1f396e3e", "updated": "2019-07-09 10:27:18.000000000", "message": "Cool. Then the original patch handles this case as well.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "b480cbfdcd44af018fdcfeddac8ccbc0a86d62bd", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_4c5af8f1", "line": 161, "range": {"start_line": 159, "start_character": 3, "end_line": 161, "end_character": 75}, "updated": "2019-07-02 08:17:00.000000000", "message": "Do we need nova host aggregates to make this work? I think what was described above can work if only placement aggregates are created without having nova host aggregates as well.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "34f56fcb110c16699af4d08a8a1def9a30ca8892", "unresolved": false, "patch_set": 5, "id": "9fb8cfa7_ff69fa25", "line": 161, "range": {"start_line": 159, "start_character": 3, "end_line": 161, "end_character": 75}, "in_reply_to": "9fb8cfa7_4c5af8f1", "updated": "2019-07-09 06:59:41.000000000", "message": "Agree, it can work without nova host aggregates. I will update this point in the next PS.", "commit_id": "8cd4d8ccdcbcdeefa4fccac0d4b24f11321c2432"}], "specs/ussuri/approved/support-shared-storage-resource-provider.rst": [{"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f5cc30bc", "line": 84, "range": {"start_line": 84, "start_character": 0, "end_line": 84, "end_character": 67}, "updated": "2019-10-28 12:30:49.000000000", "message": "by whom? Or did something else missing from this sentence?\n\nOr framing the question another way. Who will report the DISK_GB inventory of the sharing RP? I guess that needs to be outside of nova-compute as more than one nova-compute seeing the disk from a single sharing RP. \n\nI think the DISK_GB usage of the instances on a given nova-compute will be reported by the nova-compute to placement against the sharing RP.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_d55574c3", "line": 142, "range": {"start_line": 140, "start_character": 70, "end_line": 142, "end_character": 58}, "updated": "2019-10-28 12:30:49.000000000", "message": "Fair scoping. Thanks for explaining it.\n\nDoes it still mean that only the allocation will be doubled in this case but not the usage as there won't be any disk copying?", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "3842baffeac723725fbf3462f66b598b51a2cca1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_28ed51ef", "line": 142, "range": {"start_line": 140, "start_character": 70, "end_line": 142, "end_character": 58}, "in_reply_to": "3fa7e38b_d55574c3", "updated": "2019-11-05 08:28:23.000000000", "message": "That's true. If both source and destination compute node are sharing DISK_GB from a shared storage resource provider, the instance disks files won't be copied.\n\nIf you check the resource consumption on the placement side using ``openstack resource provider usage show <resource provider id>``,  it will show double allocations for DISK_GB, in fact, it will show double allocations for all resources (VPCU/memory/DIKS_GB etc).", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f528b033", "line": 143, "updated": "2019-10-28 12:30:49.000000000", "message": "What about detecting the above situations and deciding on when the disk needs to be copied between computes? Does it needs to be changed? I think today we are not copying disk if the local disk is on shared between the compute. But I'm not sure we handle all the above cases.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "3842baffeac723725fbf3462f66b598b51a2cca1", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_68d02920", "line": 143, "in_reply_to": "3fa7e38b_f528b033", "updated": "2019-11-05 08:28:23.000000000", "message": "I think check_instance_shared_storage of compute manager is called during the move operations to check whether there is a need to copy the instance disk files from source to destination. I will confirm if it's getting called for all above situations.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_551744ef", "line": 147, "range": {"start_line": 147, "start_character": 27, "end_line": 147, "end_character": 77}, "updated": "2019-10-28 12:30:49.000000000", "message": "of the compute RP.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_55c5045b", "line": 151, "updated": "2019-10-28 12:30:49.000000000", "message": "This might break external clients whom currently relay on the disk information in the response from computes with shared disk. Do we plan to introduce a new microversion to signal this semantic change?", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_95cffc7d", "line": 155, "updated": "2019-10-28 12:30:49.000000000", "message": "We cannot simply deprecated the os-hypervisors/detail API as placement does not have the same amount of information. At least the information behind the following information are missing from placement: cpu_info, current_workload, host_ip, running_vms (this can be calculated with GET\n/os-hypervisors if version >2.53).", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_75c28055", "line": 158, "range": {"start_line": 157, "start_character": 0, "end_line": 158, "end_character": 51}, "updated": "2019-10-28 12:30:49.000000000", "message": "This is almost already fixed with the patch https://review.opendev.org/#/c/688979/ Please refer to it.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f5abd084", "line": 200, "updated": "2019-10-28 12:30:49.000000000", "message": "You suggested to deprecate REST APIs above and also the change in the disk reporting changes the semantics of existing REST APIs.", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "7241ec56309ef53c67a16d59d6a0f0a8fc891e96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_559ae46e", "line": 254, "range": {"start_line": 254, "start_character": 23, "end_line": 254, "end_character": 32}, "updated": "2019-10-28 12:30:49.000000000", "message": "is it Ussuri now?", "commit_id": "8676b494a3ea2516c45d07180642f3e89c472fd3"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "43a502afa76e6e139f63b66424fc0dc4ce6afaff", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_84299b8a", "line": 232, "updated": "2019-11-06 06:35:52.000000000", "message": "Instead of providing shared disk details, I'd rather prefer to return a single UUID of the shared resource so that operators would know between computes which ones are sharing the same resource.", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "7ab178a21543b3a59da00b5a80b6f5c34ff257ca", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a473774e", "line": 232, "in_reply_to": "3fa7e38b_64cfbf8b", "updated": "2019-11-06 07:02:04.000000000", "message": "Err, we said the compute API will have to query Placement to get the RP UUID of the shared storage.\nIt's an admin API for a very specific usecase, it's palatable to have a little extra delay on the API response.", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "a23c803c5a83f66f6678bdb94e874ac523f806e9", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_64cfbf8b", "line": 232, "in_reply_to": "3fa7e38b_84299b8a", "updated": "2019-11-06 06:49:27.000000000", "message": "We said at the PTG we're even up for just dropping disk information.", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 1011, "name": "Tushar Patil", "email": "tushar.vitthal.patil@gmail.com", "username": "tpatil"}, "change_message_id": "a31c839b6081479e0f70d7190fc6f24ae76e555a", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_2bfd0b3b", "line": 232, "in_reply_to": "3fa7e38b_a473774e", "updated": "2019-11-07 01:23:21.000000000", "message": "Let me clear my understanding:\n\n/os-hypervisors/detail API response will drop disk related parameters from the response and instead it will provide the resource provider uuid providing the disk resource to the compute node. The caller of  /os-hypervisors/detail aPI will then call placement API to get the disk details. So it's possible the disk resource could be consumed from a  compute node resource provider or a share storage resource provider.\n\nSo in the new microversion, the response will look something like this:\n\n     \"hypervisors\": [\n        {\n            \"cpu_info\": {\u2026},\n             \u2026..\n            \"disk_gb\": {\n                    \"uuid\": \"3fb4b0e3-7764-444e-b25f-ec8829dc0aab\", \n                     \"links\": [\n                                     {\n                                         \"href\": \"/placement/resource_providers/3fb4b0e3-7764-444e-b25f-ec8829dc0aab\", \"rel\": \"self\"\n                                     },\n                                     {\n                                         \"href\": \"/placement/resource_providers/3fb4b0e3-7764-444e-b25f-ec8829dc0aab/inventories\", \"rel\": \"inventories\"\n                                     }\n                                     {\"href\": \"/placement/resource_providers/3fb4b0e3-7764-444e-b25f-ec8829dc0aab/usages\", \"rel\": \"usages\"\n                                     }\n                      ],\n                      \"name\": \"shared_storage_node_1 OR compute node resource provider\"\n              }\n          }\n        ]\n\n\nIn the above response, dropped \"free_disk_gb\", \"local_gb\" and \"local_gb_used\" parameters and add a new parameter \"disk_gb\".", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "43a502afa76e6e139f63b66424fc0dc4ce6afaff", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_24530719", "line": 362, "updated": "2019-11-06 06:35:52.000000000", "message": "you also need to specify to the compute node which disk to not care because it's shared.", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "43a502afa76e6e139f63b66424fc0dc4ce6afaff", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_04bfebfc", "line": 391, "updated": "2019-11-06 06:35:52.000000000", "message": "Operators need to create the shared RP, create DISK_GB inventory on it.\nMapping has to be done after that.\n\nAll those ops are post-upgrade, post-install", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "43a502afa76e6e139f63b66424fc0dc4ce6afaff", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_e4c16f83", "line": 413, "updated": "2019-11-06 06:35:52.000000000", "message": "we said you need a config option to say \"please ignore DISK_GB from the provider\".", "commit_id": "1ed23ec8b6424ccafbe21917d66ad1ed62e6e7b1"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "ba031672ca87834a2bca6b7939af21bb3c3dd370", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_e4cc6b8b", "line": 49, "updated": "2019-12-09 15:20:59.000000000", "message": "Cool with the above.", "commit_id": "66e8a535d42cd67c6fa5524c8b38d489568752dc"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1e8cdb0ab6a51f8a6a28cc5a7b0e7caecac8b578", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_8a851d0d", "line": 246, "range": {"start_line": 243, "start_character": 47, "end_line": 246, "end_character": 31}, "updated": "2019-11-27 10:07:03.000000000", "message": "Could you plese link to the placement spec proposing the new API when such spec is proposed?", "commit_id": "66e8a535d42cd67c6fa5524c8b38d489568752dc"}, {"author": {"_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, "change_message_id": "1e8cdb0ab6a51f8a6a28cc5a7b0e7caecac8b578", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_6a84610c", "line": 361, "range": {"start_line": 360, "start_character": 0, "end_line": 361, "end_character": 16}, "updated": "2019-11-27 10:07:03.000000000", "message": "The client could go and fetch the disk inventory, based on the link, from placement and show it to the user.", "commit_id": "66e8a535d42cd67c6fa5524c8b38d489568752dc"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "ba031672ca87834a2bca6b7939af21bb3c3dd370", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_0478a728", "line": 413, "updated": "2019-12-09 15:20:59.000000000", "message": "++", "commit_id": "66e8a535d42cd67c6fa5524c8b38d489568752dc"}, {"author": {"_account_id": 7166, "name": "Sylvain Bauza", "email": "sbauza@redhat.com", "username": "sbauza"}, "change_message_id": "ba031672ca87834a2bca6b7939af21bb3c3dd370", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_848c9735", "line": 421, "range": {"start_line": 421, "start_character": 2, "end_line": 421, "end_character": 7}, "updated": "2019-12-09 15:20:59.000000000", "message": "well, cdent is no longer around in OpenStack AFAIK", "commit_id": "66e8a535d42cd67c6fa5524c8b38d489568752dc"}]}}, "openstack%2Fkolla-ansible~stable%2Ftrain~Ieae3778a02f1b79023b4f1c20eff27b37f481077": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:29:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-13 16:29:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "openstack%2Fovsdbapp~master~I753d879c85ea862102a42fcf789611c78f1113b5": {"owner_id": 27822, "owner_name": "pengyuesheng", "owner_email": "pengyuesheng@gohighsec.com", "labels": [{"value": 2, "date": "2019-10-04 19:53:44.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5756, "name": "Terry Wilson", "email": "twilson@redhat.com", "username": "otherwiseguy"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27822, "name": "pengyuesheng", "email": "pengyuesheng@gohighsec.com", "username": "pengyuesheng"}, {"value": -1, "date": "2019-10-05 03:01:53.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}], "comments": {"test-requirements.txt": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "2d64f68201a63f5fcf27b237e3c86fe27e63a720", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_960bd122", "line": 11, "updated": "2019-10-05 03:01:53.000000000", "message": "We use doc/requirements.txt now, so it is unnecessary to add them to test-requirements.txt", "commit_id": "80e6ac8c1082db3619fd582bebc172c3163f467d"}]}}, "openstack%2Foslo.limit~master~I1bda5a8ccc9df040bf88df6bf8f428b6502f4542": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:27:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpuppet-zaqar~master~I3a73430c323dadcd8ddfaa25fcddc3d30e5395e5": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-ovn~master~I74601a2cae6b207b678713826846664202e8bd19": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Freleases~master~I01a4c1121192e3dd022c0235a3429e08e6437149": {"owner_id": 19134, "owner_name": "Eyal", "owner_email": "eyalb1@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 16:30:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-02-13 16:30:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 17:01:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I520d75f39ef5f458e085df3f56573af68258811f": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 2, "date": "2020-02-13 16:37:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-02-13 17:01:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, "change_message_id": "042506685a362bbd7af4d62ef26eefc586a5298e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_644ccd96", "line": 10, "range": {"start_line": 10, "start_character": 30, "end_line": 10, "end_character": 31}, "updated": "2020-02-13 16:41:49.000000000", "message": "\"Therefore we need to add him again as a liaison.\nThis also requires us to add a fake IRC nick, in order to pass the releases-tox-list-changes job, which requires\nan irc nick in the liaison structure.\n\nAs Eyal doesn't have an irc nickname in governance either, we set it to N/A for now.\"", "commit_id": "6b4a656d8e935f60a57d24a82f51ec360fc22d84"}]}}, "openstack%2Fpuppet-openstack_extras~master~I9fc0a7c303b9d3ffd5a2d4d1312ebc62d95eb3a6": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-placement~master~Ica05f14173171e3c53934e042f28ff01aaa12d62": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tempest~master~I2fba2d93acfe5f6c526e78f8b4fe7688e718d8c9": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-senlin~master~Idca164ca1d7a0ca9fc845f574569c414c32fc07d": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:18.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-sahara~master~Icb7f6b8ccce997b6cddc90ef2bbbf1b67d806498": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-oslo~master~Icffb67f3a760875b6468d51258023200b7a84d9d": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:09:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-panko~master~Iac4f37840ebdf4d717f4011138b4efa1259a6655": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-vswitch~master~Id28296919e54c81bd062be4627e4910739d5e4ee": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:09:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-rally~master~I8804f179a763d31d0932662f31d381586eaefd67": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-swift~master~I926d17bb3d66b092d32ce22197e7a5b8995cf2f8": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Freleases~master~Ieb6c55d20bc122c366495cf0887cbd59cfea5f22": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 16:25:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": 2, "date": "2020-02-13 15:45:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-02-13 13:34:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpuppet-trove~master~Ic99f9c99200fdeda80f243df5a87e4ec48d4bad3": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-qdr~master~I489ebbbe8dc3dfd942d939b050eeb386b7d660ea": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:09:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tacker~master~I96353a55299a28b155a059359fa6aa58288efe6f": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-openstacklib~master~Ia11431e3ba1a03cc24755cf3bee963d837bb35a8": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-watcher~master~Ib6d02378cb0e0574f8cc9ddeb25720538eb189c6": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-vitrage~master~I0ec6896d9e90f7ddf06756c07892e337e8ee50cf": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:08:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-horizon~master~I688a5134c7adca63b926102a90bdf932b50cce6a": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-mistral~master~Icff8614c168b7278a4c7f710e37ab3160f37f9c5": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-freezer~master~I9bb8ef31b14af38229d49e12d84a9317ce06ae86": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:24.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-manila~master~I4d4f6d746eb69b8570b20661511c8d8aa2cdb786": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-ceilometer~master~Ic2876c3823cb6c9bc3ff735071811b6ea779c1b4": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-nova~master~I64b9f89d857515fca7096e8fb13cbb3d2910ca2d": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-magnum~master~Icc6ac1bb4e163d2af6ecb2ce11e77eb33478edf4": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-ec2api~master~Ia0c030ef703ef6500e3e7e75133b8579b763a7d7": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-neutron~master~I20f42532bf35ad62013bec3e5661bb51e7c576c5": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:01:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-congress~master~Ifc2543eb761c6faf83206b5ace3d022e88c4236c": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:49.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Fopenstack-armada-app~r%2Fstx.3.0~I98ce7cee6ef133dbbe70f7af89494ee6e6c021f9": {"owner_id": 28570, "owner_name": "zhipeng liu", "owner_email": "zhipengs.liu@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28558, "name": "Ghada Khalil", "email": "ghada.khalil@windriver.com", "username": "gkhalil"}, {"value": 2, "date": "2020-02-13 02:17:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-02-13 03:24:18.000000000", "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {}}, "openstack%2Fpuppet-aodh~master~I2cc75c80e2b951bd6ca7b27b507461f8f358c4cb": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:01:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-ironic~master~Ic23d7fd8a6bc8b9b7c9ac36bef749f757deb7633": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-cloudkitty~master~I6e7bd7317a0f7a8e8cc001e56bafbf537f55253f": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-designate~master~I4acaf89e7fd0ad72309b30a54f53143dcd882c1c": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:01:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-murano~master~I006a06cb0d574523837ee6ca4ec6ddf73d913d50": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-gnocchi~master~I9b5f2f7b411592fcc58bfee7cc177efa268ba15d": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-cinder~master~I9d1c12b55e84f2196f4af33fd5b8d1ac10d7d60b": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-octavia~master~I707e2af73633caf741b86ddaa0be10894a4f20d2": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 07:14:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-13 17:01:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-glare~master~I05d7a1c501e6b3b77b5d1a88a31d21a656439218": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:08.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-monasca~master~I9aae9794d3de1983144e8dd60dad5b84add17344": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:30.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-heat~master~I4fbd86dc23367bb06029087e2db507103734142b": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:01:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-glance~master~Icdde54b8eb490e0b52cd141d4ed3aaa96d9e060b": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:01:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-keystone~master~Ieb1e93a4c79b504ef6502a55dad6856544ee3285": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-barbican~master~Ibe8a68fc06cf78cfba87f980207ef64a3e9f4758": {"owner_id": 9414, "owner_name": "zhongshengping", "owner_email": "chdzsp@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 17:02:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Fvmware-nsxlib~master~Ic30b8075cd46632ea68f04c15028b804f63b3947": {"owner_id": 24247, "owner_name": "Anna Khmelnitsky", "owner_email": "akhmelnitsky@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 08:05:18.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2020-02-13 16:47:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 261, "name": "Salvatore Orlando", "email": "salv.orlando@gmail.com", "username": "salvatore-orlando"}, {"value": 0, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla-ansible~master~I46c564f3d3e53c54148186fbadfd7380c4f2fd30": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 14:38:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-13 16:28:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {"zuul.d/deploy-guide.yaml": [{"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "a562742210e6a687bd9ca05286a29d53c904f6bc", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_d85601fa", "line": 9, "range": {"start_line": 6, "start_character": 12, "end_line": 9, "end_character": 23}, "updated": "2020-02-10 17:00:39.000000000", "message": "The original job doesn't have a files attribute. Why are we adding one?", "commit_id": "2564b391ed35429d425f04b965c96b3248207dbc"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "779dcaa4b4d1b1d1449df92ff4cf25af523bb93e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ca00596c", "line": 9, "range": {"start_line": 6, "start_character": 12, "end_line": 9, "end_character": 23}, "in_reply_to": "3fa7e38b_89835255", "updated": "2020-02-11 12:55:12.000000000", "message": "The only other thing would be to follow ooo and osa and build a separate guide for deployers and link to it. Otherwise customize like here.", "commit_id": "2564b391ed35429d425f04b965c96b3248207dbc"}, {"author": {"_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, "change_message_id": "019c95531394ebd7e537d7ba23f9ad6e7a8ff6cd", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fbd417be", "line": 9, "range": {"start_line": 6, "start_character": 12, "end_line": 9, "end_character": 23}, "in_reply_to": "3fa7e38b_d85601fa", "updated": "2020-02-10 17:57:42.000000000", "message": "The original has: https://opendev.org/openstack/openstack-zuul-jobs/src/commit/8f1859f4a32e7786c3948e4f435dbf993919d57f/zuul.d/project-templates.yaml#L1264-L1286", "commit_id": "2564b391ed35429d425f04b965c96b3248207dbc"}, {"author": {"_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, "change_message_id": "7f90ed6a3623e7d0bf94094cf14abeaf58e42a16", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_89835255", "line": 9, "range": {"start_line": 6, "start_character": 12, "end_line": 9, "end_character": 23}, "in_reply_to": "3fa7e38b_fbd417be", "updated": "2020-02-11 10:42:14.000000000", "message": "I just tried symlinking the files to see if zuul would pick them up but it didn't seem to work.", "commit_id": "2564b391ed35429d425f04b965c96b3248207dbc"}]}}, "openstack%2Fcharm-keystone~master~Ib8bb0d1f568aef208f35f50fcc5ccd7a73266f11": {"owner_id": 30670, "owner_name": "Camille Rodriguez", "owner_email": "camille.rodriguez@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcharm-glance-simplestreams-sync~master~Ic747fcb727367fd30070532817c281ef42ebccb1": {"owner_id": 29444, "owner_name": "Alexandre Gomes", "owner_email": "alexandre.gomes@canonical.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29444, "name": "Alexandre Gomes", "email": "alexandre.gomes@canonical.com", "username": "alejdg"}, {"value": -1, "date": "2020-02-13 16:42:43.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 20805, "name": "David Ames", "email": "david@davam.net", "username": "thedac"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}], "comments": {"files/glance-simplestreams-sync.py": [{"author": {"_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}, "change_message_id": "9eb061840fefe5eb5a7409cbc5e2c8ea6da79337", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6a9656a3", "line": 216, "range": {"start_line": 216, "start_character": 42, "end_line": 216, "end_character": 58}, "updated": "2019-12-20 11:39:18.000000000", "message": "if we're switching to use auth_* please also switch service_protocol -> auth_protocol", "commit_id": "9725598a6ec5e6d585072df4f7714a30f9c0f607"}, {"author": {"_account_id": 11805, "name": "Corey Bryant", "email": "corey.bryant@canonical.com", "username": "coreycb"}, "change_message_id": "b9f5827cf09e22cf7ab787d8c1b76c8e3a6d5e21", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_99bd96d8", "line": 226, "updated": "2019-12-13 12:58:55.000000000", "message": "It may not matter, but is OS_PUBLIC_AUTH_URL a known environment variable? https://docs.openstack.org/python-openstackclient/train/cli/man/openstack.html#environment-variables", "commit_id": "9725598a6ec5e6d585072df4f7714a30f9c0f607"}, {"author": {"_account_id": 29444, "name": "Alexandre Gomes", "email": "alexandre.gomes@canonical.com", "username": "alejdg"}, "change_message_id": "03c4a76437249d48e9da4c6382451387f0f5f40f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f1983d77", "line": 226, "in_reply_to": "3fa7e38b_99bd96d8", "updated": "2019-12-16 21:54:06.000000000", "message": "I couldn't find it documented anywhere so I don't think it's known. But it's definitely linked to the public interface type of OS_INTERFACE[1].\n\n[1]https://docs.openstack.org/python-openstackclient/train/cli/man/openstack.html#envvar-OS_INTERFACE", "commit_id": "9725598a6ec5e6d585072df4f7714a30f9c0f607"}, {"author": {"_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}, "change_message_id": "9eb061840fefe5eb5a7409cbc5e2c8ea6da79337", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2a6b7eb9", "line": 226, "in_reply_to": "3fa7e38b_f1983d77", "updated": "2019-12-20 11:39:18.000000000", "message": "I think Corey is correct - this is not an environment variable that's used by OSC/keystoneauth1.", "commit_id": "9725598a6ec5e6d585072df4f7714a30f9c0f607"}]}}, "airship%2Fdeckhand~master~I320d02bd987bd8af4448694db2f193f83b010a0f": {"owner_id": 29144, "owner_name": "PRATEEK REDDY DODDA", "owner_email": "prateek.reddy.dodda@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 2, "date": "2020-02-13 15:46:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 29131, "name": "diwakar thyagaraj", "email": "diwakar.chitoor.thyagaraj@att.com", "username": "dt241s@att.com"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 2, "date": "2020-02-12 23:06:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"tools/gate/playbooks/airskiff-deploy.yaml": [{"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "fc4b7164804d84672ebaf0bd42abcc7b15fc5e4d", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1291a945", "line": 43, "range": {"start_line": 33, "start_character": 0, "end_line": 43, "end_character": 79}, "updated": "2020-02-12 20:55:22.000000000", "message": "Shouldn't these be run in an order that matches the script prefix numbering? i.e., 010 should run before 015 - otherwise the script prefix should be updated to be lower than 010?", "commit_id": "33f58ecef74ad15b67642bd9fc05ce87e525d656"}, {"author": {"_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, "change_message_id": "797e0a0e459e92d114ff15c486317d1e3e093c9b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b214559a", "line": 43, "range": {"start_line": 33, "start_character": 0, "end_line": 43, "end_character": 79}, "in_reply_to": "3fa7e38b_1291a945", "updated": "2020-02-12 21:06:08.000000000", "message": "Thanks Craig for reviewing. Apparmor changes aren't applying if we run after deploying k8s.", "commit_id": "33f58ecef74ad15b67642bd9fc05ce87e525d656"}, {"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "db2ae382500714115ee70004c2c1865442b19ae0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f27f2db9", "line": 43, "range": {"start_line": 33, "start_character": 0, "end_line": 43, "end_character": 79}, "in_reply_to": "3fa7e38b_b214559a", "updated": "2020-02-12 21:14:08.000000000", "message": "apparmor setup script shoudl be renamed then. Otherwise, anyone who takes this upstream code will think from this numbering that 015 script runs after 010 script. Rename 015-setup-apparmor.sh to something like 009-setup-apparmor.sh", "commit_id": "33f58ecef74ad15b67642bd9fc05ce87e525d656"}, {"author": {"_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, "change_message_id": "6a93a52861e9d71217489da72ea9aa584b446598", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_52488188", "line": 35, "range": {"start_line": 35, "start_character": 46, "end_line": 35, "end_character": 67}, "updated": "2020-02-12 21:18:27.000000000", "message": "You'll also need to rename this file in the repo to match. Right now this file doesn't exist in the repo.", "commit_id": "d351cba993fc8e75e8baf6ee45b8ee4dad77d0b7"}, {"author": {"_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, "change_message_id": "42ba8d3a7b09dfed68f217edbf13164f6a359ff0", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f21bad80", "line": 35, "range": {"start_line": 35, "start_character": 46, "end_line": 35, "end_character": 67}, "in_reply_to": "3fa7e38b_52488188", "updated": "2020-02-12 21:20:26.000000000", "message": "sure Craig. Working on that", "commit_id": "d351cba993fc8e75e8baf6ee45b8ee4dad77d0b7"}]}}, "openstack%2Ftripleo-quickstart-extras~master~I30bfbbd556f01f8d7d5bf0d2f6b784578295f669": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Frpm-packaging~master~I3595fb4aeb22e867cd7082734aeaed7235c9d232": {"owner_id": 13294, "owner_name": "Javier Pe\u00f1a", "owner_email": "jpena@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 16:13:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Freleases~master~I36457f910bd65043f6ac9fb96c1a24816a78572e": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 15:50:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 16:02:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 1, "date": "2020-02-13 15:22:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 1, "date": "2020-02-13 15:24:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fnetworking-ovn~stable%2Ftrain~Ice89e44e3ed666b0c07a46d5d7e4b321234e8e84": {"owner_id": 5756, "owner_name": "Terry Wilson", "owner_email": "twilson@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21798, "name": "Bernard Cafarelli", "email": "bcafarel@redhat.com", "username": "bcafarel"}], "comments": {}}, "openstack%2Ftooz~master~I821e2cd1f835ff1b46f334480ea8b53d6dd9205c": {"owner_id": 26867, "owner_name": "Nick Maludy", "owner_email": "nmaludy@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31615, "name": "punkrokk", "email": "jp.bourget@gmail.com", "username": "punkrokk"}], "comments": {}}, "openstack%2Fkolla~stable%2Fstein~Iefc2a7aaac5b12678d9a2b4de34c3b3cebebf419": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}], "comments": {}}, "openstack%2Fkolla~stable%2Ftrain~I56525cdc357e187ee6f3adae068a37cd013a9fce": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkolla~stable%2Fstein~I56525cdc357e187ee6f3adae068a37cd013a9fce": {"owner_id": 24072, "owner_name": "Marcin Juszkiewicz", "owner_email": "marcin.juszkiewicz+kolla@linaro.org", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Faodh~master~I0ec65608bd40352ce181b52648df70df707fe5cc": {"owner_id": 10607, "owner_name": "Alexandra Settle", "owner_email": "a.settle@outlook.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fkayobe~master~Id9e8d5f6d09f14d294cd493538780456f98c7dbe": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 13:22:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 0, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-13 14:36:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}], "comments": {"tools/sphinx8": [{"author": {"_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}, "change_message_id": "2dbf45884add8fd53dbbf995637c82d76fe4ead7", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_18d9c026", "line": 27, "updated": "2020-02-13 13:00:31.000000000", "message": "Should we be using mock in production code?", "commit_id": "2fcdff101f888ac310969e4e5e0f2e409288a71d"}, {"author": {"_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, "change_message_id": "17995127b016a086eee54fde403b9152c3bc2375", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f8406460", "line": 27, "in_reply_to": "3fa7e38b_18d9c026", "updated": "2020-02-13 13:22:11.000000000", "message": "This is linting code and the mock doesn't seem to prevent the job from running its checks.", "commit_id": "2fcdff101f888ac310969e4e5e0f2e409288a71d"}, {"author": {"_account_id": 28048, "name": "Will Szumski", "email": "will@stackhpc.com", "username": "jovial"}, "change_message_id": "cf500b121ef6aa7a18477f4573027d532a73ccd2", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ee9f3eaf", "line": 27, "in_reply_to": "3fa7e38b_f8406460", "updated": "2020-02-13 14:36:43.000000000", "message": "OK, it doesn't look that simple to construct a Sphinx object.", "commit_id": "2fcdff101f888ac310969e4e5e0f2e409288a71d"}]}}, "openstack%2Frequirements~master~I9c04cc42b2c2b584a55cfabe5f9feacdc6ce1054": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-02-13 13:44:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "starlingx%2Froot~master~I07e8ac83c6ed3d81e7bfad19da1eee1747d60802": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 19:20:43.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-13 15:00:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {}}, "openstack%2Fstackviz~master~I0e6d57a49643d588b1329a0c8f1dd7afc71d5bdf": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 2, "date": "2020-02-13 14:50:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}], "comments": {}}, "openstack%2Frpm-packaging~master~Ie18e9e92d2b9444338630bd47e9493aab846e144": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 14:22:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fopenstack-ansible-ops~master~I873e9d22d3c6bf687305c6620097b9140df72f89": {"owner_id": 31004, "owner_name": "Duncan Martin Walker", "owner_email": "Duncan.Walker02@bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 20:08:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-13 14:49:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "openstack%2Fopenstack-ansible-ops~master~Ib43c7e89e6b037f4a6c260f3375f491b65750bd4": {"owner_id": 31004, "owner_name": "Duncan Martin Walker", "owner_email": "Duncan.Walker02@bbc.co.uk", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 19:59:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25023, "name": "Jonathan Rosser", "email": "jonathan.rosser@rd.bbc.co.uk", "username": "jrosser"}, {"value": 2, "date": "2020-02-13 14:48:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28619, "name": "Dmitriy Rabotyagov", "email": "noonedeadpunk@gmail.com", "username": "noonedeadpunk"}], "comments": {}}, "starlingx%2Fupdate~master~I48b7caa2a41347ada6185e8d262d3b3d330dd37e": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 20:15:09.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-13 14:46:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}], "comments": {"extras/scripts/patch_build.sh": [{"author": {"_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, "change_message_id": "7a230f9d323dceaa1351491f041f4604637c340b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6e0eeed8", "line": 19, "updated": "2020-02-13 14:46:31.000000000", "message": "Tsk Tsk.  You go through all the work of fixing this script, and don't fix the trailing whitespace...", "commit_id": "05f4bcc83d95917c6e9015dea0cf7ae72ed8a98b"}]}}, "openstack%2Fglance~master~I4298bb835ec60b79a0010e52318ada19eb24ad80": {"owner_id": 9373, "owner_name": "Vlad Gusev", "owner_email": "vlad.esten@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-04 23:46:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 16006, "name": "goldyfruit", "email": "gaetan.trellu@incloudus.com", "username": "goldyfruit"}, {"value": 2, "date": "2020-02-04 04:34:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-02-13 12:33:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fnova~master~Ia6c184c31a980e4728b7309b2afaec4d9f494ac3": {"owner_id": 12356, "owner_name": "Vladyslav Drok", "owner_email": "vdrok@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-07 14:28:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 30112, "name": "Aditi Pai Dukle", "email": "Aditi.Dukle1@ibm.com", "username": "aditidukle", "inactive": true}, {"value": 1, "date": "2020-01-28 20:56:22.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:09:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4690, "name": "melanie witt", "display_name": "melwitt", "email": "melwittt@gmail.com", "username": "melwitt"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}, {"value": 0, "_account_id": 9555, "name": "Matthew Booth", "email": "mbooth@redhat.com", "username": "MatthewBooth"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab0f78b04294420b9d9f909535aff98d94f8e4df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e348ba8a", "line": 9, "range": {"start_line": 9, "start_character": 19, "end_line": 9, "end_character": 23}, "updated": "2020-01-27 20:09:20.000000000", "message": "are both", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "a4cfe876301710a79dfdc483c209cbddd6e4bebe", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a0b38e98", "line": 9, "range": {"start_line": 9, "start_character": 19, "end_line": 9, "end_character": 23}, "in_reply_to": "3fa7e38b_e348ba8a", "updated": "2020-01-28 11:17:11.000000000", "message": "Done", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab0f78b04294420b9d9f909535aff98d94f8e4df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_23525237", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 61}, "updated": "2020-01-27 20:09:20.000000000", "message": "Would it be easier to highlight the use case where Nova and Glance don't share the same backend during unshelve?", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "a4cfe876301710a79dfdc483c209cbddd6e4bebe", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_80b0d28e", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 61}, "in_reply_to": "3fa7e38b_23525237", "updated": "2020-01-28 11:17:11.000000000", "message": "for other backends I think flatten will raise NotImplementedError and it is handled in code already", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "4f9fc601e2761d5b749004bf4c43d84fb3907899", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c90115b7", "line": 11, "range": {"start_line": 9, "start_character": 0, "end_line": 11, "end_character": 61}, "in_reply_to": "3fa7e38b_80b0d28e", "updated": "2020-01-28 13:39:35.000000000", "message": "Apologies, I mean the when they are not using the same Ceph cluster.", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab0f78b04294420b9d9f909535aff98d94f8e4df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0331560a", "line": 16, "range": {"start_line": 16, "start_character": 11, "end_line": 16, "end_character": 12}, "updated": "2020-01-27 20:09:20.000000000", "message": "by catching ImageUnacceptable when requesting parent_info()", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "a4cfe876301710a79dfdc483c209cbddd6e4bebe", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_40ae5a2f", "line": 16, "range": {"start_line": 16, "start_character": 11, "end_line": 16, "end_character": 12}, "in_reply_to": "3fa7e38b_0331560a", "updated": "2020-01-28 11:17:11.000000000", "message": "Done", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "b660938ef26441acdfff59378d705e0d961a3967", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9bd83851", "line": 13, "range": {"start_line": 9, "start_character": 0, "end_line": 13, "end_character": 10}, "updated": "2020-01-28 20:56:22.000000000", "message": "I still think this could just describe more simple use case of when Glance and Nova are using different clusters but this is a supernit and not worth blocking the fix.", "commit_id": "65825ebfbd58920adac5e8594891eec8e9cec41f"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "1076a810b315e75f54c41f45684adc26b9f4f0e2", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_967ecddf", "line": 13, "range": {"start_line": 9, "start_character": 0, "end_line": 13, "end_character": 10}, "in_reply_to": "3fa7e38b_9bd83851", "updated": "2020-01-28 22:32:05.000000000", "message": "yup, got your point, will add this if will have to do another patchset", "commit_id": "65825ebfbd58920adac5e8594891eec8e9cec41f"}], "nova/virt/libvirt/imagebackend.py": [{"author": {"_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, "change_message_id": "ab0f78b04294420b9d9f909535aff98d94f8e4df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e35f5a4a", "line": 989, "range": {"start_line": 989, "start_character": 12, "end_line": 989, "end_character": 16}, "updated": "2020-01-27 20:09:20.000000000", "message": "I'd rather LOG.debug something here to highlight that we've skipped the call to flatten here as it's already flat.", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}, {"author": {"_account_id": 12356, "name": "Vladyslav Drok", "email": "vdrok@mirantis.com", "username": "vdrok"}, "change_message_id": "a4cfe876301710a79dfdc483c209cbddd6e4bebe", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_60a91623", "line": 989, "range": {"start_line": 989, "start_character": 12, "end_line": 989, "end_character": 16}, "in_reply_to": "3fa7e38b_e35f5a4a", "updated": "2020-01-28 11:17:11.000000000", "message": "Done", "commit_id": "a8e98b9279f5d115d8cffd5a7455a0126c00de50"}]}}, "openstack%2Fstackviz~master~If9745f95efbbabc98fd95ba4cf95a4e5687eac50": {"owner_id": 17001, "owner_name": "Tim Buckley", "owner_email": "timothy.jas.buckley@hpe.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 17001, "name": "Tim Buckley", "email": "timothy.jas.buckley@hpe.com", "username": "timothy.jas.buckley"}, {"value": 1, "date": "2020-02-13 14:16:19.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "0dbfc81df742469f651da8aba07b624b091c979f", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_2687a562", "line": 17, "range": {"start_line": 17, "start_character": 45, "end_line": 17, "end_character": 48}, "updated": "2016-08-26 09:34:52.000000000", "message": "double 'is' :)", "commit_id": "9d38331f9b7741cc345da0eb74a4a6be08f2d05b"}, {"author": {"_account_id": 17001, "name": "Tim Buckley", "email": "timothy.jas.buckley@hpe.com", "username": "timothy.jas.buckley"}, "change_message_id": "00d4d35e96f5ecf1630fe3c9b7988ef9ccbd162f", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_b7c5773d", "line": 17, "range": {"start_line": 17, "start_character": 45, "end_line": 17, "end_character": 48}, "in_reply_to": "fa7ab95a_2687a562", "updated": "2016-08-26 21:05:32.000000000", "message": "Whoops, fixed!", "commit_id": "9d38331f9b7741cc345da0eb74a4a6be08f2d05b"}], "package.json.refactor": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "fbdf61c99b9d46151d138c03a18c3796db9da9b8", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_4b4764a5", "line": 8, "range": {"start_line": 8, "start_character": 12, "end_line": 8, "end_character": 35}, "updated": "2020-02-13 14:16:19.000000000", "message": "https://opendev.org", "commit_id": "93b26705841ead2acfecb9e27eec7898eb67ad17"}], "src/index.js": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "0dbfc81df742469f651da8aba07b624b091c979f", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_4b12f463", "updated": "2016-08-26 09:34:52.000000000", "message": "Why do we need an execution bit for this file?", "commit_id": "9d38331f9b7741cc345da0eb74a4a6be08f2d05b"}, {"author": {"_account_id": 17001, "name": "Tim Buckley", "email": "timothy.jas.buckley@hpe.com", "username": "timothy.jas.buckley"}, "change_message_id": "00d4d35e96f5ecf1630fe3c9b7988ef9ccbd162f", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_17e1c3d0", "in_reply_to": "fa7ab95a_4b12f463", "updated": "2016-08-26 21:05:32.000000000", "message": "Huh, no idea how that happened, good catch. Fixed!", "commit_id": "9d38331f9b7741cc345da0eb74a4a6be08f2d05b"}], "src/style/index.scss": [{"author": {"_account_id": 5689, "name": "Masayuki Igawa", "email": "masayuki@igawa.io", "username": "igawa"}, "change_message_id": "0dbfc81df742469f651da8aba07b624b091c979f", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_26040514", "updated": "2016-08-26 09:34:52.000000000", "message": "Why do we need an execution bit for this file?", "commit_id": "9d38331f9b7741cc345da0eb74a4a6be08f2d05b"}]}}, "openstack%2Fos-brick~master~Idc281be7cf88eeeeefe260877a1fc275d94f2bed": {"owner_id": 4523, "owner_name": "Eric Harney", "owner_email": "eharney@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 20:13:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-28 20:45:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 27710, "name": "Cloudbase OSBrick Windows CI", "email": "windows_osbrick_ci@cloudbasesolutions.com", "username": "windows-osbrick-ci"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 16:58:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcinder~master~I1105c16caaf916e9101b6dca34a7f13936ce2240": {"owner_id": 4523, "owner_name": "Eric Harney", "owner_email": "eharney@redhat.com", "labels": [{"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 2, "date": "2020-02-12 17:38:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-28 20:43:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fnetworking-mlnx~master~Iff7b46e490ad043b7d7ddb9de36615c344ebc9f3": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 2, "date": "2020-02-11 19:13:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Fnetworking-mlnx~master~I47bd969e5d0622ac2c1f1f435650918e322e22f0": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 0, "_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, {"value": 2, "date": "2020-02-11 19:14:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "814f4c6b23789010f20a4de8344a5b153b08d583", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a7163d57", "line": 12, "range": {"start_line": 12, "start_character": 20, "end_line": 12, "end_character": 27}, "updated": "2020-01-28 17:38:28.000000000", "message": "probably 5.6.0 since 5.5.0 is already out and has a bug that all return the same VF index (0).", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cca038a7", "line": 12, "range": {"start_line": 12, "start_character": 40, "end_line": 12, "end_character": 53}, "updated": "2020-01-29 01:47:07.000000000", "message": "we are using pyroute2 0.5.7 with the set GUID commit [1] \n[1] - https://github.com/svinota/pyroute2/commit/a34fca40c722de4a0010bed5e1fb98445c4712e4", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "6db87efb3e283695bfe300c679efa49d99d6b4fa", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cafee002", "line": 12, "range": {"start_line": 12, "start_character": 20, "end_line": 12, "end_character": 27}, "in_reply_to": "3fa7e38b_a7163d57", "updated": "2020-01-28 17:39:37.000000000", "message": "unless backported to older kernels", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}], "networking_mlnx/eswitchd/utils/ib_utils.py": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ecd2d4fd", "line": 113, "range": {"start_line": 113, "start_character": 15, "end_line": 113, "end_character": 38}, "updated": "2020-01-29 01:47:07.000000000", "message": "it seem you should truncate to mac here because you return guid", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "c1dcd7bc7ef3f70b86b1e40ad02b661967e8a3db", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f568b0f3", "line": 113, "range": {"start_line": 113, "start_character": 15, "end_line": 113, "end_character": 38}, "in_reply_to": "3fa7e38b_ecd2d4fd", "updated": "2020-02-10 09:43:33.000000000", "message": "Done", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ac861c15", "line": 114, "range": {"start_line": 114, "start_character": 8, "end_line": 114, "end_character": 30}, "updated": "2020-01-29 01:47:07.000000000", "message": "can we catch just the relevant exception that can happen?", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ec6f345e", "line": 117, "range": {"start_line": 117, "start_character": 11, "end_line": 117, "end_character": 25}, "updated": "2020-01-29 01:47:07.000000000", "message": "why create macs_map again it defined in L109?", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "d0ead5b79d1013840ace0e7d161aed9505e2164c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4663241a", "line": 117, "range": {"start_line": 117, "start_character": 11, "end_line": 117, "end_character": 25}, "in_reply_to": "3fa7e38b_ec6f345e", "updated": "2020-02-09 16:09:02.000000000", "message": "in case it was partially populated via netlink i re-initialize the map.\n\nbut if i re-write this as proposed in the comment below then no need to re-initialize it.", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8cad6084", "line": 138, "range": {"start_line": 107, "start_character": 4, "end_line": 138, "end_character": 23}, "updated": "2020-01-29 01:47:07.000000000", "message": "Instead of using exception to do the fallback I would like to see:\n1. call get_guid_netlink\n2. if failed call get_guid_sysfs\n3. update macs_map dict", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "c1dcd7bc7ef3f70b86b1e40ad02b661967e8a3db", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a0c0b87e", "line": 138, "range": {"start_line": 107, "start_character": 4, "end_line": 138, "end_character": 23}, "in_reply_to": "3fa7e38b_0669acf5", "updated": "2020-02-10 09:43:33.000000000", "message": "Done", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "d0ead5b79d1013840ace0e7d161aed9505e2164c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0669acf5", "line": 138, "range": {"start_line": 107, "start_character": 4, "end_line": 138, "end_character": 23}, "in_reply_to": "3fa7e38b_8cad6084", "updated": "2020-02-09 16:09:02.000000000", "message": "sure, will do it like that.\nwas using the same pattern as when getting the guids. (which should probably be changed as well in a FUP)", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cc891825", "line": 146, "range": {"start_line": 146, "start_character": 11, "end_line": 146, "end_character": 34}, "updated": "2020-01-29 01:47:07.000000000", "message": "same question as above", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "c1dcd7bc7ef3f70b86b1e40ad02b661967e8a3db", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_60b64029", "line": 146, "range": {"start_line": 146, "start_character": 11, "end_line": 146, "end_character": 34}, "in_reply_to": "3fa7e38b_cc891825", "updated": "2020-02-10 09:43:33.000000000", "message": "Done", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8cf92b1d", "line": 39, "range": {"start_line": 38, "start_character": 0, "end_line": 39, "end_character": 60}, "updated": "2020-02-10 19:57:11.000000000", "message": "The GUID is per driver not CX. \nit should be GUID_FMT_MLNX4 and GUID_FMT_MLNX5", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c485afac", "line": 39, "range": {"start_line": 38, "start_character": 0, "end_line": 39, "end_character": 60}, "in_reply_to": "3fa7e38b_8cf92b1d", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ec3d3fb9", "line": 143, "updated": "2020-02-10 19:57:11.000000000", "message": "I think it better to be DEBUG", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a488b3c3", "line": 143, "in_reply_to": "3fa7e38b_ec3d3fb9", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2c3837c9", "line": 171, "range": {"start_line": 171, "start_character": 16, "end_line": 171, "end_character": 20}, "updated": "2020-02-10 19:57:11.000000000", "message": "I think it better to be DEBUG", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0480a79b", "line": 171, "range": {"start_line": 171, "start_character": 16, "end_line": 171, "end_character": 20}, "in_reply_to": "3fa7e38b_2c3837c9", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}], "networking_mlnx/internal/netdev_ops/api.py": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0cb970c3", "line": 64, "range": {"start_line": 62, "start_character": 0, "end_line": 64, "end_character": 19}, "updated": "2020-01-29 01:47:07.000000000", "message": "currently we assume node_guid === port_guid why not just return one of them? you are not using the node_guid in the code", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "d0ead5b79d1013840ace0e7d161aed9505e2164c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a65a184e", "line": 64, "range": {"start_line": 62, "start_character": 0, "end_line": 64, "end_character": 19}, "in_reply_to": "3fa7e38b_0cb970c3", "updated": "2020-02-09 16:09:02.000000000", "message": "that's purely to reflect the state of the system (there are two guids involved).\n\nbut i could just add that in a note and simplify the code.", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_01ac2434", "line": 67, "updated": "2020-02-10 19:57:11.000000000", "message": "missing return pep8 complains on this", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_24ae0331", "line": 67, "in_reply_to": "3fa7e38b_01ac2434", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}], "networking_mlnx/internal/netdev_ops/impl_pyroute2.py": [{"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "7a338902f9e30e956fa8a41296d457a32378d57f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c04c7f76", "line": 103, "updated": "2020-01-28 19:40:53.000000000", "message": "This should be ordered by vf idx, so just need to access the relevant index in the array", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "186078f5305c32096275bdbe1c6f85798d33ba15", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2ccd4c5d", "line": 112, "range": {"start_line": 111, "start_character": 0, "end_line": 112, "end_character": 55}, "updated": "2020-01-29 01:47:07.000000000", "message": "you can check for now  that they are the same and then return one of them. if they are not the same return error", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "c1dcd7bc7ef3f70b86b1e40ad02b661967e8a3db", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_403784b0", "line": 112, "range": {"start_line": 111, "start_character": 0, "end_line": 112, "end_character": 55}, "in_reply_to": "3fa7e38b_2ccd4c5d", "updated": "2020-02-10 09:43:33.000000000", "message": "Done", "commit_id": "2dff9ca3133516910732cb91e452512121565756"}, {"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_812b3499", "line": 117, "range": {"start_line": 115, "start_character": 0, "end_line": 117, "end_character": 66}, "updated": "2020-02-10 19:57:11.000000000", "message": "can we had the PF_name to the exception?", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ca2299a6", "line": 117, "range": {"start_line": 115, "start_character": 0, "end_line": 117, "end_character": 66}, "in_reply_to": "3fa7e38b_812b3499", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}], "networking_mlnx/internal/netdev_ops/netdev_ops_abs.py": [{"author": {"_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, "change_message_id": "c29f619ac2e6c14b684067844a9b7b934b734d25", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_216e00fe", "line": 60, "updated": "2020-02-10 19:57:11.000000000", "message": "can the comments be consistent between this and the method above guid or vf_guid.", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}, {"author": {"_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, "change_message_id": "32d8a9ac0566cf6d52d9daca656b743f889c396a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0add116d", "line": 60, "in_reply_to": "3fa7e38b_216e00fe", "updated": "2020-02-11 13:38:24.000000000", "message": "Done", "commit_id": "38bf6b771d6e1acc0196c44ad888fccb4c25a56d"}]}}, "x%2Fnetworking-mlnx~master~I7607f145d24864e3973f8dbc7debd6adba42d598": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 0, "_account_id": 28714, "name": "Adrian Chiris", "email": "adrianc@nvidia.com", "username": "adrianc"}, {"value": 2, "date": "2020-02-12 15:26:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 14:02:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14807, "name": "Lenny", "email": "lennyb@mellanox.com", "username": "lennyb"}], "comments": {}}, "x%2Fnetworking-mlnx~master~I14101d952dc154beb75445f8802a52170243ac61": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 2, "date": "2020-02-12 15:24:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}], "comments": {}}, "x%2Fnetworking-mlnx~master~I4e657173a2f44e834af211a8dc39df62da2aadf1": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25241, "name": "waleed mousa", "email": "waleedm@nvidia.com", "username": "waleedm"}, {"value": 2, "date": "2020-02-12 15:23:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fglance~master~Iac910e2c0a745d53464712b8714191c4275857c2": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 2, "date": "2020-02-12 14:19:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-13 12:17:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}], "comments": {}}, "openstack%2Fglance~master~I13eaab7ab013f44ce18465bdbdbe8052942570ff": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9373, "name": "Vlad Gusev", "email": "vlad.esten@gmail.com", "username": "s10"}, {"value": 0, "_account_id": 4393, "name": "Dan Smith", "email": "dms@danplanet.com", "username": "danms"}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:25:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-12 11:57:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}, {"value": 0, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"api-ref/source/v2/images-import.inc": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_adee571d", "line": 267, "range": {"start_line": 266, "start_character": 36, "end_line": 267, "end_character": 36}, "updated": "2020-02-11 14:04:25.000000000", "message": "NIT: or \"all_stores\"?", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_c45a88f3", "line": 267, "range": {"start_line": 266, "start_character": 36, "end_line": 267, "end_character": 36}, "in_reply_to": "3fa7e38b_adee571d", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4dc0037e", "line": 271, "range": {"start_line": 271, "start_character": 57, "end_line": 271, "end_character": 68}, "updated": "2020-02-11 14:04:25.000000000", "message": "NIT: maybe \"from the new stores\"", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_646b9485", "line": 271, "range": {"start_line": 271, "start_character": 57, "end_line": 271, "end_character": 68}, "in_reply_to": "3fa7e38b_4dc0037e", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}], "glance/api/v2/images.py": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_4d456315", "line": 116, "range": {"start_line": 116, "start_character": 56, "end_line": 116, "end_character": 63}, "updated": "2020-02-11 14:04:25.000000000", "message": "NIT: \"can be\"", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_79e01d94", "line": 116, "range": {"start_line": 116, "start_character": 56, "end_line": 116, "end_character": 63}, "in_reply_to": "3fa7e38b_4d456315", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cd5ab3f3", "line": 136, "range": {"start_line": 134, "start_character": 12, "end_line": 136, "end_character": 63}, "updated": "2020-02-11 14:04:25.000000000", "message": "Why this?", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f9240dc6", "line": 136, "range": {"start_line": 134, "start_character": 12, "end_line": 136, "end_character": 63}, "in_reply_to": "3fa7e38b_cd5ab3f3", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "aa28e77c7543bd1209d7cdb209792749c16a5376", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_11044e12", "line": 43, "range": {"start_line": 43, "start_character": 27, "end_line": 43, "end_character": 30}, "updated": "2020-02-12 15:25:48.000000000", "message": "I'd really rather we don't add more use of these noop's, but not a big deal.\n\nStill think we should just take the time to clean all of these _Lx out of here to clean things up.", "commit_id": "1754c9e2b085ba0fc37a4369488c92a40268997a"}], "glance/async_/flows/_internal_plugins/copy_image.py": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "59d87e878eb95a36f5922c49b458386c7ae107c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4cfcf771", "line": 61, "range": {"start_line": 52, "start_character": 0, "end_line": 61, "end_character": 21}, "updated": "2019-12-01 12:32:06.000000000", "message": "I think we need quite a bit more logic here. I'd prefer us to pick up from the node default store if the image is in there, otherwise we need to compare the locations and storeIDs known to the host, specially as the _copy_to_staging_store has no failure tolerance what so ever and we just break off the loop.", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6a522c90587edb6a062c0f61537a90f0f349ea45", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f21818ce", "line": 61, "range": {"start_line": 52, "start_character": 0, "end_line": 61, "end_character": 21}, "in_reply_to": "3fa7e38b_4cfcf771", "updated": "2019-12-02 07:30:37.000000000", "message": "Agree!!\n\nI will first check with the default_backend and then will iterated through conf.enabled_backends which will give us access to node specific stores.", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_adb17702", "line": 73, "range": {"start_line": 71, "start_character": 20, "end_line": 73, "end_character": 34}, "updated": "2020-02-11 14:04:25.000000000", "message": "This needs to be much higher than debug. After all we have image record that should be in the store, but the data is not found. ERROR or even CRITICAL, we are talking about potential dataloss here. (and debug messages should not be translated)", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_646154d4", "line": 73, "range": {"start_line": 71, "start_character": 20, "end_line": 73, "end_character": 34}, "in_reply_to": "3fa7e38b_adb17702", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_cd9b9376", "line": 84, "range": {"start_line": 83, "start_character": 16, "end_line": 84, "end_character": 28}, "updated": "2020-02-11 14:04:25.000000000", "message": "Ditto", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_e4830454", "line": 84, "range": {"start_line": 83, "start_character": 16, "end_line": 84, "end_character": 28}, "in_reply_to": "3fa7e38b_cd9b9376", "updated": "2020-02-11 18:06:35.000000000", "message": "Here we are iterating through all existing image locations if image is not present in default store, so if image is not present at any existing locations then I am throwing NotFound exception at line #86\n\nIf I log error here then suppose there are 5 stores and if image is not present in default store then it will log error message for all 4 stores. Do we really want this?", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "288f53518c7cae4304af61a09ca092f5e1aa5a86", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_94091b84", "line": 84, "range": {"start_line": 83, "start_character": 16, "end_line": 84, "end_character": 28}, "in_reply_to": "3fa7e38b_e4830454", "updated": "2020-02-11 21:42:12.000000000", "message": "If the image is not in a store where we have location record, then yes as that indicates that there is data loss in the deployment. We can have this as follow up 'though for getting milestone 2 out with this patch", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "945bdc8e5442f00de2cedf1f1bd0dcdb2f08e17e", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_8d8fdb1f", "line": 92, "range": {"start_line": 92, "start_character": 15, "end_line": 92, "end_character": 17}, "updated": "2020-02-11 14:04:25.000000000", "message": "debug messages should not be translated.", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "b94d8d126279cb527b565602a48cc389d741a421", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_449218a2", "line": 92, "range": {"start_line": 92, "start_character": 15, "end_line": 92, "end_character": 17}, "in_reply_to": "3fa7e38b_8d8fdb1f", "updated": "2020-02-11 18:06:35.000000000", "message": "Done", "commit_id": "73b0db773ef7c8b9ddd91558875f1379bdae9f1a"}], "glance/async_/flows/api_image_import.py": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "59d87e878eb95a36f5922c49b458386c7ae107c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ec1843ce", "line": 369, "range": {"start_line": 365, "start_character": 0, "end_line": 369, "end_character": 63}, "updated": "2019-12-01 12:32:06.000000000", "message": "is there a difference on the above or need to duplicate this?", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6a522c90587edb6a062c0f61537a90f0f349ea45", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b27860f7", "line": 369, "range": {"start_line": 365, "start_character": 0, "end_line": 369, "end_character": 63}, "in_reply_to": "3fa7e38b_ec1843ce", "updated": "2019-12-02 07:30:37.000000000", "message": "Nope, will change the above condition and rename the varaible to more meaningful name.", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}], "glance/domain/__init__.py": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "59d87e878eb95a36f5922c49b458386c7ae107c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ccd6a7f3", "line": 117, "updated": "2019-12-01 12:32:06.000000000", "message": "I don't think we should do this. It will block the consumption of the image while it's being copied with no reason.", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6a522c90587edb6a062c0f61537a90f0f349ea45", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_527facde", "line": 117, "in_reply_to": "3fa7e38b_ccd6a7f3", "updated": "2019-12-02 07:30:37.000000000", "message": "Ok, need to add more conditioning in the code to achieve this.", "commit_id": "944538eb6aeebd1367715438e16703f44131f4ca"}], "glance/tests/unit/test_store_image.py": [{"author": {"_account_id": 5202, "name": "Erno Kuvaja", "email": "jokke@usr.fi", "username": "jokke"}, "change_message_id": "59d87e878eb95a36f5922c49b458386c7ae107c1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ecd123fa", "side": "PARENT", "line": 236, "updated": "2019-12-01 12:32:06.000000000", "message": "Why this test change?", "commit_id": "17664ec6d92c5e133c8eed98fb4a80fb350b7d2e"}, {"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "6a522c90587edb6a062c0f61537a90f0f349ea45", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d21ddcbe", "side": "PARENT", "line": 236, "in_reply_to": "3fa7e38b_ecd123fa", "updated": "2019-12-02 07:30:37.000000000", "message": "Mistake, kindly Ignore :D", "commit_id": "17664ec6d92c5e133c8eed98fb4a80fb350b7d2e"}]}}, "starlingx%2Fdistcloud~master~I83b5d09ccd4076ee44360446b1ae1706c06cebdf": {"owner_id": 28468, "owner_name": "Tao Liu", "owner_email": "tao.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 13:00:27.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 1, "date": "2020-02-12 21:12:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, {"value": 2, "date": "2020-02-13 13:55:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}], "comments": {"distributedcloud/dcmanager/manager/subcloud_install.py": [{"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "87366b548da0c910ed71d647f154000e4b59e72b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9156fef8", "line": 48, "range": {"start_line": 48, "start_character": 0, "end_line": 48, "end_character": 18}, "updated": "2020-02-12 15:26:23.000000000", "message": "nit: You might want to rename this", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "e24c6e5e3465c35dbef85c20f63757fcdc5aaf79", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b2e695da", "line": 48, "range": {"start_line": 48, "start_character": 0, "end_line": 48, "end_character": 18}, "in_reply_to": "3fa7e38b_9156fef8", "updated": "2020-02-12 21:04:30.000000000", "message": "renamed", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "87366b548da0c910ed71d647f154000e4b59e72b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_715b4222", "line": 64, "updated": "2020-02-12 15:26:23.000000000", "message": "nit: You might want to rename this", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "e24c6e5e3465c35dbef85c20f63757fcdc5aaf79", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_722a5de6", "line": 64, "in_reply_to": "3fa7e38b_715b4222", "updated": "2020-02-12 21:04:30.000000000", "message": "renamed", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "85702e544d774d90561803cfc35e3dd28570c5aa", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_63a059a5", "line": 149, "range": {"start_line": 148, "start_character": 8, "end_line": 149, "end_character": 29}, "updated": "2020-02-12 16:17:22.000000000", "message": "Just curious why this isn't treated as a failure?", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}, {"author": {"_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, "change_message_id": "e24c6e5e3465c35dbef85c20f63757fcdc5aaf79", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f235ed43", "line": 149, "range": {"start_line": 148, "start_character": 8, "end_line": 149, "end_character": 29}, "in_reply_to": "3fa7e38b_63a059a5", "updated": "2020-02-12 21:04:30.000000000", "message": "Mainly because it should never happen since the ip address has already been validated. I changed it as a failure.", "commit_id": "19922bc588481377b96d7e77079ded554e383ca0"}]}}, "openstack%2Fdevstack-gate~master~I31bc5a7bad603f3f58a3d2ac1501271935830cdd": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 05:45:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 2, "date": "2020-02-12 22:51:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Foslo.serialization~master~I1560635d3d76edf5ca4c426e7e13b228ac4f8c63": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:06:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:19:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "zuul%2Fzuul~master~Ic5040ce7ff71d857a5549dc61592e64cbdf04d6a": {"owner_id": 16068, "owner_name": "Tobias Henkel", "owner_email": "tobias.henkel@bmw.de", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Foctavia~master~I6b95891bec82e01c44b288cbe9796b1f87a07c32": {"owner_id": 11628, "owner_name": "Michael Johnson", "owner_email": "johnsomor@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:14:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 2, "date": "2020-02-13 13:04:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2245, "name": "Jacky Hu", "email": "hudayou@hotmail.com", "username": "hudayou"}], "comments": {}}, "starlingx%2Fgui~f%2Fcentos8~I2346347cfbd84475f771f6ba18b976e34f3205a1": {"owner_id": 30435, "owner_name": "Yong Fu", "owner_email": "fuyong@neusoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31311, "name": "Zhang Zhiguo", "email": "zhangzhg@neusoft.com", "username": "zhangzhg0508"}, {"value": 1, "date": "2020-02-12 15:40:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 30437, "name": "chendongqi", "email": "chen.dq@neusoft.com", "username": "Dq.Chen"}, {"value": 2, "date": "2020-02-12 21:10:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26438, "name": "Tyler Smith", "email": "tyler.smith@windriver.com", "username": "tyler.smith"}, {"value": 0, "_account_id": 30435, "name": "Yong Fu", "email": "fuyong@neusoft.com", "username": "Yong.Fu"}, {"value": 0, "_account_id": 30205, "name": "zhao.shuai", "email": "zhaos@neusoft.com", "username": "zhao.shuai"}, {"value": 0, "_account_id": 28414, "name": "Austin Sun", "email": "austin.sun@intel.com", "username": "sunausti"}, {"value": 2, "date": "2020-02-13 13:01:12.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 0, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "_account_id": 30967, "name": "Long Li", "email": "lilong-neu@neusoft.com", "username": "LongLi"}, {"value": 2, "date": "2020-02-12 16:02:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28531, "name": "Kristine Bujold", "email": "Kristine.Bujold@windriver.com", "username": "kbujold"}], "comments": {}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~Ia6c40bd7a97f2c600e266f4bdb0c76f603863944": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "404147124a4702d34a4e5e06254088bc71d0f7c4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_47efde1b", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 21}, "updated": "2020-02-05 09:14:38.000000000", "message": "Where's the mandatory dinosaur?", "commit_id": "a3faa22ce43c72bee0195f826d43bace9d66a656"}]}}, "openstack%2Fkuryr-kubernetes~stable%2Ftrain~I50a6a24d656636bee04d40905451e91c780a820e": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14352, "name": "Antoni Segura Puimedon", "email": "celebdor@gmail.com", "username": "toni"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I197c32308c9a33378d1f97f3949727303697a4e7": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 06:43:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-13 06:43:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-13 12:12:47.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "cf10194421983a88480d90e9d75373e7146a30f4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_36a94724", "line": 12, "updated": "2020-02-12 07:51:52.000000000", "message": "related-bug: would be nice please so we can track it together with the thing that added this code", "commit_id": "ba1fdef564b483fab41bed81adeb146af57c5e8c"}], "install-deps.sh": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "cf10194421983a88480d90e9d75373e7146a30f4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1671abdf", "line": 182, "updated": "2020-02-12 07:51:52.000000000", "message": "wondering if the check is sufficient.. do we want to be more explicit this is specifically about rhel8?", "commit_id": "ba1fdef564b483fab41bed81adeb146af57c5e8c"}, {"author": {"_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, "change_message_id": "e3a258398e4337a4339244b13dd97ce37eed34da", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9cadbd33", "line": 182, "in_reply_to": "3fa7e38b_1671abdf", "updated": "2020-02-12 09:17:52.000000000", "message": "python_cmd var is getting setted based on distribution so we are safe there", "commit_id": "ba1fdef564b483fab41bed81adeb146af57c5e8c"}, {"author": {"_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, "change_message_id": "35db2a9cbe7c8dd986ff156f3b0906940cb54f8f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_30ece890", "line": 182, "updated": "2020-02-12 13:29:06.000000000", "message": "So this will include any platform using python3. What is the impact for centos8?", "commit_id": "ab3e9da6982f6177992139ea59326218a69b6628"}, {"author": {"_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, "change_message_id": "924732c85eba88adf8b89b00bfb9a4d237a53e80", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f0c89020", "line": 183, "range": {"start_line": 183, "start_character": 16, "end_line": 183, "end_character": 69}, "updated": "2020-02-12 13:27:25.000000000", "message": "I think we can remove this line", "commit_id": "ab3e9da6982f6177992139ea59326218a69b6628"}]}}, "starlingx%2Fansible-playbooks~master~I336ec16ec6c8d7581f547efa77bd75f2c1b4726b": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 12:54:34.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-12 21:15:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28486, "name": "Tee Ngo", "email": "tee.ngo@windriver.com", "username": "teewrs"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}], "comments": {}}, "openstack%2Foctavia~stable%2Ftrain~Ifacbd1953c3d8719539a9f4012eb34669bb164e2": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 2, "date": "2020-02-05 17:06:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-13 11:08:44.000000000", "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 0, "_account_id": 11600, "name": "Micha\u0142 Dulko", "email": "mdulko@redhat.com", "username": "dulek"}, {"value": 2, "date": "2020-02-05 18:56:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}], "comments": {}}, "openstack%2Fpython-designateclient~master~I8213aea6bb576ff312c238c8f2ea85fafe318d97": {"owner_id": 23312, "owner_name": "kangyufei", "owner_email": "kangyf@inspur.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 11:22:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fansible-collections-openstack~master~I1ad77ca2b1007ed1660ac938c6fee7f4059a979c": {"owner_id": 22578, "owner_name": "Abhijeet Kasurde", "owner_email": "akasurde@redhat.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 2, "date": "2020-02-13 12:04:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:07:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Foslo.cache~master~I80e95eeff84d9a1a28ee3507db82ae33d2ebb937": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:12:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {"tox.ini": [{"author": {"_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, "change_message_id": "0c40261e1be001aa7e17906e7ac0a1d5a56e6133", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_63eff985", "line": 3, "updated": "2020-02-12 16:35:28.000000000", "message": "Why you remove pypy? Maybe it can be good to explain on the commit message.", "commit_id": "0fdfe28286e8611ddc745f1b08ba0aa28771c773"}]}}, "openstack%2Foslo.cache~master~I3b35e189ac6bdb31e3e5fac74136a415bec79989": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:24:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:40:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.i18n~master~I82a5e0a0c517601a93ef8c1e6d4ac0e9764e85ac": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:33:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Frally~master~I5330a3d68bea054fecf56ceac41bd8731718eb9f": {"owner_id": 9545, "owner_name": "Andrey Kurilin", "owner_email": "andr.kurilin@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9545, "name": "Andrey Kurilin", "email": "andr.kurilin@gmail.com", "username": "akurilin"}], "comments": {}}, "openstack%2Frpm-packaging~master~I9d4c50dd2b5c7c62b8c7f30f6d0aeb15dc452aee": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:37:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Frpm-packaging~master~I42f06199bc568d6d8fc62b7c023b63ca2ee45455": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:32:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Frpm-packaging~master~I09f0bfe75bbfd412321212de3267474505342905": {"owner_id": 26571, "owner_name": "Chang Liu", "owner_email": "liuchang77@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:33:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.reports~master~I4c67b11212a7ab662bdc36011eebfe88a09f24c5": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:27:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.reports~master~I700fe8837312c5c9d88dcdd073389f81a1d874bd": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:10:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-10 10:45:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:41:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"tox.ini": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "11aee83ece44359eb68a79c51b585a79da0304f1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_9b8f2d2e", "line": 37, "range": {"start_line": 37, "start_character": 0, "end_line": 37, "end_character": 104}, "updated": "2020-02-10 10:45:57.000000000", "message": "we need to migrate this at some point", "commit_id": "57cfce71dbe4f66d3141adb84e30ee03615f9402"}]}}, "openstack%2Foslo.db~master~I7bbab4f96391828d0b0e095a152bdacca6585e3c": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:31:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-07 12:21:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}], "comments": {}}, "openstack%2Foslo.privsep~master~Ice4e7ef5b05c750e24a10ee1a133d45385341c54": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:27:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.db~master~I4245e31483865766c20443a79165f7d98bb5348a": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:31:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-07 12:21:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.limit~master~Ie48c796b6c83b42c85555d13a09f3b3ed96428f8": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:12:44.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-02-12 16:38:08.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 2, "date": "2020-02-10 10:45:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:40:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "7f989386b0eca84ed489dde5ea28df82948e1eb1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_76d65529", "line": 32, "range": {"start_line": 32, "start_character": 8, "end_line": 32, "end_character": 36}, "updated": "2020-02-04 18:15:03.000000000", "message": "let's use the ussuri template\n\nopenstack-python3-ussuri-jobs", "commit_id": "e5e0b84d19261804ea35fd24269cbcd5ed5e1c72"}], "tox.ini": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "2b4f0c3234dc1c0b70c4b419daabc858b1ea5a56", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_dba125a9", "line": 38, "updated": "2020-02-10 10:45:25.000000000", "message": "We need to migrate this at some point", "commit_id": "188ee761778f63fc53f15076b7a6611f87538acc"}]}}, "openstack%2Fmonasca-persister~master~I440e36ad37dc94ffcd665f3925b7f25b5964cbf8": {"owner_id": 30221, "owner_name": "Arseni Lipinski", "owner_email": "arseni.lipinski@ts.fujitsu.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:39:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26141, "name": "Adrian Czarnecki", "email": "adrian.czarnecki@ts.fujitsu.com", "username": "czarneckia"}, {"value": 0, "_account_id": 30221, "name": "Arseni Lipinski", "email": "arseni.lipinski@ts.fujitsu.com", "username": "arseni.lipinski"}, {"value": 0, "_account_id": 16222, "name": "witek", "email": "witold.bedyk@suse.com", "username": "witek"}, {"value": 0, "_account_id": 10311, "name": "Joseph Davis", "email": "joseph.davis@suse.com", "username": "joadavis"}, {"value": 0, "_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}], "comments": {"monasca_persister/tests/test_retry_policy.py": [{"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_eeda3149", "line": 1, "range": {"start_line": 1, "start_character": 16, "end_line": 1, "end_character": 29}, "updated": "2019-04-18 13:16:23.000000000", "message": "change license to `2019 Fujitsu Limited`", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_aee8a9e1", "line": 15, "updated": "2019-04-18 13:16:23.000000000", "message": "add separate line between license header and code", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_6e4641c3", "line": 30, "range": {"start_line": 30, "start_character": 29, "end_line": 30, "end_character": 53}, "updated": "2019-04-18 13:16:23.000000000", "message": "This is comment for the whole file:\nI don't think we are using anywhere else `returns` in test names, and from my point of view this names are useless.\nPlease, talk with Adrian about good test names (I'm going to long vacations :D )", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_2e16f9a9", "line": 49, "range": {"start_line": 49, "start_character": 34, "end_line": 49, "end_character": 36}, "updated": "2019-04-18 13:16:23.000000000", "message": "s", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_8ec4cd60", "line": 60, "range": {"start_line": 60, "start_character": 25, "end_line": 60, "end_character": 44}, "updated": "2019-04-18 13:16:23.000000000", "message": "stick to one order, first what returned and last what expect or vice versa, this comment is for the whole file (you should ask Adrian for order he is using now)", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_ce93b55a", "line": 84, "range": {"start_line": 84, "start_character": 8, "end_line": 84, "end_character": 56}, "updated": "2019-04-18 13:16:23.000000000", "message": "why braces here?", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}, {"author": {"_account_id": 21922, "name": "Dobroslaw Zybort", "email": "dobroslaw.zybort@ts.fujitsu.com", "username": "dobrolaw.zybort"}, "change_message_id": "109e06ae3510cf39eeef260b67d2bd547367605b", "unresolved": false, "patch_set": 2, "id": "3fce034c_6e9c016a", "line": 94, "range": {"start_line": 94, "start_character": 8, "end_line": 94, "end_character": 41}, "updated": "2019-04-18 13:16:23.000000000", "message": "why braces here?", "commit_id": "3fc9e479bb14565e0ac76d3d3226442fb46271da"}]}}, "openstack%2Foslo.privsep~master~Ia01dfa4bc5d7224bb0f753116cd23bdcc22df146": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:13:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-10 10:46:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:39:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.service~master~I69c5df5c04ae879d562990c7cf5ea12b7ef5fa20": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:16:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:36:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-11 02:39:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {}}, "openstack%2Foslo.messaging~master~I1ac92354fea2a70e5fe72a0e3b48d4c435b5286d": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fairshipctl~master~I493564c056225ff1e19f5d1aecb8c187683529ec": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-12 20:27:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 25731, "name": "Stacey Fletcher", "email": "staceylynnfletcher@gmail.com", "username": "StaceyFletcher"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-13 10:05:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"cmd/document/pull.go": [{"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_4d349cac", "line": 27, "range": {"start_line": 26, "start_character": 1, "end_line": 27, "end_character": 90}, "updated": "2020-01-02 17:08:49.000000000", "message": "Cmds as a convention are throwing the Flags setting into an InitFlag private method.", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7b27c71f", "line": 27, "range": {"start_line": 26, "start_character": 1, "end_line": 27, "end_character": 90}, "in_reply_to": "3fa7e38b_4d349cac", "updated": "2020-01-03 15:24:13.000000000", "message": "Done", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "81e367b2852f50c1b89ae6918b9aa75a75d6f5c5", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_36c5c00a", "line": 24, "range": {"start_line": 19, "start_character": 0, "end_line": 24, "end_character": 4}, "updated": "2020-01-07 21:44:47.000000000", "message": "Let's use RunE instead and simply `return settings.Pull()`. That will cause airshipctl to generate a non-zero exit code", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "022457a0fac85112bc2f82cc11c7ee10bb37de7a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_36186082", "line": 24, "range": {"start_line": 19, "start_character": 0, "end_line": 24, "end_character": 4}, "in_reply_to": "3fa7e38b_36c5c00a", "updated": "2020-01-07 21:50:18.000000000", "message": "Done", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}], "cmd/validators/validators.go": [{"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_cdf5eccd", "line": 8, "range": {"start_line": 1, "start_character": 0, "end_line": 8, "end_character": 1}, "updated": "2020-01-02 17:08:49.000000000", "message": "If you are using this for testing, we are using a specific package that includes assert and require.\n\n\t\"github.com/stretchr/testify/assert\"\n\t\"github.com/stretchr/testify/require\"", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_dbcfdb51", "line": 8, "range": {"start_line": 1, "start_character": 0, "end_line": 8, "end_character": 1}, "in_reply_to": "3fa7e38b_cdf5eccd", "updated": "2020-01-03 15:24:13.000000000", "message": "No this is just an idea to help us validate and maybe clean user input from commands", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}], "pkg/config/types.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 12, "id": "3fa7e38b_bb269fcb", "line": 133, "range": {"start_line": 133, "start_character": 1, "end_line": 133, "end_character": 5}, "updated": "2020-01-03 15:32:45.000000000", "message": "does this need to be private?", "commit_id": "defe327ee5ef9cffb0e5f25940c149874bb9c6f3"}], "pkg/document/errors.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "f7c7417e34affb1e7085c7345d948a669d7a6766", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_f7c39f37", "line": 18, "updated": "2020-01-27 05:52:41.000000000", "message": "Looks like this belongs to config/errors.go", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fa46fe1b40a912b6a2406a115e7754c01f59e10d", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_5a113a5c", "line": 18, "in_reply_to": "3fa7e38b_f7c39f37", "updated": "2020-01-30 17:21:09.000000000", "message": "Removed", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "a525da9d5767427a4184a6dfc78b80b2f5f8145c", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_91d274ce", "line": 22, "range": {"start_line": 22, "start_character": 34, "end_line": 22, "end_character": 39}, "updated": "2020-01-27 14:30:00.000000000", "message": "Error functions should return strings. See line 14", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fa46fe1b40a912b6a2406a115e7754c01f59e10d", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_baff0e02", "line": 22, "range": {"start_line": 22, "start_character": 34, "end_line": 22, "end_character": 39}, "in_reply_to": "3fa7e38b_91d274ce", "updated": "2020-01-30 17:21:09.000000000", "message": "Removed", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}], "pkg/document/pull/pull.go": [{"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_4d5d7cea", "line": 12, "range": {"start_line": 12, "start_character": 1, "end_line": 12, "end_character": 21}, "updated": "2020-01-02 17:08:49.000000000", "message": "IS this a global settings (for all repos ) or behaviour for a particular repository.\nRegardless, perhaps this should be in the Manifest struct", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_fbd657c4", "line": 12, "range": {"start_line": 12, "start_character": 1, "end_line": 12, "end_character": 21}, "in_reply_to": "3fa7e38b_4d5d7cea", "updated": "2020-01-03 15:24:13.000000000", "message": "Done", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_8d4db43d", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 33}, "updated": "2020-01-02 17:08:49.000000000", "message": "Manifest includes the TargetPath why do we need another variable.", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_9bbf235f", "line": 14, "range": {"start_line": 12, "start_character": 0, "end_line": 14, "end_character": 33}, "in_reply_to": "3fa7e38b_8d4db43d", "updated": "2020-01-03 15:24:13.000000000", "message": "Done", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_4d025cbc", "line": 39, "range": {"start_line": 39, "start_character": 2, "end_line": 39, "end_character": 45}, "updated": "2020-01-02 17:08:49.000000000", "message": "Does this create a directory, key aspect is if repo is i.e. https://opendev.org/airship/treasuremap\n\nDoes it create the directory :\n- treasuremap \nor \n- opendev.org/airship/treasuremap\n\nWe expect the later", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_5bce8b2c", "line": 39, "range": {"start_line": 39, "start_character": 2, "end_line": 39, "end_character": 45}, "in_reply_to": "3fa7e38b_4d025cbc", "updated": "2020-01-03 15:24:13.000000000", "message": "this is from one of the parent PS I'm using so I would have to check", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, "change_message_id": "fc05ea2c880499767f25a96649b5795a383663d9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_2d5840f7", "line": 66, "range": {"start_line": 66, "start_character": 1, "end_line": 66, "end_character": 46}, "updated": "2020-01-02 17:08:49.000000000", "message": "why do we need this separate variable?", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "667faf52d0b7b983e4e529a0f887c6c90cc34995", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_3bb06f8d", "line": 66, "range": {"start_line": 66, "start_character": 1, "end_line": 66, "end_character": 46}, "in_reply_to": "3fa7e38b_2d5840f7", "updated": "2020-01-03 15:24:13.000000000", "message": "Done", "commit_id": "1a5870f46dda11b43ce5f3281ba6eb2457224d1c"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "81e367b2852f50c1b89ae6918b9aa75a75d6f5c5", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_76f7b85b", "line": 50, "range": {"start_line": 50, "start_character": 5, "end_line": 50, "end_character": 6}, "updated": "2020-01-07 21:44:47.000000000", "message": "change this to `i` and replace `index` with it.", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "022457a0fac85112bc2f82cc11c7ee10bb37de7a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1611a45c", "line": 50, "range": {"start_line": 50, "start_character": 5, "end_line": 50, "end_character": 6}, "in_reply_to": "3fa7e38b_76f7b85b", "updated": "2020-01-07 21:50:18.000000000", "message": "took this out", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "81e367b2852f50c1b89ae6918b9aa75a75d6f5c5", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_56f15c69", "line": 62, "range": {"start_line": 62, "start_character": 9, "end_line": 62, "end_character": 10}, "updated": "2020-01-07 21:44:47.000000000", "message": "This should return nil in the case of an error", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "022457a0fac85112bc2f82cc11c7ee10bb37de7a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_d606ac21", "line": 62, "range": {"start_line": 62, "start_character": 9, "end_line": 62, "end_character": 10}, "in_reply_to": "3fa7e38b_56f15c69", "updated": "2020-01-07 21:50:18.000000000", "message": "Done", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "2e97e5bee17f48fefe129329c4db8a5371484430", "unresolved": false, "patch_set": 27, "id": "3fa7e38b_27a2e998", "line": 31, "range": {"start_line": 31, "start_character": 0, "end_line": 31, "end_character": 47}, "updated": "2020-01-16 15:28:07.000000000", "message": "This line panics if s.CurrentManifest is nil", "commit_id": "2e88194531fa2e0937d791266ff07f5e71d50586"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "f7c7417e34affb1e7085c7345d948a669d7a6766", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_57dab31c", "line": 44, "range": {"start_line": 44, "start_character": 0, "end_line": 44, "end_character": 26}, "updated": "2020-01-27 05:52:41.000000000", "message": "Not 100% sure  but I'd consider putting this under 'defer' statement", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fa46fe1b40a912b6a2406a115e7754c01f59e10d", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_95fc630c", "line": 44, "range": {"start_line": 44, "start_character": 0, "end_line": 44, "end_character": 26}, "in_reply_to": "3fa7e38b_57dab31c", "updated": "2020-01-30 17:21:09.000000000", "message": "I don't think it matters. Each repository opens its own instance and this is after we're done with this one.", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "008e9ecf8ddb349f1cf0d19111145fb0b91a3785", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_6c2de18e", "line": 64, "range": {"start_line": 64, "start_character": 0, "end_line": 64, "end_character": 61}, "updated": "2020-01-21 22:38:09.000000000", "message": "> I added an error for when CurrentManifest is not set. This command\n > needs that to be set right now in order to work.\n\nI should've updated earlier - This bug is already fixed in https://review.opendev.org/#/c/703108/\n\nOnce 703108 merges, line 64 will receive an error if there is no current manifest. Unfortunately, that makes the nil check on line 32 redundant", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "fa46fe1b40a912b6a2406a115e7754c01f59e10d", "unresolved": false, "patch_set": 31, "id": "3fa7e38b_f53357f7", "line": 64, "range": {"start_line": 64, "start_character": 0, "end_line": 64, "end_character": 61}, "in_reply_to": "3fa7e38b_6c2de18e", "updated": "2020-01-30 17:21:09.000000000", "message": "Done", "commit_id": "b469ad3e8054ba2b84351f8a9cd2f3d3bc3e9bb3"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "64f1225a68b74c28e09df4c7444fd8cbba627746", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_5d5ef1e8", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 33}, "updated": "2020-02-03 14:35:45.000000000", "message": "just nit. it's unclear why do we need separate property for feield that can be retrived by .Config().CurrentContextManifest()", "commit_id": "11f3fe8a4b844cedf1e1ac990851dc70fc14d2bc"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "2fec1d99b350f1cecf81e865461b8630e4a29277", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_aae52709", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 33}, "in_reply_to": "3fa7e38b_4aa7dabc", "updated": "2020-02-06 06:05:38.000000000", "message": "looks like it is used only inside cloneRepository method so we can use local variable currentManifest, err := s.Config().CurrentContextManifest()", "commit_id": "11f3fe8a4b844cedf1e1ac990851dc70fc14d2bc"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "5fddd130da9ae09842a0029dcf3d615826e8d634", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_4aa7dabc", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 33}, "in_reply_to": "3fa7e38b_5d5ef1e8", "updated": "2020-02-05 19:42:24.000000000", "message": "I think I did it to avoid repeatedly calling CurrentContextManifest(). Do I need to switch it so it's making the call each time?", "commit_id": "11f3fe8a4b844cedf1e1ac990851dc70fc14d2bc"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "b647fea6340cd09d0df8fb94f1a0419234e3e341", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_eba797ba", "line": 12, "range": {"start_line": 12, "start_character": 0, "end_line": 12, "end_character": 33}, "in_reply_to": "3fa7e38b_aae52709", "updated": "2020-02-06 18:55:45.000000000", "message": "That's a fair point... I don't know what I was thinking. Fixed", "commit_id": "11f3fe8a4b844cedf1e1ac990851dc70fc14d2bc"}], "pkg/document/pull/pull_test.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_fb5bb751", "line": 14, "range": {"start_line": 14, "start_character": 0, "end_line": 14, "end_character": 1}, "updated": "2020-01-03 15:32:45.000000000", "message": "whitespace", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_1b59f359", "line": 16, "range": {"start_line": 16, "start_character": 0, "end_line": 16, "end_character": 2}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_db4efb8e", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 1}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_9b32c30e", "line": 20, "range": {"start_line": 20, "start_character": 0, "end_line": 20, "end_character": 2}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_5b38cbeb", "line": 22, "range": {"start_line": 22, "start_character": 0, "end_line": 22, "end_character": 1}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_fb2097b3", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 2}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "ffe7891d2bb7291a8caa1c0efca2a9c5276392de", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_1b1ed373", "line": 26, "range": {"start_line": 26, "start_character": 0, "end_line": 26, "end_character": 1}, "updated": "2020-01-03 15:32:45.000000000", "message": "ditto", "commit_id": "1112024e7d5720ec26d9ce51ce6c584baf25434f"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "81e367b2852f50c1b89ae6918b9aa75a75d6f5c5", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_564ddc96", "line": 77, "range": {"start_line": 77, "start_character": 18, "end_line": 77, "end_character": 19}, "updated": "2020-01-07 21:44:47.000000000", "message": "nit: delete this", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "022457a0fac85112bc2f82cc11c7ee10bb37de7a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_f102d207", "line": 77, "range": {"start_line": 77, "start_character": 18, "end_line": 77, "end_character": 19}, "in_reply_to": "3fa7e38b_564ddc96", "updated": "2020-01-07 21:50:18.000000000", "message": "removed, still trying to work out how to do these though", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "81e367b2852f50c1b89ae6918b9aa75a75d6f5c5", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_36614012", "line": 80, "range": {"start_line": 80, "start_character": 0, "end_line": 80, "end_character": 19}, "updated": "2020-01-07 21:44:47.000000000", "message": "nit: assert.True(true) doesn't accomplish anything. I think it'd be helpful to reviewers to change these to TODOs while this PS is still WIP", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "022457a0fac85112bc2f82cc11c7ee10bb37de7a", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_b110da50", "line": 80, "range": {"start_line": 80, "start_character": 0, "end_line": 80, "end_character": 19}, "in_reply_to": "3fa7e38b_36614012", "updated": "2020-01-07 21:50:18.000000000", "message": "Done", "commit_id": "cc21f9aabdbe3b278803c1859b9a34aaaa178cde"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "cd30c095847cb896f056ba6e299c4a91dc2b33c7", "unresolved": false, "patch_set": 34, "id": "3fa7e38b_ab619f3e", "line": 67, "range": {"start_line": 67, "start_character": 15, "end_line": 67, "end_character": 85}, "updated": "2020-02-06 19:05:30.000000000", "message": "Arguments are flipped here", "commit_id": "465a1d3044fabf5b5de30798d98a3116cd06e222"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "cd30c095847cb896f056ba6e299c4a91dc2b33c7", "unresolved": false, "patch_set": 34, "id": "3fa7e38b_4b490bb6", "line": 100, "range": {"start_line": 100, "start_character": 15, "end_line": 100, "end_character": 85}, "updated": "2020-02-06 19:05:30.000000000", "message": "ditto", "commit_id": "465a1d3044fabf5b5de30798d98a3116cd06e222"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "b76fcfaa32bfd9d992774fd8199be9abe77905ef", "unresolved": false, "patch_set": 35, "id": "3fa7e38b_fc72fb17", "line": 55, "range": {"start_line": 55, "start_character": 15, "end_line": 55, "end_character": 85}, "updated": "2020-02-06 22:05:01.000000000", "message": "Arguments are flipped here, expected should be the first arg", "commit_id": "295f1e008b3de2c2fce349793f157b269c93fcf3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "f88f9263302a607cbd7a42f5a0d7cc9ffde74269", "unresolved": false, "patch_set": 35, "id": "3fa7e38b_7c828ba8", "line": 55, "range": {"start_line": 55, "start_character": 15, "end_line": 55, "end_character": 85}, "in_reply_to": "3fa7e38b_fc72fb17", "updated": "2020-02-06 22:14:35.000000000", "message": "Done", "commit_id": "295f1e008b3de2c2fce349793f157b269c93fcf3"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "b76fcfaa32bfd9d992774fd8199be9abe77905ef", "unresolved": false, "patch_set": 35, "id": "3fa7e38b_1c76f70c", "line": 86, "range": {"start_line": 86, "start_character": 15, "end_line": 86, "end_character": 85}, "updated": "2020-02-06 22:05:01.000000000", "message": "ditto", "commit_id": "295f1e008b3de2c2fce349793f157b269c93fcf3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "f88f9263302a607cbd7a42f5a0d7cc9ffde74269", "unresolved": false, "patch_set": 35, "id": "3fa7e38b_9c7d07c5", "line": 86, "range": {"start_line": 86, "start_character": 15, "end_line": 86, "end_character": 85}, "in_reply_to": "3fa7e38b_1c76f70c", "updated": "2020-02-06 22:14:35.000000000", "message": "Done", "commit_id": "295f1e008b3de2c2fce349793f157b269c93fcf3"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "cc97eba4c6d4695211faaa85aebd8cb387bf3ed1", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_d1f0f694", "line": 87, "range": {"start_line": 29, "start_character": 0, "end_line": 87, "end_character": 3}, "updated": "2020-02-12 15:45:05.000000000", "message": "These tests need to be isolated. We can't depend on being able to clone a real git repository", "commit_id": "8bcecb4c5c481efc5cc687e09189e6b25a13f236"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "ff35ae6a6107624be93cff4488a9b62766ad5953", "unresolved": false, "patch_set": 42, "id": "3fa7e38b_26d82f4f", "line": 87, "range": {"start_line": 29, "start_character": 0, "end_line": 87, "end_character": 3}, "in_reply_to": "3fa7e38b_d1f0f694", "updated": "2020-02-12 17:01:39.000000000", "message": "Done", "commit_id": "8bcecb4c5c481efc5cc687e09189e6b25a13f236"}]}}, "openstack%2Foslo.config~master~Ib7cd076c167c5e47d7241995fb308cd3b8c9db42": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:26:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Foslo.db~master~Ic9424cf4e908edd794f2b7c1f6e3dd4316b6362c": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:31.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.i18n~master~I340a7909c49e7d2a8c82c668cbdaf9ced7196f67": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:14:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-10 10:44:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:09.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "058dd3d37ebf0e495153f0233a5eced379cccfb6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_56c47961", "line": 7, "range": {"start_line": 7, "start_character": 26, "end_line": 7, "end_character": 31}, "updated": "2020-02-04 18:17:05.000000000", "message": "need to use ussuri template also\n\n- openstack-python3-ussuri-jobs", "commit_id": "4db62ece512ea14a0b90ad91ebf3c772847cd3b0"}], "oslo_i18n/tests/test_factory.py": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c52f493743eae61167ad325e9819db97fe941199", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fbb18101", "line": 64, "range": {"start_line": 64, "start_character": 8, "end_line": 64, "end_character": 16}, "updated": "2020-02-10 10:44:48.000000000", "message": "could rename this to...something", "commit_id": "281fd591e7bf2d106a5b2586684542a27bac2c6d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c52f493743eae61167ad325e9819db97fe941199", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_dbacc5a9", "line": 83, "range": {"start_line": 83, "start_character": 28, "end_line": 83, "end_character": 32}, "updated": "2020-02-10 10:44:48.000000000", "message": "could drop this", "commit_id": "281fd591e7bf2d106a5b2586684542a27bac2c6d"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "c52f493743eae61167ad325e9819db97fe941199", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9bcacd6c", "line": 97, "range": {"start_line": 97, "start_character": 24, "end_line": 97, "end_character": 28}, "updated": "2020-02-10 10:44:48.000000000", "message": "and this", "commit_id": "281fd591e7bf2d106a5b2586684542a27bac2c6d"}]}}, "openstack%2Foslo.config~master~I09bfa2e97bb20b3be0b801c7e76ce93b8db6d0cb": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:39:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.context~master~Ifd3a02eba3d9bc925af3bd6f6abc105f2f89de2b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:24:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:39:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.policy~master~I085654bfac96462538f44621222ff97faa637ccf": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:17:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "date": "2020-02-11 17:55:03.000000000", "permitted_voting_range": {"min": 0, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.middleware~master~I2a371463c21abac2ef5271a3251cb06938381ce2": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:39:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.concurrency~master~Id0ec6cf94c5345aae8ca8b2567abe677b6db1b0b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 15:23:42.000000000", "_account_id": 708, "name": "Yuriy Taraday", "email": "yorik.sar@gmail.com", "username": "yorik-sar"}, {"value": 2, "date": "2020-02-13 10:16:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:37:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.serialization~master~I04ff1d6b95aa4672cf560e4777295626bb651440": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:51.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.concurrency~master~Icb5116908148dcbb58a7531bbed498d29ca1d2ea": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:14:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Foslo.log~master~I4451a0d216bc0ed0f4000c5590e12d1378bd0a41": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:36:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fsushy~master~I67136e44b1026c0f997a939b4c7c4abcf20fc09b": {"owner_id": 28048, "owner_name": "Will Szumski", "owner_email": "will@stackhpc.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2020-02-13 11:45:35.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": -1, "date": "2020-02-05 00:06:27.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "7ba4186b6a9aec9a7eb1b19f3df13d71d981f0e4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_75847d57", "line": 9, "updated": "2020-02-13 11:45:35.000000000", "message": "The description appears highly cryptic to me. Would be good to explain the use-case and the usage of this new feature.", "commit_id": "4ec47c7c8782354f4bb7f56af060b653481ac013"}], "sushy/resources/base.py": [{"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "7ba4186b6a9aec9a7eb1b19f3df13d71d981f0e4", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_75ab1dd3", "line": 98, "updated": "2020-02-13 11:45:35.000000000", "message": "Is it alright that we loose the actual path to this element (as on #103)?", "commit_id": "4ec47c7c8782354f4bb7f56af060b653481ac013"}]}}, "x%2Fvmware-nsx~master~I9ef446aea8f1bc0619e6ee8140f2bda874a13ce4": {"owner_id": 6854, "owner_name": "YAMAMOTO Takashi", "owner_email": "yamamoto@midokura.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.versionedobjects~master~Id5a92119a2faf72d82616d398e341f5935753d1b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:23:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Foslo.policy~master~If6a07eee86a2aaf65bdf9fbb338809ad47e02a46": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 1, "date": "2020-02-11 22:14:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-13 06:34:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-02-13 10:17:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 2, "date": "2020-02-06 14:52:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 1, "date": "2020-02-11 14:39:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"releasenotes/notes/drop-python27-support-9aa06224812cc352.yaml": [{"author": {"_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, "change_message_id": "8563741d10284b196140d30efc9c040ba9fa7e95", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_36e3e43c", "line": 4, "range": {"start_line": 4, "start_character": 49, "end_line": 4, "end_character": 55}, "updated": "2020-02-05 21:48:49.000000000", "message": "I think this wording is incorrect. The latest version supported is 3.7. 3.6 is the oldest/earliest version.\n\nI know a bunch of these have already merged, but we should probably go back and fix the wording in those too because this is making a statement that disagrees with what we say elsewhere.", "commit_id": "ad6c86cd9c93e39b495a93a704afb18003c66763"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "17289078f351a2e75ef4a9e7fb1ce22f512072fd", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d64a90ac", "line": 4, "range": {"start_line": 4, "start_character": 49, "end_line": 4, "end_character": 55}, "in_reply_to": "3fa7e38b_36e3e43c", "updated": "2020-02-05 22:22:03.000000000", "message": "yeah, this needs to be 'minimum'. latest will be keep increasing like 3.8 in V cycle.", "commit_id": "ad6c86cd9c93e39b495a93a704afb18003c66763"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "b7fa3fd437af5154153050e48661d3ccdb637c9d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_45f9041a", "line": 4, "range": {"start_line": 4, "start_character": 49, "end_line": 4, "end_character": 55}, "in_reply_to": "3fa7e38b_d64a90ac", "updated": "2020-02-06 07:21:55.000000000", "message": "Done", "commit_id": "ad6c86cd9c93e39b495a93a704afb18003c66763"}], "setup.cfg": [{"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "a9149810cb5e4d8fd4cfdafd7aa0a0045b62dbd8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6c0bf3d3", "line": 32, "range": {"start_line": 27, "start_character": 0, "end_line": 32, "end_character": 16}, "updated": "2020-02-04 09:46:35.000000000", "message": "This could go now", "commit_id": "64e31258a3eb81fafbb1649b5507a4fb7e002d86"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "a9149810cb5e4d8fd4cfdafd7aa0a0045b62dbd8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4c0877d7", "line": 56, "range": {"start_line": 49, "start_character": 0, "end_line": 56, "end_character": 27}, "updated": "2020-02-04 09:46:35.000000000", "message": "As could this", "commit_id": "64e31258a3eb81fafbb1649b5507a4fb7e002d86"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "a9149810cb5e4d8fd4cfdafd7aa0a0045b62dbd8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0cf27fe5", "line": 73, "range": {"start_line": 72, "start_character": 0, "end_line": 73, "end_character": 16}, "updated": "2020-02-04 09:46:35.000000000", "message": "This should go", "commit_id": "64e31258a3eb81fafbb1649b5507a4fb7e002d86"}]}}, "openstack%2Foslo.concurrency~master~Ib41540d1dca8fe81dc146c846c4b3fa42763c9f6": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 16:33:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 31245, "name": "Daniel Bengtsson", "email": "dbengt@redhat.com", "username": "damani42"}, {"value": 2, "date": "2020-02-13 10:12:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "x%2Fvmware-nsx~master~I4fa743f04eef848abd42f131109a5e8a45dcd35f": {"owner_id": 5367, "owner_name": "boden", "owner_email": "bodenvmw@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 2, "date": "2019-06-28 15:27:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2019-06-28 15:27:33.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 2, "date": "2019-06-28 15:27:33.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5367, "name": "boden", "email": "bodenvmw@gmail.com", "username": "boden"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.utils~master~I33025e633a18e6582961462e942cbdeac3a085b7": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:16:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:36:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-11 02:39:27.000000000", "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {}}, "x%2Fvmware-nsx~master~If400a3bfa29520342d83d9f5a7825b151d2173c7": {"owner_id": 5367, "owner_name": "boden", "owner_email": "bodenvmw@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-08-08 05:02:26.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2019-08-21 21:58:44.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.config~master~I730f15a4872334f040d5bd03da37e7c4f9e8148b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:13:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "x%2Fvmware-nsx~master~Iea63018e7c00be8058acce143c4cc5ff36a56eb1": {"owner_id": 5367, "owner_name": "boden", "owner_email": "bodenvmw@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-08-26 18:41:08.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27546, "name": "Michal Kelner Mishali", "email": "mkelnermishal@vmware.com", "username": "mkelnermishal"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}, {"value": 2, "date": "2019-08-26 20:37:18.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24247, "name": "Anna Khmelnitsky", "email": "akhmelnitsky@vmware.com", "username": "annak"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Foslo.context~master~Ib6e94fa9f822830242a99f6690349569626f1931": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:13:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}], "comments": {}}, "openstack%2Foslo.rootwrap~master~I744229f03bc7375ad0a47f053f79dec3e91a1fd7": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:30:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 2, "date": "2020-02-13 10:17:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:36:22.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fdesignate~master~I1a9d8dd2aecfe095550041a21bc4efe46adb295f": {"owner_id": 22623, "owner_name": "Erik Olof Gunnar Andersson", "owner_email": "eandersson@blizzard.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 11:19:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fkolla~master~I75249055989309d0afdfc29c894beb6b1fcd1994": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:18:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-12 15:09:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {"tests/playbooks/pre.yml": [{"author": {"_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, "change_message_id": "00e74ac9ffe1037a327d205e3da05690f94faf92", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_259d8c6b", "line": 10, "range": {"start_line": 10, "start_character": 0, "end_line": 10, "end_character": 6}, "updated": "2020-02-12 11:54:38.000000000", "message": "drop", "commit_id": "530ca0608ff60a42cfd0c01dd22030cdf85d2dca"}]}}, "openstack%2Fkolla-ansible~master~I0ca0347bb6ebc5d8f5d22f708211e01221165262": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:29:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-12 15:10:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fdesignate-dashboard~stable%2Fpike~Ib91f873e8f21b71a71b1684317db276b72ae8014": {"owner_id": 14892, "owner_name": "Keith Berger", "owner_email": "keith.berger@suse.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8174, "name": "Tim Simmons", "email": "tim.r.simmons@gmail.com", "username": "TimSimmons"}, {"value": 2, "date": "2020-01-20 20:33:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 0, "_account_id": 741, "name": "Kiall Mac Innes", "email": "kiall@macinnes.ie", "username": "kiall"}, {"value": 0, "_account_id": 31074, "name": "Ingo Fischer", "email": "i.fischer@syseleven.de", "username": "i.fischer"}, {"value": 1, "date": "2020-01-21 17:30:26.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 19298, "name": "Nicolas Bock", "email": "nicolas.bock@canonical.com", "username": "nicolasbock"}, {"value": 2, "date": "2020-02-13 11:17:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Ftempest~master~I8d3d7aebd469d1caa432b71a86cba6aeaf11ebc6": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-06 12:55:38.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": -1, "date": "2020-02-06 14:28:09.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}], "comments": {}}, "opendev%2Fyaml2ical~master~I306242f4e01e895c9aa53eb32e8a06a9447e1fb0": {"owner_id": 11672, "owner_name": "xhzhf", "owner_email": "guoyongxhzhf@163.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-13 10:48:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-13 10:48:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 12898, "name": "Tony Breeds", "email": "tony@bakeyournoodle.com", "username": "tonyb"}, {"value": 0, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I6bb0141c0a54b6ab069d1f6e6ab65c5bf34ee703": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-02-13 06:50:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-13 07:59:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-13 05:11:57.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~master~I14f5862405ffac4181634d8870f4a2513afecafd": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I14f5862405ffac4181634d8870f4a2513afecafd": {"owner_id": 6926, "owner_name": "Bogdan Dobrelya", "owner_email": "bdobreli@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}], "comments": {}}, "openstack%2Foslo.upgradecheck~master~I0de4e6a064fb8008f9cff61b96875909041dd14b": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:28:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Fstein~I0cf45085c6d9f278fffb6f55ea8d2159dd425746": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 00:04:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}], "comments": {}}, "openstack%2Freleases~master~Iba0a10f746071459c4aef0ef304490e0f88f70b6": {"owner_id": 19134, "owner_name": "Eyal", "owner_email": "eyalb1@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:23:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:24:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Foslo.upgradecheck~master~I99e49c84779439317a9f13307c7e7d2fc092d7fb": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:14:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-10 10:46:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:38:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstacksdk~master~I95aaaf38dd57367d18748111281f531e9e9a1d12": {"owner_id": 27302, "owner_name": "Shilpa Devharakar", "owner_email": "shilpa.devharakar@nttdata.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3085, "name": "Tushar Patil", "inactive": true}], "comments": {}}, "openstack%2Foslotest~master~I145154677616be69cbc65e53db796dce591cbf88": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:24:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:43:28.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Idb42353f86f192cc8ff2defbbae71e7df76702c6": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:33:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:17:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}], "comments": {}}, "openstack%2Freleases~master~I27a379543ef18859f0bac189090ea76722411b0b": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 09:41:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 10:14:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 8246, "name": "Qiming Teng", "email": "tengqm@outlook.com", "username": "tengqm"}, {"value": 1, "date": "2020-02-13 01:52:56.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22998, "name": "XueFengLiu", "email": "liu.xuefeng1@zte.com.cn", "username": "sgfeng"}], "comments": {}}, "openstack%2Foslo-cookiecutter~master~I1f586f3372371db132e228c294bd38ab3b65fcd9": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 10:24:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:43:35.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fcookiecutter~master~I660a50d89af2cccdd23c161daf581ebdb89ce9e8": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 1, "date": "2020-02-11 22:10:04.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 10:47:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2020-02-11 14:43:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"{{cookiecutter.repo_name}}/setup.cfg": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "fe4f5945b45f37a8fb43b73f462f3d97bd8afd56", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5083b6aa", "line": 9, "updated": "2020-02-11 14:43:05.000000000", "message": "Seems a little odd not to have 3.6 in the metadata below, but more than likely the user of this will need to make some tweaks to that anyway, so I don't think it is really a concern.", "commit_id": "4fbd387ddac45dc56303e26ea6eb4e42da6bc2f0"}]}}, "x%2Fvmware-nsx~stable%2Ftrain~I7e68c9d0e40e03c0e3e708e04c996fdceed56df4": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 09:11:57.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}], "comments": {}}, "airship%2Fairshipctl~master~I49051315460b5d261186f32bae6101a752740eae": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-12 22:07:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-13 09:31:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "openstack%2Fmurano-dashboard~master~I80f3aa160b41554fa319e6ced2edf5a39d366302": {"owner_id": 29313, "owner_name": "Vishal Manchanda", "owner_email": "manchandavishal143@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 03:09:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 29313, "name": "Vishal Manchanda", "email": "manchandavishal143@gmail.com", "username": "vishalmanchanda"}], "comments": {}}, "openstack%2Fi18n~master~I37da6ad3306af138aa16cf73a116f0391d06675f": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 09:18:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 14482, "name": "Ian Y. Choi", "email": "ianyrchoi@gmail.com", "username": "ianychoi"}, {"value": 0, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"setup.cfg": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "19db9b1bdb652ce4e1f2accba336ea52f5a16e60", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1410cb4b", "line": 18, "updated": "2020-02-11 21:00:41.000000000", "message": "3.7 too?", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "a2de42a3deccc4dccab5c5ac55a00cfa29d97333", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_741edf0f", "line": 18, "in_reply_to": "3fa7e38b_1410cb4b", "updated": "2020-02-11 21:21:27.000000000", "message": "This repo is not pushed to pypi - and we only test with pep8.\n\nSo, while we could update it - does it really matter here?", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "e9d71188edd1e35552e98c78540a07e18da5426f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e74f838a", "line": 18, "in_reply_to": "3fa7e38b_741edf0f", "updated": "2020-02-11 23:06:29.000000000", "message": "If so, python-requires>=3.6 above is really needed?", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "015d06b92f8c9f987d0318d4e77934520092106a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fcedd122", "line": 18, "in_reply_to": "3fa7e38b_7bcc8a32", "updated": "2020-02-12 08:23:50.000000000", "message": "> No, not really - that was for sync with the other repos\n\nOkay, if so, it looks better to follow the most common pattern. setup.cfg in most repository includes python3.7.\nIt sounds a bit odd to have python 3.6 only in the classifier.\n\n> In the past, we needed setup.cfg/py.\n> \n> Want to take over the change or send a followup? Feel free to do...\n\nI believe dropping setup.cfg should be tried in a separate gerrit change (not patch set).", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "8ecef4f16e2c1ca56128e73c7ed9558e05b40df0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_7bcc8a32", "line": 18, "in_reply_to": "3fa7e38b_aa471252", "updated": "2020-02-12 05:28:28.000000000", "message": "In the past, we needed setup.cfg/py.\n\nWant to take over the change or send a followup? Feel free to do...", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "0b34b8868c56f8712b04e46b33fbb7e4c7577a22", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_aa471252", "line": 18, "in_reply_to": "3fa7e38b_e74f838a", "updated": "2020-02-12 01:10:26.000000000", "message": "IMHO we would like to avoid adding/removing python versions per infra change. we don't publish the deliverable to PyPI, so perhaps we don't need setup.cfg and setup.py. tox allows to run testenv without installing the current package [1]. \n\nThought?\n\nIf it makes sense, I can send a follow-up patch.\n\n[1] https://tox.readthedocs.io/en/latest/config.html#conf-skip_insta", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}, {"author": {"_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}, "change_message_id": "8ecef4f16e2c1ca56128e73c7ed9558e05b40df0", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1b50f65e", "line": 18, "in_reply_to": "3fa7e38b_e74f838a", "updated": "2020-02-12 05:28:28.000000000", "message": "No, not really - that was for sync with the other repos", "commit_id": "049c3c3b2d1695fdbb681760987660ee25d8886b"}]}}, "openstack%2Fec2-api~master~I8a50bf697bdf2f0bf970a57cab69878b3ef5c236": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fneutron~master~I973f85ad992cd61ed8a6aa19ffb6a12be4d03d1a": {"owner_id": 7016, "owner_name": "Swaminathan Vasudevan", "owner_email": "swvasude@cisco.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15752, "name": "Intel SR-IOV CI", "email": "sriov-ci@intel.com", "username": "sriovci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7016, "name": "Swaminathan Vasudevan", "email": "swvasude@cisco.com", "username": "souminathan"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 4187, "name": "Ryan Tidwell", "email": "rtidwell@suse.com", "username": "ryan-tidwell"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}], "comments": {"neutron/privileged/agent/linux/ip_lib.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "01ff45cbac4b864c62cf0692572d56ae76baf664", "unresolved": false, "patch_set": 15, "id": "dfbec78f_28275e67", "line": 417, "updated": "2019-05-03 01:06:24.000000000", "message": "'state' will always be set here as the default is 'permanent', so this if() isn't necessary.", "commit_id": "2f35fa87b947e53fff8c8e551cc1843087cdcf12"}]}}, "openstack%2Ffreezer-tempest-plugin~master~I64a3e36ac68de5c45a93b56be83b017ce9f1221c": {"owner_id": 27339, "owner_name": "Michal Arbet", "owner_email": "michal.arbet@ultimum.io", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 07:59:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21069, "name": "Carl caihui", "email": "caihui_nj@163.com", "username": "caihui"}, {"value": 0, "_account_id": 27339, "name": "Michal Arbet", "email": "michal.arbet@ultimum.io", "username": "michalarbet"}, {"value": 2, "date": "2020-02-13 08:07:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21387, "name": "gecong", "email": "ge.cong@zte.com.cn", "username": "gecong"}, {"value": 0, "_account_id": 22484, "name": "gengchc2", "email": "geng.changcai2@zte.com.cn", "username": "gengchc2"}], "comments": {}}, "openstack%2Frpm-packaging~master~I817c257ab132f557ba297c5ab9c188a68bba6bf4": {"owner_id": 26571, "owner_name": "Chang Liu", "owner_email": "liuchang77@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:39:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 08:38:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fdesignate~stable%2Ftrain~Iaf21ec59755375d3c3bc043b16a1b14aa991475e": {"owner_id": 22623, "owner_name": "Erik Olof Gunnar Andersson", "owner_email": "eandersson@blizzard.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 2, "date": "2020-02-11 09:40:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-02-12 16:39:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "openstack%2Fproject-config~master~I495c225022250f9fa055c12c422071b1f42ff753": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 18:05:25.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-12 17:58:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-12 19:50:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"roles/check-release-approval/files/check_approval.py": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "b11318bab3f2d99bcf934280b906df5870725c5b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d9325cf3", "line": 100, "range": {"start_line": 100, "start_character": 65, "end_line": 100, "end_character": 68}, "updated": "2020-02-12 17:40:44.000000000", "message": "Apparently the linter doesn't like this. Maybe better to just make it %s and pass in the output from json.dumps as an arg to the logger anyway?", "commit_id": "1ad4a5f8994ead37d27628719891970096d3113f"}]}}, "openstack%2Fglance~master~I3d048010c5c3a62adba0315d3d6c9bb3c051a8e2": {"owner_id": 15334, "owner_name": "Stephen Finucane", "owner_email": "stephenfin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 0, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, {"value": 0, "_account_id": 6928, "name": "Ben Nemec", "email": "openstack@nemebean.com", "username": "bnemec"}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:20:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-12 16:44:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"glance/cmd/replicator.py": [{"author": {"_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}, "change_message_id": "662da4622ac35392dbaddb04fd7c6f28767c3191", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_dddf8864", "line": 78, "updated": "2020-01-09 18:16:01.000000000", "message": "if you add required=False here and after line #81 then it will work", "commit_id": "83585f28d93cfc0b0227a50d9d8edac27a11bade"}, {"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "37d3c4d8fce2654a4e9f8df04fb271b18d2d9fa1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e849798d", "line": 86, "updated": "2020-01-08 19:24:24.000000000", "message": "Maybe in testing we need to mock this? Still odd though. I'm surprised we aren't hitting this issue elsewhere.", "commit_id": "83585f28d93cfc0b0227a50d9d8edac27a11bade"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "5faabd00e2bd2342a9a418eb87e584105aa7cc84", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f3766ca3", "line": 86, "in_reply_to": "3fa7e38b_e849798d", "updated": "2020-01-23 18:02:29.000000000", "message": "mriedem saw what I think was a similar issue in nova when he tried to add some tests for a nova command [1]. We resolved that by...not testing things :)\n\n[1] https://review.opendev.org/#/c/694806/3", "commit_id": "83585f28d93cfc0b0227a50d9d8edac27a11bade"}]}}, "openstack%2Fpython-swiftclient~master~I661503e0d6bb7934f7e7a28b094264a2ee73a419": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 01:43:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}], "comments": {}}, "x%2Fvmware-nsx~master~I7e68c9d0e40e03c0e3e708e04c996fdceed56df4": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-02 08:10:05.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}], "comments": {}}, "openstack%2Frpm-packaging~master~Ib5117dce246f50e4bcef823727e2c451b3890ef1": {"owner_id": 6593, "owner_name": "Dirk Mueller", "owner_email": "dirk@dmllr.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 18:05:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 2, "date": "2020-02-13 08:13:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "x%2Ftobiko~master~I84cdacdf6afe75e7e70189f6861c4219d1695575": {"owner_id": 27978, "owner_name": "pini", "owner_email": "pkomarov@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-08 22:42:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27978, "name": "pini", "email": "pkomarov@redhat.com", "username": "pkomarov"}, {"value": 0, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}], "comments": {}}, "openstack%2Fsushy-cli~master~If24d9c66be9a5e9eab6f1a364c531c01d5e53665": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 07:26:30.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-13 07:26:30.000000000", "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}], "comments": {"sushycli/version.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "a08627f7ffddac4c591cfc49f2da177af3c247bc", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_cb8b691f", "line": 26, "updated": "2020-02-12 14:07:55.000000000", "message": "nit: version", "commit_id": "466e067ab0fcd36f83c4b0b383b4010f9d44acd7"}]}}, "openstack%2Fcyborg~master~I1be185a6bce2ae90eca244b21b207a22e5a92044": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 09:38:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 1, "date": "2020-02-12 09:38:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 2, "date": "2020-02-13 03:54:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {}}, "openstack%2Fcyborg~master~I39b3f02e898b67e4d4eb686b5a6cf9065c6280de": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 11:46:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 30759, "name": "Shogo Saito", "email": "shogo.saito.ac@hco.ntt.co.jp", "username": "s.shogo"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 2, "date": "2020-02-13 03:49:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/db/api.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "8a1824a7835dbc2997e860cdcf807265412b033a", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_8f1cd614", "side": "PARENT", "line": 138, "range": {"start_line": 138, "start_character": 8, "end_line": 138, "end_character": 49}, "updated": "2020-02-08 05:45:33.000000000", "message": "Why we remove this function? In the message I was not saw the reason, this change is big, I think you should add a releasenote for this, and said why we remove this db api, and instead of \"deployable_get_by_filters()\".\n\nAdd a new releasenote refer: https://docs.openstack.org/reno/latest/user/usage.html#creating-new-release-notes", "commit_id": "d8cbe092deaae6be2d90221ce64b40bffa3116c6"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "bf16d0be2adb6f8dadc0f3c20d6b13c98ed6c490", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_2f8fe222", "side": "PARENT", "line": 138, "range": {"start_line": 138, "start_character": 8, "end_line": 138, "end_character": 49}, "in_reply_to": "3fa7e38b_8f1cd614", "updated": "2020-02-09 14:12:46.000000000", "message": "Good catch. This part code should appear in the next patch[1]. I made a mistake when updating the code.\n[1]. https://review.opendev.org/#/c/703333/2\nThanks. will update this. So the releasenote is not needed.", "commit_id": "d8cbe092deaae6be2d90221ce64b40bffa3116c6"}], "cyborg/db/sqlalchemy/api.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "a2ad0d7cc6a2168c169324ea5512e91fabc8a3e0", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3c189a81", "line": 215, "range": {"start_line": 214, "start_character": 7, "end_line": 215, "end_character": 24}, "updated": "2020-01-20 09:21:10.000000000", "message": "https://review.opendev.org/#/c/703049/ already fixed this(because it depends-on https://review.opendev.org/#/c/702578, so it was not merged), I think you should rebased on that patch, and then run your test.\n\nYou can:\ngit review -d 703281\n\nand then:\ngit review -x 703049\ngit commit --amend\n\nfinally:\ngit review", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "6e07f550a8255e1e2279745a7cf3c32c5b8b7567", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ae0c42eb", "line": 215, "range": {"start_line": 214, "start_character": 7, "end_line": 215, "end_character": 24}, "in_reply_to": "3fa7e38b_3c189a81", "updated": "2020-01-21 02:44:46.000000000", "message": "Good advice. Thanks Brin. I know your patch had fixed this. This is only a temporary addition, so that unit tests can pass. After your patch merged, I will rebase on it.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a029cfa97000f44f3e36351a67c57a6045eedb85", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_424fb034", "line": 215, "range": {"start_line": 214, "start_character": 7, "end_line": 215, "end_character": 24}, "in_reply_to": "3fa7e38b_3c189a81", "updated": "2020-01-20 09:43:06.000000000", "message": "agree", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}], "cyborg/objects/deployable.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "6599ad03a3a1901ad07e3316223e2d7b64f72004", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_efb1ca01", "line": 139, "range": {"start_line": 137, "start_character": 0, "end_line": 139, "end_character": 20}, "updated": "2020-02-08 06:20:56.000000000", "message": "nit:        db_dpl_list = cls.dbapi.deployable_get_by_filters(context, filters)\n\nit's not more than 79 characters.", "commit_id": "8829e17b4d29f55f5a086bcd9a99cfe7d7c02cf3"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "bf16d0be2adb6f8dadc0f3c20d6b13c98ed6c490", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ef946a37", "line": 139, "range": {"start_line": 137, "start_character": 0, "end_line": 139, "end_character": 20}, "in_reply_to": "3fa7e38b_efb1ca01", "updated": "2020-02-09 14:12:46.000000000", "message": "Ok.", "commit_id": "8829e17b4d29f55f5a086bcd9a99cfe7d7c02cf3"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "cfb5769f3961055835a3352ea7d2caf864f09da2", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0f53ff16", "line": 139, "range": {"start_line": 137, "start_character": 0, "end_line": 139, "end_character": 20}, "in_reply_to": "3fa7e38b_efb1ca01", "updated": "2020-02-10 03:06:52.000000000", "message": "Thanks Brin. I think it's ok.", "commit_id": "8829e17b4d29f55f5a086bcd9a99cfe7d7c02cf3"}], "cyborg/tests/unit/db/test_db_deployable.py": [{"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a029cfa97000f44f3e36351a67c57a6045eedb85", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c25400c9", "line": 25, "range": {"start_line": 25, "start_character": 6, "end_line": 25, "end_character": 22}, "updated": "2020-01-20 09:43:06.000000000", "message": "I think we should also add test_deployable_create here. What do you think?", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "178c9b923e593618cc3826ce0a26cabfbe8e8df8", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_7a436112", "line": 25, "range": {"start_line": 25, "start_character": 6, "end_line": 25, "end_character": 22}, "in_reply_to": "3fa7e38b_8b08632e", "updated": "2020-01-21 08:58:15.000000000", "message": "Done.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "6ef046cd158650ad0f697c144f0a3766e2966e71", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_8b08632e", "line": 25, "range": {"start_line": 25, "start_character": 6, "end_line": 25, "end_character": 22}, "in_reply_to": "3fa7e38b_c25400c9", "updated": "2020-01-20 13:46:03.000000000", "message": "Thanks xinran. Good Catch. Actually every testcase include deployable_create method. That's why I didn't add a method to verify deployable_create.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "6599ad03a3a1901ad07e3316223e2d7b64f72004", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_cfa16ea9", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 32}, "updated": "2020-02-08 06:20:56.000000000", "message": "nit: instead of use \"from oslo_utils.fixture import uuidsentinel as uuids\", some reason in https://review.opendev.org/#/c/703341/2/cyborg/tests/unit/db/test_db_extarq.py@18", "commit_id": "8829e17b4d29f55f5a086bcd9a99cfe7d7c02cf3"}], "cyborg/tests/unit/db/utils.py": [{"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "a029cfa97000f44f3e36351a67c57a6045eedb85", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_e2257c5c", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 30}, "updated": "2020-01-20 09:43:06.000000000", "message": "I think we can remove these functions step by step, and use https://github.com/openstack/cyborg/blob/master/cyborg/tests/unit/fake_deployable.py instead, please see https://review.opendev.org/#/c/695648/7/cyborg/tests/unit/db/utils.py and https://review.opendev.org/#/c/695648/7/cyborg/tests/unit/fake_device.py.\nI think this can reduce the code redundancy.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ac75b358d0d0510fffc1239fa110ef9232f9f33d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_14e804de", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 30}, "in_reply_to": "3fa7e38b_ce9bbe76", "updated": "2020-01-21 06:16:09.000000000", "message": "As the same, move this to the fake_deplouable.py, make this looks clear.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3e4741ee1425ac3a927bc8141b1604e27990b893", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ce9bbe76", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 30}, "in_reply_to": "3fa7e38b_e2257c5c", "updated": "2020-01-21 02:56:02.000000000", "message": "I had created a story: https://storyboard.openstack.org/#!/story/2007190\nWe can sort out the duplicate code and add the appropriate fake data in this task.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "6ef046cd158650ad0f697c144f0a3766e2966e71", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f67e9a6b", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 30}, "in_reply_to": "3fa7e38b_e2257c5c", "updated": "2020-01-20 13:46:03.000000000", "message": "Thanks for xinran and bailin's advice. I agree that we need to set a series of fake data for all layers and rearrange redundant code like [1].\n[1]. https://github.com/openstack/cyborg/blob/master/cyborg/tests/unit/fake_deployable.py#L21\nBut for this patch, I think the main problem is to improve unit testing. To avoid complications, we should integrate the fake data with a new topic.\n@Xinran @Bailin. what do you think?", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "b5bba7379a69946a8ef3fe06fb35fc108616db6c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_22c5d409", "line": 21, "range": {"start_line": 21, "start_character": 0, "end_line": 21, "end_character": 30}, "in_reply_to": "3fa7e38b_e2257c5c", "updated": "2020-01-20 10:01:50.000000000", "message": "Yeah, I think that's also Sundar's mean, \"we could have a single set of fake data for all layers -- api, objects and db,  That one set can then be expanded to cover various cases. IMHO, having separate sets for db and objects is ok for UT right now.\"\n\nSo you should define the deployable,devices,device_profiles,attach_handle etc. in fake_xxx.py under cyborg/tests/unit/fake_xxx.py\n\nAgree with xinran, that will avoid so many redundant code whil need some fake data.", "commit_id": "623140fd3b08be8ea0ff0d3a696dc6fa9e4a358f"}]}}, "openstack%2Fwatcher~master~If8fa82dab2e7f0ae359805eb68cc8562cfc641e3": {"owner_id": 21692, "owner_name": "licanwei", "owner_email": "li.canwei2@zte.com.cn", "labels": [{"value": 2, "date": "2020-02-10 03:33:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-13 06:51:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:37:34.000000000", "_account_id": 29911, "name": "Dantali0n", "email": "info@dantalion.nl", "username": "Dantali0n"}], "comments": {}}, "openstack%2Fwatcher~master~Ia6db6f8c21282a4755997cf47fd618670148c23f": {"owner_id": 21692, "owner_name": "licanwei", "owner_email": "li.canwei2@zte.com.cn", "labels": [{"value": 2, "date": "2020-02-10 03:28:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-13 06:51:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcyborg~master~Iebcbf2ebd6da3bc51e85c62f18c547909026c2f0": {"owner_id": 26458, "owner_name": "Brin Zhang", "owner_email": "zhangbailin@inspur.com", "labels": [{"value": 2, "date": "2020-02-13 03:25:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 2, "date": "2020-02-12 14:27:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {}}, "zuul%2Fzuul~master~I547c05a565925828db87cd265915717755df897d": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 22:07:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 2, "date": "2020-02-12 22:03:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I842b8cfc670c24caa62cf01525db1ea52640cf8b": {"owner_id": 29344, "owner_name": "\u767d\u6c38\u541b", "owner_email": "bai.yongjun@99cloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30810, "name": "James Kirsch", "email": "generalfuzz@gmail.com", "username": "generalfuzz"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29344, "name": "\u767d\u6c38\u541b", "email": "bai.yongjun@99cloud.net", "username": "yj.bai"}], "comments": {}}, "openstack%2Fswift~master~I401fea9bddb0858f0140e9211658acc99b1979af": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fswift~master~Ibb30098e3c280690cee9704cdecd32c449539127": {"owner_id": 15343, "owner_name": "Tim Burke", "owner_email": "tburke@nvidia.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15343, "name": "Tim Burke", "email": "tburke@nvidia.com", "username": "tburke"}, {"value": -1, "date": "2020-02-11 22:30:54.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 597, "name": "Pete Zaitcev", "email": "zaitcev@kotori.zaitcev.us", "username": "zaitcev"}, "change_message_id": "3429b8502e56112a530d5249e26690083abaafc9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_870a4fcd", "line": 8, "updated": "2020-02-11 22:30:54.000000000", "message": "please insert \"Previously, logs would often show 499s in places where a 404 would be more appropriate.\" Not obvious what this patch does otherwise.", "commit_id": "8519ea6bd5752e93c01dbfa91eaf39f021106298"}]}}, "openstack%2Fcyborg-specs~master~I0f06295874a8fcfb0c097f99e2d90dca06d5bdd3": {"owner_id": 24872, "owner_name": "YumengBao", "owner_email": "yumeng_bao@yahoo.com", "labels": [{"value": 2, "date": "2020-02-13 03:18:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 1, "date": "2020-02-11 09:54:54.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-13 04:44:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"specs/ussuri/approved/policy-defaults-refresh.rst": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_57843eb2", "line": 18, "range": {"start_line": 18, "start_character": 13, "end_line": 18, "end_character": 14}, "updated": "2020-01-21 09:21:21.000000000", "message": "white space.", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_62b713fa", "line": 18, "range": {"start_line": 18, "start_character": 13, "end_line": 18, "end_character": 14}, "in_reply_to": "3fa7e38b_57843eb2", "updated": "2020-01-23 09:07:02.000000000", "message": "Done", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_77813aa0", "line": 25, "range": {"start_line": 25, "start_character": 30, "end_line": 25, "end_character": 31}, "updated": "2020-01-21 09:21:21.000000000", "message": "C", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_82bc8fdb", "line": 25, "range": {"start_line": 25, "start_character": 30, "end_line": 25, "end_character": 31}, "in_reply_to": "3fa7e38b_77813aa0", "updated": "2020-01-23 09:07:02.000000000", "message": "Done", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_d7b90e7c", "line": 27, "range": {"start_line": 27, "start_character": 8, "end_line": 27, "end_character": 9}, "updated": "2020-01-21 09:21:21.000000000", "message": "C", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_22ad9ba3", "line": 27, "range": {"start_line": 27, "start_character": 8, "end_line": 27, "end_character": 9}, "in_reply_to": "3fa7e38b_d7b90e7c", "updated": "2020-01-23 09:07:02.000000000", "message": "Done", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_97af162c", "line": 30, "range": {"start_line": 30, "start_character": 6, "end_line": 30, "end_character": 7}, "updated": "2020-01-21 09:21:21.000000000", "message": "C", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_e2ca236d", "line": 30, "range": {"start_line": 30, "start_character": 6, "end_line": 30, "end_character": 7}, "in_reply_to": "3fa7e38b_97af162c", "updated": "2020-01-23 09:07:02.000000000", "message": "Done", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_374e6290", "line": 54, "range": {"start_line": 53, "start_character": 35, "end_line": 54, "end_character": 14}, "updated": "2020-01-21 09:21:21.000000000", "message": "yeah, \"reader\" role useful.", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_5a0ea533", "line": 77, "range": {"start_line": 77, "start_character": 25, "end_line": 77, "end_character": 29}, "updated": "2020-01-21 09:21:21.000000000", "message": "CURD means current define?", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_c2928755", "line": 77, "range": {"start_line": 77, "start_character": 25, "end_line": 77, "end_character": 29}, "in_reply_to": "3fa7e38b_5a0ea533", "updated": "2020-01-23 09:07:02.000000000", "message": "CRUD stands for Create, Read, Update, and Delete.", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_fae99118", "line": 96, "updated": "2020-01-21 09:21:21.000000000", "message": "In U release I think we should keep the old policy work well, and we can consider deprecating the older policy in V release or later.\n\nIn order to compatible older polify, maybe we should add a configuration of this new policy, such as in Nova if we want to use the new policy we should config enforce_scope in nova.conf:\n\n\"enforce_scope config option default value is False which means if token scope does not matches, only a warning is logged. This feature can be enabled via config option nova.conf [oslo_policy] enforce_scope=True\"\n\nI think we also need add \"enforce_scope\" option via cyborg.conf [oslo_policy].", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "4b7ce60d97ce54791ad45278c74da3c9584b88a7", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_35ef131d", "line": 96, "in_reply_to": "3fa7e38b_fae99118", "updated": "2020-01-23 09:53:23.000000000", "message": "Good suggestion. Done.", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7a1a8118", "line": 98, "range": {"start_line": 98, "start_character": 2, "end_line": 98, "end_character": 32}, "updated": "2020-01-21 09:21:21.000000000", "message": "Can we clarify the display form of the system scoped admin policy?", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_159c57bc", "line": 98, "range": {"start_line": 98, "start_character": 2, "end_line": 98, "end_character": 32}, "in_reply_to": "3fa7e38b_7a1a8118", "updated": "2020-01-23 09:07:02.000000000", "message": "emmm.. policy will be associated with each specific API operation.pls see the example here:https://github.com/openstack/nova/blob/3e7e2530f1d0470323916349e01a1f5b11686421/nova/policies/services.py#L49", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_1a134d04", "line": 103, "range": {"start_line": 103, "start_character": 2, "end_line": 103, "end_character": 33}, "updated": "2020-01-21 09:21:21.000000000", "message": "ditto", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_dace158e", "line": 107, "range": {"start_line": 107, "start_character": 2, "end_line": 107, "end_character": 34}, "updated": "2020-01-21 09:21:21.000000000", "message": "ditto", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "034a298d047cbe5af7897264add534d6663500f9", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_dad85525", "line": 112, "updated": "2020-01-21 09:21:21.000000000", "message": "IMO, need to add a Scope to the role:\nI suggestion we can define the role such as:\n\n# just only has the system role, if we are *system_* role, we # can get all projects resource.\nSYSTEM_ADMIN = 'rule:admin_api and system_scope:all'\nSYSTEM_READER = 'role:reader and system_scope:all'\n\n# if we are *project_* role, we just can get his own project's # resource\nPROJECT_MEMBER = 'role:member and project_id:%(project_id)s'\nPROJECT_READER = 'role:reader and project_id:%(project_id)s'\n\nPROJECT_MEMBER_OR_SYSTEM_ADMIN = PROJECT_MEMBER + 'or' + SYSTEM_ADMIN\nPROJECT_READER_OR_SYSTEM_READER = PROJECT_READER + 'or' + SYSTEM_READER\n\nYou can review http://specs.openstack.org/openstack/nova-specs/specs/ussuri/approved/policy-defaults-refresh.html#scope", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6f3782dd9ac62b6bf9675e7eac6a4437440a6b04", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_35539317", "line": 112, "in_reply_to": "3fa7e38b_dad85525", "updated": "2020-01-23 09:07:02.000000000", "message": "yes, that'll be found in the policy code:\nhttps://review.opendev.org/#/c/699102/6/cyborg/common/policy.py", "commit_id": "b8c0a991a0414ad3aafb974a88f568fc064a453b"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "11368238513543e24bc3a225cb1eadeffb8fccdb", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_56fb7546", "line": 38, "range": {"start_line": 37, "start_character": 19, "end_line": 38, "end_character": 6}, "updated": "2020-01-28 22:58:51.000000000", "message": "This is indeed not strict enough, because it means users with the \"reader\" role will be able to use the cyborg:arq:create API, which should not be allowed. I think this should be captured here in this spec, not left for further discussion.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_b5c8f84c", "line": 38, "range": {"start_line": 37, "start_character": 19, "end_line": 38, "end_character": 6}, "in_reply_to": "3fa7e38b_56fb7546", "updated": "2020-02-10 21:13:32.000000000", "message": "Done", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9af55f5d5b1606cc2ab41ab5d68e6ca361796094", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_0c10904b", "line": 74, "range": {"start_line": 72, "start_character": 0, "end_line": 74, "end_character": 14}, "updated": "2020-01-29 01:01:16.000000000", "message": "this is not clear to me. do we need project admin now? if cyborg handles resource at the user level or want to restrict operation at user levels then having project admin is more useful otherwise I think project members should work fine for existing admin.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0920eef214f116bf29939f1fd31646454a8c59c3", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_d213ee00", "line": 74, "range": {"start_line": 72, "start_character": 0, "end_line": 74, "end_character": 14}, "in_reply_to": "3fa7e38b_0c10904b", "updated": "2020-01-29 04:30:18.000000000", "message": "I think project member is suitable.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_6752c813", "line": 74, "range": {"start_line": 72, "start_character": 0, "end_line": 74, "end_character": 14}, "in_reply_to": "3fa7e38b_0c10904b", "updated": "2020-02-10 21:13:32.000000000", "message": "Thanks for pointing this good question.\nAfter reassessing with the team, we reached some agreement and updated this table in the following link, pls check: https://wiki.openstack.org/wiki/Cyborg/Policy\nIn this table, we do need a project_admin to patch the deployable because that operation is user sensitive.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9af55f5d5b1606cc2ab41ab5d68e6ca361796094", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_4c38c8c9", "line": 111, "range": {"start_line": 111, "start_character": 32, "end_line": 111, "end_character": 33}, "updated": "2020-01-29 01:01:16.000000000", "message": "how about project member? you mentioned that in use case section", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_a7752099", "line": 111, "range": {"start_line": 111, "start_character": 32, "end_line": 111, "end_character": 33}, "in_reply_to": "3fa7e38b_4c38c8c9", "updated": "2020-02-10 21:13:32.000000000", "message": "ditto.pls check the table.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "11368238513543e24bc3a225cb1eadeffb8fccdb", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_566e15fe", "line": 112, "updated": "2020-01-28 22:58:51.000000000", "message": "This is provided by oslo.policy's config loader, it doesn't need to be explicitly added to cyborg.\n\nhttps://docs.openstack.org/oslo.policy/latest/configuration/index.html#oslo_policy.enforce_scope", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "31477cede83e2becd75c23d50992190fbcd1e621", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_4352c712", "line": 112, "in_reply_to": "3fa7e38b_127ae623", "updated": "2020-01-29 19:47:52.000000000", "message": "I'm not saying it's not necessary. I'm saying you get it for free when you use oslo.policy, you don't need to take action to add it.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "566e0997eb548a6733cb4536a7e42daecf2b314a", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_7ebbd8e2", "line": 112, "in_reply_to": "3fa7e38b_4352c712", "updated": "2020-01-29 21:19:15.000000000", "message": "true.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0920eef214f116bf29939f1fd31646454a8c59c3", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_92b816e8", "line": 112, "in_reply_to": "3fa7e38b_566e15fe", "updated": "2020-01-29 04:30:18.000000000", "message": "Why not? I think it is necessary to verify that the scopes match. Right now, even if it's not available, I think we need to reserve this configuration item.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_41d3fc36", "line": 112, "in_reply_to": "3fa7e38b_566e15fe", "updated": "2020-02-10 21:13:32.000000000", "message": "removed.\nand Thanks for the explanation!", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "a72bfdf8d716c859aca5528daeab1f8d1ca70899", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_655f9d10", "line": 112, "in_reply_to": "3fa7e38b_7ebbd8e2", "updated": "2020-02-03 03:02:20.000000000", "message": "Thanks, ++", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "9a99f042b89fb7a2310ae5319ab17ea13ab2ec59", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_127ae623", "line": 112, "in_reply_to": "3fa7e38b_92b816e8", "updated": "2020-01-29 04:34:16.000000000", "message": "Emm...limited to the Cyborg version upgrade, I also think that it is reasonable not to have this configuration. In any case, it is good for me.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "a72bfdf8d716c859aca5528daeab1f8d1ca70899", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_055ca918", "line": 121, "range": {"start_line": 112, "start_character": 1, "end_line": 121, "end_character": 62}, "updated": "2020-02-03 03:02:20.000000000", "message": "As above discuss, we don't need this sencence, and I think we just need to make a simple statement in this SPEC.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0920eef214f116bf29939f1fd31646454a8c59c3", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_b2bbd2e1", "line": 121, "range": {"start_line": 121, "start_character": 20, "end_line": 121, "end_character": 24}, "updated": "2020-01-29 04:30:18.000000000", "message": "cyborg", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_6157185b", "line": 121, "range": {"start_line": 112, "start_character": 1, "end_line": 121, "end_character": 62}, "in_reply_to": "3fa7e38b_055ca918", "updated": "2020-02-10 21:13:32.000000000", "message": "Done", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9af55f5d5b1606cc2ab41ab5d68e6ca361796094", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ace5bc3f", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 0}, "updated": "2020-01-29 01:01:16.000000000", "message": "it will be good if you can add project member mapping also.\n\nor a table to map the existing defaults to new defaults but as cyborg policies are not so many so listing them under new defaults is enough.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ac9427e8", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 0}, "in_reply_to": "3fa7e38b_929d766d", "updated": "2020-02-10 21:13:32.000000000", "message": "Hi Brin, please the table here:https://wiki.openstack.org/wiki/Cyborg/Policy", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_e1d9c880", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 0}, "in_reply_to": "3fa7e38b_ace5bc3f", "updated": "2020-02-10 21:13:32.000000000", "message": "Please see the update in this table: https://wiki.openstack.org/wiki/Cyborg/Policy\nI've added the legacy policies to compare with future policies. Project member mapping is also included.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "0920eef214f116bf29939f1fd31646454a8c59c3", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_929d766d", "line": 161, "range": {"start_line": 161, "start_character": 0, "end_line": 161, "end_character": 0}, "in_reply_to": "3fa7e38b_ace5bc3f", "updated": "2020-01-29 04:30:18.000000000", "message": "agree, add a table to map the existing defaults will be clear, that we can see the new policy mapping which existing policy.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "11368238513543e24bc3a225cb1eadeffb8fccdb", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_164dfd91", "line": 165, "updated": "2020-01-28 22:58:51.000000000", "message": "++", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_8c5dab55", "line": 165, "in_reply_to": "3fa7e38b_164dfd91", "updated": "2020-02-10 21:13:32.000000000", "message": "Hi Colleen, please see the updated table here:https://wiki.openstack.org/wiki/Cyborg/Policy", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "11368238513543e24bc3a225cb1eadeffb8fccdb", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_9636cd00", "line": 211, "range": {"start_line": 211, "start_character": 1, "end_line": 211, "end_character": 32}, "updated": "2020-01-28 22:58:51.000000000", "message": "++", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_01d504b8", "line": 211, "range": {"start_line": 211, "start_character": 1, "end_line": 211, "end_character": 32}, "in_reply_to": "3fa7e38b_9636cd00", "updated": "2020-02-10 21:13:32.000000000", "message": "Done", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "11368238513543e24bc3a225cb1eadeffb8fccdb", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_d619a586", "line": 214, "range": {"start_line": 213, "start_character": 46, "end_line": 214, "end_character": 23}, "updated": "2020-01-28 22:58:51.000000000", "message": "devstack uses the keystone-manage bootstrap command which creates the implied roles. Other deployers can also re-run the bootstrap command on an existing deployment and the implied role relationships will be created on the existing roles. There should be no additions needed to devstack/lib/cyborg for this.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_9bb44ad5", "line": 214, "range": {"start_line": 213, "start_character": 46, "end_line": 214, "end_character": 23}, "in_reply_to": "3fa7e38b_d619a586", "updated": "2020-02-10 21:13:32.000000000", "message": "ok. remove this.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9af55f5d5b1606cc2ab41ab5d68e6ca361796094", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_cc835854", "line": 244, "range": {"start_line": 241, "start_character": 0, "end_line": 244, "end_character": 20}, "updated": "2020-01-29 01:01:16.000000000", "message": "this is very important to make sure we do nor break existing deployment. Nova did not have powerful policy tests to make sure existing behaviour works fine or not. For that we decided to improve the existing tests to test with all the possible context.\n\nand while making the changes in policies as per this spec, we modify those tests and check what all things are working and not working. \n\nExample from nova (1 set of policy change):\n1. Add tests with all context\n- https://review.opendev.org/#/c/669181/\n2. Adding scope and changing tests to reflect that \n- https://review.opendev.org/#/c/645427/\n3. Modify check_str for new defaults (reader roles)\n- https://review.opendev.org/#/c/645452/", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_2180409c", "line": 244, "range": {"start_line": 241, "start_character": 0, "end_line": 244, "end_character": 20}, "in_reply_to": "3fa7e38b_cc835854", "updated": "2020-02-10 21:13:32.000000000", "message": "Thanks a lot for providing the reference, Ghanshyam! They are very helpful for Cyborg.", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "9af55f5d5b1606cc2ab41ab5d68e6ca361796094", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_2c946c8b", "line": 246, "range": {"start_line": 246, "start_character": 0, "end_line": 246, "end_character": 30}, "updated": "2020-01-29 01:01:16.000000000", "message": "cyborg use policy in code right?", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "a24f1f4a9e5959ba41f57c502766996970e0f1a7", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_a1bd1068", "line": 246, "range": {"start_line": 246, "start_character": 0, "end_line": 246, "end_character": 30}, "in_reply_to": "3fa7e38b_2c946c8b", "updated": "2020-02-10 21:13:32.000000000", "message": "yes, exactly!", "commit_id": "6df50f92423614c7543fc7d8fcf1fe378e29c2ae"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4966e76b8328fc0a2cc7438f3ec0b197463e8244", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_229b5bc7", "line": 38, "range": {"start_line": 38, "start_character": 27, "end_line": 38, "end_character": 57}, "updated": "2020-02-11 02:56:50.000000000", "message": "Add a white space between users[#arq-create-discussion]_, otherwise it is an invalid reference.", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "397cbebc52e842a8cc97710c4b33e599ff9eec3b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_ee1bec19", "line": 38, "range": {"start_line": 38, "start_character": 27, "end_line": 38, "end_character": 57}, "in_reply_to": "3fa7e38b_229b5bc7", "updated": "2020-02-11 09:49:00.000000000", "message": "Done", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4966e76b8328fc0a2cc7438f3ec0b197463e8244", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_42a0d7f2", "line": 78, "range": {"start_line": 78, "start_character": 2, "end_line": 78, "end_character": 34}, "updated": "2020-02-11 02:56:50.000000000", "message": "ditto", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4966e76b8328fc0a2cc7438f3ec0b197463e8244", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_a2ae6be2", "line": 86, "range": {"start_line": 86, "start_character": 14, "end_line": 86, "end_character": 61}, "updated": "2020-02-11 02:56:50.000000000", "message": "ditto", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4966e76b8328fc0a2cc7438f3ec0b197463e8244", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_2266fbf1", "line": 102, "range": {"start_line": 102, "start_character": 12, "end_line": 102, "end_character": 34}, "updated": "2020-02-11 02:56:50.000000000", "message": "Invalid reference. It should be \"table [#cyborg-policy-table]_\"", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "397cbebc52e842a8cc97710c4b33e599ff9eec3b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_4e232058", "line": 102, "range": {"start_line": 102, "start_character": 12, "end_line": 102, "end_character": 34}, "in_reply_to": "3fa7e38b_2266fbf1", "updated": "2020-02-11 09:49:00.000000000", "message": "Done", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "4966e76b8328fc0a2cc7438f3ec0b197463e8244", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_3f361403", "line": 115, "range": {"start_line": 115, "start_character": 24, "end_line": 115, "end_character": 35}, "updated": "2020-02-11 02:56:50.000000000", "message": "s/requrements/requirements", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "397cbebc52e842a8cc97710c4b33e599ff9eec3b", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_0e19a821", "line": 115, "range": {"start_line": 115, "start_character": 24, "end_line": 115, "end_character": 35}, "in_reply_to": "3fa7e38b_3f361403", "updated": "2020-02-11 09:49:00.000000000", "message": "Done", "commit_id": "38ff95b873365f325da2b8552423f72c840dc6bc"}], "specs/ussuri/policy-defaults-refresh.rst": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "2e4072ee979bbe744ac1c20b25b20dc8510cf442", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6b2232a9", "line": 84, "range": {"start_line": 84, "start_character": 79, "end_line": 84, "end_character": 80}, "updated": "2019-12-15 06:43:00.000000000", "message": "nit", "commit_id": "fabebab2261b7a2cba9a249c6e44ba07784407c1"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "2e4072ee979bbe744ac1c20b25b20dc8510cf442", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_cb132659", "line": 95, "range": {"start_line": 95, "start_character": 11, "end_line": 95, "end_character": 12}, "updated": "2019-12-15 06:43:00.000000000", "message": "space.", "commit_id": "fabebab2261b7a2cba9a249c6e44ba07784407c1"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "2e4072ee979bbe744ac1c20b25b20dc8510cf442", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_0b0a9e1d", "line": 226, "range": {"start_line": 226, "start_character": 7, "end_line": 226, "end_character": 11}, "updated": "2019-12-15 06:43:00.000000000", "message": "U?", "commit_id": "fabebab2261b7a2cba9a249c6e44ba07784407c1"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3c22e314a27732f92ca5561eb56d0708a3c45f04", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3f09d0db", "line": 26, "range": {"start_line": 26, "start_character": 68, "end_line": 26, "end_character": 74}, "updated": "2019-12-16 07:20:54.000000000", "message": "V2 API.", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3c22e314a27732f92ca5561eb56d0708a3c45f04", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fff258e4", "line": 37, "range": {"start_line": 37, "start_character": 5, "end_line": 37, "end_character": 6}, "updated": "2019-12-16 07:20:54.000000000", "message": "??", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3c22e314a27732f92ca5561eb56d0708a3c45f04", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_bffce0b6", "line": 40, "range": {"start_line": 40, "start_character": 14, "end_line": 40, "end_character": 20}, "updated": "2019-12-16 07:20:54.000000000", "message": "cyborg", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "3018a22079098fa4e8652d5217e6166a83229e00", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_9fb7a4d8", "line": 68, "range": {"start_line": 68, "start_character": 31, "end_line": 68, "end_character": 56}, "updated": "2019-12-16 07:22:29.000000000", "message": "not sure we can do accelerator live migration from point of view of physical level.", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "3018a22079098fa4e8652d5217e6166a83229e00", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3fac7087", "line": 88, "range": {"start_line": 88, "start_character": 22, "end_line": 88, "end_character": 27}, "updated": "2019-12-16 07:22:29.000000000", "message": "useful", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3c22e314a27732f92ca5561eb56d0708a3c45f04", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7fb2e8ea", "line": 133, "range": {"start_line": 133, "start_character": 0, "end_line": 133, "end_character": 30}, "updated": "2019-12-16 07:20:54.000000000", "message": "nit: one space line.", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, "change_message_id": "3018a22079098fa4e8652d5217e6166a83229e00", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_bf986076", "line": 229, "range": {"start_line": 224, "start_character": 0, "end_line": 229, "end_character": 18}, "updated": "2019-12-16 07:22:29.000000000", "message": "This is the first time you propose this spec.  This part should be update.", "commit_id": "a644f8323055820bb5515705eff2769868f9bc74"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f34fb732", "line": 102, "updated": "2019-12-19 03:51:57.000000000", "message": "In addition to adding new rule names, the existing policy rules should deprecate their old check strings and use the new rules as defaults. Here's how policy deprecation works in oslo.policy: https://specs.openstack.org/openstack/oslo-specs/specs/queens/policy-deprecation.html#proposed-change\n\nIt's recommended to use oslo.policy's DocumentedRuleDefault (instead of RuleDefault) so that the deprecated rules are properly documented and it's clear to operators how the rules are changing.", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b35b7ff7", "line": 126, "range": {"start_line": 125, "start_character": 2, "end_line": 126, "end_character": 31}, "updated": "2019-12-19 03:51:57.000000000", "message": "Are these devices that are owned by a project?", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "78fe9e90f265e3ba967f11c13d0112fa8bd0a102", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_291de20f", "line": 126, "range": {"start_line": 125, "start_character": 2, "end_line": 126, "end_character": 31}, "in_reply_to": "3fa7e38b_b35b7ff7", "updated": "2019-12-19 13:07:11.000000000", "message": "yes!", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d35e3be7", "line": 130, "range": {"start_line": 129, "start_character": 2, "end_line": 130, "end_character": 31}, "updated": "2019-12-19 03:51:57.000000000", "message": "Are these devices across multiple projects?", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "78fe9e90f265e3ba967f11c13d0112fa8bd0a102", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_c92c4e4b", "line": 130, "range": {"start_line": 129, "start_character": 2, "end_line": 130, "end_character": 31}, "in_reply_to": "3fa7e38b_d35e3be7", "updated": "2019-12-19 13:07:11.000000000", "message": "yes", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_1364d3b2", "line": 135, "updated": "2019-12-19 03:51:57.000000000", "message": "Other policy defaults will have to change. For example, the rule \"cyborg:arq:create\" has default \"rule:allow\" which equates to \"@\" which is much too permissive (it would allow a user with the \"reader\" role to perform this operation). Instead it should be \"role:member\" with scope_type [\"project\"].", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f3e1f72c", "line": 191, "range": {"start_line": 190, "start_character": 66, "end_line": 191, "end_character": 12}, "updated": "2019-12-19 03:51:57.000000000", "message": "There shouldn't be new APIs. This goal is about updating the existing APIs to have more restrictive default policies.", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "78fe9e90f265e3ba967f11c13d0112fa8bd0a102", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_b8483662", "line": 191, "range": {"start_line": 190, "start_character": 66, "end_line": 191, "end_character": 12}, "in_reply_to": "3fa7e38b_f3e1f72c", "updated": "2019-12-19 13:07:11.000000000", "message": "right. seems no tempest is needed for now.\nthe unit test is enough.\nremoved.", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}, "change_message_id": "a1977f89b140d911f90ce87def404dcf3c3c421e", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_13ddb36c", "line": 192, "range": {"start_line": 192, "start_character": 13, "end_line": 192, "end_character": 63}, "updated": "2019-12-19 03:51:57.000000000", "message": "I would recommend creating tests at the same time as the new policies are implemented, that way they can be validated at the same time.", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "78fe9e90f265e3ba967f11c13d0112fa8bd0a102", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d84bb25b", "line": 192, "range": {"start_line": 192, "start_character": 13, "end_line": 192, "end_character": 63}, "in_reply_to": "3fa7e38b_13ddb36c", "updated": "2019-12-19 13:07:11.000000000", "message": "ditto", "commit_id": "4baeeda7dff53a99ec487e5d1ac4f351277ac054"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_d0a5b802", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 6}, "updated": "2019-12-20 14:08:58.000000000", "message": "Better to say \"Role Based Access Control (RBAC) policies\". This provides more context to the reader.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_e1525d12", "line": 11, "range": {"start_line": 11, "start_character": 0, "end_line": 11, "end_character": 6}, "in_reply_to": "3fa7e38b_d0a5b802", "updated": "2019-12-23 08:20:23.000000000", "message": "Done", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_90af40df", "line": 15, "range": {"start_line": 15, "start_character": 57, "end_line": 15, "end_character": 65}, "updated": "2019-12-20 14:08:58.000000000", "message": "Nit: Keystone", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_01569906", "line": 15, "range": {"start_line": 15, "start_character": 57, "end_line": 15, "end_character": 65}, "in_reply_to": "3fa7e38b_90af40df", "updated": "2019-12-23 08:20:23.000000000", "message": "Done", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_50830856", "line": 18, "range": {"start_line": 18, "start_character": 19, "end_line": 18, "end_character": 23}, "updated": "2019-12-20 14:08:58.000000000", "message": "Acronym used without explanation: please see previous comment.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_a13c65c0", "line": 18, "range": {"start_line": 18, "start_character": 19, "end_line": 18, "end_character": 23}, "in_reply_to": "3fa7e38b_50830856", "updated": "2019-12-23 08:20:23.000000000", "message": "Done", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b0935ca4", "line": 36, "range": {"start_line": 36, "start_character": 23, "end_line": 36, "end_character": 52}, "updated": "2019-12-20 14:08:58.000000000", "message": "Yes. That discussion should complete and be included here, before this spec merges.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_70e2c432", "line": 47, "range": {"start_line": 47, "start_character": 19, "end_line": 47, "end_character": 41}, "updated": "2019-12-20 14:08:58.000000000", "message": "If a user creates an ARQ, then he is the owner of that specific ARQ, right? So, if PATCH ARQ requires admin_or_owner, only the user who created that ARQ can invoke PATCH, not any authenticated user, right?", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_41757196", "line": 47, "range": {"start_line": 47, "start_character": 19, "end_line": 47, "end_character": 41}, "in_reply_to": "3fa7e38b_70e2c432", "updated": "2019-12-23 08:20:23.000000000", "message": "yes, the owner means the user who created that ARQ, not an authenticated user. and the admin should also have the rights to PATCH ARQ. let's say admin or owner can PATCH an ARQ.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f0c79497", "line": 52, "range": {"start_line": 52, "start_character": 48, "end_line": 52, "end_character": 54}, "updated": "2019-12-20 14:08:58.000000000", "message": "Nit: Cyborg", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b0f4bcd1", "line": 68, "range": {"start_line": 68, "start_character": 23, "end_line": 68, "end_character": 46}, "updated": "2019-12-20 14:08:58.000000000", "message": "Sorry, I don't understand this. This should be the role that does most admin tasks for configuration and devices, like setting/updating cyborg.conf, enable/disable devices, etc. She is also the one that ensures system-wide aspects, e.g. Cyborg devices do not conflict with Nova PCI white list.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c16081d3", "line": 68, "range": {"start_line": 68, "start_character": 23, "end_line": 68, "end_character": 46}, "in_reply_to": "3fa7e38b_b0f4bcd1", "updated": "2019-12-23 08:20:23.000000000", "message": "Hi Sundar, IMHO 1) updating cyborg.conf is a service configuration, it should belong to the task of a Linux user, not the admin we talked here. 2) the \"disable services mainly\" I mentioned here refers to \"enable/disable device\": https://review.opendev.org/#/c/696012/5/specs/ussuri/approved/cyborg-api.rst  line354 and line378. I will update here to make it more clear. 3)system admin we talked here cannot ensure \"cyborg devices do not conflict with Nova PCI white list\" for 2 reasons: firstly, it cannot read nova.conf so it has no idea which devices are already in the nova PCI white list; secondly, the operator can make sure this manually, which is an economical way to achieve this goal.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_f0231457", "line": 71, "updated": "2019-12-20 14:08:58.000000000", "message": "What about project-scoped admin and member roles?", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9c466e22", "line": 71, "in_reply_to": "3fa7e38b_f0231457", "updated": "2019-12-23 08:20:23.000000000", "message": "Done", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9012e0fc", "line": 83, "range": {"start_line": 83, "start_character": 17, "end_line": 83, "end_character": 29}, "updated": "2019-12-20 14:08:58.000000000", "message": "Nit: typo", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_10b590ed", "line": 102, "updated": "2019-12-20 14:08:58.000000000", "message": "I suggest we define the role for each CRUD action for each object in this spec. E.g.\n\n* List devices: system-scoped (or project-scoped?) admin, proj reader?\n* Enable/disable devices: sys admin\n* List device profiles: sys/proj admin, sys/proj reader\n* Create device profiles: sys admin\netc.\n\nThis is what we actually do in RBAC usage. The details can be discussed as part of this spec. \n\nDo you aim to implement this in Ussuri? if so, shouldn't those changes be called out?", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_9c1d0e12", "line": 102, "in_reply_to": "3fa7e38b_10b590ed", "updated": "2019-12-23 08:20:23.000000000", "message": "Done. Added a link here.\nAnd yes, planning to implement this in Ussuri.", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "40006b972635a90c2e436ff606bab7049b6c3102", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_d0c29835", "line": 238, "range": {"start_line": 238, "start_character": 7, "end_line": 238, "end_character": 14}, "updated": "2019-12-20 14:08:58.000000000", "message": "'Introduced'", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "5f636263f4454c4fc910b911506bfe01fc26da39", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_1ccfde8b", "line": 238, "range": {"start_line": 238, "start_character": 7, "end_line": 238, "end_character": 14}, "in_reply_to": "3fa7e38b_d0c29835", "updated": "2019-12-23 08:20:23.000000000", "message": "Done", "commit_id": "5bbd3d26a43ba18217dd97da7f408bc3970d624b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_0af8a6be", "line": 14, "range": {"start_line": 14, "start_character": 53, "end_line": 14, "end_character": 54}, "updated": "2020-01-07 09:15:34.000000000", "message": "redundant white space.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_c8167a4b", "line": 14, "range": {"start_line": 14, "start_character": 53, "end_line": 14, "end_character": 54}, "in_reply_to": "3fa7e38b_0af8a6be", "updated": "2020-01-17 10:01:45.000000000", "message": "Done", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "86e927d9b2c5117b664bd70d2dd30ce6f5b3c5f7", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_25c27387", "line": 14, "range": {"start_line": 14, "start_character": 53, "end_line": 14, "end_character": 54}, "in_reply_to": "3fa7e38b_0af8a6be", "updated": "2020-01-07 09:51:57.000000000", "message": "Why the pep8 check not failed? I think it's belong to pep8 check.\n\nTODO: Fix the pep8 check in Cyborg-specs's docs.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_605f84e4", "line": 14, "range": {"start_line": 14, "start_character": 53, "end_line": 14, "end_character": 54}, "in_reply_to": "3fa7e38b_25c27387", "updated": "2020-01-17 10:01:45.000000000", "message": "Fixed in this patch:https://review.opendev.org/#/c/702819/. The reason is that the current pep8 only contains flake8 check, while flake8 only does the trailing whitespace check for .py file but not for .rst file. And doc8 can detect trailing whitespace for .rst file, so we should add doc8 check.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_2a7a4224", "line": 71, "range": {"start_line": 71, "start_character": 75, "end_line": 71, "end_character": 78}, "updated": "2020-01-07 09:15:34.000000000", "message": "s/etc/etc./", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_685426fe", "line": 71, "range": {"start_line": 71, "start_character": 75, "end_line": 71, "end_character": 78}, "in_reply_to": "3fa7e38b_2a7a4224", "updated": "2020-01-17 10:01:45.000000000", "message": "Done", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_4a669e57", "line": 98, "range": {"start_line": 98, "start_character": 26, "end_line": 98, "end_character": 33}, "updated": "2020-01-07 09:15:34.000000000", "message": "s/uograde/upgrade/", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_887082a9", "line": 98, "range": {"start_line": 98, "start_character": 26, "end_line": 98, "end_character": 33}, "in_reply_to": "3fa7e38b_4a669e57", "updated": "2020-01-17 10:01:45.000000000", "message": "Done", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ca960ef0", "line": 113, "range": {"start_line": 113, "start_character": 0, "end_line": 113, "end_character": 4}, "updated": "2020-01-07 09:15:34.000000000", "message": "I think the alternative is keep the old policy mechanism, but as time goes on, more and more features will be added, and then the verification of policies will become more and more complicated.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_686d06ca", "line": 113, "range": {"start_line": 113, "start_character": 0, "end_line": 113, "end_character": 4}, "in_reply_to": "3fa7e38b_ca960ef0", "updated": "2020-01-17 10:01:45.000000000", "message": "Done", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_c5003f03", "line": 120, "range": {"start_line": 120, "start_character": 0, "end_line": 120, "end_character": 15}, "updated": "2020-01-07 09:15:34.000000000", "message": "This change will be add in the v2 version, and I think this need a microversion for this change, so maybe this change should a new microversion (v2.1) to these APIs.\n\nIn the `api microversion changes`_, that will be deprecated v1, and start the 2.0 microversion:\n\n_api microversion change: https://review.opendev.org/#/c/699149/", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_e8fc960e", "line": 120, "range": {"start_line": 120, "start_character": 0, "end_line": 120, "end_character": 15}, "in_reply_to": "3fa7e38b_c5003f03", "updated": "2020-01-17 10:01:45.000000000", "message": "Thanks Brin for this point.\nThis policy refresh only improves the RBAC and will not affect the V2 API compatibility, so I don't think it needs a microversion.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "336ed93ab286943bc99e629a2dafdf8703b94a68", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_bb44691a", "line": 133, "range": {"start_line": 133, "start_character": 2, "end_line": 133, "end_character": 31}, "updated": "2020-01-02 15:24:45.000000000", "message": "Can devices in cyborg be associated to specific projects? If so, this check should ensure the user has reader authorization on the project in addition to the 'reader' role, correct?", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_f31c88c4", "line": 133, "range": {"start_line": 133, "start_character": 2, "end_line": 133, "end_character": 31}, "in_reply_to": "3fa7e38b_bb44691a", "updated": "2020-01-17 10:01:45.000000000", "message": "Hi Lance, thanks for raising this good question.\n1)In cyborg, a device can be shared across different projects, we had a discussion about your question, pls check[0].\n2)And for the GET API, not only the \"reader\" role has reader authorization, the \"member\"&\"admin\" role can also have reader authorization without demonstrating anywhere, because of the \"implied roles\" usage[1].\n\n[0]http://eavesdrop.openstack.org/meetings/openstack_cyborg/2020/openstack_cyborg.2020-01-09-03.03.log.html#l-30\n[1]https://specs.openstack.org/openstack/keystone-specs/specs/keystone/rocky/define-default-roles.html", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "0fc1d5d292a33c8502f5238b40e58aa9e34634a8", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_fd305908", "line": 133, "range": {"start_line": 133, "start_character": 2, "end_line": 133, "end_character": 31}, "in_reply_to": "3fa7e38b_f31c88c4", "updated": "2020-01-27 18:06:46.000000000", "message": "Ok - that makes sense. Thank you for taking the time to clarify.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "336ed93ab286943bc99e629a2dafdf8703b94a68", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_5b4d353a", "line": 137, "range": {"start_line": 137, "start_character": 2, "end_line": 137, "end_character": 31}, "updated": "2020-01-02 15:24:45.000000000", "message": "Is this going to list all devices regardless of the project they're associated to?", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_25c5f75d", "line": 137, "range": {"start_line": 137, "start_character": 2, "end_line": 137, "end_character": 31}, "in_reply_to": "3fa7e38b_5b4d353a", "updated": "2020-01-17 10:01:45.000000000", "message": "yes,exactly.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_aa2ab22b", "line": 143, "range": {"start_line": 143, "start_character": 77, "end_line": 143, "end_character": 78}, "updated": "2020-01-07 09:15:34.000000000", "message": "redundant whit space", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a8021eb8", "line": 143, "range": {"start_line": 143, "start_character": 77, "end_line": 143, "end_character": 78}, "in_reply_to": "3fa7e38b_aa2ab22b", "updated": "2020-01-17 10:01:45.000000000", "message": "Done", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "336ed93ab286943bc99e629a2dafdf8703b94a68", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1b5d7deb", "line": 171, "range": {"start_line": 171, "start_character": 0, "end_line": 171, "end_character": 4}, "updated": "2020-01-02 15:24:45.000000000", "message": "Deployers will need to look through the new policies (communicated via release notes?) to make sure they can adopt them, right?", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_4599131c", "line": 171, "range": {"start_line": 171, "start_character": 0, "end_line": 171, "end_character": 4}, "in_reply_to": "3fa7e38b_1b5d7deb", "updated": "2020-01-17 10:01:45.000000000", "message": "aha, yes. thanks for the reminder!", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "64564947b50e335f99a673bb592f0ce6dfba5fc3", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ea78aac2", "line": 189, "updated": "2020-01-07 09:15:34.000000000", "message": "I am not sure does it need to supplementary functional tests.\nIn Cyborg we lack of some functional tests [1] with the exist feature, I think it's necessary to add some functional tests for a new feature.\n\n[1]https://github.com/openstack/cyborg/tree/master/cyborg/tests/functional", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_c853da39", "line": 189, "in_reply_to": "3fa7e38b_ea78aac2", "updated": "2020-01-17 10:01:45.000000000", "message": "yeah, nice to have functional tests. But AFAIC, we can implement unit tests and cyborg-tempest-plugin first, and then functional tests. Now we still have work to improve in unit test and cyborg-tempest-plugin test.", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, "change_message_id": "336ed93ab286943bc99e629a2dafdf8703b94a68", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_7b6351ac", "line": 207, "range": {"start_line": 207, "start_character": 0, "end_line": 207, "end_character": 53}, "updated": "2020-01-02 15:24:45.000000000", "message": "Colleen has an idea for how to do this with devstack-tempest plugins, which keeps local unit testing times down and reuses some useful setup.\n\nhttps://review.opendev.org/#/c/686305/", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "6641758fc49242422d0cde65940dafb28b5e80be", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_25a73754", "line": 207, "range": {"start_line": 207, "start_character": 0, "end_line": 207, "end_character": 53}, "in_reply_to": "3fa7e38b_7b6351ac", "updated": "2020-01-17 10:01:45.000000000", "message": "wow. That's so cool!", "commit_id": "b1a024f9bb9ec042f07d3580a9c3a587cbba74fe"}]}}, "openstack%2Fheat~master~I1635dc4487a66783be636326bb0b64794e4fe157": {"owner_id": 12404, "owner_name": "Rico Lin", "owner_email": "ricolin@ricolky.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "a5847e6282325b5d4e67aeccf8870053891608de", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_68ec4bf3", "line": 13, "range": {"start_line": 11, "start_character": 11, "end_line": 13, "end_character": 22}, "updated": "2018-04-27 20:03:06.000000000", "message": "That doesn't follow in my opinion.", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}], "heat/engine/rsrc_defn.py": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "a5847e6282325b5d4e67aeccf8870053891608de", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_0804afc5", "line": 256, "updated": "2018-04-27 20:03:06.000000000", "message": "Why would we ignore these? I don't understand what the advantage would be.\n\n(And especially, why treat it differently to the metadata.)", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "bc0b76fb8ef8acafab971c4ac172fd5a6a7bfbc5", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_0bbca4b9", "line": 256, "in_reply_to": "9f6a8fd7_0804afc5", "updated": "2018-04-28 08:08:07.000000000", "message": "Properties is use for create/update a resource, since we not actually using any of it for external rsrc, I think it's better we not trying to parse dependency from it. As for metadata, we mostly use it for heat resources, and it might not just for create/update or for other purposes or action too. So I'm not sure if we should remove `metadata` deps for external resources.", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "a5847e6282325b5d4e67aeccf8870053891608de", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_e8e05bfd", "line": 258, "updated": "2018-04-27 20:03:06.000000000", "message": "We should also get the dependencies from self._external_id, since it may contain functions like get_resource or get_attr.", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "bc0b76fb8ef8acafab971c4ac172fd5a6a7bfbc5", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_6b20c04a", "line": 258, "in_reply_to": "9f6a8fd7_e8e05bfd", "updated": "2018-04-28 08:08:07.000000000", "message": "good point", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "a5847e6282325b5d4e67aeccf8870053891608de", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_08d26f35", "line": 265, "updated": "2018-04-27 20:03:06.000000000", "message": "The problem with just allowing this is that people can write working templates (with old-ish template versions) that rely on this for one cloud, but when porting them to another cloud running a different version of Heat (but still supporting the same template version) they'll break.\n\nTo resolve this, we need to add a check in all pre-rocky template versions that support external_id, to prevent users declaring both external_id and depends_on.", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}, {"author": {"_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, "change_message_id": "bc0b76fb8ef8acafab971c4ac172fd5a6a7bfbc5", "unresolved": false, "patch_set": 2, "id": "9f6a8fd7_cb2b0c2e", "line": 265, "in_reply_to": "9f6a8fd7_08d26f35", "updated": "2018-04-28 08:08:07.000000000", "message": "Agree with this, since we still waiting for Rocky version template to get approved(hope soon:)), I will just update my change and depend on that patch for now (https://review.openstack.org/#/c/548743/\n)", "commit_id": "b87d8de98c0e092949e206b8e381d03233f61b81"}]}}, "openstack%2Fceilometer~master~I8047d805b0a3da4051a6d618ed9ac40875b8636a": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 2, "date": "2020-02-13 02:12:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, {"value": 1, "date": "2020-02-12 21:34:17.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 03:08:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 1, "date": "2020-02-12 18:14:07.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "starlingx%2Froot~f%2Fcentos8~Ib73ee40565ba016eced986c69aed156e27d7df3c": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 1, "date": "2020-01-29 16:42:17.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-01-02 18:55:47.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": -2, "date": "2020-02-12 21:51:33.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {"build-tools/build-rpms-parallel": [{"author": {"_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, "change_message_id": "48bf59e905f4048c37fa7d34ff58fcc0de8bcad9", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6d8e0227", "line": 42, "range": {"start_line": 42, "start_character": 0, "end_line": 42, "end_character": 21}, "updated": "2020-02-12 21:51:33.000000000", "message": "This Max only applies to the ramdisk based compile environment.  There is always one disk based compile\nenvironment for building packages with very large disk space requirements.  Ram is far scarcer than disk, and such a large increase will reduce the number of ramdisk base worker noads to build everything else.\n\nThe proper solution is to ensure the build system is aware of the job size so that it schedules this package to build on the disk based worker.\n\nEdit ...\n\ncgcs-root/stx/integ/kernel/kernel-std/centos/build_srpm.data\n\n... and set ...\n\nBUILD_IS_BIG=21", "commit_id": "c7201e498d01276a20e0ebf05bdaa54161d16bf0"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "7acec3a22c237d1635e6370f6b5fafd73d17a32c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_1119a485", "line": 42, "range": {"start_line": 42, "start_character": 0, "end_line": 42, "end_character": 21}, "in_reply_to": "3fa7e38b_6d8e0227", "updated": "2020-02-13 03:18:34.000000000", "message": "It is already done at https://review.opendev.org/700859", "commit_id": "c7201e498d01276a20e0ebf05bdaa54161d16bf0"}]}}, "starlingx%2Fupstream~master~Id1c94fedca41abe96c7b38880bf325d4a25a95eb": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 15:58:17.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-01-17 20:26:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15435, "name": "Al Bailey", "email": "al.bailey@eng.windriver.com", "username": "albailey"}, {"value": 1, "date": "2020-01-17 13:46:38.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28676, "name": "Andy Ning", "email": "andy.ning@windriver.com", "username": "andy.wrs"}, {"value": 0, "_account_id": 9926, "name": "John Kung", "email": "john.kung@windriver.com", "username": "jkung"}, {"value": 0, "_account_id": 8768, "name": "Chris Friesen", "email": "chris.friesen@windriver.com", "username": "cbf123"}, {"value": 0, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}, {"value": 0, "_account_id": 28413, "name": "yong hu", "email": "yong.hu@intel.com", "username": "yhu6"}, {"value": 1, "date": "2020-01-06 18:19:21.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "_account_id": 21776, "name": "Jerry Sun", "email": "jerry.sun@windriver.com", "username": "jerrysun"}, {"value": 0, "_account_id": 28435, "name": "Angie Wang", "email": "angie.wang@windriver.com", "username": "angiewang"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28413, "name": "yong hu", "email": "yong.hu@intel.com", "username": "yhu6"}, "change_message_id": "ffe86696d6f2b68565e099226590b525bc8c7735", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_68cddb5c", "line": 7, "range": {"start_line": 7, "start_character": 36, "end_line": 7, "end_character": 40}, "updated": "2019-12-27 06:35:35.000000000", "message": "sending", "commit_id": "3618660ccd5c3b6ff27235e5519783987e504872"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "48b2856a06cf86bde4159b2710a698565b758aea", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_082d47fc", "line": 7, "range": {"start_line": 7, "start_character": 36, "end_line": 7, "end_character": 40}, "in_reply_to": "3fa7e38b_68cddb5c", "updated": "2019-12-27 07:02:21.000000000", "message": "Done", "commit_id": "3618660ccd5c3b6ff27235e5519783987e504872"}, {"author": {"_account_id": 28413, "name": "yong hu", "email": "yong.hu@intel.com", "username": "yhu6"}, "change_message_id": "ffe86696d6f2b68565e099226590b525bc8c7735", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e8022b72", "line": 10, "range": {"start_line": 10, "start_character": 8, "end_line": 10, "end_character": 19}, "updated": "2019-12-27 06:35:35.000000000", "message": "which monitors the \"updated\"", "commit_id": "3618660ccd5c3b6ff27235e5519783987e504872"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "48b2856a06cf86bde4159b2710a698565b758aea", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_a82d13fd", "line": 10, "range": {"start_line": 10, "start_character": 8, "end_line": 10, "end_character": 19}, "in_reply_to": "3fa7e38b_e8022b72", "updated": "2019-12-27 07:02:21.000000000", "message": "Done", "commit_id": "3618660ccd5c3b6ff27235e5519783987e504872"}]}}, "openstack%2Ftripleo-quickstart~master~I6beed9138580871067cc4388c2e5842cb7e0acae": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I8848636df368e8de256a623f44dc9a2c99742504": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fdevstack-gate~master~I341437856c709e1e0e281357b96901ae6ef7cd00": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 18:07:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 1, "date": "2020-02-12 23:17:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-12 22:02:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-12 22:35:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~Ic4598fa5234fb75da99706649db40c5ab925aa27": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-05 00:19:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 2, "date": "2020-02-04 13:33:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "openstack%2Fkolla-ansible~master~If20a89ae93b64b5a1b5895bb9dc73c4e70adaba7": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 13:35:27.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 2, "date": "2020-02-12 11:32:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-13 01:28:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19779, "name": "Chason Chan", "display_name": "chenxing", "email": "chason.chan@foxmail.com", "username": "chenxing"}], "comments": {}}, "openstack%2Fneutron-tempest-plugin~master~I8af041925119463c7199238988f0133e8d993a8f": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 2, "date": "2020-02-13 00:40:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 2, "date": "2020-02-12 08:48:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 1, "date": "2020-02-12 12:49:48.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "c5e637c691cb62fb4fcfa7c78a154466589d11bf", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_b3c829a7", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 59}, "updated": "2020-02-07 11:19:35.000000000", "message": "I would actually rephrase this somehow to reflect that is not just enhancing the current test but also adding IGMP test coverage which didn't exist before :)", "commit_id": "436a4a5df4a5e973cebac9078b541fe98d5a7953"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "6fcd4cc27448a21d4a0c788c122075f6f1b9bf5a", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5344551a", "line": 7, "range": {"start_line": 7, "start_character": 0, "end_line": 7, "end_character": 59}, "in_reply_to": "3fa7e38b_b3c829a7", "updated": "2020-02-07 11:20:45.000000000", "message": "True that, well, if I happen to send a new patch-set I can update it.", "commit_id": "436a4a5df4a5e973cebac9078b541fe98d5a7953"}], "neutron_tempest_plugin/config.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "099cb5b0ae71e82ea27c037eda03a840206ce20e", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_c00a941c", "line": 131, "updated": "2020-02-10 09:38:37.000000000", "message": "maybe we should add release note as we are adding new config option?", "commit_id": "436a4a5df4a5e973cebac9078b541fe98d5a7953"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "0c76a3268b154c3d1d4e8f0ade377516678b281a", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_cd672c52", "line": 131, "in_reply_to": "3fa7e38b_c00a941c", "updated": "2020-02-10 12:03:29.000000000", "message": "+1", "commit_id": "436a4a5df4a5e973cebac9078b541fe98d5a7953"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "a50b08413596e8bcebbced854e02da4d243bb5e4", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_2d7fe0de", "line": 131, "in_reply_to": "3fa7e38b_c00a941c", "updated": "2020-02-10 11:51:16.000000000", "message": "Fair enough, will do!", "commit_id": "436a4a5df4a5e973cebac9078b541fe98d5a7953"}], "neutron_tempest_plugin/scenario/test_multicast.py": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "af2bdb10c4f4413af180e093edc0bf86be7e86fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d2438a11", "line": 254, "updated": "2020-02-05 10:25:36.000000000", "message": "igmp snooping can be turned on in config and it's not enabled by default. So IMO we should skip this test if igmp snooping is disabled. Otherwise it will fail in such case.", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, "change_message_id": "fafbc12e4890661206ede4f246470f11b80fb780", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8894029a", "line": 254, "in_reply_to": "3fa7e38b_451b536e", "updated": "2020-02-05 14:55:12.000000000", "message": "Regardless of the option, this test should run and pass anyways no? Even if IGMP is disabled, multicast traffic should pass by default as it's expected to be flooded to all ports. It was actually passing before we had IGMP snooping support.", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "eb3e1023a331514291f472c929f3657bf47c1a32", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_451b536e", "line": 254, "in_reply_to": "3fa7e38b_ad0f93d2", "updated": "2020-02-05 14:08:23.000000000", "message": "> Is this the config you thinking of: https://opendev.org/openstack/neutron/src/branch/master/neutron/conf/agent/ovs_conf.py#L36\n > ?\n\nYes, this is the option I was thinking of.\n\n > \n > If so I have a question, because I thought about re-using it in the\n > OVN driver but I didn't know if it makes sense since it's part of\n > the neutron agent configuration which is not deployed with OVN.\n > \n > Instead, I added another config for OVN (patch is not yet merged so\n > we can change).\n > \n > Perhaps we can refactor this config out of the agent and reuse on\n > both drivers, what u think ?\n\nYes, when I was adding this option I though it can be used by both drivers (ovs agent and ovn). Can't You simply import this config option in ovn mechanism driver and reuse it there? It should be simply put in \"OVS\" section in config file so it should be fine IMO.", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f7683ed5f175011d3f43caf8f53df0856835134a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_ad0f93d2", "line": 254, "in_reply_to": "3fa7e38b_d2438a11", "updated": "2020-02-05 11:41:47.000000000", "message": "Is this the config you thinking of: https://opendev.org/openstack/neutron/src/branch/master/neutron/conf/agent/ovs_conf.py#L36 ?\n\nIf so I have a question, because I thought about re-using it in the OVN driver but I didn't know if it makes sense since it's part of the neutron agent configuration which is not deployed with OVN. \n\nInstead, I added another config for OVN (patch is not yet merged so we can change).\n\nPerhaps we can refactor this config out of the agent and reuse on both drivers, what u think ?", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "af2bdb10c4f4413af180e093edc0bf86be7e86fd", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_72ce56b7", "line": 332, "updated": "2020-02-05 10:25:36.000000000", "message": "so if this file don't exists for some reason, test will fail, right?", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "f7683ed5f175011d3f43caf8f53df0856835134a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6d019bb4", "line": 332, "in_reply_to": "3fa7e38b_72ce56b7", "updated": "2020-02-05 11:41:47.000000000", "message": "Yes, because it won't match the \"0 packets captured\" on the assertion from L334", "commit_id": "7e2b01766ce0fb90bd31abd006334c26d36f750c"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "ae696a14a69aa8b818a33be58d2160474b87eeec", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_48afea9c", "line": 148, "updated": "2020-02-05 15:05:51.000000000", "message": "Doesn't seem to work... Perhaps I will need to import the ovs_config from neutron ?! Not sure will search about it.", "commit_id": "650a0efc883db72ede8efddf24e29cc4729b83a5"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "531255f956b13127bb8b031e732b42d294a20161", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c6c5f736", "line": 148, "in_reply_to": "3fa7e38b_48afea9c", "updated": "2020-02-06 14:45:28.000000000", "message": "ahh, no. I was thinking that this option can be re-used in the ovn driver in neutron.\nBut in tempest plugin it will not work like that. Here You wil probably need to define new config option in https://github.com/openstack/neutron-tempest-plugin/blob/master/neutron_tempest_plugin/config.py module, something like \"is_igmp_snooping_enabled\" which we can use to tell to tempest that infra has got enabled this option (or not) and than decide in the test how test should runs.", "commit_id": "650a0efc883db72ede8efddf24e29cc4729b83a5"}, {"author": {"_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, "change_message_id": "97ea4e2b60f9de2972c2e32af5d491e7092ce615", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_027e986c", "line": 148, "in_reply_to": "3fa7e38b_c6c5f736", "updated": "2020-02-06 16:21:57.000000000", "message": "Yeah... I've changed the patch in neutron to reuse that option. But here, as you said, I think I will need to create a new one.\n\nWill do. Thanks for the pointers Slawek++!", "commit_id": "650a0efc883db72ede8efddf24e29cc4729b83a5"}]}}, "openstack%2Fneutron-lib~master~I120c2aae877362c78d8dbf5cce253b668fdfcd9a": {"owner_id": 31245, "owner_name": "Daniel Bengtsson", "owner_email": "dbengt@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 17:02:00.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-13 00:10:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 2, "date": "2020-02-12 16:22:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {}}, "x%2Fpython-cloudpulseclient~stable%2Fqueens~I28b152f95e7bc300e079446a827c5542b8b04912": {"owner_id": 26215, "owner_name": "Sawan Choudhary", "owner_email": "kumar.sawan1@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-13 01:21:56.000000000", "_account_id": 12890, "name": "Vinod Pandarinathan", "email": "vpandari@cisco.com", "username": "Vinod"}], "comments": {}}, "openstack%2Fsushy~master~I8d1e1691a0bb2b6315894c85569a73633d34c1cb": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 17:20:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-02-10 17:07:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 10379, "name": "Rajini Karthik", "email": "rrajini@gmail.com", "username": "rajinir"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, {"value": 0, "_account_id": 6133, "name": "yolanda.robla", "email": "yroblamo@redhat.com", "username": "yolanda.robla"}, {"value": 2, "date": "2020-02-10 17:05:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {"sushy/resources/base.py": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "bb95efff75d27ce68595887b8cfa36ce15ea567d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6080369d", "line": 104, "updated": "2020-01-28 11:14:31.000000000", "message": "shouldn't we keep the None (python None) check? otherwise we'll stop accepting null as a valid value for adapter=int, for example?", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "47c07858360495e15683ada4908c9d7a6e8a2f92", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_466672f0", "line": 104, "in_reply_to": "3fa7e38b_400ada26", "updated": "2020-01-28 12:28:25.000000000", "message": "Try int(None) in your Python console :)", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "cfa5e9e3e98809537e14e7d92f33261cf0cfd474", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_66d4ce4b", "line": 104, "in_reply_to": "3fa7e38b_466672f0", "updated": "2020-01-28 12:36:01.000000000", "message": "I have two observations to note here:\n\n1. This adapter callable is seemingly designed to process any data type that makes sense for the `Field`. None, being the instance of NoneType, is a first-class citizen  as much as `int` is.\n\n2. Since we expect non-initialized integer fields in Redfish JSON documents that end up being None, we have `utils.int_or_none` function in sushy to accommodate that.", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, "change_message_id": "359298aacef16fbc35b9e24df93a31479779cc8c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7d0dd03e", "line": 104, "in_reply_to": "3fa7e38b_4f7dc91c", "updated": "2020-02-05 00:04:07.000000000", "message": "The conundrum then comes with maintaining the test matrix. because they are constantly moving targets and null values will still appear. I think the null check needs to remain, but that just comes from ansible string->yaml->python parsing pain of the past which occurred in the pursuit of world domination.\n\nCould _adapter() have \"If None, return None\" logic? Just a thought since the bug seems to be that we functionally ignore, but it seems we need to take a path in the  middle.", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "36d4d78f1825d7651e915441c747af4de3a983e1", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_400ada26", "line": 104, "in_reply_to": "3fa7e38b_6080369d", "updated": "2020-01-28 11:21:05.000000000", "message": "Is it the other way round? We start accepting None as an input for the `_adapter`, right? I am not sure why should not we?", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "94febbb816606cd326f7308ab537e77f2d25ef24", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e62d1e45", "line": 104, "in_reply_to": "3fa7e38b_66d4ce4b", "updated": "2020-01-28 12:41:28.000000000", "message": "As you rightfully notice in #2, None is special, so any adapter must handle it. I'm afraid it will be the cause of errors if people forget to introduce list_or_none, dict_or_none, etc.\n\nBy the way, do you plan on changing all places where we have adapter=list?", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "a643de4010282b56ebd249641fc0589d0101232d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_4f7dc91c", "line": 104, "in_reply_to": "3fa7e38b_9439f0a2", "updated": "2020-02-04 11:03:28.000000000", "message": "> Well, JSON null becomes None in Python, right?\n\nYes.\n\n> You're asking good questions. I don't know if we should accept null when it's not explicitly declared as part of an item's type.\n\nI'd consider that a schema violation.\n\nWith the approach being proposed, we could work-around specific broken fields by adding `adaptor=<callable>` to model property in the same way as we will do for other schema violations. In this case, the `callable` can be `int_or_none`-like fuzziness.\n\nYou see, the difference relative to the current code is that we won't blindly accept all `null` values where we actually hoping for `int`.\n\n> I'm afraid that, given how loosely the standard is sometimes interpreted, we are going to see null values for any optional fields.\n\nI am pretty sure that with time (unfortunately, taking over the world takes time) we will encounter asymptotically full set of possible combinations of messiness!\n\nOne thing that bothers me is this: when it comes to the standard Redfish schema, the workaround we introduce in sushy hardcode (e.g. `adaptor=<callable>`) for vendor X may eventually collide with workaround that's required for vendor Y. Of course, we could hop on the bandwagon  of branching hacks by vendor ID, then by firmware version in sushy core... :-(\n\nI'd be more confident in the brightness of the future if the user could somehow inject or enable a workaround to match their specific vendor/firmware madness. Possibly by supplying something through process environment or an optional sushy configuration file with overrides....", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "0e5715dd7466f1b63a9bb805fd05fe35eb3b9f66", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_9439f0a2", "line": 104, "in_reply_to": "3fa7e38b_c68b4214", "updated": "2020-01-28 14:20:49.000000000", "message": "Well, JSON null becomes None in Python, right?\n\nYou're asking good questions. I don't know if we should accept null when it's not explicitly declared as part of an item's type.\n\nI'm afraid that, given how loosely the standard is sometimes interpreted, we are going to see null values for any optional fields.", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "22f10550a2017d5a900cb6cd15e0b3e754494674", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c68b4214", "line": 104, "in_reply_to": "3fa7e38b_e62d1e45", "updated": "2020-01-28 13:00:22.000000000", "message": "> As you rightfully notice in #2, None is special, so any adapter must handle it. I'm afraid it will be the cause of errors if people forget to introduce list_or_none, dict_or_none, etc.\n\nActually, when this adapter gets None on input? t seems only when it's JSON null. Should we tolerate JSON null for (say) a list or an int field?\n\n> By the way, do you plan on changing all places where we have adapter=list?\n\nMay be it's the other way round again - can we drop this `int_or_none` function altogether?", "commit_id": "6e1a9f3331891bf54ec85615797f85b2af697769"}]}}, "x%2Fnetworking-arista~stable%2Ftrain~Ia4a94f00ef94faf8d4b6892550d32a6540c8e989": {"owner_id": 19710, "owner_name": "Mitchell Jameson", "owner_email": "mitchell@arista.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:52:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10393, "name": "nlahouti", "email": "nader.lahouti@gmail.com", "username": "nlahouti"}], "comments": {}}, "airship%2Farmada~master~I5317aa8a4ad1a3106500aac6cb380fbb10862d29": {"owner_id": 29144, "owner_name": "PRATEEK REDDY DODDA", "owner_email": "prateek.reddy.dodda@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:51:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~Ib29b2050bf02561a9cd3d96716fc6fa3c4ea3994": {"owner_id": 7144, "owner_name": "James Slagle", "owner_email": "jslagle@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-06 20:38:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 2, "date": "2020-02-11 09:20:45.000000000", "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}, {"value": 2, "date": "2020-02-06 21:20:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {}}, "openstack%2Freleases~master~I681899483d4eb737d55171f1d3e6e2c23fd3096e": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 14:05:03.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-12 15:25:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-12 23:30:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I5108735f886118163b04863b823173a667932108": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:14:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-12 03:40:45.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-12 23:29:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~I74821b42f6dbf834b3c0d97a02396555e5813c58": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 09:30:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-12 03:40:23.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-12 23:29:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Freleases~master~Ie90645ad4180ee0a0998b8af1b9f7380a11d7e68": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:44:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-12 03:40:08.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-12 23:29:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fopenstacksdk~master~I425f59b4f025aa97fe7318a7f30b41b0c5d89ce5": {"owner_id": 23924, "owner_name": "Tobias Rydberg", "owner_email": "tobias.rydberg@citynetwork.eu", "labels": [{"value": 2, "date": "2020-02-12 08:01:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27900, "name": "Artem Goncharov", "email": "artem.goncharov@gmail.com", "username": "gtema"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 22:51:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}], "comments": {}}, "x%2Fnetworking-arista~stable%2Fqueens~Ia4a94f00ef94faf8d4b6892550d32a6540c8e989": {"owner_id": 19710, "owner_name": "Mitchell Jameson", "owner_email": "mitchell@arista.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:36:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10393, "name": "nlahouti", "email": "nader.lahouti@gmail.com", "username": "nlahouti"}], "comments": {}}, "openstack%2Freleases~master~I125cde34a668d52ab5b09ac66df46f0beaf63d19": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 1, "date": "2020-02-12 01:38:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 09:59:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 2, "date": "2020-02-12 23:29:20.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I606f1ee3bc323e5c83d09ca9bc8f7e4033e81e70": {"owner_id": 7353, "owner_name": "Kevin Carter", "owner_email": "kevin@cloudnull.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-31 22:07:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-01-30 22:33:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-01-31 11:37:32.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 9712, "name": "Dougal Matthews", "email": "dougal.matthews@canonical.com", "username": "dougal"}], "comments": {"tripleo_ansible/playbooks/cli-support-collect-logs.yaml": [{"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "c6bc0022ac5bb0bf395294b9ecfbc96cb26ddad3", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_542fa6a5", "line": 115, "updated": "2020-02-03 19:06:31.000000000", "message": "By default this is /tmp. In the workflow we used /var/tmp/tripleo-sos to prevent filling /tmp.", "commit_id": "2bb00e51e4ad38a61f35ca85d8119789dea4b5b5"}, {"author": {"_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, "change_message_id": "c6bc0022ac5bb0bf395294b9ecfbc96cb26ddad3", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f4333211", "line": 122, "updated": "2020-02-03 19:06:31.000000000", "message": "This can take a while, we should async with a poll to prevent ssh timeouts while this runs.", "commit_id": "2bb00e51e4ad38a61f35ca85d8119789dea4b5b5"}]}}, "x%2Fnetworking-arista~stable%2Frocky~Ia4a94f00ef94faf8d4b6892550d32a6540c8e989": {"owner_id": 19710, "owner_name": "Mitchell Jameson", "owner_email": "mitchell@arista.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:36:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10393, "name": "nlahouti", "email": "nader.lahouti@gmail.com", "username": "nlahouti"}], "comments": {}}, "x%2Fnetworking-arista~stable%2Fstein~Ia4a94f00ef94faf8d4b6892550d32a6540c8e989": {"owner_id": 19710, "owner_name": "Mitchell Jameson", "owner_email": "mitchell@arista.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19710, "name": "Mitchell Jameson", "email": "mitchell@arista.com", "username": "mitchell"}, {"value": 2, "date": "2020-02-12 23:35:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10393, "name": "nlahouti", "email": "nader.lahouti@gmail.com", "username": "nlahouti"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~Iaf77a6009947f2eb767307b5434b60bdaf25783e": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 19:56:43.000000000", "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 2, "date": "2020-02-11 21:55:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 1, "date": "2020-02-11 17:12:02.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "51ab1ae50f56172871307d7c17981ad3d0f2790f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_58b686fe", "line": 11, "range": {"start_line": 10, "start_character": 1, "end_line": 11, "end_character": 49}, "updated": "2020-02-11 07:11:28.000000000", "message": "if you get an update consider something like: \"... uses six.ensure_text so we need to make sure we have six in install-deps\"", "commit_id": "b9a307647c660a4b650ec7dbf7c54bbdc302ca36"}], "install-deps.sh": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "51ab1ae50f56172871307d7c17981ad3d0f2790f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_18a1eea7", "line": 183, "updated": "2020-02-11 07:11:28.000000000", "message": "why is six a special case here (i.e. we need six installed here but not the others setuptoops/virtualenv etc?) is it not already addressed/installed above with install_deps.", "commit_id": "b9a307647c660a4b650ec7dbf7c54bbdc302ca36"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "7c6bc846fb14f495a3907f4ddfbba60b5ca2c831", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_f8ddf23e", "line": 185, "range": {"start_line": 105, "start_character": 4, "end_line": 185, "end_character": 45}, "updated": "2020-02-11 07:08:39.000000000", "message": "This approach is not maintainable, I stated already more than an year ago, are we going to create variables for each possible python package?", "commit_id": "b9a307647c660a4b650ec7dbf7c54bbdc302ca36"}, {"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "91f2677f0181ef77cbd75667425c7fbcc862b7d6", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_2437e3b0", "line": 179, "updated": "2020-02-11 11:40:02.000000000", "message": "I think it needs a big #TODO(chkumar) or a pointer to the bug\n\nwe are inline pinning version here and hopefully we can remove it once the actual issue is fixed with virtualenv?", "commit_id": "1d8aa64be58839fa2202dea543f39a6a8e48c65d"}, {"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "aff5455be17551571a1ed5c742f94408583c0347", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_50c6564c", "line": 184, "range": {"start_line": 184, "start_character": 66, "end_line": 184, "end_character": 78}, "updated": "2020-02-11 14:32:47.000000000", "message": "\"six<1.14.0\" makes not sense and may break things. AFAIK, old virtualenv has not problems with newer six.", "commit_id": "4975c24cba3db344ab00d3f2766aafb1a57f0ed5"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "5e5f0f2df60a840ae4284901129bf5768638378f", "unresolved": false, "patch_set": 18, "id": "3fa7e38b_5022d603", "line": 184, "range": {"start_line": 184, "start_character": 66, "end_line": 184, "end_character": 78}, "in_reply_to": "3fa7e38b_50c6564c", "updated": "2020-02-11 14:38:08.000000000", "message": "I agree - I think what you want to do here is EITHER pin virtualenv back, or force six to upgrade when you pip install tox", "commit_id": "4975c24cba3db344ab00d3f2766aafb1a57f0ed5"}, {"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "295317700ccd42d847fe1ed6ec83b51454e9e8f9", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_19e7a9d9", "line": 185, "range": {"start_line": 185, "start_character": 12, "end_line": 185, "end_character": 39}, "updated": "2020-02-11 17:12:02.000000000", "message": "something we might want to look at, in a follow on patch, is that py3 has its own built in \"venv\" module meaning we can transition away from \"virtualenv\" as we transition away from cent7 (py2).\n\n  # When using py3\n  $(python_cmd) -m venv ...", "commit_id": "65ab3aa516e336a50ceee9efde1e302f8443eeb3"}]}}, "airship%2Ftreasuremap~master~I94d5e6fefaad4256b0611a09c014d79893260daa": {"owner_id": 29144, "owner_name": "PRATEEK REDDY DODDA", "owner_email": "prateek.reddy.dodda@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 23:05:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Fstein~I35778278f2f928f8c01f7719c9877e1e8ac89fa1": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 00:04:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-11 08:35:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "opendev%2Fsystem-config~master~Ib6cc094e6f02b513c5218264657cec9064fe867c": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-11 20:38:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-12 22:08:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-12 22:08:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fproject-config~master~Ifd9062e5a87923093e84b3e4fc933dc08375df82": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {"nodepool/elements/nodepool-base/element-deps": [{"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "0cdc126a8fc696a9e94ad5738f4ab4aa5b27e90e", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a8d94881", "side": "PARENT", "line": 2, "updated": "2020-02-12 22:35:22.000000000", "message": "i think that simple-init will still bring in pip-and-virtualenv [1]\n\nthis really needs to replace p-a-v entirely, because that element will have pinned the packages this uninstalls\n\n[1] https://opendev.org/openstack/diskimage-builder/src/branch/master/diskimage_builder/elements/simple-init/element-deps#L4", "commit_id": "9ce6de3dfc384de6a78cf02f1aa917379f14109e"}]}}, "openstack%2Fnova~master~I2db7bc9fca72262a7715c20d34d78690002e6390": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23498, "name": "IBM zVM CI", "email": "zvmosci@us.ibm.com", "username": "zvmosci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/tests/unit/policies/test_agents.py": [{"author": {"_account_id": 6167, "name": "Ken'ichi Ohmichi", "email": "ken1ohmichi@gmail.com", "username": "oomichi"}, "change_message_id": "1d642a3d74e4d55cc6014416d93f0cea8136f43e", "unresolved": false, "patch_set": 2, "id": "7faddb67_fa464a21", "line": 107, "range": {"start_line": 107, "start_character": 48, "end_line": 107, "end_character": 62}, "updated": "2019-08-16 17:03:54.000000000", "message": "The reason of this copy.deepcopy() is to avoid the effect of later test of create_fail case after the body is changed in create() here, right?", "commit_id": "1e2971bbbb3e34e635af2afccb855f90e8f3b3a4"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "a026a6cb81c65a2d913a974ed8956d0c0902a007", "unresolved": false, "patch_set": 2, "id": "7faddb67_d0148d43", "line": 107, "range": {"start_line": 107, "start_character": 48, "end_line": 107, "end_character": 62}, "in_reply_to": "7faddb67_fa464a21", "updated": "2019-08-16 18:55:31.000000000", "message": "right. create API method change the body while saving.", "commit_id": "1e2971bbbb3e34e635af2afccb855f90e8f3b3a4"}]}}, "zuul%2Fzuul~master~I3b1d8c6f02ce90bd9cb4d425ddfde28544665891": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 07:50:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 0, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-06 23:37:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"tests/base.py": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "1dd142223679406acfa9d7f46bff1718ba14cb4f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1749f08b", "line": 886, "updated": "2020-02-06 23:27:57.000000000", "message": "Despite calling super() on the _run() method I'm not sure this will exercise the inputs to _run or the outputs (the callbacks) because there are no projects configured on this connection to poll.\n\nThe new test cases must be triggered off of gerrit stream events type events instead?", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}, {"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "3871290aaa620903d816ccd7cafad8d555acb618", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c96c20d1", "line": 886, "updated": "2020-02-06 23:35:19.000000000", "message": "See below comments; also, in tests, we don't automatically submit stream events, they have to be manually injected (so we have better control).  Since the new test doesn't call any \"addEvent\" methods, we can assume that shouldn't be happening here.", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "63455ba1a26c7292531e1a7ad7b02cbb4652b349", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_69a88cd9", "line": 886, "in_reply_to": "3fa7e38b_c96c20d1", "updated": "2020-02-06 23:37:15.000000000", "message": "For any followup reviewers. The bit of info I was missing is that self.connection.projects in the GitWatcher class is populated from the zuul tenant config projects list. We don't need to add any new config.", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}], "tests/unit/test_gerrit.py": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "dd7e755259f69f1b4081a5a7986149fd9e656a97", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c953c014", "line": 382, "updated": "2020-02-06 23:33:31.000000000", "message": "This points us to here:\n\nhttps://opendev.org/zuul/zuul/src/branch/master/tests/fixtures/zuul-gerrit-no-stream.conf#L26\n\nWhich says this gerrit doesn't have stream-events.", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}], "zuul/driver/gerrit/gerritconnection.py": [{"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "dd7e755259f69f1b4081a5a7986149fd9e656a97", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_693accc5", "line": 482, "updated": "2020-02-06 23:33:31.000000000", "message": "Probably eventually.", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "1dd142223679406acfa9d7f46bff1718ba14cb4f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_771e2476", "line": 482, "range": {"start_line": 482, "start_character": 32, "end_line": 482, "end_character": 34}, "updated": "2020-02-06 23:27:57.000000000", "message": "Should this be user configurable?", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}, {"author": {"_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, "change_message_id": "dd7e755259f69f1b4081a5a7986149fd9e656a97", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8935c8d5", "line": 1417, "updated": "2020-02-06 23:33:31.000000000", "message": "If it doesn't have stream events, it starts a ref watcher, which watches every project on the connection.  In the test setup, every project in a simple_layout() is added to the tenant config, and therefore to the connection.", "commit_id": "9be39dc67dc2c2be3cf517664779e306105f888b"}]}}, "airship%2Fairshipui~master~Ife25abdba85b5db94eb2bc30fe27b314ecfd0534": {"owner_id": 31362, "owner_name": "Andrew Schiefelbein", "owner_email": "as3525@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "zuul%2Fzuul~master~Id1d595873fe87ca980b2f33832f55542f9e5d496": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 08:18:10.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30637, "name": "Jan Kubovy", "email": "jan.kubovy@bmw.de", "username": "kubovy"}, {"value": 1, "date": "2020-02-07 15:43:54.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-12 20:58:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-07 15:28:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "airship%2Fairshipctl~master~I9af8208807f2f0f084a65ca6882f8105f8bca0fa": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-12 21:05:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 2, "date": "2020-02-12 21:26:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 1, "date": "2020-02-12 20:26:24.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 18675, "name": "Sharath Rao", "email": "sharath.rao@ericsson.com", "username": "sharath.rao"}], "comments": {"CONTRIBUTING.md": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "cb315b4e9be0d50122a8b17fa459b1581531d1ca", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_315f0a4e", "line": 23, "range": {"start_line": 23, "start_character": 28, "end_line": 23, "end_character": 41}, "updated": "2020-02-12 15:54:15.000000000", "message": "link?", "commit_id": "ad9c3d5f288092c6529ada6faed9465d144d0a44"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "517af98714ae36f91e44c49799850185d6b3f2e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_e6c21735", "line": 23, "range": {"start_line": 23, "start_character": 28, "end_line": 23, "end_character": 41}, "in_reply_to": "3fa7e38b_315f0a4e", "updated": "2020-02-12 17:13:37.000000000", "message": "Done", "commit_id": "ad9c3d5f288092c6529ada6faed9465d144d0a44"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "cb315b4e9be0d50122a8b17fa459b1581531d1ca", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f1641222", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 58}, "updated": "2020-02-12 15:54:15.000000000", "message": "makes more sense to just link into above GitHub Issues comment", "commit_id": "ad9c3d5f288092c6529ada6faed9465d144d0a44"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "517af98714ae36f91e44c49799850185d6b3f2e1", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_66b707d9", "line": 30, "range": {"start_line": 30, "start_character": 0, "end_line": 30, "end_character": 58}, "in_reply_to": "3fa7e38b_f1641222", "updated": "2020-02-12 17:13:37.000000000", "message": "Agreed", "commit_id": "ad9c3d5f288092c6529ada6faed9465d144d0a44"}]}}, "airship%2Fairshipctl~master~I9508cce273e7834ccff5eb77c0dd6a1e028dc299": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 1, "date": "2020-02-12 21:22:40.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24580, "name": "James Gu", "email": "james.gu@microsoft.com", "username": "jamesgu"}, {"value": 2, "date": "2020-02-12 21:08:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 2, "date": "2020-02-12 21:26:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}, {"value": 1, "date": "2020-02-12 21:22:13.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {}}, "airship%2Fpromenade~master~Ifd522a786eb751e7fad35d3f9ee17ec2bb87e010": {"owner_id": 22477, "owner_name": "Matt McEuen", "owner_email": "matt.mceuen@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 2, "date": "2020-02-04 17:23:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-12 21:20:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}], "comments": {"charts/promenade/templates/configmap-etc.yaml": [{"author": {"_account_id": 22259, "name": "Nishant Kumar", "email": "nishant.e.kumar@att.com", "username": "nishant.e.kumar"}, "change_message_id": "e756fe77fbbefdc679d065413407c5acf2847bc8", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_f5fd6209", "line": 48, "updated": "2019-12-18 20:12:41.000000000", "message": "probably you would want to change the name of this file?", "commit_id": "bfd492445224521864bd61b4b5a675b7dd94ed80"}, {"author": {"_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, "change_message_id": "b4a4faece3a66061ec918d61fbe9a139b5bba474", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_3a2f70a7", "line": 48, "in_reply_to": "3fa7e38b_f5fd6209", "updated": "2020-02-04 00:20:22.000000000", "message": "The convention (from OSH) in converting these files over is to leave the filenames the same, since \"logically\" they still function as configmaps, and that makes it a smaller change.", "commit_id": "bfd492445224521864bd61b4b5a675b7dd94ed80"}]}}, "starlingx%2Futilities~master~Ie952ee81d96aeacc04482daed942654da0ec0573": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 20:19:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 21:18:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 1, "date": "2020-02-12 21:01:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28468, "name": "Tao Liu", "email": "tao.liu@windriver.com", "username": "tliu88"}, {"value": 2, "date": "2020-02-12 21:03:40.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"utilities/platform-util/scripts/gen-bootloader-iso.sh": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "f10efbcc51addf4c1170501c15ee38ec4886f381", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7789ef22", "line": 591, "range": {"start_line": 591, "start_character": 34, "end_line": 591, "end_character": 47}, "updated": "2020-02-12 19:54:37.000000000", "message": "repodata", "commit_id": "816de5c1d83efa93e7721e30f12b53630c36afd3"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "9a6ba08aa7f8be7e0544db5c5e2e99035b51c7fa", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_77624f17", "line": 591, "range": {"start_line": 591, "start_character": 34, "end_line": 591, "end_character": 47}, "in_reply_to": "3fa7e38b_7789ef22", "updated": "2020-02-12 20:18:55.000000000", "message": "Done", "commit_id": "816de5c1d83efa93e7721e30f12b53630c36afd3"}, {"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "f10efbcc51addf4c1170501c15ee38ec4886f381", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_177c3b20", "line": 598, "range": {"start_line": 598, "start_character": 38, "end_line": 598, "end_character": 51}, "updated": "2020-02-12 19:54:37.000000000", "message": "patches", "commit_id": "816de5c1d83efa93e7721e30f12b53630c36afd3"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "9a6ba08aa7f8be7e0544db5c5e2e99035b51c7fa", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_17651b1c", "line": 598, "range": {"start_line": 598, "start_character": 38, "end_line": 598, "end_character": 51}, "in_reply_to": "3fa7e38b_177c3b20", "updated": "2020-02-12 20:18:55.000000000", "message": "Done", "commit_id": "816de5c1d83efa93e7721e30f12b53630c36afd3"}, {"author": {"_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, "change_message_id": "aa9e3363dc310c12347a929a2b70b8897068cf01", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_d209d131", "line": 633, "range": {"start_line": 633, "start_character": 29, "end_line": 633, "end_character": 40}, "updated": "2020-02-12 21:21:56.000000000", "message": "Why do you pass BUILDDIR here for update_parameter, but don't pass it above to the initial generate_boot_cfg?", "commit_id": "de8f5256c675650400f8f379420fde4ce0793ac7"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "cd23f1476d7c11dc38dfc146a84d97789bb4b5f4", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6d5fe2e3", "line": 633, "range": {"start_line": 633, "start_character": 29, "end_line": 633, "end_character": 40}, "in_reply_to": "3fa7e38b_d209d131", "updated": "2020-02-12 21:36:23.000000000", "message": "I had cloned code from update-iso for some of the functions (which I should be able to move to a shared utility subscript file) and hadn't been as strict with the parameters in new functions. I'll address it in a followup review", "commit_id": "de8f5256c675650400f8f379420fde4ce0793ac7"}]}}, "openstack%2Fbarbican~master~I5d5b2a41a92f596dc4eade5e206ff030d4f98c85": {"owner_id": 7973, "owner_name": "Douglas Mendiz\u00e1bal", "owner_email": "dmendiza@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "starlingx%2Finteg~master~Iadc86cbf971d6ecb0c478a2a16d5040d18a82ef0": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 2, "date": "2020-02-12 20:43:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28459, "name": "Bob Church", "email": "robert.church@windriver.com", "username": "rchurch"}, {"value": 2, "date": "2020-02-12 15:28:26.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "starlingx%2Fdocs~master~Ifffbb9671979d41cf811be84f96e7236fd901d32": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 2, "date": "2020-02-12 20:35:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}, {"value": 1, "date": "2020-02-12 17:48:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29319, "name": "Kristal Dale", "email": "kristal.dale@intel.com", "username": "kdale"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I00938fd975f68b21d2c02190cae9f5ea527872e9": {"owner_id": 4571, "owner_name": "Steve Baker", "owner_email": "sbaker@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fopenstack-helm-infra~master~I256f169d6ff2de71b7218ab522bac9975d971c41": {"owner_id": 29161, "owner_name": "Rahul Khiyani", "owner_email": "rahul.khiyani@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:48:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, {"value": 1, "date": "2020-02-12 19:13:01.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22636, "name": "Cliff Parsons", "email": "cliffhparsons@aol.com", "username": "cliffparsons"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, {"value": 2, "date": "2020-02-12 19:15:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8898, "name": "Chris Wedgwood", "email": "cw@f00f.org", "username": "anticw"}, {"value": 0, "_account_id": 20466, "name": "Tin Lam", "email": "tin@lam.wtf", "username": "tinlam"}], "comments": {"tools/deployment/apparmor/025-ceph-ns-activate.sh": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9ac8d51ea562d347d1fde7bba77aae0e756254c9", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_a3e3b102", "updated": "2020-02-12 16:15:12.000000000", "message": "Don't need this", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "e5b12b12fabdbd99358e2018e5c0dd396af45535", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_c3510d65", "in_reply_to": "3fa7e38b_a3e3b102", "updated": "2020-02-12 16:37:34.000000000", "message": "Done", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}], "tools/deployment/apparmor/130-mariadb.sh": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9ac8d51ea562d347d1fde7bba77aae0e756254c9", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_43b8bde6", "updated": "2020-02-12 16:15:12.000000000", "message": "Don't need this", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "e5b12b12fabdbd99358e2018e5c0dd396af45535", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_a342d191", "in_reply_to": "3fa7e38b_43b8bde6", "updated": "2020-02-12 16:37:34.000000000", "message": "Done", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}], "zuul.d/jobs.yaml": [{"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9ac8d51ea562d347d1fde7bba77aae0e756254c9", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_c3e26d02", "line": 272, "range": {"start_line": 269, "start_character": 0, "end_line": 272, "end_character": 31}, "updated": "2020-02-12 16:15:12.000000000", "message": "This should be added eventually, but it doesn't need to be in this ps.", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "e5b12b12fabdbd99358e2018e5c0dd396af45535", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_83f55554", "line": 272, "range": {"start_line": 269, "start_character": 0, "end_line": 272, "end_character": 31}, "in_reply_to": "3fa7e38b_c3e26d02", "updated": "2020-02-12 16:37:34.000000000", "message": "I agree with you as we have another apparmor job in the osh repo which deploys mariadb https://github.com/openstack/openstack-helm/blob/master/zuul.d/jobs-openstack-helm.yaml#L239", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9ac8d51ea562d347d1fde7bba77aae0e756254c9", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_43cf5d8a", "line": 278, "range": {"start_line": 278, "start_character": 0, "end_line": 278, "end_character": 61}, "updated": "2020-02-12 16:15:12.000000000", "message": "Remove this", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "e5b12b12fabdbd99358e2018e5c0dd396af45535", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_a3f09161", "line": 278, "range": {"start_line": 278, "start_character": 0, "end_line": 278, "end_character": 61}, "in_reply_to": "3fa7e38b_43cf5d8a", "updated": "2020-02-12 16:37:34.000000000", "message": "Done", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 21420, "name": "Gage Hugo", "email": "gagehugo@gmail.com", "username": "ghugo"}, "change_message_id": "9ac8d51ea562d347d1fde7bba77aae0e756254c9", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_c31d8d10", "line": 288, "range": {"start_line": 288, "start_character": 0, "end_line": 288, "end_character": 52}, "updated": "2020-02-12 16:15:12.000000000", "message": "Remove this", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}, {"author": {"_account_id": 29161, "name": "Rahul Khiyani", "email": "rahul.khiyani@att.com", "username": "rk0850"}, "change_message_id": "e5b12b12fabdbd99358e2018e5c0dd396af45535", "unresolved": false, "patch_set": 33, "id": "3fa7e38b_6394d9e7", "line": 288, "range": {"start_line": 288, "start_character": 0, "end_line": 288, "end_character": 52}, "in_reply_to": "3fa7e38b_c31d8d10", "updated": "2020-02-12 16:37:34.000000000", "message": "Done", "commit_id": "b273d061a36a4ef631d467187e35b9ecf5af3f47"}]}}, "openstack%2Ftripleo-common~master~I50b9acad43095577dafc665f80300f3a7dc38ee7": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-12 09:58:23.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-12 08:43:25.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 1, "date": "2020-02-12 05:49:15.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 2, "date": "2020-02-12 08:24:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {}}, "starlingx%2Fmetal~master~I9330a2d50b8966a2b3f2b59cabec20f084372d8c": {"owner_id": 28431, "owner_name": "Don Penney", "owner_email": "don.penney@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 19:30:00.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 0, "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-12 19:55:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, {"value": 1, "date": "2020-02-12 19:32:14.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {"bsp-files/kickstarts/post_pxeboot_controller.cfg": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "fde3c6fc62b6813902baf233bbc9d635453c80b6", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c425a817", "line": 35, "range": {"start_line": 35, "start_character": 27, "end_line": 35, "end_character": 44}, "updated": "2020-02-11 18:01:28.000000000", "message": "Might be nice to change this to ansible bootstrap playbook (in a couple places in this file). Not really related though so ignore if you like.", "commit_id": "4a09d4fab52f8c6d48bd5a553bb2d50fadb4c1a8"}, {"author": {"_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, "change_message_id": "11f0c659e1e762c372e8470fce57e7af60dd34ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c40e088e", "line": 35, "range": {"start_line": 35, "start_character": 27, "end_line": 35, "end_character": 44}, "in_reply_to": "3fa7e38b_c425a817", "updated": "2020-02-11 18:03:45.000000000", "message": "Same comment is in other files, so should all be cleaned up in a different update.", "commit_id": "4a09d4fab52f8c6d48bd5a553bb2d50fadb4c1a8"}]}}, "airship%2Fshipyard~master~Ib3a8de0918c7a9e5abb7fb71a20ae261f68b3259": {"owner_id": 28618, "owner_name": "Drew Walters", "owner_email": "drewwalters@microsoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 2, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 1, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28719, "name": "Phil Sphicas", "email": "phil.sphicas@att.com", "username": "ps3910"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 1, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24580, "name": "James Gu", "email": "james.gu@microsoft.com", "username": "jamesgu"}, {"value": 1, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 31362, "name": "Andrew Schiefelbein", "email": "as3525@att.com", "username": "aschiefe"}, {"value": 2, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 1, "date": "2020-02-12 18:10:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 29144, "name": "PRATEEK REDDY DODDA", "email": "prateek.reddy.dodda@att.com", "username": "pd2839"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 30106, "name": "Matt Carter", "email": "matt.coach.carter@gmail.com", "username": "MattCarter"}, {"value": 0, "_account_id": 28628, "name": "Michael Beaver", "email": "mibeaver@microsoft.com", "username": "MichaelBeaver"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {}}, "x%2Fnetworking-vpp~master~If70f898ebd4709ff9f58349823929b489d663aca": {"owner_id": 2874, "owner_name": "yong sheng gong", "owner_email": "gong.yongsheng@99cloud.net", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": -1, "date": "2019-12-26 03:40:19.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 2874, "name": "yong sheng gong", "email": "gong.yongsheng@99cloud.net", "username": "gongysh"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}], "comments": {"devstack/override-defaults": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "b1ab7f2c652633473f6167774deaab88fe578751", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_77056f78", "line": 12, "updated": "2020-02-12 20:00:18.000000000", "message": "This is a default - can't it be overridden?\n\n(That said, this file makes a lot of assumptions about devstack, like turning off cinder, and could do with a real cleanup.  I think you're right and this shouldn't be here.)", "commit_id": "49e2fbc706ee8b1b9acb08969524eaff89e42182"}], "devstack/settings": [{"author": {"_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, "change_message_id": "b1ab7f2c652633473f6167774deaab88fe578751", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f7c71f3c", "line": 58, "updated": "2020-02-12 20:00:18.000000000", "message": "These can already be overridden in local.conf", "commit_id": "49e2fbc706ee8b1b9acb08969524eaff89e42182"}]}}, "openstack%2Fkolla~stable%2Fstein~I0ac41463bd6ca1eb363e1c5cdc29f7222ec382b1": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:40:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-12 17:23:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "airship%2Fshipyard~master~I54dad4ccc1858f4d5986c6e8e9fbf8f5d9847158": {"owner_id": 28664, "owner_name": "Ahmad Mahmoudi", "owner_email": "ahmad.mahmoudi@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:13:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 2, "date": "2020-02-12 19:25:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}], "comments": {}}, "openstack%2Fceilometer~stable%2Fstein~I8047d805b0a3da4051a6d618ed9ac40875b8636a": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-12 18:19:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fzuul-airship-roles~master~I6c25e71c22268f1e3b58f1e06907f073a33f09f7": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 17:17:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-05 05:49:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {}}, "openstack%2Fceilometer~stable%2Ftrain~I8047d805b0a3da4051a6d618ed9ac40875b8636a": {"owner_id": 15197, "owner_name": "Pierre Riteau", "owner_email": "pierre@stackhpc.com", "labels": [{"value": 0, "_account_id": 6732, "name": "Lingxian Kong", "email": "anlin.kong@gmail.com", "username": "kong"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 2, "date": "2020-02-12 18:19:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "airship%2Fimages~master~I6a43153f39b2b1f49b69f55e8978d03e054a0797": {"owner_id": 7185, "owner_name": "Dmitry Ukov", "owner_email": "dukov@mirantis.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 19:16:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 2, "date": "2020-02-12 19:16:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-12 19:18:42.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}], "comments": {"playbooks/airship-images-publish.yaml": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "e48605c12be1dd105c5d684effb50975303840d6", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_97deeb68", "line": 22, "range": {"start_line": 22, "start_character": 6, "end_line": 22, "end_character": 18}, "updated": "2020-02-12 19:33:13.000000000", "message": "Oh, I forgot. Good catch.", "commit_id": "e89350ad00683bcbfa3ad19f350b8306d248c32f"}]}}, "airship%2Fimages~master~I34fc3af8a72ba16165ea9521e85bbd9db0b3d565": {"owner_id": 28208, "owner_name": "Roman Gorshunov", "owner_email": "roman.gorshunov@att.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 21:51:47.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-10 22:53:34.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 2, "date": "2020-02-07 17:41:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"playbooks/airship-images-publish.yaml": [{"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "13b602fa92e6167ad8cac5cec42a3cccaf8136bf", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2eafebe1", "line": 21, "updated": "2020-02-07 17:51:59.000000000", "message": "can we add `when` condition here, to make sure we are using apt only on Ubuntu/Debian distos?", "commit_id": "b7942e78bfc26e67a42a31a30c4fb949c331fb45"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "22e366032b100f63505e022809255e1954f27e3c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_fc64e621", "line": 21, "in_reply_to": "3fa7e38b_2eafebe1", "updated": "2020-02-12 19:16:02.000000000", "message": "does Zuul ever run outside of ubuntu/debian base distros?", "commit_id": "b7942e78bfc26e67a42a31a30c4fb949c331fb45"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "803091eea7ed5a26e79d5891188c8e9fdb212dea", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_77832f56", "line": 21, "in_reply_to": "3fa7e38b_fc64e621", "updated": "2020-02-12 19:31:54.000000000", "message": "Well, yes, but not in our case ATM.", "commit_id": "b7942e78bfc26e67a42a31a30c4fb949c331fb45"}]}}, "openstack%2Fdesignate~master~Ib221f4cf0371e70fc6900582d826ffc1bdfc12b9": {"owner_id": 6577, "owner_name": "Sergey Kraynev", "owner_email": "sergejyit@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-16 18:54:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 1, "date": "2020-01-16 18:54:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15736, "name": "Ritesh Anand", "email": "tellrit@gmail.com", "username": "ritesh"}, {"value": 0, "_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, {"value": 2, "date": "2020-02-12 17:13:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {"designate/backend/impl_akamai_v2.py": [{"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_66ef40b1", "line": 16, "updated": "2019-10-28 02:41:20.000000000", "message": "We don't currently enforce this, but lets follow the general order for imports.\nhttps://docs.openstack.org/hacking/latest/user/hacking.html", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5b52ee13", "line": 16, "in_reply_to": "3fa7e38b_66ef40b1", "updated": "2019-10-30 16:06:11.000000000", "message": "ok. I will do it. There is only one exception for requests, because in Alphabetically order it looks weird.", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_06368c52", "line": 26, "updated": "2019-10-28 02:41:20.000000000", "message": "Probably just use six for this\n> import six.moves.urllib.parse as urlparse\n> urlparse.urljoin(self.baseurl, url_path)", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_00b8850e", "line": 26, "in_reply_to": "3fa7e38b_06368c52", "updated": "2019-10-30 16:06:11.000000000", "message": "Done. thx", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_e6ad7084", "line": 75, "updated": "2019-10-28 02:41:20.000000000", "message": "Maybe adding project id and region could be helpful here? \"Created by Designate for Region X Tenant Y\"", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_3be37207", "line": 75, "in_reply_to": "3fa7e38b_e6ad7084", "updated": "2019-10-30 16:06:11.000000000", "message": "I will do it for Tenant, but I am not sure about Region, because I don't see such value in context. (may be it's a domain_id?)", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_86befcab", "line": 93, "updated": "2019-10-28 02:41:20.000000000", "message": "Make logs lazy-loaded\n> LOG.info(\"Can't create zone %s because it already exists\", payload['json']['zone'])", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fbe87adf", "line": 93, "in_reply_to": "3fa7e38b_86befcab", "updated": "2019-10-30 16:06:11.000000000", "message": "done", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_86a59ca1", "line": 130, "updated": "2019-10-28 02:41:20.000000000", "message": "I think this might just be cleaner as\n\n> if not result.ok or result.status_code != 404):", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bbcbe21b", "line": 130, "in_reply_to": "3fa7e38b_86a59ca1", "updated": "2019-10-30 16:06:11.000000000", "message": "Updated with minor change in your suggestion: error will be raised when (not result.ok) AND (result.status_code != 404).", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "eb6508d46f22eb28c8e4943aceceedc56e6ad5d6", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_fb17ecec", "line": 68, "updated": "2019-11-03 20:18:58.000000000", "message": "Nit: No need to add None, as it's the default behavior of get to return None if not found.", "commit_id": "884eefb1bf8de07d0e371949522ad948d0e81dbc"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "c8e77eab2baa645763427a4150b9d1c6e95596a9", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_efdcfc74", "line": 31, "updated": "2019-11-05 03:24:25.000000000", "message": "I don't think you need this at all. This is just in case you have custom config under designate/conf/", "commit_id": "fb0a4549b67392fd5f4931e270a16ee4286bbd2f"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "878adc3e352ce2f65c16c498431339af2cf1efac", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_b4e485a9", "line": 31, "in_reply_to": "3fa7e38b_efdcfc74", "updated": "2019-11-17 11:09:26.000000000", "message": "Done", "commit_id": "fb0a4549b67392fd5f4931e270a16ee4286bbd2f"}], "requirements.txt": [{"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_268f0824", "line": 53, "updated": "2019-10-28 02:41:20.000000000", "message": "Is there a reason we need to lock it to 1.1.1? You should add that to lower-requirements.txt instead.", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_d630f3eb", "line": 53, "in_reply_to": "3fa7e38b_268f0824", "updated": "2019-10-30 16:06:11.000000000", "message": "Done, but could you please remind me should be this requirement placed to global-requirements or not?\nNew plugin will not work without this lib, so I have to add it requirementx.txt too for enabling it after installation.", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "f0b2258c5c0044aa179169ed89da9cf4e40c79e0", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5fc6576a", "line": 53, "in_reply_to": "3fa7e38b_d630f3eb", "updated": "2019-10-30 17:39:42.000000000", "message": "It might be worth reaching out to the requirements team, because I am not sure to be perfectly honest.", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}], "setup.cfg": [{"author": {"_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, "change_message_id": "e0b088ce8b2785c15b250d91ede98a1b2ca209ba", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_c69f144e", "line": 77, "updated": "2019-10-28 02:41:20.000000000", "message": "Probably worth to put this just behind the current akamai driver.", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}, {"author": {"_account_id": 6577, "name": "Sergey Kraynev", "email": "sergejyit@gmail.com", "username": "skraynev"}, "change_message_id": "4cfbc8883600524f67cd4a83acc99ea456e045ec", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bbf4425c", "line": 77, "in_reply_to": "3fa7e38b_c69f144e", "updated": "2019-10-30 16:06:11.000000000", "message": "Done", "commit_id": "adf0a9e44950016d180683e01436bfb7844993d2"}]}}, "openstack%2Fdesignate~stable%2Ftrain~Ida918a2d670a69cc8995983d23e5424bd48de8a9": {"owner_id": 22623, "owner_name": "Erik Olof Gunnar Andersson", "owner_email": "eandersson@blizzard.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 2, "date": "2020-02-11 09:38:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 2, "date": "2020-02-12 16:40:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8099, "name": "Graham Hayes", "email": "gr@ham.ie", "username": "graham"}], "comments": {}}, "zuul%2Fzuul~master~I3b993e72b52e2234e046a657280b008887c535a3": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 18:00:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9311, "name": "Tristan Cacqueray", "email": "tdecacqu@redhat.com", "username": "tristanC"}, {"value": 2, "date": "2020-02-12 17:58:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 2, "date": "2020-02-12 18:05:46.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Fec2-api~master~Ic3fbe89720135039ba2c2afaebf3fafebac4d7e3": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 10:39:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}, {"value": 0, "_account_id": 18810, "name": "alexey-mr", "email": "alexey.morlang@gmail.com", "username": "alexey-mr"}, {"value": 0, "_account_id": 31572, "name": "Dmitry_Eremeev", "email": "deremeev@progmaticlab.com", "username": "Dmitry_Eremeev"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I5517b81e113aa90253b05f67fd4910720c287437": {"owner_id": 8297, "owner_name": "Sofer Athlan-Guyot", "owner_email": "sathlang@redhat.com", "labels": [{"value": 2, "date": "2020-02-11 17:33:42.000000000", "_account_id": 20172, "name": "Michele Baldessari", "email": "michele@acksyn.org", "username": "michele"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 17823, "name": "Michele Baldessari", "email": "michele@redhat.com", "username": "mbaldessari"}, {"value": 0, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 0, "_account_id": 20778, "name": "Damien Ciabrini", "email": "dciabrin@redhat.com", "username": "dciabrin"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I454f44e57d7b17d93d4aefc4cbbed93aefe874b1": {"owner_id": 16006, "owner_name": "goldyfruit", "owner_email": "gaetan.trellu@incloudus.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:41:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-12 10:24:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 16006, "name": "goldyfruit", "email": "gaetan.trellu@incloudus.com", "username": "goldyfruit"}], "comments": {}}, "openstack%2Fproject-config~master~I0d9c01324202270da9826d5490609288b11901ad": {"owner_id": 26839, "owner_name": "Onong Tayeng", "owner_email": "onong.tayeng@gmail.com", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 1, "date": "2020-02-11 17:52:49.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1356, "name": "Naveen Joy", "email": "najoy@cisco.com", "username": "najoy"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 3217, "name": "Ian Wells", "username": "ijw-ubuntu"}, {"value": 2, "date": "2020-02-12 18:25:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-10 10:49:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ifad32bf79942cde58295fd9aae7e23e2f62c1ae2": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-12 11:25:20.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-12 11:25:20.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "opendev%2Fsystem-config~master~I9f5141a6ff23ab035ecedf100a417989453bfc1e": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-12 17:32:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}], "comments": {}}, "openstack%2Fceilometer~stable%2Frocky~If6296d0e71c8feaa4a9db2ad31337190f929ba18": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fceilometer~stable%2Fstein~If6296d0e71c8feaa4a9db2ad31337190f929ba18": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openstack%2Fceilometer~stable%2Ftrain~If6296d0e71c8feaa4a9db2ad31337190f929ba18": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~Ie0142adb90e915e0d0fe4d117f1429357b1da476": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 18:15:59.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Fceilometer~master~If6296d0e71c8feaa4a9db2ad31337190f929ba18": {"owner_id": 28522, "owner_name": "Herv\u00e9 Beraud", "owner_email": "herveberaud.pro@gmail.com", "labels": [{"value": -1, "date": "2020-02-12 18:14:06.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 1, "date": "2020-02-12 18:10:20.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, "change_message_id": "1b9ec1e5e112d01091221900508d4f4ba47f175b", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b98440b3", "line": 22, "range": {"start_line": 22, "start_character": 7, "end_line": 22, "end_character": 12}, "updated": "2020-02-12 18:14:06.000000000", "message": "This is a task assigned to the Ironic project. I created another one for Ceilometer which I used in my patches.", "commit_id": "f587093724aceee349fd0242a86459f10a81c385"}]}}, "opendev%2Fsystem-config~master~I91d06c97993ba37204bd1fc326ae823e1b9c0c1a": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-12 13:19:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/host_vars/review01.opendev.org.yaml": [{"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "a14d5c648d9c1130e08e41265b9645b29637a8c8", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_6ffe68b6", "line": 77, "updated": "2020-02-05 18:34:19.000000000", "message": "We need review.openstack.org too, right? We're serving a redirect for that from the same machine and it needs to support HTTPS as well.", "commit_id": "7350be30a9665c6f9d5db425cf5bd1cfc644facf"}, {"author": {"_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, "change_message_id": "9871dace44c24f3f74e8174701333cee62971f04", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_ff3e2d25", "line": 80, "updated": "2020-02-11 19:22:18.000000000", "message": "the review01 and review-dev01 in openstack.org are probably unnecessary, but don't hurt i suppose", "commit_id": "dc9d4a13432885aef8b7220676c4edc04bc26a8c"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "a9703bec014932befd15055f6192d50436c605fe", "unresolved": false, "patch_set": 9, "id": "3fa7e38b_b15c6980", "line": 80, "in_reply_to": "3fa7e38b_ff3e2d25", "updated": "2020-02-11 20:44:22.000000000", "message": "I'll fix it since I've got to re-kick test jobs anyway.", "commit_id": "dc9d4a13432885aef8b7220676c4edc04bc26a8c"}]}}, "airship%2Fzuul-airship-roles~master~Ia731c69cc07ee8fc981a87939aed6386d087a2fd": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": -1, "date": "2020-01-31 09:19:51.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~I707b2f66eb947d64ef6a21238dc26c81575be2c7": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:25:11.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-12 11:25:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Fmetal~master~I22aa2f15850d4b5ecf01fd78c015b772b87a4932": {"owner_id": 29319, "owner_name": "Kristal Dale", "owner_email": "kristal.dale@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 0, "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-12 15:24:48.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 29319, "name": "Kristal Dale", "email": "kristal.dale@intel.com", "username": "kdale"}, {"value": 2, "date": "2020-02-12 17:48:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}], "comments": {"api-ref/source/conf.py": [{"author": {"_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, "change_message_id": "bbabc827bd40e1b4390b9080f326dec8b640e0ad", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_523facde", "line": 45, "range": {"start_line": 45, "start_character": 22, "end_line": 45, "end_character": 27}, "updated": "2020-02-04 12:45:34.000000000", "message": "The wiki and projects list refer to the project as \"Metal\" - I think I would prefer to be consistent and drop the \"Bare\".", "commit_id": "50d17816b253d7c275000c6e558b8f5f062fe757"}, {"author": {"_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}, "change_message_id": "1f35b0545be303753be2e0e49f8561e0f95a9102", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0fed7400", "line": 45, "range": {"start_line": 45, "start_character": 22, "end_line": 45, "end_character": 27}, "in_reply_to": "3fa7e38b_523facde", "updated": "2020-02-05 18:34:59.000000000", "message": "Agree.", "commit_id": "50d17816b253d7c275000c6e558b8f5f062fe757"}]}}, "openstack%2Fpython-heatclient~master~I54863f2301758dcd48de4ee73bcc8582e5036afa": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 22:15:42.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 2, "date": "2020-02-10 16:06:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "5f3ded6ac9d72e29148b2cd0d33da4a310d93a5c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_9715b997", "line": 18, "updated": "2020-02-10 16:02:55.000000000", "message": "This needs to change to python3-ussuri-jobs first or we will lose the pep8 job.\n\nThere's a patch Iefb3cd5e5b6a1e064cd7af4a025595713b8d79fc to do that, but it can't pass due to broken py27 dependencies. So we have to do it here.", "commit_id": "a401940c80308bbfb2051fa3a1d92abd5a50584e"}]}}, "zuul%2Fzuul-jobs~master~I13503890fd3c18487281e3394b003e9f36cd24f2": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:43:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-07 05:39:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Fstein~I6deb1e2e76c1e471c1ff9b6b05dbde86eb00fbdf": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-27 19:48:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21129, "name": "Alan Bishop", "email": "abishop@redhat.com", "username": "ASBishop"}, {"value": 2, "date": "2020-01-27 21:16:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26343, "name": "Jose Luis Franco", "email": "jfrancoa@redhat.com", "username": "jfrancoa"}, {"value": 0, "_account_id": 6816, "name": "Jesse Pretorius", "email": "jesse@odyssey4.me", "username": "jesse-pretorius"}], "comments": {}}, "x%2Fpython-cloudpulseclient~master~I28b152f95e7bc300e079446a827c5542b8b04912": {"owner_id": 26215, "owner_name": "Sawan Choudhary", "owner_email": "kumar.sawan1@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 17:29:39.000000000", "_account_id": 12890, "name": "Vinod Pandarinathan", "email": "vpandari@cisco.com", "username": "Vinod"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Ftrain~I339fc7f01f640a32ff35d19ded54b6f8e2fdec15": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:28:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-10 17:34:29.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}], "comments": {}}, "openstack%2Fironic-tempest-plugin~master~I5750b61095e88f2862accef9183a9e0bc6efbd72": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-12 15:54:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-common~master~I560eaff21c22d2ab70c657b35a3d43a76003e6ba": {"owner_id": 7144, "owner_name": "James Slagle", "owner_email": "jslagle@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-05 14:32:23.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 2, "date": "2019-11-26 14:04:36.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 1, "date": "2019-11-21 10:29:59.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23811, "name": "Oliver Walsh", "email": "owalsh@redhat.com", "username": "owalsh"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I0e960f9ee230c82edb2ad9d40557aa6d0237dfc0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:26:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fnetworking-l2gw~master~I4368e1fdbe3e539c988f82fd90d4c30b426ac1d2": {"owner_id": 8313, "owner_name": "Lajos Katona", "owner_email": "katonalala@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:48:46.000000000", "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 21626, "name": "Ricardo", "email": "rnoriega@redhat.com", "username": "rnoriega"}, {"value": 0, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}, {"value": 0, "_account_id": 4694, "name": "Miguel Lavalle", "email": "miguel@mlavalle.com", "username": "minsel"}, {"value": 0, "_account_id": 5367, "name": "boden", "email": "bodenvmw@gmail.com", "username": "boden"}], "comments": {"networking_l2gw/services/l2gateway/service_drivers/rpc_l2gw.py": [{"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "ccb4c1ace23d84ae5b074c4ea4609c42adf44cf5", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b80d6890", "line": 355, "updated": "2019-12-05 05:16:58.000000000", "message": "I think we usually do:\n\n  if not devices:\n      return\n  for device in devices:\n\nor modify L.353 above to:\n\n  devices = gw.get('l2_gateway').get('devices', [])\n\n(not related to this patch)\nI also noticed L.353 can fail if 'l2_gateway' key does not exist.\nIf it always exists, it is better to change it to gw['l2_gateway'].\nIt is much clearer.", "commit_id": "e2ed6d94e4f2ad5eb8ce803633e37db5b1fe019b"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "3c8de167a39086c761c2dd6efcf9973d985b7391", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_93b79186", "line": 355, "in_reply_to": "3fa7e38b_4e332062", "updated": "2019-12-16 19:55:37.000000000", "message": "- Looking at the definition of the 'l2gateway' extension, 'l2_gateway' is the resource name, so I believe 'l2_gateway' key always exists.\n- I think we don't need to rename the method as this method can check other fields if any. It sounds a matter of taste.\n\nFrom the above, my suggestion is:\n\n  devices = gw['l2_gateway'].get('devices', [])\n\nThought?", "commit_id": "e2ed6d94e4f2ad5eb8ce803633e37db5b1fe019b"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "11163bd18e79cc2390047081acaf22dd5633c323", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4c66812a", "line": 355, "in_reply_to": "3fa7e38b_93b79186", "updated": "2020-01-10 14:09:32.000000000", "message": "Thanks Akihiro, you are right, let's keep the method name and change only the 2nd get to have default.", "commit_id": "e2ed6d94e4f2ad5eb8ce803633e37db5b1fe019b"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "1f47eecf3f7c82c59f05380d74c2c25157966496", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4e332062", "line": 355, "in_reply_to": "3fa7e38b_b80d6890", "updated": "2019-12-09 13:33:11.000000000", "message": "Thanks Akihiro.\nWas good to rethink this :-)\n* I changed the method name to _validate_gateway_devices_for_update as the validation happens only for the devices field of l2gw dict.\n* and I changed the get('key') to get('key', default), this way the loop will just do nothing if there's no l2_gateway key in gw dict and devices key in the previous dict.\n\nWhat do you think?", "commit_id": "e2ed6d94e4f2ad5eb8ce803633e37db5b1fe019b"}, {"author": {"_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, "change_message_id": "8877e88cdac60eaaf6256b9e2ff8105d3ea2b596", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_f5929454", "line": 355, "range": {"start_line": 355, "start_character": 24, "end_line": 355, "end_character": 45}, "updated": "2020-01-10 05:58:37.000000000", "message": "Could you check my reply in patch set 1?", "commit_id": "b72ba85a8bcb7470bda783710113ea30bf8cbc55"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "11163bd18e79cc2390047081acaf22dd5633c323", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_2c6f85fa", "line": 355, "range": {"start_line": 355, "start_character": 24, "end_line": 355, "end_character": 45}, "in_reply_to": "3fa7e38b_f5929454", "updated": "2020-01-10 14:09:32.000000000", "message": "Thanks for the note, and the comment :-)", "commit_id": "b72ba85a8bcb7470bda783710113ea30bf8cbc55"}]}}, "zuul%2Fzuul-jobs~master~I1116e745dd7f9e81af268922f046c9e8073b8447": {"owner_id": 1, "owner_name": "James E. Blair", "owner_email": "jim@acmegating.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 1, "date": "2020-02-11 19:29:55.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, {"value": 0, "_account_id": 4162, "name": "Paul Belanger", "email": "pabelanger@redhat.com", "username": "pabelanger"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 2, "date": "2020-02-12 16:46:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 2, "date": "2020-02-12 08:49:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6547, "name": "Andreas Jaeger", "email": "jaegerandi@gmail.com", "username": "jaegerandi"}], "comments": {"test-playbooks/ensure-tox.yaml": [{"author": {"_account_id": 24162, "name": "Sorin Sb\u00e2rnea", "display_name": "zbr", "email": "ssbarnea@redhat.com", "username": "ssbarnea", "status": "do not feed the troll \ud83e\udd55"}, "change_message_id": "0d2d92c02a2d6e0e17ec19d4c018f19407f93a2f", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_a39e51f7", "line": 21, "range": {"start_line": 21, "start_character": 25, "end_line": 21, "end_character": 32}, "updated": "2020-02-12 16:37:45.000000000", "message": "That makes a bad assumption which will fail tests on a system that has only python2 installed but we can fix it later, in a follow-up that also demonstrates it.", "commit_id": "407af231c26c1a54c0ec764feed14fa83da8c5cc"}, {"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "0471e6f4ed571b258b81bcacaba259bb94d4a0e7", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_069df3b8", "line": 52, "updated": "2020-02-12 16:46:59.000000000", "message": "Is this task and the one above it redundant with the play on lines 27-41?", "commit_id": "407af231c26c1a54c0ec764feed14fa83da8c5cc"}]}}, "openstack%2Fheat~master~I8de6a6b351ee747424240d9587b30edf2d501671": {"owner_id": 4257, "owner_name": "Zane Bitter", "owner_email": "zbitter@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7404, "name": "Ethan Lynn", "email": "xuanlangjian@gmail.com", "username": "GaryLynn"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 12404, "name": "Rico Lin", "email": "ricolin@ricolky.com", "username": "rico.lin"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27427, "name": "David Peacock", "email": "dpeacock@redhat.com", "username": "davidjpeacock"}], "comments": {"heat/engine/clients/os/nova.py": [{"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "a9fc7c6246764ee04d3e8088bdc35f45648fd0fa", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_c9d28bd1", "line": 52, "range": {"start_line": 51, "start_character": 32, "end_line": 52, "end_character": 41}, "updated": "2019-01-31 11:52:16.000000000", "message": "With this, if the instance could not be scheduled, I think we would keep on checking the status till the stack would timeout (nova would keep it on PENDING status), no? Would that be an acceptable behavior?", "commit_id": "8543f05d8e44e4844d6a762525fa0376e604e2dc"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "df0b77258141ecae413b7c125a7677d2af924fc3", "unresolved": false, "patch_set": 1, "id": "ffb9cba7_af1ec409", "line": 52, "range": {"start_line": 51, "start_character": 32, "end_line": 52, "end_character": 41}, "in_reply_to": "9fdfeff1_4c0bce7c", "updated": "2019-04-23 23:52:25.000000000", "message": "The way I see it, putting a time limit on PENDING is Nova's problem.", "commit_id": "8543f05d8e44e4844d6a762525fa0376e604e2dc"}, {"author": {"_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, "change_message_id": "e359c1b5a2f57157cbc89e1f3c395fa2f03a05a2", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_4c0bce7c", "line": 52, "range": {"start_line": 51, "start_character": 32, "end_line": 52, "end_character": 41}, "in_reply_to": "9fdfeff1_ac86fa64", "updated": "2019-02-19 03:19:27.000000000", "message": "AFAIU, in nova a server can stay in PENDING state for ever. I agree we should get rid of the retries in heat and leave it to nova. But we would probably like to fail quicker rather than keep on checking the status till the stack times out.", "commit_id": "8543f05d8e44e4844d6a762525fa0376e604e2dc"}, {"author": {"_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}, "change_message_id": "f438b42e84c6f92f9b26caf110f2f344283c000d", "unresolved": false, "patch_set": 1, "id": "9fdfeff1_ac86fa64", "line": 52, "range": {"start_line": 51, "start_character": 32, "end_line": 52, "end_character": 41}, "in_reply_to": "9fdfeff1_c9d28bd1", "updated": "2019-02-19 02:28:24.000000000", "message": "If it's PENDING then Nova can try again to reschedule later - possibly before the timeout hits. (Essentially this moves retries within Nova, which has info about what hosts are available, instead of within Heat, which does not.)\n\nSo I think that's the behaviour we want. If it doesn't get rescheduled within the timeout then the stack will fail at that point, which is probably also what we want.", "commit_id": "8543f05d8e44e4844d6a762525fa0376e604e2dc"}]}}, "openstack%2Fnova~master~I455e3d409614df7726586250bf4dc061d3f66fd4": {"owner_id": 21239, "owner_name": "Alex Szarka", "owner_email": "szarka@inf.u-szeged.hu", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18602, "name": "G\u00e1bor Antal", "email": "antal@inf.u-szeged.hu", "username": "antal"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18603, "name": "B\u00e9la Vancsics", "email": "vancsics@inf.u-szeged.hu", "username": "vancsics"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18599, "name": "P\u00e9ter Heged\u0171s", "email": "hpeter@inf.u-szeged.hu", "username": "hpeter"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15286, "name": "XenProject CI", "email": "openstack-ci@xenproject.org", "username": "XenProject-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10385, "name": "Citrix XenServer CI", "username": "citrix_xenserver_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5170, "name": "Microsoft Hyper-V CI", "email": "hyper-v_ci@microsoft.com", "username": "hyper-v-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {"nova/objects/instance.py": [{"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "9136b5a03cab2134e11ef26b2dde55d2903a0205", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_d8bd0fd9", "line": 339, "range": {"start_line": 337, "start_character": 8, "end_line": 339, "end_character": 30}, "updated": "2016-08-24 15:43:34.000000000", "message": "I'm afraid I prefer the original logic; this construction is somewhat opaque compared to the if/else tree.", "commit_id": "241e1d06e934afa89509a36f356bf863ee0ee961"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "9136b5a03cab2134e11ef26b2dde55d2903a0205", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_58f47f86", "line": 345, "updated": "2016-08-24 15:43:34.000000000", "message": "I don't quite get the assignments on lines 340 and 342.  As far as I can see, these methods don't actually change the instance of Instance being referenced, they just alter some of its attributes.", "commit_id": "241e1d06e934afa89509a36f356bf863ee0ee961"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "9136b5a03cab2134e11ef26b2dde55d2903a0205", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_38d0a3c9", "line": 350, "updated": "2016-08-24 15:43:34.000000000", "message": "Is there a particular reason these methods are static methods?  I realize the original _from_db_object() method is written using the same style, but I figure it's worth asking whether these subordinate methods should be written that way.", "commit_id": "241e1d06e934afa89509a36f356bf863ee0ee961"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "cab96be0623d7ec5eaafbc1d4e8fb4c823365256", "unresolved": false, "patch_set": 4, "id": "1ac06dbe_6cd32660", "line": 17, "updated": "2016-08-25 18:34:32.000000000", "message": "1. Where is this import used?\n\n2. Only import modules, not objects; this makes it look like you're importing a function called getfullargspec()\n\n3. If you're really calling a function, check to see if oslo_utils may already have the functionality hiding away somewhere\u2026", "commit_id": "08908de1efce9b7ca2626b205d6d728d3f2ae368"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "cab96be0623d7ec5eaafbc1d4e8fb4c823365256", "unresolved": false, "patch_set": 4, "id": "1ac06dbe_6c9e86b9", "line": 351, "updated": "2016-08-25 18:34:32.000000000", "message": "Since this is a constant, I'd like to see it part of the global scope.  That way, it doesn't have to be created each time this method is called.  (femtonit)", "commit_id": "08908de1efce9b7ca2626b205d6d728d3f2ae368"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b25d6e25e6ba39896de34373ca34e9959a78f1e5", "unresolved": false, "patch_set": 6, "id": "fa7ab95a_6ea04a44", "side": "PARENT", "line": 395, "updated": "2016-08-29 09:15:58.000000000", "message": "please, don't remove empty lines. They increase readability.", "commit_id": "1423be58b5e3aa26c85296968146e9d6ed59455a"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b25d6e25e6ba39896de34373ca34e9959a78f1e5", "unresolved": false, "patch_set": 6, "id": "fa7ab95a_01b6af3c", "line": 408, "range": {"start_line": 404, "start_character": 8, "end_line": 408, "end_character": 64}, "updated": "2016-08-29 09:15:58.000000000", "message": "Maybe it's just me, but I would keep the original version, since it's more readable.", "commit_id": "44883a363eef24a10b149dda16871f84996990e4"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b25d6e25e6ba39896de34373ca34e9959a78f1e5", "unresolved": false, "patch_set": 6, "id": "fa7ab95a_df302204", "line": 685, "range": {"start_line": 685, "start_character": 8, "end_line": 685, "end_character": 20}, "updated": "2016-08-29 09:15:58.000000000", "message": "You don't need this dict, since you get it from the method (line 688).", "commit_id": "44883a363eef24a10b149dda16871f84996990e4"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b25d6e25e6ba39896de34373ca34e9959a78f1e5", "unresolved": false, "patch_set": 6, "id": "fa7ab95a_64ace9a0", "line": 757, "range": {"start_line": 757, "start_character": 8, "end_line": 757, "end_character": 45}, "updated": "2016-08-29 09:15:58.000000000", "message": "The method name is not accurate. Also, \"updates\" argument is not necessary, because it is an empty dictionary at the beginning (see line 686), so it can be created in this method.", "commit_id": "44883a363eef24a10b149dda16871f84996990e4"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "1dad314ee34e9908fa001906b0ccd71f20a0bd6a", "unresolved": false, "patch_set": 7, "id": "fa7ab95a_27a7eabd", "line": 405, "range": {"start_line": 405, "start_character": 8, "end_line": 405, "end_character": 12}, "updated": "2016-08-30 12:37:01.000000000", "message": "You have just changed the logic of this function. Indentation does not match with old implementation.", "commit_id": "c5f23c8f57e42278b7024757ee5530cb12d80e98"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "538ebb7a359ad3d65842951f31c393ee156826c0", "unresolved": false, "patch_set": 7, "id": "fa7ab95a_51c0652a", "line": 406, "range": {"start_line": 406, "start_character": 50, "end_line": 406, "end_character": 54}, "updated": "2016-08-29 17:05:35.000000000", "message": "If you're going to use this style, dedent this line so that 'old_flavor' lines up with 'flavor' from the preceding line.  (A similar dedent should occur on 407 as well, of course.)", "commit_id": "c5f23c8f57e42278b7024757ee5530cb12d80e98"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "1dad314ee34e9908fa001906b0ccd71f20a0bd6a", "unresolved": false, "patch_set": 7, "id": "fa7ab95a_0dd3e760", "line": 752, "range": {"start_line": 752, "start_character": 8, "end_line": 752, "end_character": 25}, "updated": "2016-08-30 12:37:01.000000000", "message": "Actually, this function, again, is doing more than providing \"update\" dictionary. It saving objects, which Instance contains. Update will be filled out with those fields, which are changed, and are not objects. Maybe \"_update_fields\" would be more sufficient.", "commit_id": "c5f23c8f57e42278b7024757ee5530cb12d80e98"}]}}, "openstack%2Fnova~master~I789755beec9739b6150ad5897779b7c10d6426d2": {"owner_id": 21239, "owner_name": "Alex Szarka", "owner_email": "szarka@inf.u-szeged.hu", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 20040, "name": "Microsoft Hyper-V Compute CI", "email": "microsoft_nova_ci@microsoft.com", "username": "microsoft_nova_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15751, "name": "Intel PCI CI", "email": "pci-ci@intel.com", "username": "intelpcici", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16128, "name": "IBM PowerVM CI", "email": "powervmci@linux.vnet.ibm.com", "username": "powervmci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16897, "name": "Virtuozzo Storage CI", "email": "vzstorage-ci@virtuozzo.com", "username": "vzstorage-ci", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2017-07-27 10:51:43.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26242, "name": "Viktor Varga", "email": "vvarga@inf.u-szeged.hu", "username": "vvargaszte"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16898, "name": "Virtuozzo CI", "email": "virtuozzo6-ci@virtuozzo.com", "username": "virtuozzo6-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14595, "name": "z Systems KVM", "email": "zkvm-ci@linux.vnet.ibm.com", "username": "ibm-zkvm-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13915, "name": "Silvan Kaiser", "email": "silvan@quobyte.com", "username": "kaisers"}, {"value": 1, "date": "2017-07-07 09:04:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 7634, "name": "Takashi Natsume", "email": "takanattie@gmail.com", "username": "natsumet"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9708, "name": "Balazs Gibizer", "display_name": "gibi", "email": "gibizer@gmail.com", "username": "gibi"}, {"value": 1, "date": "2017-07-27 13:33:07.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22056, "name": "yushangbin", "email": "shangbin.yu@easystack.cn", "username": "yushangbin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18602, "name": "G\u00e1bor Antal", "email": "antal@inf.u-szeged.hu", "username": "antal"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14571, "name": "Intel Experimental CI", "email": "openstack-networking-ci@intel.com", "username": "intel-networking-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18603, "name": "B\u00e9la Vancsics", "email": "vancsics@inf.u-szeged.hu", "username": "vancsics"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, {"value": 1, "date": "2017-07-07 09:04:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 1063, "name": "Ed Leafe", "email": "ed@leafe.com", "username": "ed-leafe"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 8871, "name": "Elastic Recheck", "username": "elasticrecheck"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18599, "name": "P\u00e9ter Heged\u0171s", "email": "hpeter@inf.u-szeged.hu", "username": "hpeter"}, {"value": 1, "date": "2017-07-07 09:04:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16034, "name": "soumiyajit", "email": "somya.rock@gmail.com", "username": "soumiyajit"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15286, "name": "XenProject CI", "email": "openstack-ci@xenproject.org", "username": "XenProject-CI", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2017-07-07 09:04:16.000000000", "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 5170, "name": "Microsoft Hyper-V CI", "email": "hyper-v_ci@microsoft.com", "username": "hyper-v-ci", "tags": ["SERVICE_USER"]}], "comments": {"nova/virt/libvirt/config.py": [{"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "df7a7405b162038d4979255e7492a538169e474d", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_780b3b2c", "line": 749, "updated": "2016-08-24 15:53:58.000000000", "message": "Unrelated change; while I won't -1 for it, consider reverting it anyway, just to reduce the distraction factor.", "commit_id": "2397fa0d4e56b978f503c53a5857cad464b52b94"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "df7a7405b162038d4979255e7492a538169e474d", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_5b78f92b", "line": 816, "updated": "2016-08-24 15:53:58.000000000", "message": "I don't like this swiss army knife style at all.  Consider generalizing it and passing in some sort of description, rather than an if-else tree wrapping for loops.  E.g.:\n\n    def _get_data(self, element_name, *pairs):\n        element = etree.Element(element_name)\n        for attr, text_node in pairs:\n            value = getattr(self, attr)\n            if value is not None:\n                element.append(self._text_node(text_node, value))\n        return element\n\nThen your call could look like:\n\n    iotune = _get_data('iotune',\n        ('disk_read_bytes_sec', 'read_bytes_sec'),\n        \u2026\n        ('disk_total_iops_sec', 'total_iops_sec'))\n\nAnother way of doing it would be to make the description a list, rather than a set of additional arguments, and the lists could be constants in the module.", "commit_id": "2397fa0d4e56b978f503c53a5857cad464b52b94"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "df7a7405b162038d4979255e7492a538169e474d", "unresolved": false, "patch_set": 1, "id": "1ac06dbe_bbac8d8d", "line": 1303, "updated": "2016-08-24 15:53:58.000000000", "message": "I'd like this line aligned after the open parenthesis (femtonit)", "commit_id": "2397fa0d4e56b978f503c53a5857cad464b52b94"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "4260a6e1c4437955aad1be47c3cb68d93880663f", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_1e90d3eb", "line": 818, "range": {"start_line": 818, "start_character": 8, "end_line": 818, "end_character": 55}, "updated": "2016-08-29 07:58:09.000000000", "message": "Function name is ambiguous, too generic. Also, parameter name \"add_type\" is not what the name suggests.", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, "change_message_id": "b6ba39ec3f9e0b6947174bfe3bf10527a2c789e0", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_e421d9fc", "line": 818, "range": {"start_line": 818, "start_character": 8, "end_line": 818, "end_character": 55}, "in_reply_to": "fa7ab95a_1e90d3eb", "updated": "2016-08-29 09:04:28.000000000", "message": "Done", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "4260a6e1c4437955aad1be47c3cb68d93880663f", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_9eba236d", "line": 821, "range": {"start_line": 821, "start_character": 12, "end_line": 821, "end_character": 32}, "updated": "2016-08-29 07:58:09.000000000", "message": "This could be reversed:\n\n  if data is None:\n      continue", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, "change_message_id": "b6ba39ec3f9e0b6947174bfe3bf10527a2c789e0", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_041dddbc", "line": 821, "range": {"start_line": 821, "start_character": 12, "end_line": 821, "end_character": 32}, "in_reply_to": "fa7ab95a_9eba236d", "updated": "2016-08-29 09:04:28.000000000", "message": "Done", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "4260a6e1c4437955aad1be47c3cb68d93880663f", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_b997018f", "line": 1283, "updated": "2016-08-29 07:58:09.000000000", "message": "Is there any particular reason why this function is nested? I understand, that it is only used here, but it might be hard to test\u2026", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "bd7c389c2743a7717e32a1fbee17f6ef4d7c5c52", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_b0ab8bd5", "line": 1283, "in_reply_to": "fa7ab95a_8471ede2", "updated": "2016-08-29 09:49:47.000000000", "message": "I have two reason for asking this question, first, nested functions might have an overhead, because function object will be created every each time outer function would be called, and second - testing.\n\nAs for the second, I doubt that all of Nova code is tested entirely, otherwise there would not be bugs. Providing unit test for single methods may reveal issues, that wasn't covered by original test - I see that as an important part of improvement code quality.", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "b31376646941c2c721747e437ad7183600633cb6", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_27d5781b", "line": 1283, "in_reply_to": "fa7ab95a_a6cc2e6b", "updated": "2016-08-29 12:09:10.000000000", "message": "Great, thanks.", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, "change_message_id": "24287c3e69da450b48c143a4dc96814f60c07390", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_a6cc2e6b", "line": 1283, "in_reply_to": "fa7ab95a_b0ab8bd5", "updated": "2016-08-29 11:19:12.000000000", "message": "If have problem with the new methods, then the old(original) unit tests show the errors. But I'll check, that what to do with tests (if need do something)", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, "change_message_id": "b6ba39ec3f9e0b6947174bfe3bf10527a2c789e0", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_8471ede2", "line": 1283, "in_reply_to": "fa7ab95a_b997018f", "updated": "2016-08-29 09:04:28.000000000", "message": "One reason have: reduce code complexity in caller method.\nLuckily no require write new test: the old unit tests perfect for test this.", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, "change_message_id": "4260a6e1c4437955aad1be47c3cb68d93880663f", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_d947651b", "line": 1310, "updated": "2016-08-29 07:58:09.000000000", "message": "I have an impression, that this method could be split into two", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 21239, "name": "Alex Szarka", "email": "szarka@inf.u-szeged.hu", "username": "xavvior"}, "change_message_id": "b6ba39ec3f9e0b6947174bfe3bf10527a2c789e0", "unresolved": false, "patch_set": 3, "id": "fa7ab95a_2432e110", "line": 1310, "in_reply_to": "fa7ab95a_d947651b", "updated": "2016-08-29 09:04:28.000000000", "message": "Yes, i working on it.", "commit_id": "b0bb405a77b364c9c0719f2870aeaec2cc32d537"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "3928ea4084e78d519a099c65592b021c2edea39b", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_aca316ff", "line": 754, "updated": "2016-08-29 17:14:15.000000000", "message": "Would be nice to pull this out into the top-level scope, or even make it a class attribute, so the constant doesn't get created over and over.", "commit_id": "9f26dbeeda24e25495be695a7e6e008f6461373c"}, {"author": {"_account_id": 679, "name": "Kevin L. Mitchell", "email": "klmitch@mit.edu", "username": "klmitch"}, "change_message_id": "3928ea4084e78d519a099c65592b021c2edea39b", "unresolved": false, "patch_set": 5, "id": "fa7ab95a_6cebce13", "line": 759, "updated": "2016-08-29 17:14:15.000000000", "message": "I would be surprised if \"file\" is a recognized keyword argument of etree.Element.", "commit_id": "9f26dbeeda24e25495be695a7e6e008f6461373c"}, {"author": {"_account_id": 18603, "name": "B\u00e9la Vancsics", "email": "vancsics@inf.u-szeged.hu", "username": "vancsics"}, "change_message_id": "cdc172a966f8ed9fe319beb876b56d9af0545be4", "unresolved": false, "patch_set": 7, "id": "9a30ddce_6645dd6e", "side": "PARENT", "line": 740, "range": {"start_line": 731, "start_character": 0, "end_line": 740, "end_character": 45}, "updated": "2017-03-09 08:38:35.000000000", "message": "This can be \"outsourced\" to a method.\nFor example:\n\ndef method_1(self, drv):\n   drv_pairs = ((self.driver_name, \"name\"),\n                (self.driver_format, \"type\"),\n                (self.driver_cache, \"cache\"),\n                (self.driver_discard, \"discard\"),\n                (self.driver_io, \"io\"))\n\n   for value, attr in drv_pairs:\n      if value is not None:\n         drv.set(attr, value)\n\n--->\n[...]\ndrv = etree.Element(\"driver\")\nself.method_1(drv)\ndev.append(drv)\n[...]", "commit_id": "0be6bdfc36e8b88e34cbe92164d14070572bf918"}, {"author": {"_account_id": 18603, "name": "B\u00e9la Vancsics", "email": "vancsics@inf.u-szeged.hu", "username": "vancsics"}, "change_message_id": "cdc172a966f8ed9fe319beb876b56d9af0545be4", "unresolved": false, "patch_set": 7, "id": "9a30ddce_461c5977", "side": "PARENT", "line": 758, "range": {"start_line": 751, "start_character": 0, "end_line": 758, "end_character": 35}, "updated": "2017-03-09 08:38:35.000000000", "message": "def method_2(self, source):\n   if self.source_name is not None:\n      source.set('name', self.source_name)\n      hosts_info = zip(self.source_hosts, self.source_ports)\n      for name, port in hosts_info:\n         host = etree.Element('host', name=name)\n         if port is not None:\n            host.set('port', port)\n         source.append(host)\n--->\n[...]\nsource = etree.Element(\"source\", protocol=self.source_protocol)\nself.method_2(source)\ndev.append(source)\n[...]", "commit_id": "0be6bdfc36e8b88e34cbe92164d14070572bf918"}, {"author": {"_account_id": 18603, "name": "B\u00e9la Vancsics", "email": "vancsics@inf.u-szeged.hu", "username": "vancsics"}, "change_message_id": "cdc172a966f8ed9fe319beb876b56d9af0545be4", "unresolved": false, "patch_set": 7, "id": "9a30ddce_4951ca0d", "side": "PARENT", "line": 801, "range": {"start_line": 778, "start_character": 0, "end_line": 801, "end_character": 42}, "updated": "2017-03-09 08:38:35.000000000", "message": "def method_3(self, iotune):\n   if self.disk_read_bytes_sec is not None:\n      iotune.append(self._text_node(\"read_bytes_sec\",\n                self.disk_read_bytes_sec))\n\n   if self.disk_read_iops_sec is not None:\n      iotune.append(self._text_node(\"read_iops_sec\",\n                self.disk_read_iops_sec))\n\n   if self.disk_write_bytes_sec is not None:\n      iotune.append(self._text_node(\"write_bytes_sec\",\n                self.disk_write_bytes_sec))\n\n   if self.disk_write_iops_sec is not None:\n      iotune.append(self._text_node(\"write_iops_sec\",\n                self.disk_write_iops_sec))\n\n   if self.disk_total_bytes_sec is not None:\n      iotune.append(self._text_node(\"total_bytes_sec\",\n                self.disk_total_bytes_sec))\n\n   if self.disk_total_iops_sec is not None:\n      iotune.append(self._text_node(\"total_iops_sec\",\n                self.disk_total_iops_sec))\n--->\n[...]\niotune = etree.Element(\"iotune\")\nself.method_3(iotune)\nif len(iotune) > 0:\n[...]", "commit_id": "0be6bdfc36e8b88e34cbe92164d14070572bf918"}, {"author": {"_account_id": 15334, "name": "Stephen Finucane", "display_name": "stephenfin", "email": "stephenfin@redhat.com", "username": "sfinucan"}, "change_message_id": "54a5df132bd830385802b0f82fc6132732b013f9", "unresolved": false, "patch_set": 10, "id": "3a1ff146_9b9b2a72", "line": 775, "range": {"start_line": 775, "start_character": 17, "end_line": 775, "end_character": 39}, "updated": "2017-03-16 10:03:00.000000000", "message": "Would a consistent '_configure_{element}' naming, e.g. '_configure_driver', make these a little easier to parse?", "commit_id": "e7f7b9d282e69f203b902f745cff9194670f2671"}, {"author": {"_account_id": 1063, "name": "Ed Leafe", "email": "ed@leafe.com", "username": "ed-leafe"}, "change_message_id": "ed2b45d863d031396028d4b30e602b9a65f24218", "unresolved": false, "patch_set": 11, "id": "3a1ff146_1ff63bd7", "line": 741, "range": {"start_line": 741, "start_character": 4, "end_line": 741, "end_character": 23}, "updated": "2017-03-16 14:28:37.000000000", "message": "Would it be possible to follow the pattern you used in _configure_driver? Something like this:\n\n    def _iotune_appends(self, iotune):\n        vals = (\"read_bytes_sec\", \"read_iops_sec\", \"write_bytes_sec\",\n                \"write_iops_sec\", \"total_bytes_sec\", \"total_iops_sec\")\n        for val in vals:\n            att = getattr(self, \"disk_%s\" % val)\n            if att is not None:\n                iotune.append(self._text_node(val, att))", "commit_id": "cc73c116f48facf76c342bd464b7bfa2f5c0238c"}]}}, "openstack%2Fopenstack-helm-infra~master~I572d5c1df10ce960e6d3a49ee27f8bc038f74118": {"owner_id": 21420, "owner_name": "Gage Hugo", "owner_email": "gagehugo@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~Ib11a48c3aad28bccb71cb77a61aa7d34fc3ffd16": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:36:23.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~I46d3d1971b8194f6eea94eb0c7882053654eaec0": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:14:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-12 01:27:32.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "starlingx%2Fstx-puppet~master~I99b0b10d6f1d6c81af8b9b272bf1a9b4af44a749": {"owner_id": 28468, "owner_name": "Tao Liu", "owner_email": "tao.liu@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:13:12.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-12 15:03:15.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28464, "name": "Eric MacDonald", "display_name": "Eric", "email": "eric.macdonald@windriver.com", "username": "rocksolidmtce"}], "comments": {}}, "openstack%2Fnova~stable%2Fqueens~I8190f93e0a754fa59ed848a3a230d1ef63a06abc": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29963, "name": "Intel_Zuul", "display_name": "Intel Corporation CI", "email": "intel-openstack-ci@intel.com", "username": "Intel_Zuul"}, {"value": 2, "date": "2020-02-11 09:20:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 17685, "name": "Elod Illes", "email": "elod.illes@est.tech", "username": "elod.illes"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 19:51:14.000000000", "_account_id": 10135, "name": "Lee Yarwood", "display_name": "Lee Yarwood", "email": "lyarwood@redhat.com", "username": "lyarwood"}, {"value": 0, "_account_id": 26515, "name": "Cloudbase Nova Hyper-V CI", "email": "nova_hyperv_ci@cloudbasesolutions.com", "username": "nova_hyperv_ci"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~I97a3f69feb2bc954183afe1a957122f6bb5706fa": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:10:39.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "airship%2Fdrydock~master~I3e8cb5227495d959e3b8aa9c5bf62fdc860a0eb0": {"owner_id": 24816, "owner_name": "Anthony Bellino", "owner_email": "ab2434@att.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 16:10:48.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 24816, "name": "Anthony Bellino", "email": "ab2434@att.com", "username": "anthony.bellino"}], "comments": {}}, "openstack%2Fpuppet-neutron~stable%2Fstein~Id73e8ae40f4db67247bde36156e3b84c456b9f29": {"owner_id": 16137, "owner_name": "Tobias Urdin", "owner_email": "tobias.urdin@binero.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 00:04:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 16137, "name": "Tobias Urdin", "email": "tobias.urdin@binero.com", "username": "tobasco"}, {"value": 2, "date": "2020-02-11 08:35:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9414, "name": "zhongshengping", "email": "chdzsp@163.com", "username": "ZhongShengping"}], "comments": {}}, "openstack%2Fcharm-guide~master~I8a0e886e6ea1456511452e69dedb61ca145d1b20": {"owner_id": 7730, "owner_name": "Sahid Orentino Ferdjaoui", "owner_email": "sahid.ferdjaoui@industrialdiscipline.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:55:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12549, "name": "gnuoy", "email": "liam.young@canonical.com", "username": "gnuoy"}, {"value": 0, "_account_id": 14567, "name": "Rodrigo Barbieri", "email": "rodrigo.barbieri@canonical.com", "username": "ganso"}, {"value": 0, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}, {"value": 1, "date": "2020-02-12 15:50:07.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}], "comments": {"doc/source/2002.rst": [{"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "5df6e30f75516f320271611a735971593ae6df8d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_76b01842", "line": 150, "range": {"start_line": 150, "start_character": 37, "end_line": 150, "end_character": 57}, "updated": "2020-02-12 14:33:48.000000000", "message": "Monospace actions\n\n``pause`` and ``resume``", "commit_id": "223c22c48cc1f9c7cc779a76928097039a62366d"}, {"author": {"_account_id": 30561, "name": "Peter Matulis", "email": "peter.matulis@canonical.com", "username": "pmatulis"}, "change_message_id": "5df6e30f75516f320271611a735971593ae6df8d", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_161d2460", "line": 156, "range": {"start_line": 156, "start_character": 0, "end_line": 156, "end_character": 22}, "updated": "2020-02-12 14:33:48.000000000", "message": "All the headings no longer use caps everywhere.\n\nPreview charm features", "commit_id": "223c22c48cc1f9c7cc779a76928097039a62366d"}]}}, "openstack%2Fpython-cinderclient~master~Ifbdbae3ee66d72f9d34cf4a8fdf2bde388b2b6f0": {"owner_id": 26580, "owner_name": "liuzhuangzhuang", "owner_email": "vpbvmw651078@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:20:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "_account_id": 26580, "name": "liuzhuangzhuang", "email": "vpbvmw651078@gmail.com", "username": "LiuZhuangzhuang"}, {"value": 2, "date": "2020-02-12 12:11:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {"cinderclient/v3/volumes.py": [{"author": {"_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, "change_message_id": "03a781447af5af93416e7f71feb433485c14ebed", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_65eb84a4", "line": 135, "range": {"start_line": 135, "start_character": 38, "end_line": 135, "end_character": 44}, "updated": "2020-02-12 12:11:36.000000000", "message": "just noting that _action does a base.getid() call on this, so if the volume id is passed instead of the volume object, this will work (i.e., the change to line 132 is fine)", "commit_id": "8f12b620a0002325b8f90fa8c2cfe267543443df"}]}}, "openstack%2Fpython-cinderclient~master~I69e41a340c815090f25677607e971a8e75791f6d": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:14:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-02-12 11:36:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {}}, "openstack%2Fmanila-ui~master~Ia3f8a5c1cffd87e90c33e98700854f0aa1dd7041": {"owner_id": 16643, "owner_name": "Goutham Pacha Ravi", "owner_email": "gouthampravi@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-02-12 04:29:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 2, "date": "2020-02-11 12:25:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9003, "name": "Tom Barron", "email": "tpb@dyncloud.net", "username": "tbarron"}, {"value": 0, "_account_id": 16643, "name": "Goutham Pacha Ravi", "email": "gouthampravi@gmail.com", "username": "gouthamr"}], "comments": {}}, "openstack%2Fpuppet-tripleo~master~Id6d2e4b00355cd84baccc2b493f3205c2b32a44b": {"owner_id": 25402, "owner_name": "Francesco Pantano", "owner_email": "fpantano@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-30 12:00:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-07 22:18:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, {"value": 0, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 0, "_account_id": 9914, "name": "Ade Lee", "email": "alee@redhat.com", "username": "alee"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 18002, "name": "John Fulton", "email": "fulton@redhat.com", "username": "fultonj"}], "comments": {"files/certmonger-dashboard-refresh.sh": [{"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "d8b85b6412a807f293ff239db1c675059b00794c", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_73b9cae9", "line": 7, "updated": "2020-01-30 09:43:02.000000000", "message": "maybe we can restart the container entirely", "commit_id": "199b04d3ec71047433afd754cfe4a3054abad481"}, {"author": {"_account_id": 6796, "name": "Giulio Fidente", "email": "gfidente@redhat.com", "username": "gfidente"}, "change_message_id": "8ff56f086ef34f136a73424b3898588a771a728e", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_d919bf24", "line": 6, "updated": "2020-01-30 11:35:48.000000000", "message": "mgr!", "commit_id": "c61961a4946b2f8b6be1cc27c52d89bf83a58391"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "865ea14cae95b2f056f9e945f95f9af76600a703", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_19d5171b", "line": 6, "in_reply_to": "3fa7e38b_d919bf24", "updated": "2020-01-30 11:37:02.000000000", "message": "ahaha wrong copy/paste, thx", "commit_id": "c61961a4946b2f8b6be1cc27c52d89bf83a58391"}], "manifests/haproxy.pp": [{"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "c7e0bc65cb97fbd17c38dea768fa9311d4c3e1c4", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fef20ce4", "line": 1079, "range": {"start_line": 1079, "start_character": 8, "end_line": 1079, "end_character": 53}, "updated": "2020-01-17 12:00:39.000000000", "message": "We need this option because the redirect mechanism provided by ceph dashboard cannot be disable so far.\n(https://bugzilla.redhat.com/show_bug.cgi?id=1792222)", "commit_id": "4b1a6952476e548e6bd330ddef0562373762ece5"}, {"author": {"_account_id": 25402, "name": "Francesco Pantano", "email": "fpantano@redhat.com", "username": "fmount"}, "change_message_id": "ecc6203afc27182735826afdb3f8682bed84525c", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_78b1bbff", "line": 352, "range": {"start_line": 350, "start_character": 0, "end_line": 352, "end_character": 47}, "updated": "2020-01-29 12:46:55.000000000", "message": "Maybe this can be deleted now because the we use \"ceph_dashboard\" as variable which is referred to ceph_mgr service in hieradata", "commit_id": "199b04d3ec71047433afd754cfe4a3054abad481"}]}}, "openstack%2Fpython-cinderclient~master~Ifcbc08ae9184fa33049b18f8ad7ef5d92003a7b8": {"owner_id": 4523, "owner_name": "Eric Harney", "owner_email": "eharney@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:13:48.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 2, "date": "2020-02-12 11:40:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}], "comments": {}}, "openstack%2Fnetworking-l2gw~master~I12ec23f9f8879b984099cce3495f4687dd2e0f61": {"owner_id": 8313, "owner_name": "Lajos Katona", "owner_email": "katonalala@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2019-12-10 06:58:30.000000000", "_account_id": 841, "name": "Akihiro Motoki", "email": "amotoki@gmail.com", "username": "amotoki"}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 21626, "name": "Ricardo", "email": "rnoriega@redhat.com", "username": "rnoriega"}, {"value": 0, "_account_id": 6854, "name": "YAMAMOTO Takashi", "email": "yamamoto@midokura.com", "username": "yamamoto"}], "comments": {}}, "starlingx%2Futilities~f%2Fcentos8~I1b16969547af910e13b2360d62a4171b92475e28": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-03 16:27:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:29:50.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {}}, "starlingx%2Futilities~f%2Fcentos8~I79f7a5764f34a2d405134a4b354f3f8892be899e": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-03 16:52:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:29:30.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {}}, "starlingx%2Fconfig-files~f%2Fcentos8~Id7b966b358ea91371a30e6b4d68b17238f1f1752": {"owner_id": 28414, "owner_name": "Austin Sun", "owner_email": "austin.sun@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 15:22:58.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:29:13.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}], "comments": {}}, "starlingx%2Finteg~f%2Fcentos8~Ie210020e91ceac5a6100d71249f998e9aa5870a4": {"owner_id": 31311, "owner_name": "Zhang Zhiguo", "owner_email": "zhangzhg@neusoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 0, "_account_id": 31311, "name": "Zhang Zhiguo", "email": "zhangzhg@neusoft.com", "username": "zhangzhg0508"}, {"value": 2, "date": "2020-02-04 15:24:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:28:59.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "8b2f20bdc474fc1890aca2ca4d86e63f6943822d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5c868867", "line": 12, "range": {"start_line": 12, "start_character": 19, "end_line": 12, "end_character": 29}, "updated": "2020-01-03 05:01:12.000000000", "message": "rebase to", "commit_id": "135b76df9d4be5db93bd16b3065f5498b915a393"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "8b2f20bdc474fc1890aca2ca4d86e63f6943822d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_dc91189c", "line": 13, "range": {"start_line": 13, "start_character": 4, "end_line": 13, "end_character": 22}, "updated": "2020-01-03 05:01:12.000000000", "message": "\"replace WRS with STX\"", "commit_id": "135b76df9d4be5db93bd16b3065f5498b915a393"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "8b2f20bdc474fc1890aca2ca4d86e63f6943822d", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_bc945c8d", "line": 15, "range": {"start_line": 15, "start_character": 0, "end_line": 15, "end_character": 52}, "updated": "2020-01-03 05:01:12.000000000", "message": "\"Signed-Off\" is missed.", "commit_id": "135b76df9d4be5db93bd16b3065f5498b915a393"}], "base/lighttpd/centos/meta_patches/spec-include-TiS-changes.patch": [{"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "9f1ccc085afd19259ef64e09f0f0d20d825e3401", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8fbfefc8", "line": 41, "range": {"start_line": 41, "start_character": 15, "end_line": 41, "end_character": 23}, "updated": "2020-01-02 07:45:35.000000000", "message": "should it update to \"memcached\" also?", "commit_id": "3f3deb6c2deff9762ee433cac77feaee0f666965"}, {"author": {"_account_id": 31311, "name": "Zhang Zhiguo", "email": "zhangzhg@neusoft.com", "username": "zhangzhg0508"}, "change_message_id": "00845c2ff15d62816281546612a32f11cd932e24", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_415f8374", "line": 41, "range": {"start_line": 41, "start_character": 15, "end_line": 41, "end_character": 23}, "in_reply_to": "3fa7e38b_4111c3ae", "updated": "2020-01-03 03:06:30.000000000", "message": "Oh,I see.Thank you.", "commit_id": "3f3deb6c2deff9762ee433cac77feaee0f666965"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "4f7e16bbf6353841ce9c350c878e8f9ba1667d0f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4111c3ae", "line": 41, "range": {"start_line": 41, "start_character": 15, "end_line": 41, "end_character": 23}, "in_reply_to": "3fa7e38b_8166dbbb", "updated": "2020-01-03 02:55:50.000000000", "message": "I mean should we change \"memcache\" to \"memcached\"?\nYou could find the line you deleted is \"memcached\", not \"memcache\".", "commit_id": "3f3deb6c2deff9762ee433cac77feaee0f666965"}, {"author": {"_account_id": 31311, "name": "Zhang Zhiguo", "email": "zhangzhg@neusoft.com", "username": "zhangzhg0508"}, "change_message_id": "91df13b605e0b4a5f10dff1ae2dffe0b8289a64f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8166dbbb", "line": 41, "range": {"start_line": 41, "start_character": 15, "end_line": 41, "end_character": 23}, "in_reply_to": "3fa7e38b_8fbfefc8", "updated": "2020-01-03 01:51:05.000000000", "message": "yes,need to update to el8 version for centos8 from 1.4.39-1 to 1.5.9-2.", "commit_id": "3f3deb6c2deff9762ee433cac77feaee0f666965"}], "centos_srpms_centos.lst": [{"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "238de06e5bc2b1115ef2c12138572aaf4d3b2b42", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_78bb9773", "line": 11, "range": {"start_line": 3, "start_character": 0, "end_line": 11, "end_character": 29}, "updated": "2020-01-17 05:56:19.000000000", "message": "I will add another patch to correct the lst.", "commit_id": "befa6b56b43cf12bc07c9bb2eb158c5f2aa4c91a"}]}}, "x%2Fnetworking-mlnx~master~I82585ba02d938625661914e59a60c7dca547bdbd": {"owner_id": 28714, "owner_name": "Adrian Chiris", "owner_email": "adrianc@nvidia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:26:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12171, "name": "Moshe Levi", "email": "moshele@nvidia.com", "username": "moshele"}], "comments": {}}, "starlingx%2Ftools~master~Ic35002434bd3c3dd67a24d82834b2447d035cf63": {"owner_id": 29319, "owner_name": "Kristal Dale", "owner_email": "kristal.dale@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-22 22:15:57.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 2, "date": "2020-01-31 22:10:58.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:23:34.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}], "comments": {}}, "starlingx%2Ftools~f%2Fcentos8~I1f1eada20159c73cbb3e06f10880bb50a6bc925e": {"owner_id": 30435, "owner_name": "Yong Fu", "owner_email": "fuyong@neusoft.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30205, "name": "zhao.shuai", "email": "zhaos@neusoft.com", "username": "zhao.shuai"}, {"value": 0, "_account_id": 28414, "name": "Austin Sun", "email": "austin.sun@intel.com", "username": "sunausti"}, {"value": 1, "date": "2020-02-04 03:55:37.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, {"value": 2, "date": "2020-02-04 19:34:11.000000000", "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:28:37.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 31311, "name": "Zhang Zhiguo", "email": "zhangzhg@neusoft.com", "username": "zhangzhg0508"}, {"value": 0, "_account_id": 28682, "name": "Ran An", "email": "ran1.an@intel.com", "username": "SidneyAn"}, {"value": 0, "_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, {"value": 0, "_account_id": 30437, "name": "chendongqi", "email": "chen.dq@neusoft.com", "username": "Dq.Chen"}, {"value": 0, "_account_id": 30967, "name": "Long Li", "email": "lilong-neu@neusoft.com", "username": "LongLi"}, {"value": 0, "_account_id": 30435, "name": "Yong Fu", "email": "fuyong@neusoft.com", "username": "Yong.Fu"}], "comments": {"centos-mirror-tools/rpms_3rdparties.lst": [{"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "997d87929b81cd4e1f231004d2247a67d0eade9b", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_12ddcddd", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 30}, "updated": "2020-02-03 00:58:40.000000000", "message": "It seems patch 6 overwrite patch 5. Is it expected?", "commit_id": "b02b691354a28dab3d5e43bb562ebffd31dc10da"}, {"author": {"_account_id": 28682, "name": "Ran An", "email": "ran1.an@intel.com", "username": "SidneyAn"}, "change_message_id": "39895ef29cd6c1c240fed1499d8c270e7f485d96", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5027abc9", "line": 23, "range": {"start_line": 23, "start_character": 0, "end_line": 23, "end_character": 30}, "in_reply_to": "3fa7e38b_12ddcddd", "updated": "2020-02-04 03:51:18.000000000", "message": "has been align with set 5", "commit_id": "b02b691354a28dab3d5e43bb562ebffd31dc10da"}], "centos-mirror-tools/rpms_centos.lst": [{"author": {"_account_id": 28410, "name": "Scott Little", "email": "scott.little@windriver.com", "username": "slittle1"}, "change_message_id": "ba89720a30119cf9d4c6879260a2ec17c29da811", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b750c00a", "line": 322, "range": {"start_line": 321, "start_character": 0, "end_line": 322, "end_character": 31}, "updated": "2020-01-08 16:18:52.000000000", "message": "Why both src and binary roms of haproxy?\n\nsrc.rpm implies we intend to compile it, in which case we should be able to omit the binary.", "commit_id": "b18dea481bcce6a867eaac82886786d9365451b8"}, {"author": {"_account_id": 30435, "name": "Yong Fu", "email": "fuyong@neusoft.com", "username": "Yong.Fu"}, "change_message_id": "7c95babdc635d3b379297cdf0807ffc7c5b71042", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fae6144a", "line": 322, "range": {"start_line": 321, "start_character": 0, "end_line": 322, "end_character": 31}, "in_reply_to": "3fa7e38b_b750c00a", "updated": "2020-01-09 06:29:32.000000000", "message": "Done", "commit_id": "b18dea481bcce6a867eaac82886786d9365451b8"}, {"author": {"_account_id": 28682, "name": "Ran An", "email": "ran1.an@intel.com", "username": "SidneyAn"}, "change_message_id": "26bc535362550a98fb42a5ec87fcfa3855aa3d6a", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c715a79c", "line": 1077, "range": {"start_line": 1077, "start_character": 0, "end_line": 1077, "end_character": 59}, "updated": "2020-01-07 07:06:24.000000000", "message": "why not use python-requests-2.20.0-1.el8.src.rpm, refer to https://centos.pkgs.org/8/centos-baseos-x86_64/python3-requests-2.20.0-1.el8.noarch.rpm.html\n \nthe current one is for python2, see https://centos.pkgs.org/8/centos-appstream-x86_64/python2-requests-2.20.0-2.module_el8.0.0+32+017b2cba.noarch.rpm.html", "commit_id": "b18dea481bcce6a867eaac82886786d9365451b8"}, {"author": {"_account_id": 30435, "name": "Yong Fu", "email": "fuyong@neusoft.com", "username": "Yong.Fu"}, "change_message_id": "7c95babdc635d3b379297cdf0807ffc7c5b71042", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_1aea100d", "line": 1077, "range": {"start_line": 1077, "start_character": 0, "end_line": 1077, "end_character": 59}, "in_reply_to": "3fa7e38b_c715a79c", "updated": "2020-01-09 06:29:32.000000000", "message": "Done", "commit_id": "b18dea481bcce6a867eaac82886786d9365451b8"}, {"author": {"_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}, "change_message_id": "997d87929b81cd4e1f231004d2247a67d0eade9b", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_32da49e6", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 58}, "updated": "2020-02-03 00:58:40.000000000", "message": "It seems patch 6 overwrite patch 5. is it expected?", "commit_id": "087d14655989ef9478bc9ea3d25e9a6ec4a129f1"}, {"author": {"_account_id": 28682, "name": "Ran An", "email": "ran1.an@intel.com", "username": "SidneyAn"}, "change_message_id": "39895ef29cd6c1c240fed1499d8c270e7f485d96", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_3018ef81", "line": 24, "range": {"start_line": 24, "start_character": 0, "end_line": 24, "end_character": 58}, "in_reply_to": "3fa7e38b_32da49e6", "updated": "2020-02-04 03:51:18.000000000", "message": "has been align with set 5", "commit_id": "087d14655989ef9478bc9ea3d25e9a6ec4a129f1"}]}}, "starlingx%2Finteg~master~I3c44012bc67136aed1e12c63037c822db7cdc4a6": {"owner_id": 29319, "owner_name": "Kristal Dale", "owner_email": "kristal.dale@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28286, "name": "Bruce Jones", "email": "bruce.e.jones@intel.com", "username": "brucej"}, {"value": 2, "date": "2020-02-05 18:28:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:24:00.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 26026, "name": "Greg Waines", "email": "greg.waines@windriver.com", "username": "gwaines"}, {"value": 0, "_account_id": 29319, "name": "Kristal Dale", "email": "kristal.dale@intel.com", "username": "kdale"}], "comments": {}}, "opendev%2Fsystem-config~master~I294bf17084be7dad46e075ad2a3ef2674276c018": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:42:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-12 14:42:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-12 14:42:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1, "name": "James E. Blair", "email": "jim@acmegating.com", "username": "corvus"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "starlingx%2Fconfig~r%2Fstx.3.0~I959b65288e0834b989aa87e40506e41d0bba0d59": {"owner_id": 28415, "owner_name": "Lin Shuicheng", "owner_email": "shuicheng.lin@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:55:46.000000000", "_account_id": 14174, "name": "Bart Wensley", "email": "bartwensley@hotmail.com", "username": "bartwensley"}, {"value": 2, "date": "2020-02-12 15:07:19.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 0, "_account_id": 28415, "name": "Lin Shuicheng", "email": "shuicheng.lin@intel.com", "username": "slin14"}], "comments": {}}, "openinfra%2Fopenstackid-resources~master~I9ea4388effd44617e5122e1b1a23c9c74473d2e6": {"owner_id": 9139, "owner_name": "sebastian marcet", "owner_email": "smarcet@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 15:20:10.000000000", "_account_id": 9139, "name": "sebastian marcet", "email": "smarcet@gmail.com", "username": "smarcet"}], "comments": {}}, "starlingx%2Finteg~master~I9d97ab642ffffc2dff43ff1c1a591b0a52ad9c41": {"owner_id": 28652, "owner_name": "Jim Somerville", "owner_email": "jim.somerville@windriver.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28607, "name": "Saul Wold", "email": "saul.wold@windriver.com", "username": "sgw-starlingx"}, {"value": 2, "date": "2020-02-12 15:06:12.000000000", "_account_id": 28431, "name": "Don Penney", "email": "don.penney@windriver.com", "username": "dpenney"}, {"value": 2, "date": "2020-02-12 00:00:07.000000000", "_account_id": 28642, "name": "Brent Rowsell", "email": "brent.rowsell@windriver.com", "username": "browsell"}], "comments": {}}, "openstack%2Fironic~stable%2Ftrain~I8047d805b0a3da4051a6d618ed9ac40875b8636a": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 10:51:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 2472, "name": "Doug Hellmann", "email": "dhellmann@redhat.com", "username": "doug-hellmann"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I5df308a2f433c2e18c0afd7b334078ee53ac9e52": {"owner_id": 12393, "owner_name": "chandan kumar", "owner_email": "chkumar@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-12 10:04:58.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, {"value": 2, "date": "2020-02-12 13:16:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9976, "name": "Ronelle Landy", "email": "rlandy@redhat.com", "username": "rlandy"}, {"value": 2, "date": "2020-02-12 11:34:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 0, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 2, "date": "2020-02-12 11:42:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"config/general_config/featureset001.yml": [{"author": {"_account_id": 8367, "name": "Arx Cruz", "email": "arxcruz@redhat.com", "username": "arxcruz"}, "change_message_id": "9cef0f60df7beeb8537c22e479f799b6d412227a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_2d86e7b8", "line": 207, "updated": "2020-02-11 13:58:05.000000000", "message": "tempest_whitelist is - 'tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_network_basic_ops' while here we had - 'tempest.scenario.test_network_basic_ops.TestNetworkBasicOps' that will execute all tests, not only test_network_basic_ops", "commit_id": "fde9659223fdf4759bc4effc573844efd4e0c66f"}]}}, "openstack%2Fsushy-cli~master~Ib7dd7dae908a8fddcd89ea754bb4f5b346f45519": {"owner_id": 26340, "owner_name": "Ilya Etingof", "owner_email": "etingof@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:06:12.000000000", "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-11 10:35:27.000000000", "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "697c01cd86db44e8944ef7a768b74eb332e3bc2b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_db52856a", "line": 14, "updated": "2020-02-10 10:55:37.000000000", "message": "What about keeping 'power on' and 'power off' by making them separate commands? A bit more code to write but more convenient to use.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "25b58b86748880ea0ffac4c39d9422a2d5c0b54f", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3cfaac10", "line": 14, "in_reply_to": "3fa7e38b_23cdaf2e", "updated": "2020-02-10 14:54:47.000000000", "message": "The problem is (was?) that 'system power show' can be interpreted as a command on its own or as 'system power' with argument 'show'. Maybe cliff can now handle it?", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "5a68f26897ce33573094af0cac46fa01dab82df1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5c9be8c6", "line": 14, "in_reply_to": "3fa7e38b_3cfaac10", "updated": "2020-02-10 14:57:51.000000000", "message": "I think cliff matches solely entry points. Not sure it ever considers the trailing pieces that are to be handled by the class-specific parser...\n\nAnyway, this seems to work for me.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "3b2bdd01fbef4c7f53913578af861fc6522620e5", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_23cdaf2e", "line": 14, "in_reply_to": "3fa7e38b_43b78bf9", "updated": "2020-02-10 13:20:50.000000000", "message": "That seems to work, and I do not see why not. There seems to be no ambiguity, no?", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "36ee1890dbb8d1dfbd0e6093a313c286509273a3", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_639ba7c7", "line": 14, "in_reply_to": "3fa7e38b_50b98f79", "updated": "2020-02-10 12:57:50.000000000", "message": "You mean, having on/off as an argument? Then you'll get ambiguity between 'system power [on/off]' and 'system power show', cliff won't allow it.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "a3cbf47a506d87cae4705ee934a632afebc19bc1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5bfe9507", "line": 14, "in_reply_to": "3fa7e38b_5bdbf5e9", "updated": "2020-02-10 11:09:59.000000000", "message": "Who \"we\"? :) sushy-cli doesn't have anything yet, ironic does have 'openstack baremetal node power on/power off/reboot'.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "c1ca75110315f15d74160ac726d8c95324fac383", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_ad851055", "line": 14, "in_reply_to": "3fa7e38b_5bfe9507", "updated": "2020-02-10 11:30:27.000000000", "message": "Here [1] is the tip of the patch chain where we have more commands implemented.  I am trying to say that there we have only set and show.\n\nSo what's the syntax you propose?\n\nsushycli system power show -> on/off\nsushycli system power on  -> exit(0|1)\nsushycli system power off  -> exit(0|1)\n\nThere seems to be a practical problem if we omit 'show' because `power show` should map to cliff Lister class, while `power set` should map to the Command class. They differ in behavior to reflect list/action operations.\n\nIf we omit both `show`/`set` tokens in entry_points, then we could not map these commands to different cliff classes. But perhaps we can get away with either  `show` or `set`.\n\nOr am I just missing some smart cliff hack?\n\n1. https://review.opendev.org/#/c/706461/2/setup.cfg", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "8b9701db90b519e17f5f5a81877369483f52a81c", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_a3f67fd4", "line": 14, "in_reply_to": "3fa7e38b_639ba7c7", "updated": "2020-02-10 13:03:40.000000000", "message": "Hmm, can't we have it this way?\n\n    sushycli =\n        system_power_show = sushycli.system_power:SystemPowerShow\n        system_power = sushycli.system_power:SystemPowerSet", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "76d9fd2974f7ca05f98aa4c73871e53dc4184703", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_50b98f79", "line": 14, "in_reply_to": "3fa7e38b_6dd39838", "updated": "2020-02-10 12:49:53.000000000", "message": "> we create a lot of commands, with each implementation differing only in a top-level constant.\n\nIs class constants anyhow better than interpreting the last on/off token of argv in a single class?", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "139048eb119e2ee4f4129d89e93cf10119168441", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_43b78bf9", "line": 14, "in_reply_to": "3fa7e38b_a3f67fd4", "updated": "2020-02-10 13:06:14.000000000", "message": "I don't think you can (feel free to try)", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, "change_message_id": "dc8a5dadfda0e377526e2c0a3d7e52aab5c22521", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_6dd39838", "line": 14, "in_reply_to": "3fa7e38b_ad851055", "updated": "2020-02-10 11:33:31.000000000", "message": "Check out the hack we're using in ironicclient to handle the numerous provisioning commands: https://opendev.org/openstack/python-ironicclient/src/branch/master/ironicclient/osc/v1/baremetal_node.py#L47-L156. Essentially, we create a lot of commands, with each implementation differing only in a top-level constant. You can do the same to define power on/off. I agree about keeping show though.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}, {"author": {"_account_id": 26340, "name": "Ilya Etingof", "email": "etingof@gmail.com", "username": "etingof"}, "change_message_id": "12fe20d791666c16a6b298bc0fa26d3e568fe852", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_5bdbf5e9", "line": 14, "in_reply_to": "3fa7e38b_db52856a", "updated": "2020-02-10 10:58:17.000000000", "message": "My only concern here would be that the syntax becomes less consistent... So far we have just `set` and `show` verbs.", "commit_id": "f155c1b1a1c23dd23c17c1784ba7a4b94258d5b5"}]}}, "openstack%2Fneutron-vpnaas~stable%2Frocky~I9c0e830d7ef5dbc69ed41d7b7161e43e89dfbd92": {"owner_id": 841, "owner_name": "Akihiro Motoki", "owner_email": "amotoki@gmail.com", "labels": [{"value": 1, "date": "2020-02-11 00:40:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 12860, "name": "Dongcan Ye", "email": "yedongcan@yeah.net", "username": "yedongcan"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 14:11:36.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 2, "date": "2020-02-12 08:49:28.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}], "comments": {}}, "openstack%2Fpaunch~stable%2Ftrain~I2e49d4dd5b385237f4f79929c70365424f6fa22d": {"owner_id": 28223, "owner_name": "Cedric Jeanneret", "owner_email": "cjeanner@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6926, "name": "Bogdan Dobrelya", "email": "bdobreli@redhat.com", "username": "bogdando"}, {"value": 2, "date": "2020-01-27 14:50:57.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 14250, "name": "Grzegorz Grasza", "email": "xek@redhat.com", "username": "xek"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fneutron~master~Iae44aa2f1c336a0f5501312af05b0133193c5462": {"owner_id": 7102, "owner_name": "Thomas Bechtold", "owner_email": "thomas.bechtold@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15752, "name": "Intel SR-IOV CI", "email": "sriov-ci@intel.com", "username": "sriovci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 09:58:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}, {"value": 0, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 0, "_account_id": 16376, "name": "Intel NFV CI", "email": "openstack-nfv-ci@intel.com", "username": "intel-nfv-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, {"value": 0, "_account_id": 9845, "name": "Arista CI", "email": "arista-openstack-test@aristanetworks.com", "username": "arista-test", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-10 15:26:29.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, {"value": 2, "date": "2020-02-10 10:07:58.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron/tests/functional/cmd/test_netns_cleanup.py": [{"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "26eee09dba887690605a3f79ea23953fb6b6a67a", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_1de02727", "line": 104, "updated": "2019-12-05 13:37:12.000000000", "message": "Here you are running a command using an environment defined in L136-137. You should use only the executable name. In this case:\n\nos.path.basename(sys.executable)\n\nWith this change you should pass https://73af4e8bccf4cf28005c-8b3fd1cbec84f6612448a196d686f738.ssl.cf2.rackcdn.com/681400/7/check/neutron-functional/72aa91d/testr_results.html.gz", "commit_id": "728f829773e9f6e8ed7ea495f5f2a45ef9a9a82b"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "21e92e16f0ebc32ea912997f78de16ddb109b022", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_866d9c30", "line": 104, "in_reply_to": "3fa7e38b_1de02727", "updated": "2019-12-06 04:41:52.000000000", "message": "Thanks a lot for the hint! Updated", "commit_id": "728f829773e9f6e8ed7ea495f5f2a45ef9a9a82b"}], "neutron/tests/unit/agent/linux/test_daemon.py": [{"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "3170009dd32fe83b41d868fa903e043f849c8cb2", "unresolved": false, "patch_set": 5, "id": "5faad753_5204534a", "line": 211, "range": {"start_line": 210, "start_character": 36, "end_line": 211, "end_character": 35}, "updated": "2019-09-12 08:59:02.000000000", "message": "'%s 1234' % sys.executable", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "db08b1728feddd6c2123dc71434cf8eefb78e0e7", "unresolved": false, "patch_set": 5, "id": "5faad753_5260d301", "line": 211, "range": {"start_line": 210, "start_character": 36, "end_line": 211, "end_character": 35}, "in_reply_to": "5faad753_5204534a", "updated": "2019-09-12 09:04:54.000000000", "message": "why?", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "17ba5ecc86c2766ab9ada7c55ff051d37d686897", "unresolved": false, "patch_set": 5, "id": "5faad753_6d0e4e33", "line": 211, "range": {"start_line": 210, "start_character": 36, "end_line": 211, "end_character": 35}, "in_reply_to": "5faad753_5260d301", "updated": "2019-09-12 09:06:59.000000000", "message": "Check the unit test results: https://409f32abbe367e8fc10b-07499960a71aa815729b6aa191eb1322.ssl.cf2.rackcdn.com/681400/5/check/openstack-tox-py37/fbc3755/testr_results.html.gz\n\nft1.5: neutron.tests.unit.agent.linux.test_daemon.TestPidfile.test_is_running_uuid_false_StringException: Traceback (most recent call last):\n  File \"/home/zuul/src/opendev.org/openstack/neutron/neutron/tests/base.py\", line 177, in func\n    return f(self, *args, **kwargs)\n  File \"/home/zuul/src/opendev.org/openstack/neutron/neutron/tests/unit/agent/linux/test_daemon.py\", line 223, in test_is_running_uuid_false\n    '/proc/34/cmdline', '{} 1234').format(\nAttributeError: 'OpenFixture' object has no attribute 'format'", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "669f58ed58cdd490ece695b9c5da99971458e695", "unresolved": false, "patch_set": 5, "id": "5faad753_cd842261", "line": 211, "range": {"start_line": 210, "start_character": 36, "end_line": 211, "end_character": 35}, "in_reply_to": "5faad753_6d0e4e33", "updated": "2019-09-12 09:10:57.000000000", "message": "That was not because of the .format() but because I set one \")\" wrong. Fixed now (but still using .format())", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "60da055fe9ca5d5c36d511a4371cacf853ddbb79", "unresolved": false, "patch_set": 5, "id": "5faad753_4f39eea1", "line": 211, "range": {"start_line": 210, "start_character": 36, "end_line": 211, "end_character": 35}, "in_reply_to": "5faad753_cd842261", "updated": "2019-09-13 07:28:08.000000000", "message": "Ahh, ok, I missed that", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}, {"author": {"_account_id": 8313, "name": "Lajos Katona", "email": "katonalala@gmail.com", "username": "elajkat"}, "change_message_id": "3170009dd32fe83b41d868fa903e043f849c8cb2", "unresolved": false, "patch_set": 5, "id": "5faad753_d295a3e5", "line": 224, "range": {"start_line": 223, "start_character": 36, "end_line": 224, "end_character": 34}, "updated": "2019-09-12 08:59:02.000000000", "message": "ditto\n'%s 1234' % sys.executable", "commit_id": "69c8d4e2fec458b6b97fb8e9558a0410b0f48d2c"}]}}, "openstack%2Fcinder~master~I6d49fe02d3a5b826cf93076a0828450ca52220cc": {"owner_id": 11904, "owner_name": "Sean McGinnis", "owner_email": "sean.mcginnis@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:42:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 21:26:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5997, "name": "Walt", "display_name": "Hemna", "email": "waboring@hemna.com", "username": "walter-boring"}, {"value": 0, "_account_id": 22510, "name": "Synology DSM CI", "email": "cinder@synology.com", "username": "synocinder", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24814, "name": "HPMSA CI", "email": "cinder+hpmsa@tristero.net", "username": "hpmsa-ci"}, {"value": 0, "_account_id": 24815, "name": "Lenovo Storage CI", "email": "cinder+lenovo@tristero.net", "username": "lenovo-ci"}, {"value": 0, "_account_id": 22248, "name": "HPE STORAGE CI", "email": "hp.cinder.blr.ci@groups.ext.hpe.com", "username": "hp-storage-blr-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 1, "date": "2019-12-02 10:50:30.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 30688, "name": "Seagate CI", "email": "cinder+seagate@tristero.net", "username": "seagate-ci"}, {"value": 0, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 14384, "name": "Quobyte CI", "email": "openstack-ci-external@quobyte.com", "username": "quobyteci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12017, "name": "DellEMC VNX CI", "email": "emc.vnx.ci@emc.com", "username": "emc-vnx-ci", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fzun-tempest-plugin~master~I689f15a070628a24ca55d931004ffa7264b69d91": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:33:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "airship%2Fairshipctl~master~I27b5774e79db51e0e9bc81d8c207be80811ba459": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 2, "date": "2020-02-12 14:24:12.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-12 14:11:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {}}, "airship%2Fairshipctl~master~I3789acd79d2072a2b90ed3bbaff99767070334e5": {"owner_id": 21991, "owner_name": "Kostyantyn Kalynovskyi", "owner_email": "kkalinovskiy@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 2, "date": "2020-02-12 14:26:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27046, "name": "Rodolfo Pacheco", "email": "jezogwza@gmail.com", "username": "jezogwza2723"}, {"value": 0, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-12 11:11:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "7ef1020ae03f7c299359e3b04cf7ecd4e10cfbb5", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_01d0d9c7", "line": 7, "range": {"start_line": 7, "start_character": 16, "end_line": 7, "end_character": 29}, "updated": "2019-12-23 06:57:08.000000000", "message": "compatibility", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}], "pkg/config/errors.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "351e19fbc8b9050d0af42a5b3a5b921700102c31", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_ba0b6b21", "line": 17, "range": {"start_line": 11, "start_character": 0, "end_line": 17, "end_character": 35}, "updated": "2020-02-03 14:17:05.000000000", "message": "We are defining errors as a separate type not a variable.", "commit_id": "1aeaa777210cc6ee374ef65ae2fc95e9288ab19d"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "37a7d74ea1bae0ac15a4bb69fa3bdfb400a03b83", "unresolved": false, "patch_set": 19, "id": "3fa7e38b_039be8c7", "updated": "2020-02-07 17:11:54.000000000", "message": "This is a lot of ErrMutuallyExclusiveXYZ errors. Could we collapse these into a single error ErrMutualExclusive and attach some fields identifying the 2 items which are mutually exclusive to each other?", "commit_id": "14d510e92a9e1dc85439057fbfc398638a0bbf94"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_fe0c053b", "line": 12, "range": {"start_line": 12, "start_character": 8, "end_line": 12, "end_character": 20}, "updated": "2020-02-10 18:08:32.000000000", "message": "Incompatible", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_2c191722", "line": 12, "range": {"start_line": 12, "start_character": 8, "end_line": 12, "end_character": 20}, "in_reply_to": "3fa7e38b_fe0c053b", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_3efffdff", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 23}, "updated": "2020-02-10 18:08:32.000000000", "message": "This field isn't used - please delete it", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_cc1163fb", "line": 13, "range": {"start_line": 13, "start_character": 0, "end_line": 13, "end_character": 23}, "in_reply_to": "3fa7e38b_3efffdff", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_9e2711b6", "line": 14, "range": {"start_line": 14, "start_character": 1, "end_line": 14, "end_character": 9}, "updated": "2020-02-10 18:08:32.000000000", "message": "Forbidden", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_ec0e9fd6", "line": 14, "range": {"start_line": 14, "start_character": 1, "end_line": 14, "end_character": 9}, "in_reply_to": "3fa7e38b_9e2711b6", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_3e4dbd6f", "line": 31, "range": {"start_line": 31, "start_character": 1, "end_line": 31, "end_character": 12}, "updated": "2020-02-10 18:08:32.000000000", "message": "unused field", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_8ccdab93", "line": 31, "range": {"start_line": 31, "start_character": 1, "end_line": 31, "end_character": 12}, "in_reply_to": "3fa7e38b_3e4dbd6f", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_1e3801c9", "line": 40, "range": {"start_line": 40, "start_character": 1, "end_line": 40, "end_character": 12}, "updated": "2020-02-10 18:08:32.000000000", "message": "ditto", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_acd2e731", "line": 40, "range": {"start_line": 40, "start_character": 1, "end_line": 40, "end_character": 12}, "in_reply_to": "3fa7e38b_1e3801c9", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "ff07aef2380990cc28841cd851305ecd7c7af3ea", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_be40cd34", "line": 50, "range": {"start_line": 50, "start_character": 1, "end_line": 50, "end_character": 12}, "updated": "2020-02-10 18:08:32.000000000", "message": "ditto", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "4ad75385b57488bb3dc2c45fc7538b3fb9e99df9", "unresolved": false, "patch_set": 20, "id": "3fa7e38b_6cd86f50", "line": 50, "range": {"start_line": 50, "start_character": 1, "end_line": 50, "end_character": 12}, "in_reply_to": "3fa7e38b_be40cd34", "updated": "2020-02-10 20:32:30.000000000", "message": "Done", "commit_id": "20f2d12225955a1a53c80aa146cd365def2a8da1"}], "pkg/config/repo.go": [{"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "59564b01313b72cb4fdbeda69614795c032ce350", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_0afbd1be", "line": 24, "range": {"start_line": 24, "start_character": 108, "end_line": 24, "end_character": 109}, "updated": "2020-01-06 15:41:37.000000000", "message": "nit: \"branch, or tag\"", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_5df72d8d", "line": 24, "range": {"start_line": 24, "start_character": 108, "end_line": 24, "end_character": 109}, "in_reply_to": "3fa7e38b_0afbd1be", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_3174ea9b", "line": 25, "range": {"start_line": 22, "start_character": 0, "end_line": 25, "end_character": 1}, "updated": "2020-01-07 22:23:33.000000000", "message": "Errors typically go in an errors.go file", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_f177328d", "line": 55, "range": {"start_line": 47, "start_character": 0, "end_line": 55, "end_character": 2}, "updated": "2020-01-07 22:23:33.000000000", "message": "This would be cleaner with an int in place of a list. Also, shouldn't the check be for *exactly* 1? Currently, this will pass successfully even if none of the possibleValues are set.", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_c8a7ddba", "line": 55, "range": {"start_line": 47, "start_character": 0, "end_line": 55, "end_character": 2}, "in_reply_to": "3fa7e38b_f177328d", "updated": "2020-01-08 23:18:39.000000000", "message": "i've changed this to use integer instead. \nif none of the possible values is set, default master branch will be used.", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_712fc288", "line": 57, "range": {"start_line": 57, "start_character": 9, "end_line": 57, "end_character": 57}, "updated": "2020-01-07 22:23:33.000000000", "message": "This should be an errors.ErrNotImplemented\n\nhttps://opendev.org/airship/airshipctl/src/branch/master/pkg/errors/common.go#L17", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_2898f173", "line": 57, "range": {"start_line": 57, "start_character": 9, "end_line": 57, "end_character": 57}, "in_reply_to": "3fa7e38b_712fc288", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_b1677aea", "line": 64, "range": {"start_line": 64, "start_character": 1, "end_line": 64, "end_character": 74}, "updated": "2020-01-07 22:23:33.000000000", "message": "Make this a const array", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a82e21f6", "line": 64, "range": {"start_line": 64, "start_character": 1, "end_line": 64, "end_character": 74}, "in_reply_to": "3fa7e38b_b1677aea", "updated": "2020-01-08 23:18:39.000000000", "message": "do you mean array of constants instead of slice?\nvar (\n  AllowedAuthTypes := [...]string{SSHAuth, SSHPass, HTTPBasic}\n)", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_116d2eca", "line": 68, "range": {"start_line": 65, "start_character": 0, "end_line": 68, "end_character": 109}, "updated": "2020-01-07 22:23:33.000000000", "message": "Move these to errors.go", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_4893ed59", "line": 68, "range": {"start_line": 65, "start_character": 0, "end_line": 68, "end_character": 109}, "in_reply_to": "3fa7e38b_116d2eca", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_3135caa8", "line": 128, "range": {"start_line": 123, "start_character": 0, "end_line": 128, "end_character": 1}, "updated": "2020-01-07 22:23:33.000000000", "message": "Move these to errors.go", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_e8873911", "line": 128, "range": {"start_line": 123, "start_character": 0, "end_line": 128, "end_character": 1}, "in_reply_to": "3fa7e38b_3135caa8", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "351e19fbc8b9050d0af42a5b3a5b921700102c31", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_1a207f9a", "line": 44, "range": {"start_line": 44, "start_character": 19, "end_line": 44, "end_character": 27}, "updated": "2020-02-03 14:17:05.000000000", "message": "Could you use array (not slice) to allocate this on stack instead of heap", "commit_id": "1aeaa777210cc6ee374ef65ae2fc95e9288ab19d"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "351e19fbc8b9050d0af42a5b3a5b921700102c31", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_dac5075f", "line": 62, "range": {"start_line": 62, "start_character": 20, "end_line": 62, "end_character": 28}, "updated": "2020-02-03 14:17:05.000000000", "message": "array instead of slice", "commit_id": "1aeaa777210cc6ee374ef65ae2fc95e9288ab19d"}], "pkg/config/repo_test.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "7ef1020ae03f7c299359e3b04cf7ecd4e10cfbb5", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_e1e57da5", "line": 78, "range": {"start_line": 78, "start_character": 20, "end_line": 78, "end_character": 22}, "updated": "2019-12-23 06:57:08.000000000", "message": "trailing whitespaces", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "5437173a4482361e6098b708635b77911f28ca8d", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_fa9671ef", "line": 78, "range": {"start_line": 78, "start_character": 20, "end_line": 78, "end_character": 22}, "in_reply_to": "3fa7e38b_e1e57da5", "updated": "2019-12-26 17:34:33.000000000", "message": "Done", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_f1a412ba", "updated": "2020-01-07 22:23:33.000000000", "message": "Remove these log statements", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_d18d5635", "line": 1, "range": {"start_line": 1, "start_character": 8, "end_line": 1, "end_character": 14}, "updated": "2020-01-07 22:23:33.000000000", "message": "It looks like these unit tests could be moved to the `config_test` package.", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_7167c2b9", "line": 97, "range": {"start_line": 25, "start_character": 0, "end_line": 97, "end_character": 60}, "updated": "2020-01-07 22:23:33.000000000", "message": "Make this constant", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_11da0e49", "line": 141, "range": {"start_line": 100, "start_character": 0, "end_line": 141, "end_character": 4}, "updated": "2020-01-07 22:23:33.000000000", "message": "Each of these should be defined in their respective unit tests", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_d1c8f675", "line": 159, "range": {"start_line": 157, "start_character": 0, "end_line": 159, "end_character": 24}, "updated": "2020-01-07 22:23:33.000000000", "message": "This is being reused a lot. We could use a helper function, perhaps `getTestData(t *testing.T) *TestRepos`", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_71ea62d9", "line": 164, "range": {"start_line": 164, "start_character": 0, "end_line": 164, "end_character": 42}, "updated": "2020-01-07 22:23:33.000000000", "message": "remove these log statements", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a83f01dd", "line": 164, "range": {"start_line": 164, "start_character": 0, "end_line": 164, "end_character": 42}, "in_reply_to": "3fa7e38b_71ea62d9", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "351e19fbc8b9050d0af42a5b3a5b921700102c31", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_fd01dd04", "line": 169, "range": {"start_line": 164, "start_character": 0, "end_line": 169, "end_character": 3}, "updated": "2020-02-03 14:17:05.000000000", "message": "I have mixed feelings regarding this code. Why can't we use assert.Equal here?", "commit_id": "1aeaa777210cc6ee374ef65ae2fc95e9288ab19d"}], "pkg/config/types.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "7ef1020ae03f7c299359e3b04cf7ecd4e10cfbb5", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_21ecf590", "line": 131, "range": {"start_line": 131, "start_character": 5, "end_line": 131, "end_character": 15}, "updated": "2019-12-23 06:57:08.000000000", "message": "According to our discussions each repo should have target path which is relative to manifest target path.", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "5437173a4482361e6098b708635b77911f28ca8d", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_fabf515d", "line": 131, "range": {"start_line": 131, "start_character": 5, "end_line": 131, "end_character": 15}, "in_reply_to": "3fa7e38b_21ecf590", "updated": "2019-12-26 17:34:33.000000000", "message": "Let's discuss this next design session. I think at some point, we have decided to remove target-path and take it from url itself", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "7ef1020ae03f7c299359e3b04cf7ecd4e10cfbb5", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_41efb185", "line": 133, "range": {"start_line": 133, "start_character": 1, "end_line": 133, "end_character": 5}, "updated": "2019-12-23 06:57:08.000000000", "message": "Why private field ?", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "5437173a4482361e6098b708635b77911f28ca8d", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_9ab09d8f", "line": 133, "range": {"start_line": 133, "start_character": 1, "end_line": 133, "end_character": 5}, "in_reply_to": "3fa7e38b_41efb185", "updated": "2019-12-26 17:34:33.000000000", "message": "Done", "commit_id": "e1fae64647ffa8a7179a09d7ff118a7444b72ab2"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_f17df21d", "line": 132, "range": {"start_line": 132, "start_character": 28, "end_line": 132, "end_character": 29}, "updated": "2020-01-07 22:23:33.000000000", "message": "nit: delete this comma", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a3d64225", "line": 132, "range": {"start_line": 132, "start_character": 28, "end_line": 132, "end_character": 29}, "in_reply_to": "3fa7e38b_f17df21d", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "59564b01313b72cb4fdbeda69614795c032ce350", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_aae4fddf", "line": 136, "range": {"start_line": 136, "start_character": 20, "end_line": 136, "end_character": 21}, "updated": "2020-01-06 15:41:37.000000000", "message": "nit: lowercase", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_881d6578", "line": 136, "range": {"start_line": 136, "start_character": 20, "end_line": 136, "end_character": 21}, "in_reply_to": "3fa7e38b_aae4fddf", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_518ba61c", "line": 138, "range": {"start_line": 138, "start_character": 0, "end_line": 138, "end_character": 76}, "updated": "2020-01-07 22:23:33.000000000", "message": "Delete this", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_682269bc", "line": 138, "range": {"start_line": 138, "start_character": 0, "end_line": 138, "end_character": 76}, "in_reply_to": "3fa7e38b_518ba61c", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_b17bfa26", "line": 141, "range": {"start_line": 141, "start_character": 3, "end_line": 141, "end_character": 7}, "updated": "2020-01-07 22:23:33.000000000", "message": "Change this to RepoAuth", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "59564b01313b72cb4fdbeda69614795c032ce350", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_6aca8546", "line": 141, "range": {"start_line": 141, "start_character": 15, "end_line": 141, "end_character": 25}, "updated": "2020-01-06 15:41:37.000000000", "message": "describes", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_c837ddfc", "line": 141, "range": {"start_line": 141, "start_character": 15, "end_line": 141, "end_character": 25}, "in_reply_to": "3fa7e38b_6aca8546", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_a834e1fa", "line": 141, "range": {"start_line": 141, "start_character": 3, "end_line": 141, "end_character": 7}, "in_reply_to": "3fa7e38b_b17bfa26", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "59564b01313b72cb4fdbeda69614795c032ce350", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_aafddd6d", "line": 143, "range": {"start_line": 143, "start_character": 12, "end_line": 143, "end_character": 15}, "updated": "2020-01-06 15:41:37.000000000", "message": "remove", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_e34afa58", "line": 143, "range": {"start_line": 143, "start_character": 12, "end_line": 143, "end_character": 15}, "in_reply_to": "3fa7e38b_aafddd6d", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, "change_message_id": "59564b01313b72cb4fdbeda69614795c032ce350", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_6a38453a", "line": 152, "range": {"start_line": 152, "start_character": 45, "end_line": 152, "end_character": 59}, "updated": "2020-01-06 15:41:37.000000000", "message": "authentication", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_43b42e1d", "line": 152, "range": {"start_line": 152, "start_character": 45, "end_line": 152, "end_character": 59}, "in_reply_to": "3fa7e38b_6a38453a", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "5f2acfeb3bc997ca9ea478e56a4d3b2641cab180", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_71710245", "line": 158, "range": {"start_line": 158, "start_character": 3, "end_line": 158, "end_character": 11}, "updated": "2020-01-07 22:23:33.000000000", "message": "RepoCheckout", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}, {"author": {"_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, "change_message_id": "2dec0dcab65eb829a89a41fb2b3bb4e2f6dfe555", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_032f163e", "line": 158, "range": {"start_line": 158, "start_character": 3, "end_line": 158, "end_character": 11}, "in_reply_to": "3fa7e38b_71710245", "updated": "2020-01-08 23:18:39.000000000", "message": "Done", "commit_id": "b7c94bb1cc724231f3472ccc478d16637d3b8679"}]}}, "openstack%2Fcyborg~master~I269554030908c1084f61a3d401524139a3735f28": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:39:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 1, "date": "2020-02-12 02:55:44.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-12 05:33:32.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/objects/ext_arq.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "f63dc5312d0f7c9f0cadd3996c53d47d5c6a2001", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0f2306ac", "line": 248, "updated": "2020-02-08 04:14:18.000000000", "message": "nit: Can you add log for set the default deployable_uuid while the 'deployable_id' is not in db_extarq?", "commit_id": "d38200c0a4b4986a5f794035d476c655d2c2bd86"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "07668be8a20470482d5fb5b84527a1f4e6ff9210", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7a57cff6", "line": 248, "in_reply_to": "3fa7e38b_0f2306ac", "updated": "2020-02-10 06:08:31.000000000", "message": "Done", "commit_id": "d38200c0a4b4986a5f794035d476c655d2c2bd86"}], "cyborg/tests/unit/objects/test_extarq.py": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "216a1d554ec3386e2eb984ba71a5c59f82a8ae18", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_342b117d", "line": 372, "range": {"start_line": 372, "start_character": 40, "end_line": 372, "end_character": 42}, "updated": "2020-02-03 12:28:26.000000000", "message": "Suggest use int instead string.", "commit_id": "2cfd9f14aa8476e50d6e5e35c8b2061874b74e52"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "bf51deee8908a451a865567c9e3037edb6169fae", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_d8cda15b", "line": 372, "range": {"start_line": 372, "start_character": 40, "end_line": 372, "end_character": 42}, "in_reply_to": "3fa7e38b_342b117d", "updated": "2020-02-10 17:14:07.000000000", "message": "I used None because that seems clearer than 0.", "commit_id": "2cfd9f14aa8476e50d6e5e35c8b2061874b74e52"}]}}, "openstack%2Ftripleo-heat-templates~master~Idad24414afacfbce48c907c187bbd35ebe4a7397": {"owner_id": 6681, "owner_name": "Brent Eagles", "owner_email": "beagles@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 8297, "name": "Sofer Athlan-Guyot", "email": "sathlang@redhat.com", "username": "chem"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}], "comments": {}}, "openstack%2Fcyborg~master~I5d575046e2be38f3bdd5d3f9c9495db121d8a05d": {"owner_id": 21672, "owner_name": "Sundar Nadathur", "owner_email": "sundar.nadathur@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 07:38:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-11 07:38:33.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 1, "date": "2020-02-11 07:38:33.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-11 08:11:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/objects/extarq/ext_arq_job.py": [{"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "81d125c839556fccdfe4331ac5d45c3dcb404d72", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_6291819b", "line": 127, "range": {"start_line": 127, "start_character": 30, "end_line": 127, "end_character": 49}, "updated": "2020-02-07 07:08:12.000000000", "message": "feeling a bit weird here, it seems a typo from constants.py[0], right? should be\u201cARQ_OUTOF_BIND_FLOW\u201d instead of \"ARQ_OUFOF_BIND_FLOW\".Can you pls also fix that typo from constant.py?\n[0]https://github.com/openstack/cyborg/blob/19ffa3b790e1b40a93031b9ef085e2e8908963ed/cyborg/common/constants.py#L30", "commit_id": "a50fe04176db00527351ad4a2dea2f6b0542929b"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "7135b184fc6778dc8327cc66c549bfa52ee92f3f", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_332af977", "line": 127, "range": {"start_line": 127, "start_character": 30, "end_line": 127, "end_character": 49}, "in_reply_to": "3fa7e38b_6291819b", "updated": "2020-02-07 11:05:18.000000000", "message": "+1, yes, it's a typo.it was already fixed in another patch.", "commit_id": "a50fe04176db00527351ad4a2dea2f6b0542929b"}]}}, "openstack%2Fcyborg~master~I745eb4e28871fa0b554852831e5f4105ea677c27": {"owner_id": 14131, "owner_name": "shaohef", "owner_email": "shaohe.feng@intel.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:34:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 04:38:57.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/common/utils.py": [{"author": {"_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, "change_message_id": "4b74b872e0c9428b6a17b4c046171b8ce06eefae", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_e1a6ddc0", "line": 342, "range": {"start_line": 342, "start_character": 40, "end_line": 342, "end_character": 41}, "updated": "2019-12-23 05:48:21.000000000", "message": "six.text_type(e)", "commit_id": "b7c37352ffa60233192c93396d105a628db1a0d5"}, {"author": {"_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, "change_message_id": "4b74b872e0c9428b6a17b4c046171b8ce06eefae", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_c18ba11f", "line": 404, "range": {"start_line": 404, "start_character": 62, "end_line": 404, "end_character": 63}, "updated": "2019-12-23 05:48:21.000000000", "message": "six.text_type(e)", "commit_id": "b7c37352ffa60233192c93396d105a628db1a0d5"}, {"author": {"_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, "change_message_id": "4b74b872e0c9428b6a17b4c046171b8ce06eefae", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_619aed6f", "line": 440, "range": {"start_line": 440, "start_character": 31, "end_line": 440, "end_character": 32}, "updated": "2019-12-23 05:48:21.000000000", "message": "six.text_type(e)", "commit_id": "b7c37352ffa60233192c93396d105a628db1a0d5"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3ed07a67087422c4f5deaaec94de73db35b4b844", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_1a47e67c", "line": 375, "range": {"start_line": 374, "start_character": 0, "end_line": 375, "end_character": 65}, "updated": "2020-01-19 03:39:55.000000000", "message": "repeated", "commit_id": "3750590211c796bb75d3c9bada82aee215a6409d"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "5096b64da0218434571004cd35fb583f87fe949d", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_ff2aea2b", "line": 348, "range": {"start_line": 348, "start_character": 22, "end_line": 348, "end_character": 23}, "updated": "2020-02-07 03:35:15.000000000", "message": "nit: J", "commit_id": "422f41cf8bb5b89de3b30ef2dcc34f0eb4759a76"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "23b06db359d3bbfc212f3a0768f4c01daf58c62f", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_1ae7cd12", "line": 396, "range": {"start_line": 396, "start_character": 31, "end_line": 396, "end_character": 60}, "updated": "2020-02-07 15:38:26.000000000", "message": "Hi shaohe, I was wondering whether these two f.exception() represent the same exception? if not, shall we use different names?", "commit_id": "422f41cf8bb5b89de3b30ef2dcc34f0eb4759a76"}, {"author": {"_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}, "change_message_id": "1401f3e4d58175989dd409239ffd1ee3897f4c80", "unresolved": false, "patch_set": 10, "id": "3fa7e38b_3ac71714", "line": 396, "range": {"start_line": 396, "start_character": 31, "end_line": 396, "end_character": 60}, "in_reply_to": "3fa7e38b_1ae7cd12", "updated": "2020-02-10 09:00:23.000000000", "message": "> Hi shaohe, I was wondering whether these two f.exception()\n > represent the same exception? if not, shall we use different names?\n\nexception_info include traceback. \nlet me remove the whole, check_workers_exception.\nsince we can not use exception_info.", "commit_id": "422f41cf8bb5b89de3b30ef2dcc34f0eb4759a76"}], "cyborg/objects/ext_arq.py": [{"author": {"_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, "change_message_id": "4b74b872e0c9428b6a17b4c046171b8ce06eefae", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_41a011a5", "line": 184, "range": {"start_line": 184, "start_character": 54, "end_line": 184, "end_character": 55}, "updated": "2019-12-23 05:48:21.000000000", "message": "this should change to:\nsix.text_type(e)", "commit_id": "b7c37352ffa60233192c93396d105a628db1a0d5"}], "cyborg/tests/unit/db/test_db_attach_handle.py": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "3ed07a67087422c4f5deaaec94de73db35b4b844", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_9a5af64e", "line": 38, "range": {"start_line": 38, "start_character": 7, "end_line": 38, "end_character": 38}, "updated": "2020-01-19 03:39:55.000000000", "message": "suggest the name like: test_allocate_attach_handle_not_exist", "commit_id": "3750590211c796bb75d3c9bada82aee215a6409d"}, {"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "23b06db359d3bbfc212f3a0768f4c01daf58c62f", "unresolved": false, "patch_set": 8, "id": "3fa7e38b_daea9575", "line": 38, "range": {"start_line": 38, "start_character": 7, "end_line": 38, "end_character": 38}, "in_reply_to": "3fa7e38b_9a5af64e", "updated": "2020-02-07 15:38:26.000000000", "message": "agree", "commit_id": "3750590211c796bb75d3c9bada82aee215a6409d"}]}}, "openstack%2Fec2api-tempest-plugin~master~I3a1c1139b740bed80f086e65b975523f56e58a8e": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:57:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}], "comments": {}}, "openstack%2Fproject-config~master~I799982d9c023141cf612901084d4ecbd4447e969": {"owner_id": 16312, "owner_name": "Alfredo Moralejo", "owner_email": "amoralej@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 13:51:11.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 1, "date": "2020-02-12 09:43:41.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 13861, "name": "yatin", "email": "ykarel@redhat.com", "username": "yatinkarel"}, {"value": 0, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "_account_id": 1955, "name": "Alan Pevec", "email": "alan.pevec@redhat.com", "username": "apevec"}], "comments": {}}, "openstack%2Fec2-api~master~I0b454f7758fe80d1321be1a99aa2ab6e4c3f7b4e": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fcharm-ceph-proxy~master~Ic6e28783bde4fc342d7c5ef1d733e69a03b702fe": {"owner_id": 20634, "owner_name": "Chris MacNaughton", "owner_email": "chris.macnaughton@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20634, "name": "Chris MacNaughton", "email": "chris.macnaughton@canonical.com", "username": "Chris.MacNaughton"}, {"value": 2, "date": "2020-02-12 13:15:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 12549, "name": "gnuoy", "email": "liam.young@canonical.com", "username": "gnuoy"}, {"value": 2, "date": "2020-02-12 13:46:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13686, "name": "Frode Nordahl", "email": "frode.nordahl@canonical.com", "username": "fnordahl"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I507ebba82227e5f4567de6f5a0cb76f8ee46b2e3": {"owner_id": 22629, "owner_name": "Michal Nasiadka", "owner_email": "mnasiadka@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 10:21:11.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 15197, "name": "Pierre Riteau", "email": "pierre@stackhpc.com", "username": "priteau"}, {"value": 2, "date": "2020-02-11 10:19:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 2, "date": "2020-02-12 10:21:06.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 0, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}], "comments": {}}, "openstack%2Fvitrage~master~Id3518248b514fe5b4de61ac6491e7bbbb3f66e7f": {"owner_id": 681, "owner_name": "Debo~ Dutta", "owner_email": "ddutta@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3, "name": "Jenkins", "username": "jenkins"}], "comments": {}}, "openstack%2Fironic~master~I2db2e870e2c5f32aa061af025ee7ce12c4f7c049": {"owner_id": 11655, "owner_name": "Julia Kreger", "owner_email": "juliaashleykreger@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 2, "date": "2020-02-05 07:46:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-05 09:11:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fkolla-ansible~stable%2Ftrain~I6e7f2f4229c8b579dcc17dacffeb74160875ae29": {"owner_id": 30491, "owner_name": "Rados\u0142aw Piliszek", "owner_email": "radoslaw.piliszek@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:28:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24072, "name": "Marcin Juszkiewicz", "email": "marcin.juszkiewicz+kolla@linaro.org", "username": "hrw"}, {"value": 2, "date": "2020-02-10 17:34:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14826, "name": "Mark Goddard", "email": "mark@stackhpc.com", "username": "mgoddard"}, {"value": 0, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 1, "date": "2020-02-09 18:55:15.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fcyborg~master~I5e683c99d1e08ed6a166a110a87b665cdbc5bde3": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 09:37:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-02-12 12:34:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 1, "date": "2020-02-12 09:37:40.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-12 09:37:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 30759, "name": "Shogo Saito", "email": "shogo.saito.ac@hco.ntt.co.jp", "username": "s.shogo"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/db/sqlalchemy/api.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "434444164d50364be52a4a3a38c6b6ec92b77b55", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ef7f8a13", "line": 215, "range": {"start_line": 214, "start_character": 0, "end_line": 215, "end_character": 24}, "updated": "2020-02-08 06:41:39.000000000", "message": "you should rebase this patch on https://review.opendev.org/#/c/703049/1", "commit_id": "ab329d89c3f8a42ad06904ea71b49b4b4bd91474"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "af4aa84454c068c4b4831b5a659beff1307a86ad", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_ec3c71eb", "line": 215, "range": {"start_line": 214, "start_character": 0, "end_line": 215, "end_character": 24}, "in_reply_to": "3fa7e38b_ef7f8a13", "updated": "2020-02-10 02:31:29.000000000", "message": "Done", "commit_id": "ab329d89c3f8a42ad06904ea71b49b4b4bd91474"}], "cyborg/tests/unit/db/test_db_attach_handle.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fd37a8fd8d8a84620e5c3a677b0478aa15566c3a", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_da094edc", "line": 70, "range": {"start_line": 70, "start_character": 40, "end_line": 70, "end_character": 66}, "updated": "2020-01-19 01:42:05.000000000", "message": "nit: Here, the readability of the program is too poor, only one object is returned, and we can directly take the value. We can reduce the use of for loops if we can.\n\nI think we can use res[0]['uuid'] instead of the for iterator.", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "fa051fdf84127096b4676b7a877365fe848f19b5", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1a9cc66e", "line": 70, "range": {"start_line": 70, "start_character": 40, "end_line": 70, "end_character": 66}, "in_reply_to": "3fa7e38b_da094edc", "updated": "2020-01-19 01:56:00.000000000", "message": "Good idea. Thanks. Will update.", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, "change_message_id": "4e886699200c3fed8a7a45b2897424811ea8b1ed", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_17325fc1", "line": 72, "updated": "2020-01-18 17:35:32.000000000", "message": "Can we add a test case that, if filters is not provided or is None, then the entire list is returned? That would need https://review.opendev.org/703049 .", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "d39d4b7668746fcbebc8eb7a60f988798037db7e", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1ace068f", "line": 72, "in_reply_to": "3fa7e38b_17325fc1", "updated": "2020-01-19 01:54:03.000000000", "message": "Hi Sundar. I know brin's patch. We discuss by the irc about the filter = None will raise error. His patch depends on this. I can't add None, but I can add filters = {}. If we need to consider None, we should add to his patch.", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "7d54bbda6f1f05dd8ae36ea076129fd8efb76033", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9acbd649", "line": 72, "in_reply_to": "3fa7e38b_1ace068f", "updated": "2020-01-19 02:07:21.000000000", "message": "Emmm. I will add filter = None testcase. Sorry for didn't see that patch is only for device profile instead of attach handle.", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "fd37a8fd8d8a84620e5c3a677b0478aa15566c3a", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9a1c3615", "line": 85, "range": {"start_line": 85, "start_character": 40, "end_line": 85, "end_character": 66}, "updated": "2020-01-19 01:42:05.000000000", "message": "ditto", "commit_id": "b33711d40194901e4c556598491402a88ecaef12"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "434444164d50364be52a4a3a38c6b6ec92b77b55", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_8f78562c", "line": 124, "range": {"start_line": 112, "start_character": 0, "end_line": 124, "end_character": 53}, "updated": "2020-02-08 06:41:39.000000000", "message": "ditto.", "commit_id": "ab329d89c3f8a42ad06904ea71b49b4b4bd91474"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "af4aa84454c068c4b4831b5a659beff1307a86ad", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_6c7721d4", "line": 124, "range": {"start_line": 112, "start_character": 0, "end_line": 124, "end_character": 53}, "in_reply_to": "3fa7e38b_8f78562c", "updated": "2020-02-10 02:31:29.000000000", "message": "Done", "commit_id": "ab329d89c3f8a42ad06904ea71b49b4b4bd91474"}]}}, "openstack%2Fironic~master~I30ae85430b5b056abe870985d20915cf84393c17": {"owner_id": 11076, "owner_name": "Shivanand Tendulker", "owner_email": "stendulker@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-05 07:46:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 11076, "name": "Shivanand Tendulker", "email": "stendulker@gmail.com", "username": "stendulker"}, {"value": 0, "_account_id": 14629, "name": "HPE Proliant", "email": "proliantutils@gmail.com", "username": "proliantci"}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-04 23:28:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-heat-templates~stable%2Frocky~I5ed014fb1061379d7a7a8686d289c1303941dce9": {"owner_id": 9816, "owner_name": "Takashi Kajinami", "owner_email": "tkajinam@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9816, "name": "Takashi Kajinami", "email": "tkajinam@redhat.com", "username": "kajinamit"}, {"value": 2, "date": "2020-01-23 16:21:54.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}], "comments": {}}, "openstack%2Fcyborg~master~I740eb28184b434583b58f10d2bf3e5e4621c43d4": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 12:15:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 2, "date": "2020-02-12 09:38:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-02-12 09:38:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 1, "date": "2020-02-12 09:38:43.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {}}, "openstack%2Fcharm-guide~master~I0f5a41b837718039cd2fb0ccae3090f7fdea591b": {"owner_id": 30561, "owner_name": "Peter Matulis", "owner_email": "peter.matulis@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:07:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 20870, "name": "Alex Kavanagh", "email": "alex.kavanagh@canonical.com", "username": "ajkavanagh"}], "comments": {"/COMMIT_MSG": [{"author": {"_account_id": 2424, "name": "Felipe Reyes", "email": "felipe.reyes@canonical.com", "username": "freyes"}, "change_message_id": "059f800b33ad04ec805692f3323e99df5dd38c99", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_10c76c99", "line": 10, "updated": "2020-02-12 12:59:07.000000000", "message": "lxd is still in the list, and the commit message has no relation with the changes in this patch.", "commit_id": "0503848884b3211d57c0719b31af068399c58d66"}]}}, "openstack%2Fcyborg~master~I8f0d15d8c34f1eb77366d6021e465fcebd1be406": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 12:11:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 2, "date": "2020-02-12 09:38:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 2, "date": "2020-02-12 11:04:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/tests/unit/db/test_db_extarq.py": [{"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8f3b76c7", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 32}, "updated": "2020-02-08 04:39:15.000000000", "message": "nit: Can we change this import to \"from oslo_utils.fixture import uuidsentinel as uuids\", when we want to get a uuid that  we can use \"uuid=uuids.fake (fake is any what would you want, eg. arq_uuid=uuids.arq_uuid)\".\n\nOf course, it's random.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "be35896688042e13b325524b3bf34ff0b30968df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0c9b0d16", "line": 18, "range": {"start_line": 18, "start_character": 0, "end_line": 18, "end_character": 32}, "in_reply_to": "3fa7e38b_8f3b76c7", "updated": "2020-02-10 02:25:30.000000000", "message": "Thanks Brin. That's a nice usage for uuid generator.  At the same time, I saw in Nova that some places use it, but there are still some codes that continue to use this method. So, I don't think it is necessary, but a good way, thank you for letting me know. I think I will use it at the right time.\nHere, generating a random uuid is obvious from the method name, and it is self-explanatory, which is why I decided to keep using it.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_efa0eaf4", "line": 25, "updated": "2020-02-08 04:39:15.000000000", "message": "I saw in every patch of you tests contais \"created_extarq = utils.create_test_extarq(self.context)\", how about set this in setUP() ? That while we use it by \"self.created_extarq\".\n\nAlso, it needs more than one request parameters in kw.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "05c123c56957d08558e8f097b28d01608e892699", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_8f67f652", "line": 25, "in_reply_to": "3fa7e38b_efa0eaf4", "updated": "2020-02-08 08:53:51.000000000", "message": "Thanks. I thought about putting it in setup, but if we want to increase kw in the future, it is not convenient to put in setup, so we continue to put it in each function, although there are currently a few more codes.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_0f96a6a1", "line": 29, "range": {"start_line": 29, "start_character": 8, "end_line": 29, "end_character": 10}, "updated": "2020-02-08 04:39:15.000000000", "message": "Can you add more than on parameter to the kw (eg. type, vendor)? I think that can be check your function in https://review.opendev.org/#/c/702807/9/cyborg/tests/unit/db/utils.py@45.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_2f7602a5", "line": 29, "range": {"start_line": 28, "start_character": 8, "end_line": 29, "end_character": 34}, "updated": "2020-02-08 04:39:15.000000000", "message": "From above that this can be done as \"kw = {'uuid': uuids.uuid}\".", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "05c123c56957d08558e8f097b28d01608e892699", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_efad4a83", "line": 29, "range": {"start_line": 29, "start_character": 8, "end_line": 29, "end_character": 10}, "in_reply_to": "3fa7e38b_0f96a6a1", "updated": "2020-02-08 08:53:51.000000000", "message": "I think the unique uuid is enough. The assertEqual can prove the create extarq is ok.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "05c123c56957d08558e8f097b28d01608e892699", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_af64324e", "line": 29, "range": {"start_line": 28, "start_character": 8, "end_line": 29, "end_character": 34}, "in_reply_to": "3fa7e38b_2f7602a5", "updated": "2020-02-08 08:53:51.000000000", "message": "Thanks. Good advice.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cf664ef1", "line": 65, "range": {"start_line": 65, "start_character": 8, "end_line": 65, "end_character": 47}, "updated": "2020-02-08 04:39:15.000000000", "message": "ditto.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "be35896688042e13b325524b3bf34ff0b30968df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ac83d9a9", "line": 65, "range": {"start_line": 65, "start_character": 8, "end_line": 65, "end_character": 47}, "in_reply_to": "3fa7e38b_cf664ef1", "updated": "2020-02-10 02:25:30.000000000", "message": "Pls see the above reply.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, "change_message_id": "ed80c442467991ce1f5608683e6292932df6f1ac", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_ef6b0ab5", "line": 71, "range": {"start_line": 71, "start_character": 8, "end_line": 71, "end_character": 47}, "updated": "2020-02-08 04:39:15.000000000", "message": "ditto.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}, {"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "be35896688042e13b325524b3bf34ff0b30968df", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_cc80959f", "line": 71, "range": {"start_line": 71, "start_character": 8, "end_line": 71, "end_character": 47}, "in_reply_to": "3fa7e38b_ef6b0ab5", "updated": "2020-02-10 02:25:30.000000000", "message": "Pls see the above reply.", "commit_id": "e3012c1d1dba6591e0c01773857da58b7ffed53f"}]}}, "openstack%2Fironic~master~I020f11844260e8c9b86c93122d229c2edb8ec19e": {"owner_id": 11292, "owner_name": "Arne Wiebalck", "owner_email": "Arne.Wiebalck@cern.ch", "labels": [{"value": 0, "_account_id": 11292, "name": "Arne Wiebalck", "email": "Arne.Wiebalck@cern.ch", "username": "wiebalck"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 17:24:16.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-07 13:53:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}], "comments": {}}, "openstack%2Fmonasca-persister~master~I6d6f5dbf6533f820c954bc910a1de64803c11a2f": {"owner_id": 30221, "owner_name": "Arseni Lipinski", "owner_email": "arseni.lipinski@ts.fujitsu.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 30221, "name": "Arseni Lipinski", "email": "arseni.lipinski@ts.fujitsu.com", "username": "arseni.lipinski"}, {"value": 2, "date": "2020-02-12 11:21:01.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 26141, "name": "Adrian Czarnecki", "email": "adrian.czarnecki@ts.fujitsu.com", "username": "czarneckia"}], "comments": {}}, "x%2Ftobiko~master~I551969bdea7cdebbc1914c5f1753c4fd9ae1dfad": {"owner_id": 27329, "owner_name": "Federico Ressi", "owner_email": "fressi@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19118, "name": "Eran Kuris", "email": "ekuris@redhat.com", "username": "ekuris"}, {"value": 0, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-02-12 08:50:03.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, {"value": 0, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}], "comments": {"playbooks/tripleo/run.yaml": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "d3f943fda943af87f9e2f8f79a3bae0ab6879362", "unresolved": false, "patch_set": 105, "id": "3fa7e38b_209f9ef6", "line": 1, "range": {"start_line": 1, "start_character": 12, "end_line": 1, "end_character": 16}, "updated": "2020-01-28 11:16:41.000000000", "message": "nit: it's a bit outdated now :)", "commit_id": "044162f82660fa81ec37160fb69229e482a00ec1"}], "zuul.d/tobiko-tripleo.yaml": [{"author": {"_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, "change_message_id": "810dbe5eef3499008ea436e6c9812d35cc783746", "unresolved": false, "patch_set": 112, "id": "3fa7e38b_02bbed73", "line": 28, "range": {"start_line": 28, "start_character": 8, "end_line": 28, "end_character": 29}, "updated": "2020-02-07 07:54:23.000000000", "message": "do you really need to override it since you set build_test_packages to false", "commit_id": "c005523bec269a695e1ad58a2a150a49a6e9af32"}, {"author": {"_account_id": 27329, "name": "Federico Ressi", "email": "fressi@redhat.com", "username": "fressi_redhat"}, "change_message_id": "554e5bd034f4993bf28b9d5df949296b6e8961f0", "unresolved": false, "patch_set": 112, "id": "3fa7e38b_5d0c6639", "line": 28, "range": {"start_line": 28, "start_character": 8, "end_line": 28, "end_character": 29}, "in_reply_to": "3fa7e38b_02bbed73", "updated": "2020-02-07 08:11:21.000000000", "message": "I removed dependency from other changes to see if the workaround proposed by Sagi Shnaidman [1] works.\n\nIt looks like it did worked but how the porblem is they dropped Python2.7 support in oslo.db library!\n\n2020-02-06 17:15:21.032480 | primary | ERROR: Could not find a version that satisfies the requirement oslo.db===7.0.0 (from -c https://releases.openstack.org/constraints/upper/master (line 621)) (from versions: 0.1.0, 0.2.0, 0.3.0, 0.4.0, 0.5.0, 1.0.0, 1.0.1, 1.0.2, 1.0.3, 1.1.0, 1.2.0, 1.3.0, 1.4.0, 1.4.1, 1.5.0, 1.6.0, 1.7.0, 1.7.1, 1.7.2, 1.7.3, 1.7.4, 1.7.5, 1.8.0, 1.9.0, 1.10.0, 1.11.0, 1.12.0, 2.0.0, 2.1.0, 2.2.0, 2.3.0, 2.4.0, 2.4.1, 2.5.0, 2.6.0, 3.0.0, 3.1.0, 3.2.0, 4.0.0, 4.1.0, 4.2.0, 4.3.0, 4.3.1, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.7.1, 4.8.0, 4.9.0, 4.10.0, 4.11.0, 4.12.0, 4.13.0, 4.13.1, 4.13.2, 4.13.3, 4.13.4, 4.13.5, 4.13.6, 4.14.0, 4.15.0, 4.16.0, 4.17.0, 4.17.1, 4.18.0, 4.19.0, 4.20.0, 4.21.0, 4.21.1, 4.22.0, 4.23.0, 4.24.0, 4.24.1, 4.25.0, 4.25.1, 4.25.2, 4.26.0, 4.27.0, 4.28.0, 4.29.0, 4.30.0, 4.31.0, 4.32.0, 4.33.0, 4.33.1, 4.33.2, 4.33.3, 4.33.4, 4.34.0, 4.35.0, 4.36.0, 4.37.0, 4.38.0, 4.39.0, 4.40.0, 4.40.1, 4.40.2, 4.41.0, 4.41.1, 4.42.0, 4.43.0, 4.44.0, 4.45.0, 4.46.0, 5.0.0, 5.0.1, 5.0.2, 5.1.0, 5.1.1, 6.0.0)\n2020-02-06 17:15:21.032726 | primary | ERROR: No matching distribution found for oslo.db===7.0.0 (from -c https://releases.openstack.org/constraints/upper/master (line 621))\n\n[1] https://review.opendev.org/#/c/704979/3/playbooks/multinode-standalone.yml@24\n\nI am going to merge this anyway. Thanks Marios", "commit_id": "c005523bec269a695e1ad58a2a150a49a6e9af32"}]}}, "openstack%2Fneutron-tempest-plugin~master~Ic04c9d1d2562398bd3640bfd064971bc82235502": {"owner_id": 8556, "owner_name": "Ghanshyam", "owner_email": "gmann@ghanshyammann.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-10 19:07:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-10 09:39:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 2, "date": "2020-02-12 09:38:34.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "e8c00414f420afa4101673be3ac4f06cee2990ca", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_37251bae", "line": 593, "updated": "2020-02-06 09:12:09.000000000", "message": "should we run it on bionic nodes as oslo now supports only python 3.6 and newer and on xenial there is only python 3.5 ?", "commit_id": "22ecedce47ef074499231e618296bc3ed5a2c34d"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "1fb382345c56172f0f69020084119f5a72778b5a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a6ab1b1d", "line": 593, "in_reply_to": "3fa7e38b_37251bae", "updated": "2020-02-06 14:54:55.000000000", "message": "it should be xenail as stable/rocky is supposed to work on xenail as official tested distro. \n\nThings will be fixed once we merge the u-c fixes\n- https://review.opendev.org/#/q/topic:fix-stable-gate+(status:open+OR+status:merged)", "commit_id": "22ecedce47ef074499231e618296bc3ed5a2c34d"}, {"author": {"_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, "change_message_id": "7781f946646f3eac389587dce2a790d2a3228576", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f82440b3", "line": 593, "in_reply_to": "3fa7e38b_a6ab1b1d", "updated": "2020-02-07 09:43:07.000000000", "message": "Ok, I already sent patch https://review.opendev.org/706451 which brings back rocky jobs to be run in the gate and which depends on all those needed fixes.", "commit_id": "22ecedce47ef074499231e618296bc3ed5a2c34d"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "5f284b77f4b6e160dcb73c819a0e10c2d93060ad", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_b86c88cf", "line": 327, "range": {"start_line": 327, "start_character": 36, "end_line": 327, "end_character": 42}, "updated": "2020-02-07 09:48:02.000000000", "message": "Is the name correct?", "commit_id": "d44ac533581eb6e9aecfc8110fdfa5d383201ba7"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "076326815365ef6bdba2d98f1f2961daa5eaa084", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_7fd9d37e", "line": 327, "range": {"start_line": 327, "start_character": 36, "end_line": 327, "end_character": 42}, "in_reply_to": "3fa7e38b_343e60b6", "updated": "2020-02-12 09:38:34.000000000", "message": "Ok, now I get it: the (same) job will have different execution variables depending on \"branches\" var.\n\nI need to refresh my (little) zuul knowledge.", "commit_id": "d44ac533581eb6e9aecfc8110fdfa5d383201ba7"}, {"author": {"_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, "change_message_id": "2ef19bf2e5eda1ccda8009391a0b02c11eb7d58e", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_343e60b6", "line": 327, "range": {"start_line": 327, "start_character": 36, "end_line": 327, "end_character": 42}, "in_reply_to": "3fa7e38b_b86c88cf", "updated": "2020-02-07 13:37:32.000000000", "message": "yeah, we need to keep the job name same so that zuul can do the brnach matcher based on where it run\n\n- https://review.opendev.org/#/c/704257/1/.zuul.yaml@337", "commit_id": "d44ac533581eb6e9aecfc8110fdfa5d383201ba7"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "5f284b77f4b6e160dcb73c819a0e10c2d93060ad", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_98698cc1", "line": 591, "range": {"start_line": 591, "start_character": 53, "end_line": 591, "end_character": 59}, "updated": "2020-02-07 09:48:02.000000000", "message": "Is the name correct?", "commit_id": "d44ac533581eb6e9aecfc8110fdfa5d383201ba7"}]}}, "openstack%2Fneutron-tempest-plugin~master~I4cbeb5b0dff226ccb6c7d7893b4fa5a0b49a8f64": {"owner_id": 16688, "owner_name": "Rodolfo Alonso", "owner_email": "ralonsoh@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 2, "date": "2020-02-11 09:29:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 9531, "name": "liuyulong", "display_name": "LIU Yulong", "email": "i@liuyulong.me", "username": "LIU-Yulong"}, {"value": 2, "date": "2020-02-11 09:29:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}], "comments": {"neutron_tempest_plugin/api/test_qos.py": [{"author": {"_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, "change_message_id": "90907eea5346f2e41723d5d5717cc38693faa3eb", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_43cc0732", "line": 790, "updated": "2020-01-29 20:29:07.000000000", "message": "This change seems unrelated with the rest of it.  Also, I think the previous form is more accurate.", "commit_id": "4c5ea354aa0cb93c720ce93c222b8d482a8387cd"}, {"author": {"_account_id": 16688, "name": "Rodolfo Alonso", "email": "ralonsoh@redhat.com", "username": "rodolfo-alonso-hernandez"}, "change_message_id": "13ef2455dc72a1c0faa436143382b680a4772081", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_5e2935a0", "line": 790, "in_reply_to": "3fa7e38b_43cc0732", "updated": "2020-01-30 11:14:13.000000000", "message": "Yes, that was a rebasing problem. That method name was introduced in a parent patch, but a previous version. A clean rebase will fix that. Thanks!", "commit_id": "4c5ea354aa0cb93c720ce93c222b8d482a8387cd"}]}}, "openstack%2Fcyborg~master~Id66ba6f1442f87a0f8fb9644e45e147cc77a4f5e": {"owner_id": 28748, "owner_name": "chenker", "owner_email": "chen.ke14@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 2, "date": "2020-02-12 12:08:39.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 1, "date": "2020-02-12 09:37:53.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 2, "date": "2020-02-12 09:37:53.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 25738, "name": "Xinran WANG", "email": "xin-ran.wang@intel.com", "username": "Xinran"}, {"value": 0, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}, {"value": 0, "_account_id": 30759, "name": "Shogo Saito", "email": "shogo.saito.ac@hco.ntt.co.jp", "username": "s.shogo"}, {"value": 0, "_account_id": 27458, "name": "Li Liu", "email": "liliueecg@gmail.com", "username": "liliu"}, {"value": 2, "date": "2020-02-12 11:01:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {"cyborg/tests/unit/db/test_db_device.py": [{"author": {"_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, "change_message_id": "dfac85850305881a8f8690fc4756cf8f743500fa", "unresolved": false, "patch_set": 7, "id": "3fa7e38b_65d2a400", "line": 47, "range": {"start_line": 47, "start_character": 8, "end_line": 47, "end_character": 26}, "updated": "2020-02-12 12:08:39.000000000", "message": "This should be updated after disable/enable API is implemented. looks good for now.", "commit_id": "078014c0532947ca98babe09a0723adf5cd28e8d"}]}}, "openstack%2Fdesignate~stable%2Frocky~Ib1a2be90c0b3dbacc6daf52f0fc6f326ab47fc98": {"owner_id": 13252, "owner_name": "Dr. Jens Harbott", "owner_email": "frickler@offenerstapel.de", "labels": [{"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 07:56:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22623, "name": "Erik Olof Gunnar Andersson", "email": "eandersson@blizzard.com", "username": "eoandersson"}, {"value": 2, "date": "2020-02-10 08:14:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~I0903e057c3515fe20cae526f1e498e59367b9edd": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:41:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-12 01:28:12.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-operator-ansible~master~I5a115c355b5933714c30ce11c8e7b76da755c817": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:46:54.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}, {"value": 2, "date": "2020-02-12 01:28:08.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fcyborg~master~I877794c738f3c6ec09e9f83476b1f91096447afa": {"owner_id": 14131, "owner_name": "shaohef", "owner_email": "shaohe.feng@intel.com", "labels": [{"value": 2, "date": "2020-02-12 09:37:14.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:37:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24872, "name": "YumengBao", "email": "yumeng_bao@yahoo.com", "username": "Yumeng_Bao"}, {"value": 0, "_account_id": 21672, "name": "Sundar Nadathur", "email": "sundar.nadathur@intel.com", "username": "nsundar"}, {"value": 0, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "_account_id": 14131, "name": "shaohef", "email": "shaohe.feng@intel.com", "username": "shaohefeng"}], "comments": {}}, "openstack%2Frpm-packaging~master~I651fa958f134fc4208b08dca23f37b36cd129261": {"owner_id": 26571, "owner_name": "Chang Liu", "owner_email": "liuchang77@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:38:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 11:37:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I91c27631c47770e21c7c7344b2e2d967ca412a9f": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fopenstack-ansible~master~I76a6f93e6dca4f743f6f6b8a15f26a62bbda7dec": {"owner_id": 28619, "owner_name": "Dmitriy Rabotyagov", "owner_email": "noonedeadpunk@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fironic~stable%2Ftrain~Ia658ddc966e13a7ce973eccd9c42e40a3da406f4": {"owner_id": 24828, "owner_name": "Kaifeng Wang", "owner_email": "kaifeng.w@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-12 08:34:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "openstack%2Fironic-tempest-plugin~master~Id730b2d6bdd58da1fbe4c5fa24442281d5a69e5b": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 21:48:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-02-12 07:11:37.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 15519, "name": "Iury Gregory Melo Ferreira", "display_name": "Iury Gregory", "email": "iurygregory@gmail.com", "username": "iurygregory"}, {"value": 0, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 2, "date": "2020-02-12 08:45:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-11 22:27:45.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fironic-inspector~master~I0f473a0d59de50261880c4e1331c1861e8c745df": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 08:28:23.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-11 22:39:38.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Ftripleo-ci~master~Icaef686267ac058b992cb493c9f9590e2f654eee": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10969, "name": "Shnaidman Sagi (Sergey)", "display_name": "Shnaidman Sagi", "email": "sshnaidm@redhat.com", "username": "sergsh"}], "comments": {}}, "openstack%2Ftripleo-ci~master~I6f4abd1b4a84721c2586d90483419c92d4dc82a5": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ci~master~I0bac5b888621c16db70dbbc7197dadd5dfe8e8ce": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-quickstart~master~I4466dde1ba7ffda6266c427972b553b592401ac8": {"owner_id": 10969, "owner_name": "Shnaidman Sagi (Sergey)", "owner_email": "sshnaidm@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsandbox~master~I3fab970e6e801e8f4d10ec48153ce6d22651949d": {"owner_id": 30920, "owner_name": "Noy fridman", "owner_email": "nfridman@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fec2api-tempest-plugin~master~I24d1a0016f76f6813a9f62294e7eeb9785fa711b": {"owner_id": 31572, "owner_name": "Dmitry_Eremeev", "owner_email": "deremeev@progmaticlab.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 10:39:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}, {"value": 0, "_account_id": 18810, "name": "alexey-mr", "email": "alexey.morlang@gmail.com", "username": "alexey-mr"}], "comments": {"ec2api_tempest_plugin/api/test_security_groups.py": [{"author": {"_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}, "change_message_id": "633660317c79fa4a2b6fd1b0d890abb1b464c3a1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_9a3c1deb", "line": 1, "updated": "2020-02-07 15:41:20.000000000", "message": "please remove this empty line", "commit_id": "6d3f69288bf124391c0559401cf638832963bb59"}, {"author": {"_account_id": 10234, "name": "Andrey Pavlov", "email": "andrey.mp@gmail.com", "username": "andrey-mp"}, "change_message_id": "633660317c79fa4a2b6fd1b0d890abb1b464c3a1", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_3a4de992", "line": 84, "updated": "2020-02-07 15:41:20.000000000", "message": "i suppose that -1 should be changed here...", "commit_id": "6d3f69288bf124391c0559401cf638832963bb59"}]}}, "openstack%2Frequirements~master~I4d2ff19d0d381410e91a4c45e5a2aca8845011f7": {"owner_id": 9592, "owner_name": "wes hayutin", "owner_email": "whayutin@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 1, "date": "2020-02-12 07:29:50.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 12393, "name": "chandan kumar", "display_name": "Chandan Kumar", "email": "chkumar@redhat.com", "username": "chkumar246"}, {"value": 0, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 1, "date": "2020-02-12 08:49:53.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-12 08:57:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 2, "date": "2020-02-12 05:01:26.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, {"value": 1, "date": "2020-02-12 06:52:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8449, "name": "Marios Andreou", "email": "marios@redhat.com", "username": "marios"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"global-requirements.txt": [{"author": {"_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, "change_message_id": "ea9be906009bf7b9eb6e7df44965897907ff3e91", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_99e2b9d2", "line": 290, "range": {"start_line": 290, "start_character": 92, "end_line": 290, "end_character": 93}, "updated": "2020-02-11 17:08:50.000000000", "message": "nit: whitespace.", "commit_id": "a98ed5935a2f1d7a7458a0325f909dc8e8cc1d20"}, {"author": {"_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}, "change_message_id": "f43018e3f89219aa4ad8ad399b99ba3ad2ba791d", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_1bc6b64b", "line": 290, "updated": "2020-02-12 04:58:14.000000000", "message": "still specifying a minimum (>=2.3.1) for python2.7 here, that should be removed\n\nother than that looks good", "commit_id": "fcd76b4b13cf70b46cd5fe359b98740b7f8b4c52"}, {"author": {"_account_id": 9592, "name": "wes hayutin", "email": "whayutin@redhat.com", "username": "weshayutin"}, "change_message_id": "ebb1e10143867398414268d050c209cfa270b8ef", "unresolved": false, "patch_set": 6, "id": "3fa7e38b_5bdd0e10", "line": 290, "in_reply_to": "3fa7e38b_1bc6b64b", "updated": "2020-02-12 05:00:55.000000000", "message": "thank you", "commit_id": "fcd76b4b13cf70b46cd5fe359b98740b7f8b4c52"}]}}, "openstack%2Fgovernance~master~Id49c8e2db4d79d3f3bebd6dbc14fff0950d3200b": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-05 15:04:26.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11628, "name": "Michael Johnson", "email": "johnsomor@gmail.com", "username": "johnsom"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 1, "date": "2020-02-05 15:28:52.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 308, "name": "Thierry Carrez", "email": "thierry@openstack.org", "username": "ttx"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 0, "_account_id": 6469, "name": "Carlos Gon\u00e7alves", "display_name": "Carlos Goncalves", "email": "cgoncalves@redhat.com", "username": "cgoncalves"}, {"value": 1, "date": "2020-02-05 13:34:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 10273, "name": "Adam Harwell", "email": "flux.adam@gmail.com", "username": "rm_you"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {}}, "openstack%2Fgovernance~master~I44e85a39696cf7ef0f0198ff8bf246d47149cef3": {"owner_id": 308, "owner_name": "Thierry Carrez", "owner_email": "thierry@openstack.org", "labels": [{"value": 0, "_account_id": 1004, "name": "Mohammed Naser", "email": "mnaser@vexxhost.com", "username": "mnaser"}, {"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-05 12:05:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8655, "name": "Jakub Libosvar", "email": "libosvar@redhat.com", "username": "jlibosva"}, {"value": 0, "_account_id": 13995, "name": "Nate Johnston", "email": "nate.johnston@redhat.com", "username": "natejohnston"}, {"value": 0, "_account_id": 16708, "name": "Kendall Nelson", "display_name": "Kendall (diablo_rojo)", "email": "kennelson11@gmail.com", "username": "kjnelson"}, {"value": 1, "date": "2020-02-05 12:00:34.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 1, "date": "2020-02-05 10:19:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 11975, "name": "Slawek Kaplonski", "email": "skaplons@redhat.com", "username": "slaweq"}, {"value": 0, "_account_id": 4257, "name": "Zane Bitter", "email": "zbitter@redhat.com", "username": "zaneb"}], "comments": {}}, "openstack%2Fcharm-percona-cluster~trusty-eol~I9d02180fcb0fec6bd017c6150bfca5963896fd2f": {"owner_id": 12549, "owner_name": "gnuoy", "owner_email": "liam.young@canonical.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 20648, "name": "Canonical CI", "email": "uosci-testing-bot@ubuntu.com", "username": "uosci-testing-bot", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 12549, "name": "gnuoy", "email": "liam.young@canonical.com", "username": "gnuoy"}, {"value": 2, "date": "2020-02-12 10:20:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 935, "name": "James Page", "email": "james.page@canonical.com", "username": "james-page"}], "comments": {}}, "openstack%2Fgovernance~master~Id2477e20bd5f4d33b3d57df48abbc0ca9d265aab": {"owner_id": 20190, "owner_name": "zhufl", "owner_email": "zhu.fanglei@zte.com.cn", "labels": [{"value": 0, "_account_id": 17068, "name": "Jean-Philippe Evrard", "email": "openstack@a.spamming.party", "username": "evrardjp"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Fpython-tripleoclient~master~Id349dbc8a554c2fa542b986062e708bbc14da714": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-06 07:15:56.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 18575, "name": "Saravanan KR", "email": "krsacme@gmail.com", "username": "saravanankr"}, {"value": 0, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 1, "date": "2020-02-06 05:11:34.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 8833, "name": "Rabi Mishra", "email": "ramishra@redhat.com", "username": "rabi"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Ffenix~master~I7a6fc62e8f2c0c3cc21560f9f889d0fe136ca33e": {"owner_id": 15834, "owner_name": "Tomi Juvonen", "owner_email": "tomi.juvonen@nokia.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:52:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 15834, "name": "Tomi Juvonen", "email": "tomi.juvonen@nokia.com", "username": "tojuvone"}, {"value": 0, "_account_id": 21723, "name": "Gergely Csatari", "email": "gergely.csatari@nokia.com", "username": "csatari"}], "comments": {}}, "openstack%2Frpm-packaging~master~I8e43ab2038b761dd8ab0137f6adae29975bae568": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:22:09.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Frpm-packaging~master~Idbdb7398eac44f672027c6f425b8029cc96e8011": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:22:25.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fkuryr-kubernetes~master~I9ba464c9c485e4f186dd02763a6ef4c270df9e77": {"owner_id": 11600, "owner_name": "Micha\u0142 Dulko", "owner_email": "mdulko@redhat.com", "labels": [{"value": 1, "date": "2020-02-11 11:27:37.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 13692, "name": "Roman Dobosz", "email": "gryf73@gmail.com", "username": "gryf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 07:58:43.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23567, "name": "Luis Tomas Bolivar", "email": "ltomasbo@redhat.com", "username": "ltomasbo"}, {"value": 2, "date": "2020-02-11 11:25:02.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 27032, "name": "Maysa de Macedo Souza", "email": "maysa.macedo95@gmail.com", "username": "maysa"}], "comments": {}}, "opendev%2Fsystem-config~master~If18ce8c7afb6899f2b6628852e716e63808fc403": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:15:07.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}, "openstack%2Fproject-config~master~I4922ea50e31dceda96f545a0d409c0d7dc022e19": {"owner_id": 4146, "owner_name": "Clark Boylan", "owner_email": "cboylan@sapwetik.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 16:47:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 2, "date": "2020-02-11 16:47:15.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 13252, "name": "Dr. Jens Harbott", "display_name": "Dr. Jens Harbott (frickler)", "email": "frickler@offenerstapel.de", "username": "jrosenboom"}, {"value": 1, "date": "2020-02-11 16:45:33.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 22629, "name": "Michal Nasiadka", "email": "mnasiadka@gmail.com", "username": "mnasiadka"}, {"value": 2, "date": "2020-02-11 16:43:27.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {}}, "openstack%2Frpm-packaging~master~I1bdbb4626a4b7c38f3f7ba2a21802619120b26ca": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:37:22.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 2, "date": "2020-02-12 09:22:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Frequirements~master~I72323eff21746f6990307aa035180649df128e3d": {"owner_id": 14288, "owner_name": "Matthew Thode", "owner_email": "mthode@mthode.org", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 22:10:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 14288, "name": "Matthew Thode", "display_name": "prometheanfire", "email": "mthode@mthode.org", "username": "prometheanfire"}], "comments": {}}, "openstack%2Fcompute-hyperv~master~I19eae24317c0ccaa470d3711e943c612b36b1740": {"owner_id": 8543, "owner_name": "Lucian Petrut", "owner_email": "lpetrut@cloudbasesolutions.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:24:05.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8543, "name": "Lucian Petrut", "email": "lpetrut@cloudbasesolutions.com", "username": "plucian"}], "comments": {}}, "openstack%2Frpm-packaging~master~I91b5e5f13c6295a958f91abbd23079bab0801553": {"owner_id": 23851, "owner_name": "Riccardo Pittau", "owner_email": "elfosardo@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, {"value": 0, "_account_id": 2062, "name": "Ralf Haferkamp", "email": "rhafer@suse.com", "username": "rhafer"}, {"value": 2, "date": "2020-02-12 08:16:44.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 09:17:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {"openstack/ironic-inspector/ironic-inspector.spec.j2": [{"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "a7bb38bd549d15dc06fa002833a0250099b5e120", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bbc8f81f", "line": 80, "range": {"start_line": 80, "start_character": 43, "end_line": 80, "end_character": 44}, "updated": "2020-01-21 14:58:45.000000000", "message": "Let's remove this.", "commit_id": "aa09b9d3f94d2dffd4d1d0b42a50424831084e77"}, {"author": {"_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, "change_message_id": "ade8ff754045b5bfbd1b231a8dc898114685c1eb", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_be19c676", "line": 80, "range": {"start_line": 80, "start_character": 43, "end_line": 80, "end_character": 44}, "in_reply_to": "3fa7e38b_bbc8f81f", "updated": "2020-01-21 15:09:41.000000000", "message": "yeah, I think I put the latest-1 version up, since the last description is correct! :D", "commit_id": "aa09b9d3f94d2dffd4d1d0b42a50424831084e77"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "a7bb38bd549d15dc06fa002833a0250099b5e120", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bb53186e", "line": 130, "range": {"start_line": 130, "start_character": 43, "end_line": 130, "end_character": 44}, "updated": "2020-01-21 14:58:45.000000000", "message": "I think renderspec doesn't like this apostrophe (plus, I think it's a typo)", "commit_id": "aa09b9d3f94d2dffd4d1d0b42a50424831084e77"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "a7bb38bd549d15dc06fa002833a0250099b5e120", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_db58548a", "line": 157, "range": {"start_line": 157, "start_character": 43, "end_line": 157, "end_character": 44}, "updated": "2020-01-21 14:58:45.000000000", "message": "Same here", "commit_id": "aa09b9d3f94d2dffd4d1d0b42a50424831084e77"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "a7bb38bd549d15dc06fa002833a0250099b5e120", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9b4e5cc0", "line": 171, "range": {"start_line": 171, "start_character": 41, "end_line": 171, "end_character": 44}, "updated": "2020-01-21 14:58:45.000000000", "message": "And it is correct here :)", "commit_id": "aa09b9d3f94d2dffd4d1d0b42a50424831084e77"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "00ed23bd249b72cba89c5006cf3e452bc1a04b9d", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_aa8d0036", "line": 96, "range": {"start_line": 96, "start_character": 22, "end_line": 96, "end_character": 27}, "updated": "2020-01-21 18:33:57.000000000", "message": "The PyPi name is Flask, let's use that or the SUSE CI will complain.", "commit_id": "3daf06c71eb2ae0203186d43d67a011109c46ad6"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "00ed23bd249b72cba89c5006cf3e452bc1a04b9d", "unresolved": false, "patch_set": 5, "id": "3fa7e38b_6abe28cf", "line": 142, "range": {"start_line": 142, "start_character": 24, "end_line": 142, "end_character": 51}, "updated": "2020-01-21 18:33:57.000000000", "message": "We should use sphinxcontrib-svg2pdfconverter here, instead. That's the pypi name", "commit_id": "3daf06c71eb2ae0203186d43d67a011109c46ad6"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "38d4dba981b5b24fe67ef288243afbf577a788dc", "unresolved": false, "patch_set": 11, "id": "3fa7e38b_a1e51709", "line": 292, "range": {"start_line": 292, "start_character": 0, "end_line": 292, "end_character": 86}, "updated": "2020-01-22 13:32:03.000000000", "message": "This is creating the conflict with line 289. Is it ironic-inspector/ironic-inspector.conf ?", "commit_id": "8b86f5a5ef54d250044f9b436b489d44e5db6dc3"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "de9e4d550895270f077ca9cb320fa0af560b7e37", "unresolved": false, "patch_set": 12, "id": "3fa7e38b_a17517cb", "line": 307, "range": {"start_line": 306, "start_character": 0, "end_line": 307, "end_character": 45}, "updated": "2020-01-22 13:59:04.000000000", "message": "Aaaand this could be the last issue :). The directory name under site-packages is \"ironic_inspector\", it seems.", "commit_id": "d505cb8ce3d1b383dc71ec1624448118153d9e07"}, {"author": {"_account_id": 13294, "name": "Javier Pe\u00f1a", "email": "jpena@redhat.com", "username": "jpena"}, "change_message_id": "9b1a1906878db8a3696f4b4d374da2a308ac809d", "unresolved": false, "patch_set": 15, "id": "3fa7e38b_5824515f", "line": 312, "range": {"start_line": 310, "start_character": 0, "end_line": 312, "end_character": 19}, "updated": "2020-01-22 16:55:19.000000000", "message": "This should be included in an %if 0%{?with_doc} clause, but we can add that as a follow-up patch.", "commit_id": "042ef555f8e648f33e9b46ba673aa5edb1adcea8"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_5bd3ce36", "line": 138, "updated": "2020-02-12 04:51:00.000000000", "message": "can you remove the dot at the end to make rpmlint happy?", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_7bd80a50", "line": 164, "updated": "2020-02-12 04:51:00.000000000", "message": "can you remove the dot at the end to make rpmlint happy?", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1be1d6fd", "line": 178, "updated": "2020-02-12 04:51:00.000000000", "message": "can you remove the dot at the end to make rpmlint happy?", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_3bde123c", "line": 240, "updated": "2020-02-12 04:51:00.000000000", "message": "Can you also add the rclink for dnsmasq service please?", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}], "openstack/ironic-inspector/openstack-ironic-inspector-conductor.service": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_7bb1eaff", "line": 3, "updated": "2020-02-12 04:51:00.000000000", "message": "After=syslog.target network.target\n\nas we do in other service files", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_bb89a225", "line": 6, "updated": "2020-02-12 04:51:00.000000000", "message": "I think the --config-file should be removed. that's automatically used", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}], "openstack/ironic-inspector/openstack-ironic-inspector-dnsmasq.service": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_1b78f629", "line": 3, "updated": "2020-02-12 04:51:00.000000000", "message": "syslog.target missing", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}], "openstack/ironic-inspector/openstack-ironic-inspector.logrotate": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_9b89461f", "line": 7, "updated": "2020-02-12 04:51:00.000000000", "message": "can you add \"su ironic-inspector ironic-inspector\" (see other logrotate files)", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}], "openstack/ironic-inspector/openstack-ironic-inspector.service": [{"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_bb8e8223", "line": 3, "updated": "2020-02-12 04:51:00.000000000", "message": "syslog.target missing", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}, {"author": {"_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, "change_message_id": "097d3fbb8eaa698517b74a387de7e0756c6de787", "unresolved": false, "patch_set": 16, "id": "3fa7e38b_5b8f4e20", "line": 6, "updated": "2020-02-12 04:51:00.000000000", "message": "please drop --config-file", "commit_id": "b563303ff4fa63d97c8af9590d312ff704acb604"}]}}, "openstack%2Fdevstack~stable%2Frocky~I3b447557f013934719aa357efeffb093c7f6bd95": {"owner_id": 13252, "owner_name": "Dr. Jens Harbott", "owner_email": "frickler@offenerstapel.de", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 16:58:00.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 0, "_account_id": 27615, "name": "Rajat Dhasmana", "email": "rajatdhasmana@gmail.com", "username": "whoami-rajat"}, {"value": 2, "date": "2020-02-11 16:27:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {}}, "openstack%2Fironic~master~I15464410c9e74b915a647bffbaac02770d15f6b2": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 10239, "name": "Dmitry Tantsur", "email": "dtantsur@protonmail.com", "username": "dtantsur"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 19339, "name": "Dell EMC Ironic CI", "email": "openstack-ironic-ci@dell.com", "username": "openstack-ironic-ci"}, {"value": 2, "date": "2020-02-11 10:54:06.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-11 14:21:56.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "openstack%2Fwatcher~master~I75c5b2de55df276d414633f16ad9735a9871b59d": {"owner_id": 21692, "owner_name": "licanwei", "owner_email": "li.canwei2@zte.com.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 00:55:35.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, {"value": 0, "_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, {"value": 0, "_account_id": 29911, "name": "Dantali0n", "email": "info@dantalion.nl", "username": "Dantali0n"}], "comments": {"api-ref/source/watcher-api-v1-webhooks.inc": [{"author": {"_account_id": 28748, "name": "chenker", "email": "chen.ke14@zte.com.cn", "username": "chenke"}, "change_message_id": "e412fee096e98c900b778bf9ef18d31878c533d6", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_af6e6b94", "line": 9, "range": {"start_line": 9, "start_character": 24, "end_line": 9, "end_character": 25}, "updated": "2020-02-10 03:32:10.000000000", "message": "a or A?", "commit_id": "c00f8e680ebf88af40e831b6797bf461e15ee570"}, {"author": {"_account_id": 21692, "name": "licanwei", "email": "li.canwei2@zte.com.cn", "username": "licanwei"}, "change_message_id": "849abae0aa3202e2ea238a79a99af4f61cc0f588", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_85a007f4", "line": 9, "range": {"start_line": 9, "start_character": 24, "end_line": 9, "end_character": 25}, "in_reply_to": "3fa7e38b_af6e6b94", "updated": "2020-02-12 00:47:44.000000000", "message": "Done", "commit_id": "c00f8e680ebf88af40e831b6797bf461e15ee570"}]}}, "openstack%2Fironic-tempest-plugin~master~I2f8d4d51f8f3a0b6235b942c516d22146302bf40": {"owner_id": 10239, "owner_name": "Dmitry Tantsur", "owner_email": "dtantsur@protonmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 10:54:11.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}, {"value": 2, "date": "2020-02-11 18:36:28.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11655, "name": "Julia Kreger", "email": "juliaashleykreger@gmail.com", "username": "jkreger", "status": "On the moon! With a jetpack!"}], "comments": {}}, "zuul%2Fzuul~master~Ic4864129cd9064ec0828c1a5626756ae40721e6a": {"owner_id": 16068, "owner_name": "Tobias Henkel", "owner_email": "tobias.henkel@bmw.de", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 16068, "name": "Tobias Henkel", "email": "tobias.henkel@bmw.de", "username": "tobias.henkel"}], "comments": {}}, "airship%2Fairshipctl~master~I111bf45c90405a26d09a5254733a055c78b47407": {"owner_id": 30173, "owner_name": "Ian Pittwood", "owner_email": "pittwoodian@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 8749, "name": "Evgeniy L", "email": "eli@mirantis.com", "username": "evgeniyl"}, {"value": 0, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 26628, "name": "Kaspars Skels", "email": "kaspars.skels@att.com", "username": "kskels"}, {"value": 2, "date": "2020-02-11 17:53:18.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}, {"value": 0, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 26686, "name": "Craig Anderson", "email": "craig.cigar.anderson@gmail.com", "username": "canderson"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-12 07:47:24.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 0, "_account_id": 23186, "name": "Felipe Monteiro", "email": "felipe.carneiro.monteiro@gmail.com", "username": "felipe.monteiro"}], "comments": {"CONTRIBUTING.md": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5d78df2a", "line": 16, "updated": "2020-02-07 16:03:39.000000000", "message": "Wrap line", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ce797781", "line": 16, "in_reply_to": "3fa7e38b_5d78df2a", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9d7ad724", "line": 39, "updated": "2020-02-07 16:03:39.000000000", "message": "Wrap line.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6e92c3a2", "line": 39, "in_reply_to": "3fa7e38b_9d7ad724", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_bd7f9314", "line": 41, "updated": "2020-02-07 16:03:39.000000000", "message": "Wrap line.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_8ebdbf04", "line": 41, "in_reply_to": "3fa7e38b_bd7f9314", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}], "README.md": [{"author": {"_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, "change_message_id": "3fac808118bdcd0bb9048651fd7d6dba76c14021", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5ce8efa5", "side": "PARENT", "line": 61, "range": {"start_line": 61, "start_character": 19, "end_line": 61, "end_character": 29}, "updated": "2020-02-06 21:58:43.000000000", "message": "I'm pretty sure this is correct for now - the name for this command may change, but the goal is to use (or wrap) clusterctl", "commit_id": "cac75584d088014ce8fe32b2ed4d0ea1a92755a9"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "5dee6476c31fc8d6dd576baae8cfc20363ff7e9c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5c446f9f", "side": "PARENT", "line": 61, "range": {"start_line": 61, "start_character": 19, "end_line": 61, "end_character": 29}, "in_reply_to": "3fa7e38b_5ce8efa5", "updated": "2020-02-07 15:29:42.000000000", "message": "Ah, good catch. Fixed", "commit_id": "cac75584d088014ce8fe32b2ed4d0ea1a92755a9"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_1d1267ff", "line": 45, "range": {"start_line": 45, "start_character": 0, "end_line": 45, "end_character": 2}, "updated": "2020-02-07 16:03:39.000000000", "message": "Actually, numbering 1. 1. 1. - is a standard.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0e378fb1", "line": 45, "range": {"start_line": 45, "start_character": 0, "end_line": 45, "end_character": 2}, "in_reply_to": "3fa7e38b_1d1267ff", "updated": "2020-02-07 17:59:25.000000000", "message": "Do you have a source? I find myself often reading MD raw so I think having the actual numbers is much better", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}], "docs/source/plugins.md": [{"author": {"_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, "change_message_id": "66d735f00aa43bf298bba03708b6cf587dc5d387", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_5ca1cf91", "line": 45, "updated": "2020-02-06 21:55:21.000000000", "message": "Maybe in a future change: is it possible to use a literal include to get the golden output for this?", "commit_id": "741470057fdff16f4988e4c839e03393e01976f3"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "4ba78bae3ed1f1e9f9dd2ce97d4ddfa103fa3b7c", "unresolved": false, "patch_set": 2, "id": "3fa7e38b_fcff5b66", "line": 45, "in_reply_to": "3fa7e38b_5ca1cf91", "updated": "2020-02-06 21:57:20.000000000", "message": "Oooooo I like that idea. Let me look into it.", "commit_id": "741470057fdff16f4988e4c839e03393e01976f3"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_9da177aa", "line": 3, "range": {"start_line": 3, "start_character": 0, "end_line": 3, "end_character": 5}, "updated": "2020-02-07 16:03:39.000000000", "message": "##", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_fda0aba6", "line": 3, "range": {"start_line": 3, "start_character": 23, "end_line": 3, "end_character": 23}, "updated": "2020-02-07 16:03:39.000000000", "message": "Missing blank line.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_0e60efa3", "line": 3, "range": {"start_line": 3, "start_character": 0, "end_line": 3, "end_character": 5}, "in_reply_to": "3fa7e38b_9da177aa", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_ee5a33f3", "line": 3, "range": {"start_line": 3, "start_character": 23, "end_line": 3, "end_character": 23}, "in_reply_to": "3fa7e38b_fda0aba6", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_5d8f7f2e", "line": 5, "range": {"start_line": 5, "start_character": 45, "end_line": 5, "end_character": 45}, "updated": "2020-02-07 16:03:39.000000000", "message": "Missing blank line.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_4e48272a", "line": 5, "range": {"start_line": 5, "start_character": 45, "end_line": 5, "end_character": 45}, "in_reply_to": "3fa7e38b_5d8f7f2e", "updated": "2020-02-07 17:59:25.000000000", "message": "why does there need to be a blank line here? it's still part of the TOC", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}], "docs/source/testing-guidelines.md": [{"author": {"_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, "change_message_id": "007d6a65feba5e77c4858e9b746ae975e9586118", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_7d8cbb38", "line": 10, "range": {"start_line": 10, "start_character": 9, "end_line": 10, "end_character": 9}, "updated": "2020-02-07 16:03:39.000000000", "message": "Missing blank line.", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}, {"author": {"_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, "change_message_id": "da25eb839259aa87f682304b7a2615460837d62f", "unresolved": false, "patch_set": 4, "id": "3fa7e38b_6e6e4398", "line": 10, "range": {"start_line": 10, "start_character": 9, "end_line": 10, "end_character": 9}, "in_reply_to": "3fa7e38b_7d8cbb38", "updated": "2020-02-07 17:59:25.000000000", "message": "Done", "commit_id": "a0dfbeeb35f141dfa0ea2ea6690c57f3a911fd4d"}]}}, "openstack%2Fkeystone~stable%2Ftrain~I0f4b9e24d949aa4838ee721a165999b29c684d32": {"owner_id": 29071, "owner_name": "norman shen", "owner_email": "yshxxsjt715@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29071, "name": "norman shen", "email": "yshxxsjt715@gmail.com", "username": "ushen"}, {"value": 2, "date": "2020-02-11 16:32:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-02-06 18:40:39.000000000", "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "airship%2Fairshipctl~master~If0cf043713ef08333f17b010210352205d74c4ee": {"owner_id": 29624, "owner_name": "Alexander Hughes", "owner_email": "Alexander.Hughes@pm.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 21:18:39.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 0, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-11 18:44:05.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 28235, "name": "Aaron Sheffield", "email": "ajs@sheffieldfamily.net", "username": "aaronsheffield"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 2, "date": "2020-02-11 20:44:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 28869, "name": "Ian Howell", "email": "ian.howell0@gmail.com", "username": "ian"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-12 07:36:08.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, {"value": 1, "date": "2020-02-11 21:42:21.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 27715, "name": "Sean Eagan", "email": "seaneagan@microsoft.com", "username": "seaneagan"}], "comments": {}}, "airship%2Fairshipctl~master~Ib2f701d727fdd28794980cf44722d3147d4e6f07": {"owner_id": 28869, "owner_name": "Ian Howell", "owner_email": "ian.howell0@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-11 13:00:06.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 30173, "name": "Ian Pittwood", "email": "pittwoodian@gmail.com", "username": "ianp"}, {"value": 2, "date": "2020-02-11 19:20:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 22477, "name": "Matt McEuen", "email": "matt.mceuen@att.com", "username": "mattmceuen"}, {"value": 0, "_account_id": 29624, "name": "Alexander Hughes", "email": "Alexander.Hughes@pm.me", "username": "alexanderhughes"}, {"value": 0, "_account_id": 23928, "name": "Pete Birley", "email": "petebirley@gmail.com", "username": "portdirect"}, {"value": 0, "_account_id": 7769, "name": "Pentheus", "display_name": "Alan Meadows", "email": "alan.meadows@gmail.com", "username": "alanmeadows"}, {"value": 1, "date": "2020-02-11 15:15:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28618, "name": "Drew Walters", "email": "drewwalters@microsoft.com", "username": "drewwalters96"}, {"value": 0, "_account_id": 28436, "name": "Jerome Brette", "email": "jb447c@att.com", "username": "jbrette"}, {"value": 1, "date": "2020-02-11 19:44:38.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 23781, "name": "Stanislav Egorov", "email": "realsystem@gmail.com", "username": "StasEgorov"}, {"value": 1, "date": "2020-02-10 22:51:06.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 21991, "name": "Kostyantyn Kalynovskyi", "email": "kkalinovskiy@gmail.com", "username": "kkalynovskyi"}, {"value": 0, "_account_id": 28208, "name": "Roman Gorshunov", "email": "roman.gorshunov@att.com", "username": "gorshunovr"}, {"value": 2, "date": "2020-02-12 07:34:50.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}], "comments": {"pkg/environment/settings.go": [{"author": {"_account_id": 7185, "name": "Dmitry Ukov", "email": "dukov@mirantis.com", "username": "dukov"}, "change_message_id": "237a8681dc5fdb3549ec3d8cc5e75cf86be5664f", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_f6e64fdb", "line": 31, "range": {"start_line": 27, "start_character": 0, "end_line": 31, "end_character": 26}, "updated": "2020-02-12 07:32:41.000000000", "message": "what is the point of splitting relatively short line into multiple?", "commit_id": "e42049919e88b61c8d27e87227a2c3596746a1bb"}]}}, "openstack%2Ftripleo-heat-templates~stable%2Ftrain~Ifdddcb13362e26babedd47e674089fb0e2a37994": {"owner_id": 6816, "owner_name": "Jesse Pretorius", "owner_email": "jesse@odyssey4.me", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7144, "name": "James Slagle", "email": "jslagle@redhat.com", "username": "slagle"}, {"value": 2, "date": "2020-02-10 23:40:20.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 25877, "name": "Luke Short", "email": "ekultails@gmail.com", "username": "ekultails"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fopenstack-ansible~master~I48485488394894489cc0e407edac0e7014a56901": {"owner_id": 25591, "owner_name": "Chenjun Shen", "owner_email": "chenjun.shen@gmail.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~Ia68f8852662fb4abbd194954a246afb740bf3f71": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 23:43:45.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "x%2Fvmware-nsx~stable%2Fstein~I6531a4fd2a38013194fd083dca3bfb60505707ab": {"owner_id": 20363, "owner_name": "Adit Sarfaty", "owner_email": "asarfaty@vmware.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 13438, "name": "Kobi Samoray", "email": "ksamoray@vmware.com", "username": "ksamoray"}, {"value": 2, "date": "2020-02-11 17:35:20.000000000", "_account_id": 20363, "name": "Adit Sarfaty", "email": "asarfaty@vmware.com", "username": "asarfaty"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I27171338622beb31d9afc1c25f5907274259d7f8": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 23:44:37.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I68911dcec1d92def25e3b48fb1319564eda292f0": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 23:44:51.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~stable%2Ftrain~I827a546ebf0da17a18cf0603a9cdbef0fb234fe9": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 23:43:59.000000000", "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Fpuppet-tripleo~stable%2Ftrain~I557d8f33c9c699aed14b3b6fc1d1c0407365cd08": {"owner_id": 3153, "owner_name": "Emilien Macchi", "owner_email": "emilien@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 23:41:30.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14985, "name": "Alex Schultz", "email": "aschultz@next-development.com", "username": "mwhahaha"}, {"value": 0, "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Ftripleo-ansible~master~I33530e6e3f7ac156e07545b0455c99bb7d2274ef": {"owner_id": 5046, "owner_name": "Lance Bragstad", "owner_email": "lbragstad@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 00:41:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7353, "name": "Kevin Carter", "email": "kevin@cloudnull.com", "username": "cloudnull"}, {"value": 0, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-02-11 22:55:08.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}, {"value": 0, "_account_id": 9954, "name": "Lance Bragstad", "username": "lbragstad", "inactive": true}], "comments": {}}, "opendev%2Fsystem-config~master~Ieede0addc2e0e4d07d1eff968088654f388bdf26": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 2, "date": "2020-02-11 20:36:37.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}], "comments": {}}, "openstack%2Fglance~master~Icbe52793fd33ba61944ee59bbfa538003ffbfee9": {"owner_id": 9303, "owner_name": "Abhishek Kekane", "owner_email": "akekane@redhat.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 9303, "name": "Abhishek Kekane", "email": "akekane@redhat.com", "username": "abhishekkekane"}], "comments": {".zuul.yaml": [{"author": {"_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, "tag": "autogenerated:zuul:check", "change_message_id": "f308633c5f48b35b4231896c1802898b45e67a2a", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1b36d350", "line": 287, "range": {"start_line": 222, "start_character": 2, "end_line": 287, "end_character": 0}, "updated": "2020-02-10 17:53:24.000000000", "message": "expected str for dictionary value @ data['gate']['jobs'][2]['tempest-integrated-storage']", "commit_id": "74a08bcb57125f284dc06d44c9bd06b08c76e2ff"}]}}, "openstack%2Fkeystone~master~I6b680efb2c87c1d7559ddcc989bbce68456b9a5f": {"owner_id": 8482, "owner_name": "Colleen Murphy", "owner_email": "colleen@gazlene.net", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-02-05 05:45:02.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 27621, "name": "Vishakha Agarwal", "email": "agarwalvishakha18@gmail.com", "username": "Vishakha"}, {"value": 2, "date": "2020-02-11 17:50:19.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 5046, "name": "Lance Bragstad", "email": "lbragstad@redhat.com", "username": "ldbragst"}, {"value": 2, "date": "2020-02-11 18:00:51.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 16465, "name": "Kristi Nikolla", "email": "knikolla@bu.edu", "username": "knikolla"}, {"value": 0, "_account_id": 8482, "name": "Colleen Murphy", "email": "colleen@gazlene.net", "username": "krinkle"}], "comments": {}}, "openstack%2Fzun-tempest-plugin~master~Iceb2ebd82b87e258b760e0eb3977665ef30f5dac": {"owner_id": 11536, "owner_name": "hongbin", "owner_email": "hongbin034@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:44:17.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11536, "name": "hongbin", "email": "hongbin034@gmail.com", "username": "hongbin"}], "comments": {}}, "openstack%2Fpaunch~stable%2Fqueens~Ic2e2c2d50f5883f7db28768ba215e74bcbf9fd8b": {"owner_id": 14985, "owner_name": "Alex Schultz", "owner_email": "aschultz@next-development.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-10 16:00:50.000000000", "_account_id": 3153, "name": "Emilien Macchi", "email": "emilien@redhat.com", "username": "emilienm"}], "comments": {}}, "openstack%2Frpm-packaging~master~I3457c03f6a8b6877d20844aa875f2f86bab42e2d": {"owner_id": 28654, "owner_name": "chenming", "owner_email": "chenm30@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 05:33:10.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 1, "date": "2020-02-12 04:51:39.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {"openstack/openstacksdk/openstacksdk.spec.j2": [{"author": {"_account_id": 28522, "name": "Herv\u00e9 Beraud", "email": "herveberaud.pro@gmail.com", "username": "hberaud"}, "change_message_id": "6e0cba8ad519a523ea243a13be68c489c44c520c", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_1a9b6679", "line": 2, "range": {"start_line": 2, "start_character": 46, "end_line": 2, "end_character": 48}, "updated": "2020-02-06 10:49:43.000000000", "message": "Could be bump to 0.41.0 but LGTM anyway\n\nhttps://github.com/openstack/releases/blob/master/deliverables/ussuri/openstacksdk.yaml#L24", "commit_id": "acf87511f049ab5bcf295d7c8c89faf5e0a39ebc"}]}}, "openstack%2Fneutron~master~Ib4fb9b445ed7fe4bce7bc05ae1b8dca264324718": {"owner_id": 6773, "owner_name": "Lucas Alvares Gomes", "owner_email": "lucasagomes@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 15:15:31.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23804, "name": "Daniel Alvarez", "email": "dalvarez@redhat.com", "username": "dalvarez"}, {"value": 0, "_account_id": 26622, "name": "Cloudbase Neutron Hyper-V CI", "email": "neutron_hyperv_ci@cloudbasesolutions.com", "username": "neutron_hyperv_ci"}, {"value": 2, "date": "2020-02-11 14:32:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 6773, "name": "Lucas Alvares Gomes", "email": "lucasagomes@gmail.com", "username": "lucasagomes"}, {"value": 0, "_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}], "comments": {"neutron/agent/ovn/metadata/server.py": [{"author": {"_account_id": 1131, "name": "Brian Haley", "email": "haleyb.dev@gmail.com", "username": "brian-haley"}, "change_message_id": "22865c148dc9597f6c1e534e86371599699be041", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_4829ff80", "line": 60, "updated": "2020-02-07 16:28:45.000000000", "message": "Too bad there's no unit tests for this :(", "commit_id": "292d871a6f530487145c0fdf240343df86d5a885"}, {"author": {"_account_id": 24791, "name": "Maciej Jozefczyk", "email": "jeicam.pl@gmail.com", "username": "maciej.jozefczyk"}, "change_message_id": "033eda135cdb8e414e55cc9cb26a7ed9447d2f04", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_b73b15c7", "line": 60, "in_reply_to": "3fa7e38b_4829ff80", "updated": "2020-02-10 15:30:35.000000000", "message": "+1", "commit_id": "292d871a6f530487145c0fdf240343df86d5a885"}]}}, "opendev%2Fsystem-config~master~Iaadcac38f7bbca253c24b48b0eb05ad809a5677f": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5263, "name": "Jeremy Stanley", "display_name": "fungi", "email": "fungi@yuggoth.org", "username": "fungi", "status": "missing, presumed fed"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}], "comments": {"modules/openstack_project/manifests/mirror_update.pp": [{"author": {"_account_id": 4146, "name": "Clark Boylan", "email": "cboylan@sapwetik.org", "username": "cboylan"}, "change_message_id": "39b4abb8930bbccb0a62c9f7843b871bce9c79e9", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_99415965", "line": 475, "range": {"start_line": 475, "start_character": 35, "end_line": 475, "end_character": 36}, "updated": "2020-02-11 17:25:26.000000000", "message": "This should be an = or a space", "commit_id": "190e34808b3a00556a2daa48864796fe215d6bd5"}]}}, "openstack%2Fcinder~master~Ib7c66cc6efe58a2f0aa8223a757b917fbdf3d1ac": {"owner_id": 30407, "owner_name": "haixin", "owner_email": "haix09@chinatelecom.cn", "labels": [{"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 1736, "name": "Ivan Kolodyazhny", "email": "e0ne@e0ne.info", "username": "e0ne"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 31305, "name": "zhubingyang", "email": "yang77498441@126.com"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30407, "name": "haixin", "email": "haix09@chinatelecom.cn", "username": "haixin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": -2, "date": "2019-11-19 10:15:54.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": -1, "date": "2019-11-19 16:20:27.000000000", "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 5314, "name": "Brian Rosmaita", "email": "rosmaita.fossdev@gmail.com", "username": "brian-rosmaita"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 23613, "name": "NEC Cinder CI", "email": "nec-cinder-ci@istorage.jp.nec.com", "username": "nec-cinder-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -2, "max": 2}, "_account_id": 7198, "name": "Jay Bryant", "email": "jungleboyj@electronicjungle.net", "username": "jsbryant"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 30590, "name": "SandStone Storage CI", "email": "yangziguan@szsandstone.com", "username": "yangziguan", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 26458, "name": "Brin Zhang", "email": "zhangbailin@inspur.com", "username": "zhangbailin"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 27190, "name": "Leopard Ma", "email": "mabao@inspur.com", "username": "LeopardMa"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12016, "name": "DellEMC PowerMAX CI", "email": "emc.vmax.ci@emc.com", "username": "emc-vmax-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "permitted_voting_range": {"min": -1, "max": 1}, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}], "comments": {}}, "opendev%2Fsystem-config~master~Ifa3b4d59f8d0fc23a4492e50348bab30766d5779": {"owner_id": 7118, "owner_name": "Ian Wienand", "owner_email": "iwienand@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:19:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, {"value": 0, "_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}], "comments": {"playbooks/roles/afsmon/tasks/main.yaml": [{"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "e5db6ac2f6df29e713b7d71ef4b8d03f3c4e2622", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_a7142b51", "line": 12, "updated": "2020-02-11 23:12:31.000000000", "message": "We're installing afsmon via pip - do we need to install these? pip is going to pull them in anyway.", "commit_id": "2f05e9395a8e70e820bcec64b887e03f9392037c"}, {"author": {"_account_id": 2, "name": "Monty Taylor", "email": "mordred@inaugust.com", "username": "mordred"}, "change_message_id": "1deb9e87d5026e46a9e39687f60c12cbe4db0c37", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_8a525610", "line": 12, "in_reply_to": "3fa7e38b_27083b2c", "updated": "2020-02-11 23:20:40.000000000", "message": "Ok - I verified that this works in a local ubuntu container with latest pip.\n\nIn that case, we should add python3-babel to the list.", "commit_id": "2f05e9395a8e70e820bcec64b887e03f9392037c"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "80cda23f576dcf5d596be6892a9b8ece42e8390e", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_6a9b5ac6", "line": 12, "in_reply_to": "3fa7e38b_8a525610", "updated": "2020-02-11 23:23:49.000000000", "message": "Done", "commit_id": "2f05e9395a8e70e820bcec64b887e03f9392037c"}, {"author": {"_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}, "change_message_id": "f140c68b13f29fb740af3eba20862c813c824121", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_27083b2c", "line": 12, "in_reply_to": "3fa7e38b_a7142b51", "updated": "2020-02-11 23:13:49.000000000", "message": "i was hoping pip, outside a virtualenv, would notice them and not install anything else.  python3-statsd is also required for the new release script, prettytable seems pretty common too", "commit_id": "2f05e9395a8e70e820bcec64b887e03f9392037c"}]}}, "openstack%2Frpm-packaging~master~I353ffad3e25a00ae3add2bd288ab40a50b469a3b": {"owner_id": 26571, "owner_name": "Chang Liu", "owner_email": "liuchang77@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:36:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 00:04:59.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Frpm-packaging~master~Ia62e5ceb12d5a152684f0934ac1630ea81912a7e": {"owner_id": 30298, "owner_name": "liuwei", "owner_email": "liuw147@chinaunicom.cn", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 04:36:40.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 7102, "name": "Thomas Bechtold", "email": "thomas.bechtold@canonical.com", "username": "toabctl"}, {"value": 0, "_account_id": 19648, "name": "SUSE Cloud CI", "email": "dmueller+suse-cloud-ci@suse.de", "username": "suse-ci", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 00:02:13.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 6593, "name": "Dirk Mueller", "email": "dirk@dmllr.de", "username": "dmllr"}], "comments": {}}, "openstack%2Fkolla-ansible~master~I9d579b4317a8acbc3e51bbd9c0236846b75d598b": {"owner_id": 14826, "owner_name": "Mark Goddard", "owner_email": "mark@stackhpc.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-11 17:21:49.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 30491, "name": "Rados\u0142aw Piliszek", "email": "radoslaw.piliszek@gmail.com", "username": "yoctozepto"}, {"value": 2, "date": "2020-02-12 03:44:52.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 19779, "name": "Chason Chan", "display_name": "chenxing", "email": "chason.chan@foxmail.com", "username": "chenxing"}], "comments": {}}, "openstack%2Fceilometer~stable%2Ftrain~I56e74d1cb30310db104c850e74b2d422d3aeb966": {"owner_id": 29525, "owner_name": "Artem Vasilyev", "owner_email": "artem.v.vasilyev@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 02:31:55.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 14107, "name": "zhurong", "email": "aaronzhu1121@gmail.com", "username": "zhurong"}], "comments": {}}, "openstack%2Fcinder~master~I462cecc3152bf838b7d42d5abc3ca31610567e5e": {"owner_id": 25820, "owner_name": "Marc", "owner_email": "mb.methot@gmail.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 1, "date": "2020-01-31 18:32:13.000000000", "permitted_voting_range": {"min": 1, "max": 2}, "_account_id": 20813, "name": "Sofia Enriquez", "email": "lsofia.enriquez@gmail.com", "username": "enriquetaso"}, {"value": 0, "_account_id": 25678, "name": "DellEMC SC CI", "email": "dell.emc.sc.series.ci@emc.com", "username": "dell.emc.sc.series.ci"}, {"value": 0, "_account_id": 18120, "name": "Fujitsu ETERNUS CI", "email": "fj-lsoft-eternusci@dl.jp.fujitsu.com", "username": "Fujitsu_ETERNUS_CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29705, "name": "Intel RSD CI", "email": "rsd_ci@intel.com", "username": "intel_rsd_ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9732, "name": "Mellanox CI", "email": "mlnx-openstack-ci@dev.mellanox.co.il", "username": "mellanox", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 15941, "name": "DellEMC PowerFlex CI", "email": "emc.scaleio.ci@emc.com", "username": "emc-scaleio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 10118, "name": "IBM PowerKVM CI", "email": "kvmpower@linux.vnet.ibm.com", "username": "powerkvm", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-01-24 12:10:42.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, {"value": 0, "_account_id": 12033, "name": "DellEMC XtremIO CI", "email": "emc.xio.ci@emc.com", "username": "emc-xio-ci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 28801, "name": "Cisco Cinder CI", "email": "cisco-cinder-ci@cisco.com", "username": "cisco-cinder-ci"}, {"value": 0, "_account_id": 25820, "name": "Marc", "email": "mb.methot@gmail.com", "username": "mmethot"}, {"value": 0, "_account_id": 19933, "name": "ZadaraStorage VPSA CI", "display_name": "ZadaraStorage VPSA CI", "email": "openstack-dev@zadarastorage.com", "username": "zadara", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26077, "name": "NetApp SolidFire CI", "email": "ng-openstack-solidfire-ci@netapp.com", "username": "netapp-solidfire-ci"}, {"value": 0, "_account_id": 24921, "name": "Hedvig CI", "email": "openstack@hedviginc.com", "username": "hedvig_ci"}, {"value": 0, "_account_id": 15386, "name": "Nexenta CI", "email": "openstackci@nexenta.com", "username": "nexentaci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 7130, "name": "David Hill", "email": "davidchill@hotmail.com", "username": "dhill"}, {"value": 0, "_account_id": 25243, "name": "NetApp CI", "username": "NetApp-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 29716, "name": "LINBIT LINSTOR CI", "email": "linbit_ci@linbit.com", "username": "LINBIT_LINSTOR_CI"}, {"value": 0, "_account_id": 15831, "name": "Infortrend CI", "email": "ryan.chiang@infortrend.com", "username": "InfortrendCI"}, {"value": 0, "_account_id": 12369, "name": "Pure Storage CI", "username": "purestorage-cinder-ci", "inactive": true, "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 24236, "name": "INSPUR CI", "email": "inspur.ci@inspur.com", "username": "INSPUR-CI", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 26537, "name": "Cloudbase Cinder SMB3 CI", "email": "cinder-smb3-ci@cloudbasesolutions.com", "username": "cinder_smb3_ci"}, {"value": 2, "date": "2020-02-05 17:25:04.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, {"value": 0, "_account_id": 21863, "name": "Infinidat CI", "email": "jenkins@infinidat.com", "username": "infinidat-openstack"}, {"value": 0, "_account_id": 21884, "name": "DellEMC Unity CI", "email": "emc.unity.ci@emc.com", "username": "emc-unity-ci"}, {"value": 0, "_account_id": 12988, "name": "Peter Penchev", "email": "openstack-dev@storpool.com", "username": "ppenchev"}, {"value": 0, "_account_id": 15670, "name": "StorPool OpenStack CI", "email": "openstack-ci@storpool.com", "username": "storpoolci", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 9008, "name": "VMware NSX CI", "username": "vmwareminesweeper", "tags": ["SERVICE_USER"]}], "comments": {"cinder/image/image_utils.py": [{"author": {"_account_id": 4523, "name": "Eric Harney", "email": "eharney@redhat.com", "username": "eharney"}, "change_message_id": "f4279303ab32b99e2516423e759cb3983dcf3f09", "unresolved": false, "patch_set": 1, "id": "3fa7e38b_c005bb69", "line": 66, "updated": "2020-01-21 20:18:12.000000000", "message": "This is a limit and not a timeout -- should call it \"image_conversion_cpu_limit\" instead.\n\nI'd suggest setting the default to 60 since this is supposed to be a measure to prevent denial-of-service scenarios etc.  (And 30 seems to still not be sufficient for large images on NFS.)\n\n\nDoes setting this to 0 disable the limit?  If so, we should mention that here and set min=0 to prevent use of negative integers.  If not, we should probably set min=1 or so.", "commit_id": "f65297dae531c867b26b7d7307270d22ea03506b"}], "releasenotes/notes/add-configurable-img-conversion-param-1e7b545ae816dfe8.yaml": [{"author": {"_account_id": 11904, "name": "Sean McGinnis", "email": "sean.mcginnis@gmail.com", "username": "SeanM"}, "change_message_id": "0d33263d054306b45e1ce823a3e7b9ecfc844b7b", "unresolved": false, "patch_set": 3, "id": "3fa7e38b_0c06ad1c", "line": 5, "range": {"start_line": 5, "start_character": 42, "end_line": 5, "end_character": 46}, "updated": "2020-01-21 22:34:43.000000000", "message": "Missing space between the config name and \"as\".\n\nSince that should be updated, a couple more minor nits:\n\nI would started with \"Added\" rather than \"Adding\". Release notes are read by someone after a new release is out and they want to see what upgrading will provide. In that context, it makes sense for this to be a past-tense statement.\n\nThe last part of the sentence may be a little too low level for consumers of these release notes too. Maybe something like \"This adds configurability to the image conversion process to prevent the process from timing out when converting larger images\" - something along those lines.", "commit_id": "a5db8a4124a88fe31d9fd3f8d44206b05a94e5f1"}]}}, "x%2Fbrowbeat~master~I3ac6c08d6e9ba462fe924498241f5b300d8cec15": {"owner_id": 16845, "owner_name": "Sindhur", "owner_email": "smalleni@redhat.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 0, "_account_id": 23181, "name": "RDO Third Party CI", "email": "dmsimard+rdothirdparty@redhat.com", "username": "rdothirdparty", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-06 12:54:41.000000000", "_account_id": 24, "name": "Chuck Short", "email": "charles.short@windriver.com", "username": "zulcss"}], "comments": {}}, "openstack%2Fmolteniron~master~I8b6d7f69bb465150115cfc18a047e5775f1ff567": {"owner_id": 6547, "owner_name": "Andreas Jaeger", "owner_email": "jaegerandi@gmail.com", "labels": [{"value": 1, "date": "2020-02-11 22:18:36.000000000", "permitted_voting_range": {"min": 1, "max": 1}, "_account_id": 8556, "name": "Ghanshyam", "display_name": "Ghanshyam Mann", "email": "gmann@ghanshyammann.com", "username": "ghanshyam"}, {"value": 2, "date": "2020-02-12 03:04:41.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 24828, "name": "Kaifeng Wang", "email": "kaifeng.w@gmail.com", "username": "wangkf"}, {"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-05 15:06:21.000000000", "permitted_voting_range": {"min": 2, "max": 2}, "_account_id": 23851, "name": "Riccardo Pittau", "email": "elfosardo@gmail.com", "username": "elfosardo"}], "comments": {}}, "opendev%2Fpuppet-askbot~master~I61acd33ded961dc1a861f729f9c2486970304ce5": {"owner_id": 2, "owner_name": "Monty Taylor", "owner_email": "mordred@inaugust.com", "labels": [{"value": 0, "_account_id": 22348, "name": "Zuul", "username": "zuul", "tags": ["SERVICE_USER"]}, {"value": 2, "date": "2020-02-12 03:15:58.000000000", "_account_id": 7118, "name": "Ian Wienand", "email": "iwienand@redhat.com", "username": "iwienand"}], "comments": {}}}